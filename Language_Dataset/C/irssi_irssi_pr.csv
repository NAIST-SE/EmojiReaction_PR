irssi/irssi,https://github.com/irssi/irssi,434,2016-03-09T21:26:02Z,2016-03-11T17:20:03Z,2016-03-11T20:29:53Z,CLOSED,False,8,1,1,https://github.com/vague666,Check for tag/ before tag/#channel for network activity_hide_targets,2,[],https://github.com/irssi/irssi/pull/434,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/434,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,434,2016-03-09T21:26:02Z,2016-03-11T17:20:03Z,2016-03-11T20:29:53Z,CLOSED,False,8,1,1,https://github.com/vague666,Check for tag/ before tag/#channel for network activity_hide_targets,2,[],https://github.com/irssi/irssi/pull/434,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/434#issuecomment-194523514,,"LemonBoy asked for commentary: this lets you create a network-wide mask, instead of having to specify Freenode/#chan1 Freenode/#chan2 etc for /set activity_hide_targets Freenode/ is enough to hide activity in all Freenode targets",True,{}
irssi/irssi,https://github.com/irssi/irssi,434,2016-03-09T21:26:02Z,2016-03-11T17:20:03Z,2016-03-11T20:29:53Z,CLOSED,False,8,1,1,https://github.com/vague666,Check for tag/ before tag/#channel for network activity_hide_targets,2,[],https://github.com/irssi/irssi/pull/434,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/434#issuecomment-194525335,,Please add a small comment in the code too,True,{}
irssi/irssi,https://github.com/irssi/irssi,436,2016-03-11T10:20:36Z,2016-03-17T20:45:25Z,2016-03-24T13:57:00Z,CLOSED,False,35,5,1,https://github.com/ailin-nemui,fix IRC ischannel function,1,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/436,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/436,fixes #435,fixes #435,True,{}
irssi/irssi,https://github.com/irssi/irssi,436,2016-03-11T10:20:36Z,2016-03-17T20:45:25Z,2016-03-24T13:57:00Z,CLOSED,False,35,5,1,https://github.com/ailin-nemui,fix IRC ischannel function,1,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/436,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/436#issuecomment-195333728,fixes #435,"I think that the problem lies in our defaults, I think the only valid sequence is [statusmsg]+[chantypes]* which is the only ordering that makes sense (at least to me) and requires the statusmsg and chantypes set to be disjoint sets.
The suggestion here is to only keep the new code that infers the statusmsg set from the wallch{ops,voices} and maybe  shorten the chantypes to a saner default of just #.
This [1] RFC from the IRCv3 WG shows that at the moment the protocol doesn't guarantee the disjointness of the sets, hence we'd have to check it ourselves (and kill any ircd doing so).
[1] ircv3/ircv3-specifications#2",True,{}
irssi/irssi,https://github.com/irssi/irssi,437,2016-03-11T17:20:18Z,2016-03-21T10:21:01Z,2019-06-26T23:14:52Z,MERGED,True,12,3,2,https://github.com/vague666,Use glob matching for activity_hide_targets,2,['auto-merge'],https://github.com/irssi/irssi/pull/437,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/437,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,437,2016-03-11T17:20:18Z,2016-03-21T10:21:01Z,2019-06-26T23:14:52Z,MERGED,True,12,3,2,https://github.com/vague666,Use glob matching for activity_hide_targets,2,['auto-merge'],https://github.com/irssi/irssi/pull/437,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/437#issuecomment-195727376,,This deserves a mention in the docs.,True,{}
irssi/irssi,https://github.com/irssi/irssi,437,2016-03-11T17:20:18Z,2016-03-21T10:21:01Z,2019-06-26T23:14:52Z,MERGED,True,12,3,2,https://github.com/vague666,Use glob matching for activity_hide_targets,2,['auto-merge'],https://github.com/irssi/irssi/pull/437,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/437#issuecomment-198081634,,"From RFC 2812
Channels names are strings (beginning with a '&', '#', '+' or '!'
   character) of length up to fifty (50) characters.  Apart from the
   requirement that the first character is either '&', '#', '+' or '!',
   the only restriction on a channel name is that it SHALL NOT contain
   any spaces (' '), a control G (^G or ASCII 7), a comma (',').  Space
   is used as parameter separator and command is used as a list item
   separator by the protocol).  A colon (':') can also be used as a
   delimiter for the channel mask.  Channel names are case insensitive.

and Glib's documentation
Note that in contrast to glob(), the '/' character can be matched by the wildcards, there are no '[...]' character ranges and '*' and '?' can not be escaped to include them literally in a pattern. 

With the attached patch you have no way to reference a channel containing a * or a ?.",True,{}
irssi/irssi,https://github.com/irssi/irssi,437,2016-03-11T17:20:18Z,2016-03-21T10:21:01Z,2019-06-26T23:14:52Z,MERGED,True,12,3,2,https://github.com/vague666,Use glob matching for activity_hide_targets,2,['auto-merge'],https://github.com/irssi/irssi/pull/437,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/437#issuecomment-198081869,,it may have unfortunate consequences if you want to ignore activity in the channel #*,True,{}
irssi/irssi,https://github.com/irssi/irssi,437,2016-03-11T17:20:18Z,2016-03-21T10:21:01Z,2019-06-26T23:14:52Z,MERGED,True,12,3,2,https://github.com/vague666,Use glob matching for activity_hide_targets,2,['auto-merge'],https://github.com/irssi/irssi/pull/437,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/437#issuecomment-198083013,,"Ah, thanks, yes, we don't want that, maybe we can just skip the matching if
ignore targets is a * or tag/*
/Jari
On Mar 17, 2016 10:04 PM, ""ailin-nemui"" notifications@github.com wrote:

it may have unfortunate consequences if you want to ignore activity in the
channel #*
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#437 (comment)",True,{}
irssi/irssi,https://github.com/irssi/irssi,437,2016-03-11T17:20:18Z,2016-03-21T10:21:01Z,2019-06-26T23:14:52Z,MERGED,True,12,3,2,https://github.com/vague666,Use glob matching for activity_hide_targets,2,['auto-merge'],https://github.com/irssi/irssi/pull/437,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/437#issuecomment-199025832,,"I think this is fine now, @LemonBoy ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,438,2016-03-11T17:56:32Z,2016-03-17T15:14:34Z,2016-03-17T15:14:35Z,MERGED,True,16,0,1,https://github.com/dequis,Remove sasl timeout source when the server disconnects,1,"['bug', 'memory', 'auto-merge']",https://github.com/irssi/irssi/pull/438,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/438,,,True,{'HOORAY': ['https://github.com/LemonBoy']}
irssi/irssi,https://github.com/irssi/irssi,438,2016-03-11T17:56:32Z,2016-03-17T15:14:34Z,2016-03-17T15:14:35Z,MERGED,True,16,0,1,https://github.com/dequis,Remove sasl timeout source when the server disconnects,1,"['bug', 'memory', 'auto-merge']",https://github.com/irssi/irssi/pull/438,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/438#issuecomment-195726307,,LGTM,True,{}
irssi/irssi,https://github.com/irssi/irssi,439,2016-03-13T20:43:32Z,2016-03-17T21:07:57Z,2019-06-26T23:15:25Z,MERGED,True,5,0,1,https://github.com/horgh,Clear error queue before SSL I/O operations,2,['auto-merge'],https://github.com/irssi/irssi/pull/439,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/439,"We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.","We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,439,2016-03-13T20:43:32Z,2016-03-17T21:07:57Z,2019-06-26T23:15:25Z,MERGED,True,5,0,1,https://github.com/horgh,Clear error queue before SSL I/O operations,2,['auto-merge'],https://github.com/irssi/irssi/pull/439,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/439#issuecomment-196050640,"We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.","Very nice catch, it seems you missed one spot at irssi_ssl_get_iochannel though.",True,{}
irssi/irssi,https://github.com/irssi/irssi,439,2016-03-13T20:43:32Z,2016-03-17T21:07:57Z,2019-06-26T23:15:25Z,MERGED,True,5,0,1,https://github.com/horgh,Clear error queue before SSL I/O operations,2,['auto-merge'],https://github.com/irssi/irssi/pull/439,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/439#issuecomment-196053008,"We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.",+1 I think that also affects glowing bear which disconnects servers even when the browser fetched the https cert of the web socket endp,True,{}
irssi/irssi,https://github.com/irssi/irssi,439,2016-03-13T20:43:32Z,2016-03-17T21:07:57Z,2019-06-26T23:15:25Z,MERGED,True,5,0,1,https://github.com/horgh,Clear error queue before SSL I/O operations,2,['auto-merge'],https://github.com/irssi/irssi/pull/439,https://github.com/horgh,4,https://github.com/irssi/irssi/pull/439#issuecomment-196055690,"We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.","Thank you for looking at this and for the help!
Regarding having this in irssi_ssl_get_iochannel(): Where in that function do you think it would be best to do this? Perhaps before the first if statement? (if (!ssl_inited ...). I don't see one of the function calls mentioned in the documentation for SSL_get_error() in there so I am not sure where it should be.",True,{}
irssi/irssi,https://github.com/irssi/irssi,439,2016-03-13T20:43:32Z,2016-03-17T21:07:57Z,2019-06-26T23:15:25Z,MERGED,True,5,0,1,https://github.com/horgh,Clear error queue before SSL I/O operations,2,['auto-merge'],https://github.com/irssi/irssi/pull/439,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/439#issuecomment-196055888,"We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.",It's ERR_get_error which should behave in the same way if I understood the documentation correctly.,True,{}
irssi/irssi,https://github.com/irssi/irssi,439,2016-03-13T20:43:32Z,2016-03-17T21:07:57Z,2019-06-26T23:15:25Z,MERGED,True,5,0,1,https://github.com/horgh,Clear error queue before SSL I/O operations,2,['auto-merge'],https://github.com/irssi/irssi/pull/439,https://github.com/horgh,6,https://github.com/irssi/irssi/pull/439#issuecomment-196062222,"We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.","Ah... True. That function takes the first error from the same queue. The earliest apparently!
So before relying on it we should make sure that queue is cleared out.
I found there are several function calls inside irssi_ssl_get_iochannel that can raise errors to the queue. SSL_CTX_new(), SSL_set_fd(), and SSL_CTX_use_certificate_file() being some of them.
I'll add a clear error call in two spots: Before the first function that can add to this queue (SSL_CTX_new()) and before the two calls where we actually use ERR_get_error()). Do you think that is sufficient?
Possibly we could have it before each function that can add to the queue, but that seems like it will clutter the code. Likely we could rely on having cleared it earlier in the function, and deal with errors as they arise.",True,{}
irssi/irssi,https://github.com/irssi/irssi,439,2016-03-13T20:43:32Z,2016-03-17T21:07:57Z,2019-06-26T23:15:25Z,MERGED,True,5,0,1,https://github.com/horgh,Clear error queue before SSL I/O operations,2,['auto-merge'],https://github.com/irssi/irssi/pull/439,https://github.com/LemonBoy,7,https://github.com/irssi/irssi/pull/439#issuecomment-196294900,"We need to clear the SSL error queue before performing SSL I/O operations. Otherwise we can see errors that are not related to the operation we error check. SSL_get_error() inspects the thread's error queue.
I read about this here: https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html where it says ""The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.""
How I came across this: I have a module (irssi-tcl) that itself initiates SSL connections through scripts (HTTP in the case I found). For some URLs I found that Irssi was complaining about read errors after SSL_read() and then dropping all the active SSL IRC connections. I would see ""Irssi: warning SSL read error: No such file or directory"". I found the condition being hit in irssi_ssl_read() was the 'SSL_ERROR_SYSCALL' one.
Unfortunately it does not always happen so it is difficult to reliably reproduce. However after applying this change I have not been able to cause it.","We actually care about the code paths where we show the errors, beside the ones that could make the IO actions fail and you already covered those. The remaining spots are the two ERR_get_error callsites which the latest commit covers too, so it looks good to me as-is.",True,{}
irssi/irssi,https://github.com/irssi/irssi,440,2016-03-13T21:07:24Z,2016-03-14T21:37:06Z,2016-03-14T21:37:06Z,MERGED,True,2,2,1,https://github.com/vague666,Return -1 from null-test to comply with the rest of strarray_find,1,['auto-merge'],https://github.com/irssi/irssi/pull/440,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/440,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,441,2016-03-15T01:34:54Z,2016-03-16T11:05:44Z,2016-03-16T11:05:44Z,MERGED,True,2,2,1,None,Replace spaces with tabs,1,[],https://github.com/irssi/irssi/pull/441,None,1,https://github.com/irssi/irssi/pull/441,"Fix a new gcc6 warning.
  CC       chat-commands.o
chat-commands.c: In function ‘get_server_connect’:
chat-commands.c:123:2: warning: statement is indented as if it were guarded by... [-Wmisleading-indentation]
  if (g_hash_table_lookup(optlist, ""noproxy"") != NULL)
  ^~
chat-commands.c:120:5: note: ...this ‘if’ clause, but it is not
     if (g_hash_table_lookup(optlist, ""noautosendcmd"") != NULL)
     ^~
  CC       chat-protocols.o","Fix a new gcc6 warning.
  CC       chat-commands.o
chat-commands.c: In function ‘get_server_connect’:
chat-commands.c:123:2: warning: statement is indented as if it were guarded by... [-Wmisleading-indentation]
  if (g_hash_table_lookup(optlist, ""noproxy"") != NULL)
  ^~
chat-commands.c:120:5: note: ...this ‘if’ clause, but it is not
     if (g_hash_table_lookup(optlist, ""noautosendcmd"") != NULL)
     ^~
  CC       chat-protocols.o",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/442,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.",True,{'CONFUSED': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/442#issuecomment-198334618,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","This fix still is buggy, I cannot part channels on IRCnet anymore",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/442#issuecomment-198477637,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.",More info please ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/442#issuecomment-198525970,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","Did /leave with no parameters
(gdb) bt
#0  ischannel_func (server=<optimized out>, data=0x55d2186d7db0 """") at irc-servers.c:82
#1  0x000055d217313cd4 in get_optional_channel (require_name=0, data=0x7fff76f88320, active_item=0x55d2186d79c0) at commands.c:681
#2  cmd_get_params (data=data@entry=0x55d2173478f4 """", free_me=free_me@entry=0x7fff76f883d0, count=count@entry=73730) at commands.c:740
#3  0x000055d2172f1c8f in cmd_part (data=0x55d2173478f4 """", server=0x55d2186d07a0, item=0x55d2186d79c0) at irc-commands.c:161
Note the empty data parameter.
681             } else if (!server_ischannel(active_item->server, channel)) {
682                     /* we don't have channel parameter - use active channel */
683                     ret = window_item_get_target(active_item);
684             } else {
685                     /* Find the channel first and use it's name if found.
That server_ischannel function is supposed to return false, but it returns true
(gdb) p chantypes
$9 = 0x55d2186c85f0 ""#&!+""
(gdb) p data
$10 = 0x55d2186d7db0 """"
(gdb) p strchr(chantypes, *data)
$11 = 409765364
(gdb) p strchr(chantypes, *data) - (int) chantypes
$12 = 4
Nei's PR wasn't affected by this because
+   /* empty string is no channel */
+   if (*data == '\0')
+       return FALSE;
So just do that, imo.",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/442#issuecomment-198681984,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","your function will accept ""@"" as being a valid channel if the memory allocated after the string happens to be any sequence of \0, @ or # (undefined behaviour due to out-of-bounds read)",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/442#issuecomment-198682551,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","Should be fine now, I admit I didn't know that strchr(3) considers the trailing NUL as part of the string, TIL",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/442#issuecomment-198683299,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","sorry to break you the news but you're still in UB with the strchr loop, since you may be reaching end of string any time so you need to check this condition on every loop. Or reconsider strspn?",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/LemonBoy,8,https://github.com/irssi/irssi/pull/442#issuecomment-198685529,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","I should pay more attention, no ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/442#issuecomment-198687623,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","@ahf and @dequis might want to, they didn't feel anything wrong with your initial PR",True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/LemonBoy,10,https://github.com/irssi/irssi/pull/442#issuecomment-198692211,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.",Shots fired 🎆,True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/dequis,11,https://github.com/irssi/irssi/pull/442#issuecomment-198715759,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.",:( I had no idea strchr behaved like that,True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/442#issuecomment-198795489,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.",Honestly? This whole odyssey makes me prefer my own suggestion even more. I'm biassed though,True,{}
irssi/irssi,https://github.com/irssi/irssi,442,2016-03-17T21:27:34Z,2016-03-20T21:06:41Z,2016-07-14T13:24:27Z,MERGED,True,12,6,1,https://github.com/LemonBoy,Do not assume any default value for statusmsg.,2,['auto-merge'],https://github.com/irssi/irssi/pull/442,https://github.com/dequis,13,https://github.com/irssi/irssi/pull/442#issuecomment-198817073,"If the server didn't send it then just skip the check, the old value it
defaulted to was possibly overlapping with the CHANTYPES leading to an
incorrect behaviour. Fixes #435.","""odyssey""? Am I missing something here? I don't see it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,443,2016-03-18T19:24:21Z,2016-03-22T22:00:01Z,2019-06-26T23:14:44Z,MERGED,True,16,5,7,https://github.com/LemonBoy,Throw an error when a chatnet has no available url,3,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/443,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/443,"I spent too much time thinking IRCNet servers were shit but it turns out I had no server block for it and irssi kept trying to connect to my ISP page-not-found redirect.
Hilarious 🚀","I spent too much time thinking IRCNet servers were shit but it turns out I had no server block for it and irssi kept trying to connect to my ISP page-not-found redirect.
Hilarious 🚀",True,{}
irssi/irssi,https://github.com/irssi/irssi,443,2016-03-18T19:24:21Z,2016-03-22T22:00:01Z,2019-06-26T23:14:44Z,MERGED,True,16,5,7,https://github.com/LemonBoy,Throw an error when a chatnet has no available url,3,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/443,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/443#issuecomment-198737543,"I spent too much time thinking IRCNet servers were shit but it turns out I had no server block for it and irssi kept trying to connect to my ISP page-not-found redirect.
Hilarious 🚀",We need to raise abi version due to formats addition,True,{}
irssi/irssi,https://github.com/irssi/irssi,443,2016-03-18T19:24:21Z,2016-03-22T22:00:01Z,2019-06-26T23:14:44Z,MERGED,True,16,5,7,https://github.com/LemonBoy,Throw an error when a chatnet has no available url,3,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/443,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/443#issuecomment-199023281,"I spent too much time thinking IRCNet servers were shit but it turns out I had no server block for it and irssi kept trying to connect to my ISP page-not-found redirect.
Hilarious 🚀",lgtm,True,{}
irssi/irssi,https://github.com/irssi/irssi,443,2016-03-18T19:24:21Z,2016-03-22T22:00:01Z,2019-06-26T23:14:44Z,MERGED,True,16,5,7,https://github.com/LemonBoy,Throw an error when a chatnet has no available url,3,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/443,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/443#issuecomment-199851362,"I spent too much time thinking IRCNet servers were shit but it turns out I had no server block for it and irssi kept trying to connect to my ISP page-not-found redirect.
Hilarious 🚀",PR updated and ready to 🚀,True,{}
irssi/irssi,https://github.com/irssi/irssi,444,2016-03-20T20:47:56Z,2016-03-20T21:00:43Z,2016-07-14T13:24:27Z,MERGED,True,11,11,1,https://github.com/LemonBoy,Use 0 as a sentinel value for sasl_timeout,1,['auto-merge'],https://github.com/irssi/irssi/pull/444,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/444,"If sasl_timeout is never initialized with a valid timeout id then
calling /disconnect on the server calls g_source_remove() with 0 as tag,
causing an harmless error message to be printed.
Beside that, the sasl_timeout field is defined as a unsigned int.
We can use 0 as sentiel since g_timeout_add returns tags that are always
greater than zero.","If sasl_timeout is never initialized with a valid timeout id then
calling /disconnect on the server calls g_source_remove() with 0 as tag,
causing an harmless error message to be printed.
Beside that, the sasl_timeout field is defined as a unsigned int.
We can use 0 as sentiel since g_timeout_add returns tags that are always
greater than zero.",True,{}
irssi/irssi,https://github.com/irssi/irssi,444,2016-03-20T20:47:56Z,2016-03-20T21:00:43Z,2016-07-14T13:24:27Z,MERGED,True,11,11,1,https://github.com/LemonBoy,Use 0 as a sentinel value for sasl_timeout,1,['auto-merge'],https://github.com/irssi/irssi/pull/444,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/444#issuecomment-199021052,"If sasl_timeout is never initialized with a valid timeout id then
calling /disconnect on the server calls g_source_remove() with 0 as tag,
causing an harmless error message to be printed.
Beside that, the sasl_timeout field is defined as a unsigned int.
We can use 0 as sentiel since g_timeout_add returns tags that are always
greater than zero.",when is the timeout not initialised?,True,{}
irssi/irssi,https://github.com/irssi/irssi,444,2016-03-20T20:47:56Z,2016-03-20T21:00:43Z,2016-07-14T13:24:27Z,MERGED,True,11,11,1,https://github.com/LemonBoy,Use 0 as a sentinel value for sasl_timeout,1,['auto-merge'],https://github.com/irssi/irssi/pull/444,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/444#issuecomment-199021623,"If sasl_timeout is never initialized with a valid timeout id then
calling /disconnect on the server calls g_source_remove() with 0 as tag,
causing an harmless error message to be printed.
Beside that, the sasl_timeout field is defined as a unsigned int.
We can use 0 as sentiel since g_timeout_add returns tags that are always
greater than zero.",When the server doesn't support SASL at all (eg Efnet),True,{}
irssi/irssi,https://github.com/irssi/irssi,446,2016-03-20T21:38:53Z,2016-03-22T14:23:37Z,2016-03-24T13:56:57Z,MERGED,True,4,4,3,https://github.com/ailin-nemui,strip less whitespace from commands,1,['auto-merge'],https://github.com/irssi/irssi/pull/446,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/446,fixes #445,fixes #445,True,{}
irssi/irssi,https://github.com/irssi/irssi,446,2016-03-20T21:38:53Z,2016-03-22T14:23:37Z,2016-03-24T13:56:57Z,MERGED,True,4,4,3,https://github.com/ailin-nemui,strip less whitespace from commands,1,['auto-merge'],https://github.com/irssi/irssi/pull/446,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/446#issuecomment-199837341,fixes #445,(I'll merge this in a hurry to get 0.8.18a on track),True,{}
irssi/irssi,https://github.com/irssi/irssi,447,2016-03-20T21:42:58Z,2016-03-22T14:25:13Z,2016-03-24T13:56:55Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,correct quoting in /help dcc,1,['auto-merge'],https://github.com/irssi/irssi/pull/447,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/447,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,447,2016-03-20T21:42:58Z,2016-03-22T14:25:13Z,2016-03-24T13:56:55Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,correct quoting in /help dcc,1,['auto-merge'],https://github.com/irssi/irssi/pull/447,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/447#issuecomment-199837940,,"I will merge this for 0.8.18a, the help should be re-updated in #453",True,{}
irssi/irssi,https://github.com/irssi/irssi,448,2016-03-21T06:01:31Z,2016-03-22T19:25:22Z,2016-03-22T19:25:23Z,CLOSED,False,0,6,1,https://github.com/dequis,terminfo-core: Don't send smkx/rmkx,1,[],https://github.com/irssi/irssi/pull/448,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/448,"Partially reverts b5b73cb.
Partially, because the commit is mostly unrelated whitespace changes, but also because I left the TI_smkx and TI_rmkx caps in there, to reconsider later.

Fixes #430.
As the branch name says, this is the lazy solution to the problem. We're a bit tight on time and the not-lazy one might break more than it fixes.
(Also, I personally use st and don't even have that kind of backspace/del behavior. I must have ""accidentally"" fixed it by editing the config file)
If someone cares we should make this a setting, but that's after the bugfix release.","Partially reverts b5b73cb.
Partially, because the commit is mostly unrelated whitespace changes, but also because I left the TI_smkx and TI_rmkx caps in there, to reconsider later.

Fixes #430.
As the branch name says, this is the lazy solution to the problem. We're a bit tight on time and the not-lazy one might break more than it fixes.
(Also, I personally use st and don't even have that kind of backspace/del behavior. I must have ""accidentally"" fixed it by editing the config file)
If someone cares we should make this a setting, but that's after the bugfix release.",True,{}
irssi/irssi,https://github.com/irssi/irssi,448,2016-03-21T06:01:31Z,2016-03-22T19:25:22Z,2016-03-22T19:25:23Z,CLOSED,False,0,6,1,https://github.com/dequis,terminfo-core: Don't send smkx/rmkx,1,[],https://github.com/irssi/irssi/pull/448,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/448#issuecomment-199974425,"Partially reverts b5b73cb.
Partially, because the commit is mostly unrelated whitespace changes, but also because I left the TI_smkx and TI_rmkx caps in there, to reconsider later.

Fixes #430.
As the branch name says, this is the lazy solution to the problem. We're a bit tight on time and the not-lazy one might break more than it fixes.
(Also, I personally use st and don't even have that kind of backspace/del behavior. I must have ""accidentally"" fixed it by editing the config file)
If someone cares we should make this a setting, but that's after the bugfix release.",Closing in favor of #459,True,{}
irssi/irssi,https://github.com/irssi/irssi,451,2016-03-21T12:09:24Z,2016-03-22T16:02:28Z,2016-07-14T13:24:26Z,CLOSED,False,4,0,1,https://github.com/LemonBoy,Reset the status of the bracketed paste mode on exit,1,[],https://github.com/irssi/irssi/pull/451,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/451,Closes (?) #449,Closes (?) #449,True,{}
irssi/irssi,https://github.com/irssi/irssi,451,2016-03-21T12:09:24Z,2016-03-22T16:02:28Z,2016-07-14T13:24:26Z,CLOSED,False,4,0,1,https://github.com/LemonBoy,Reset the status of the bracketed paste mode on exit,1,[],https://github.com/irssi/irssi/pull/451,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/451#issuecomment-199244942,Closes (?) #449,we probably need to do this also on suspend,True,{}
irssi/irssi,https://github.com/irssi/irssi,451,2016-03-21T12:09:24Z,2016-03-22T16:02:28Z,2016-07-14T13:24:26Z,CLOSED,False,4,0,1,https://github.com/LemonBoy,Reset the status of the bracketed paste mode on exit,1,[],https://github.com/irssi/irssi/pull/451,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/451#issuecomment-199272834,Closes (?) #449,We don't have any way to get the user preference (afair) at suspension-time,True,{}
irssi/irssi,https://github.com/irssi/irssi,451,2016-03-21T12:09:24Z,2016-03-22T16:02:28Z,2016-07-14T13:24:26Z,CLOSED,False,4,0,1,https://github.com/LemonBoy,Reset the status of the bracketed paste mode on exit,1,[],https://github.com/irssi/irssi/pull/451,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/451#issuecomment-199282887,Closes (?) #449,we need to keep track of it in the terminal file (static variable). That'll also save us from sending the escape sequence more often than required,True,{}
irssi/irssi,https://github.com/irssi/irssi,451,2016-03-21T12:09:24Z,2016-03-22T16:02:28Z,2016-07-14T13:24:26Z,CLOSED,False,4,0,1,https://github.com/LemonBoy,Reset the status of the bracketed paste mode on exit,1,[],https://github.com/irssi/irssi/pull/451,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/451#issuecomment-199283229,Closes (?) #449,(the same approach will be used for toggling the kx bit in the future),True,{}
irssi/irssi,https://github.com/irssi/irssi,452,2016-03-21T13:21:43Z,2016-03-22T22:05:27Z,2019-06-26T23:15:04Z,MERGED,True,0,2,1,https://github.com/LemonBoy,Don't call terminfo_cont() twice on resume,1,['needs testing'],https://github.com/irssi/irssi/pull/452,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/452,"It was only called to push the current state onto the stack since the
terminal would be reset in the SIGCONT handler.
Fixes some weirdness when using ^Z with zsh.
Fixes #450, at least for me.","It was only called to push the current state onto the stack since the
terminal would be reset in the SIGCONT handler.
Fixes some weirdness when using ^Z with zsh.
Fixes #450, at least for me.",True,{}
irssi/irssi,https://github.com/irssi/irssi,452,2016-03-21T13:21:43Z,2016-03-22T22:05:27Z,2019-06-26T23:15:04Z,MERGED,True,0,2,1,https://github.com/LemonBoy,Don't call terminfo_cont() twice on resume,1,['needs testing'],https://github.com/irssi/irssi/pull/452,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/452#issuecomment-199282403,"It was only called to push the current state onto the stack since the
terminal would be reset in the SIGCONT handler.
Fixes some weirdness when using ^Z with zsh.
Fixes #450, at least for me.","thanks for looking into it. I'm not convinced this is enough, I'll comment more later",True,{}
irssi/irssi,https://github.com/irssi/irssi,452,2016-03-21T13:21:43Z,2016-03-22T22:05:27Z,2019-06-26T23:15:04Z,MERGED,True,0,2,1,https://github.com/LemonBoy,Don't call terminfo_cont() twice on resume,1,['needs testing'],https://github.com/irssi/irssi/pull/452,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/452#issuecomment-199851444,"It was only called to push the current state onto the stack since the
terminal would be reset in the SIGCONT handler.
Fixes some weirdness when using ^Z with zsh.
Fixes #450, at least for me.","are there systems which do not properly send sigcont, thus warranting or being the reason for the original code?",True,{}
irssi/irssi,https://github.com/irssi/irssi,452,2016-03-21T13:21:43Z,2016-03-22T22:05:27Z,2019-06-26T23:15:04Z,MERGED,True,0,2,1,https://github.com/LemonBoy,Don't call terminfo_cont() twice on resume,1,['needs testing'],https://github.com/irssi/irssi/pull/452,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/452#issuecomment-199852268,"It was only called to push the current state onto the stack since the
terminal would be reset in the SIGCONT handler.
Fixes some weirdness when using ^Z with zsh.
Fixes #450, at least for me.",Not that I am aware of,True,{}
irssi/irssi,https://github.com/irssi/irssi,452,2016-03-21T13:21:43Z,2016-03-22T22:05:27Z,2019-06-26T23:15:04Z,MERGED,True,0,2,1,https://github.com/LemonBoy,Don't call terminfo_cont() twice on resume,1,['needs testing'],https://github.com/irssi/irssi/pull/452,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/452#issuecomment-200045359,"It was only called to push the current state onto the stack since the
terminal would be reset in the SIGCONT handler.
Fixes some weirdness when using ^Z with zsh.
Fixes #450, at least for me.",title/message still needs update,True,{}
irssi/irssi,https://github.com/irssi/irssi,452,2016-03-21T13:21:43Z,2016-03-22T22:05:27Z,2019-06-26T23:15:04Z,MERGED,True,0,2,1,https://github.com/LemonBoy,Don't call terminfo_cont() twice on resume,1,['needs testing'],https://github.com/irssi/irssi/pull/452,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/452#issuecomment-200050873,"It was only called to push the current state onto the stack since the
terminal would be reset in the SIGCONT handler.
Fixes some weirdness when using ^Z with zsh.
Fixes #450, at least for me.",Updated,True,{}
irssi/irssi,https://github.com/irssi/irssi,453,2016-03-21T14:23:59Z,2016-04-07T10:33:04Z,2016-04-07T10:33:04Z,MERGED,True,11,7,3,https://github.com/LemonBoy,Support quoted filenames in some /DCC commands,2,['auto-merge'],https://github.com/irssi/irssi/pull/453,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/453,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,453,2016-03-21T14:23:59Z,2016-04-07T10:33:04Z,2016-04-07T10:33:04Z,MERGED,True,11,7,3,https://github.com/LemonBoy,Support quoted filenames in some /DCC commands,2,['auto-merge'],https://github.com/irssi/irssi/pull/453,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/453#issuecomment-202893771,,did you test this yourself?,True,{}
irssi/irssi,https://github.com/irssi/irssi,453,2016-03-21T14:23:59Z,2016-04-07T10:33:04Z,2016-04-07T10:33:04Z,MERGED,True,11,7,3,https://github.com/LemonBoy,Support quoted filenames in some /DCC commands,2,['auto-merge'],https://github.com/irssi/irssi/pull/453,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/453#issuecomment-205977987,,"Tested right now, I confirm it's working as expected",True,{}
irssi/irssi,https://github.com/irssi/irssi,455,2016-03-21T17:44:21Z,2016-03-31T17:13:53Z,2019-06-26T23:14:50Z,MERGED,True,194,62,3,https://github.com/ailin-nemui,improved cutbuffer handling,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/455,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/455,This adds cutbuffer handling building on the work of toddpratt. It adds two new keys which you can bind in /bind: yank_next_cutbuffer and append_next_kill. Consecutive kills are appended to the current cutbuffer,This adds cutbuffer handling building on the work of toddpratt. It adds two new keys which you can bind in /bind: yank_next_cutbuffer and append_next_kill. Consecutive kills are appended to the current cutbuffer,True,{}
irssi/irssi,https://github.com/irssi/irssi,455,2016-03-21T17:44:21Z,2016-03-31T17:13:53Z,2019-06-26T23:14:50Z,MERGED,True,194,62,3,https://github.com/ailin-nemui,improved cutbuffer handling,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/455,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/455#issuecomment-199398027,This adds cutbuffer handling building on the work of toddpratt. It adds two new keys which you can bind in /bind: yank_next_cutbuffer and append_next_kill. Consecutive kills are appended to the current cutbuffer,"better compared with https://github.com/irssi/irssi/pull/455/files?w=1
@toddpratt",True,{}
irssi/irssi,https://github.com/irssi/irssi,456,2016-03-22T13:43:25Z,2016-03-22T21:47:42Z,2016-03-24T13:56:53Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,cutbuffer: do not unconditionally use replace when noop was requested,1,['auto-merge'],https://github.com/irssi/irssi/pull/456,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/456,Fixes #454,Fixes #454,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,456,2016-03-22T13:43:25Z,2016-03-22T21:47:42Z,2016-03-24T13:56:53Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,cutbuffer: do not unconditionally use replace when noop was requested,1,['auto-merge'],https://github.com/irssi/irssi/pull/456,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/456#issuecomment-199842389,Fixes #454,lgtm,True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/457,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450","remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450",True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/457#issuecomment-199836687,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450",(I hope),True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/457#issuecomment-199841961,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450","I think there's no need to call terminfo_term_init again after the kill SIGSTP returns, a strace shows that the terminal settings are applied twice because of that",True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/457#issuecomment-199843424,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450","they may be applied twice because of term_init being called twice, once from the do_redraw sigcont handler https://github.com/irssi/irssi/blob/master/src/fe-text/term-terminfo.c#L91 and once from the kill-stop function https://github.com/irssi/irssi/blob/master/src/fe-text/term-terminfo.c#L610",True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/457#issuecomment-199844801,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450","Exactly, and #452 fixes the problem by sending the smcup only (if available) when we resume from the TSTP signal, we save the current state and then the old settings are re-applied in the SIGCNT handler",True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/457#issuecomment-199844993,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450","in that case I wonder if even the smcup of the code in your suggestion from #452 is necessary? if so, why?",True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/LemonBoy,7,https://github.com/irssi/irssi/pull/457#issuecomment-199845686,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450",The smcup saves the terminal window to be re-applied with a rmcup on the next resume/exit,True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/457#issuecomment-199846428,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450",but terminfo_cont (which is run by the sigcont hander) also runs smcup so why do we need to send that twice?,True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/LemonBoy,9,https://github.com/irssi/irssi/pull/457#issuecomment-199851001,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450","You're right, upon further inspection I've updated the PR",True,{}
irssi/irssi,https://github.com/irssi/irssi,457,2016-03-22T14:22:13Z,2016-03-22T21:57:28Z,2019-06-26T23:15:27Z,MERGED,True,6,2,1,https://github.com/ailin-nemui,fix race condition in terminal init,1,['needs review'],https://github.com/irssi/irssi/pull/457,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/457#issuecomment-200049339,"remove the tcgetattr call to a single time on irssi load instead of
querying it each time. Fixes #450",after discussion on IRC I conclude that we want to have both this and the #452 eventually,True,{}
irssi/irssi,https://github.com/irssi/irssi,458,2016-03-22T15:05:16Z,2016-03-22T21:54:43Z,2016-03-24T13:56:47Z,MERGED,True,27,9,4,https://github.com/ailin-nemui,Properly toggle bracketed paste mode on stop/cont,1,['needs review'],https://github.com/irssi/irssi/pull/458,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/458,Fixes #449,Fixes #449,True,{}
irssi/irssi,https://github.com/irssi/irssi,458,2016-03-22T15:05:16Z,2016-03-22T21:54:43Z,2016-03-24T13:56:47Z,MERGED,True,27,9,4,https://github.com/ailin-nemui,Properly toggle bracketed paste mode on stop/cont,1,['needs review'],https://github.com/irssi/irssi/pull/458,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/458#issuecomment-199870619,Fixes #449,better?,True,{}
irssi/irssi,https://github.com/irssi/irssi,458,2016-03-22T15:05:16Z,2016-03-22T21:54:43Z,2016-03-24T13:56:47Z,MERGED,True,27,9,4,https://github.com/ailin-nemui,Properly toggle bracketed paste mode on stop/cont,1,['needs review'],https://github.com/irssi/irssi/pull/458,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/458#issuecomment-199871794,Fixes #449,💖,True,{}
irssi/irssi,https://github.com/irssi/irssi,459,2016-03-22T15:55:09Z,2016-03-24T13:52:53Z,2019-06-26T23:15:28Z,MERGED,True,23,4,4,https://github.com/ailin-nemui,Make use of terminal application keys configurable,1,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/459,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/459,"adds a new setting term_appkey_mode which can enable or disable the use
of keyboard transmit (application keys) mode. Fixes #430","adds a new setting term_appkey_mode which can enable or disable the use
of keyboard transmit (application keys) mode. Fixes #430",True,{}
irssi/irssi,https://github.com/irssi/irssi,459,2016-03-22T15:55:09Z,2016-03-24T13:52:53Z,2019-06-26T23:15:28Z,MERGED,True,23,4,4,https://github.com/ailin-nemui,Make use of terminal application keys configurable,1,"['needs review', 'needs testing']",https://github.com/irssi/irssi/pull/459,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/459#issuecomment-199880925,"adds a new setting term_appkey_mode which can enable or disable the use
of keyboard transmit (application keys) mode. Fixes #430",lgtm,True,{}
irssi/irssi,https://github.com/irssi/irssi,460,2016-03-24T14:02:27Z,2016-03-24T14:24:09Z,2016-03-24T14:24:29Z,MERGED,True,15,3,2,https://github.com/ailin-nemui,Merge tag '0.8.19',15,[],https://github.com/irssi/irssi/pull/460,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/460,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,461,2016-03-24T15:17:45Z,2016-03-29T20:45:47Z,2019-06-26T23:15:22Z,MERGED,True,48,3,4,https://github.com/ailin-nemui,"Revert ""Removed the obsolete SQUERY and SERVLIST commands""",1,['auto-merge'],https://github.com/irssi/irssi/pull/461,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/461,This reverts commit 4beebe3.,This reverts commit 4beebe3.,True,{}
irssi/irssi,https://github.com/irssi/irssi,461,2016-03-24T15:17:45Z,2016-03-29T20:45:47Z,2019-06-26T23:15:22Z,MERGED,True,48,3,4,https://github.com/ailin-nemui,"Revert ""Removed the obsolete SQUERY and SERVLIST commands""",1,['auto-merge'],https://github.com/irssi/irssi/pull/461,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/461#issuecomment-200944196,This reverts commit 4beebe3.,This belongs to a script,True,{}
irssi/irssi,https://github.com/irssi/irssi,461,2016-03-24T15:17:45Z,2016-03-29T20:45:47Z,2019-06-26T23:15:22Z,MERGED,True,48,3,4,https://github.com/ailin-nemui,"Revert ""Removed the obsolete SQUERY and SERVLIST commands""",1,['auto-merge'],https://github.com/irssi/irssi/pull/461,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/461#issuecomment-200944621,This reverts commit 4beebe3.,"These are rfc commands,  idk why they should be removed",True,{}
irssi/irssi,https://github.com/irssi/irssi,461,2016-03-24T15:17:45Z,2016-03-29T20:45:47Z,2019-06-26T23:15:22Z,MERGED,True,48,3,4,https://github.com/ailin-nemui,"Revert ""Removed the obsolete SQUERY and SERVLIST commands""",1,['auto-merge'],https://github.com/irssi/irssi/pull/461,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/461#issuecomment-200945166,This reverts commit 4beebe3.,"The help files in the commit you mentioned state they only work for IRCNet, is this still true?",True,{}
irssi/irssi,https://github.com/irssi/irssi,461,2016-03-24T15:17:45Z,2016-03-29T20:45:47Z,2019-06-26T23:15:22Z,MERGED,True,48,3,4,https://github.com/ailin-nemui,"Revert ""Removed the obsolete SQUERY and SERVLIST commands""",1,['auto-merge'],https://github.com/irssi/irssi/pull/461,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/461#issuecomment-200946280,This reverts commit 4beebe3.,"They work on any network running ircd (like ircnet)  or any network which chooses to implement them. Rfc documents don't seem any worse than ""ircv3"" to me...",True,{}
irssi/irssi,https://github.com/irssi/irssi,461,2016-03-24T15:17:45Z,2016-03-29T20:45:47Z,2019-06-26T23:15:22Z,MERGED,True,48,3,4,https://github.com/ailin-nemui,"Revert ""Removed the obsolete SQUERY and SERVLIST commands""",1,['auto-merge'],https://github.com/irssi/irssi/pull/461,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/461#issuecomment-200948430,This reverts commit 4beebe3.,I was trying to undestand if those commands were effectively obsolete and/or exclusively for ircnet ( as the documentation leads to believe). Lgtm as long as the ‎misunderstanding is cleared up in the doc,True,{}
irssi/irssi,https://github.com/irssi/irssi,465,2016-04-02T14:15:35Z,2016-10-11T14:12:36Z,2019-06-27T09:43:33Z,MERGED,True,47,27,2,https://github.com/LemonBoy,Some small adjustments to the netsplit code.,3,['needs review'],https://github.com/irssi/irssi/pull/465,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/465,"Wrt issue #420
This is a RFC, I repeat, this is a RFC ⚠️","Wrt issue #420
This is a RFC, I repeat, this is a RFC ⚠️",True,{}
irssi/irssi,https://github.com/irssi/irssi,465,2016-04-02T14:15:35Z,2016-10-11T14:12:36Z,2019-06-27T09:43:33Z,MERGED,True,47,27,2,https://github.com/LemonBoy,Some small adjustments to the netsplit code.,3,['needs review'],https://github.com/irssi/irssi/pull/465,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/465#issuecomment-207049879,"Wrt issue #420
This is a RFC, I repeat, this is a RFC ⚠️",I haven't reviewed it but it does seem like a good improvement over the previous approach,True,{}
irssi/irssi,https://github.com/irssi/irssi,467,2016-04-04T06:50:59Z,2016-04-07T10:33:03Z,2019-06-26T23:15:22Z,MERGED,True,5,1,1,https://github.com/dequis,"net_gethosterror: Handle EAI_SYSTEM (""System error"") properly",1,['auto-merge'],https://github.com/irssi/irssi/pull/467,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/467,"That error code means ""check errno"". A few users got it and we never
figured out what happened - it usually fixed itself after restarting
something - so hopefully with this we'll have more information the next
time.","That error code means ""check errno"". A few users got it and we never
figured out what happened - it usually fixed itself after restarting
something - so hopefully with this we'll have more information the next
time.",True,{}
irssi/irssi,https://github.com/irssi/irssi,468,2016-04-14T16:52:34Z,2016-08-24T21:09:25Z,2016-11-04T13:25:31Z,CLOSED,False,1063,50,20,None,[WIP] Add native proxying,15,[],https://github.com/irssi/irssi/pull/468,None,1,https://github.com/irssi/irssi/pull/468,"Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.","Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.",True,{}
irssi/irssi,https://github.com/irssi/irssi,468,2016-04-14T16:52:34Z,2016-08-24T21:09:25Z,2016-11-04T13:25:31Z,CLOSED,False,1063,50,20,None,[WIP] Add native proxying,15,[],https://github.com/irssi/irssi/pull/468,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/468#issuecomment-210047155,"Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.",In what way did you do that rebase which also removed all the authorship information from the original commits...? You should rebase again and add that back,True,{}
irssi/irssi,https://github.com/irssi/irssi,468,2016-04-14T16:52:34Z,2016-08-24T21:09:25Z,2016-11-04T13:25:31Z,CLOSED,False,1063,50,20,None,[WIP] Add native proxying,15,[],https://github.com/irssi/irssi/pull/468,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/468#issuecomment-210047484,"Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.","Thank you. Please be understanding that this pr cannot proceed unless someone willing and capable of addressing all the issues raised in that thread, though",True,{}
irssi/irssi,https://github.com/irssi/irssi,468,2016-04-14T16:52:34Z,2016-08-24T21:09:25Z,2016-11-04T13:25:31Z,CLOSED,False,1063,50,20,None,[WIP] Add native proxying,15,[],https://github.com/irssi/irssi/pull/468,None,4,https://github.com/irssi/irssi/pull/468#issuecomment-210101113,"Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.",The original patches wouldn't apply against the current master. I guess there had been just too many changes since they were originally written. So I manually recreated them.,True,{}
irssi/irssi,https://github.com/irssi/irssi,468,2016-04-14T16:52:34Z,2016-08-24T21:09:25Z,2016-11-04T13:25:31Z,CLOSED,False,1063,50,20,None,[WIP] Add native proxying,15,[],https://github.com/irssi/irssi/pull/468,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/468#issuecomment-242208862,"Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.",@bashrc  thanks for your contribution. feel free to reopen once you addressed those comments. thanks for your understanding,True,{}
irssi/irssi,https://github.com/irssi/irssi,468,2016-04-14T16:52:34Z,2016-08-24T21:09:25Z,2016-11-04T13:25:31Z,CLOSED,False,1063,50,20,None,[WIP] Add native proxying,15,[],https://github.com/irssi/irssi/pull/468,https://github.com/Silur,6,https://github.com/irssi/irssi/pull/468#issuecomment-258425641,"Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.",how does this PR progress? how can I help to get this merged?,True,{}
irssi/irssi,https://github.com/irssi/irssi,468,2016-04-14T16:52:34Z,2016-08-24T21:09:25Z,2016-11-04T13:25:31Z,CLOSED,False,1063,50,20,None,[WIP] Add native proxying,15,[],https://github.com/irssi/irssi/pull/468,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/468#issuecomment-258429966,"Rebased patches from #148 against the current master, in an attempt to get Tor proxying working. This still doesn't appear to resolve onion addresses correctly.","there is a lot to do, read through the comments in #148
in general you can help if you can write C code",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,1,https://github.com/irssi/irssi/pull/471,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/471#issuecomment-211854507,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","Thanks!
I assume this is fixing #40, right?
There's no guarantee that the nicks received over the network will be valid utf-8, or that the terminal itself uses utf-8. That's where the thing gets ugly. Also recode is involved somewhere in there. I'm not sure how to cover all cases to test that this doesn't break.",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,3,https://github.com/irssi/irssi/pull/471#issuecomment-211898751,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","I assume this is fixing #40, right?

I wish I could tell you it completely fixes #40 ... but that fixes only half the problem. We were formerly living in a nice, happy heaven  where 1 byte == 1 character == 1 column. We now live in a harsh hell where one to four bytes make up one Unicode thingie (which may be a printable character, but which may also be a non-printable kind of indicator for various linguistic needs) which itself may take up more than one column in our terminals (for instance, a musical note is 1 column wide while the infamous pile of poo character is 2 columns wide): x bytes == y characters == z columns.
My patch ensures we cut/pad UTF-8 nicks based on UTF-8 characters, not bytes. That does solve #40 for terminals which do not handle multi-column characters, such as urxvt (urxvt enforces all characters to fit in a single column, even if it is not the way they were meant to be). But for those who handle it, such as konsole, the misalignment is still present (although usually attenuated). I wanted to improve my patch by leveraging wcwidth() and wcswidth() to compute the actual size a given string would take on the terminal but...

since not all terminals render multi-columns characters the same way, we would first need a way to detect the terminal capabilities; I did not dive in terminfo / termcap, perhaps there are some hints for us there...
the C functions wcwidth() and wcswidth(), as tested on my Debian Sid workstation, seem to be rather useless: wcwidth() frequently returns -1, wcswidth() frequently returns the number of characters instead of the number of columns... That does not look like a proper environment to develop a complete fix to #40 :-/
So, long story short, my humble opinion on the matter is: we can improve things by properly counting UTF-8 characters, but when it comes to counting columns, the situations is all fucked-up :')


There's no guarantee that the nicks received over the network will be valid utf-8

Indeed... I took care to call g_utf8_validate() in get_alignment to ensure we had proper UTF-8 (which includes proper ASCII), but that excludes e.g. ISO-8859-* encodings... I am not sure where I could find a real-life example of a server relaying such nicknames though...

or that the terminal itself uses utf-8. That's where the thing gets ugly. Also recode is involved somewhere in there.

Hey, I had completely forgotten about recode; we could indeed recode nicknames the same way text gets recoded, possibly with a recode_nicknames option...

I'm not sure how to cover all cases to test that this doesn't break.

Admittedly, what I provide here is meant as an improvement in our UTF-8-converging world, not a holy solution to handle every possible encodings and terminals.",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,4,https://github.com/irssi/irssi/pull/471#issuecomment-211922293,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","I forgot to mention: it was a bit frustrating to see that wcswidth() was returning the wrong result, but at the same time, my konsole terminal was able to tell which characters it should display on two columns. Considering the dependencies of konsole, I assume this is due to its use of the ICU library (International Components for Unicode)... i.e. we could probably compute the number of columns taken by a string in a reliable way by adding libicu to irssi's dependencies... but that feels a little too much just to align nicknames...",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/471#issuecomment-211925879,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.",What wcswidth are we talking about? The glibc one or the one we ship (that's called mk_wcswidth) ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,6,https://github.com/irssi/irssi/pull/471#issuecomment-211929947,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","The glibc one... I was completely unaware of the existence of core/wcwidth.c... I am going to have a look at it... if it proves operational, I am totally willing to improve my patch :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,7,https://github.com/irssi/irssi/pull/471#issuecomment-211963808,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","Actually, mk_wcwidth() seems too simplistic; it spots asian characters but not emojis... I do not know how much work it would represent to improve it to a point where no one would ever notice a problem (perhaps it is just a few byte ranges or conditions to add), but that would clearly duplicate efforts of other projects, starting with glibc.
Also, mk_wcswidth is commented out (well, #defined out); I assume this is due to the fact that getting the column count of a string is much more complicated than adding up the column counts of its characters.",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/471#issuecomment-211983432,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","urxvt enforces all characters to fit in a single column, even if it is not the way they were meant to be

Uh, works for me? urxvt 9.22. The white square in the middle is the cursor selection, two cells wide.


Actually, mk_wcwidth() seems too simplistic; it spots asian characters but not emojis

Emoji are defined to have a width of 1 according to EastAsianWidth.txt, what mk_wcwidth() does is correct.
Your glibc is older than 2.22, which means its wcwidth() only supports up to unicode 5.1, and returns -1 for unknown characters. Newer versions were updated to newer unicode versions: 2.22 supports unicode 7.0 and 2.23 supports unicode 8.0, so they will return the correct widths for characters introduced since 5.1.
Our mk_wcwidth(), in contrast, only supports up to 5.0, but returns 1 for unknown characters, which is a pretty good guess for most new characters, including emoji.
Personally the only thing i'd improve with mk_wcwidth() is to make it call the glibc wcwidth() if that one supports newer characters.
(I have a few notes on this topic here)",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,9,https://github.com/irssi/irssi/pull/471#issuecomment-212055638,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","Uh, works for me?

You are correct and I am wrong. I have discussed the matter with my friend (he uses urxvt, I use konsole) and he confirms that indeed, to his surprise, urxvt is able to display multi-column characters (he made the test with ""苺ましまろ"").

Emoji are defined to have a width of 1 according to EastAsianWidth.txt, what mk_wcwidth() does is correct.

I may have misused the ""emoji"" term here; the two characters for which we have experienced a difference in behaviour are PILE OF POO and CHERRY BLOSSOM, which are not part of EastAsianWidth.txt but can be found in UnicodeData.txt. As far as I understand this file, they should be 1 column wide (it states neither  nor ) and this is the way urxvt displays them.
However, konsole displays those 2 columns wide, presumably because libICU-provided data state that a pile of poo is two columns wide; http://www.fileformat.info/info/unicode/char/1F4A9/index.htm also shows ""Character.charCount(): 2"" in Java Data. I have no idea who in the world picked ""2 columns"" for those characters without a hint from those defining Unicode... Any idea about that?
Summary: different terminals are still liable to render some characters using a different number of columns :-/

Your glibc is older than 2.22, which means its wcwidth() only supports up to unicode 5.1, and returns -1 for unknown characters. Newer versions were updated to newer unicode versions: 2.22 supports unicode 7.0 and 2.23 supports unicode 8.0, so they will return the correct widths for characters introduced since 5.1.

Actually, I do have 2.22 (and those characters were introduced in Unicode 6.0,), ... I just assumed it was completely out of the league because wcwidth() was returning -1 for those characters (probably a coding mistake of mine there) and wcswidth() was telling me one of the nicknames used for my tests was 19 columns wide while my terminal was rendering it on 21 columns.
Conclusion: I am going to improve my ""handle-utf8-nicks"" branch to count columns instead of characters, and I will probably do so by following your suggestion of having mk_wcwidth calling glibc's wcwidth() at some point. By the way, I have checked glibc's wcswidth()'s code and it actually seems to behave terribly, so let's just forget it.
In the meantime, should we close this pull request?",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/471#issuecomment-212377054,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","However, konsole displays those 2 columns wide, presumably because libICU-provided data state that a pile of poo is two columns wide

I can't test this myself (my system can't render emoji in non-libxft apps, it's complicated), but judging by the source code, konsole doesn't use libicu, and includes its own konsole_wcwidth.cpp which is the same as our wcwidth.c in implementation (the combining/fullwidth ranges are the same), the only differences are types and indentation.
I can't see why it would use two columns.

also shows ""Character.charCount(): 2"" in Java Data

That's because java uses UTF-16 internally, so characters beyond the basic multilingual plane (U+FFFF) are stored as a surrogate pair (two ""characters""). See their docs. Either way this doesn't mean column width.

In the meantime, should we close this pull request?

Having WIP stuff in here is fine, and as far as I can see this code is a step in the right direction.",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,11,https://github.com/irssi/irssi/pull/471#issuecomment-212401900,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","I had not dared looking into the konsole sources (the ""one problem at a time"" approach...); my assumption on libicu was based on a simple ""ldd"".

the only differences are types and indentation.
I can't see why it would use two columns.

I will try to spend some time to discuss that with the authors of konsole; I suspect their implementation is a little hackish for characters beyond the BMP as, like Java, they seem to deal with 16-bit char values (their konsole_wcwidth takes a single ""quint16"" parameter), surrogation and a notion of extended characters; I think a picture will speak better than I do:
.
Either way, thanks for your feedback on the matter, it makes things clearer to me.

Having WIP stuff in here is fine, and as far as I can see this code is a step in the right direction.

Ok, fine -- I will update this pull request with additional commits in the coming days :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/dequis,12,https://github.com/irssi/irssi/pull/471#issuecomment-212417599,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","Ohhhh, that picture explains a lot. Holy crap it's surprising that works at all.",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,13,https://github.com/irssi/irssi/pull/471#issuecomment-213648710,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","Some progress.
Considering that, according to you:

libc 2.19 supports Unicode 5.1
libc 2.22 supports Unicode 7.0
libc 2.23 supports Unicode 8.0

... and that, according to the GLib changelogs:

GLib 2.30   supports Unicode 6.0
GLib 2.41.2 supports Unicode 7.0
GLib 2.47   supports Unicode 8.0

When applied to the Debian environment, here is what we get:

Debian jessie: GLib 2.42.1 => Unicode 7.0; libc 2.19 => Unicode 5.1
Debian sid:    GLib 2.48.0 => Unicode 8.0; libc 2.22 => Unicode 7.0

I double-checked all of this with a couple of test programs (one using wcwidth, one using g_unichar_iswide()) and concluded that relying on GLib's g_unichar_iswide() was a safer bet than relying on libc's wcwidth(). Additionally, the libc functions use wchar_t, which is implementation-dependent, whereas GLib's gchar and gunichar are already used a lot within irssi.
Following my latest commits, get_alignment now works with columns instead of characters. It relies on three helper functions, which deal with UTF-8 strings and determine the number of columns associated with each character by calling GLib-provided functions. I kept mk_wcwidth() in the code but I actually did not use it.
I took the liberty to move wcwidth.c, utf8.h and utf8.c in core/, as it really made a lot of sense to me. Not moving them would have implied that get_alignment() (which resides in core/special-vars.c) depend on functions located in fe-common/core, which sounds crazy to me -- I hope it is okay.
The way I determine the number of columns it takes to render a string is naive: I simply add up the number of columns as I iterate over characters. But that's an honest start for a function we shouldn't have to implement :-) As to the Unicode subtleties I mention in a comment, it seems that http://unicode.org/reports/tr51/#Diversity and http://unicode.org/reports/tr51/#Emoji_ZWJ_Sequences will bring their share of headaches in the future.
All of this being said, I think this can now pretend to fix #40 .",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/ailin-nemui,14,https://github.com/irssi/irssi/pull/471#issuecomment-213700906,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","hi, thanks for working on this. I would prefer if the code could stay uniform, mk_wcwidth is currently used for screen alignment in formats.c advance, several places in gui-entry.c and term-terminfo.c. If we find g_unichar_iswide to be superier to mk_wcwidth then we may want to consistently replace it. Or otherwise introduce a wrapper to make further replacements of such code easier.
Also I forgot if BIG5 and 8-byte terminal encodings are still working or already totally broken, and if they are still fine, on which layers they need to be taken care of. Presumably with term being in 8-byte mode the length manipulation functions should also work on bytes? Or did irssi already convert everything to unicode internally?",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/ailin-nemui,15,https://github.com/irssi/irssi/pull/471#issuecomment-213701142,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.",(for example  https://developer.gnome.org/glib/stable/glib-Unicode-Manipulation.html#g-unichar-iszerowidth  would suggest that isprint && !iszerowidth would be a more correct implementation of wcwidth using glib's unicode primitives),True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/LemonBoy,16,https://github.com/irssi/irssi/pull/471#issuecomment-213713237,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","As a reminder, there's also #411 that's closely related to this (and/or a wrong use of strlen instead).",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/ailin-nemui,17,https://github.com/irssi/irssi/pull/471#issuecomment-213925883,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.",one further note on the number of columns when truncating: zero width characters such as combining characters should be included on the final character,True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/ailin-nemui,18,https://github.com/irssi/irssi/pull/471#issuecomment-217743499,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.",hi @xavierog are you interested in finishing this?,True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,19,https://github.com/irssi/irssi/pull/471#issuecomment-217756049,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","Hi,

I would prefer if the code could stay uniform

I can relate to your position on this.

mk_wcwidth is currently used...

mk_wcwidth() is indeed used in various places throughout the code; plus, it is frequently associated with conditions such as unichar_isprint() or g_unichar_isalnum(), which makes it trickier to swiftly get rid of mk_wcwidth(). I suggest this ""cleaning"" operation be treated as a separate task/issue as the slightest mistake will probably break noticeable things.

If we find g_unichar_iswide to be superior to mk_wcwidth

I think it is not unwise to say that relying on GLib, which seems to strive to follow Unicode closely, is indeed superior to relying on an old function, prefixed with its author's initials, copied and pasted from the Internet and into the irssi source code. Basically, my point is that mk_wcwidth() is bound to become obsolete at some future point in time (according to an earlier comment of dequis', mk_wcwidth() handles Unicode 5.0 along with a good guess for most new characters).
Additionally, GLib might surprise us some day with a clever counterpart to wcswidth(), who knows?

Or otherwise introduce a wrapper to make further replacements of such code easier.

Indeed, irssi ideally needs its own set of functions to centralize whatever magic needs be done to determine the width of a character or the width of a string. Again, I think this should be part of a separate task.

Also I forgot if BIG5 and 8-byte terminal encodings are still working

I assume you meant ""8-bits""? If no, could you please elaborate on those 8-byte encodings?
Since we are focusing on nicknames here, the situation is pretty simple: nicknames are char * which come straight from the ircd and we have strictly no idea of their encoding.
Until I start working on this task, these char * were truncated and/or aligned assuming that 1 byte == 1 character == 1 column, which works perfectly for ASCII and most 8-bits encodings -- it probably never worked for BIG-5 and UTF-16 though.
After my commits, the situation is different: strings that are neither ASCII nor UTF-8 will not be treated (get_alignment() will return NULL, which will end up as an empty string through format functions), and this can indeed be improved :)
My proposal is to fall back on the former implementation of get_alignment() if g_utf8_validate() says a nickname is not UTF8-encoded. That way, we would solve issue #40 (""handle UTF-8 nicknames"") and irssi would behave the same way it did before for other encodings. This is not a perfect fix, this is not a perfect approach but it seems quite practical to me considering that:

issue #40 has been opened for... 8 years;
in the meantime, no bug was reported regarding the handling of BIG5 or UTF-16 nicknames (let me know if I am wrong here);
handling UTF-8 correctly is more and more important each day. Whether this statement could also be said of BIG5 is an interesting geopolitical question...

Note: it seems that trying to recode nicknames could actually lead to extra issues (e.g. breaking the ability to highlight someone as their nickname was recoded).
Please let me know if the approach I am proposing here is acceptable; if so, I am willing to implement it; otherwise, I might feel slightly discouraged; also, please note I am particularly unwilling to dive in the details of exotic encodings such as BIG5.

isprint && !iszerowidth would be a more correct implementation of wcwidth using glib's unicode primitives
when truncating: zero width characters such as combining characters should be included on the final character

I agree -- I can take care of this.",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/ailin-nemui,20,https://github.com/irssi/irssi/pull/471#issuecomment-217975252,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.","I would suggest you make this advance function available https://github.com/irssi/irssi/blob/master/src/fe-common/core/formats.c#L423 together with the utf8 logic as present in https://github.com/irssi/irssi/blob/master/src/fe-common/core/formats.c#L449

i.e. if the terminal is not set to utf8, always use strcpy semantics, otherwise fall back to strcpy if the string (nick) does not validate as utf8.
remove the utf8 from the function names and make it a parameter instead
And also use that function instead of get_utf8_char_width (name it string_width_advance or something),
and model the other function as a copy&paste of the format_get_length (name it string_get_width)
I think the implementation of get_utf8_chars_for_width or the implementation of get_alignment can probably be improved

for the latter I would suggest doing away with most changes to get_alignment and instead keep the basic skeleton of the original get_alignment function. Then, instead of calling g_string_truncate it should be a simple matter of calling g_string_truncate(str, string_get_strlen_width(str->str, align, utf8))
(correct me if I'm wrong)
if you feel like it you could then in a later pull request replace all calls to mk_wcwidth with unichar_width and then successively replace the implementation
what do you think?",True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/xavierog,21,https://github.com/irssi/irssi/pull/471#issuecomment-218026370,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.",Your suggestions look reasonable to me; I will work on it in the next days and then come back to you :),True,{}
irssi/irssi,https://github.com/irssi/irssi,471,2016-04-19T09:21:10Z,2016-05-18T14:58:35Z,2019-06-26T23:14:55Z,CLOSED,False,249,96,11,https://github.com/xavierog,Handle utf8 nicks,8,['needs changes'],https://github.com/irssi/irssi/pull/471,https://github.com/ailin-nemui,22,https://github.com/irssi/irssi/pull/471#issuecomment-220053594,"First, a little bit of context regarding this pull request: a friend of mine uses irssi and Bitlbee to connect to various non-IRC networks. Doing so, he stumbled upon a few issues related to nicks containing UTF-8 characters, i.e. something irssi did not really expect. The commits that appear in this pull request are what we made to solve those issues. As described in the last commit, we did not solve everything (as wcwidth() and wcswidth() seem to fail at doing their job) but we made the situation a little saner. Feel free to review, comment and/or integrate these changes.",fixed by #480,True,{}
irssi/irssi,https://github.com/irssi/irssi,472,2016-04-26T06:31:11Z,2016-08-24T21:10:43Z,2016-08-24T21:10:43Z,CLOSED,False,0,65,2,https://github.com/LemonBoy,Remove dane support and drop the dependency on dnsval,1,['WIP'],https://github.com/irssi/irssi/pull/472,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/472,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,472,2016-04-26T06:31:11Z,2016-08-24T21:10:43Z,2016-08-24T21:10:43Z,CLOSED,False,0,65,2,https://github.com/LemonBoy,Remove dane support and drop the dependency on dnsval,1,['WIP'],https://github.com/irssi/irssi/pull/472,https://github.com/ahf,2,https://github.com/irssi/irssi/pull/472#issuecomment-214860608,,Needs the alternative implementation to be in place though.,True,{}
irssi/irssi,https://github.com/irssi/irssi,473,2016-04-26T19:31:05Z,2016-04-27T18:32:32Z,2016-07-14T13:24:27Z,CLOSED,False,0,22,1,https://github.com/LemonBoy,Remove the override_coredump_limit,1,[],https://github.com/irssi/irssi/pull/473,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/473,"Seriously, wtf","Seriously, wtf",True,{}
irssi/irssi,https://github.com/irssi/irssi,474,2016-04-27T20:20:48Z,2016-04-27T20:39:33Z,2016-04-27T20:40:21Z,CLOSED,False,21,7,1,https://github.com/seveas,Window creation tweaks,2,[],https://github.com/irssi/irssi/pull/474,https://github.com/seveas,1,https://github.com/irssi/irssi/pull/474,"I group my windows per topic, and want private messages well away from them.
These patches add options to let me do that. The first patch is best viewed
with git log -p -w as git's diff machinery gets a bit confused by it.","I group my windows per topic, and want private messages well away from them.
These patches add options to let me do that. The first patch is best viewed
with git log -p -w as git's diff machinery gets a bit confused by it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,474,2016-04-27T20:20:48Z,2016-04-27T20:39:33Z,2016-04-27T20:40:21Z,CLOSED,False,21,7,1,https://github.com/seveas,Window creation tweaks,2,[],https://github.com/irssi/irssi/pull/474,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/474#issuecomment-215219769,"I group my windows per topic, and want private messages well away from them.
These patches add options to let me do that. The first patch is best viewed
with git log -p -w as git's diff machinery gets a bit confused by it.","Thanks for your submission. I feel like this may be better off implemented as a script, what do you think?
use List::Util qw(max);
Irssi::signal_add_first(
    'window created' => sub {
        my ($win) = @_;
        if ($win->{refnum} < 10) {
            $win->set_refnum(max 10, 1+ max map { $_->{refnum} } Irssi::windows); } })",True,{}
irssi/irssi,https://github.com/irssi/irssi,474,2016-04-27T20:20:48Z,2016-04-27T20:39:33Z,2016-04-27T20:40:21Z,CLOSED,False,21,7,1,https://github.com/seveas,Window creation tweaks,2,[],https://github.com/irssi/irssi/pull/474,https://github.com/seveas,3,https://github.com/irssi/irssi/pull/474#issuecomment-215220846,"I group my windows per topic, and want private messages well away from them.
These patches add options to let me do that. The first patch is best viewed
with git log -p -w as git's diff machinery gets a bit confused by it.","Script works too, didn't think it would be possible with a script, so thanks for writing the script for me 😄",True,{}
irssi/irssi,https://github.com/irssi/irssi,474,2016-04-27T20:20:48Z,2016-04-27T20:39:33Z,2016-04-27T20:40:21Z,CLOSED,False,21,7,1,https://github.com/seveas,Window creation tweaks,2,[],https://github.com/irssi/irssi/pull/474,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/474#issuecomment-215221070,"I group my windows per topic, and want private messages well away from them.
These patches add options to let me do that. The first patch is best viewed
with git log -p -w as git's diff machinery gets a bit confused by it.",feel free to submit an improved and configurable script to scripts.irssi.org,True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/seveas,1,https://github.com/irssi/irssi/pull/475,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.","I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.",True,{'THUMBS_UP': ['https://github.com/Brottweiler']}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/475#issuecomment-215229928,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.",You can use /format -delete daychange instead,True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/seveas,3,https://github.com/irssi/irssi/pull/475#issuecomment-215230137,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.","But then I wouldn't get the message at all, right?",True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/vague666,4,https://github.com/irssi/irssi/pull/475#issuecomment-215231946,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.","That is correct, but why do you need it? Only case you'd need it might be if you don't use timestamps. You can also check which level the daychanged format is written and add it to /set activity_hide_levels",True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/475#issuecomment-217743180,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.","hi, I like the idea but it needs to be configurable and I don't know if I like the direction your code is going.. I'm thinking about some constructive comments ;-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/475#issuecomment-217979345,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.",after looking through it I conclude it's probably fine if you just make it configurable!,True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/475#issuecomment-217997634,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.","I was thinking the ugly cast in ((WINDOW_REC *)(tmp->data))->daychanged = 1; could go away if it's turned into a function call like window_daychange(tmp->data) which sets that variable or prints it right away, depending on the settings.",True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/475#issuecomment-220054126,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.",@seveas,True,{}
irssi/irssi,https://github.com/irssi/irssi,475,2016-04-27T20:47:11Z,2016-08-24T21:08:47Z,2016-08-24T21:08:47Z,CLOSED,False,14,3,3,https://github.com/seveas,Don't print 'day changed' messages until something happens,1,['needs changes'],https://github.com/irssi/irssi/pull/475,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/475#issuecomment-242208692,"I usually have hundreds of windows open, most are private messages. This
patch prevents them from all showing up as having unread things in the
window list, and also prevents long series of just 'day changed to'
messages in the more idle queries.
I didn't see how to do this from a script, hence another patch to irssi.",@seveas thanks for your contribution. feel free to reopen once you addressed those comments. thanks for your understanding,True,{}
irssi/irssi,https://github.com/irssi/irssi,476,2016-04-28T23:21:03Z,2016-04-30T19:46:18Z,2019-06-26T23:14:53Z,MERGED,True,83,68,4,https://github.com/isundil,Add an option to make /hilight case sensitive,5,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/476,https://github.com/isundil,1,https://github.com/irssi/irssi/pull/476,See #421,See #421,True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,476,2016-04-28T23:21:03Z,2016-04-30T19:46:18Z,2019-06-26T23:14:53Z,MERGED,True,83,68,4,https://github.com/isundil,Add an option to make /hilight case sensitive,5,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/476,https://github.com/isundil,2,https://github.com/irssi/irssi/pull/476#issuecomment-215594483,See #421,"I'm not sure I understand Travis, the outputed error seems to be non-blocking on the others pull-requests",True,{}
irssi/irssi,https://github.com/irssi/irssi,476,2016-04-28T23:21:03Z,2016-04-30T19:46:18Z,2019-06-26T23:14:53Z,MERGED,True,83,68,4,https://github.com/isundil,Add an option to make /hilight case sensitive,5,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/476,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/476#issuecomment-215658576,See #421,"Looks fine code-wise with one minor remark about the choice of names, right now you use -case and matchcase in the command line and the config respectively and it'd be nice to have both named the same way.",True,{}
irssi/irssi,https://github.com/irssi/irssi,476,2016-04-28T23:21:03Z,2016-04-30T19:46:18Z,2019-06-26T23:14:53Z,MERGED,True,83,68,4,https://github.com/isundil,Add an option to make /hilight case sensitive,5,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/476,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/476#issuecomment-215857995,See #421,"Thanks for your contribution, if I'm not mistaken the code is lacking the regex case",True,{}
irssi/irssi,https://github.com/irssi/irssi,476,2016-04-28T23:21:03Z,2016-04-30T19:46:18Z,2019-06-26T23:14:53Z,MERGED,True,83,68,4,https://github.com/isundil,Add an option to make /hilight case sensitive,5,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/476,https://github.com/isundil,5,https://github.com/irssi/irssi/pull/476#issuecomment-215869380,See #421,"Yes, I thought they were a regexp flag in preg, but obviously it doesn't",True,{}
irssi/irssi,https://github.com/irssi/irssi,476,2016-04-28T23:21:03Z,2016-04-30T19:46:18Z,2019-06-26T23:14:53Z,MERGED,True,83,68,4,https://github.com/isundil,Add an option to make /hilight case sensitive,5,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/476,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/476#issuecomment-215945051,See #421,thanks. please increase ABI version in src/common.h (change in struct/header file),True,{}
irssi/irssi,https://github.com/irssi/irssi,477,2016-04-30T07:47:52Z,2016-04-30T08:19:57Z,2019-06-26T23:15:21Z,MERGED,True,2,2,1,https://github.com/dennisschagt,"Correct error/typo ""You""->""Your"" in help message",1,[],https://github.com/irssi/irssi/pull/477,https://github.com/dennisschagt,1,https://github.com/irssi/irssi/pull/477,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,477,2016-04-30T07:47:52Z,2016-04-30T08:19:57Z,2019-06-26T23:15:21Z,MERGED,True,2,2,1,https://github.com/dennisschagt,"Correct error/typo ""You""->""Your"" in help message",1,[],https://github.com/irssi/irssi/pull/477,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/477#issuecomment-215946150,,thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,478,2016-05-02T20:00:04Z,2016-05-03T18:58:23Z,2016-05-03T19:26:36Z,MERGED,True,15,9,6,https://github.com/pisculichi,Fix some ANSI-C issues,1,[],https://github.com/irssi/irssi/pull/478,https://github.com/pisculichi,1,https://github.com/irssi/irssi/pull/478,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,478,2016-05-02T20:00:04Z,2016-05-03T18:58:23Z,2016-05-03T19:26:36Z,MERGED,True,15,9,6,https://github.com/pisculichi,Fix some ANSI-C issues,1,[],https://github.com/irssi/irssi/pull/478,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/478#issuecomment-216358690,,Thanks but all of those are perfectly valid c99. Do you have a specific example of compiler/platform that doesn't support this? Because we don't support microsoft visual studio.,True,{}
irssi/irssi,https://github.com/irssi/irssi,478,2016-05-02T20:00:04Z,2016-05-03T18:58:23Z,2016-05-03T19:26:36Z,MERGED,True,15,9,6,https://github.com/pisculichi,Fix some ANSI-C issues,1,[],https://github.com/irssi/irssi/pull/478,https://github.com/pisculichi,3,https://github.com/irssi/irssi/pull/478#issuecomment-216361122,,it's for Haiku-os gcc2 (haikuports/haikuports#553),True,{}
irssi/irssi,https://github.com/irssi/irssi,478,2016-05-02T20:00:04Z,2016-05-03T18:58:23Z,2016-05-03T19:26:36Z,MERGED,True,15,9,6,https://github.com/pisculichi,Fix some ANSI-C issues,1,[],https://github.com/irssi/irssi/pull/478,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/478#issuecomment-216374202,,Are you sure those casts are required?,True,{}
irssi/irssi,https://github.com/irssi/irssi,478,2016-05-02T20:00:04Z,2016-05-03T18:58:23Z,2016-05-03T19:26:36Z,MERGED,True,15,9,6,https://github.com/pisculichi,Fix some ANSI-C issues,1,[],https://github.com/irssi/irssi/pull/478,https://github.com/pisculichi,5,https://github.com/irssi/irssi/pull/478#issuecomment-216377973,,"@ailin-nemui honestly no, I'll check if are required.
(edit) casts are not required, PR updated.",True,{}
irssi/irssi,https://github.com/irssi/irssi,478,2016-05-02T20:00:04Z,2016-05-03T18:58:23Z,2016-05-03T19:26:36Z,MERGED,True,15,9,6,https://github.com/pisculichi,Fix some ANSI-C issues,1,[],https://github.com/irssi/irssi/pull/478,https://github.com/pisculichi,6,https://github.com/irssi/irssi/pull/478#issuecomment-216622920,,Fixed!,True,{}
irssi/irssi,https://github.com/irssi/irssi,479,2016-05-09T15:17:35Z,2016-05-17T14:15:07Z,2019-06-26T23:15:04Z,MERGED,True,58,46,2,https://github.com/ailin-nemui,improve perl @INC detection,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/479,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/479,might fix #132,might fix #132,True,{}
irssi/irssi,https://github.com/irssi/irssi,479,2016-05-09T15:17:35Z,2016-05-17T14:15:07Z,2019-06-26T23:15:04Z,MERGED,True,58,46,2,https://github.com/ailin-nemui,improve perl @INC detection,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/479,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/479#issuecomment-217899908,might fix #132,"personally I would go so far as to suggest packagers that they ./configure --with-perl-lib=/usr/lib64/irssi/perl5/$(perl -e 'print substr $^V, 1') instead of the current --with-perl-lib=site default. Maybe  we can change our default in the future",True,{}
irssi/irssi,https://github.com/irssi/irssi,479,2016-05-09T15:17:35Z,2016-05-17T14:15:07Z,2019-06-26T23:15:04Z,MERGED,True,58,46,2,https://github.com/ailin-nemui,improve perl @INC detection,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/479,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/479#issuecomment-217960284,might fix #132,"I don't know enough about perl or autotools to ""review"" this, so just commenting to say hi.",True,{}
irssi/irssi,https://github.com/irssi/irssi,479,2016-05-09T15:17:35Z,2016-05-17T14:15:07Z,2019-06-26T23:15:04Z,MERGED,True,58,46,2,https://github.com/ailin-nemui,improve perl @INC detection,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/479,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/479#issuecomment-217962332,might fix #132,hi @dequis !,True,{'HOORAY': ['https://github.com/LemonBoy']}
irssi/irssi,https://github.com/irssi/irssi,479,2016-05-09T15:17:35Z,2016-05-17T14:15:07Z,2019-06-26T23:15:04Z,MERGED,True,58,46,2,https://github.com/ailin-nemui,improve perl @INC detection,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/479,https://github.com/gedge,5,https://github.com/irssi/irssi/pull/479#issuecomment-218303448,might fix #132,"this does work on my system, with a minor tweak (that may need to be put into the FreeBSD port patches) on line 483 (to add the make flag --no-print-directory)",True,{}
irssi/irssi,https://github.com/irssi/irssi,479,2016-05-09T15:17:35Z,2016-05-17T14:15:07Z,2019-06-26T23:15:04Z,MERGED,True,58,46,2,https://github.com/ailin-nemui,improve perl @INC detection,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/479,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/479#issuecomment-218412366,might fix #132,"hi, does it work with -s instead of --no-print-directory (I added such a commit above)? latter is not portable",True,{'THUMBS_UP': ['https://github.com/gedge']}
irssi/irssi,https://github.com/irssi/irssi,480,2016-05-13T02:36:32Z,2016-05-18T07:18:22Z,2019-06-26T23:14:55Z,MERGED,True,261,140,14,https://github.com/xavierog,Handle utf8 nicks with mk_wcwidth(),14,['auto-merge'],https://github.com/irssi/irssi/pull/480,https://github.com/xavierog,1,https://github.com/irssi/irssi/pull/480,"Following pull request #471, I created a whole new branch in my fork (hence that separate pull request) which, I believe, reflects ailin-nemui's advices. Feel free to review, comment and/or integrate these changes.","Following pull request #471, I created a whole new branch in my fork (hence that separate pull request) which, I believe, reflects ailin-nemui's advices. Feel free to review, comment and/or integrate these changes.",True,{}
irssi/irssi,https://github.com/irssi/irssi,480,2016-05-13T02:36:32Z,2016-05-18T07:18:22Z,2019-06-26T23:14:55Z,MERGED,True,261,140,14,https://github.com/xavierog,Handle utf8 nicks with mk_wcwidth(),14,['auto-merge'],https://github.com/irssi/irssi/pull/480,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/480#issuecomment-218979318,"Following pull request #471, I created a whole new branch in my fork (hence that separate pull request) which, I believe, reflects ailin-nemui's advices. Feel free to review, comment and/or integrate these changes.","thank you very much for your continued effort on this, I'm looking forward to integrating this into irssi.
mhm, it looks like we don't need the characters count and probably never will. (my suggestion was in error) how would you like renaming string_chars_for_width and make it return the bytes instead?
I'm a bit ambivalent about the policy-autodetection with -1 (tending to dislike). anyone else got an opinion on that? @dequis ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,480,2016-05-13T02:36:32Z,2016-05-18T07:18:22Z,2019-06-26T23:14:55Z,MERGED,True,261,140,14,https://github.com/xavierog,Handle utf8 nicks with mk_wcwidth(),14,['auto-merge'],https://github.com/irssi/irssi/pull/480,https://github.com/xavierog,3,https://github.com/irssi/irssi/pull/480#issuecomment-219036623,"Following pull request #471, I created a whole new branch in my fork (hence that separate pull request) which, I believe, reflects ailin-nemui's advices. Feel free to review, comment and/or integrate these changes.","mhm, it looks like we don't need the characters count and probably never will. (my suggestion was in error) how would you like renaming string_chars_for_width and make it return the bytes instead?

Actually, the function returns the amount of characters and optionally provides the number of bytes. It turns out that my former pull request needed characters whereas my new pull request needs bytes; therefore, it does not seem unlikely to me that the number of characters could be needed in the future (never say never...). Plus, ""he who can do more can do less"": it does not hurt to have extra features like this in that kind of toolbox (because this is what we are doing here: glib and libc functions are not sufficient for us, so we are building our own little toolbox on top of them); for instance: have you noticed that string_length() is absolutely unused as of now? :)

I'm a bit ambivalent about the policy-autodetection with -1 (tending to dislike).

I implemented that approach because, when writing the code, it seemed obvious to me that, without this mechanism, we would just end up writing a lot of ""foobar(str, string_policy(str))"" everywhere in the code and possibly regret it at some point as it goes against one of the most fundamental principle of programming: DRY -- Don't Repeat Yourself. How come you disapprove of it?",True,{}
irssi/irssi,https://github.com/irssi/irssi,481,2016-05-18T12:44:56Z,2016-05-18T12:49:50Z,2016-05-18T12:49:50Z,MERGED,True,24,1,3,https://github.com/ailin-nemui,Missing ABI update and NEWS update,3,[],https://github.com/irssi/irssi/pull/481,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/481,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,482,2016-05-18T13:33:03Z,2016-05-18T14:57:47Z,2016-05-18T14:57:51Z,MERGED,True,29,7,4,https://github.com/ailin-nemui,test make dist in travis,2,[],https://github.com/irssi/irssi/pull/482,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/482,this will make automated testing more reliable by covering the make dist case,this will make automated testing more reliable by covering the make dist case,True,{}
irssi/irssi,https://github.com/irssi/irssi,484,2016-06-01T20:50:00Z,2016-06-01T20:56:26Z,2019-06-26T23:15:20Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Correct the name of the emitted signal.,1,[],https://github.com/irssi/irssi/pull/484,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/484,"Typo, spotted by @ailin-nemui","Typo, spotted by @ailin-nemui",True,{}
irssi/irssi,https://github.com/irssi/irssi,485,2016-06-06T14:59:56Z,2016-06-07T00:47:57Z,2019-06-26T23:15:23Z,MERGED,True,5,3,1,https://github.com/ailin-nemui,Do not crash on OPTCHAN when item has no server,1,[],https://github.com/irssi/irssi/pull/485,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/485,May fix bugs.debian.org#826525,May fix bugs.debian.org#826525,True,{'THUMBS_UP': ['https://github.com/LemonBoy']}
irssi/irssi,https://github.com/irssi/irssi,485,2016-06-06T14:59:56Z,2016-06-07T00:47:57Z,2019-06-26T23:15:23Z,MERGED,True,5,3,1,https://github.com/ailin-nemui,Do not crash on OPTCHAN when item has no server,1,[],https://github.com/irssi/irssi/pull/485,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/485#issuecomment-223989606,May fix bugs.debian.org#826525,"Tested, it does fix it.
That's an unusually good bug report.",True,{}
irssi/irssi,https://github.com/irssi/irssi,485,2016-06-06T14:59:56Z,2016-06-07T00:47:57Z,2019-06-26T23:15:23Z,MERGED,True,5,3,1,https://github.com/ailin-nemui,Do not crash on OPTCHAN when item has no server,1,[],https://github.com/irssi/irssi/pull/485,https://github.com/josephbisch,3,https://github.com/irssi/irssi/pull/485#issuecomment-224129677,May fix bugs.debian.org#826525,"Hi, I'm the reporter of the bug in Debian. My laptop unfortunately stopped working, so I am unable to confirm that the change does fix the bug. Probably won't be able to confirm at all in the near future, unless I were to do so over SSH from my phone, which I don't plan on doing.",True,{}
irssi/irssi,https://github.com/irssi/irssi,488,2016-06-06T20:29:04Z,2016-06-14T04:15:02Z,2019-06-26T23:14:56Z,MERGED,True,45,12,2,https://github.com/LemonBoy,Be smart about case-matching the nicks.,3,[],https://github.com/irssi/irssi/pull/488,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/488,"Not very sure about this, we might want to gate this behaviour under a configurable option...
Long story short, it makes the completion match the case of the user-typed prefix if it contains at least an uppercase letter, I found it quite disappointing that Ne<tab> didn't give Nei but another nick starting with a lowercase n.","Not very sure about this, we might want to gate this behaviour under a configurable option...
Long story short, it makes the completion match the case of the user-typed prefix if it contains at least an uppercase letter, I found it quite disappointing that Ne<tab> didn't give Nei but another nick starting with a lowercase n.",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,488,2016-06-06T20:29:04Z,2016-06-14T04:15:02Z,2019-06-26T23:14:56Z,MERGED,True,45,12,2,https://github.com/LemonBoy,Be smart about case-matching the nicks.,3,[],https://github.com/irssi/irssi/pull/488,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/488#issuecomment-224207181,"Not very sure about this, we might want to gate this behaviour under a configurable option...
Long story short, it makes the completion match the case of the user-typed prefix if it contains at least an uppercase letter, I found it quite disappointing that Ne<tab> didn't give Nei but another nick starting with a lowercase n.",maybe a tristate /set completion_nicks_matchcase uppercase/always/never ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,488,2016-06-06T20:29:04Z,2016-06-14T04:15:02Z,2019-06-26T23:14:56Z,MERGED,True,45,12,2,https://github.com/LemonBoy,Be smart about case-matching the nicks.,3,[],https://github.com/irssi/irssi/pull/488,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/488#issuecomment-224252907,"Not very sure about this, we might want to gate this behaviour under a configurable option...
Long story short, it makes the completion match the case of the user-typed prefix if it contains at least an uppercase letter, I found it quite disappointing that Ne<tab> didn't give Nei but another nick starting with a lowercase n.","Yeah, I'd use YES/NO/AUTO as options though.",True,{}
irssi/irssi,https://github.com/irssi/irssi,488,2016-06-06T20:29:04Z,2016-06-14T04:15:02Z,2019-06-26T23:14:56Z,MERGED,True,45,12,2,https://github.com/LemonBoy,Be smart about case-matching the nicks.,3,[],https://github.com/irssi/irssi/pull/488,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/488#issuecomment-225009121,"Not very sure about this, we might want to gate this behaviour under a configurable option...
Long story short, it makes the completion match the case of the user-typed prefix if it contains at least an uppercase letter, I found it quite disappointing that Ne<tab> didn't give Nei but another nick starting with a lowercase n.",can you check this vs. rejoin_channels_on_reconnect and make sure we use the same code paths in all cases,True,{}
irssi/irssi,https://github.com/irssi/irssi,492,2016-06-12T14:32:33Z,2016-06-13T19:47:39Z,2016-07-14T13:24:27Z,MERGED,True,138,40,7,https://github.com/LemonBoy,Enum backwards is munE,8,[],https://github.com/irssi/irssi/pull/492,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/492,"yo, #491 is here.
After some quick testing it does work pretty well (see the XXX note), I've only ported rejoin_channels_mode so far to see how ergonomic the end result is.
I've initially made settings_add to use a char ** as a list of choices but decided to use a comma separated string instead so that's easy to use from the perl side too.
Completion is included 🎉","yo, #491 is here.
After some quick testing it does work pretty well (see the XXX note), I've only ported rejoin_channels_mode so far to see how ergonomic the end result is.
I've initially made settings_add to use a char ** as a list of choices but decided to use a comma separated string instead so that's easy to use from the perl side too.
Completion is included 🎉",True,{'HOORAY': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,492,2016-06-12T14:32:33Z,2016-06-13T19:47:39Z,2016-07-14T13:24:27Z,MERGED,True,138,40,7,https://github.com/LemonBoy,Enum backwards is munE,8,[],https://github.com/irssi/irssi/pull/492,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/492#issuecomment-225462731,"yo, #491 is here.
After some quick testing it does work pretty well (see the XXX note), I've only ported rejoin_channels_mode so far to see how ergonomic the end result is.
I've initially made settings_add to use a char ** as a list of choices but decided to use a comma separated string instead so that's easy to use from the perl side too.
Completion is included 🎉","I like it, besides what we discussed on irc the error message has to move to fe-settings and a TXT . the code in settings should probably just fail silently by returning false?",True,{}
irssi/irssi,https://github.com/irssi/irssi,493,2016-06-12T23:29:21Z,2016-06-12T23:37:30Z,2019-06-26T23:15:05Z,MERGED,True,1,0,1,https://github.com/dequis,servers-reconnect: pass unix_socket attribute to new connection,1,[],https://github.com/irssi/irssi/pull/493,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/493,Trying to /reconnect unix sockets turned them into inet.,Trying to /reconnect unix sockets turned them into inet.,True,{}
irssi/irssi,https://github.com/irssi/irssi,496,2016-06-16T16:17:26Z,2016-06-24T08:05:16Z,2019-06-26T23:15:07Z,MERGED,True,37,19,1,https://github.com/ailin-nemui,completion fixes,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/496,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/496,may fix #125,may fix #125,True,{}
irssi/irssi,https://github.com/irssi/irssi,496,2016-06-16T16:17:26Z,2016-06-24T08:05:16Z,2019-06-26T23:15:07Z,MERGED,True,37,19,1,https://github.com/ailin-nemui,completion fixes,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/496,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/496#issuecomment-226598879,may fix #125,interested in testing should try to reproduce the critical warnings from #125 or FS#124 but check whether completion otherwise is unaffected and works as intended,True,{}
irssi/irssi,https://github.com/irssi/irssi,498,2016-06-18T17:06:08Z,2016-06-21T20:46:52Z,2019-06-26T23:14:57Z,MERGED,True,94,24,7,https://github.com/vague666,"Add modify to /channel, /server and /network",9,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/498,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/498,Rewrite of PR #338,Rewrite of PR #338,True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,498,2016-06-18T17:06:08Z,2016-06-21T20:46:52Z,2019-06-26T23:14:57Z,MERGED,True,94,24,7,https://github.com/vague666,"Add modify to /channel, /server and /network",9,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/498,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/498#issuecomment-226999449,Rewrite of PR #338,LGTM beside some minor nits 👍,True,{}
irssi/irssi,https://github.com/irssi/irssi,501,2016-06-25T14:07:05Z,2016-06-26T19:09:01Z,2019-06-26T23:15:07Z,MERGED,True,4,0,1,https://github.com/ailin-nemui,check for NULL in statusbar_more_updated,1,[],https://github.com/irssi/irssi/pull/501,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/501,"fixes crash due to invalid access of active_win members when the more
indicator is triggered without an active window","fixes crash due to invalid access of active_win members when the more
indicator is triggered without an active window",True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,503,2016-06-30T11:31:37Z,2016-09-29T07:16:44Z,2016-09-29T07:16:44Z,CLOSED,False,6,1,3,https://github.com/LemonBoy,Better interaction between reverse-DNS resolution and reconnection.,1,"['help wanted', 'needs changes']",https://github.com/irssi/irssi/pull/503,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/503,Closes #494,Closes #494,True,{}
irssi/irssi,https://github.com/irssi/irssi,503,2016-06-30T11:31:37Z,2016-09-29T07:16:44Z,2016-09-29T07:16:44Z,CLOSED,False,6,1,3,https://github.com/LemonBoy,Better interaction between reverse-DNS resolution and reconnection.,1,"['help wanted', 'needs changes']",https://github.com/irssi/irssi/pull/503,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/503#issuecomment-239162627,Closes #494,what is the desired behaviour? what is the current behaviour and how does it change after this patch? maybe the connrec rather shouldn't be updated by reverse resolve at all?,True,{}
irssi/irssi,https://github.com/irssi/irssi,503,2016-06-30T11:31:37Z,2016-09-29T07:16:44Z,2016-09-29T07:16:44Z,CLOSED,False,6,1,3,https://github.com/LemonBoy,Better interaction between reverse-DNS resolution and reconnection.,1,"['help wanted', 'needs changes']",https://github.com/irssi/irssi/pull/503,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/503#issuecomment-239165320,Closes #494,"The desired behaviour is to use the non-resolved address on subsequent reconnections.
I didn't change how the connrec is updated since I wanted to make the patch to be as least invasive as possible.",True,{}
irssi/irssi,https://github.com/irssi/irssi,503,2016-06-30T11:31:37Z,2016-09-29T07:16:44Z,2016-09-29T07:16:44Z,CLOSED,False,6,1,3,https://github.com/LemonBoy,Better interaction between reverse-DNS resolution and reconnection.,1,"['help wanted', 'needs changes']",https://github.com/irssi/irssi/pull/503,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/503#issuecomment-239167112,Closes #494,I think we should better analyse this and fix the underlying design issue (like updating connrec) if that turns out to be the root issue,True,{}
irssi/irssi,https://github.com/irssi/irssi,503,2016-06-30T11:31:37Z,2016-09-29T07:16:44Z,2016-09-29T07:16:44Z,CLOSED,False,6,1,3,https://github.com/LemonBoy,Better interaction between reverse-DNS resolution and reconnection.,1,"['help wanted', 'needs changes']",https://github.com/irssi/irssi/pull/503,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/503#issuecomment-249595848,Closes #494,the patch itself is fine from what I can tell but I don't think this is taking the right direction. see #494,True,{}
irssi/irssi,https://github.com/irssi/irssi,504,2016-06-30T15:37:11Z,2017-09-10T17:46:33Z,2017-09-10T17:46:33Z,CLOSED,False,286,96,14,https://github.com/kruton,Add support for SASL mechanisms handled by scripts,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/504,https://github.com/kruton,1,https://github.com/irssi/irssi/pull/504,"This implements the suggested API from #323 with a caveat: currently the
SASL mechanisms are tied to IRC and needs a bit of extra work to make
them generic enough to move to the regular src/core instead of solely in
src/irc/core.
This greatly simplifies scripts for each mechanism since this handles
the splitting and reassembly of the 400 byte fragments going to and
coming from the server.
The ECDSA-NIST256P-CHALLENGE mechanism has been reimplemented using this
new API and found to work.","This implements the suggested API from #323 with a caveat: currently the
SASL mechanisms are tied to IRC and needs a bit of extra work to make
them generic enough to move to the regular src/core instead of solely in
src/irc/core.
This greatly simplifies scripts for each mechanism since this handles
the splitting and reassembly of the 400 byte fragments going to and
coming from the server.
The ECDSA-NIST256P-CHALLENGE mechanism has been reimplemented using this
new API and found to work.",True,{}
irssi/irssi,https://github.com/irssi/irssi,504,2016-06-30T15:37:11Z,2017-09-10T17:46:33Z,2017-09-10T17:46:33Z,CLOSED,False,286,96,14,https://github.com/kruton,Add support for SASL mechanisms handled by scripts,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/504,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/504#issuecomment-239163706,"This implements the suggested API from #323 with a caveat: currently the
SASL mechanisms are tied to IRC and needs a bit of extra work to make
them generic enough to move to the regular src/core instead of solely in
src/irc/core.
This greatly simplifies scripts for each mechanism since this handles
the splitting and reassembly of the 400 byte fragments going to and
coming from the server.
The ECDSA-NIST256P-CHALLENGE mechanism has been reimplemented using this
new API and found to work.",thanks for working on this @kruton,True,{}
irssi/irssi,https://github.com/irssi/irssi,504,2016-06-30T15:37:11Z,2017-09-10T17:46:33Z,2017-09-10T17:46:33Z,CLOSED,False,286,96,14,https://github.com/kruton,Add support for SASL mechanisms handled by scripts,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/504,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/504#issuecomment-249593669,"This implements the suggested API from #323 with a caveat: currently the
SASL mechanisms are tied to IRC and needs a bit of extra work to make
them generic enough to move to the regular src/core instead of solely in
src/irc/core.
This greatly simplifies scripts for each mechanism since this handles
the splitting and reassembly of the 400 byte fragments going to and
coming from the server.
The ECDSA-NIST256P-CHALLENGE mechanism has been reimplemented using this
new API and found to work.",please comment once resolved,True,{}
irssi/irssi,https://github.com/irssi/irssi,504,2016-06-30T15:37:11Z,2017-09-10T17:46:33Z,2017-09-10T17:46:33Z,CLOSED,False,286,96,14,https://github.com/kruton,Add support for SASL mechanisms handled by scripts,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/504,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/504#issuecomment-268528664,"This implements the suggested API from #323 with a caveat: currently the
SASL mechanisms are tied to IRC and needs a bit of extra work to make
them generic enough to move to the regular src/core instead of solely in
src/irc/core.
This greatly simplifies scripts for each mechanism since this handles
the splitting and reassembly of the 400 byte fragments going to and
coming from the server.
The ECDSA-NIST256P-CHALLENGE mechanism has been reimplemented using this
new API and found to work.",@kruton are you still interested in following up on this?,True,{}
irssi/irssi,https://github.com/irssi/irssi,504,2016-06-30T15:37:11Z,2017-09-10T17:46:33Z,2017-09-10T17:46:33Z,CLOSED,False,286,96,14,https://github.com/kruton,Add support for SASL mechanisms handled by scripts,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/504,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/504#issuecomment-328359187,"This implements the suggested API from #323 with a caveat: currently the
SASL mechanisms are tied to IRC and needs a bit of extra work to make
them generic enough to move to the regular src/core instead of solely in
src/irc/core.
This greatly simplifies scripts for each mechanism since this handles
the splitting and reassembly of the 400 byte fragments going to and
coming from the server.
The ECDSA-NIST256P-CHALLENGE mechanism has been reimplemented using this
new API and found to work.",closing for inactivity,True,{}
irssi/irssi,https://github.com/irssi/irssi,505,2016-07-01T23:36:26Z,2016-07-29T13:12:09Z,2016-07-29T13:12:09Z,CLOSED,False,19,1,2,https://github.com/kruton,"Add ""GBytes *"" as a possible perl signal arg",1,[],https://github.com/irssi/irssi/pull/505,https://github.com/kruton,1,https://github.com/irssi/irssi/pull/505,"This allows the possibility of sending an immutable byte vector as an
argument to signals. This is helpful for upcoming changes to support
SASL scripts.","This allows the possibility of sending an immutable byte vector as an
argument to signals. This is helpful for upcoming changes to support
SASL scripts.",True,{}
irssi/irssi,https://github.com/irssi/irssi,505,2016-07-01T23:36:26Z,2016-07-29T13:12:09Z,2016-07-29T13:12:09Z,CLOSED,False,19,1,2,https://github.com/kruton,"Add ""GBytes *"" as a possible perl signal arg",1,[],https://github.com/irssi/irssi/pull/505,https://github.com/kruton,2,https://github.com/irssi/irssi/pull/505#issuecomment-230068495,"This allows the possibility of sending an immutable byte vector as an
argument to signals. This is helpful for upcoming changes to support
SASL scripts.",@LemonBoy I'm splitting up the SASL script change into smaller pieces that are easier to logically review.,True,{}
irssi/irssi,https://github.com/irssi/irssi,505,2016-07-01T23:36:26Z,2016-07-29T13:12:09Z,2016-07-29T13:12:09Z,CLOSED,False,19,1,2,https://github.com/kruton,"Add ""GBytes *"" as a possible perl signal arg",1,[],https://github.com/irssi/irssi/pull/505,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/505#issuecomment-230091525,"This allows the possibility of sending an immutable byte vector as an
argument to signals. This is helpful for upcoming changes to support
SASL scripts.",You can add multiple logical commits to a single pull request,True,{}
irssi/irssi,https://github.com/irssi/irssi,505,2016-07-01T23:36:26Z,2016-07-29T13:12:09Z,2016-07-29T13:12:09Z,CLOSED,False,19,1,2,https://github.com/kruton,"Add ""GBytes *"" as a possible perl signal arg",1,[],https://github.com/irssi/irssi/pull/505,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/505#issuecomment-234798000,"This allows the possibility of sending an immutable byte vector as an
argument to signals. This is helpful for upcoming changes to support
SASL scripts.","Since #506 moved to gstring instead of gbytes (because of the glib 2.32 version requirement), this one should be updated.
(Or maybe drop this PR and put it together with the other one. I don't care either way. Github no longer sucks to review individual commits within a PR)",True,{}
irssi/irssi,https://github.com/irssi/irssi,505,2016-07-01T23:36:26Z,2016-07-29T13:12:09Z,2016-07-29T13:12:09Z,CLOSED,False,19,1,2,https://github.com/kruton,"Add ""GBytes *"" as a possible perl signal arg",1,[],https://github.com/irssi/irssi/pull/505,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/505#issuecomment-236176461,"This allows the possibility of sending an immutable byte vector as an
argument to signals. This is helpful for upcoming changes to support
SASL scripts.","thanks for your contribution, according to comments I will close this for now. that is not meant to discourage you, please reopen when required",True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/kruton,1,https://github.com/irssi/irssi/pull/506,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.","The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.",True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/506#issuecomment-230208243,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.","Travis failed because you used g_string_free_to_bytes which was added in glib 2.34, a bit too recent.",True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/kruton,3,https://github.com/irssi/irssi/pull/506#issuecomment-230625239,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.","Okay, think my latest commit in this PR addresses the comment.",True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/506#issuecomment-230750424,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.",Why not use a GBytes in sasl_buffers instead of a plain string ? And what do you think about adding a upper limit on the data that we collect ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/506#issuecomment-230809077,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.","Uh, you know, just avoid GBytes entirely. I thought it was some functions but all of it was added in glib 2.32",True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/kruton,6,https://github.com/irssi/irssi/pull/506#issuecomment-230947965,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.",Doh! I rewrote this using GString instead. I also wrote unit tests to confirm everything works as expected.,True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/kruton,7,https://github.com/irssi/irssi/pull/506#issuecomment-231243917,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.",I removed a now-superfluous comment; should be ready for another look.,True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/506#issuecomment-231252596,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.","Instead of using a hash table from tag to gstring, you could just add a GString * field to IRC_SERVER_REC, which would also make it easier to free the GString buffer if the authentication is interrupted for whatever reason. Also, I think that in those cases with the current version the partial sasl payload would persist across disconnections. That's not desirable.
Also +1 for an upper limit to stop servers from making this buffer grow forever. Atheme seems to use 8192. https://github.com/atheme/atheme/blob/59ca306d8faf1b7a69a82e3d37bb3c751e680f13/modules/saslserv/main.c#L318",True,{}
irssi/irssi,https://github.com/irssi/irssi,506,2016-07-04T05:14:53Z,2016-09-26T14:43:33Z,2019-06-26T23:15:14Z,MERGED,True,154,23,3,https://github.com/kruton,SASL: handle fragmentation,1,['needs review'],https://github.com/irssi/irssi/pull/506,https://github.com/kruton,9,https://github.com/irssi/irssi/pull/506#issuecomment-243340948,"The IRCv3 SASL extension says that AUTHENTICATION payloads of exactly
400 bytes in length indicate that the message is fragmented and will
continue in a subsequent message. Handle the reassembly and splitting of
these messages so that we are compliant with the specification.",Added the SASL buffer to IRC_SERVER_REC and set an upper limit to 8192.,True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/509,"I guess it makes sense.
Closes #508.","I guess it makes sense.
Closes #508.",True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/509#issuecomment-232081323,"I guess it makes sense.
Closes #508.","I feel like there may have been a reason for not closing them, not sure...",True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/509#issuecomment-232193515,"I guess it makes sense.
Closes #508.",Yeah this is subtle stuff. I wouldn't touch it.,True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/509#issuecomment-232272464,"I guess it makes sense.
Closes #508.","ehm, I meant we should think twice, not cannot touch ;)",True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/509#issuecomment-232461160,"I guess it makes sense.
Closes #508.","For reference, here is where new bindings for the windows are introduced during the disconnection phase.",True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/509#issuecomment-232461941,"I guess it makes sense.
Closes #508.","one potential use case, leaving windows open so that once you connect again the channels are rejoined there. whereas autoclose_windows' target was the case where /part should close a window without requiring /wc if no items are left. /part is somehow a more explicit action, I mean, it is not immediately clear if you really wanted to leave all channels when disconnecting",True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/LemonBoy,7,https://github.com/irssi/irssi/pull/509#issuecomment-232471414,"I guess it makes sense.
Closes #508.","Hmm, maybe we could just add a -kill-win argument to /disconnect ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/strk,8,https://github.com/irssi/irssi/pull/509#issuecomment-232616260,"I guess it makes sense.
Closes #508.",-kill-win argument to /disconnect sounds like a good start. It would be even better if it could be configured to be the default for /disconnect (thus allowing passing a -keep-win).,True,{}
irssi/irssi,https://github.com/irssi/irssi,509,2016-07-06T11:52:27Z,2016-07-29T13:09:42Z,2016-07-29T13:09:42Z,CLOSED,False,6,2,4,https://github.com/LemonBoy,Make autoclose_window work when /disconnect'ing,1,['needs review'],https://github.com/irssi/irssi/pull/509,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/509#issuecomment-236175893,"I guess it makes sense.
Closes #508.",I will close this and welcome any PR which adds a setting autoclose_windows_on_disconnect (maybe that should also close queries?),True,{}
irssi/irssi,https://github.com/irssi/irssi,510,2016-07-08T16:22:44Z,2016-08-24T21:10:01Z,2016-08-24T21:10:01Z,CLOSED,False,2,2,2,https://github.com/LemonBoy,Bump the minimum glib version to 2.28,1,[],https://github.com/irssi/irssi/pull/510,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/510,( dx) feel free to bump it up to 2.28 (rhel 6),( dx) feel free to bump it up to 2.28 (rhel 6),True,{}
irssi/irssi,https://github.com/irssi/irssi,510,2016-07-08T16:22:44Z,2016-08-24T21:10:01Z,2016-08-24T21:10:01Z,CLOSED,False,2,2,2,https://github.com/LemonBoy,Bump the minimum glib version to 2.28,1,[],https://github.com/irssi/irssi/pull/510,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/510#issuecomment-231439523,( dx) feel free to bump it up to 2.28 (rhel 6),"Okay, but I expected this to be done together with changes that actually need it.
This drops support for debian 6.0 (oldstable, squeeze) and ubuntu 10.04 lts, both EOL'd already.",True,{}
irssi/irssi,https://github.com/irssi/irssi,510,2016-07-08T16:22:44Z,2016-08-24T21:10:01Z,2016-08-24T21:10:01Z,CLOSED,False,2,2,2,https://github.com/LemonBoy,Bump the minimum glib version to 2.28,1,[],https://github.com/irssi/irssi/pull/510,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/510#issuecomment-242209016,( dx) feel free to bump it up to 2.28 (rhel 6),please integrate this in a patch that actually requires it,True,{}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/511,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.","We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.",True,"{'THUMBS_UP': ['https://github.com/jvoisin', 'https://github.com/billop', 'https://github.com/pgilad', 'https://github.com/Mrfiregem', 'https://github.com/erikw'], 'ROCKET': ['https://github.com/erikw']}"
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/511#issuecomment-231541016,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.","👎. Quoting previous rejected PR:

Also, given users often need to know where the Irssi directory is (e.g. to add scripts) I think adding an alternate location is just going to make it confusing

And

In general I don't think the cost of this is worth it. (Remember Irssi has users who are not hugely familiar with Unix and use this on a shell account; the cost of making a change and then obsoleting random tutorials on the web is very large).",True,{'THUMBS_DOWN': ['https://github.com/zneix']}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/511#issuecomment-232081774,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.","scripts have to be in $XDG_DATA_DIR and so on...
I don't feel like your PR addresses any of the issues raised in the other issue",True,{}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/511#issuecomment-232083112,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.","I took a simpler approach and jumped over all the bikeshedding, let's consider scripts as part of the configuration itself and have everything in ~/.config, let's not be so strict.",True,{}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/511#issuecomment-232192163,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.","Well, no one said it explicitly, but the commit that happened after my comment changed the meaning of this PR, and it's less awful regarding backwards compatibility.
+       /* Try the XDG-compliant path first, if the config directory
+        * exists use it instead of the one at ~/.irssi */
I'm still not very enthusiastic about this whole thing. But at least it doesn't ""break"" new installs.

let's consider scripts as part of the configuration itself and have everything in ~/.config, let's not be so strict

I do like this mindset",True,{}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/511#issuecomment-249610914,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.",in my opinion we should either have a fully compliant solution with scripts in .local/share/irssi/scripts and maybe a new autorun concept or no XDG,True,{}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/Earnestly,7,https://github.com/irssi/irssi/pull/511#issuecomment-255486494,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.","So many good ideas are never heard from again once they embark in a voyage on the semantic gulf.
— 53",True,{}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/511#issuecomment-255496970,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.",@Earnestly Some ideas are also bad.,True,{}
irssi/irssi,https://github.com/irssi/irssi,511,2016-07-09T15:13:10Z,2016-12-21T14:31:12Z,2016-12-21T14:31:12Z,CLOSED,False,12,8,2,https://github.com/LemonBoy,Follow the XDG specification.,1,"['question', 'needs review']",https://github.com/irssi/irssi/pull/511,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/511#issuecomment-268536129,"We're still 100% backward-compatible.
Supersedes #51, we now default to ~/.config/irssi if and only if it exists, otherwise ~/.irssi is used as before.","I'll closse this for now, either a complete implementation or none. also voted by @dequis",True,"{'THUMBS_UP': ['https://github.com/dequis', 'https://github.com/erikw']}"
irssi/irssi,https://github.com/irssi/irssi,512,2016-07-12T10:43:41Z,2016-07-12T14:11:42Z,2019-06-26T23:14:58Z,MERGED,True,3,2,1,https://github.com/LemonBoy,Allow Irssi::signal_remove to work properly with coderefs,1,[],https://github.com/irssi/irssi/pull/512,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/512,"Tested with the attached script and, guess what, it works!","Tested with the attached script and, guess what, it works!",True,{}
irssi/irssi,https://github.com/irssi/irssi,513,2016-07-12T11:08:11Z,2017-03-08T13:14:05Z,2017-03-08T17:58:02Z,CLOSED,False,23,13,1,https://github.com/LemonBoy,Allow CWD-relative paths with /script load,2,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/513,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/513,Replace the usage of printfs with glib functions to build the paths.,Replace the usage of printfs with glib functions to build the paths.,True,{}
irssi/irssi,https://github.com/irssi/irssi,513,2016-07-12T11:08:11Z,2017-03-08T13:14:05Z,2017-03-08T17:58:02Z,CLOSED,False,23,13,1,https://github.com/LemonBoy,Allow CWD-relative paths with /script load,2,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/513,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/513#issuecomment-232082576,Replace the usage of printfs with glib functions to build the paths.,doesn't that break ./ pointing to ~/.irssi/scripts?,True,{}
irssi/irssi,https://github.com/irssi/irssi,513,2016-07-12T11:08:11Z,2017-03-08T13:14:05Z,2017-03-08T17:58:02Z,CLOSED,False,23,13,1,https://github.com/LemonBoy,Allow CWD-relative paths with /script load,2,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/513,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/513#issuecomment-232101825,Replace the usage of printfs with glib functions to build the paths.,"It's a can of worms...
The completion thingie aliases ./ to ~/.irssi/scripts (fuckin' smart, isn't it ?) and instead returning the full path it leaves the user with a non-existing relative path that perl_script_get_path tries to trace back to the ~/.irssi/scripts one.",True,{}
irssi/irssi,https://github.com/irssi/irssi,513,2016-07-12T11:08:11Z,2017-03-08T13:14:05Z,2017-03-08T17:58:02Z,CLOSED,False,23,13,1,https://github.com/LemonBoy,Allow CWD-relative paths with /script load,2,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/513,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/513#issuecomment-239161728,Replace the usage of printfs with glib functions to build the paths.,question if we should map ./ to cwd. it doesn't seem very useful to me,True,{}
irssi/irssi,https://github.com/irssi/irssi,513,2016-07-12T11:08:11Z,2017-03-08T13:14:05Z,2017-03-08T17:58:02Z,CLOSED,False,23,13,1,https://github.com/LemonBoy,Allow CWD-relative paths with /script load,2,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/513,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/513#issuecomment-239165790,Replace the usage of printfs with glib functions to build the paths.,"Different strokes for different folks, I find that mapping ./ to entirely different folders depending on the context to be quite counter-intuitive, after all ./ introduces a cwd-relative path.",True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/514,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/514#issuecomment-239159415,,"I guess it's fine, I'm a bit sceptic of the internal flag and related code duplication but whatever. @dequis ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/514#issuecomment-239166952,,(should update abi constant),True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/514#issuecomment-239216119,,"That seems ok, but i'm a bit worried about that server_disconnect call. Should check that the code that runs after the signal is emitted doesn't depend on the connection still existing.",True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/ahf,5,https://github.com/irssi/irssi/pull/514#issuecomment-254345454,,"sasl_disconnect_on_fail sounds wrong in my head. I would at least change it to something like sasl_disconnect_on_failure or _on_error.
Should the policy also be enforced on a global ""per-client"" level?",True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/514#issuecomment-254348263,,"Renaming to _on_failure seems ok (but i don't feel too strongly about it)

Should the policy also be enforced on a global ""per-client"" level?

What do you mean? It looks like a global setting to me. I think that's fine.",True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/ahf,7,https://github.com/irssi/irssi/pull/514#issuecomment-254348711,,Ack. I think I wrote the wrong question: should it be possible to control this on a per connection level.,True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/514#issuecomment-265308004,,"I don't think we need to have this as a per-connection setting. It's more of a personal preference, similar to ""do i care about appearing decloaked or not""",True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/514#issuecomment-268134160,,Should this also set server->no_reconnect = TRUE too?,True,{}
irssi/irssi,https://github.com/irssi/irssi,514,2016-07-12T12:01:20Z,2016-12-21T14:29:27Z,2019-06-26T23:15:01Z,MERGED,True,33,0,4,https://github.com/LemonBoy,Add an option to stop the connection when SASL fails.,3,[],https://github.com/irssi/irssi/pull/514,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/514#issuecomment-268174005,,Maybe the sasl failure is temporary,True,{}
irssi/irssi,https://github.com/irssi/irssi,515,2016-07-12T13:46:55Z,2016-07-12T14:11:05Z,2019-06-26T23:15:20Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Correct the prototype for the 'message private' signal.,1,[],https://github.com/irssi/irssi/pull/515,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/515,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/516,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/516#issuecomment-239158859,,"which issue exactly does this fix?
I found the following issue:

/load <tab> - no completion
/load <tab> with hidden files present, and this patch, - no completion
/load a<tab> - completes files with a*
/load .<tab> and this patch, - no completion
/load .<tab> and this patch, completes ./.*

at least with this patch the no-completion behaviour seems to be more consistent. but I wonder if it shouldn't always go into completion (of all files) in such case?",True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/516#issuecomment-239165949,,I honestly don't remember anymore.,True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/516#issuecomment-239166755,,github ate my <tab>s. maybe we can fix it to complete all files if required in that spot?,True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/516#issuecomment-241793070,,if you don't have a good explanation for a patch it cannot be merged imo,True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/516#issuecomment-242268984,,"The title is misleading, it makes more sense in the comment in the code:
/* Skip the dotfiles unless the user explicitly asked us
 * to do so. Basename might be './', beware of that */

And I think there's something mistyped in the comment above, maybe should be:

/load <tab> with this patch, no completion
/load <tab> without this patch, completes to .* (hidden files in the current directory)
/load a<tab>  with or without this patch, completes files with a*
/load .<tab> with this patch, no completion
/load .<tab> without this patch, completes ./.*

Adding to that

/load ./<tab> with this patch, no completion
/load ./<tab> without this patch, completes ./.*

The last one is certainly unexpected - you're referring to the local directory and it completes dotfiles. Same thing with the case of empty input, that's weird
I think this makes sense now.
edit: Actually, after writing this, the title doesn't seem misleading anymore. Welp.",True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/516#issuecomment-246830888,,"no idea what this does, I think completion still is less than ideal",True,{}
irssi/irssi,https://github.com/irssi/irssi,516,2016-07-12T15:08:52Z,2016-09-13T21:29:10Z,2016-09-13T21:30:35Z,MERGED,True,3,1,1,https://github.com/LemonBoy,Fix the tab completion for paths starting with ./,1,"['needs review', 'waiting for feedback']",https://github.com/irssi/irssi/pull/516,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/516#issuecomment-246831189,,yolomerge,True,{}
irssi/irssi,https://github.com/irssi/irssi,517,2016-07-12T15:38:35Z,2016-07-13T13:26:37Z,2019-06-26T23:15:08Z,MERGED,True,6,2,1,https://github.com/LemonBoy,Minor cosmetic fix in /unignore error message.,1,['auto-merge'],https://github.com/irssi/irssi/pull/517,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/517,"Reported here:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=577202","Reported here:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=577202",True,{}
irssi/irssi,https://github.com/irssi/irssi,518,2016-07-17T15:30:04Z,2016-07-17T15:37:57Z,2019-06-26T23:15:21Z,MERGED,True,1,1,1,https://github.com/vague666,"Wrong order in the arguments in /hilight example, -mask doesn't take …",1,[],https://github.com/irssi/irssi/pull/518,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/518,…a parameter,…a parameter,True,{}
irssi/irssi,https://github.com/irssi/irssi,521,2016-08-04T08:06:37Z,2016-08-11T13:41:12Z,2019-06-26T23:15:02Z,MERGED,True,20,1576,10,https://github.com/ailin-nemui,remove curses terminal and ncurses macro,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/521,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/521,the curses code had been broken for a while (doesn't compile),the curses code had been broken for a while (doesn't compile),True,{'HOORAY': ['https://github.com/LemonBoy']}
irssi/irssi,https://github.com/irssi/irssi,521,2016-08-04T08:06:37Z,2016-08-11T13:41:12Z,2019-06-26T23:15:02Z,MERGED,True,20,1576,10,https://github.com/ailin-nemui,remove curses terminal and ncurses macro,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/521,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/521#issuecomment-237482614,the curses code had been broken for a while (doesn't compile),may be good if some of the obscure platform users test this,True,{}
irssi/irssi,https://github.com/irssi/irssi,525,2016-08-12T16:25:23Z,2016-08-14T21:35:23Z,2016-08-14T21:35:34Z,MERGED,True,6,3,1,https://github.com/ailin-nemui,fix use after free in expando error,1,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/525,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/525,fixes #522,fixes #522,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,526,2016-08-12T17:34:33Z,2016-08-14T21:35:41Z,2019-06-26T23:15:02Z,MERGED,True,37,162,4,https://github.com/ailin-nemui,remove broken dummy mode,1,['auto-merge'],https://github.com/irssi/irssi/pull/526,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/526,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,529,2016-08-22T10:27:31Z,2016-08-25T02:24:07Z,2019-06-27T09:43:34Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix nick->host == NULL crash,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/529,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/529,may resolve issue #500,may resolve issue #500,True,{}
irssi/irssi,https://github.com/irssi/irssi,529,2016-08-22T10:27:31Z,2016-08-25T02:24:07Z,2019-06-27T09:43:34Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix nick->host == NULL crash,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/529,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/529#issuecomment-242264214,may resolve issue #500,"Welp, I give up, can't figure out how to reproduce this path. I got a lot of assertion warnings of missing hosts, but no idea how to get the first host to exist and the printnick one to be null.
Either way this does look like something that would fix the issue of the other ticket, so LGTM",True,{}
irssi/irssi,https://github.com/irssi/irssi,529,2016-08-22T10:27:31Z,2016-08-25T02:24:07Z,2019-06-27T09:43:34Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix nick->host == NULL crash,1,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/529,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/529#issuecomment-242264355,may resolve issue #500,thanks for trying,True,{}
irssi/irssi,https://github.com/irssi/irssi,532,2016-08-24T20:41:23Z,2016-08-24T20:49:20Z,2016-08-24T20:49:20Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Fix an OOB access in the cutbuffer implementation.,1,[],https://github.com/irssi/irssi/pull/532,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/532,A sleep-deprived attempt at finding out why the hell irssi crashed out of the blue.,A sleep-deprived attempt at finding out why the hell irssi crashed out of the blue.,True,{}
irssi/irssi,https://github.com/irssi/irssi,533,2016-08-24T22:51:55Z,2016-09-04T10:11:03Z,2019-06-26T23:15:23Z,MERGED,True,7,8,2,https://github.com/dequis,Set the default STATUSMSG to @ instead of @+ if it's missing,1,[],https://github.com/irssi/irssi/pull/533,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/533,"This fixes two issues:

IRCNet doesn't have STATUSMSG, but it supports +channels, and including + in the default value meant processing those incorrectly
The ""bahamut hack"", for old servers that support but don't advertise STATUSMSG, didn't work since ischannel_func doesn't use the default.

The choice of @ intentionally leaves out support for other STATUSMSG (for example, AzzurraNet's bahamut 1.4 fork seemed to support + and % in any order, contradicting the comment in the code).
I think this is a decent tradeoff, given how those servers are uncommon and relying on +# or %# is even less common than @#.
Fixes #531","This fixes two issues:

IRCNet doesn't have STATUSMSG, but it supports +channels, and including + in the default value meant processing those incorrectly
The ""bahamut hack"", for old servers that support but don't advertise STATUSMSG, didn't work since ischannel_func doesn't use the default.

The choice of @ intentionally leaves out support for other STATUSMSG (for example, AzzurraNet's bahamut 1.4 fork seemed to support + and % in any order, contradicting the comment in the code).
I think this is a decent tradeoff, given how those servers are uncommon and relying on +# or %# is even less common than @#.
Fixes #531",True,{}
irssi/irssi,https://github.com/irssi/irssi,535,2016-08-29T21:25:54Z,2016-09-11T16:17:03Z,2016-09-11T16:56:35Z,MERGED,True,5,4,1,https://github.com/ailin-nemui,Update INSTALL to reflect perl changes,1,[],https://github.com/irssi/irssi/pull/535,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/535,One possible resolutions for #534,One possible resolutions for #534,True,{}
irssi/irssi,https://github.com/irssi/irssi,540,2016-09-11T15:06:46Z,2016-09-19T20:14:57Z,2019-06-26T23:14:58Z,MERGED,True,18,1,4,https://github.com/LemonBoy,/script reset can now also run the autorun scripts,2,[],https://github.com/irssi/irssi/pull/540,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/540,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,540,2016-09-11T15:06:46Z,2016-09-19T20:14:57Z,2019-06-26T23:14:58Z,MERGED,True,18,1,4,https://github.com/LemonBoy,/script reset can now also run the autorun scripts,2,[],https://github.com/irssi/irssi/pull/540,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/540#issuecomment-246188481,,"Ref #538
The code is ok, not sure if the feature belongs there but that's probably just me being reluctant to add features, i'll just let nei decide if it's ok.",True,{}
irssi/irssi,https://github.com/irssi/irssi,540,2016-09-11T15:06:46Z,2016-09-19T20:14:57Z,2019-06-26T23:14:58Z,MERGED,True,18,1,4,https://github.com/LemonBoy,/script reset can now also run the autorun scripts,2,[],https://github.com/irssi/irssi/pull/540,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/540#issuecomment-246832172,,@hintss can you test this,True,{}
irssi/irssi,https://github.com/irssi/irssi,542,2016-09-13T14:08:47Z,2016-09-22T15:10:34Z,2019-06-26T23:15:00Z,MERGED,True,30,5,3,https://github.com/LemonBoy,Expose the CAP fields to the perl scripts.,2,['enhancement'],https://github.com/irssi/irssi/pull/542,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/542,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,542,2016-09-13T14:08:47Z,2016-09-22T15:10:34Z,2019-06-26T23:15:00Z,MERGED,True,30,5,3,https://github.com/LemonBoy,Expose the CAP fields to the perl scripts.,2,['enhancement'],https://github.com/irssi/irssi/pull/542,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/542#issuecomment-246830658,,@dequis @grawity ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,542,2016-09-13T14:08:47Z,2016-09-22T15:10:34Z,2019-06-26T23:15:00Z,MERGED,True,30,5,3,https://github.com/LemonBoy,Expose the CAP fields to the perl scripts.,2,['enhancement'],https://github.com/irssi/irssi/pull/542,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/542#issuecomment-246867945,,"@ailin-nemui I would have pinged you, I'm not very familiar with these perl incantations.
But I guess you're just asking if it's okay to expose cap_complete, cap_supported and cap_active. Seems like a step in the right direction, sure.
Are those supposed to read-only?",True,{}
irssi/irssi,https://github.com/irssi/irssi,542,2016-09-13T14:08:47Z,2016-09-22T15:10:34Z,2019-06-26T23:15:00Z,MERGED,True,30,5,3,https://github.com/LemonBoy,Expose the CAP fields to the perl scripts.,2,['enhancement'],https://github.com/irssi/irssi/pull/542,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/542#issuecomment-246914236,,"Yes, you're supposed to use cap_toggle to add/remove some capabilities. But that's not exposed to the Perl side yet.",True,{}
irssi/irssi,https://github.com/irssi/irssi,542,2016-09-13T14:08:47Z,2016-09-22T15:10:34Z,2019-06-26T23:15:00Z,MERGED,True,30,5,3,https://github.com/LemonBoy,Expose the CAP fields to the perl scripts.,2,['enhancement'],https://github.com/irssi/irssi/pull/542,https://github.com/grawity,5,https://github.com/irssi/irssi/pull/542#issuecomment-246933940,,"Aside: When should scripts actually use cap_toggle? Will there be a signal after irssi receives CAP LS, and updates cap_supported, or after it receives CAP ACK and updates cap_active?",True,{}
irssi/irssi,https://github.com/irssi/irssi,542,2016-09-13T14:08:47Z,2016-09-22T15:10:34Z,2019-06-26T23:15:00Z,MERGED,True,30,5,3,https://github.com/LemonBoy,Expose the CAP fields to the perl scripts.,2,['enhancement'],https://github.com/irssi/irssi/pull/542,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/542#issuecomment-246955882,,"If you call cap_queue before the connection then the caps are just queued and batch-requested when a CAP LS arrivare, otherwise they're requested on the spot.
Same goes for removals, it should be pretty much DWIM.",True,{}
irssi/irssi,https://github.com/irssi/irssi,542,2016-09-13T14:08:47Z,2016-09-22T15:10:34Z,2019-06-26T23:15:00Z,MERGED,True,30,5,3,https://github.com/LemonBoy,Expose the CAP fields to the perl scripts.,2,['enhancement'],https://github.com/irssi/irssi/pull/542,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/542#issuecomment-247367674,,Looks like you're missing an #include for the last commit,True,{}
irssi/irssi,https://github.com/irssi/irssi,543,2016-09-13T15:11:43Z,2016-09-13T21:27:43Z,2016-09-13T21:27:47Z,MERGED,True,7,2,2,https://github.com/LemonBoy,Make sure to make a copy of ERRSV content.,1,[],https://github.com/irssi/irssi/pull/543,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/543,"Otherwise we might end up showing an empty message.
Fixes #522.","Otherwise we might end up showing an empty message.
Fixes #522.",True,{}
irssi/irssi,https://github.com/irssi/irssi,543,2016-09-13T15:11:43Z,2016-09-13T21:27:43Z,2016-09-13T21:27:47Z,MERGED,True,7,2,2,https://github.com/LemonBoy,Make sure to make a copy of ERRSV content.,1,[],https://github.com/irssi/irssi/pull/543,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/543#issuecomment-246830460,"Otherwise we might end up showing an empty message.
Fixes #522.",thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,544,2016-09-15T22:27:43Z,2016-09-15T23:17:31Z,2016-09-16T14:39:38Z,MERGED,True,15,0,1,https://github.com/ailin-nemui,some new tasks for travis,1,[],https://github.com/irssi/irssi/pull/544,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/544,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,546,2016-09-16T21:45:16Z,2016-09-16T21:51:10Z,2016-09-16T21:55:46Z,CLOSED,False,11,7,1,https://github.com/italocarlo06,Avoiding conditional directives that break statements.,1,[],https://github.com/irssi/irssi/pull/546,https://github.com/italocarlo06,1,https://github.com/irssi/irssi/pull/546,"A suggestion to compile entire statements and expressions, as suggested by code style guidelines from the Linux Kernel and practitioners.


It might improve code understanding, maintainability and error-proneness.","A suggestion to compile entire statements and expressions, as suggested by code style guidelines from the Linux Kernel and practitioners.


It might improve code understanding, maintainability and error-proneness.",True,{}
irssi/irssi,https://github.com/irssi/irssi,546,2016-09-16T21:45:16Z,2016-09-16T21:51:10Z,2016-09-16T21:55:46Z,CLOSED,False,11,7,1,https://github.com/italocarlo06,Avoiding conditional directives that break statements.,1,[],https://github.com/irssi/irssi/pull/546,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/546#issuecomment-247717470,"A suggestion to compile entire statements and expressions, as suggested by code style guidelines from the Linux Kernel and practitioners.


It might improve code understanding, maintainability and error-proneness.","I'm pretty sure this is a spambot
https://www.google.com/search?q=A+suggestion+to+compile+entire+statements+and+expressions,+as+suggested+by+code+style+guidelines+from+the+Linux+Kernel+and+practitioners.",True,{}
irssi/irssi,https://github.com/irssi/irssi,546,2016-09-16T21:45:16Z,2016-09-16T21:51:10Z,2016-09-16T21:55:46Z,CLOSED,False,11,7,1,https://github.com/italocarlo06,Avoiding conditional directives that break statements.,1,[],https://github.com/irssi/irssi/pull/546,https://github.com/italocarlo06,3,https://github.com/irssi/irssi/pull/546#issuecomment-247717948,"A suggestion to compile entire statements and expressions, as suggested by code style guidelines from the Linux Kernel and practitioners.


It might improve code understanding, maintainability and error-proneness.",No @dequis . It is not a spambot. We trying to submit patches based on our refactoring catalog to improve maintainability and code quality. We just used the same template of message. Reopen please,True,{}
irssi/irssi,https://github.com/irssi/irssi,546,2016-09-16T21:45:16Z,2016-09-16T21:51:10Z,2016-09-16T21:55:46Z,CLOSED,False,11,7,1,https://github.com/italocarlo06,Avoiding conditional directives that break statements.,1,[],https://github.com/irssi/irssi/pull/546,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/546#issuecomment-247718271,"A suggestion to compile entire statements and expressions, as suggested by code style guidelines from the Linux Kernel and practitioners.


It might improve code understanding, maintainability and error-proneness.",We already rejected one equivalent PR #347,True,{}
irssi/irssi,https://github.com/irssi/irssi,548,2016-09-22T02:21:36Z,2016-09-22T02:27:35Z,2016-09-22T02:27:37Z,MERGED,True,28,14,1,https://github.com/ailin-nemui,sync buf.pl,1,[],https://github.com/irssi/irssi/pull/548,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/548,,,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,551,2016-09-25T21:17:40Z,2016-09-26T13:44:47Z,2019-06-26T23:15:11Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,nullptr when doing module backward compat on invalid config,1,[],https://github.com/irssi/irssi/pull/551,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/551,Fixes #550,Fixes #550,True,{}
irssi/irssi,https://github.com/irssi/irssi,555,2016-10-01T11:47:46Z,2016-10-07T10:56:12Z,2016-10-07T10:56:12Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Make the cap_complete field unsigned.,1,[],https://github.com/irssi/irssi/pull/555,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/555,"Fixes a problem where the field would end up as a negative number when
exposed to the perl scripts.
And move it near the other bit-packed fields so we take advantage of the
packing.","Fixes a problem where the field would end up as a negative number when
exposed to the perl scripts.
And move it near the other bit-packed fields so we take advantage of the
packing.",True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,556,2016-10-04T23:02:41Z,2016-10-12T07:48:09Z,2016-10-12T07:48:09Z,MERGED,True,1,0,1,https://github.com/koollman,update INSTALL requirement: terminfo or ncurses for text frontend,1,[],https://github.com/irssi/irssi/pull/556,https://github.com/koollman,1,https://github.com/irssi/irssi/pull/556,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,556,2016-10-04T23:02:41Z,2016-10-12T07:48:09Z,2016-10-12T07:48:09Z,MERGED,True,1,0,1,https://github.com/koollman,update INSTALL requirement: terminfo or ncurses for text frontend,1,[],https://github.com/irssi/irssi/pull/556,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/556#issuecomment-252216387,,I would suggest changing it to terminfo only since we do not use curses,True,{}
irssi/irssi,https://github.com/irssi/irssi,556,2016-10-04T23:02:41Z,2016-10-12T07:48:09Z,2016-10-12T07:48:09Z,MERGED,True,1,0,1,https://github.com/koollman,update INSTALL requirement: terminfo or ncurses for text frontend,1,[],https://github.com/irssi/irssi/pull/556,https://github.com/koollman,3,https://github.com/irssi/irssi/pull/556#issuecomment-252248956,,"correct, but the dependancy name is still ncurses for debian-like and redhat-like distributions (and it is the package recommended by ./configure)",True,{}
irssi/irssi,https://github.com/irssi/irssi,556,2016-10-04T23:02:41Z,2016-10-12T07:48:09Z,2016-10-12T07:48:09Z,MERGED,True,1,0,1,https://github.com/koollman,update INSTALL requirement: terminfo or ncurses for text frontend,1,[],https://github.com/irssi/irssi/pull/556,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/556#issuecomment-252928220,,I think the dependency is libtinfo-dev for debian. still investigating this matter...,True,{}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/ahf,1,https://github.com/irssi/irssi/pull/557,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.","For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.",True,{'HEART': ['https://github.com/jvoisin']}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/557#issuecomment-254073407,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.","Fancy. The stuff in the commit log of 6ef3677 should probably be included somewhere in the documentation.
(Haven't looked at everything in depth yet.)",True,{}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/ahf,3,https://github.com/irssi/irssi/pull/557#issuecomment-254073702,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.",I didn't include it in NEWS (or elsewhere) since the output format of the openssl dgst command is wrong and cannot be put directly into the configuration files.,True,{}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/ahf,4,https://github.com/irssi/irssi/pull/557#issuecomment-255255607,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.",Should we do like OpenSSH and use base64 instead of base16 when displaying the fingerprints?,True,{}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/557#issuecomment-255289610,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.","Should we do like OpenSSH and use base64 instead of base16 when displaying the fingerprints?

Keep it hex. ZNC does it the same way, and it's how openssl shows it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/557#issuecomment-255291495,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.","I didn't include it in NEWS (or elsewhere) since the output format of the openssl dgst command is wrong and cannot be put directly into the configuration files.

How about these:
$ openssl s_client -connect chat.freenode.net:6697 < /dev/null 2>/dev/null | \
  openssl x509 > freenode.cert

$ openssl x509 -in freenode.cert -fingerprint -sha256 -noout 
SHA256 Fingerprint=CB:76:07:BB:D5:A4:9B:A5:9E:1F:BB:FD:BD:2B:85:33:20:C0:B5:AB:39:A1:20:CE:00:2D:8C:5E:AF:6D:30:DF

$ openssl x509 -in freenode.cert -pubkey -noout | \
  openssl pkey -pubin -outform der | \
  openssl dgst -sha256 -c | \
  tr a-z A-Z
(STDIN)= C1:11:88:85:5C:A8:9A:61:31:5B:27:C9:1D:1D:F6:C1:42:D5:39:05:61:36:99:EF:85:12:B2:D9:FD:08:5D:AF",True,{}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/557#issuecomment-255548946,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.","Did... github just flag the comment i just made as outdated?
Anyway the DANE entry in NEWS should probably have a couple of sentences from the commit log:

There wasn't enough support in the IRC community to push for this on the majority of bigger IRC networks. If you believe this should be reintroduced into irssi, then please come up with an implementation that does not rely on the libval library. It is causing a lot of troubles for our downstream maintainers.

Also, the commands in the log of the cert/pubkey pinning commit should be updated to match the NEWS stuff.",True,{}
irssi/irssi,https://github.com/irssi/irssi,557,2016-10-16T13:23:53Z,2016-10-31T14:15:45Z,2017-12-05T14:04:09Z,MERGED,True,1106,379,30,https://github.com/ahf,TLS enhancements,19,[],https://github.com/irssi/irssi/pull/557,https://github.com/ahf,8,https://github.com/irssi/irssi/pull/557#issuecomment-255552721,"For some reason Github decided not to update the original PR at #311 when I force pushed to the ahf/tls branch.
This is a cleaned up version of the initial patch-set from #311 with a few things changed:

We now support both pinning the x509 certificate and/or the subject public key information section of the certificate. This is especially useful for IRC networks that are adopting Lets Encrypt certificate where the public key remains the same for a long period, but the certificate is updated often.
I've fixed the changes that @dequis requested.

Let's try to get this in for some proper testing.","Cool. Everything should be OK here.
@ailin-nemui you get the last seal of approval and get to merge :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,562,2016-10-22T16:43:01Z,2018-09-15T09:31:14Z,2018-09-15T09:31:14Z,CLOSED,False,32,1,1,https://github.com/vague666,WIP to allow sasl_passwords to be moved to an external file... maybe use this for other password fields also?,5,['WIP'],https://github.com/irssi/irssi/pull/562,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/562,related to: #6,related to: #6,True,{}
irssi/irssi,https://github.com/irssi/irssi,562,2016-10-22T16:43:01Z,2018-09-15T09:31:14Z,2018-09-15T09:31:14Z,CLOSED,False,32,1,1,https://github.com/vague666,WIP to allow sasl_passwords to be moved to an external file... maybe use this for other password fields also?,5,['WIP'],https://github.com/irssi/irssi/pull/562,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/562#issuecomment-255548483,related to: #6,Not a fan of having special sequences in a password field but left a couple of comments on the code anyway.,True,{}
irssi/irssi,https://github.com/irssi/irssi,562,2016-10-22T16:43:01Z,2018-09-15T09:31:14Z,2018-09-15T09:31:14Z,CLOSED,False,32,1,1,https://github.com/vague666,WIP to allow sasl_passwords to be moved to an external file... maybe use this for other password fields also?,5,['WIP'],https://github.com/irssi/irssi/pull/562,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/562#issuecomment-345541320,related to: #6,@timofonic please don't do this until you want me to ban you,True,{}
irssi/irssi,https://github.com/irssi/irssi,565,2016-10-23T19:26:12Z,2016-11-29T21:13:53Z,2019-06-26T23:14:46Z,MERGED,True,2,11,3,https://github.com/ahf,Kill bell_beeps.,1,[],https://github.com/irssi/irssi/pull/565,https://github.com/ahf,1,https://github.com/irssi/irssi/pull/565,Fixes #524,Fixes #524,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,569,2016-10-27T12:20:13Z,2017-03-08T13:14:20Z,2017-03-08T17:57:46Z,CLOSED,False,23,1,3,https://github.com/LemonBoy,Collapse the list of nicks when possible.,1,"['needs testing', 'orphan']",https://github.com/irssi/irssi/pull/569,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/569,"When a single user changes the mode to a bunch of different users we
don't really have to print out the nick every time.
Partially solves #568, gives nicer messages overall","When a single user changes the mode to a bunch of different users we
don't really have to print out the nick every time.
Partially solves #568, gives nicer messages overall",True,{}
irssi/irssi,https://github.com/irssi/irssi,570,2016-10-27T15:26:44Z,2016-12-08T11:11:59Z,2019-06-26T23:15:14Z,MERGED,True,1,1,1,https://github.com/josephbisch,enforce check that chatnets are nodelists to handle invalid config,1,[],https://github.com/irssi/irssi/pull/570,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/570,"Closes #563
Please review. I decided to just avoid parsing the chatnet if its node is not a nodelist.","Closes #563
Please review. I decided to just avoid parsing the chatnet if its node is not a nodelist.",True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,573,2016-11-01T16:08:59Z,2016-11-02T12:24:21Z,2016-11-02T12:24:21Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,add missing inheritance to Exec item from 3532fc46,1,[],https://github.com/irssi/irssi/pull/573,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/573,fixes #572,fixes #572,True,"{'THUMBS_UP': ['https://github.com/dequis', 'https://github.com/LemonBoy']}"
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/lotheac,1,https://github.com/irssi/irssi/pull/574,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.","I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.",True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/574#issuecomment-259355436,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.","I like this!
But I wonder if we could approach the problem from another angle and make the completion configurable (thus allowing the user to disable it) like this:
if (completion_linestart_cmd[0] == '\0')
    return;
prefix = g_strdup_printf(""%c%s"", *cmdchars, completion_linestart_cmd);
I wonder if that might end up being useful for someone though.",True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/574#issuecomment-259356557,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.",Shouldn't there be a signal_stop(); before the return?,True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/lotheac,4,https://github.com/irssi/irssi/pull/574#issuecomment-259356888,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.","On Wed, Nov 09 2016 00:17:42 -0800, dx wrote:

Shouldn't there be a signal_stop(); before the return?

I'm not familiar enough with the irssi code to know that, but there
isn't one near line 669 either.

Lauri Tirkkonen | lotheac @ IRCnet",True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/lotheac,5,https://github.com/irssi/irssi/pull/574#issuecomment-259357028,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.","On Wed, Nov 09 2016 00:10:06 -0800, LemonBoy wrote:

I like this!
But I wonder if we could approach the problem from another angle and make the completion configurable (thus allowing the user to disable it) like this:
if (completion_linestart_cmd[0] == '0')
    return;
prefix = g_strdup_printf(""%c%s"", *cmdchars, completion_linestart_cmd);

I'm afraid I don't understand what you mean -- my patch does make it
configurable whether or not completion does anything on an empty line
(the default being to keep the current behavior). What exactly is
""completion_linestart_cmd"" here?

Lauri Tirkkonen | lotheac @ IRCnet",True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/lotheac,6,https://github.com/irssi/irssi/pull/574#issuecomment-259357352,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.","On Wed, Nov 09 2016 10:19:41 +0200, Lauri Tirkkonen wrote:

On Wed, Nov 09 2016 00:17:42 -0800, dx wrote:

Shouldn't there be a signal_stop(); before the return?

I'm not familiar enough with the irssi code to know that, but there
isn't one near line 669 either.

Actually based on the other returns in this function it looks like
signal_stop() is only called if *list is non-NULL, ie. if something was
found.

Lauri Tirkkonen | lotheac @ IRCnet",True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/ahf,7,https://github.com/irssi/irssi/pull/574#issuecomment-259834695,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.","I think this is a good idea.
I think that turning the completion command into something that is configurable for commands other than /MSG can be handled in an additional follow-up patch, if someone is up for working on it, but do not check if the first element of the completion_linestart_cmd char array is '0' as proposed. Instead check for whether it is '\0'.",True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/574#issuecomment-259929584,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.",anything wrong with this patch?,True,{}
irssi/irssi,https://github.com/irssi/irssi,574,2016-11-08T14:29:47Z,2016-11-11T11:18:35Z,2019-06-26T23:15:01Z,MERGED,True,5,1,1,https://github.com/lotheac,add completion_empty_line setting,1,[],https://github.com/irssi/irssi/pull/574,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/574#issuecomment-259931534,"I've been bitten a few times by trying to paste text beginning with a literal tab into a channel, only to have that text go to a query instead. I realized I don't actually want completion to do anything on an empty line, so here's a patch for an option to disable empty line completions.","Other than being completely untested, nothing.",True,{}
irssi/irssi,https://github.com/irssi/irssi,576,2016-11-17T16:23:02Z,2017-03-08T23:49:11Z,2021-10-11T20:56:42Z,CLOSED,False,10,1,1,https://github.com/dequis,Minimal message-tags handling - just skip the @ part,1,['orphan'],https://github.com/irssi/irssi/pull/576,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/576,"This adds support for the ircv3.2 message-tags wire format without
actually parsing any of the tags or adding any interface to process them
(other than the 'server incoming' signal).
The API for this stuff can be decided later.

""""""Formal proof of correctness"""""":

AFL test case: http://dump.dequis.org/JxPOI.txt
Dirty bitlbee patch to send tags in every line: http://dump.dequis.org/A5dME.txt","This adds support for the ircv3.2 message-tags wire format without
actually parsing any of the tags or adding any interface to process them
(other than the 'server incoming' signal).
The API for this stuff can be decided later.

""""""Formal proof of correctness"""""":

AFL test case: http://dump.dequis.org/JxPOI.txt
Dirty bitlbee patch to send tags in every line: http://dump.dequis.org/A5dME.txt",True,{}
irssi/irssi,https://github.com/irssi/irssi,576,2016-11-17T16:23:02Z,2017-03-08T23:49:11Z,2021-10-11T20:56:42Z,CLOSED,False,10,1,1,https://github.com/dequis,Minimal message-tags handling - just skip the @ part,1,['orphan'],https://github.com/irssi/irssi/pull/576,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/576#issuecomment-268536905,"This adds support for the ircv3.2 message-tags wire format without
actually parsing any of the tags or adding any interface to process them
(other than the 'server incoming' signal).
The API for this stuff can be decided later.

""""""Formal proof of correctness"""""":

AFL test case: http://dump.dequis.org/JxPOI.txt
Dirty bitlbee patch to send tags in every line: http://dump.dequis.org/A5dME.txt",I would like to see actual use case implementation before proceeding here...,True,{}
irssi/irssi,https://github.com/irssi/irssi,576,2016-11-17T16:23:02Z,2017-03-08T23:49:11Z,2021-10-11T20:56:42Z,CLOSED,False,10,1,1,https://github.com/dequis,Minimal message-tags handling - just skip the @ part,1,['orphan'],https://github.com/irssi/irssi/pull/576,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/576#issuecomment-285208210,"This adds support for the ircv3.2 message-tags wire format without
actually parsing any of the tags or adding any interface to process them
(other than the 'server incoming' signal).
The API for this stuff can be decided later.

""""""Formal proof of correctness"""""":

AFL test case: http://dump.dequis.org/JxPOI.txt
Dirty bitlbee patch to send tags in every line: http://dump.dequis.org/A5dME.txt",I'll work on a full implementation later.,True,{}
irssi/irssi,https://github.com/irssi/irssi,577,2016-11-23T15:17:56Z,2016-11-25T20:52:42Z,2016-11-25T20:52:42Z,MERGED,True,11,8,2,https://github.com/LemonBoy,Minor corrections to the netsplit code.,2,[],https://github.com/irssi/irssi/pull/577,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/577,Possibly solving #567,Possibly solving #567,True,{}
irssi/irssi,https://github.com/irssi/irssi,577,2016-11-23T15:17:56Z,2016-11-25T20:52:42Z,2016-11-25T20:52:42Z,MERGED,True,11,8,2,https://github.com/LemonBoy,Minor corrections to the netsplit code.,2,[],https://github.com/irssi/irssi/pull/577,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/577#issuecomment-262573459,Possibly solving #567,"No improvement
Here, have a ""test case"":
:localhost 001 dx|jabber :Welcome to the BitlBee gateway, dx|jabber
:dx|jabber!dx@localhost JOIN :&bitlbee
:dx!dx@jabber.example.org JOIN :&bitlbee
:someone!someone@example.com JOIN :&bitlbee
:dx2!dx@example.net JOIN :&bitlbee

:root!root@localhost PRIVMSG &bitlbee :jabber - Signing off..
:someone!someone@example.com QUIT :*.net *.split
:dx2!dx@example.net QUIT :*.net *.split
:dx!dx@jabber.example.org QUIT :*.net *.split
PONG

:root!root@localhost PRIVMSG &bitlbee :jabber - Logging in: Connecting
:root!root@localhost PRIVMSG &bitlbee :jabber - Logging in: Logged in
:dx!dx@jabber.example.org JOIN :&bitlbee
:someone!someone@example.com JOIN :&bitlbee
:dx2!dx@example.net JOIN :&bitlbee
PONG

nc -l -p 6667, connect irssi, copy/paste each section of the above into that netcat, pausing between each to let any timeouts do their thing. First section logs in, second section shows netsplits, third section should show netjoins.",True,{}
irssi/irssi,https://github.com/irssi/irssi,578,2016-11-23T15:24:30Z,2016-11-25T20:52:30Z,2019-06-26T23:15:16Z,MERGED,True,12,3,1,https://github.com/ailin-nemui,add a static buffer for dcc received data,1,[],https://github.com/irssi/irssi/pull/578,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/578,increased buffersize might make irssi freeze less / #159,increased buffersize might make irssi freeze less / #159,True,{}
irssi/irssi,https://github.com/irssi/irssi,579,2016-11-27T21:58:15Z,2016-11-29T21:26:45Z,2016-11-29T21:33:32Z,MERGED,True,1,1,1,https://github.com/mmuman,Check for socket() in libnetwork for Haiku,1,[],https://github.com/irssi/irssi/pull/579,https://github.com/mmuman,1,https://github.com/irssi/irssi/pull/579,"Since the time of #106 it seems the ncurses checks have been dropped, so this is all that's left from the required changed to build on Haiku.","Since the time of #106 it seems the ncurses checks have been dropped, so this is all that's left from the required changed to build on Haiku.",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/581,"An assertion failure is better than a segfault.
This complements #570","An assertion failure is better than a segfault.
This complements #570",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/581#issuecomment-263716740,"An assertion failure is better than a segfault.
This complements #570","imo the config file should be fixed up instead and g_critical be thrown, similar to https://github.com/irssi/irssi/blob/master/src/lib-config/set.c#L108
not exactly sure what needs to be taken care of since in this case we need to fix parent and mainnode",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/581#issuecomment-263718532,"An assertion failure is better than a segfault.
This complements #570","imo the config file should be fixed up

How can we fix something that wasn't intended to make sense? This thing is just the result of fuzzing, not actual user mistakes.",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/581#issuecomment-263720354,"An assertion failure is better than a segfault.
This complements #570","That doesn't really matter, we have had users accidentally corrupt their config files quite similarly to the fuzz. By fix in this case I mean removing and overwriting the incorrect node with a fresh one of correct type. Otherwise settings would be permanently broken

Am 29. November 2016 23:19:53 MEZ, schrieb dx <notifications@github.com>:
…
>imo the config file should be fixed up

How can we fix something that wasn't intended to make sense? This thing
is just the result of fuzzing, not actual user mistakes.

--
You are receiving this because you commented.
Reply to this email directly or view it on GitHub:
#581 (comment)


-- 
Diese Nachricht wurde von meinem Android-Mobiltelefon mit K-9 Mail gesendet.",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/581#issuecomment-263724684,"An assertion failure is better than a segfault.
This complements #570","Fair enough.
So i tested with this config
chatnets{0 0

And applying both this PR and the other one results in these visible errors:
Error: Ignored errors in configuration file:
Error: /home/dx/test/irssi/irssi/con:1: Warning: missing '='
Error: /home/dx/test/irssi/irssi/con:1: Warning: missing '='
Error: /home/dx/test/irssi/irssi/con:2: Warning: missing ';'
Error: /home/dx/test/irssi/irssi/con:2: error: unexpected end of file, expected character '}'
Error:

And it saves to:
chatnets = { 0 = ""0""; };
settings = {
  core = { real_name = ""dequis""; user_name = ""dx""; nick = ""dx""; };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};

Which loads just fine afterwards.
So, merge both?",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/581#issuecomment-263726949,"An assertion failure is better than a segfault.
This complements #570","new commit

Well this is awkward.
No visible change in behavior compared to the configs in my previous comment. A breakpoint in line 102 (the g_critical() one) is never hit. It's possible that this PR might have nothing to do with the thing I tested.",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/LemonBoy,7,https://github.com/irssi/irssi/pull/581#issuecomment-263727765,"An assertion failure is better than a segfault.
This complements #570","The second commit tries to save the date by nuking the parent node and re-creating it in place as a list/block one. I'm not 100% sold on the usefulness of this approach since we're substituting a broken and syntactically invalid configuration with a now syntactically-valid but possibly still broken one.
eg. the code can't do much when the parent key is wrong
I'm using the following snippet as test vector
0 0
chatnets{0""""",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/581#issuecomment-263863332,"An assertion failure is better than a segfault.
This complements #570","it doesn't work properly for some reason (probably a thought error on my side)
starting with
0 0
chatnets{""""0

turns into
0 = ""0"";
chatnets = {  = { type = ""IRC""; }; };

on first run and into
0 = ""0"";
chatnets = { type = { type = ""IRC""; }; };

on 2nd
with no empty key (i.e. chatnets{0"""") it works more stable, resulting in
0 = ""0"";
chatnets = { 0 = { type = ""IRC""; }; };

on first try. on another topic, on the initial config read, g_critical should stop irssi from starting up so you get a chance to fix your config. but this operation seems to happen after I already lowered the priority and the screen has been initialized, so the warning only blinks for a second before being replaced by the TUI
so maybe we should just revert to your initial suggestion :$",True,{}
irssi/irssi,https://github.com/irssi/irssi,581,2016-11-29T22:09:30Z,2016-12-08T11:29:52Z,2019-06-26T23:15:13Z,MERGED,True,2,0,1,https://github.com/LemonBoy,Enforce the is_node_list contract in lib-config setters.,1,[],https://github.com/irssi/irssi/pull/581,https://github.com/LemonBoy,9,https://github.com/irssi/irssi/pull/581#issuecomment-263865379,"An assertion failure is better than a segfault.
This complements #570","(It does output the 2nd snippet for me, after a load + /quit cycle)
That's my point, it can't work, hence my suggestion to merge the 1st commit /and/ #570",True,{}
irssi/irssi,https://github.com/irssi/irssi,585,2016-12-12T20:08:20Z,2017-01-03T11:45:50Z,2017-01-03T11:45:54Z,MERGED,True,188,65,3,https://github.com/ailin-nemui,g_sequence backing for window list,7,['needs testing'],https://github.com/irssi/irssi/pull/585,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/585,improve performance for #583,improve performance for #583,True,{}
irssi/irssi,https://github.com/irssi/irssi,585,2016-12-12T20:08:20Z,2017-01-03T11:45:50Z,2017-01-03T11:45:54Z,MERGED,True,188,65,3,https://github.com/ailin-nemui,g_sequence backing for window list,7,['needs testing'],https://github.com/irssi/irssi/pull/585,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/585#issuecomment-268077972,improve performance for #583,I implemented some of your suggestions,True,{}
irssi/irssi,https://github.com/irssi/irssi,585,2016-12-12T20:08:20Z,2017-01-03T11:45:50Z,2017-01-03T11:45:54Z,MERGED,True,188,65,3,https://github.com/ailin-nemui,g_sequence backing for window list,7,['needs testing'],https://github.com/irssi/irssi/pull/585,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/585#issuecomment-268343721,improve performance for #583,I added your other suggestions except for the asserts which I think aren't needed here,True,{}
irssi/irssi,https://github.com/irssi/irssi,585,2016-12-12T20:08:20Z,2017-01-03T11:45:50Z,2017-01-03T11:45:54Z,MERGED,True,188,65,3,https://github.com/ailin-nemui,g_sequence backing for window list,7,['needs testing'],https://github.com/irssi/irssi/pull/585,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/585#issuecomment-268353725,improve performance for #583,do you like it better now,True,{}
irssi/irssi,https://github.com/irssi/irssi,586,2016-12-15T14:34:40Z,2017-01-02T13:44:08Z,2019-06-26T23:15:18Z,MERGED,True,7,16,2,https://github.com/LemonBoy,Process the nick changes in queries before the PRIVMSG is handled.,1,[],https://github.com/irssi/irssi/pull/586,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/586,"The event privmsg handler in irc-queries.c kicks in too late and renames the query so the privmsg ends up in the wrong window.
Tested with a local ratbox instance, had a lengthy conversation between me and myself over two irssi instances.
PS: We might need something for the CTCP too.","The event privmsg handler in irc-queries.c kicks in too late and renames the query so the privmsg ends up in the wrong window.
Tested with a local ratbox instance, had a lengthy conversation between me and myself over two irssi instances.
PS: We might need something for the CTCP too.",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,586,2016-12-15T14:34:40Z,2017-01-02T13:44:08Z,2019-06-26T23:15:18Z,MERGED,True,7,16,2,https://github.com/LemonBoy,Process the nick changes in queries before the PRIVMSG is handled.,1,[],https://github.com/irssi/irssi/pull/586,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/586#issuecomment-267344694,"The event privmsg handler in irc-queries.c kicks in too late and renames the query so the privmsg ends up in the wrong window.
Tested with a local ratbox instance, had a lengthy conversation between me and myself over two irssi instances.
PS: We might need something for the CTCP too.",any idea about the query_change_address code path which may now not be executed?,True,{}
irssi/irssi,https://github.com/irssi/irssi,586,2016-12-15T14:34:40Z,2017-01-02T13:44:08Z,2019-06-26T23:15:18Z,MERGED,True,7,16,2,https://github.com/LemonBoy,Process the nick changes in queries before the PRIVMSG is handled.,1,[],https://github.com/irssi/irssi/pull/586,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/586#issuecomment-267346437,"The event privmsg handler in irc-queries.c kicks in too late and renames the query so the privmsg ends up in the wrong window.
Tested with a local ratbox instance, had a lengthy conversation between me and myself over two irssi instances.
PS: We might need something for the CTCP too.","I think we can just add that check too, g_strcmp0(query->address, address) should suffice if I'm not mistaken. I didn't add it right away because I couldn't find a quick way to test that path and ran out of time ¯\_(ツ)_/¯",True,{}
irssi/irssi,https://github.com/irssi/irssi,587,2016-12-15T16:01:06Z,2016-12-21T14:28:18Z,2019-06-26T23:15:12Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,add assertion to statusbar_read_group,1,[],https://github.com/irssi/irssi/pull/587,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/587,fix #564,fix #564,True,{}
irssi/irssi,https://github.com/irssi/irssi,587,2016-12-15T16:01:06Z,2016-12-21T14:28:18Z,2019-06-26T23:15:12Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,add assertion to statusbar_read_group,1,[],https://github.com/irssi/irssi/pull/587,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/587#issuecomment-267366181,fix #564,"Is this the sort of g_critical assertion that is supposed to stop the config from loading?
It fixes the issue but the error message goes to stderr and is only visible after /quit switches back from the alternate screen.
(edit: not a blocker, as i think the other fixes had the same issue, just curious)",True,{}
irssi/irssi,https://github.com/irssi/irssi,587,2016-12-15T16:01:06Z,2016-12-21T14:28:18Z,2019-06-26T23:15:12Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,add assertion to statusbar_read_group,1,[],https://github.com/irssi/irssi/pull/587,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/587#issuecomment-267367707,fix #564,thanks for testing. I believe there was a reason for restoring the loglev (in irssi.c) before finishing the textui. but I can't remember :-(,True,{}
irssi/irssi,https://github.com/irssi/irssi,588,2016-12-15T16:06:56Z,2016-12-15T18:57:58Z,2017-01-10T08:34:07Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,reset background for mirc colour 99,1,[],https://github.com/irssi/irssi/pull/588,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/588,fix #571,fix #571,True,{}
irssi/irssi,https://github.com/irssi/irssi,588,2016-12-15T16:06:56Z,2016-12-15T18:57:58Z,2017-01-10T08:34:07Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,reset background for mirc colour 99,1,[],https://github.com/irssi/irssi/pull/588,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/588#issuecomment-267410577,fix #571,Works just fine!,True,{}
irssi/irssi,https://github.com/irssi/irssi,589,2016-12-15T23:24:22Z,2017-07-26T09:34:37Z,2019-06-26T23:12:29Z,CLOSED,False,3250,42,25,https://github.com/ahf,"""Native"" OTR Support",7,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/589,https://github.com/ahf,1,https://github.com/irssi/irssi/pull/589,"This is a slightly different PR than our usual, small, PR contributions. This PR imports the code from the irssi OTR plug-in made by David Goulet, Uli Meis and with contributions from the rest of the irssi-OTR community.
Ignore the README.otr file for now, those changes can come as we go and will just make the experience better. I'll zap this file before we eventually merge this.","This is a slightly different PR than our usual, small, PR contributions. This PR imports the code from the irssi OTR plug-in made by David Goulet, Uli Meis and with contributions from the rest of the irssi-OTR community.
Ignore the README.otr file for now, those changes can come as we go and will just make the experience better. I'll zap this file before we eventually merge this.",True,{}
irssi/irssi,https://github.com/irssi/irssi,589,2016-12-15T23:24:22Z,2017-07-26T09:34:37Z,2019-06-26T23:12:29Z,CLOSED,False,3250,42,25,https://github.com/ahf,"""Native"" OTR Support",7,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/589,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/589#issuecomment-269974118,"This is a slightly different PR than our usual, small, PR contributions. This PR imports the code from the irssi OTR plug-in made by David Goulet, Uli Meis and with contributions from the rest of the irssi-OTR community.
Ignore the README.otr file for now, those changes can come as we go and will just make the experience better. I'll zap this file before we eventually merge this.","maybe commit these fixes to the upstream module first (even if it is going to be substituted by this)
set want_otr to module if otr lib is found (like perl)
backport libotr into travis environment so we get compile coverage

I won't review the individual otr code but it's fair to assume that we can accept it as long as you can maintain it",True,{}
irssi/irssi,https://github.com/irssi/irssi,589,2016-12-15T23:24:22Z,2017-07-26T09:34:37Z,2019-06-26T23:12:29Z,CLOSED,False,3250,42,25,https://github.com/ahf,"""Native"" OTR Support",7,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/589,https://github.com/ahf,3,https://github.com/irssi/irssi/pull/589#issuecomment-280920589,"This is a slightly different PR than our usual, small, PR contributions. This PR imports the code from the irssi OTR plug-in made by David Goulet, Uli Meis and with contributions from the rest of the irssi-OTR community.
Ignore the README.otr file for now, those changes can come as we go and will just make the experience better. I'll zap this file before we eventually merge this.","I'll hear if upstream is interested in that. I suspect not though, since this is pretty much their way out of maintaining it :-)
Hm. I'm not sure this is a good idea. From my days doing packages and architecture work with Gentoo we always highly disliked these ""magical"" dependencies that are auto-discovered. Auto-discovery means that if I, as a package maintainer, misses that it does auto-detection by default I might end up with a dependency that Irssi adds to itself, but which isn't ""encoded"" in my package description.
Agreed. Will fix.",True,{}
irssi/irssi,https://github.com/irssi/irssi,589,2016-12-15T23:24:22Z,2017-07-26T09:34:37Z,2019-06-26T23:12:29Z,CLOSED,False,3250,42,25,https://github.com/ahf,"""Native"" OTR Support",7,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/589,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/589#issuecomment-280924088,"This is a slightly different PR than our usual, small, PR contributions. This PR imports the code from the irssi OTR plug-in made by David Goulet, Uli Meis and with contributions from the rest of the irssi-OTR community.
Ignore the README.otr file for now, those changes can come as we go and will just make the experience better. I'll zap this file before we eventually merge this.","backport libotr into travis environment so we get compile coverage

https://github.com/bitlbee/bitlbee/blob/3.5.1/.travis.yml#L9-L20
Hacky but travis-built packages don't get uploaded anywhere, so it doesn't matter. Also doesn't require sudo. You can skip the debian parts.
Nowadays you could just tell travis to use ubuntu 14.04, but i like keeping it in 12.04 to ensure old libraries don't break the build.",True,{}
irssi/irssi,https://github.com/irssi/irssi,589,2016-12-15T23:24:22Z,2017-07-26T09:34:37Z,2019-06-26T23:12:29Z,CLOSED,False,3250,42,25,https://github.com/ahf,"""Native"" OTR Support",7,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/589,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/589#issuecomment-318002276,"This is a slightly different PR than our usual, small, PR contributions. This PR imports the code from the irssi OTR plug-in made by David Goulet, Uli Meis and with contributions from the rest of the irssi-OTR community.
Ignore the README.otr file for now, those changes can come as we go and will just make the experience better. I'll zap this file before we eventually merge this.",@ahf please reopen once ready,True,{}
irssi/irssi,https://github.com/irssi/irssi,590,2016-12-18T14:48:23Z,2017-01-31T13:18:49Z,2019-06-26T23:14:30Z,MERGED,True,5,10,1,https://github.com/LemonBoy,Minor cleanup in the highlighting signal.,1,[],https://github.com/irssi/irssi/pull/590,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/590,¯\_(ツ)_/¯,¯\_(ツ)_/¯,True,{}
irssi/irssi,https://github.com/irssi/irssi,593,2016-12-22T14:40:54Z,2017-01-02T13:39:30Z,2017-01-02T13:39:31Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Welcome TheLemonMan on board,1,[],https://github.com/irssi/irssi/pull/593,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/593,as requested by our lord and saviour @ahf 🎉,as requested by our lord and saviour @ahf 🎉,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,593,2016-12-22T14:40:54Z,2017-01-02T13:39:30Z,2017-01-02T13:39:31Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Welcome TheLemonMan on board,1,[],https://github.com/irssi/irssi/pull/593,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/593#issuecomment-268818695,as requested by our lord and saviour @ahf 🎉,how about a proper commit message,True,{}
irssi/irssi,https://github.com/irssi/irssi,593,2016-12-22T14:40:54Z,2017-01-02T13:39:30Z,2017-01-02T13:39:31Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Welcome TheLemonMan on board,1,[],https://github.com/irssi/irssi/pull/593,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/593#issuecomment-268821860,as requested by our lord and saviour @ahf 🎉,Upvoted,True,{}
irssi/irssi,https://github.com/irssi/irssi,593,2016-12-22T14:40:54Z,2017-01-02T13:39:30Z,2017-01-02T13:39:31Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Welcome TheLemonMan on board,1,[],https://github.com/irssi/irssi/pull/593,https://github.com/GeertHauwaerts,4,https://github.com/irssi/irssi/pull/593#issuecomment-268890627,as requested by our lord and saviour @ahf 🎉,,True,{}
irssi/irssi,https://github.com/irssi/irssi,593,2016-12-22T14:40:54Z,2017-01-02T13:39:30Z,2017-01-02T13:39:31Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Welcome TheLemonMan on board,1,[],https://github.com/irssi/irssi/pull/593,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/593#issuecomment-268933135,as requested by our lord and saviour @ahf 🎉,It's funny because lemon's last PR broke everything except what he tested.,True,{}
irssi/irssi,https://github.com/irssi/irssi,593,2016-12-22T14:40:54Z,2017-01-02T13:39:30Z,2017-01-02T13:39:31Z,MERGED,True,1,1,1,https://github.com/LemonBoy,Welcome TheLemonMan on board,1,[],https://github.com/irssi/irssi/pull/593,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/593#issuecomment-268952293,as requested by our lord and saviour @ahf 🎉,"wait, what?",True,{}
irssi/irssi,https://github.com/irssi/irssi,594,2016-12-23T17:06:13Z,2017-01-02T13:39:02Z,2017-01-02T13:39:02Z,MERGED,True,4,1,1,https://github.com/LemonBoy,Make sure SASL was actually requested before failing.,1,[],https://github.com/irssi/irssi/pull/594,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/594,"Tested against Efnet and Freenode, 10/10 would test again","Tested against Efnet and Freenode, 10/10 would test again",True,{'THUMBS_UP': ['https://github.com/grawity']}
irssi/irssi,https://github.com/irssi/irssi,602,2017-01-06T11:34:22Z,2017-01-06T11:44:03Z,2018-01-10T11:52:59Z,MERGED,True,4,4,4,https://github.com/McDutchie,make irssi --with-perl build with separate object directory,1,[],https://github.com/irssi/irssi/pull/602,https://github.com/McDutchie,1,https://github.com/irssi/irssi/pull/602,irssi 1.0.0 will not build if Perl is enabled and a separate object code directory is used. The problem is a relative path to an internal Perl dependency in four Makefile.PL.in files. This commit fixes the problem by making these paths absolute using @top_srcdir@.,irssi 1.0.0 will not build if Perl is enabled and a separate object code directory is used. The problem is a relative path to an internal Perl dependency in four Makefile.PL.in files. This commit fixes the problem by making these paths absolute using @top_srcdir@.,True,{}
irssi/irssi,https://github.com/irssi/irssi,602,2017-01-06T11:34:22Z,2017-01-06T11:44:03Z,2018-01-10T11:52:59Z,MERGED,True,4,4,4,https://github.com/McDutchie,make irssi --with-perl build with separate object directory,1,[],https://github.com/irssi/irssi/pull/602,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/602#issuecomment-270888293,irssi 1.0.0 will not build if Perl is enabled and a separate object code directory is used. The problem is a relative path to an internal Perl dependency in four Makefile.PL.in files. This commit fixes the problem by making these paths absolute using @top_srcdir@.,Thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,603,2017-01-06T14:28:25Z,2017-01-06T16:08:07Z,2018-01-10T11:52:59Z,MERGED,True,4,4,1,https://github.com/dequis,NEWS: Avoid explicitly mentioning freenode in the pinning examples,1,[],https://github.com/irssi/irssi/pull/603,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/603,"They have proper certs, so using them as an example is wrong.
Particularly worse since they started using letsencrypt recently so
every server has a different cert and pubkey.
We'll figure out how to link this from the release notes later.","They have proper certs, so using them as an example is wrong.
Particularly worse since they started using letsencrypt recently so
every server has a different cert and pubkey.
We'll figure out how to link this from the release notes later.",True,{}
irssi/irssi,https://github.com/irssi/irssi,603,2017-01-06T14:28:25Z,2017-01-06T16:08:07Z,2018-01-10T11:52:59Z,MERGED,True,4,4,1,https://github.com/dequis,NEWS: Avoid explicitly mentioning freenode in the pinning examples,1,[],https://github.com/irssi/irssi/pull/603,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/603#issuecomment-270929133,"They have proper certs, so using them as an example is wrong.
Particularly worse since they started using letsencrypt recently so
every server has a different cert and pubkey.
We'll figure out how to link this from the release notes later.",you can edit the release notes on github releases post factum and you can edit the link on the website. please commit this to a maint/1.0.0 branch,True,{}
irssi/irssi,https://github.com/irssi/irssi,603,2017-01-06T14:28:25Z,2017-01-06T16:08:07Z,2018-01-10T11:52:59Z,MERGED,True,4,4,1,https://github.com/dequis,NEWS: Avoid explicitly mentioning freenode in the pinning examples,1,[],https://github.com/irssi/irssi/pull/603,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/603#issuecomment-270936500,"They have proper certs, so using them as an example is wrong.
Particularly worse since they started using letsencrypt recently so
every server has a different cert and pubkey.
We'll figure out how to link this from the release notes later.","Done: pushed maint/1.0.0 which currently is the same as 1.0.0, rebased this PR to that, changed the base in github to that, updated github release notes with the same thing as this.
Next: Merging this commit to that branch, and the release notes can be changed to point to NEWS in maint/1.0.0 instead of the 1.0.0 tag. Ack?",True,{}
irssi/irssi,https://github.com/irssi/irssi,603,2017-01-06T14:28:25Z,2017-01-06T16:08:07Z,2018-01-10T11:52:59Z,MERGED,True,4,4,1,https://github.com/dequis,NEWS: Avoid explicitly mentioning freenode in the pinning examples,1,[],https://github.com/irssi/irssi/pull/603,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/603#issuecomment-270937041,"They have proper certs, so using them as an example is wrong.
Particularly worse since they started using letsencrypt recently so
every server has a different cert and pubkey.
We'll figure out how to link this from the release notes later.",Yes you can link to https://raw.githubusercontent.com/irssi/irssi/maint/1.0.0/NEWS on the website. (edit: fixed link),True,{}
irssi/irssi,https://github.com/irssi/irssi,603,2017-01-06T14:28:25Z,2017-01-06T16:08:07Z,2018-01-10T11:52:59Z,MERGED,True,4,4,1,https://github.com/dequis,NEWS: Avoid explicitly mentioning freenode in the pinning examples,1,[],https://github.com/irssi/irssi/pull/603,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/603#issuecomment-270938271,"They have proper certs, so using them as an example is wrong.
Particularly worse since they started using letsencrypt recently so
every server has a different cert and pubkey.
We'll figure out how to link this from the release notes later.","Done irssi/irssi.github.io@3bfa09e
https://irssi.org/2017/01/05/irssi-1.0.0-released/",True,{}
irssi/irssi,https://github.com/irssi/irssi,604,2017-01-06T14:51:09Z,2017-01-06T15:37:10Z,2018-01-10T11:52:59Z,MERGED,True,6,0,1,https://github.com/dequis,"Add OPENSSL_NO_EC for solaris 11.3, see issue #598",1,[],https://github.com/irssi/irssi/pull/604,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/604,"Original patch by 'Slarky'
According to that ticket, the next major version of solaris won't need
this. Consider reverting this when solaris 11.3 stops being relevant.
Fixes #598","Original patch by 'Slarky'
According to that ticket, the next major version of solaris won't need
this. Consider reverting this when solaris 11.3 stops being relevant.
Fixes #598",True,{}
irssi/irssi,https://github.com/irssi/irssi,605,2017-01-06T15:51:41Z,2017-01-07T21:00:00Z,2017-01-07T21:00:00Z,MERGED,True,6,0,1,https://github.com/dequis,Don't reset wait_cmd during connection registration (fixes early ISON),1,[],https://github.com/irssi/irssi/pull/605,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/605,Fixes #596,Fixes #596,True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,None,1,https://github.com/irssi/irssi/pull/606,Fix syntax on /help SERVER resolve issue #519,Fix syntax on /help SERVER resolve issue #519,True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/606#issuecomment-270935050,Fix syntax on /help SERVER resolve issue #519,thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/606#issuecomment-270935348,Fix syntax on /help SERVER resolve issue #519,Actually that's valid syntax to modify the port of an existing server,True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/606#issuecomment-270935679,Fix syntax on /help SERVER resolve issue #519,Eh nevermind this was mentioned in the other ticket. But I don't think this change clarifies that,True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,None,5,https://github.com/irssi/irssi/pull/606#issuecomment-270937862,Fix syntax on /help SERVER resolve issue #519,"@dequis, you're right. Maybe we should add ""-port 6667"" to /SERVER MODIFY example?",True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/606#issuecomment-270938371,Fix syntax on /help SERVER resolve issue #519,"we need to double check if irssi has a bug in not actually allowing to add multiple same named servers with different ports
iirc the syntax is supposed to be /server -modify newport servername oldport, but /server add only supports /server add servername port
maybe server add should also be fixed to accept -port?",True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,None,7,https://github.com/irssi/irssi/pull/606#issuecomment-270939425,Fix syntax on /help SERVER resolve issue #519,"I tried to add server with same name but different port. Irssi just says ""18:15 -!- Irssi: Server orwell.freenode.net saved"" but still doesn't do anything. It doesn't modify old entry or add new one.
I think it would be most logical solution to fix server add and then revert this pr.",True,{}
irssi/irssi,https://github.com/irssi/irssi,606,2017-01-06T15:56:54Z,2017-01-06T16:00:09Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,None,Fix syntax on /help SERVER example,1,[],https://github.com/irssi/irssi/pull/606,None,8,https://github.com/irssi/irssi/pull/606#issuecomment-270955033,Fix syntax on /help SERVER resolve issue #519,@ailin-nemui I did some more tinkering around and now have branch where server add accept -port (https://github.com/or4n/irssi/tree/server-add-cmd). Do you think I should make PR from that?,True,{}
irssi/irssi,https://github.com/irssi/irssi,608,2017-01-07T06:00:25Z,2017-01-08T20:55:42Z,2018-01-10T11:52:59Z,MERGED,True,2,1,1,https://github.com/tijko,Follow g_strsplit with call to g_strfreev,1,[],https://github.com/irssi/irssi/pull/608,https://github.com/tijko,1,https://github.com/irssi/irssi/pull/608,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,608,2017-01-07T06:00:25Z,2017-01-08T20:55:42Z,2018-01-10T11:52:59Z,MERGED,True,2,1,1,https://github.com/tijko,Follow g_strsplit with call to g_strfreev,1,[],https://github.com/irssi/irssi/pull/608,https://github.com/tijko,2,https://github.com/irssi/irssi/pull/608#issuecomment-271110499,,I made the edit and squashed the commits into one,True,{}
irssi/irssi,https://github.com/irssi/irssi,610,2017-01-08T01:09:24Z,2017-01-12T23:16:31Z,2019-06-26T23:14:14Z,MERGED,True,273,1,6,https://github.com/josephbisch,Add frontend for fuzzing,3,['auto-merge'],https://github.com/irssi/irssi/pull/610,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/610,"Use the following configure command:
$ ./configure --with-fuzzer --with-fuzzer-lib=/path/to/libFuzzer.a 
CC=clang CXX=clang++
Places an irssi-fuzz in src/fe-fuzz/ after build.
Also can specify SANFLAGS to override the chosen sanitizer flags
(defaults to ""-g -fsanitize=address -fsanitize-coverage=trace-pc-guard"").","Use the following configure command:
$ ./configure --with-fuzzer --with-fuzzer-lib=/path/to/libFuzzer.a 
CC=clang CXX=clang++
Places an irssi-fuzz in src/fe-fuzz/ after build.
Also can specify SANFLAGS to override the chosen sanitizer flags
(defaults to ""-g -fsanitize=address -fsanitize-coverage=trace-pc-guard"").",True,{'HOORAY': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,610,2017-01-08T01:09:24Z,2017-01-12T23:16:31Z,2019-06-26T23:14:14Z,MERGED,True,273,1,6,https://github.com/josephbisch,Add frontend for fuzzing,3,['auto-merge'],https://github.com/irssi/irssi/pull/610,https://github.com/josephbisch,2,https://github.com/irssi/irssi/pull/610#issuecomment-272314005,"Use the following configure command:
$ ./configure --with-fuzzer --with-fuzzer-lib=/path/to/libFuzzer.a 
CC=clang CXX=clang++
Places an irssi-fuzz in src/fe-fuzz/ after build.
Also can specify SANFLAGS to override the chosen sanitizer flags
(defaults to ""-g -fsanitize=address -fsanitize-coverage=trace-pc-guard"").","Okay, fixed nits other than clang++ check.
Let me know if I should squash commits.",True,{}
irssi/irssi,https://github.com/irssi/irssi,610,2017-01-08T01:09:24Z,2017-01-12T23:16:31Z,2019-06-26T23:14:14Z,MERGED,True,273,1,6,https://github.com/josephbisch,Add frontend for fuzzing,3,['auto-merge'],https://github.com/irssi/irssi/pull/610,https://github.com/ahf,3,https://github.com/irssi/irssi/pull/610#issuecomment-272314279,"Use the following configure command:
$ ./configure --with-fuzzer --with-fuzzer-lib=/path/to/libFuzzer.a 
CC=clang CXX=clang++
Places an irssi-fuzz in src/fe-fuzz/ after build.
Also can specify SANFLAGS to override the chosen sanitizer flags
(defaults to ""-g -fsanitize=address -fsanitize-coverage=trace-pc-guard"").",LGTM.,True,{}
irssi/irssi,https://github.com/irssi/irssi,612,2017-01-09T10:59:39Z,2017-10-25T19:26:28Z,2019-06-26T23:13:59Z,CLOSED,False,97,13,5,https://github.com/vague666,Allow selection of what kind of activity targets to ignore,16,['needs changes'],https://github.com/irssi/irssi/pull/612,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/612,"Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'","Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'",True,{}
irssi/irssi,https://github.com/irssi/irssi,612,2017-01-09T10:59:39Z,2017-10-25T19:26:28Z,2019-06-26T23:13:59Z,CLOSED,False,97,13,5,https://github.com/vague666,Allow selection of what kind of activity targets to ignore,16,['needs changes'],https://github.com/irssi/irssi/pull/612,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/612#issuecomment-271258514,"Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'","don't like this very much, we shoulld think of some better way. It's like a quick hack :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,612,2017-01-09T10:59:39Z,2017-10-25T19:26:28Z,2019-06-26T23:13:59Z,CLOSED,False,97,13,5,https://github.com/vague666,Allow selection of what kind of activity targets to ignore,16,['needs changes'],https://github.com/irssi/irssi/pull/612,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/612#issuecomment-271259611,"Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'",I'm not sure there is a better way. Anything else would probably involve major changes to the codebase as I see it.,True,{}
irssi/irssi,https://github.com/irssi/irssi,612,2017-01-09T10:59:39Z,2017-10-25T19:26:28Z,2019-06-26T23:13:59Z,CLOSED,False,97,13,5,https://github.com/vague666,Allow selection of what kind of activity targets to ignore,16,['needs changes'],https://github.com/irssi/irssi/pull/612,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/612#issuecomment-271275869,"Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'","Perhaps by modifying activity_hide_targets syntax to allow for some finer-grained control over the filtering (eg: Freenode/* matches everything but Freenode/# matches only channels and Freenode/@ might just match the non-channels if this option makes sense), just my 2cents.",True,{}
irssi/irssi,https://github.com/irssi/irssi,612,2017-01-09T10:59:39Z,2017-10-25T19:26:28Z,2019-06-26T23:13:59Z,CLOSED,False,97,13,5,https://github.com/vague666,Allow selection of what kind of activity targets to ignore,16,['needs changes'],https://github.com/irssi/irssi/pull/612,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/612#issuecomment-271280810,"Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'","That change wouldn't be too taxing, sure... it just needs more cowbell",True,{}
irssi/irssi,https://github.com/irssi/irssi,612,2017-01-09T10:59:39Z,2017-10-25T19:26:28Z,2019-06-26T23:13:59Z,CLOSED,False,97,13,5,https://github.com/vague666,Allow selection of what kind of activity targets to ignore,16,['needs changes'],https://github.com/irssi/irssi/pull/612,https://github.com/vague666,6,https://github.com/irssi/irssi/pull/612#issuecomment-271395522,"Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'","I should also make before git commit and git push
I thought the change was so simple there was no chance for errors :P",True,{}
irssi/irssi,https://github.com/irssi/irssi,612,2017-01-09T10:59:39Z,2017-10-25T19:26:28Z,2019-06-26T23:13:59Z,CLOSED,False,97,13,5,https://github.com/vague666,Allow selection of what kind of activity targets to ignore,16,['needs changes'],https://github.com/irssi/irssi/pull/612,https://github.com/LemonBoy,7,https://github.com/irssi/irssi/pull/612#issuecomment-339443353,"Syntax:
 *	 	Ignore activity in all windows
 #	 	Ignore activity in all channels
 @	 	Ignore activity in all queries
 =	 	Ignore activity in all dcc chats
 #chan|nick	Ignore activity in named target(channel, query, dcc chat)
 tag/*		Ignore all activity on network 'tag'
 tag/#		Ignore activity in all channels on network 'tag'
 tag/@		Ignore activity in all queries on network 'tag'
 tag/=		Ignore activity in all dcc chats on network 'tag'
 tag/#chan|nick	Ignore activity in named channel/query/dcc chat on network 'tag'",Superseded by #779,True,{}
irssi/irssi,https://github.com/irssi/irssi,613,2017-01-09T12:19:53Z,2017-01-13T21:36:45Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix regression in completion,1,['auto-merge'],https://github.com/irssi/irssi/pull/613,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/613,fixes #609,fixes #609,True,{}
irssi/irssi,https://github.com/irssi/irssi,613,2017-01-09T12:19:53Z,2017-01-13T21:36:45Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix regression in completion,1,['auto-merge'],https://github.com/irssi/irssi/pull/613,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/613#issuecomment-271273021,fixes #609,Looks right but in what case exactly the separator is a character different than a space?,True,{}
irssi/irssi,https://github.com/irssi/irssi,613,2017-01-09T12:19:53Z,2017-01-13T21:36:45Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix regression in completion,1,['auto-merge'],https://github.com/irssi/irssi/pull/613,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/613#issuecomment-271275664,fixes #609,"good question... I know that we should be able to complete eg /join #abc,#def,#ghi with , as the separator but I wonder if it matters in this branch (or if it gets it right even)",True,{}
irssi/irssi,https://github.com/irssi/irssi,613,2017-01-09T12:19:53Z,2017-01-13T21:36:45Z,2018-01-10T11:52:59Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix regression in completion,1,['auto-merge'],https://github.com/irssi/irssi/pull/613,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/613#issuecomment-271277472,fixes #609,"Good to know, I've tried that out and it seems to complete the /j with a comma-separated list of channels just fine with this patch.",True,{}
irssi/irssi,https://github.com/irssi/irssi,614,2017-01-10T06:10:05Z,2017-01-10T06:10:20Z,2017-01-13T09:02:54Z,MERGED,True,0,6,1,https://github.com/dequis,"Revert ""Don't reset wait_cmd during connection registration (fixes early ISON)""",1,[],https://github.com/irssi/irssi/pull/614,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/614,"Reverts #605
See #611","Reverts #605
See #611",True,{}
irssi/irssi,https://github.com/irssi/irssi,618,2017-01-13T12:07:36Z,2017-03-08T13:14:46Z,2019-06-26T23:12:54Z,CLOSED,False,5,0,1,https://github.com/LemonBoy,Print a warning if the server doesn't support SASL at all.,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/618,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/618,"Fixes #616 (untested ofc)
And what if the the server doesn't support CAP at all?","Fixes #616 (untested ofc)
And what if the the server doesn't support CAP at all?",True,{}
irssi/irssi,https://github.com/irssi/irssi,618,2017-01-13T12:07:36Z,2017-03-08T13:14:46Z,2019-06-26T23:12:54Z,CLOSED,False,5,0,1,https://github.com/LemonBoy,Print a warning if the server doesn't support SASL at all.,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/618,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/618#issuecomment-272637342,"Fixes #616 (untested ofc)
And what if the the server doesn't support CAP at all?","I'd prefer to print the error whenever sasl_disconnect_on_failure fails. Just add an else part to that if. Also would be nice to mention the sasl_disconnect_on_failure setting

And what if the the server doesn't support CAP at all?

Hm, then this wouldn't trigger at all.",True,{}
irssi/irssi,https://github.com/irssi/irssi,618,2017-01-13T12:07:36Z,2017-03-08T13:14:46Z,2019-06-26T23:12:54Z,CLOSED,False,5,0,1,https://github.com/LemonBoy,Print a warning if the server doesn't support SASL at all.,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/618,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/618#issuecomment-272638721,"Fixes #616 (untested ofc)
And what if the the server doesn't support CAP at all?","Either way it's fine with me, do you have any idea about the failure message? I can't seem to come up with a clear and concise one.

Hm, then this wouldn't trigger at all.

Should we cover that case too?",True,{}
irssi/irssi,https://github.com/irssi/irssi,618,2017-01-13T12:07:36Z,2017-03-08T13:14:46Z,2019-06-26T23:12:54Z,CLOSED,False,5,0,1,https://github.com/LemonBoy,Print a warning if the server doesn't support SASL at all.,1,"['needs changes', 'orphan']",https://github.com/irssi/irssi/pull/618,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/618#issuecomment-272930963,"Fixes #616 (untested ofc)
And what if the the server doesn't support CAP at all?",would be desirable imo,True,{}
irssi/irssi,https://github.com/irssi/irssi,619,2017-01-15T21:25:02Z,2017-01-15T21:33:43Z,2018-01-10T11:52:59Z,MERGED,True,2,2,1,https://github.com/hannob,perl_parse needs NULL terminated parameter list.,1,[],https://github.com/irssi/irssi/pull/619,https://github.com/hannob,1,https://github.com/irssi/irssi/pull/619,"the perl_parse call needs a null-terminated parameter list, see here:
http://search.cpan.org/~xsawyerx/perl-5.25.8/pod/perlembed.pod
It says:
""Mind that argv[argc] must be NULL, same as those passed to a main function in C.""
The patch adds a trailing NULL and changes the number of elements to G_N_ELEMENTS(perl_args)-1 (because it needs the number of elements without the NULL terminator).
If the perl_args array is not NULL terminated this will cause an out of bounds read in the perl code in S_parse_body(). This can be seen with address sanitizer, but therefore you need to compile both irssi and libperl with asan enabled.
I originally thought this is a perl bug, but as it's clearly documented it needs to be fixed in irssi.
Here's a stack trace from asan:
==7887==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00000088b998 at pc 0x7f3d87e36d1f bp 0x7ffcc8164b80 sp 0x7ffcc8164b70
READ of size 8 at 0x00000088b998 thread T0
    #0 0x7f3d87e36d1e in S_parse_body /var/tmp/portage/dev-lang/perl-5.22.3_rc4/work/perl-5.22.3-RC4/perl.c:2131
    #1 0x7f3d87e36d1e in perl_parse /var/tmp/portage/dev-lang/perl-5.22.3_rc4/work/perl-5.22.3-RC4/perl.c:1626
    #2 0x57e18d in perl_scripts_init /tmp/irssi-1.0.0/src/perl/perl-core.c:126
    #3 0x581860 in perl_core_init /tmp/irssi-1.0.0/src/perl/perl-core.c:462
    #4 0x45a027 in textui_finish_init /tmp/irssi-1.0.0/src/fe-text/irssi.c:191
    #5 0x45a4a9 in main /tmp/irssi-1.0.0/src/fe-text/irssi.c:314
    #6 0x7f3d8648a78f in __libc_start_main (/lib64/libc.so.6+0x2078f)
    #7 0x419318 in _start (/tmp/irssi-1.0.0/src/fe-text/irssi+0x419318)

0x00000088b998 is located 0 bytes to the right of global variable 'perl_args' from 'perl-core.c' (0x88b980) of size 24","the perl_parse call needs a null-terminated parameter list, see here:
http://search.cpan.org/~xsawyerx/perl-5.25.8/pod/perlembed.pod
It says:
""Mind that argv[argc] must be NULL, same as those passed to a main function in C.""
The patch adds a trailing NULL and changes the number of elements to G_N_ELEMENTS(perl_args)-1 (because it needs the number of elements without the NULL terminator).
If the perl_args array is not NULL terminated this will cause an out of bounds read in the perl code in S_parse_body(). This can be seen with address sanitizer, but therefore you need to compile both irssi and libperl with asan enabled.
I originally thought this is a perl bug, but as it's clearly documented it needs to be fixed in irssi.
Here's a stack trace from asan:
==7887==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00000088b998 at pc 0x7f3d87e36d1f bp 0x7ffcc8164b80 sp 0x7ffcc8164b70
READ of size 8 at 0x00000088b998 thread T0
    #0 0x7f3d87e36d1e in S_parse_body /var/tmp/portage/dev-lang/perl-5.22.3_rc4/work/perl-5.22.3-RC4/perl.c:2131
    #1 0x7f3d87e36d1e in perl_parse /var/tmp/portage/dev-lang/perl-5.22.3_rc4/work/perl-5.22.3-RC4/perl.c:1626
    #2 0x57e18d in perl_scripts_init /tmp/irssi-1.0.0/src/perl/perl-core.c:126
    #3 0x581860 in perl_core_init /tmp/irssi-1.0.0/src/perl/perl-core.c:462
    #4 0x45a027 in textui_finish_init /tmp/irssi-1.0.0/src/fe-text/irssi.c:191
    #5 0x45a4a9 in main /tmp/irssi-1.0.0/src/fe-text/irssi.c:314
    #6 0x7f3d8648a78f in __libc_start_main (/lib64/libc.so.6+0x2078f)
    #7 0x419318 in _start (/tmp/irssi-1.0.0/src/fe-text/irssi+0x419318)

0x00000088b998 is located 0 bytes to the right of global variable 'perl_args' from 'perl-core.c' (0x88b980) of size 24",True,{}
irssi/irssi,https://github.com/irssi/irssi,619,2017-01-15T21:25:02Z,2017-01-15T21:33:43Z,2018-01-10T11:52:59Z,MERGED,True,2,2,1,https://github.com/hannob,perl_parse needs NULL terminated parameter list.,1,[],https://github.com/irssi/irssi/pull/619,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/619#issuecomment-272725529,"the perl_parse call needs a null-terminated parameter list, see here:
http://search.cpan.org/~xsawyerx/perl-5.25.8/pod/perlembed.pod
It says:
""Mind that argv[argc] must be NULL, same as those passed to a main function in C.""
The patch adds a trailing NULL and changes the number of elements to G_N_ELEMENTS(perl_args)-1 (because it needs the number of elements without the NULL terminator).
If the perl_args array is not NULL terminated this will cause an out of bounds read in the perl code in S_parse_body(). This can be seen with address sanitizer, but therefore you need to compile both irssi and libperl with asan enabled.
I originally thought this is a perl bug, but as it's clearly documented it needs to be fixed in irssi.
Here's a stack trace from asan:
==7887==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00000088b998 at pc 0x7f3d87e36d1f bp 0x7ffcc8164b80 sp 0x7ffcc8164b70
READ of size 8 at 0x00000088b998 thread T0
    #0 0x7f3d87e36d1e in S_parse_body /var/tmp/portage/dev-lang/perl-5.22.3_rc4/work/perl-5.22.3-RC4/perl.c:2131
    #1 0x7f3d87e36d1e in perl_parse /var/tmp/portage/dev-lang/perl-5.22.3_rc4/work/perl-5.22.3-RC4/perl.c:1626
    #2 0x57e18d in perl_scripts_init /tmp/irssi-1.0.0/src/perl/perl-core.c:126
    #3 0x581860 in perl_core_init /tmp/irssi-1.0.0/src/perl/perl-core.c:462
    #4 0x45a027 in textui_finish_init /tmp/irssi-1.0.0/src/fe-text/irssi.c:191
    #5 0x45a4a9 in main /tmp/irssi-1.0.0/src/fe-text/irssi.c:314
    #6 0x7f3d8648a78f in __libc_start_main (/lib64/libc.so.6+0x2078f)
    #7 0x419318 in _start (/tmp/irssi-1.0.0/src/fe-text/irssi+0x419318)

0x00000088b998 is located 0 bytes to the right of global variable 'perl_args' from 'perl-core.c' (0x88b980) of size 24",Great job as usual!,True,{}
irssi/irssi,https://github.com/irssi/irssi,620,2017-01-16T17:59:07Z,2017-01-16T18:14:55Z,2019-06-26T23:14:15Z,MERGED,True,2,0,1,https://github.com/josephbisch,Add SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/620,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/620,"There are some cases (such as fuzzing with fe-fuzz) where suppressing
printf output may be desirable.","There are some cases (such as fuzzing with fe-fuzz) where suppressing
printf output may be desirable.",True,{}
irssi/irssi,https://github.com/irssi/irssi,621,2017-01-16T18:10:08Z,2017-01-16T18:15:44Z,2019-06-26T23:14:32Z,MERGED,True,1,1,1,https://github.com/josephbisch,Fix glib-2.0.m4 so that $PKG_CONFIG doesn't break configure script,1,[],https://github.com/irssi/irssi/pull/621,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/621,"If $PKG_CONFIG contains a space, then the test may not work, so
surround with quotation mark characters. (for example,
PKG_CONFIG=""pkg-config --static"" breaks configure before this commit).","If $PKG_CONFIG contains a space, then the test may not work, so
surround with quotation mark characters. (for example,
PKG_CONFIG=""pkg-config --static"" breaks configure before this commit).",True,{}
irssi/irssi,https://github.com/irssi/irssi,621,2017-01-16T18:10:08Z,2017-01-16T18:15:44Z,2019-06-26T23:14:32Z,MERGED,True,1,1,1,https://github.com/josephbisch,Fix glib-2.0.m4 so that $PKG_CONFIG doesn't break configure script,1,[],https://github.com/irssi/irssi/pull/621,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/621#issuecomment-272930792,"If $PKG_CONFIG contains a space, then the test may not work, so
surround with quotation mark characters. (for example,
PKG_CONFIG=""pkg-config --static"" breaks configure before this commit).",if you can afford it please report upstream and refbug here,True,{}
irssi/irssi,https://github.com/irssi/irssi,622,2017-01-16T19:04:28Z,2017-02-06T11:38:20Z,2019-06-26T23:14:12Z,MERGED,True,20,1,3,https://github.com/ailin-nemui,provide net_start_ssl api,1,['needs review'],https://github.com/irssi/irssi/pull/622,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/622,fixes #615,fixes #615,True,{}
irssi/irssi,https://github.com/irssi/irssi,624,2017-01-19T20:10:18Z,2017-01-21T02:52:32Z,2018-01-10T11:52:59Z,MERGED,True,13,14,1,https://github.com/ailin-nemui,sync mail.pl,1,['auto-merge'],https://github.com/irssi/irssi/pull/624,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/624,fixes #607,fixes #607,True,{}
irssi/irssi,https://github.com/irssi/irssi,624,2017-01-19T20:10:18Z,2017-01-21T02:52:32Z,2018-01-10T11:52:59Z,MERGED,True,13,14,1,https://github.com/ailin-nemui,sync mail.pl,1,['auto-merge'],https://github.com/irssi/irssi/pull/624,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/624#issuecomment-273886017,fixes #607,What's the 0.8.21 tag? Are we still going to do 0.8.x maintenance releases for anything other than security issues?,True,{}
irssi/irssi,https://github.com/irssi/irssi,624,2017-01-19T20:10:18Z,2017-01-21T02:52:32Z,2018-01-10T11:52:59Z,MERGED,True,13,14,1,https://github.com/ailin-nemui,sync mail.pl,1,['auto-merge'],https://github.com/irssi/irssi/pull/624,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/624#issuecomment-273887419,fixes #607,it's my list of tags to revisit in case there should be an update to 0.8.21->0.8.22. we can discuss policy in #irssi-dev...,True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/625,for more pleasant east asian mixed display,for more pleasant east asian mixed display,True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/625#issuecomment-274025371,for more pleasant east asian mixed display,"Example
off (current way)
╔════════════════════════════════════════════════════════════════════════════════╗ 
║10:31 -!- 你好你好你好你好你好你好你好你好阿宝ab                                ║ 
║          cd你好你好你好你好你好你好你好你好你好你好你好你好你好你好阿宝ab      ║ 
║          cd你好你好你好你好你好你好                                            ║ 
╚════════════════════════════════════════════════════════════════════════════════╝ 

on
╔════════════════════════════════════════════════════════════════════════════════╗ 
║10:31 -!- 你好你好你好你好你好你好你好你好阿宝ab cd你好你好你好你好你好你好你好 ║ 
║          你好你好你好你好你好你好你好阿宝ab cd你好你好你好你好你好你好         ║ 
╚════════════════════════════════════════════════════════════════════════════════╝",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/625#issuecomment-274025707,for more pleasant east asian mixed display,"based on https://svnweb.freebsd.org/ports/head/chinese/irssi/files/patch-utf8_break?revision=340725&view=markup
(up abi before merge)",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/625#issuecomment-274085977,for more pleasant east asian mixed display,"I'm against adding a new switch, I'd just change the logic to set the break point after every character with a width > 2 or a space (but iff the view is in utf8 mode)",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/625#issuecomment-274099972,for more pleasant east asian mixed display,"Judging by https://en.wikipedia.org/wiki/Line_breaking_rules_in_East_Asian_languages CJK text wrapping tends to be ""meh, do whatever you want, don't mess the punctuation up"". So the patch is fine as a slight improvement.
The proper unicode line wrapping algo has a ton of edge cases, as usual: http://unicode.org/reports/tr14/
glib has:
https://developer.gnome.org/glib/stable/glib-Unicode-Manipulation.html#g-unichar-break-type
https://developer.gnome.org/glib/stable/glib-Unicode-Manipulation.html#GUnicodeBreakType ?
They suggest using pango for text wrapping, but pango is mostly a gtk-related thing (people may not want that in servers) which usually assumes more flexible renderers than terminals. We could (in the future, not necessarily in this PR) implement some of the less ambiguous break types.
I have no strong opinion regarding the switch. Dropping the utf8 condition seems suspicious though.",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/625#issuecomment-274103367,for more pleasant east asian mixed display,"it looks like pango depends on X even though the tr14 algorithm implemented in pango_break does not. the algorithm is rendering-agnostic, it only tells you which points are valid break points. However, it would mess with URLs for instance",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/625#issuecomment-274103620,for more pleasant east asian mixed display,"The actual reason for the initial conditional on utf8 was to enable the break-wide function for the ""Big5"" terminal type, a 2 byte easy asian encoding which is ascii compatible",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/625#issuecomment-274103859,for more pleasant east asian mixed display,"are there any use cases where breaking wide characters may be undesirable? my guess would be, yes. I suppose we would need to look at non east asian wide characters to decide that",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/625#issuecomment-274206168,for more pleasant east asian mixed display,"Somewhat relevant thing I was reading yesterday http://www.loekalization.com/mistakes.html section 8b

By the way, there's a reason why especially Japanese developers love hardcoding [newlines in] their strings: in Japan it's customary to wrap text by hand (Japanesehasnospaces, and it wouldn't be user-friendly to have the text automatically wrapped in the mid
dle of words).

So as far as I understand the thing, the machine-wrapping algorithms are lazy because it doesn't really matter a lot, but if you can control the wrapping manually it's desirable to insert breaks in cleverer places.",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/625#issuecomment-274233276,for more pleasant east asian mixed display,"Characters with east asian width F or W ranked by line break class



Count
Class
Description
Examples




171828
ID - Ideographic
Break before or after, except in some numeric context
𤎏 (U+2438F), 抴 (U+62B4), ꏌ (U+A3CC), 𦩕 (U+26A55), 𥮦 (U+25BA6)


10773
H3 - Hangul LVT Syllable
Form Korean syllable blocks
츷 (U+CE37), 흯 (U+D76F), 몙 (U+BA99), 괫 (U+AD2B), 줒 (U+C912)


5782
AL - Alphabetic
May not break
🔞 (U+1F51E), 𑣖 (U+118D6), 𐚐 (U+10690), ᯌ (U+1BCC), 𖥀 (U+16940)


662
CM - Combining Mark
No break
𖽙 (U+16F59), 𑍌 (U+1134C), 𝩕 (U+1DA55), 𝨘 (U+1DA18), 𑆶 (U+111B6)


399
H2 - Hangul LV Syllable
Form Korean syllable blocks
쁴 (U+C074), 뜨 (U+B728), 쀄 (U+C004), 기 (U+AE30), 떠 (U+B5A0)


170
NU - Numeric
Form numeric expressions for line breaking purposes
𑑔 (U+11454), 𑋲 (U+112F2), 𖩣 (U+16A63), 𑇘 (U+111D8), 𑛈 (U+116C8)


125
JL - Hangul L Jamo
Form Korean syllable blocks
ᄫ (U+112B), ᅝ (U+115D), ᄂ (U+1102), ꥶ (U+A976), ꥭ (U+A96D)


100
AI - Ambiguous
Act like AL when the resolved EAW is N; otherwise, act as ID
🅤 (U+1F164), 🄵 (U+1F135), 🅉 (U+1F149), 🅑 (U+1F151), 🆜 (U+1F19C)


81
BA - Break After
May break after
𑈹 (U+11239), 𖩮 (U+16A6E), 𑈸 (U+11238), 𑗍 (U+115CD), 𑗊 (U+115CA)


79
EB - Emoji Base
Do not break from following Emoji Modifier
👵 (U+1F475), 🏋 (U+1F3CB), 💁 (U+1F481), 🤼 (U+1F93C), 👈 (U+1F448)


71
SA - Complex Context Dependent
May break (req language-specific context analysis)
𑜌 (U+1170C), 𑜺 (U+1173A), ꩾ (U+AA7E), ꩽ (U+AA7D), 𑜁 (U+11701)


55
JT - Hangul T Jamo
Form Korean syllable blocks
ퟟ (U+D7DF), ퟠ (U+D7E0), ퟏ (U+D7CF), ퟕ (U+D7D5), ퟵ (U+D7F5)


41
CJ - Conditional Japanese Starter
Treat as NS or ID for strict or normal breaking.
ぅ (U+3045), ぇ (U+3047), ㇼ (U+31FC), ォ (U+30A9), ッ (U+30C3)


38
CL - Close Punctuation
No break before
﹄ (U+FE44), ﹀ (U+FE40), ︒ (U+FE12), ︾ (U+FE3E), ︶ (U+FE36)


32
OP - Open Punctuation
No break after
《 (U+300A), ［ (U+FF3B), ︻ (U+FE3B), 『 (U+300E), ﹝ (U+FE5D)


28
JV - Hangul V Jamo
Form Korean syllable blocks
ퟆ (U+D7C6), ᆧ (U+11A7), ힺ (U+D7BA), ᆦ (U+11A6), ힿ (U+D7BF)


27
PR - Prefix Numeric
Do not break in front of a numeric expression
⃄ (U+20C4), ⃁ (U+20C1), ֏ (U+058F), ￡ (U+FFE1), ⃋ (U+20CB)


26
RI - Regional Indicator
Keep pairs together.
🇸 (U+1F1F8), 🇹 (U+1F1F9), 🇰 (U+1F1F0), 🇲 (U+1F1F2), 🇴 (U+1F1F4)


21
NS - Nonstarter
Allow only indirect line breaks before
﹔ (U+FE54), 々 (U+3005), ゝ (U+309D), ゜ (U+309C), 🙻 (U+1F67B)


18
BB - Break Before
May break before
𑙧 (U+11667), 𑙨 (U+11668), 𑙡 (U+11661), 𑙦 (U+11666), 𑙠 (U+11660)


9
EX - Exclamation/Interrogation
No break before
︖ (U+FE16), 𑗅 (U+115C5), 𑗄 (U+115C4), 𑱱 (U+11C71), ﹖ (U+FE56)


5
PO - Postfix Numeric
Do not break following a numeric expression
₻ (U+20BB), ₾ (U+20BE), ﹪ (U+FE6A), ％ (U+FF05), ￠ (U+FFE0)


5
EM - Emoji Modifier
Do not break from preceding Emoji Base
🏻 (U+1F3FB), 🏼 (U+1F3FC), 🏽 (U+1F3FD), 🏾 (U+1F3FE), 🏿 (U+1F3FF)


5
QU - Quotation
Act like they are both opening and closing
❟ (U+275F), ❠ (U+2760), 🙶 (U+1F676), 🙷 (U+1F677), 🙸 (U+1F678)


3
IS - Infix Numeric Separator
Prevent breaks after any and before numeric
︐ (U+FE10), ︓ (U+FE13), ︔ (U+FE14)


2
IN - Inseparable
Allow only indirect line breaks between pairs
︙ (U+FE19), 𐫶 (U+10AF6)


2
GL - Non-breaking (""Glue"")
No break
࿙ (U+0FD9), ࿚ (U+0FDA)


2
B2 - Break Opportunity Before and After
May break
⸺ (U+2E3A), ⸻ (U+2E3B)



(source code)
I simplified the wording of some items in the description column, it might not be accurate. AL was extremely vague but that one is easy to guess.  SA is fun.
Hangul syllables seem like a great reason to keep the setting. That's pretty much my conclusion to all of this.
I keep thinking it might be fun to write a very basic implementation of the algo covering a subset of these classes, but in the context of this PR, yeah, ship it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,625,2017-01-20T09:32:41Z,2017-01-21T18:51:35Z,2019-06-26T23:14:13Z,MERGED,True,21,4,3,https://github.com/ailin-nemui,implement break_wide,1,['auto-merge'],https://github.com/irssi/irssi/pull/625,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/625#issuecomment-274280487,for more pleasant east asian mixed display,"Wow, such extensive research. Thanks dx",True,{}
irssi/irssi,https://github.com/irssi/irssi,626,2017-01-22T15:47:36Z,2017-01-31T13:17:45Z,2019-06-26T23:14:13Z,MERGED,True,12,0,3,https://github.com/ailin-nemui,support storing and replaying the monospace attribute in textbuffer,1,[],https://github.com/irssi/irssi/pull/626,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/626,"I want to support this formatting command (%#) also in terminal, even if it doesn't do anything. objections?","I want to support this formatting command (%#) also in terminal, even if it doesn't do anything. objections?",True,{}
irssi/irssi,https://github.com/irssi/irssi,626,2017-01-22T15:47:36Z,2017-01-31T13:17:45Z,2019-06-26T23:14:13Z,MERGED,True,12,0,3,https://github.com/ailin-nemui,support storing and replaying the monospace attribute in textbuffer,1,[],https://github.com/irssi/irssi/pull/626,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/626#issuecomment-274340545,"I want to support this formatting command (%#) also in terminal, even if it doesn't do anything. objections?","Don't see why not, go ahead.
Looking forward to your implementations of IRSSI_GUI_GTK, IRSSI_GUI_GNOME, IRSSI_GUI_QT and IRSSI_GUI_KDE (which are four different things and not just two)",True,{}
irssi/irssi,https://github.com/irssi/irssi,626,2017-01-22T15:47:36Z,2017-01-31T13:17:45Z,2019-06-26T23:14:13Z,MERGED,True,12,0,3,https://github.com/ailin-nemui,support storing and replaying the monospace attribute in textbuffer,1,[],https://github.com/irssi/irssi/pull/626,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/626#issuecomment-274342690,"I want to support this formatting command (%#) also in terminal, even if it doesn't do anything. objections?",lololol,True,{}
irssi/irssi,https://github.com/irssi/irssi,627,2017-01-22T20:53:42Z,2017-02-15T14:49:01Z,2019-06-26T23:14:11Z,MERGED,True,29,7,1,https://github.com/LemonBoy,Check whether the client certificate is expired.,1,[],https://github.com/irssi/irssi/pull/627,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/627,"Right now we only warn the user, the connection keeps going.
Fixes #211","Right now we only warn the user, the connection keeps going.
Fixes #211",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,627,2017-01-22T20:53:42Z,2017-02-15T14:49:01Z,2019-06-26T23:14:11Z,MERGED,True,29,7,1,https://github.com/LemonBoy,Check whether the client certificate is expired.,1,[],https://github.com/irssi/irssi/pull/627,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/627#issuecomment-274367868,"Right now we only warn the user, the connection keeps going.
Fixes #211",Nice,True,{}
irssi/irssi,https://github.com/irssi/irssi,627,2017-01-22T20:53:42Z,2017-02-15T14:49:01Z,2019-06-26T23:14:11Z,MERGED,True,29,7,1,https://github.com/LemonBoy,Check whether the client certificate is expired.,1,[],https://github.com/irssi/irssi/pull/627,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/627#issuecomment-277657853,"Right now we only warn the user, the connection keeps going.
Fixes #211",is this in any way affected by openssl 1.1?,True,{}
irssi/irssi,https://github.com/irssi/irssi,627,2017-01-22T20:53:42Z,2017-02-15T14:49:01Z,2019-06-26T23:14:11Z,MERGED,True,29,7,1,https://github.com/LemonBoy,Check whether the client certificate is expired.,1,[],https://github.com/irssi/irssi/pull/627,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/627#issuecomment-280027071,"Right now we only warn the user, the connection keeps going.
Fixes #211",@LemonBoy,True,{}
irssi/irssi,https://github.com/irssi/irssi,627,2017-01-22T20:53:42Z,2017-02-15T14:49:01Z,2019-06-26T23:14:11Z,MERGED,True,29,7,1,https://github.com/LemonBoy,Check whether the client certificate is expired.,1,[],https://github.com/irssi/irssi/pull/627,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/627#issuecomment-280027986,"Right now we only warn the user, the connection keeps going.
Fixes #211",It does just work since the compat. patch has been merged,True,{}
irssi/irssi,https://github.com/irssi/irssi,628,2017-01-23T15:55:05Z,2017-02-05T21:20:32Z,2018-01-10T11:53:29Z,MERGED,True,18,1,1,https://github.com/LemonBoy,Support OpenSSL 1.1.0.,1,[],https://github.com/irssi/irssi/pull/628,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/628,"X509_get_notBefore becomes X509_get0_notBefore
X509_get_notAfter becomes X509_get0_notAfter
ASN1_STRING_data becomes ASN1_STRING_get0_data (and drops the const)
The whole library is now initialized by OPENSSL_init_ssl

Closes #597
Let's give this a spin with LibreSSL too","X509_get_notBefore becomes X509_get0_notBefore
X509_get_notAfter becomes X509_get0_notAfter
ASN1_STRING_data becomes ASN1_STRING_get0_data (and drops the const)
The whole library is now initialized by OPENSSL_init_ssl

Closes #597
Let's give this a spin with LibreSSL too",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,628,2017-01-23T15:55:05Z,2017-02-05T21:20:32Z,2018-01-10T11:53:29Z,MERGED,True,18,1,1,https://github.com/LemonBoy,Support OpenSSL 1.1.0.,1,[],https://github.com/irssi/irssi/pull/628,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/628#issuecomment-276075578,"X509_get_notBefore becomes X509_get0_notBefore
X509_get_notAfter becomes X509_get0_notAfter
ASN1_STRING_data becomes ASN1_STRING_get0_data (and drops the const)
The whole library is now initialized by OPENSSL_init_ssl

Closes #597
Let's give this a spin with LibreSSL too","Tested against libressl-2.5.0 and openssl-1.1.0c, everything is fine and dandy.",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,639,2017-02-05T00:05:12Z,2017-02-05T21:19:20Z,2019-06-26T23:14:28Z,MERGED,True,4,4,2,https://github.com/ear,Make themes' docs more consistent.,1,[],https://github.com/irssi/irssi/pull/639,https://github.com/ear,1,https://github.com/irssi/irssi/pull/639,"Mentioning ""sb-item"" was misleading in that there is no such template, nor any occurrence of that exact string anywhere else in the source.
In going from sb-item to ""sb"" I am following the pattern established in a couple of comments above:
""msgownnick"" specifies the styling …
""ownmsgnick"" specifies …","Mentioning ""sb-item"" was misleading in that there is no such template, nor any occurrence of that exact string anywhere else in the source.
In going from sb-item to ""sb"" I am following the pattern established in a couple of comments above:
""msgownnick"" specifies the styling …
""ownmsgnick"" specifies …",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/645,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/645#issuecomment-279010002,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","The lack of timeout was a good thing for some sorts of keybindings that are sequences of separate keystrokes. At least default it to 0 and disabled. I don't think the nitpicking that ""one keystroke is dropped"" is worth making it harder to use sequences of keybindings for the rest of the world.",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/madduck,3,https://github.com/irssi/irssi/pull/645#issuecomment-279046552,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","@LemonBoy this is awesome, and it works pretty exactly as expected. I am with @dequis though in that I think that the timeout should be configurable and probably default to 0, although I don't think I was nitpicking before. ;)",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/645#issuecomment-280027265,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","didn't follow your discussion, can you give some examples how to use this feature?",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/madduck,5,https://github.com/irssi/irssi/pull/645#issuecomment-280127781,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","@ailin-nemui it's related to multi-key bindings, say meta-a-meta-d. Once you pressed meta-a, there's no way to get rid of it, other than to complete the sequence. Other UIs that have multi-key bindings simply timeout if the sequence isn't completed and/or provide a way to cancel (break) the combo. This is what @LemonBoy's patch adds.
(though I am unsure how one would successfully bind break_combo to a key like escape as it'd be a bit of a catch-22 to break an ongoing combination with a new keybindings?)",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/645#issuecomment-280607065,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","I think event tags should default to 0, and aren't they unsigned as well",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/645#issuecomment-280638653,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","$ ag g_source_remove -B1 | grep '!=' -A1 | grep -e '!=' -e g_source_remove
src/core/pidwait.c:52-  if (id != NULL) {
src/core/pidwait.c:53:          g_source_remove(GPOINTER_TO_INT(id));
src/core/net-sendbuffer.c:47:        if (rec->send_tag != -1) g_source_remove(rec->send_tag);
src/core/write-buffer.c:150-    } else if (timeout_tag != -1) {
src/core/write-buffer.c:151:            g_source_remove(timeout_tag);
src/core/write-buffer.c:180-    if (timeout_tag != -1)
src/core/write-buffer.c:181:            g_source_remove(timeout_tag);
src/core/servers.c:49-  if (server->connect_tag != -1) {
src/core/servers.c:50:          g_source_remove(server->connect_tag);
src/core/servers.c:183-         if (server->connect_tag != -1)
src/core/servers.c:184:                 g_source_remove(server->connect_tag);
src/core/servers.c:193- if (server->connect_tag != -1) {
src/core/servers.c:194:         g_source_remove(server->connect_tag);
src/fe-common/core/fe-queries.c:350-    else if (query_auto_close <= 0 && queryclose_tag != -1) {
src/fe-common/core/fe-queries.c:351:            g_source_remove(queryclose_tag);
src/fe-common/core/fe-queries.c:384:    if (queryclose_tag != -1) g_source_remove(queryclose_tag);
src/fe-common/core/fe-exec.c:182-       if (rec->read_tag != -1)
src/fe-common/core/fe-exec.c:183:               g_source_remove(rec->read_tag);
src/fe-common/core/fe-windows.c:802-    if (daytag != -1) {
src/fe-common/core/fe-windows.c:803:            g_source_remove(daytag);
src/fe-common/core/fe-windows.c:831:    if (daytag != -1) g_source_remove(daytag);
src/fe-common/irc/fe-modes.c:224-       if (mode_tag != -1)
src/fe-common/irc/fe-modes.c:225:               g_source_remove(mode_tag);
src/fe-common/irc/fe-netjoin.c:489-     if (join_tag != -1) {
src/fe-common/irc/fe-netjoin.c:490:             g_source_remove(join_tag);
src/fe-common/irc/fe-netsplit.c:378-    if (split_tag != -1) {
src/fe-common/irc/fe-netsplit.c:379:            g_source_remove(split_tag);
src/fe-text/gui-readline.c:811-                 if (paste_timeout_id != -1)
src/fe-text/gui-readline.c:812:                         g_source_remove(paste_timeout_id);
src/irc/dcc/dcc.c:111-  if (dcc->handle != NULL) net_disconnect(dcc->handle);
src/irc/dcc/dcc.c:112:  if (dcc->tagconn != -1) g_source_remove(dcc->tagconn);
src/irc/dcc/dcc.c:113:  if (dcc->tagread != -1) g_source_remove(dcc->tagread);
src/irc/dcc/dcc.c:114:  if (dcc->tagwrite != -1) g_source_remove(dcc->tagwrite);
src/irc/flood/flood.c:308-      } else if (flood_tag != -1) {
src/irc/flood/flood.c:309:              g_source_remove(flood_tag);
src/irc/flood/flood.c:338-      if (flood_tag != -1) {
src/irc/flood/flood.c:339:              g_source_remove(flood_tag);
src/irc/notifylist/notify-ison.c:321:   if (notify_tag != -1) g_source_remove(notify_tag);
src/irc/core/irc-servers.c:1054-        if (cmd_tag != -1)
src/irc/core/irc-servers.c:1055:                g_source_remove(cmd_tag);
src/irc/core/sasl.c:81- if (server->sasl_timeout != 0) {
src/irc/core/sasl.c:82:         g_source_remove(server->sasl_timeout);
src/irc/core/sasl.c:100-        if (server->sasl_timeout != 0) {
src/irc/core/sasl.c:101:                g_source_remove(server->sasl_timeout);
src/irc/core/sasl.c:115-        if (server->sasl_timeout != 0) {
src/irc/core/sasl.c:116:                g_source_remove(server->sasl_timeout);
src/irc/core/sasl.c:278-        if (server->sasl_timeout != 0) {
src/irc/core/sasl.c:279:                g_source_remove(server->sasl_timeout);
src/irc/core/sasl.c:305-        if (server->sasl_timeout != 0) {
src/irc/core/sasl.c:306:                g_source_remove(server->sasl_timeout);

Not sure why we've done != -1 historically. I think I've seen it in other codebases too. But yeah they are supposed to be unsigned.",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/LemonBoy,8,https://github.com/irssi/irssi/pull/645#issuecomment-280850423,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","No reason but that I copy-pasted the block from another file. The documentation for g_timeout_add states that the return value is greater than zero so we're fine with that as a sentinel value.
I'll update the PR accordingly as soon as possible.",True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/645#issuecomment-285902898,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)",@madduck are you using this patch and can vouch for it?,True,{}
irssi/irssi,https://github.com/irssi/irssi,645,2017-02-10T13:34:16Z,2017-03-11T22:11:44Z,2019-06-26T23:14:10Z,MERGED,True,45,1,1,https://github.com/LemonBoy,Timeout feature for keys,1,[],https://github.com/irssi/irssi/pull/645,https://github.com/madduck,10,https://github.com/irssi/irssi/pull/645#issuecomment-285904151,"The timeout can now be configured with the combo_timeout option with millisecond granularity, any value that's less than one disables the timeout.
The behaviour is now similar to the one vim exhibits, if the keys in the combo queue are bound to something then they're happily processed.
@madduck are you happy now? :)","@ailin-nemui I've used it for a while yes, but then went back to running stock Debian irssi. Not sure what you mean with ""vouch"". It does what it should, indeed.",True,{}
irssi/irssi,https://github.com/irssi/irssi,647,2017-02-11T03:10:07Z,2017-02-27T13:45:42Z,2019-06-26T23:14:27Z,MERGED,True,4,0,1,https://github.com/dequis,notify-ison: Don't send ison before the connection is done,1,[],https://github.com/irssi/irssi/pull/647,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/647,"Fixes #596
Alternative fix to #605, this time much more boring and limited in scope.
If anything else relies on the same 120 second wait_cmd delay we can apply this same fix. Relying on the delay isn't great anyway.","Fixes #596
Alternative fix to #605, this time much more boring and limited in scope.
If anything else relies on the same 120 second wait_cmd delay we can apply this same fix. Relying on the delay isn't great anyway.",True,{}
irssi/irssi,https://github.com/irssi/irssi,647,2017-02-11T03:10:07Z,2017-02-27T13:45:42Z,2019-06-26T23:14:27Z,MERGED,True,4,0,1,https://github.com/dequis,notify-ison: Don't send ison before the connection is done,1,[],https://github.com/irssi/irssi/pull/647,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/647#issuecomment-280607391,"Fixes #596
Alternative fix to #605, this time much more boring and limited in scope.
If anything else relies on the same 120 second wait_cmd delay we can apply this same fix. Relying on the delay isn't great anyway.","If anything else relies on the same 120 second wait_cmd delay we can apply this same fix. Relying on the delay isn't great anyway.

can you explain this a bit more detailed",True,{}
irssi/irssi,https://github.com/irssi/irssi,647,2017-02-11T03:10:07Z,2017-02-27T13:45:42Z,2019-06-26T23:14:27Z,MERGED,True,4,0,1,https://github.com/dequis,notify-ison: Don't send ison before the connection is done,1,[],https://github.com/irssi/irssi/pull/647,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/647#issuecomment-280634197,"Fixes #596
Alternative fix to #605, this time much more boring and limited in scope.
If anything else relies on the same 120 second wait_cmd delay we can apply this same fix. Relying on the delay isn't great anyway.","It's what I mentioned in #596 (comment)
The fix based on that was #605 and trying to fix it based on that idea resulted in #611. Therefore, that idea is wrong and it's better to do the obvious thing instead.",True,{}
irssi/irssi,https://github.com/irssi/irssi,649,2017-02-14T21:05:27Z,2017-02-15T14:36:54Z,2019-06-26T23:13:58Z,MERGED,True,6,15,2,https://github.com/LemonBoy,Do not alias /server <hostname> to /server connect <hostname>,1,[],https://github.com/irssi/irssi/pull/649,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/649,"Closes #559.
The old functionality is available by using /server connect as it was before.","Closes #559.
The old functionality is available by using /server connect as it was before.",True,"{'THUMBS_UP': ['https://github.com/ilmaisin'], 'HEART': ['https://github.com/dequis']}"
irssi/irssi,https://github.com/irssi/irssi,649,2017-02-14T21:05:27Z,2017-02-15T14:36:54Z,2019-06-26T23:13:58Z,MERGED,True,6,15,2,https://github.com/LemonBoy,Do not alias /server <hostname> to /server connect <hostname>,1,[],https://github.com/irssi/irssi/pull/649,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/649#issuecomment-279837445,"Closes #559.
The old functionality is available by using /server connect as it was before.",any help needs updating?,True,{}
irssi/irssi,https://github.com/irssi/irssi,649,2017-02-14T21:05:27Z,2017-02-15T14:36:54Z,2019-06-26T23:13:58Z,MERGED,True,6,15,2,https://github.com/LemonBoy,Do not alias /server <hostname> to /server connect <hostname>,1,[],https://github.com/irssi/irssi/pull/649,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/649#issuecomment-279838430,"Closes #559.
The old functionality is available by using /server connect as it was before.",Good catch,True,{}
irssi/irssi,https://github.com/irssi/irssi,649,2017-02-14T21:05:27Z,2017-02-15T14:36:54Z,2019-06-26T23:13:58Z,MERGED,True,6,15,2,https://github.com/LemonBoy,Do not alias /server <hostname> to /server connect <hostname>,1,[],https://github.com/irssi/irssi/pull/649,https://github.com/vague666,4,https://github.com/irssi/irssi/pull/649#issuecomment-279838749,"Closes #559.
The old functionality is available by using /server connect as it was before.","Yeah, there is
feb 14 22:16:59     /SERVER chat.freenode.net
feb 14 22:16:59     /SERVER +chat.freenode.net
feb 14 22:16:59     /SERVER CONNECT chat.freenode.net
feb 14 22:16:59     /SERVER CONNECT +chat.freenode.net
edit: bah, github updates the page too late :P",True,{}
irssi/irssi,https://github.com/irssi/irssi,652,2017-02-15T13:21:19Z,2017-03-04T20:36:02Z,2018-01-10T11:53:29Z,MERGED,True,3,2,1,https://github.com/LemonBoy,Properly check the command arguments in tail place.,1,[],https://github.com/irssi/irssi/pull/652,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/652,"A command requiring an argument and given in tail position would not
raise an error but silently set the value to the empty string ''.
Spotted by trying to figure out what #651 is about.","A command requiring an argument and given in tail position would not
raise an error but silently set the value to the empty string ''.
Spotted by trying to figure out what #651 is about.",True,{}
irssi/irssi,https://github.com/irssi/irssi,652,2017-02-15T13:21:19Z,2017-03-04T20:36:02Z,2018-01-10T11:53:29Z,MERGED,True,3,2,1,https://github.com/LemonBoy,Properly check the command arguments in tail place.,1,[],https://github.com/irssi/irssi/pull/652,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/652#issuecomment-282736487,"A command requiring an argument and given in tail position would not
raise an error but silently set the value to the empty string ''.
Spotted by trying to figure out what #651 is about.",mind boggling... good job but I still need to understand it,True,{}
irssi/irssi,https://github.com/irssi/irssi,652,2017-02-15T13:21:19Z,2017-03-04T20:36:02Z,2018-01-10T11:53:29Z,MERGED,True,3,2,1,https://github.com/LemonBoy,Properly check the command arguments in tail place.,1,[],https://github.com/irssi/irssi/pull/652,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/652#issuecomment-282740589,"A command requiring an argument and given in tail position would not
raise an error but silently set the value to the empty string ''.
Spotted by trying to figure out what #651 is about.","The code is a bit hairy but it boils down to this: say we've got -foo bar -baz where foo and bar require an argument, the code checks whether an argument has been provided every time it parses a command (every time it encounters a -) so when it reaches -bar it knows that the previous command has an argument and keeps parsing the string, eventually reaching the \0. You now see the problem: since there are no more - after -baz the code won't check the argument for the last command.
This can be noticed from the perl side of the moon as you'd get no error and spurious entries in the resulting hash.",True,{}
irssi/irssi,https://github.com/irssi/irssi,653,2017-02-16T23:19:46Z,2017-07-03T07:53:10Z,2019-06-26T23:14:07Z,MERGED,True,344,134,13,https://github.com/ailin-nemui,Enable UTF8 in GRegex,6,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/653,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/653,"fixes #636
up for discussion! this remaps invalid utf8 bytes into Private Use Area of unicode","fixes #636
up for discussion! this remaps invalid utf8 bytes into Private Use Area of unicode",True,{}
irssi/irssi,https://github.com/irssi/irssi,653,2017-02-16T23:19:46Z,2017-07-03T07:53:10Z,2019-06-26T23:14:07Z,MERGED,True,344,134,13,https://github.com/ailin-nemui,Enable UTF8 in GRegex,6,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/653,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/653#issuecomment-306006320,"fixes #636
up for discussion! this remaps invalid utf8 bytes into Private Use Area of unicode","I intend to merge this since there was noone rushing forward to implement something else, and I am heavily in favour of keeping the platform independent gregex/pcre (thus disagree to revert that change)",True,{}
irssi/irssi,https://github.com/irssi/irssi,653,2017-02-16T23:19:46Z,2017-07-03T07:53:10Z,2019-06-26T23:14:07Z,MERGED,True,344,134,13,https://github.com/ailin-nemui,Enable UTF8 in GRegex,6,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/653,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/653#issuecomment-306014301,"fixes #636
up for discussion! this remaps invalid utf8 bytes into Private Use Area of unicode","Sure, that bikeshedding wasn't going anywhere and this method is good enough.
It does need some review, I didn't look at this at all before. Also needs fuzzing.",True,{}
irssi/irssi,https://github.com/irssi/irssi,653,2017-02-16T23:19:46Z,2017-07-03T07:53:10Z,2019-06-26T23:14:07Z,MERGED,True,344,134,13,https://github.com/ailin-nemui,Enable UTF8 in GRegex,6,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/653,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/653#issuecomment-306063668,"fixes #636
up for discussion! this remaps invalid utf8 bytes into Private Use Area of unicode","Since people have shown renewed interest in running irssi on shoeboxes and similar underpowered hardware I think we should also think about the possible performance implications of ""sanitizing"" the input string every time we're going to run a match against it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,653,2017-02-16T23:19:46Z,2017-07-03T07:53:10Z,2019-06-26T23:14:07Z,MERGED,True,344,134,13,https://github.com/ailin-nemui,Enable UTF8 in GRegex,6,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/653,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/653#issuecomment-306070917,"fixes #636
up for discussion! this remaps invalid utf8 bytes into Private Use Area of unicode","shoeboxes and similar underpowered hardware

Heheh.
I dunno, the performance issues we've fixed recently were O(n^2)-like things that broke for large values of n. This change looks linear on message length to me.",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/654,Closes #520.,Closes #520.,True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/654#issuecomment-282728900,Closes #520.,I don't think this is a proper fix...,True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/654#issuecomment-282732070,Closes #520.,"I don't think this is a proper fix...

What constitutes a ""proper"" fix? What's wrong with this?
Was it really that hard to write something more than such a snarky remark?",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/654#issuecomment-282732550,Closes #520.,was it really hard to write some more details on your PR and how you believe it fixes the issue?,True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/654#issuecomment-282733599,Closes #520.,"Said the one who has just pushed a PR whose only commit reads make foreach send commands and with such an informative message as fixes /foreach query unquery [oops!].
This said, the PR simply outputs the \\<char> sequence as \<char> in the output string which is also explained in a comment I've added.",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/654#issuecomment-282743755,Closes #520.,"I could not believe it at first, but I would say you're completely right. Thanks for the explanation. I only wonder now, if this would be better in expand_escape function. Probably doesn't matter, thoughts?",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/654#issuecomment-282746002,Closes #520.,"Was it really that hard to write something more than such a snarky remark?

Whoa whoa whoa, assume good faith.
I don't really understand why the /* unknown escape, add it as-is */ block isn't doing what it's intended to do, or maybe a caller is messing with it. brb debugging",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/LemonBoy,8,https://github.com/irssi/irssi/pull/654#issuecomment-282748171,Closes #520.,"That makes sense if we want this behaviour for the other two or three places where expand_escape is called.
The /* unknown escape, add it as-is */ block doesn't fire because of how the escape sequence gets chunked in the loop.",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/654#issuecomment-282748615,Closes #520.,"yes, this was one of the reasons why I didn't understand this patch at first. The issue is not that it doesn't fire, it adds back \\n (instead of the ""desired"" \n)",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/654#issuecomment-282749027,Closes #520.,"...The title would thus better be ""do expand escaped escape sequences""",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/dequis,11,https://github.com/irssi/irssi/pull/654#issuecomment-282755731,Closes #520.,"I just did some testing, totally confused myself, wrote a very long comment with lots of test cases and then realized that bitlbee's command parser was messing with me and stripping slashes from commands. I shouldn't have used its control channel for testing.
Aaaaanyway this looks good to me.

The issue is not that it doesn't fire, it adds back \\n (instead of the ""desired"" \n)

And this explains it perfectly.
So this PR adds an exception for a double slash, so that \\n can become \n, while \a can remain as \a using the unknown escape block. Makes sense, ship it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/dequis,12,https://github.com/irssi/irssi/pull/654#issuecomment-284184894,Closes #520.,Huh this looks completely different to what I reviewed before.,True,{}
irssi/irssi,https://github.com/irssi/irssi,654,2017-02-18T21:32:00Z,2017-03-08T13:16:16Z,2017-03-08T23:47:52Z,CLOSED,False,7,0,1,https://github.com/LemonBoy,Do not expand the doubly-escaped sequences.,1,[],https://github.com/irssi/irssi/pull/654,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/654#issuecomment-284885325,Closes #520.,"on IRC I said something about ""\\k should remain \\k,"" which leads to convoluted code here and also wasn't what I intended to say. I think it's fine if \\ turns into \ everywhere (I was thinking about \k should stay \k as it is currently and not become k). Thus the code can be simplified to case '\\' : return '\\' from what I can tell",True,{}
irssi/irssi,https://github.com/irssi/irssi,655,2017-02-20T14:51:21Z,2017-03-08T13:19:18Z,2017-03-08T13:58:37Z,CLOSED,False,32,21,1,https://github.com/LemonBoy,Tab completion for /format values.,1,['orphan'],https://github.com/irssi/irssi/pull/655,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/655,I've tested this very briefly and it does seem to be consistent with how the completion for the other commands behaves.,I've tested this very briefly and it does seem to be consistent with how the completion for the other commands behaves.,True,{}
irssi/irssi,https://github.com/irssi/irssi,655,2017-02-20T14:51:21Z,2017-03-08T13:19:18Z,2017-03-08T13:58:37Z,CLOSED,False,32,21,1,https://github.com/LemonBoy,Tab completion for /format values.,1,['orphan'],https://github.com/irssi/irssi/pull/655,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/655#issuecomment-281100475,I've tested this very briefly and it does seem to be consistent with how the completion for the other commands behaves.,Good work \m/ :),True,{}
irssi/irssi,https://github.com/irssi/irssi,655,2017-02-20T14:51:21Z,2017-03-08T13:19:18Z,2017-03-08T13:58:37Z,CLOSED,False,32,21,1,https://github.com/LemonBoy,Tab completion for /format values.,1,['orphan'],https://github.com/irssi/irssi/pull/655,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/655#issuecomment-282728599,I've tested this very briefly and it does seem to be consistent with how the completion for the other commands behaves.,"/format irc <TAB> no longer completes to /format irc netsplit , /format irc netsplit_more , ... /format irc away ...",True,{}
irssi/irssi,https://github.com/irssi/irssi,655,2017-02-20T14:51:21Z,2017-03-08T13:19:18Z,2017-03-08T13:58:37Z,CLOSED,False,32,21,1,https://github.com/LemonBoy,Tab completion for /format values.,1,['orphan'],https://github.com/irssi/irssi/pull/655,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/655#issuecomment-282735010,I've tested this very briefly and it does seem to be consistent with how the completion for the other commands behaves.,The easy fix would be to check whether irc matches a module name but I'd prefer to change the format accepted by the command to a IMO saner /format [<module>/]<name>.,True,{}
irssi/irssi,https://github.com/irssi/irssi,655,2017-02-20T14:51:21Z,2017-03-08T13:19:18Z,2017-03-08T13:58:37Z,CLOSED,False,32,21,1,https://github.com/LemonBoy,Tab completion for /format values.,1,['orphan'],https://github.com/irssi/irssi/pull/655,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/655#issuecomment-282736231,I've tested this very briefly and it does seem to be consistent with how the completion for the other commands behaves.,"the old code somehow did that.. but I really like having completion for format values, too! I am also afraid that some private script may be using /format module name, in general would be nice if we can keep the syntax imo.. although I do not feel very strongly",True,{}
irssi/irssi,https://github.com/irssi/irssi,655,2017-02-20T14:51:21Z,2017-03-08T13:19:18Z,2017-03-08T13:58:37Z,CLOSED,False,32,21,1,https://github.com/LemonBoy,Tab completion for /format values.,1,['orphan'],https://github.com/irssi/irssi/pull/655,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/655#issuecomment-285038076,I've tested this very briefly and it does seem to be consistent with how the completion for the other commands behaves.,"I don't care enough about this to keep the PR open, if anyone wants to take care of this should feel free to pick this up.",True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/658,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.","PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.",True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/658#issuecomment-281359136,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.","what about filenames containing """,True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/658#issuecomment-282721529,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.",how does the parser handle e.g \? does it need to be escaped as well?,True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/658#issuecomment-282739369,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.","I don't really like this, I'd rather allow dcc get to accept unquoted args. (see #656 (comment))",True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/658#issuecomment-282744068,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.",or we could further improve /dcc get to accept multiple files,True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/658#issuecomment-284184798,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.",ehhhh,True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/martinetd,7,https://github.com/irssi/irssi/pull/658#issuecomment-284212055,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.","Hi!
Just reacting here because I was debugging the same issue just now, and found that however cmd_get_quoted_param works you didn't actually need to escape the internal quotes - e.g. '""foo ""with quotes""""' passed to it would return a proper 'foo ""with quotes""' somehow.
The second patch in this PR now makes irssi segfault if I try to send a file with a quote in the filename -- that's rare enough, but still not exactly an expected behaviour :) (I get an invalid free in sig_dcc_request)
Should I open a new issue for it?
I'm not quite sure what's the best action to take now, quoting properly seems like an obvious thing to do but we also need to fix parsing in that case.",True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/martinetd,8,https://github.com/irssi/irssi/pull/658#issuecomment-284212313,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.","Ugh, actually that invalid free is just that escape_string doesn't return the right pointer, e.g. it returns the address for \0 at the end of the string in the memory it just allocated, and not the g_malloc address... So this won't work for any file regardless of wether escapement is ok or not.
I'll go with ""ehhhh"" too, will fix that + check if escaping works and if it does post a new PR with just that.",True,{}
irssi/irssi,https://github.com/irssi/irssi,658,2017-02-21T14:24:18Z,2017-03-04T20:43:22Z,2018-01-10T11:53:29Z,MERGED,True,21,15,4,https://github.com/LemonBoy,Quote the filename when dcc requests are auto accepted.,2,[],https://github.com/irssi/irssi/pull/658,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/658#issuecomment-284225345,"PR #453 forces the user to quote the filenames given to /DCC commands
when they contain spaces but the autoget functionality didn't get
updated so the filename was always passed without quotes.
Closes #656.",thanks for hanging in here and sorry for merging the bad code,True,{}
irssi/irssi,https://github.com/irssi/irssi,659,2017-02-27T13:45:06Z,2017-03-07T22:37:24Z,2019-06-26T23:13:57Z,MERGED,True,47,14,2,https://github.com/ailin-nemui,make foreach send commands,1,['auto-merge'],https://github.com/irssi/irssi/pull/659,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/659,fixes /foreach query unquery [oops!],fixes /foreach query unquery [oops!],True,{}
irssi/irssi,https://github.com/irssi/irssi,659,2017-02-27T13:45:06Z,2017-03-07T22:37:24Z,2019-06-26T23:13:57Z,MERGED,True,47,14,2,https://github.com/ailin-nemui,make foreach send commands,1,['auto-merge'],https://github.com/irssi/irssi/pull/659,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/659#issuecomment-282738782,fixes /foreach query unquery [oops!],"A bit copypastey, but I also looked into this before and didn't have any better ideas so sure.",True,{}
irssi/irssi,https://github.com/irssi/irssi,659,2017-02-27T13:45:06Z,2017-03-07T22:37:24Z,2019-06-26T23:13:57Z,MERGED,True,47,14,2,https://github.com/ailin-nemui,make foreach send commands,1,['auto-merge'],https://github.com/irssi/irssi/pull/659,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/659#issuecomment-282744330,fixes /foreach query unquery [oops!],"the problem would be that /foreach sends input instead of commands, so it's easy to mess up and spam all your windows/channels/queries",True,{}
irssi/irssi,https://github.com/irssi/irssi,661,2017-03-01T05:10:28Z,2017-03-02T08:46:02Z,2019-06-26T23:14:26Z,MERGED,True,2,2,1,https://github.com/Stevie-O,Fix for #660,1,[],https://github.com/irssi/irssi/pull/661,https://github.com/Stevie-O,1,https://github.com/irssi/irssi/pull/661,This fixes #660,This fixes #660,True,{}
irssi/irssi,https://github.com/irssi/irssi,661,2017-03-01T05:10:28Z,2017-03-02T08:46:02Z,2019-06-26T23:14:26Z,MERGED,True,2,2,1,https://github.com/Stevie-O,Fix for #660,1,[],https://github.com/irssi/irssi/pull/661,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/661#issuecomment-283267563,This fixes #660,It makes sense to do so because the script destroyed signal is only used internally and it doesn't call into the Perl side. The only caveat is that the script won't see the signal at all (do we care about this?),True,{}
irssi/irssi,https://github.com/irssi/irssi,661,2017-03-01T05:10:28Z,2017-03-02T08:46:02Z,2019-06-26T23:14:26Z,MERGED,True,2,2,1,https://github.com/Stevie-O,Fix for #660,1,[],https://github.com/irssi/irssi/pull/661,https://github.com/Stevie-O,3,https://github.com/irssi/irssi/pull/661#issuecomment-283531724,This fixes #660,"@LemonBoy I'm not sure what you mean when you say that it is 'only used internally and doesn't call into the Perl side', but you are right that the script itself can't get the script destroyed signal; it never could! By the time the perl_script_destroy function is called, pretty much everything the script needs in order to run has already been removed by perl_script_destroy_package.
I considered the idea of allowing a script to receive its own destroy signal, but rejected it for the following reasons:

Such a thing would make it impossible for a user to unload a script without executing any code on it.
If a script wants a to have a 'safe unload' mechanism, the script may register a custom command that cleans up and then unloads itself; if the user wants to do a clean unload, they can just run that command instead.  (That should work fine; I think I'll test that next.)
If the 'script destroyed' handler causes a script error, we're right back where we started.

All in all, it does not seem like a good idea to try to automatically notify scripts that they're being unloaded.",True,{}
irssi/irssi,https://github.com/irssi/irssi,661,2017-03-01T05:10:28Z,2017-03-02T08:46:02Z,2019-06-26T23:14:26Z,MERGED,True,2,2,1,https://github.com/Stevie-O,Fix for #660,1,[],https://github.com/irssi/irssi/pull/661,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/661#issuecomment-283592604,This fixes #660,in general I would not expect scripts to do such mischievous things as registering this signal. It would be nice to have a safe scripting api but we do not at the moment,True,{}
irssi/irssi,https://github.com/irssi/irssi,662,2017-03-02T03:23:28Z,2017-03-04T03:07:30Z,2017-03-04T03:07:39Z,CLOSED,False,72,3,4,https://github.com/Stevie-O,Fix for segfault when a 'script error' handler dies,1,[],https://github.com/irssi/irssi/pull/662,https://github.com/Stevie-O,1,https://github.com/irssi/irssi/pull/662,"I have put together a well and true fix for #101. (I saw the comment in perl.txt and took it as a challenge 😁) Not sure if it's the best solution, but it does work.
The fix is relatively straightforward and only touches four source files.
It adds two fields to PERL_SCRIPT_REC: script_error_status and disable_signals.
The overhead is negligible for the common case (i.e. when scripts aren't experiencing errors.)
script_error_status serves two purposes:

It is used to detect nested script error signals for the same script.  Barring certain very unlikely situations, such a situation indicates that a script's own script error handler has died.
It serves as a crude reference count on the script, to prevent both use-after-free errors and memory leaks.

disable_signals has only one purpose: To prevent script error signals from being delivered to a script.  It actually does more than that -- it prevents any signals from being delivered to the script.  I don't consider this much of a problem; unless the user has some very fancy scripts loaded, the only signal that would ever be delivered to a script with this flag set is script error.
For example, here's what it looks like on my screen when I run a variation of the example command from #101:
/script exec sub fail { print(__PACKAGE__ . ""::fail('$_[1]')""); die 'goodbye, cruel world'; }; Irssi::signal_add('script error', 'fail'); die 'hasta la vista'

22:07 Irssi::Script::data1::fail('hasta la vista at (eval 317) line 1.
22:07 ')
22:07 -!- Irssi: Error in script data1:
22:07 goodbye, cruel world at (eval 317) line 1.
22:07

This is what happens behind the scenes:

A script error occurs (the die 'hasta la vista')
perl_report_script_error (a new function) sets the script's script_error_status to SES_ERROR, then emits a script error signal.
The script's error handler prints the message about 'fail' being called (the first two output lines)
A second script error occurs (the die 'goodbye, cruel world')
perl_report_script_error sees that we're already handling a script error.

The script error signal that was emitted in step 2 is stopped
The script's disable_signals flag is set to TRUE.
A new script error signal is raised.  Note that our script will not receive that notification, because we shut its signals off.
The sig_script_error handler in perl-fe.c displays the error notification (the last three output lines)
The sig_script_error handler in perl-core.c unloads the script, but does not delete the PERL_SCRIPT_REC structure.  Instead, it sets the script's script_error_status to SES_DESTROY.
The script error signal_emit call from step 2 completes and control is returned to perl_report_script_error.


perl_report_script_error sees that the script's script_error_status is now SES_DESTROY, and frees the PERL_SCRIPT_REC structure.","I have put together a well and true fix for #101. (I saw the comment in perl.txt and took it as a challenge 😁) Not sure if it's the best solution, but it does work.
The fix is relatively straightforward and only touches four source files.
It adds two fields to PERL_SCRIPT_REC: script_error_status and disable_signals.
The overhead is negligible for the common case (i.e. when scripts aren't experiencing errors.)
script_error_status serves two purposes:

It is used to detect nested script error signals for the same script.  Barring certain very unlikely situations, such a situation indicates that a script's own script error handler has died.
It serves as a crude reference count on the script, to prevent both use-after-free errors and memory leaks.

disable_signals has only one purpose: To prevent script error signals from being delivered to a script.  It actually does more than that -- it prevents any signals from being delivered to the script.  I don't consider this much of a problem; unless the user has some very fancy scripts loaded, the only signal that would ever be delivered to a script with this flag set is script error.
For example, here's what it looks like on my screen when I run a variation of the example command from #101:
/script exec sub fail { print(__PACKAGE__ . ""::fail('$_[1]')""); die 'goodbye, cruel world'; }; Irssi::signal_add('script error', 'fail'); die 'hasta la vista'

22:07 Irssi::Script::data1::fail('hasta la vista at (eval 317) line 1.
22:07 ')
22:07 -!- Irssi: Error in script data1:
22:07 goodbye, cruel world at (eval 317) line 1.
22:07

This is what happens behind the scenes:

A script error occurs (the die 'hasta la vista')
perl_report_script_error (a new function) sets the script's script_error_status to SES_ERROR, then emits a script error signal.
The script's error handler prints the message about 'fail' being called (the first two output lines)
A second script error occurs (the die 'goodbye, cruel world')
perl_report_script_error sees that we're already handling a script error.

The script error signal that was emitted in step 2 is stopped
The script's disable_signals flag is set to TRUE.
A new script error signal is raised.  Note that our script will not receive that notification, because we shut its signals off.
The sig_script_error handler in perl-fe.c displays the error notification (the last three output lines)
The sig_script_error handler in perl-core.c unloads the script, but does not delete the PERL_SCRIPT_REC structure.  Instead, it sets the script's script_error_status to SES_DESTROY.
The script error signal_emit call from step 2 completes and control is returned to perl_report_script_error.


perl_report_script_error sees that the script's script_error_status is now SES_DESTROY, and frees the PERL_SCRIPT_REC structure.",True,{}
irssi/irssi,https://github.com/irssi/irssi,662,2017-03-02T03:23:28Z,2017-03-04T03:07:30Z,2017-03-04T03:07:39Z,CLOSED,False,72,3,4,https://github.com/Stevie-O,Fix for segfault when a 'script error' handler dies,1,[],https://github.com/irssi/irssi/pull/662,https://github.com/Stevie-O,2,https://github.com/irssi/irssi/pull/662#issuecomment-283661468,"I have put together a well and true fix for #101. (I saw the comment in perl.txt and took it as a challenge 😁) Not sure if it's the best solution, but it does work.
The fix is relatively straightforward and only touches four source files.
It adds two fields to PERL_SCRIPT_REC: script_error_status and disable_signals.
The overhead is negligible for the common case (i.e. when scripts aren't experiencing errors.)
script_error_status serves two purposes:

It is used to detect nested script error signals for the same script.  Barring certain very unlikely situations, such a situation indicates that a script's own script error handler has died.
It serves as a crude reference count on the script, to prevent both use-after-free errors and memory leaks.

disable_signals has only one purpose: To prevent script error signals from being delivered to a script.  It actually does more than that -- it prevents any signals from being delivered to the script.  I don't consider this much of a problem; unless the user has some very fancy scripts loaded, the only signal that would ever be delivered to a script with this flag set is script error.
For example, here's what it looks like on my screen when I run a variation of the example command from #101:
/script exec sub fail { print(__PACKAGE__ . ""::fail('$_[1]')""); die 'goodbye, cruel world'; }; Irssi::signal_add('script error', 'fail'); die 'hasta la vista'

22:07 Irssi::Script::data1::fail('hasta la vista at (eval 317) line 1.
22:07 ')
22:07 -!- Irssi: Error in script data1:
22:07 goodbye, cruel world at (eval 317) line 1.
22:07

This is what happens behind the scenes:

A script error occurs (the die 'hasta la vista')
perl_report_script_error (a new function) sets the script's script_error_status to SES_ERROR, then emits a script error signal.
The script's error handler prints the message about 'fail' being called (the first two output lines)
A second script error occurs (the die 'goodbye, cruel world')
perl_report_script_error sees that we're already handling a script error.

The script error signal that was emitted in step 2 is stopped
The script's disable_signals flag is set to TRUE.
A new script error signal is raised.  Note that our script will not receive that notification, because we shut its signals off.
The sig_script_error handler in perl-fe.c displays the error notification (the last three output lines)
The sig_script_error handler in perl-core.c unloads the script, but does not delete the PERL_SCRIPT_REC structure.  Instead, it sets the script's script_error_status to SES_DESTROY.
The script error signal_emit call from step 2 completes and control is returned to perl_report_script_error.


perl_report_script_error sees that the script's script_error_status is now SES_DESTROY, and frees the PERL_SCRIPT_REC structure.","TBH, you probably don't want to merge this (I've got a better solution in the works); however, I would greatly appreciate any feedback you guys have on my design.",True,{}
irssi/irssi,https://github.com/irssi/irssi,662,2017-03-02T03:23:28Z,2017-03-04T03:07:30Z,2017-03-04T03:07:39Z,CLOSED,False,72,3,4,https://github.com/Stevie-O,Fix for segfault when a 'script error' handler dies,1,[],https://github.com/irssi/irssi/pull/662,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/662#issuecomment-283910898,"I have put together a well and true fix for #101. (I saw the comment in perl.txt and took it as a challenge 😁) Not sure if it's the best solution, but it does work.
The fix is relatively straightforward and only touches four source files.
It adds two fields to PERL_SCRIPT_REC: script_error_status and disable_signals.
The overhead is negligible for the common case (i.e. when scripts aren't experiencing errors.)
script_error_status serves two purposes:

It is used to detect nested script error signals for the same script.  Barring certain very unlikely situations, such a situation indicates that a script's own script error handler has died.
It serves as a crude reference count on the script, to prevent both use-after-free errors and memory leaks.

disable_signals has only one purpose: To prevent script error signals from being delivered to a script.  It actually does more than that -- it prevents any signals from being delivered to the script.  I don't consider this much of a problem; unless the user has some very fancy scripts loaded, the only signal that would ever be delivered to a script with this flag set is script error.
For example, here's what it looks like on my screen when I run a variation of the example command from #101:
/script exec sub fail { print(__PACKAGE__ . ""::fail('$_[1]')""); die 'goodbye, cruel world'; }; Irssi::signal_add('script error', 'fail'); die 'hasta la vista'

22:07 Irssi::Script::data1::fail('hasta la vista at (eval 317) line 1.
22:07 ')
22:07 -!- Irssi: Error in script data1:
22:07 goodbye, cruel world at (eval 317) line 1.
22:07

This is what happens behind the scenes:

A script error occurs (the die 'hasta la vista')
perl_report_script_error (a new function) sets the script's script_error_status to SES_ERROR, then emits a script error signal.
The script's error handler prints the message about 'fail' being called (the first two output lines)
A second script error occurs (the die 'goodbye, cruel world')
perl_report_script_error sees that we're already handling a script error.

The script error signal that was emitted in step 2 is stopped
The script's disable_signals flag is set to TRUE.
A new script error signal is raised.  Note that our script will not receive that notification, because we shut its signals off.
The sig_script_error handler in perl-fe.c displays the error notification (the last three output lines)
The sig_script_error handler in perl-core.c unloads the script, but does not delete the PERL_SCRIPT_REC structure.  Instead, it sets the script's script_error_status to SES_DESTROY.
The script error signal_emit call from step 2 completes and control is returned to perl_report_script_error.


perl_report_script_error sees that the script's script_error_status is now SES_DESTROY, and frees the PERL_SCRIPT_REC structure.","hi @Stevie-O   thanks for taking an interest in tackling this interesting issue, it seems much work for little gain. Also most scripts work fine without using this signal
(in my opinion the whole signal stuff and the whole script bindings need a big make over/rewrite which will be a lot of effort and I don't have time for that to properly, like refcount everything and protect from signal loops and other funny use after free behaviour. I think we should avoid adding special cases to fix a very specific problems and strive for ground breaking changed that can tackle a class of issues)",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/Stevie-O,1,https://github.com/irssi/irssi/pull/663,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/Stevie-O,2,https://github.com/irssi/irssi/pull/663#issuecomment-284126437,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","This commit fixes three kinds of problems:
Use-after-free of PERL_SCRIPT_REC and PERL_SIGNAL_REC
Consider a script, ignore_master, that manages ignore settings. It some custom commands registered, including one named ignore_cloned, and signal handlers for ignore created, ignore destroyed, and ignore changed.
You type ignore_cloned in order to ignore any *!user@host shared by 3 or more users.
This causes the 'command ignore_cloned' signal to be delivered to ignore_master (via perl_call_signal in src/perl/perl-signals.c).
The ignore_cloned command finds someone and adds them to the ignore list by executing the ""ignore"" command. This is processed by cmd_ignore in src/fe-common/core/fe-ignore.c, which does a lot of prep work before calling ignore_add_rec in src/core/ignore.c, which causes an ignore created signal to be emitted.
This causes the ignore created to be delivered to ignore_master (again, via perl_call_signal in src/perl/perl-signals.c.)
Now consider the situation when an error occurs in the ignore created signal handler.  Perl terminates the function call, leading to this code path:
                signal_emit(""script error"", 2, script, error);
                rec = NULL;

The script error signal is emitted, which will cause the script to be unloaded.  To be precise, it causes this:

The package namespace is wiped by perl_script_destroy_package. This means that none of the code or variables that the script loaded can be accessed through the package namespace.
With that, nearly all of the script is wiped. However, not all of it is gone -- the ignore_cloned command handler is still executing.  Perl ensures that that won't malfunction
All PERL_SOURCE_RECs and PERL_SIGNAL_RECs associated with the script are freed, as well as the PERL_SCRIPT_REC for the script.  This includes rec.

Because the script error signal unloaded the script, rec now points to freed memory. We set it to NULL so that the following code does not attempt to touch it.
Then, with the signal_emit finished, control is returned by ignore_add_rec, which then returns to its caller, which is the ignore_cloned command handler in the script we just unloaded.  What happens next depends on how the script is written.
Possibility 1: The script tries to call a function in its own package.
Because the package namespace was wiped by perl_script_destroy_package, this will fail with an 'Undefined subroutine' error.  This will then cause this to run:
                signal_emit(""script error"", 2, script, error);

However, script refers to memory that was freed by step 3 above.  If only the default handlers are registered, this will then dereference a whole lot of freed memory, culminating in a double-free bug.
Possibility 2: The script finishes executing without trying to call any functions in its own package.
In this instance, the call completes without error -- but rec still points to freed memory. And we then run the second half of perl_call_signal on that freed memory.
Protection from recursive scripts
As part of some code that protects against integer wraparound in the reference counting code, the new code gets protection from this situation for free:
use strict;
use Irssi qw/command_bind command/;

command_bind('recursive-command', sub {
	command('recursive-command');
});

Under the old code, that would recurse until heap or stack space was exhausted, and then the program would segfault.
Obviously, apart from contrived circumstances, this would only happen if someone made a mistake in their script. (Perhaps they meant to invoke a different command.).  As things go, ""don't make mistakes or it will segfault"" isn't a very user-friendly arrangement ;)
The new code will terminate the script well before that happens.
Protection from recursion in script error
While the preceding also gives protection against script error, there is specific code included to detect recursion in script error events, and if that happens, the script's signal and command handlers are temporarily disabled.  This improves the usefulness of displayed error messages.",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/663#issuecomment-284883257,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","thanks for your submission, it will take a while before I get to take a look at it",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/663#issuecomment-285753443,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","I found another nice use case which I believe is not covered by your patch,  thanks to @vague666
use strict;
use warnings;

sub sig_setup_changed {
    die ""xxx"";
}

Irssi::settings_add_str('crash', 'change_this_to_crash', '');
Irssi::signal_add('setup changed', 'sig_setup_changed');
/set change_this_to_crash boom
feel free to investigate if you're bored",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/663#issuecomment-285812957,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","@ailin-nemui gee thanks, make my bad coding practices known to the world! :P",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/Stevie-O,6,https://github.com/irssi/irssi/pull/663#issuecomment-286550449,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","@ailin-nemui There, that fixes that:
16:32 -!-  ___           _
16:32 -!- |_ _|_ _ _____(_)
16:32 -!-  | || '_(_-<_-< |
16:32 -!- |___|_| /__/__/_|
16:32 -!- Irssi v1.0.1-1 - http://www.irssi.org
16:32 -!- Irssi: Loaded script vague666
16:32 [crash]
16:32 change_this_to_crash = boom
16:32 -!- Irssi: Error in script vague666:
16:32 xxx at /home/stevie/.irssi-dev/scripts/vague666.pl line 5.
16:32",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/663#issuecomment-286819456,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","Thanks for your work! Note to self: some scripts try to force a value in a range when using /set, so they want to overwrite this in setup changed. Verify if this is broken by this fix",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/Stevie-O,8,https://github.com/irssi/irssi/pull/663#issuecomment-286870690,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.",@ailin-nemui Do you have an example of such a script so I know how they would be doing it?,True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/Stevie-O,9,https://github.com/irssi/irssi/pull/663#issuecomment-286912554,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","Okay, I dug up an example ""pushover.pl"" by using Github's source code search functionality, and created a simple test:
use strict;
use warnings;

use Irssi qw/settings_add_int settings_get_int settings_set_int signal_add/;

use constant { LESS_THAN_10 => ""less_than_10"" };

# test case based on pushover.pl
# https://github.com/hansnielsen/irssi-scripts/blob/108490bd3d2ad6a1b91ca58e5f866d01b64a9962/pushover.pl

sub sig_setup_changed {
	if (settings_get_int(LESS_THAN_10) >= 10) {
		settings_set_int(LESS_THAN_10, 9);
	}
}

settings_add_int('test', LESS_THAN_10, 5);
signal_add('setup changed', \&sig_setup_changed);
When I do /set less_than_10 42 the output is:
19:28 [test]
19:28 less_than_10 = 42

but that's merely cosmetic;  the setting was, in fact, changed to 9. When I do /set less_than_10 I get:
19:28 [test]
19:28 less_than_10 = 9

I hope that's okay, at least for the short-term; while I believe I can create a fix that preserves the original output (which would have been the rewritten value), it is much more invasive and will require more careful review.",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/663#issuecomment-288083403,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","thanks for fixing the crash, in my opinion the old behaviour was nicer, immediately giving visual feedback that a value could not be changed. mhm",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/Stevie-O,11,https://github.com/irssi/irssi/pull/663#issuecomment-288093187,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","I do agree with you that the old behavior was nicer, and I'm currently working on a good way to fix it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/663#issuecomment-292213791,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.","I think it is basically good, maybe back out that last change that I asked for since you are working on an even better fix",True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/663#issuecomment-321290987,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.",@Stevie-O still interested in doing anything here?,True,{}
irssi/irssi,https://github.com/irssi/irssi,663,2017-03-04T03:07:15Z,2017-09-10T17:45:49Z,2017-09-10T17:45:49Z,CLOSED,False,164,11,6,https://github.com/Stevie-O,Use-after-free and other script stability fixes,3,['orphan'],https://github.com/irssi/irssi/pull/663,https://github.com/ailin-nemui,14,https://github.com/irssi/irssi/pull/663#issuecomment-328359146,"This commit eliminates several use-after-free situations relating to
unloading scripts.
It also eliminates some segfaults stemming from recursive signals/commands.",closing for inactivity,True,{}
irssi/irssi,https://github.com/irssi/irssi,664,2017-03-05T08:05:10Z,2017-03-05T08:12:24Z,2017-03-05T08:12:24Z,CLOSED,False,6,5,1,https://github.com/martinetd,Fix dc99f8d7a of PR #658 (LemonBoy/dcc-autoaccept),1,[],https://github.com/irssi/irssi/pull/664,https://github.com/martinetd,1,https://github.com/irssi/irssi/pull/664,"escape_string should return the alloc'ed address, not a pointer to the
NUL at the end of the string","escape_string should return the alloc'ed address, not a pointer to the
NUL at the end of the string",True,{}
irssi/irssi,https://github.com/irssi/irssi,664,2017-03-05T08:05:10Z,2017-03-05T08:12:24Z,2017-03-05T08:12:24Z,CLOSED,False,6,5,1,https://github.com/martinetd,Fix dc99f8d7a of PR #658 (LemonBoy/dcc-autoaccept),1,[],https://github.com/irssi/irssi/pull/664,https://github.com/martinetd,2,https://github.com/irssi/irssi/pull/664#issuecomment-284212875,"escape_string should return the alloc'ed address, not a pointer to the
NUL at the end of the string","Sorry used wrong commiter mail, sending again as I can't seem to figure how to update the very same pull req. Also softened commit message.",True,{}
irssi/irssi,https://github.com/irssi/irssi,665,2017-03-05T08:12:44Z,2017-03-06T10:34:59Z,2017-03-06T10:34:59Z,CLOSED,False,6,5,1,https://github.com/martinetd,Fix escape_string returning wrong address,1,[],https://github.com/irssi/irssi/pull/665,https://github.com/martinetd,1,https://github.com/irssi/irssi/pull/665,"escape_string should return the alloc'ed address, not a pointer to the
NUL at the end of the string
This fixes dc99f8d of PR #658 (LemonBoy/dcc-autoaccept)","escape_string should return the alloc'ed address, not a pointer to the
NUL at the end of the string
This fixes dc99f8d of PR #658 (LemonBoy/dcc-autoaccept)",True,{}
irssi/irssi,https://github.com/irssi/irssi,665,2017-03-05T08:12:44Z,2017-03-06T10:34:59Z,2017-03-06T10:34:59Z,CLOSED,False,6,5,1,https://github.com/martinetd,Fix escape_string returning wrong address,1,[],https://github.com/irssi/irssi/pull/665,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/665#issuecomment-284360061,"escape_string should return the alloc'ed address, not a pointer to the
NUL at the end of the string
This fixes dc99f8d of PR #658 (LemonBoy/dcc-autoaccept)","thanks, I reverted the broken code merge",True,{}
irssi/irssi,https://github.com/irssi/irssi,666,2017-03-06T10:28:04Z,2017-03-06T10:28:27Z,2017-03-10T15:41:56Z,MERGED,True,15,21,4,https://github.com/ailin-nemui,"Revert ""Quote the filename when dcc requests are auto accepted.""",1,[],https://github.com/irssi/irssi/pull/666,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/666,"Reverts #658
This code was broken.","Reverts #658
This code was broken.",True,{}
irssi/irssi,https://github.com/irssi/irssi,667,2017-03-07T22:24:10Z,2017-03-08T08:45:40Z,2018-01-10T11:53:29Z,MERGED,True,6,3,1,https://github.com/ailin-nemui,fix dcc get,1,[],https://github.com/irssi/irssi/pull/667,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/667,fixes #656,fixes #656,True,{}
irssi/irssi,https://github.com/irssi/irssi,667,2017-03-07T22:24:10Z,2017-03-08T08:45:40Z,2018-01-10T11:53:29Z,MERGED,True,6,3,1,https://github.com/ailin-nemui,fix dcc get,1,[],https://github.com/irssi/irssi/pull/667,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/667#issuecomment-284881059,fixes #656,"we should escape characters, this is a regression of consistently using quotes around file names",True,{}
irssi/irssi,https://github.com/irssi/irssi,667,2017-03-07T22:24:10Z,2017-03-08T08:45:40Z,2018-01-10T11:53:29Z,MERGED,True,6,3,1,https://github.com/ailin-nemui,fix dcc get,1,[],https://github.com/irssi/irssi/pull/667,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/667#issuecomment-284963063,fixes #656,"Looks good
Odd but not necessarily bad behavior: if a filename doesn't have spaces but has double quotes, all of these are valid:
/dcc get bob asd""f
/dcc get bob ""asd""f""
/dcc get bob 'asd""f'
/dcc get bob ""asd\""f""
/dcc get bob 'asd\""f'

But this isn't:
/dcc get bob asd\""f

Also, only the first argument is taken. Given a filename with spaces, asd f, this is valid now:
/dcc get bob ""asd f"" garbage

garbage is just ignored. But this is invalid:
/dcc get bob asd f

(and it was previously valid which is the feature-regression i keep complaining about and you're probably sick of hearing about by now)",True,{}
irssi/irssi,https://github.com/irssi/irssi,667,2017-03-07T22:24:10Z,2017-03-08T08:45:40Z,2018-01-10T11:53:29Z,MERGED,True,6,3,1,https://github.com/ailin-nemui,fix dcc get,1,[],https://github.com/irssi/irssi/pull/667,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/667#issuecomment-284981901,fixes #656,"thanks, let's do this (for now) then",True,{}
irssi/irssi,https://github.com/irssi/irssi,669,2017-03-08T23:47:24Z,2017-03-10T16:13:20Z,2018-01-10T11:53:30Z,MERGED,True,2,0,1,https://github.com/dequis,expand_escape: expand double backslash as a backslash,1,['auto-merge'],https://github.com/irssi/irssi/pull/669,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/669,"PR #654 redux (it was so close...)
Closes #520","PR #654 redux (it was so close...)
Closes #520",True,{}
irssi/irssi,https://github.com/irssi/irssi,672,2017-03-12T09:46:23Z,2017-04-05T12:41:02Z,2017-04-05T12:41:02Z,CLOSED,False,1,1,1,https://github.com/xnite,Update irssi.conf,1,[],https://github.com/irssi/irssi/pull/672,https://github.com/xnite,1,https://github.com/irssi/irssi/pull/672,"The address for IRCSource is wrong, so I've corrected it.","The address for IRCSource is wrong, so I've corrected it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,672,2017-03-12T09:46:23Z,2017-04-05T12:41:02Z,2017-04-05T12:41:02Z,CLOSED,False,1,1,1,https://github.com/xnite,Update irssi.conf,1,[],https://github.com/irssi/irssi/pull/672,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/672#issuecomment-285934424,"The address for IRCSource is wrong, so I've corrected it.","The network this referred to originally was http://www.ircsource.net/servers.php
seems to be different from irc-source with dash. not sure if it still exists?",True,{}
irssi/irssi,https://github.com/irssi/irssi,672,2017-03-12T09:46:23Z,2017-04-05T12:41:02Z,2017-04-05T12:41:02Z,CLOSED,False,1,1,1,https://github.com/xnite,Update irssi.conf,1,[],https://github.com/irssi/irssi/pull/672,https://github.com/xnite,3,https://github.com/irssi/irssi/pull/672#issuecomment-285934987,"The address for IRCSource is wrong, so I've corrected it.","Not sure, tried connecting and it seemed dead. I feel kind of embarrassed now because I thought it was meant to be a reference to my network since I couldn't find a network called IRCSource on IRC-Source.com. If you don't mind I would still like it added to the list but feel free to keep both. Officially the network is BuddyIM (irc.buddy.im) but irc.irc-source.com points to it and we have valid IV certificates for all the domains pointing to the network.",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/676,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/676#issuecomment-287804373,,https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=856201,True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/676#issuecomment-287810765,,"thanks for review, so far I don't understand why irssi would have behaved differently in older versions or what's going on at all? anyway actually drawing the screen does seem like the right thing to do before starting to wait on events",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/676#issuecomment-287859801,,"Is this something anyone has managed to reproduce, or just that guy in the debian ticket?",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/676#issuecomment-287884223,,I can actually confirm this -- start irssi with a fresh config and I have a small delay before I can see the whole ui,True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/Stevie-O,6,https://github.com/irssi/irssi/pull/676#issuecomment-287904907,,"Can confirm that the change appears to be in glib; built/run 1.0.1 irssi against several Glib versions on Debian and the change appears to be between 2.49.2-2 (no delay visible at startup) and 2.49.3-1 (noticeable delay at startup).
I looked at the changelog for Glib between v2.49.2 to v2.49.3 and nothing jumps out at me as a possible cause for this; as soon as I figure out how, I'll bisect it. (Debian's build system is giving me grief trying to build v2.49.2 from a git clone.)",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/Stevie-O,7,https://github.com/irssi/irssi/pull/676#issuecomment-287979413,,"@ailin-nemui , @LemonBoy  Okay, I've tracked down the specifics of this issue:
In GNOME/glib@e4ee307 there were changes to three functions related to fd monitoring in order to reduce unnecessary wakeups: g_source_set_ready_time, g_main_context_add_poll_unlocked, and g_main_context_remove_poll_unlocked.  Previously, these functions would always cause a wakeup of the main loop; this commit changes them to only wake up the main thread if they're not being called from the main thread.
g_main_context_add_poll_unlocked is called unconditionally by g_main_context_new, which is the implementation for g_main_new, which is called by src/fe-text/irssi.c.  This means that the first call to g_main_iteration (src/fe-text/irssi.c line 327) would always complete immediately, causing an immediate 'reload_config' check followed by dirty_check.  Under the new glib logic, however, that doesn't happen anymore; so it waits until some sort of timer expires before it starts rendering the screen.
It seems to me that the most appropriate way to fix this would be to rearrange the loop as follows:
        while (!quitting) {
                if (reload_config) {
                        /* SIGHUP received, do /RELOAD */
                        reload_config = FALSE;
                        signal_emit(""command reload"", 1, """");
                }

                dirty_check();

                term_refresh_freeze();
                g_main_iteration(TRUE);
                term_refresh_thaw();
        }",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/676#issuecomment-288052246,,"Sounds good to me, want to make the pr?",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/LemonBoy,9,https://github.com/irssi/irssi/pull/676#issuecomment-288064384,,"Thanks for the thorough investigation @Stevie-O, +1 for the proposed change.",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/Stevie-O,10,https://github.com/irssi/irssi/pull/676#issuecomment-288076694,,"Okay, doing one last sanity check before I make a PR.",True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/Stevie-O,11,https://github.com/irssi/irssi/pull/676#issuecomment-288080743,,There we go; the new PR is #680.,True,{}
irssi/irssi,https://github.com/irssi/irssi,676,2017-03-20T15:53:25Z,2017-03-21T13:43:17Z,2017-03-21T15:55:55Z,CLOSED,False,4,0,1,https://github.com/ailin-nemui,fix initial screen draw (bdo#856201),1,['waiting for feedback'],https://github.com/irssi/irssi/pull/676,https://github.com/dequis,12,https://github.com/irssi/irssi/pull/676#issuecomment-288124983,,"We should probably open an issue on glib's side, at least to let them know. It's not a big deal for us but they may consider this a regression.",True,{}
irssi/irssi,https://github.com/irssi/irssi,677,2017-03-20T20:00:38Z,2017-04-04T10:27:51Z,2018-01-10T11:53:47Z,MERGED,True,15,10,2,https://github.com/rrebello,OpenSSL support detection and documentation fixes,2,[],https://github.com/irssi/irssi/pull/677,https://github.com/rrebello,1,https://github.com/irssi/irssi/pull/677,This commit series improves the detection of OpenSSL through the use of pkg-config in the configure script and removes an outdated information from INSTALL.,This commit series improves the detection of OpenSSL through the use of pkg-config in the configure script and removes an outdated information from INSTALL.,True,{}
irssi/irssi,https://github.com/irssi/irssi,677,2017-03-20T20:00:38Z,2017-04-04T10:27:51Z,2018-01-10T11:53:47Z,MERGED,True,15,10,2,https://github.com/rrebello,OpenSSL support detection and documentation fixes,2,[],https://github.com/irssi/irssi/pull/677,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/677#issuecomment-287881897,This commit series improves the detection of OpenSSL through the use of pkg-config in the configure script and removes an outdated information from INSTALL.,Relevant 6300dfe @ahf,True,{}
irssi/irssi,https://github.com/irssi/irssi,678,2017-03-20T20:26:16Z,2017-03-22T19:55:37Z,2017-03-22T21:19:33Z,CLOSED,False,48,11,1,https://github.com/LemonBoy,Parse GEN_IPADD records in subjectAltName.,1,"['needs testing', 'WIP']",https://github.com/irssi/irssi/pull/678,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/678,"Needs testing, don't have time right now to do so.
Fixes bdo#583544","Needs testing, don't have time right now to do so.
Fixes bdo#583544",True,{}
irssi/irssi,https://github.com/irssi/irssi,678,2017-03-20T20:26:16Z,2017-03-22T19:55:37Z,2017-03-22T21:19:33Z,CLOSED,False,48,11,1,https://github.com/LemonBoy,Parse GEN_IPADD records in subjectAltName.,1,"['needs testing', 'WIP']",https://github.com/irssi/irssi/pull/678,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/678#issuecomment-287888816,"Needs testing, don't have time right now to do so.
Fixes bdo#583544","Crazy stuff. It sounds like the sort of thing openssl should be handling for us, and it really would be better to find a way to solve this with less code, not more.",True,{}
irssi/irssi,https://github.com/irssi/irssi,678,2017-03-20T20:26:16Z,2017-03-22T19:55:37Z,2017-03-22T21:19:33Z,CLOSED,False,48,11,1,https://github.com/LemonBoy,Parse GEN_IPADD records in subjectAltName.,1,"['needs testing', 'WIP']",https://github.com/irssi/irssi/pull/678,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/678#issuecomment-287890642,"Needs testing, don't have time right now to do so.
Fixes bdo#583544","static gboolean irssi_ssl_verify(SSL *ssl, SSL_CTX *ctx, const char* hostname, int port, X509 *cert, SERVER_REC *server, TLS_REC *tls_rec)
{
	long result;

	result = SSL_get_verify_result(ssl);
	if (result != X509_V_OK) {
		g_warning(""Could not verify TLS servers certificate: %s"", X509_verify_cert_error_string(result));
		return FALSE;
	} else if (! irssi_ssl_verify_hostname(cert, hostname)){
		return FALSE;
	}
	return TRUE;
}
Sounds like SSL_get_verify_result is OK but our extra checks are failing.",True,{}
irssi/irssi,https://github.com/irssi/irssi,678,2017-03-20T20:26:16Z,2017-03-22T19:55:37Z,2017-03-22T21:19:33Z,CLOSED,False,48,11,1,https://github.com/LemonBoy,Parse GEN_IPADD records in subjectAltName.,1,"['needs testing', 'WIP']",https://github.com/irssi/irssi/pull/678,https://github.com/ahf,4,https://github.com/irssi/irssi/pull/678#issuecomment-287945256,"Needs testing, don't have time right now to do so.
Fixes bdo#583544","We should ask ourselves if we really want this feature and, if we do want it, whether it should be protected by a flag somehow that is disabled by default.",True,{}
irssi/irssi,https://github.com/irssi/irssi,678,2017-03-20T20:26:16Z,2017-03-22T19:55:37Z,2017-03-22T21:19:33Z,CLOSED,False,48,11,1,https://github.com/LemonBoy,Parse GEN_IPADD records in subjectAltName.,1,"['needs testing', 'WIP']",https://github.com/irssi/irssi/pull/678,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/678#issuecomment-287946600,"Needs testing, don't have time right now to do so.
Fixes bdo#583544","Are certificates issued to IP addresses something that is usually unsupported everywhere?
Hmm I wonder if this is the sort of thing where you could throw a CSR with fields the CA doesn't recognize, have it signed because the CA sucks, and pass validation
Also, from the ticket:

0: it's not from an irc server, but that doesn't matter here.
Also, details redacted since it's not available on the public internet
anyway.

So... no real use case? Just submitting bugs for the sake of annoying devs?",True,{}
irssi/irssi,https://github.com/irssi/irssi,678,2017-03-20T20:26:16Z,2017-03-22T19:55:37Z,2017-03-22T21:19:33Z,CLOSED,False,48,11,1,https://github.com/LemonBoy,Parse GEN_IPADD records in subjectAltName.,1,"['needs testing', 'WIP']",https://github.com/irssi/irssi/pull/678,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/678#issuecomment-288543159,"Needs testing, don't have time right now to do so.
Fixes bdo#583544","Heh that makes my last comment sound bad. Context:

16:50 < TheLemonMan> I'll close the openssl pr, we'd better to entirely offload the verification process to openssl
16:50 < TheLemonMan> any objection?",True,{}
irssi/irssi,https://github.com/irssi/irssi,680,2017-03-21T13:39:24Z,2017-03-21T14:47:17Z,2018-01-10T11:53:47Z,MERGED,True,7,7,1,https://github.com/Stevie-O,Fix slow startup with glib 2.49.3,2,[],https://github.com/irssi/irssi/pull/680,https://github.com/Stevie-O,1,https://github.com/irssi/irssi/pull/680,"In glib v2.49.3, an optimization was made to eliminate certain
unnecessary wakeups.  (The specific change was made in
e4ee3079c5afc3c1c3d2415f20c3e8605728f074). Before this change, the
first call to g_main_iteration would always complete immediately.
In Irssi, this effectively reversed the order of the main loop, causing
the reload_config check and the dirty_check to run before the first
blocking call to g_main_iteration.
With the new logic, the first g_main_iteration call now blocks,
preventing the screen from being refreshed until the user starts typing
or a timer goes off.  (It also delays processing of SIGHUP, but I
expect that is not a common situation.)
This commit reorders the main loop to wait at the end of the loop,
rather than the beginning, addressing the problem.
(This closes Debian bug #856201.)","In glib v2.49.3, an optimization was made to eliminate certain
unnecessary wakeups.  (The specific change was made in
e4ee3079c5afc3c1c3d2415f20c3e8605728f074). Before this change, the
first call to g_main_iteration would always complete immediately.
In Irssi, this effectively reversed the order of the main loop, causing
the reload_config check and the dirty_check to run before the first
blocking call to g_main_iteration.
With the new logic, the first g_main_iteration call now blocks,
preventing the screen from being refreshed until the user starts typing
or a timer goes off.  (It also delays processing of SIGHUP, but I
expect that is not a common situation.)
This commit reorders the main loop to wait at the end of the loop,
rather than the beginning, addressing the problem.
(This closes Debian bug #856201.)",True,{}
irssi/irssi,https://github.com/irssi/irssi,685,2017-04-05T15:03:59Z,2017-04-06T15:37:24Z,2018-01-10T11:53:47Z,MERGED,True,2,0,1,https://github.com/josephbisch,Fix strange history behavior when history is empty,1,[],https://github.com/irssi/irssi/pull/685,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/685,"If text is being entered and then the user presses the up arrow
followed by the down arrow, the expected behavior is to return to the
text being entered. Prior to this commit that was not the case.
Fixes #462","If text is being entered and then the user presses the up arrow
followed by the down arrow, the expected behavior is to return to the
text being entered. Prior to this commit that was not the case.
Fixes #462",True,{}
irssi/irssi,https://github.com/irssi/irssi,685,2017-04-05T15:03:59Z,2017-04-06T15:37:24Z,2018-01-10T11:53:47Z,MERGED,True,2,0,1,https://github.com/josephbisch,Fix strange history behavior when history is empty,1,[],https://github.com/irssi/irssi/pull/685,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/685#issuecomment-292167546,"If text is being entered and then the user presses the up arrow
followed by the down arrow, the expected behavior is to return to the
text being entered. Prior to this commit that was not the case.
Fixes #462",IMO we should get rid of this counted-wraparound thing and just stop when we reach the top/bottom.,True,{}
irssi/irssi,https://github.com/irssi/irssi,686,2017-04-07T00:31:12Z,2017-04-11T13:19:20Z,2019-06-26T23:13:56Z,MERGED,True,5,12,2,https://github.com/josephbisch,Don't allow command history to wrap around,2,[],https://github.com/irssi/irssi/pull/686,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/686,"This changes the behavior of the command history to avoid wrapping back
to the bottom once the top of the history is reached.
Tested of course.","This changes the behavior of the command history to avoid wrapping back
to the bottom once the top of the history is reached.
Tested of course.",True,{}
irssi/irssi,https://github.com/irssi/irssi,686,2017-04-07T00:31:12Z,2017-04-11T13:19:20Z,2019-06-26T23:13:56Z,MERGED,True,5,12,2,https://github.com/josephbisch,Don't allow command history to wrap around,2,[],https://github.com/irssi/irssi/pull/686,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/686#issuecomment-292450428,"This changes the behavior of the command history to avoid wrapping back
to the bottom once the top of the history is reached.
Tested of course.","We can get rid of over_counter now, don't we?",True,{}
irssi/irssi,https://github.com/irssi/irssi,686,2017-04-07T00:31:12Z,2017-04-11T13:19:20Z,2019-06-26T23:13:56Z,MERGED,True,5,12,2,https://github.com/josephbisch,Don't allow command history to wrap around,2,[],https://github.com/irssi/irssi/pull/686,https://github.com/josephbisch,3,https://github.com/irssi/irssi/pull/686#issuecomment-292522391,"This changes the behavior of the command history to avoid wrapping back
to the bottom once the top of the history is reached.
Tested of course.","Yes, I removed over_counter now and tested again.",True,{}
irssi/irssi,https://github.com/irssi/irssi,688,2017-04-07T16:58:13Z,2017-04-07T19:22:49Z,2018-01-10T11:53:47Z,MERGED,True,1,0,1,https://github.com/josephbisch,Add syntax info for completion,1,[],https://github.com/irssi/irssi/pull/688,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/688,"Allows syntax info to be picked up and displayed by help command.
Fixes #687
Tested.","Allows syntax info to be picked up and displayed by help command.
Fixes #687
Tested.",True,{}
irssi/irssi,https://github.com/irssi/irssi,694,2017-04-26T23:25:13Z,2017-05-04T10:31:33Z,2019-06-26T23:14:38Z,CLOSED,False,1,1,1,https://github.com/coypoop,Accept -lcurses as well,1,[],https://github.com/irssi/irssi/pull/694,https://github.com/coypoop,1,https://github.com/irssi/irssi/pull/694,NetBSD curses is called just 'curses' and works as well,NetBSD curses is called just 'curses' and works as well,True,{}
irssi/irssi,https://github.com/irssi/irssi,694,2017-04-26T23:25:13Z,2017-05-04T10:31:33Z,2019-06-26T23:14:38Z,CLOSED,False,1,1,1,https://github.com/coypoop,Accept -lcurses as well,1,[],https://github.com/irssi/irssi/pull/694,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/694#issuecomment-297675260,NetBSD curses is called just 'curses' and works as well,afaik we cannot be sure that curses without n makes use of terminfo,True,{}
irssi/irssi,https://github.com/irssi/irssi,694,2017-04-26T23:25:13Z,2017-05-04T10:31:33Z,2019-06-26T23:14:38Z,CLOSED,False,1,1,1,https://github.com/coypoop,Accept -lcurses as well,1,[],https://github.com/irssi/irssi/pull/694,https://github.com/coypoop,3,https://github.com/irssi/irssi/pull/694#issuecomment-297708843,NetBSD curses is called just 'curses' and works as well,"sorry for having variants of everything, someone in netbsd passionately hates ncurses",True,{}
irssi/irssi,https://github.com/irssi/irssi,694,2017-04-26T23:25:13Z,2017-05-04T10:31:33Z,2019-06-26T23:14:38Z,CLOSED,False,1,1,1,https://github.com/coypoop,Accept -lcurses as well,1,[],https://github.com/irssi/irssi/pull/694,https://github.com/coypoop,4,https://github.com/irssi/irssi/pull/694#issuecomment-299162123,NetBSD curses is called just 'curses' and works as well,Thanks!,True,{}
irssi/irssi,https://github.com/irssi/irssi,695,2017-04-26T23:26:21Z,2017-05-04T11:43:53Z,2017-05-04T11:43:53Z,CLOSED,False,0,6,4,https://github.com/coypoop,Remove some dead assignments,4,[],https://github.com/irssi/irssi/pull/695,https://github.com/coypoop,1,https://github.com/irssi/irssi/pull/695,I'm poking at it via clang static analyzer.,I'm poking at it via clang static analyzer.,True,{}
irssi/irssi,https://github.com/irssi/irssi,695,2017-04-26T23:26:21Z,2017-05-04T11:43:53Z,2017-05-04T11:43:53Z,CLOSED,False,0,6,4,https://github.com/coypoop,Remove some dead assignments,4,[],https://github.com/irssi/irssi/pull/695,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/695#issuecomment-297675466,I'm poking at it via clang static analyzer.,"thanks for getting involved, however please be wary of static analysis",True,{}
irssi/irssi,https://github.com/irssi/irssi,695,2017-04-26T23:26:21Z,2017-05-04T11:43:53Z,2017-05-04T11:43:53Z,CLOSED,False,0,6,4,https://github.com/coypoop,Remove some dead assignments,4,[],https://github.com/irssi/irssi/pull/695,https://github.com/coypoop,3,https://github.com/irssi/irssi/pull/695#issuecomment-299162217,I'm poking at it via clang static analyzer.,OK.,True,{}
irssi/irssi,https://github.com/irssi/irssi,696,2017-04-26T23:35:30Z,2017-04-27T00:37:19Z,2017-04-27T00:37:19Z,CLOSED,False,2,0,1,https://github.com/coypoop,Null check rec on process_destroy,1,[],https://github.com/irssi/irssi/pull/696,https://github.com/coypoop,1,https://github.com/irssi/irssi/pull/696,"rec=NULL may be a possible code path from handle_exec, if so then we might dereference null.
I am not sure if this is possible, but it looks like it may be.
Let me know if you disagree!","rec=NULL may be a possible code path from handle_exec, if so then we might dereference null.
I am not sure if this is possible, but it looks like it may be.
Let me know if you disagree!",True,{}
irssi/irssi,https://github.com/irssi/irssi,696,2017-04-26T23:35:30Z,2017-04-27T00:37:19Z,2017-04-27T00:37:19Z,CLOSED,False,2,0,1,https://github.com/coypoop,Null check rec on process_destroy,1,[],https://github.com/irssi/irssi/pull/696,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/696#issuecomment-297574613,"rec=NULL may be a possible code path from handle_exec, if so then we might dereference null.
I am not sure if this is possible, but it looks like it may be.
Let me know if you disagree!","/* options that require process ID/name as argument */
	if (rec == NULL &&
	    (signum != -1 || g_hash_table_lookup(optlist, ""close"") != NULL)) {
		printtext(NULL, NULL, MSGLEVEL_CLIENTERROR,
			  ""Unknown process name: %s"", args);
		return;
	}
	if (g_hash_table_lookup(optlist, ""close"") != NULL) {
		/* forcibly close the process */
                process_destroy(rec, -1);
                return;
	}
So we have:
a. rec == NULL
b. signum != -1
c. g_hash_table_lookup(optlist, ""close"") != NULL
And these conditions

if (a && (b || c)) return; (can be simplified to if (a && c) return;)
if (c) return;

Sounds like 2 passes if !a (rec != NULL)
Typical static analyzer false positive (it doesn't have a way to see both hash table lookups as the same thing)",True,{}
irssi/irssi,https://github.com/irssi/irssi,696,2017-04-26T23:35:30Z,2017-04-27T00:37:19Z,2017-04-27T00:37:19Z,CLOSED,False,2,0,1,https://github.com/coypoop,Null check rec on process_destroy,1,[],https://github.com/irssi/irssi/pull/696,https://github.com/coypoop,3,https://github.com/irssi/irssi/pull/696#issuecomment-297579134,"rec=NULL may be a possible code path from handle_exec, if so then we might dereference null.
I am not sure if this is possible, but it looks like it may be.
Let me know if you disagree!","oops, sorry for the noise",True,{}
irssi/irssi,https://github.com/irssi/irssi,697,2017-05-01T08:21:33Z,2018-01-08T11:20:20Z,2019-06-26T23:12:31Z,MERGED,True,1396,357,19,https://github.com/ailin-nemui,sideways split support for Irssi,4,['auto-merge'],https://github.com/irssi/irssi/pull/697,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/697,"warning:

may be buggy

This commit adds support for sideways splits into Irssi. To that regard,
there are a number of new commands available
the ""R"" commands:
/window new rsplit - make a new sideways split
/window rshow - show an existing window to the right
/window rgrow/rshrink/rsize/rbalance
 - manipulate the size of your sideways split windows

the ""D"" commands:
/window dup/ddown/dleft/dright
 - navigate the windows directionally, as an alternative to
   /window up/down that you can bind to some key
/window move dleft/dright - the same for moving

Enjoy!","warning:

may be buggy

This commit adds support for sideways splits into Irssi. To that regard,
there are a number of new commands available
the ""R"" commands:
/window new rsplit - make a new sideways split
/window rshow - show an existing window to the right
/window rgrow/rshrink/rsize/rbalance
 - manipulate the size of your sideways split windows

the ""D"" commands:
/window dup/ddown/dleft/dright
 - navigate the windows directionally, as an alternative to
   /window up/down that you can bind to some key
/window move dleft/dright - the same for moving

Enjoy!",True,"{'THUMBS_UP': ['https://github.com/z00dev', 'https://github.com/paride', 'https://github.com/vvug', 'https://github.com/imyxh', 'https://github.com/RandomDSdevel', 'https://github.com/atomi', 'https://github.com/mgedmin'], 'HEART': ['https://github.com/paride', 'https://github.com/atomi'], 'HOORAY': ['https://github.com/paride', 'https://github.com/Eckankar', 'https://github.com/atomi', 'https://github.com/imyxh']}"
irssi/irssi,https://github.com/irssi/irssi,697,2017-05-01T08:21:33Z,2018-01-08T11:20:20Z,2019-06-26T23:12:31Z,MERGED,True,1396,357,19,https://github.com/ailin-nemui,sideways split support for Irssi,4,['auto-merge'],https://github.com/irssi/irssi/pull/697,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/697#issuecomment-298304081,"warning:

may be buggy

This commit adds support for sideways splits into Irssi. To that regard,
there are a number of new commands available
the ""R"" commands:
/window new rsplit - make a new sideways split
/window rshow - show an existing window to the right
/window rgrow/rshrink/rsize/rbalance
 - manipulate the size of your sideways split windows

the ""D"" commands:
/window dup/ddown/dleft/dright
 - navigate the windows directionally, as an alternative to
   /window up/down that you can bind to some key
/window move dleft/dright - the same for moving

Enjoy!","Hi,
I am posting this here so it can be potentially discussed. The code is based on work done by LemonBoy in #431
I won't have much time so I'm looking for other people who can help out
That said it seems to be working fine, but there are some general trade-offs implemented in this current approach which may need to be decided upon",True,{}
irssi/irssi,https://github.com/irssi/irssi,697,2017-05-01T08:21:33Z,2018-01-08T11:20:20Z,2019-06-26T23:12:31Z,MERGED,True,1396,357,19,https://github.com/ailin-nemui,sideways split support for Irssi,4,['auto-merge'],https://github.com/irssi/irssi/pull/697,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/697#issuecomment-298304295,"warning:

may be buggy

This commit adds support for sideways splits into Irssi. To that regard,
there are a number of new commands available
the ""R"" commands:
/window new rsplit - make a new sideways split
/window rshow - show an existing window to the right
/window rgrow/rshrink/rsize/rbalance
 - manipulate the size of your sideways split windows

the ""D"" commands:
/window dup/ddown/dleft/dright
 - navigate the windows directionally, as an alternative to
   /window up/down that you can bind to some key
/window move dleft/dright - the same for moving

Enjoy!","If you need some help debugging I have a commit in https://github.com/ailin-nemui/irssi/tree/rsplit-debug-code that will print the window sizes to stderr. With that patch applied, you can do irssi 2>windowsizes.log to inspect the screen layout during the resize progress. That may help in better understanding some issues visually",True,{}
irssi/irssi,https://github.com/irssi/irssi,697,2017-05-01T08:21:33Z,2018-01-08T11:20:20Z,2019-06-26T23:12:31Z,MERGED,True,1396,357,19,https://github.com/ailin-nemui,sideways split support for Irssi,4,['auto-merge'],https://github.com/irssi/irssi/pull/697,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/697#issuecomment-317997293,"warning:

may be buggy

This commit adds support for sideways splits into Irssi. To that regard,
there are a number of new commands available
the ""R"" commands:
/window new rsplit - make a new sideways split
/window rshow - show an existing window to the right
/window rgrow/rshrink/rsize/rbalance
 - manipulate the size of your sideways split windows

the ""D"" commands:
/window dup/ddown/dleft/dright
 - navigate the windows directionally, as an alternative to
   /window up/down that you can bind to some key
/window move dleft/dright - the same for moving

Enjoy!","one thing that has come up in discussions is the increase in bandwidth which is caused by sideways splits.

Irssi updates visible buffers immediately, there is no delayed refresh implemented
Irssi refuses to start on terminals without DECSTBM support
For full width buffers, adding a line to a buffer requires ~line-length bytes
So width×height bytes to fill the screen

For sideways splits we have a problem:

Most terminals do not support DECSLRM :-(
Thus, the whole split needs to be redrawn
That requires ~width×height bytes - per line
i.e width×height² bytes to fill the screen!",True,{}
irssi/irssi,https://github.com/irssi/irssi,697,2017-05-01T08:21:33Z,2018-01-08T11:20:20Z,2019-06-26T23:12:31Z,MERGED,True,1396,357,19,https://github.com/ailin-nemui,sideways split support for Irssi,4,['auto-merge'],https://github.com/irssi/irssi/pull/697,https://github.com/vvug,5,https://github.com/irssi/irssi/pull/697#issuecomment-334387218,"warning:

may be buggy

This commit adds support for sideways splits into Irssi. To that regard,
there are a number of new commands available
the ""R"" commands:
/window new rsplit - make a new sideways split
/window rshow - show an existing window to the right
/window rgrow/rshrink/rsize/rbalance
 - manipulate the size of your sideways split windows

the ""D"" commands:
/window dup/ddown/dleft/dright
 - navigate the windows directionally, as an alternative to
   /window up/down that you can bind to some key
/window move dleft/dright - the same for moving

Enjoy!","This has been for years the most needed feature in irssi, especially to have a nicklist/chanlist bar on the side. Thanks for implementing it! I wouldn't care too much about the increased bandwidth: in a constrained environment one could chose not to use splits. Or you could enable the feature only in terminals that support DECSLRM.",True,{}
irssi/irssi,https://github.com/irssi/irssi,697,2017-05-01T08:21:33Z,2018-01-08T11:20:20Z,2019-06-26T23:12:31Z,MERGED,True,1396,357,19,https://github.com/ailin-nemui,sideways split support for Irssi,4,['auto-merge'],https://github.com/irssi/irssi/pull/697,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/697#issuecomment-355698722,"warning:

may be buggy

This commit adds support for sideways splits into Irssi. To that regard,
there are a number of new commands available
the ""R"" commands:
/window new rsplit - make a new sideways split
/window rshow - show an existing window to the right
/window rgrow/rshrink/rsize/rbalance
 - manipulate the size of your sideways split windows

the ""D"" commands:
/window dup/ddown/dleft/dright
 - navigate the windows directionally, as an alternative to
   /window up/down that you can bind to some key
/window move dleft/dright - the same for moving

Enjoy!",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,698,2017-05-04T10:27:49Z,2017-05-04T10:31:33Z,2018-01-10T11:53:47Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,detect Netbsd terminfo,1,[],https://github.com/irssi/irssi/pull/698,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/698,fixes #694,fixes #694,True,{}
irssi/irssi,https://github.com/irssi/irssi,701,2017-05-08T17:46:40Z,2017-05-08T17:51:39Z,2019-06-26T23:14:15Z,MERGED,True,269,0,1,https://github.com/josephbisch,Add fuzz.diff for fuzzing with afl,1,[],https://github.com/irssi/irssi/pull/701,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/701,Authored by dx.,Authored by dx.,True,{}
irssi/irssi,https://github.com/irssi/irssi,702,2017-05-11T08:58:50Z,2017-05-14T07:44:26Z,2018-01-10T11:53:47Z,MERGED,True,11,3,1,https://github.com/vague666,Added support for -notls and -notls_verify,4,[],https://github.com/irssi/irssi/pull/702,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/702,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,702,2017-05-11T08:58:50Z,2017-05-14T07:44:26Z,2018-01-10T11:53:47Z,MERGED,True,11,3,1,https://github.com/vague666,Added support for -notls and -notls_verify,4,[],https://github.com/irssi/irssi/pull/702,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/702#issuecomment-300729896,,lgtm,True,{}
irssi/irssi,https://github.com/irssi/irssi,702,2017-05-11T08:58:50Z,2017-05-14T07:44:26Z,2018-01-10T11:53:47Z,MERGED,True,11,3,1,https://github.com/vague666,Added support for -notls and -notls_verify,4,[],https://github.com/irssi/irssi/pull/702,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/702#issuecomment-300756314,,#117,True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/703,"Also in /server modify
irc.host.tld <num> has preference if both are specified","Also in /server modify
irc.host.tld <num> has preference if both are specified",True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/703#issuecomment-301279858,"Also in /server modify
irc.host.tld <num> has preference if both are specified","Other than the indentation nit, sounds good.",True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/703#issuecomment-301296642,"Also in /server modify
irc.host.tld <num> has preference if both are specified","afaics this change will unconditionally modify the port even if you do not specify any port, can you double check?",True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/703#issuecomment-301329572,"Also in /server modify
irc.host.tld <num> has preference if both are specified","Hm yeah, so something like changing DEFAULT_SERVER_ADD_PORT into rec ? rec->port : DEFAULT_SERVER_ADD_PORT. But that line has so many ternaries it's better to turn them into proper if blocks at this point.",True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/703#issuecomment-306024216,"Also in /server modify
irc.host.tld <num> has preference if both are specified","can you change the ?:?: to a if, it's too unreadable for me",True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/703#issuecomment-306632874,"Also in /server modify
irc.host.tld <num> has preference if both are specified",note to self: test the case of modifying a port and if irssi can handle multiple ports of the same host,True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/vague666,7,https://github.com/irssi/irssi/pull/703#issuecomment-306721639,"Also in /server modify
irc.host.tld <num> has preference if both are specified","@ailin-nemui, how did that work? Was it possible to have several servers with the same name but different ports? That's something I haven't tested, but I've tested all scenarios I could think of when it comes to single servers",True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/vague666,8,https://github.com/irssi/irssi/pull/703#issuecomment-306722516,"Also in /server modify
irc.host.tld <num> has preference if both are specified",There should be a test document that describes a set of operations that should be verified to work if something is changed. It's a big job to create such a document though,True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/703#issuecomment-306732273,"Also in /server modify
irc.host.tld <num> has preference if both are specified","@vague666 in the past the idea was that you can have the same named server, with different ports, eg. (A) irc.example.net 6660, (B) irc.example.net 6661, and so on, and then you could modify the port of (A) with /server add -port 6662 irc.example.net 6660
but idk if it ever worked (I currently think it didn't)
hypothetical test suite:
/server add irc.example.net 6660
/server add irc.example.net 6661
/server list
irc.example.net 6660
irc.example.net 6661
/server modify -port 6662 irc.example.net 6660
/server list
irc.example.net 6662
irc.example.net 6661
/server modify -port 6667 irc.example.net 6661
/server list
irc.example.net 6662
irc.example.net 6667",True,{}
irssi/irssi,https://github.com/irssi/irssi,703,2017-05-11T12:05:21Z,2017-06-23T15:59:03Z,2019-06-26T23:14:09Z,MERGED,True,15,3,2,https://github.com/vague666,Allow -port <num> or irc.host.tld <num> in /server add ,5,['auto-merge'],https://github.com/irssi/irssi/pull/703,https://github.com/vague666,10,https://github.com/irssi/irssi/pull/703#issuecomment-306734900,"Also in /server modify
irc.host.tld <num> has preference if both are specified",I can't add the same server with another port in 1.0.2,True,{}
irssi/irssi,https://github.com/irssi/irssi,705,2017-05-12T11:37:04Z,2017-05-14T07:40:55Z,2018-01-10T11:53:48Z,MERGED,True,24,22,1,https://github.com/ailin-nemui,improve nicklist performance,2,[],https://github.com/irssi/irssi/pull/705,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/705,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,705,2017-05-12T11:37:04Z,2017-05-14T07:40:55Z,2018-01-10T11:53:48Z,MERGED,True,24,22,1,https://github.com/ailin-nemui,improve nicklist performance,2,[],https://github.com/irssi/irssi/pull/705,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/705#issuecomment-301054244,,this was mentioned by someone on IRC,True,{}
irssi/irssi,https://github.com/irssi/irssi,705,2017-05-12T11:37:04Z,2017-05-14T07:40:55Z,2018-01-10T11:53:48Z,MERGED,True,24,22,1,https://github.com/ailin-nemui,improve nicklist performance,2,[],https://github.com/irssi/irssi/pull/705,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/705#issuecomment-301054263,,macro or copypasta?,True,{}
irssi/irssi,https://github.com/irssi/irssi,705,2017-05-12T11:37:04Z,2017-05-14T07:40:55Z,2018-01-10T11:53:48Z,MERGED,True,24,22,1,https://github.com/ailin-nemui,improve nicklist performance,2,[],https://github.com/irssi/irssi/pull/705,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/705#issuecomment-301057684,,"Looks vile, I'd suggest writing a new iterator that walks over the hash table values descending into the lovely linked list that is the value.",True,{}
irssi/irssi,https://github.com/irssi/irssi,705,2017-05-12T11:37:04Z,2017-05-14T07:40:55Z,2018-01-10T11:53:48Z,MERGED,True,24,22,1,https://github.com/ailin-nemui,improve nicklist performance,2,[],https://github.com/irssi/irssi/pull/705,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/705#issuecomment-301087492,,copypasta > macro,True,{}
irssi/irssi,https://github.com/irssi/irssi,705,2017-05-12T11:37:04Z,2017-05-14T07:40:55Z,2018-01-10T11:53:48Z,MERGED,True,24,22,1,https://github.com/ailin-nemui,improve nicklist performance,2,[],https://github.com/irssi/irssi/pull/705,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/705#issuecomment-301093094,,there,True,{}
irssi/irssi,https://github.com/irssi/irssi,705,2017-05-12T11:37:04Z,2017-05-14T07:40:55Z,2018-01-10T11:53:48Z,MERGED,True,24,22,1,https://github.com/ailin-nemui,improve nicklist performance,2,[],https://github.com/irssi/irssi/pull/705,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/705#issuecomment-306261914,,"This one was originally reported as high cpu usage when receiving messages in >1000 user channels when there's an ignore that uses the ""-replies"" argument.",True,{}
irssi/irssi,https://github.com/irssi/irssi,706,2017-05-17T09:49:20Z,2017-06-02T12:47:38Z,2018-01-10T11:53:48Z,MERGED,True,130,27,4,https://github.com/dequis,Add parse_uint function to improve integer overflow handling,1,['auto-merge'],https://github.com/irssi/irssi/pull/706,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/706,"Originally found by oss-fuzz (issue 525) in get_ansi_color using ubsan. After a lot of analysis I'm 99% sure this isn't security relevant so it's fine to handle this publicly.
The fix is mainly adding a function that does it right and use it everywhere. This is harder than it seems because the strtol() family of functions doesn't have the friendliest of interfaces.
Aside from get_ansi_color(), there were other pieces of code that used the same (out*10+(*in-'0')) pattern, like the parse_size() and parse_time_interval() functions, which are mostly used for settings. Those are interesting cases, since they multiply the parsed number (resulting in more overflows) and they write to a signed integer parameter (which can accidentally make the uints negative without UB)
Thanks to Pascal Cuoq for enlightening me about the undefined behavior of parse_size (and, in particular, the implementation-defined behavior of one of the WIP versions of this commit, where something like signed integer overflow happened, but it was legal). Also for writing tis-interpreter, which is better than ubsan to verify these things.","Originally found by oss-fuzz (issue 525) in get_ansi_color using ubsan. After a lot of analysis I'm 99% sure this isn't security relevant so it's fine to handle this publicly.
The fix is mainly adding a function that does it right and use it everywhere. This is harder than it seems because the strtol() family of functions doesn't have the friendliest of interfaces.
Aside from get_ansi_color(), there were other pieces of code that used the same (out*10+(*in-'0')) pattern, like the parse_size() and parse_time_interval() functions, which are mostly used for settings. Those are interesting cases, since they multiply the parsed number (resulting in more overflows) and they write to a signed integer parameter (which can accidentally make the uints negative without UB)
Thanks to Pascal Cuoq for enlightening me about the undefined behavior of parse_size (and, in particular, the implementation-defined behavior of one of the WIP versions of this commit, where something like signed integer overflow happened, but it was legal). Also for writing tis-interpreter, which is better than ubsan to verify these things.",True,{}
irssi/irssi,https://github.com/irssi/irssi,706,2017-05-17T09:49:20Z,2017-06-02T12:47:38Z,2018-01-10T11:53:48Z,MERGED,True,130,27,4,https://github.com/dequis,Add parse_uint function to improve integer overflow handling,1,['auto-merge'],https://github.com/irssi/irssi/pull/706,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/706#issuecomment-303122752,"Originally found by oss-fuzz (issue 525) in get_ansi_color using ubsan. After a lot of analysis I'm 99% sure this isn't security relevant so it's fine to handle this publicly.
The fix is mainly adding a function that does it right and use it everywhere. This is harder than it seems because the strtol() family of functions doesn't have the friendliest of interfaces.
Aside from get_ansi_color(), there were other pieces of code that used the same (out*10+(*in-'0')) pattern, like the parse_size() and parse_time_interval() functions, which are mostly used for settings. Those are interesting cases, since they multiply the parsed number (resulting in more overflows) and they write to a signed integer parameter (which can accidentally make the uints negative without UB)
Thanks to Pascal Cuoq for enlightening me about the undefined behavior of parse_size (and, in particular, the implementation-defined behavior of one of the WIP versions of this commit, where something like signed integer overflow happened, but it was legal). Also for writing tis-interpreter, which is better than ubsan to verify these things.",well good that you did this and I think it's great -- except I don't feel like I can review it with a certainty. just fyi. maybe just merge and yolo?,True,{}
irssi/irssi,https://github.com/irssi/irssi,707,2017-05-17T10:19:09Z,2017-05-18T13:39:02Z,2018-01-10T11:53:48Z,MERGED,True,1,1,1,https://github.com/mh-source,dcc.in: fixed typo 'resolved' -> 'resolves',1,[],https://github.com/irssi/irssi/pull/707,https://github.com/mh-source,1,https://github.com/irssi/irssi/pull/707,n/t,n/t,True,{}
irssi/irssi,https://github.com/irssi/irssi,708,2017-05-18T10:15:33Z,2017-05-22T14:31:51Z,2017-05-22T14:31:55Z,CLOSED,False,17,3,4,https://github.com/LemonBoy,Restore layout,3,[],https://github.com/irssi/irssi/pull/708,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/708,"⚠️ DO NOT MERGE UNTIL THIS LINE HAS BEEN REMOVED ⚠️
This addresses #635 once and forever.
Please give a look at the changes made to sig_layout_restore wrt the GUIs.
cc @madduck @Soundtoxin is this ok?","⚠️ DO NOT MERGE UNTIL THIS LINE HAS BEEN REMOVED ⚠️
This addresses #635 once and forever.
Please give a look at the changes made to sig_layout_restore wrt the GUIs.
cc @madduck @Soundtoxin is this ok?",True,{}
irssi/irssi,https://github.com/irssi/irssi,708,2017-05-18T10:15:33Z,2017-05-22T14:31:51Z,2017-05-22T14:31:55Z,CLOSED,False,17,3,4,https://github.com/LemonBoy,Restore layout,3,[],https://github.com/irssi/irssi/pull/708,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/708#issuecomment-303054628,"⚠️ DO NOT MERGE UNTIL THIS LINE HAS BEEN REMOVED ⚠️
This addresses #635 once and forever.
Please give a look at the changes made to sig_layout_restore wrt the GUIs.
cc @madduck @Soundtoxin is this ok?",/me clicks Merge,True,{'THUMBS_UP': ['https://github.com/Soundtoxin']}
irssi/irssi,https://github.com/irssi/irssi,708,2017-05-18T10:15:33Z,2017-05-22T14:31:51Z,2017-05-22T14:31:55Z,CLOSED,False,17,3,4,https://github.com/LemonBoy,Restore layout,3,[],https://github.com/irssi/irssi/pull/708,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/708#issuecomment-303105176,"⚠️ DO NOT MERGE UNTIL THIS LINE HAS BEEN REMOVED ⚠️
This addresses #635 once and forever.
Please give a look at the changes made to sig_layout_restore wrt the GUIs.
cc @madduck @Soundtoxin is this ok?","You're the one that knows the windowing system the most, if you feel this is fine then smash that merge button!",True,{}
irssi/irssi,https://github.com/irssi/irssi,708,2017-05-18T10:15:33Z,2017-05-22T14:31:51Z,2017-05-22T14:31:55Z,CLOSED,False,17,3,4,https://github.com/LemonBoy,Restore layout,3,[],https://github.com/irssi/irssi/pull/708,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/708#issuecomment-303109022,"⚠️ DO NOT MERGE UNTIL THIS LINE HAS BEEN REMOVED ⚠️
This addresses #635 once and forever.
Please give a look at the changes made to sig_layout_restore wrt the GUIs.
cc @madduck @Soundtoxin is this ok?","I don't think it will really ""restore"" the layout, right? only recreate missing refnums",True,{}
irssi/irssi,https://github.com/irssi/irssi,708,2017-05-18T10:15:33Z,2017-05-22T14:31:51Z,2017-05-22T14:31:55Z,CLOSED,False,17,3,4,https://github.com/LemonBoy,Restore layout,3,[],https://github.com/irssi/irssi/pull/708,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/708#issuecomment-303111353,"⚠️ DO NOT MERGE UNTIL THIS LINE HAS BEEN REMOVED ⚠️
This addresses #635 once and forever.
Please give a look at the changes made to sig_layout_restore wrt the GUIs.
cc @madduck @Soundtoxin is this ok?","The code that restores the layout was meant to be run without any window open, all this patch does is recreate the missing windows and then hands them all to the code that shuffles them around.",True,{}
irssi/irssi,https://github.com/irssi/irssi,708,2017-05-18T10:15:33Z,2017-05-22T14:31:51Z,2017-05-22T14:31:55Z,CLOSED,False,17,3,4,https://github.com/LemonBoy,Restore layout,3,[],https://github.com/irssi/irssi/pull/708,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/708#issuecomment-303116246,"⚠️ DO NOT MERGE UNTIL THIS LINE HAS BEEN REMOVED ⚠️
This addresses #635 once and forever.
Please give a look at the changes made to sig_layout_restore wrt the GUIs.
cc @madduck @Soundtoxin is this ok?","that's why I was thinking we should forcibly ""destroy"" all the main windows and then run ""the code"" (and also run it -- in parts -- again on existing windows, to put them in the right location on screen)
would be more complex than this ;-)",True,{'THUMBS_UP': ['https://github.com/Soundtoxin']}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,1,https://github.com/irssi/irssi/pull/709,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/709#issuecomment-304118547,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","hi, thanks for getting involved! I thought there was a function to do escaping already implemented somewhere in the source code, I will search for it tomorrow. And please remove your vim swap file from the commit ;-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,3,https://github.com/irssi/irssi/pull/709#issuecomment-304189142,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","Hi,
Yeah you are of course right, I just found the escape_string function (and sorry about the swap file :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/709#issuecomment-304196115,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","What's up with your commit timestamps? They seem to be off by a whole day at least.
I'm not sure it's a good idea to iterate over the whole completion list. It just seems like a bad place to introduce the escaping (also, there are other places in the same function that manipulate completion lists and would require the same thing). Would be better to do it at a point where the completion word is chosen from the list and it's added to the input box.",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,5,https://github.com/irssi/irssi/pull/709#issuecomment-304224868,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","Thanks for the feedback, much appreciated.
I was developing inside a virtual box running OpenBSD, apparently it didn't handle the time so well. Will fix it before I commit anything else.
I agree that it is not optimal to iterate over the whole list, I decided to do this because it was the only place I could find that only handled nick completions for messages in a channel. But this might just be because I'm too unfamiliar with your code base, would you mind pointing me to a file and line where you think it would be more suitable to place the escape?
I am not sure that we need to escape the nick somewhere else though. For example, when you do a /msg you don't want to escape the nick. I think it is only valid to escape the nick when sending something in a channel, right?",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/709#issuecomment-304607195,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","hi, just to clarify, we need to escape the nicks when they are inserted on the input line, but not when they are part of a command (like /query) . I haven't checked (yet) if your code does that or not",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,7,https://github.com/irssi/irssi/pull/709#issuecomment-304621994,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","Hi,
Yeah I only tested with the /msg command and that worked, but just tried with /ctcp and then it applied my escaping, so that's not good. I will try to find another place to put the escaping instead.",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,8,https://github.com/irssi/irssi/pull/709#issuecomment-304711111,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","So, here's a new stab on doing the escaping the right way, thanks for your patience :-)
I have done it like this now:

Moved the escaping to the word_complete function and removed my escape_nicks function I created in an earlier commit.
Stopped iterating over the complete list of nicks and just escape the word that will be displayed in the input line.
Only escape words if the line doesn't begin with a / (this is how I determine if it's a command or not).
Added a check to the expand_escapes function so it doesn't expand our previously escaped nicks (or other text).

Question: Would you like me to create a new PR with just this one last commit if this last attempt is OK? I'm not sure how github works with merges, but if all my failed attempts will show up in the log it will be cleaner if I just abandon this PR and create a new one, what do you think?",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/709#issuecomment-306032048,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","Hi, I still need to take a look at your changes but thanks for the effort. It sounds like you found a good solution. In the meantime you can grep the source for cmdchars, which you need to check instead of /. And once we're all happy with your code, you can ""force push"" your final commit into this PR, thereby removing the earlier tries from history",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,10,https://github.com/irssi/irssi/pull/709#issuecomment-306219562,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.",Everything should be fixed now according to the comments from @LemonBoy and @ailin-nemui. If you think everything looks OK now I will squash all commits into one and force push it again so I don't mess up the commit log completely :),True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/709#issuecomment-306248337,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","can you explain to me again how (4) Added a check to the expand_escapes function works,  and why it is necessary?",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,12,https://github.com/irssi/irssi/pull/709#issuecomment-306275716,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","The check added in expand_escapes checks if there are two backslashes in a row, if this is the case it indicates that we deliberately have been escaping something, so it moves past the two backslashes and continues to expand any other \r or \n that might exist.
Consider the following text that is going to be sent to a channel:
foo\\nbar: hello\nworld

Without this check the following message to a channel would produce this output:
21:03 < osm> foo
21:03 < osm> bar: hello
21:03 < osm> world

With the check the output will be like this, which I think is better (even though the nick will be incorrectly padded with an extra \, but I don't think there is any way around this).
21:04 < osm> foo\\nbar: hello
21:04 < osm> world",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/709#issuecomment-309380909,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.","hi @osm I think there is something odd about it, there is probably another bug somewhere which expands the codes multiple times(?), so in any case I think we need to fix them independently, but your code for the tab completion seems good",True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/ailin-nemui,14,https://github.com/irssi/irssi/pull/709#issuecomment-309574059,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.",maybe you can test my patch (and remove that bit from your code),True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/osm,15,https://github.com/irssi/irssi/pull/709#issuecomment-310009652,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.",I have removed my fix for the #723 PR that you created now. I have also tested #723 and verified that it worked together with this PR and as you can see I squashed all the previous commits into one nice looking thing :),True,{}
irssi/irssi,https://github.com/irssi/irssi,709,2017-05-25T20:32:13Z,2017-06-23T16:00:05Z,2019-06-27T09:43:28Z,MERGED,True,20,5,1,https://github.com/osm,Escape nicks during nick completion when expand_escapes is enabled,1,[],https://github.com/irssi/irssi/pull/709,https://github.com/ailin-nemui,16,https://github.com/irssi/irssi/pull/709#issuecomment-310704985,"This commit fixes issue #693.
I am not sure what the protocol for sending pull requests to this project are, so I just send it. Let me know if I have done something stupid so I can fix it, my C skills feels a bit rusty.",thanks!,True,{}
irssi/irssi,https://github.com/irssi/irssi,711,2017-05-26T22:13:13Z,2017-05-30T11:14:11Z,2018-01-10T11:53:48Z,MERGED,True,0,2,1,https://github.com/ailin-nemui,do not reset true colour bit on colour reset,1,['auto-merge'],https://github.com/irssi/irssi/pull/711,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/711,fixes #710,fixes #710,True,{}
irssi/irssi,https://github.com/irssi/irssi,711,2017-05-26T22:13:13Z,2017-05-30T11:14:11Z,2018-01-10T11:53:48Z,MERGED,True,0,2,1,https://github.com/ailin-nemui,do not reset true colour bit on colour reset,1,['auto-merge'],https://github.com/irssi/irssi/pull/711,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/711#issuecomment-304399089,fixes #710,"I think this is the right thing to do because we want to keep the flags, so in case of a partial reset (background reset, or foreground reset, or the terminfo parser returning to normal mode) at the same time of a 24bit colour code, Irssi would otherwise forget from which register to restore the colour (base colours or 24bit) and always pick the base one.
I just hope I'm not overlooking something but it was probably simply a bug in my original implementation",True,{}
irssi/irssi,https://github.com/irssi/irssi,711,2017-05-26T22:13:13Z,2017-05-30T11:14:11Z,2018-01-10T11:53:48Z,MERGED,True,0,2,1,https://github.com/ailin-nemui,do not reset true colour bit on colour reset,1,['auto-merge'],https://github.com/irssi/irssi/pull/711,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/711#issuecomment-304399617,fixes #710,(it works when a space is added because then Irssi will send %n%o<space>%ZB58900 instead of %ZB58900%o),True,{}
irssi/irssi,https://github.com/irssi/irssi,712,2017-05-29T09:07:24Z,2017-06-06T22:20:12Z,2019-06-26T23:14:25Z,MERGED,True,7,3,1,https://github.com/ailin-nemui,Update list.in,1,[],https://github.com/irssi/irssi/pull/712,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/712,"Add a more detailed paragraph about service bots
Fixes #699
I would like to add another paragraph about how freenode is
broken and spits at you the whole list instead of empty list
if you attempt to use network side filtering......","Add a more detailed paragraph about service bots
Fixes #699
I would like to add another paragraph about how freenode is
broken and spits at you the whole list instead of empty list
if you attempt to use network side filtering......",True,{}
irssi/irssi,https://github.com/irssi/irssi,713,2017-06-02T04:02:57Z,2017-06-02T04:53:10Z,2019-06-26T23:14:16Z,MERGED,True,2,2,1,https://github.com/josephbisch,Use CXX for fe-fuzz linking,1,[],https://github.com/irssi/irssi/pull/713,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/713,This should fix the currently broken honggfuzz support for oss-fuzz (google/oss-fuzz#646).,This should fix the currently broken honggfuzz support for oss-fuzz (google/oss-fuzz#646).,True,{}
irssi/irssi,https://github.com/irssi/irssi,714,2017-06-05T19:04:39Z,2017-06-06T22:15:05Z,2018-01-10T11:54:01Z,MERGED,True,2,2,2,https://github.com/dequis,fe-dcc-(get|send): Fix some -Wpointer-compare with newer gcc,1,['auto-merge'],https://github.com/irssi/irssi/pull/714,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/714,"The warning itself:

warning: comparison between pointer and zero character constant [-Wpointer-compare]

Harmless stuff as far as I can tell.
The fix adds a null check that probably isn't needed. The old code that
compared against '\0' worked a lot like a null check so it makes sense
to keep that, while also adding the intended check for empty string.
This was visible with ""/dcc close send a"" showing an empty filename.
The equivalent for get didn't show the filename in the format string.","The warning itself:

warning: comparison between pointer and zero character constant [-Wpointer-compare]

Harmless stuff as far as I can tell.
The fix adds a null check that probably isn't needed. The old code that
compared against '\0' worked a lot like a null check so it makes sense
to keep that, while also adding the intended check for empty string.
This was visible with ""/dcc close send a"" showing an empty filename.
The equivalent for get didn't show the filename in the format string.",True,{}
irssi/irssi,https://github.com/irssi/irssi,715,2017-06-05T21:21:55Z,2017-06-06T22:15:46Z,2019-06-26T23:14:25Z,MERGED,True,7,4,1,https://github.com/dequis,Performance improvements for /lastlog,2,['auto-merge'],https://github.com/irssi/irssi/pull/715,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/715,"Performance improvements for /lastlog with big result sets
This applies to ""/lastlog"" with no filters (or with filters that don't
filter a lot) and with large amounts of text in the scrollback.
Test case:
  /exec seq 1 500000
  /lastlog -file log.txt

Thanks to morning for reporting this.


Performance improvements for /lastlog -before
This avoids the use of g_list_find() to find if a match was already
added to the list of results, by checking the last two added matches
instead.
Checking just the last match isn't enough because a NULL match is added
as a separator (shown as -- in the UI)



Test materials I used:
To test -before i used this in my ~/.irssi/startup
echo 1
echo 2
echo 3ASD
echo 4
echo 5
echo 6ASD
echo 7
echo 8ASD
echo 9ASD
echo 10
echo 11
echo 12
echo 13ASD
echo 14
echo 15
echo 16
echo 17
echo 18ASD
echo 19
echo 20
echo 21
echo 22
echo 23
echo 24ASD

Then /lastlog -clear -before 2 ASD, with different values of before.
To understand how -before works I used this gdb script (line numbers for master before this change), using the glib python gdb integration module for gforeach.
break textbuffer.c:610
commands
p ""matched?""
p line_matched
p ""text""
p line->text
p ""matches so far""
gforeach i in matches: p $i ? ((LINE_REC *) $i)->text : 0
end

break textbuffer.c:613
commands
p ""searching""
p pre_line->prev->text
p ""matches so far""
gforeach i in matches: p $i ? ((LINE_REC *) $i)->text : 0
end

This needs /set theme colorless to read the text of LINE_REC directly.","Performance improvements for /lastlog with big result sets
This applies to ""/lastlog"" with no filters (or with filters that don't
filter a lot) and with large amounts of text in the scrollback.
Test case:
  /exec seq 1 500000
  /lastlog -file log.txt

Thanks to morning for reporting this.


Performance improvements for /lastlog -before
This avoids the use of g_list_find() to find if a match was already
added to the list of results, by checking the last two added matches
instead.
Checking just the last match isn't enough because a NULL match is added
as a separator (shown as -- in the UI)



Test materials I used:
To test -before i used this in my ~/.irssi/startup
echo 1
echo 2
echo 3ASD
echo 4
echo 5
echo 6ASD
echo 7
echo 8ASD
echo 9ASD
echo 10
echo 11
echo 12
echo 13ASD
echo 14
echo 15
echo 16
echo 17
echo 18ASD
echo 19
echo 20
echo 21
echo 22
echo 23
echo 24ASD

Then /lastlog -clear -before 2 ASD, with different values of before.
To understand how -before works I used this gdb script (line numbers for master before this change), using the glib python gdb integration module for gforeach.
break textbuffer.c:610
commands
p ""matched?""
p line_matched
p ""text""
p line->text
p ""matches so far""
gforeach i in matches: p $i ? ((LINE_REC *) $i)->text : 0
end

break textbuffer.c:613
commands
p ""searching""
p pre_line->prev->text
p ""matches so far""
gforeach i in matches: p $i ? ((LINE_REC *) $i)->text : 0
end

This needs /set theme colorless to read the text of LINE_REC directly.",True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/719,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718","There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718",True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/719#issuecomment-309221802,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718",Sounds good,True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/719#issuecomment-309224302,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718",could we use empty string instead? many other settings work like that iirc,True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/719#issuecomment-309224655,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718","How do you set settings to empty strings? There's ""/set -clear"" for global ones but network/server settings need a parameter and a pair of empty quotes won't help.",True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/719#issuecomment-309378292,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718","try: /network add -autosendcmd 'xxx' testnet, /network add -autosendcmd '' testnet, works for me",True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/719#issuecomment-309518793,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718","Not quite, see here.
I also don't really like using an empty string.",True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/719#issuecomment-313847410,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718",so let's allow both none and ''? afai can see simply remove the check for *opt=='\0' to allow comparison of it?,True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/LemonBoy,8,https://github.com/irssi/irssi/pull/719#issuecomment-313848467,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718","I don't really like seeing sasl_mechanism = none in the output of /network, using '' is fine.",True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/719#issuecomment-313876831,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718",Should probably change the commit message too,True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/719#issuecomment-316986231,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718",is this good to merge? should it maybe also be possible to clear username/password?,True,{}
irssi/irssi,https://github.com/irssi/irssi,719,2017-06-17T15:02:33Z,2017-07-26T08:57:05Z,2018-01-10T11:54:18Z,MERGED,True,7,6,3,https://github.com/LemonBoy,Setting sasl_mechanism to '' disables the auth,1,[],https://github.com/irssi/irssi/pull/719,https://github.com/LemonBoy,11,https://github.com/irssi/irssi/pull/719#issuecomment-317869653,"There was no easy way for the user to disable the SASL authentication
once the network was created.
Closes #718","I've extended this behaviour to the sasl_username and sasl_password fields too.
Feel free to merge once Travis gives the green.",True,{}
irssi/irssi,https://github.com/irssi/irssi,721,2017-06-17T16:53:27Z,2017-06-23T15:58:40Z,2018-01-10T11:54:01Z,MERGED,True,12,1,1,https://github.com/dequis,term-terminfo: Avoid switching out of alt screen on unexpected exits,1,['auto-merge'],https://github.com/irssi/irssi/pull/721,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/721,"Perl sucks and kills the whole process when there's a version mismatch
in Perl_xs_handshake(). Our atexit handler catches the exit and
deinitializes the terminal, removing the error.
This commit uses the 'quitting' global variable which is set when irssi
is voluntarily quitting, and avoids sending TI_rmcup, which restores the
original screen and makes the error invisible.

Fixes #287
Check that beauty:","Perl sucks and kills the whole process when there's a version mismatch
in Perl_xs_handshake(). Our atexit handler catches the exit and
deinitializes the terminal, removing the error.
This commit uses the 'quitting' global variable which is set when irssi
is voluntarily quitting, and avoids sending TI_rmcup, which restores the
original screen and makes the error invisible.

Fixes #287
Check that beauty:",True,{}
irssi/irssi,https://github.com/irssi/irssi,721,2017-06-17T16:53:27Z,2017-06-23T15:58:40Z,2018-01-10T11:54:01Z,MERGED,True,12,1,1,https://github.com/dequis,term-terminfo: Avoid switching out of alt screen on unexpected exits,1,['auto-merge'],https://github.com/irssi/irssi/pull/721,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/721#issuecomment-309228470,"Perl sucks and kills the whole process when there's a version mismatch
in Perl_xs_handshake(). Our atexit handler catches the exit and
deinitializes the terminal, removing the error.
This commit uses the 'quitting' global variable which is set when irssi
is voluntarily quitting, and avoids sending TI_rmcup, which restores the
original screen and makes the error invisible.

Fixes #287
Check that beauty:",but it will leave you stuck in full screen mode which is also not nice,True,{}
irssi/irssi,https://github.com/irssi/irssi,721,2017-06-17T16:53:27Z,2017-06-23T15:58:40Z,2018-01-10T11:54:01Z,MERGED,True,12,1,1,https://github.com/dequis,term-terminfo: Avoid switching out of alt screen on unexpected exits,1,['auto-merge'],https://github.com/irssi/irssi/pull/721,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/721#issuecomment-309232092,"Perl sucks and kills the whole process when there's a version mismatch
in Perl_xs_handshake(). Our atexit handler catches the exit and
deinitializes the terminal, removing the error.
This commit uses the 'quitting' global variable which is set when irssi
is voluntarily quitting, and avoids sending TI_rmcup, which restores the
original screen and makes the error invisible.

Fixes #287
Check that beauty:",The shell works decently enough and all the other terminfo things are reset. I've seen worse broken states. I think it's a decent tradeoff considering it pretty much just crashed.,True,{}
irssi/irssi,https://github.com/irssi/irssi,722,2017-06-17T18:36:01Z,2017-06-23T16:00:52Z,2018-01-10T11:54:02Z,MERGED,True,25,13,1,https://github.com/dequis,parse_time_interval: Allow negative time in settings,1,['auto-merge'],https://github.com/irssi/irssi/pull/722,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/722,"This splits sign parsing out of parse_time_interval_uint() so that the
negative sign is applied outside of the unsigned context where the
number parsing is done, and after all the checks that it's lower than
(1 << 31)
This fixes issues with settings like server_reconnect_time,
server_connect_timeout and lag_max_before_disconnect, which accepted
-1 as a valid value.

Fixes #716","This splits sign parsing out of parse_time_interval_uint() so that the
negative sign is applied outside of the unsigned context where the
number parsing is done, and after all the checks that it's lower than
(1 << 31)
This fixes issues with settings like server_reconnect_time,
server_connect_timeout and lag_max_before_disconnect, which accepted
-1 as a valid value.

Fixes #716",True,{}
irssi/irssi,https://github.com/irssi/irssi,723,2017-06-19T12:10:42Z,2017-06-23T15:58:08Z,2018-01-10T11:54:02Z,MERGED,True,10,4,1,https://github.com/ailin-nemui,fix weird n-fold unescaping in expand_escapes,2,['needs review'],https://github.com/irssi/irssi/pull/723,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/723,noticed by @osm in #709,noticed by @osm in #709,True,{}
irssi/irssi,https://github.com/irssi/irssi,723,2017-06-19T12:10:42Z,2017-06-23T15:58:08Z,2018-01-10T11:54:02Z,MERGED,True,10,4,1,https://github.com/ailin-nemui,fix weird n-fold unescaping in expand_escapes,2,['needs review'],https://github.com/irssi/irssi/pull/723,https://github.com/osm,2,https://github.com/irssi/irssi/pull/723#issuecomment-310009955,noticed by @osm in #709,I tested this together with the PR in #709 and it works correctly.,True,{}
irssi/irssi,https://github.com/irssi/irssi,725,2017-06-23T11:42:57Z,2021-05-17T08:57:48Z,2021-05-17T08:57:48Z,CLOSED,False,81,22,6,https://github.com/LemonBoy,Subst vars,2,"['help wanted', 'WIP']",https://github.com/irssi/irssi/pull/725,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/725,"Extra wip.
Loosely inspired by muttrc and its backtick syntax, this is the nicest thing I could carve out from our not-so-friendly usage of GScanner: prepending a & before a quoted variable runs the content trough a user-supplied function, right now it is just a simple stub.
Nothing's set in stone so feel free to drop in with any suggestion about the design.
Todo

Decide if this approach is worth pursuing.
Remove the g_assert and provide a nice way to recover from that error case.
Ownership of the new_value.
Should we cache the resulting values?
Fuzz the shit out of this.","Extra wip.
Loosely inspired by muttrc and its backtick syntax, this is the nicest thing I could carve out from our not-so-friendly usage of GScanner: prepending a & before a quoted variable runs the content trough a user-supplied function, right now it is just a simple stub.
Nothing's set in stone so feel free to drop in with any suggestion about the design.
Todo

Decide if this approach is worth pursuing.
Remove the g_assert and provide a nice way to recover from that error case.
Ownership of the new_value.
Should we cache the resulting values?
Fuzz the shit out of this.",True,{'THUMBS_UP': ['https://github.com/Findarato']}
irssi/irssi,https://github.com/irssi/irssi,725,2017-06-23T11:42:57Z,2021-05-17T08:57:48Z,2021-05-17T08:57:48Z,CLOSED,False,81,22,6,https://github.com/LemonBoy,Subst vars,2,"['help wanted', 'WIP']",https://github.com/irssi/irssi/pull/725,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/725#issuecomment-310648686,"Extra wip.
Loosely inspired by muttrc and its backtick syntax, this is the nicest thing I could carve out from our not-so-friendly usage of GScanner: prepending a & before a quoted variable runs the content trough a user-supplied function, right now it is just a simple stub.
Nothing's set in stone so feel free to drop in with any suggestion about the design.
Todo

Decide if this approach is worth pursuing.
Remove the g_assert and provide a nice way to recover from that error case.
Ownership of the new_value.
Should we cache the resulting values?
Fuzz the shit out of this.","nice for working on this. My initial recommendation was a bit different:

add /eval support to several variables (like password) (it is already present in e.g. -autosendcmd);
make a global /set eval_vars on to keep backwards compat;
introduce function arguments using the currently broken (and thus unused) $(function,args) syntax

(especially it mostly wouldn't depend on changing the scanning)
benefits of your idea could be:

configurable per-setting

(possible) disadvantages:

ownership, as you said
needs changes in lib-config as well

open points:

how does this UDF work",True,{}
irssi/irssi,https://github.com/irssi/irssi,725,2017-06-23T11:42:57Z,2021-05-17T08:57:48Z,2021-05-17T08:57:48Z,CLOSED,False,81,22,6,https://github.com/LemonBoy,Subst vars,2,"['help wanted', 'WIP']",https://github.com/irssi/irssi/pull/725,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/725#issuecomment-313092625,"Extra wip.
Loosely inspired by muttrc and its backtick syntax, this is the nicest thing I could carve out from our not-so-friendly usage of GScanner: prepending a & before a quoted variable runs the content trough a user-supplied function, right now it is just a simple stub.
Nothing's set in stone so feel free to drop in with any suggestion about the design.
Todo

Decide if this approach is worth pursuing.
Remove the g_assert and provide a nice way to recover from that error case.
Ownership of the new_value.
Should we cache the resulting values?
Fuzz the shit out of this.",related to: #6,True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/726,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.","One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.",True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/726#issuecomment-310895218,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.","yea, weechat has the same warning, wonder if it helps?",True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/726#issuecomment-313091617,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.",I'm indifferent but would suggest the help should mention the tmux-terms  when running under tmux as well,True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/726#issuecomment-321190534,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.",@dequis what do to,True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/726#issuecomment-321276777,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.","Oh hey totally forgot I wrote this. Saw the notification and thought ""cool, someone wrote it for me"".
Re: mentioning TERM=tmux

I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.

I think it only exists since ncurses 6.0
So if you're asking for my opinion, I think my opinion is right :P",True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/726#issuecomment-321289568,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.","the ""problem"" is that italics only works in tmux if tmux sees that TERM is set to tmux, which is why we should preferably (also) recommend using tmux-* as a term for tmux (however you are right it is not universally available on all shells/systems yet)",True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/726#issuecomment-355769131,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.",@dequis are you still interested in finishing this up?,True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/726#issuecomment-355776443,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.","Define ""finishing this up""?
I still prefer to mention something that works every time instead of adding more failure modes just to have a minor feature work.",True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/726#issuecomment-355776770,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.","Rebased and fixed the conflict, feel free to just push stuff if you want to tweak the message.",True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/726#issuecomment-355813702,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.",I changed the message because once this lands hopefully ncurses6 is already widespread,True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/dequis,11,https://github.com/irssi/irssi/pull/726#issuecomment-355837702,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.","Neat, positional formatting, don't see that often, clever. This is okay.",True,{}
irssi/irssi,https://github.com/irssi/irssi,726,2017-06-24T01:10:17Z,2018-01-08T11:19:31Z,2019-06-26T23:14:00Z,MERGED,True,32,0,3,https://github.com/dequis,Add a startup warning if the TERM var is wrong inside tmux/screen,3,['auto-merge'],https://github.com/irssi/irssi/pull/726,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/726#issuecomment-355844138,"One of the most common and confusing issues we get in #irssi, this should help identifying and mitigating it.



12:34 -!- Irssi: warning The TERM environment variable is set to 'xterm' which can cause display glitches when running under tmux.
12:34 -!- Irssi: Consider changing TERM to 'screen' or 'screen-256color' instead.

Feel free to bikeshed the text of the message, not sure i'm entirely happy with it myself.


The ""can cause display glitches"" has a bit too much certainty given how little this code knows about screen-compatible TERM values. Maybe it's ok.


I like the tradeoff of suggesting only 'screen' or 'screen-256color' and not mentioning 'tmux' and 'tmux-256color' - while the latter is slightly better, I found it's a bit annoying to set globally and then get errors when you ssh to servers with older terminfo that don't know about it.


Mentioning the name of the multiplexer hopefully helps mitigate the unavoidable ""it tells me to use screen but i'm using tmux"" but it's not foolproof. Not that anything is.


I think half of the issues are about someone setting TERM inside .bashrc or equivalent, but some of them have the wrong TERM inside the multiplexer config itself. Could consider guiding users to look in some of those places. Or not.


Out of scope concern: Starting my main irssi connects me to a trillion servers and this message would be lost up there, but the same thing applies to script load failures and other early-startup errors.",I actualy screwed up with the space lol,True,{}
irssi/irssi,https://github.com/irssi/irssi,729,2017-07-05T12:30:27Z,2017-07-07T12:20:08Z,2018-01-10T11:54:02Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,More accurately describe clear,2,['auto-merge'],https://github.com/irssi/irssi/pull/729,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/729,the current help seems ...questionable,the current help seems ...questionable,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,729,2017-07-05T12:30:27Z,2017-07-07T12:20:08Z,2018-01-10T11:54:02Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,More accurately describe clear,2,['auto-merge'],https://github.com/irssi/irssi/pull/729,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/729#issuecomment-313146298,the current help seems ...questionable,"Sounds ok, but might as well mention /sb clear then",True,{}
irssi/irssi,https://github.com/irssi/irssi,729,2017-07-05T12:30:27Z,2017-07-07T12:20:08Z,2018-01-10T11:54:02Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,More accurately describe clear,2,['auto-merge'],https://github.com/irssi/irssi/pull/729,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/729#issuecomment-313174391,the current help seems ...questionable,good idea,True,{}
irssi/irssi,https://github.com/irssi/irssi,731,2017-07-22T01:12:56Z,2017-07-22T10:50:12Z,2019-06-26T23:14:28Z,MERGED,True,1,0,1,https://github.com/lynnpepin,Clarified ambiguous autogen.sh error,1,[],https://github.com/irssi/irssi/pull/731,https://github.com/lynnpepin,1,https://github.com/irssi/irssi/pull/731,"autogen.sh now instructs the user to install elinks or lynx if needed.
To install the program, I needed to read autogen.sh to understand that lynx and elinks were applications. Now: When run without neither elinks nor lynx, autogen.sh now echos the following, lowest line mine.
Documentation: html -> txt...
**Error**: No lynx or elinks present
Install lynx or elinks, then run autogen.sh again","autogen.sh now instructs the user to install elinks or lynx if needed.
To install the program, I needed to read autogen.sh to understand that lynx and elinks were applications. Now: When run without neither elinks nor lynx, autogen.sh now echos the following, lowest line mine.
Documentation: html -> txt...
**Error**: No lynx or elinks present
Install lynx or elinks, then run autogen.sh again",True,{}
irssi/irssi,https://github.com/irssi/irssi,734,2017-07-28T18:42:49Z,2017-07-30T08:06:38Z,2019-06-26T23:14:31Z,MERGED,True,13,23,5,https://github.com/trasz,Don't compute log_dir_create_mode in three different places.,5,['auto-merge'],https://github.com/irssi/irssi/pull/734,https://github.com/trasz,1,https://github.com/irssi/irssi/pull/734,Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org,Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org,True,{}
irssi/irssi,https://github.com/irssi/irssi,734,2017-07-28T18:42:49Z,2017-07-30T08:06:38Z,2019-06-26T23:14:31Z,MERGED,True,13,23,5,https://github.com/trasz,Don't compute log_dir_create_mode in three different places.,5,['auto-merge'],https://github.com/irssi/irssi/pull/734,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/734#issuecomment-318808392,Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org,I guess that's ok. Not sure what motivated this.,True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,1,https://github.com/irssi/irssi/pull/735,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ahf,2,https://github.com/irssi/irssi/pull/735#issuecomment-319012368,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Exciting project!
I have a couple of questions before I walk over the code to review it:

Having an explicit command to enter the sandbox will lead to some confusion. Would it be possible to add a layer of indirection where we start the irssi binary with a sandbox option where we enable the sandbox before we start doing anything with the network? The only provider of this sandbox layer would be Capsicum right now.
I remember Capsicum having a support daemon (casperd?) for accessing the operating systems' random number generator - could that be related to TLS not working? We need to address the TLS issue before we merge.

Thanks for doing this work. I will be walking over the code line-by-line before the end of the week.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,3,https://github.com/irssi/irssi/pull/735#issuecomment-319081893,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","The /capsicum enter command is mostly for experimentation.  It might come in handy, but the ""proper"" way is to use the ""capsicum = on"" setting, which causes it to do what you suggest: enter the sandbox before connecting to the servers.


The TLS connection seems to be negotiated ok, which (I hope) means OpenSSL was able to get some randomness.  The problem is afterwards, with certificate validation.


Thanks :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/735#issuecomment-320661746,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.",I think it would be better to #ifdef each capsicum_ function call individually rather than doing some macro redirection in capsicum.h,True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,5,https://github.com/irssi/irssi/pull/735#issuecomment-321038078,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.",So basically like with  12e2c46 reverted?,True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/735#issuecomment-321069213,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","yes but if you prefer you can make a hybrid:
#if CAPSICUM
capsicum_open_wrapper()
#else
open()
#endif
it could ease readability a bit",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/735#issuecomment-321219925,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","lgtm, any objections @dequis @LemonBoy?",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/735#issuecomment-321299633,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Uh, not sure I agree about that last change improving readability...",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/735#issuecomment-321336267,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","I want to be able to run unifdef on it to kill capsicum, and not being stuck in wrappers. this way is the most clean I can think of lest of making a generic VTable based wrapper class (for the still to be finished seccomp implementation)",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/h1z1,10,https://github.com/irssi/irssi/pull/735#issuecomment-321433030,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","There are so many ""sandbox"" proposals now I'm curious why this would be required at all?   Should it not be up to external projects to maintain their integrations?  I don't use FreeBSD, I do however use firejail in linux for example.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,11,https://github.com/irssi/irssi/pull/735#issuecomment-321551716,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","There are many sandbox proposals on Linux; other systems, however, usually already have their own.  And for FreeBSD, the official, native mechanism is Capsicum.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/735#issuecomment-321563930,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","ahf would furthermore request that the /capsicum enter is removed. maybe a command line switch could be used, as was originally proposed for linux in https://github.com/irssi/irssi/pull/342/files#diff-b2e1bd931ec6784cb91bfad7c8e679adR305",True,{'THUMBS_UP': ['https://github.com/h1z1']}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,13,https://github.com/irssi/irssi/pull/735#issuecomment-321575382,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Hm, not a big deal, but why?  It might come in handy if you want to do something before you enter the sandbox.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/h1z1,14,https://github.com/irssi/irssi/pull/735#issuecomment-321643703,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Even in the case of Linux, it's not portable or really scalable.   There are other means to achieve the same thing without resorting to code requiring hacks.   Quite frankly applications should not be dictating system configuration.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,15,https://github.com/irssi/irssi/pull/735#issuecomment-321645975,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","None of those mechanisms are portable - and will probably never be.  It's not a hack, however, because this is not system configuration: capability mode is something between the process and the operating system, not something for the system administrator or package maintainers to care about.  The idea is briefly explained at https://en.wikipedia.org/wiki/Capability-based_security, although I'm not sure how good that explanation is.
In other words - yeah, it it was some SELinux ""let's restrict access to random bunch of stuff and hope it somehow helps security"" mechanism, then it would be a rather ugly hack and shouldn't be put into the software itself.  But it's an entirely different approach.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/h1z1,16,https://github.com/irssi/irssi/pull/735#issuecomment-321659193,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","I don't follow, sorry.   They are portable in that they don't all require code changes.  Firejail, SELinux, sandbox (utility in RH), all for example work without modification of any kind nor upstream support.   Contrast with cancerous things like Docker, ""snap apps"", etc..    It's actually better the application doesn't know nor care about system level details.
I'm aware of what caps are, and also find it ironic if it's as you say.. secure and not to be worried about..  why dropping capabilities is needed.     Think you'll find it's the complete opposite and yes, does little for real security.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,17,https://github.com/irssi/irssi/pull/735#issuecomment-321663001,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Just to make sure: you are aware this has absolutely nothing to do with old POSIX.1e draft capabilities, as implemented in Linux, apart from the name?  We are not ""dropping capabilities"" here.
I think we're drifting a bit off-topic, though.  Making use of Capsicum - which won't help Linux, unless Google gets their port upstreamed, but which is the sandboxing mechanism on FreeBSD - requires some code changes.  I don't think this patch will cause any maintainership problems for you - after all, it's a few hundred lines of code, vast majority in a single file.  Maintaining it outside, however, would require a manual action each time you release, which is additional work.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/h1z1,18,https://github.com/irssi/irssi/pull/735#issuecomment-321708471,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Just to make sure: you are aware this has absolutely nothing to do with old POSIX.1e draft capabilities, as implemented in Linux, apart from the name? We are not ""dropping capabilities"" here.

I do indeed.   It was in response to your assertion that capabilities are not something I should worry about:


not something for the system administrator or package maintainers to care about.


I absolutely DO worry about what permissions applications have.

I think we're drifting a bit off-topic, though. Making use of Capsicum - which won't help Linux, unless Google gets their port upstreamed, but which is the sandboxing mechanism on FreeBSD - requires some code changes. I don't think this patch will cause any maintainership problems for you - after all, it's a few hundred lines of code, vast majority in a single file.

It is indeed a mess.   My point was more to how other technologies like it will be integrated if this is the path irssi takes.   There's no real reason why the linker couldn't be used for example.   I mean looking at the changes to core//network.c alone has me baffled how that would be accepted.

Maintaining it outside, however, would require a manual action each time you release, which is additional work.

With the way this is implemented, I agree.   Either way I suppose, forked and backed out locally.  Cheers.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ailin-nemui,19,https://github.com/irssi/irssi/pull/735#issuecomment-323438039,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","I would like to see some more investigation into the topic of custom ca certificates (/server -tls_cafile / -tls_capath)
what would you want to do before /capsicum enter?",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,20,https://github.com/irssi/irssi/pull/735#issuecomment-324846335,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","I'm not sure what's the best approach for the custom certificates.  The problem is that they might be located anywhere, so opening them is exactly what we want the sandboxing system to prevent from happening.
As for ""/capsicum enter"" - literally anything.  Run scripts, for example.  Or... load the custom certificates :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/ailin-nemui,21,https://github.com/irssi/irssi/pull/735#issuecomment-325148971,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","@ahf please let @trasz know what he needs to do before this can be merged
@trasz could you include a capsicum.txt in  the docs folder explaining roughly what it does (and what the limitations) and how to use?",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/LemonBoy,22,https://github.com/irssi/irssi/pull/735#issuecomment-325153456,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","It is indeed a mess. My point was more to how other technologies like it will be integrated if this is the path irssi takes.

I agree that having a minimal amount of scaffolding to abstract over the capsicum-specific details would be a much better idea in the long run if we ever add support for seccomp or whatever the sandboxing library du jour is.

Run scripts, for example. Or... load the custom certificates :-)

The certificates are loaded in irssi_ssl_get_iochannel which I guess is too late to load the certificates. The tls_cert may be loaded by replacing the fopen with a call to the capsicum-wrapped open() (and letting irssi access the content inside ~/.irssi, from what I gather that's forbidden atm).
Also, is capsicum_irclogs_path necessary? Can't you just use autolog_path?",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,23,https://github.com/irssi/irssi/pull/735#issuecomment-326250704,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","The problem with the ""scaffolding"" is that at this point we don't have support for any other sandboxing mechanism in Irssi, and so it would be an extrapolation from a single data point.  From my experience what you usually end up in cases like that is an abstraction layer that needs to be reworked anyway.
Regarding the certificates: I generally agree, but there are few more things to keep in mind.  First: I'm not sure if I want to allow access to ~/.irssi/, but yeah, if it's the only way to fix custom certificates - why not.  Another way would be to add another configurable directory path (like capsicum_certificates_path).  Yet another would be to just make the symbiont load the certificates - making sure it won't load anything that doesn't parse as a certificate - and somehow ""forward them"" to the sandboxed process.  Still - that's one of the things I'd rather leave for now, especially given that (from what I understand) there's some work to make it possible to use GnuTLS instead of OpenSSL.
As for capsicum_irclogs_path - it's because I'm not sure how to extract the directory alone from the  autolog_path.  Is it even possible in all cases?",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/LemonBoy,24,https://github.com/irssi/irssi/pull/735#issuecomment-326297952,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","I'm not sure if I want to allow access to ~/.irssi/

Why not? If there's a folder irssi should have control on is its own :)

Another way would be to add another configurable directory path

We should avoid adding even more switches and toggles.

there's some work to make it possible to use GnuTLS instead of OpenSSL

Lies, damn lies and TLS implementations. There's an old patch floating around the internet, but that's it.

As for capsicum_irclogs_path - it's because I'm not sure how to extract the directory alone from the autolog_path. Is it even possible in all cases?

The autolog_path can be customized using the expandos but I think it should be possible to obtain the ""base"" component and use that as mkdirat/openat base.",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/trasz,25,https://github.com/irssi/irssi/pull/735#issuecomment-326541801,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","The problem with ~/.irssi/ is that it would allow the sandboxed process to modify ~/.irssi/config.  And this could be used to disable the sandbox next time Irssi gets restarted - or just run something at startup.
Regarding the autolog_path - well, I suppose I could just parse eg /home/trasz/irclogs/$tag/$0.log to get /home/trasz/irclogs; I'm not sure, however, it would correctly handle all the cases.  What if someone puts $whetever above their home directory, and the path ends up being above (closer to the filesystem root) their home directory?  This would allow the sandboxed process to access all that, rendering the sandbox pretty useless.  Even worse, it wouldn't be immediately obvious to the user that this configuration is dangerous.
Thanks for clarifying the situation with GnuTLS; one less thing to worry about :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/capsicum123,26,https://github.com/irssi/irssi/pull/735#issuecomment-447648765,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Please take a look again at certificate handling. SASL is mostly unusable and many people use it. Yes it connects, but after you enable the sandbox it won't reconnect when the connection is lost.
Every solution is better than no solution. Well, almost ... Alternatively, give instruction on how to allow a specific path for the cert. I guess building the package yourself would be the only solution currently? Or maybe some other workarounds?
Also I could not automatically enable capsicum when irssi boots. Only ""/capsicum enter"" does the trick.
The official documentation says to put capsicum=""yes"" in the irssi config file.
But somewhere up it says ""capsicum = on""
So what is the correct syntax?",True,{}
irssi/irssi,https://github.com/irssi/irssi,735,2017-07-30T09:56:15Z,2017-09-10T17:43:59Z,2019-06-26T23:14:04Z,MERGED,True,751,9,21,https://github.com/trasz,Add Capsicum support,26,['auto-merge'],https://github.com/irssi/irssi/pull/735,https://github.com/dequis,27,https://github.com/irssi/irssi/pull/735#issuecomment-447824308,"Add Capsicum (http://man.freebsd.org/capsicum) sandboxing support.  When enabled (""/capsicum enter""), it greatly minimizes the consequences of a potential security hole.  It's FreeBSD-specific, but might serve as a guideline to implement sandboxing for other systems.  It's also rather minimally intrusive, so shouldn't cause any maintainership burden in the future.
One known bug is that TLS doesn't work.  This might be addressed in the future; I believe the problem is that we'd need so somehow preload the CA certs.","Open an issue, comments in closed PRs are likely to be forgotten",True,{}
irssi/irssi,https://github.com/irssi/irssi,736,2017-08-05T20:28:48Z,2017-08-07T13:53:33Z,2019-06-26T23:14:29Z,MERGED,True,7,7,1,https://github.com/paultownsend,Update /CONNECT and /SERVER syntax tags (-ssl -> -tls).,1,[],https://github.com/irssi/irssi/pull/736,https://github.com/paultownsend,1,https://github.com/irssi/irssi/pull/736,Fixes #684.,Fixes #684.,True,{}
irssi/irssi,https://github.com/irssi/irssi,736,2017-08-05T20:28:48Z,2017-08-07T13:53:33Z,2019-06-26T23:14:29Z,MERGED,True,7,7,1,https://github.com/paultownsend,Update /CONNECT and /SERVER syntax tags (-ssl -> -tls).,1,[],https://github.com/irssi/irssi/pull/736,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/736#issuecomment-320669764,Fixes #684.,thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,737,2017-08-07T13:29:37Z,2017-08-10T14:49:33Z,2018-01-10T11:54:18Z,MERGED,True,7,0,1,https://github.com/ailin-nemui,"Revert ""Merge pull request #452 from LemonBoy/terminfo-cup""",1,['auto-merge'],https://github.com/irssi/irssi/pull/737,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/737,"Fixes #733. The fix outlined in #452 had adverse effects for the
following reason. The code removed the restoration path that would go on
the code path from kill SIGTSTP. The problem is this: When Irssi is not
running in a controlling parent (like a shell), the TSTP will in fact be
ignored. In that case, there is no process sending a CONT either and
thus the screen state never gets restored. Luckily, the patch in #457 is
sufficient to prevent the problem in #450 (which lead to the development
of #452). To that end, we do end up with potentially calling
terminfo_cont twice but that is better than not calling it at all.
This reverts commit b1ffd5f, reversing
changes made to 9cb0419.","Fixes #733. The fix outlined in #452 had adverse effects for the
following reason. The code removed the restoration path that would go on
the code path from kill SIGTSTP. The problem is this: When Irssi is not
running in a controlling parent (like a shell), the TSTP will in fact be
ignored. In that case, there is no process sending a CONT either and
thus the screen state never gets restored. Luckily, the patch in #457 is
sufficient to prevent the problem in #450 (which lead to the development
of #452). To that end, we do end up with potentially calling
terminfo_cont twice but that is better than not calling it at all.
This reverts commit b1ffd5f, reversing
changes made to 9cb0419.",True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,737,2017-08-07T13:29:37Z,2017-08-10T14:49:33Z,2018-01-10T11:54:18Z,MERGED,True,7,0,1,https://github.com/ailin-nemui,"Revert ""Merge pull request #452 from LemonBoy/terminfo-cup""",1,['auto-merge'],https://github.com/irssi/irssi/pull/737,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/737#issuecomment-320697187,"Fixes #733. The fix outlined in #452 had adverse effects for the
following reason. The code removed the restoration path that would go on
the code path from kill SIGTSTP. The problem is this: When Irssi is not
running in a controlling parent (like a shell), the TSTP will in fact be
ignored. In that case, there is no process sending a CONT either and
thus the screen state never gets restored. Luckily, the patch in #457 is
sufficient to prevent the problem in #450 (which lead to the development
of #452). To that end, we do end up with potentially calling
terminfo_cont twice but that is better than not calling it at all.
This reverts commit b1ffd5f, reversing
changes made to 9cb0419.","reversing changes made to 9cb0419

What?",True,{}
irssi/irssi,https://github.com/irssi/irssi,737,2017-08-07T13:29:37Z,2017-08-10T14:49:33Z,2018-01-10T11:54:18Z,MERGED,True,7,0,1,https://github.com/ailin-nemui,"Revert ""Merge pull request #452 from LemonBoy/terminfo-cup""",1,['auto-merge'],https://github.com/irssi/irssi/pull/737,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/737#issuecomment-320712169,"Fixes #733. The fix outlined in #452 had adverse effects for the
following reason. The code removed the restoration path that would go on
the code path from kill SIGTSTP. The problem is this: When Irssi is not
running in a controlling parent (like a shell), the TSTP will in fact be
ignored. In that case, there is no process sending a CONT either and
thus the screen state never gets restored. Luckily, the patch in #457 is
sufficient to prevent the problem in #450 (which lead to the development
of #452). To that end, we do end up with potentially calling
terminfo_cont twice but that is better than not calling it at all.
This reverts commit b1ffd5f, reversing
changes made to 9cb0419.","uh idk git autocreated that message o_O. I think what it meant by that is that 0cb0419 is the ""main"" parent of the reverted commit, most closely corresponding to the master branch at that time",True,{}
irssi/irssi,https://github.com/irssi/irssi,737,2017-08-07T13:29:37Z,2017-08-10T14:49:33Z,2018-01-10T11:54:18Z,MERGED,True,7,0,1,https://github.com/ailin-nemui,"Revert ""Merge pull request #452 from LemonBoy/terminfo-cup""",1,['auto-merge'],https://github.com/irssi/irssi/pull/737,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/737#issuecomment-320717160,"Fixes #733. The fix outlined in #452 had adverse effects for the
following reason. The code removed the restoration path that would go on
the code path from kill SIGTSTP. The problem is this: When Irssi is not
running in a controlling parent (like a shell), the TSTP will in fact be
ignored. In that case, there is no process sending a CONT either and
thus the screen state never gets restored. Luckily, the patch in #457 is
sufficient to prevent the problem in #450 (which lead to the development
of #452). To that end, we do end up with potentially calling
terminfo_cont twice but that is better than not calling it at all.
This reverts commit b1ffd5f, reversing
changes made to 9cb0419.","Oh, because you reverted a merge commit with two heads. Makes sense now. Kinda confusing to have it there though",True,{}
irssi/irssi,https://github.com/irssi/irssi,738,2017-08-09T10:12:17Z,2017-08-09T14:29:10Z,2019-06-26T23:14:31Z,MERGED,True,25,25,1,https://github.com/trasz,Fix indentation; no functional changes.,1,[],https://github.com/irssi/irssi/pull/738,https://github.com/trasz,1,https://github.com/irssi/irssi/pull/738,Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org,Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org,True,{}
irssi/irssi,https://github.com/irssi/irssi,738,2017-08-09T10:12:17Z,2017-08-09T14:29:10Z,2019-06-26T23:14:31Z,MERGED,True,25,25,1,https://github.com/trasz,Fix indentation; no functional changes.,1,[],https://github.com/irssi/irssi/pull/738,https://github.com/josephbisch,2,https://github.com/irssi/irssi/pull/738#issuecomment-321245893,Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org,"Thanks, it is good that this is being fixed, but there are still other lines in that file that use spaces instead of tab indent.",True,{}
irssi/irssi,https://github.com/irssi/irssi,738,2017-08-09T10:12:17Z,2017-08-09T14:29:10Z,2019-06-26T23:14:31Z,MERGED,True,25,25,1,https://github.com/trasz,Fix indentation; no functional changes.,1,[],https://github.com/irssi/irssi/pull/738,https://github.com/trasz,3,https://github.com/irssi/irssi/pull/738#issuecomment-321270948,Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org,"Yay at giving up the coffee, which makes you able to fail at even the simplest things!",True,{}
irssi/irssi,https://github.com/irssi/irssi,741,2017-08-29T19:04:15Z,2017-09-05T08:17:23Z,2019-06-26T23:14:06Z,MERGED,True,12,1,1,https://github.com/LemonBoy,Complete filenames ending with a slash,1,['auto-merge'],https://github.com/irssi/irssi/pull/741,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/741,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,741,2017-08-29T19:04:15Z,2017-09-05T08:17:23Z,2019-06-26T23:14:06Z,MERGED,True,12,1,1,https://github.com/LemonBoy,Complete filenames ending with a slash,1,['auto-merge'],https://github.com/irssi/irssi/pull/741,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/741#issuecomment-325768707,,please throw me some examples,True,{}
irssi/irssi,https://github.com/irssi/irssi,741,2017-08-29T19:04:15Z,2017-09-05T08:17:23Z,2019-06-26T23:14:06Z,MERGED,True,12,1,1,https://github.com/LemonBoy,Complete filenames ending with a slash,1,['auto-merge'],https://github.com/irssi/irssi/pull/741,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/741#issuecomment-325798657,,"/script load auto<tab> -> /script load autorun/ -> add a trailing slash so that the completion mechanism knows we want the content of the folder then press <tab> -> /script load autorun/file.pl
/script load autorun/<tab> -> shows the content of the folder",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/SilverRainZ,1,https://github.com/irssi/irssi/pull/742,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/742#issuecomment-326262266,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","does anyone have a mIRC ready to compare if it should be ir,ssi or irssi? does this fix issue #740  ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/SilverRainZ,3,https://github.com/irssi/irssi/pull/742#issuecomment-326264902,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","@ailin-nemui I have not a mIRC for testing so I only tested on hexchat and srain.
It really fixes #740.",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/742#issuecomment-326274373,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","we had this bug: irssi-import/bugs.irssi.org#250
here is the comparison: we need to fix something, but maybe differently:",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/SilverRainZ,5,https://github.com/irssi/irssi/pull/742#issuecomment-326308841,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","The one on the right is mIRC? It does't regard the comma as part of color code in ^C,, which means that the foreground color is never inherited -- I think it is unreasonable.",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/742#issuecomment-326312714,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","I think mIRC is the ""de facto"" standard on mIRC colour codes so we may need to accept the fact that the foreground can not be inherited, ^C, is ^C then,...",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/742#issuecomment-326363898,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","irssi:

mirc 7.47:

hexchat

weechat

After doing this I realized there are other more interesting test cases up there. Welp. I'll get to that later.
Regardless of the decisions made here: any changes to this code must go through fuzzing before they are merged. This is particularly fragile code.",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/742#issuecomment-326401836,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:",I think the changes itself are good code wise but they don't match mirc,True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/SilverRainZ,9,https://github.com/irssi/irssi/pull/742#issuecomment-331131531,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","Well, now it act like mirc.",True,{}
irssi/irssi,https://github.com/irssi/irssi,742,2017-08-31T10:50:53Z,2017-11-26T14:18:44Z,2019-06-26T23:13:52Z,CLOSED,False,8,2,1,https://github.com/SilverRainZ,Reset foreground and background while only comma is specified,1,['waiting for feedback'],https://github.com/irssi/irssi/pull/742,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/742#issuecomment-331150754,"Currently irssi can not correctly process ^C, which is a valid mirc color code.
For ^C4,2ir^C,ssi, the foreground color was inherited and left a comma:

But ^C, has neither foreground nor background, it should be treated as same as ^C:","how about this:
diff --git a/src/fe-common/core/formats.c b/src/fe-common/core/formats.c
index 005e6fb7..a340bffa 100644
--- a/src/fe-common/core/formats.c
+++ b/src/fe-common/core/formats.c
@@ -1072,7 +1072,8 @@ static void get_mirc_color(const char **str, int *fg_ret, int *bg_ret)
 	fg = fg_ret == NULL ? -1 : *fg_ret;
 	bg = bg_ret == NULL ? -1 : *bg_ret;
 
-	if (!i_isdigit(**str) && **str != ',') {
+	if (!i_isdigit(**str)) {
+		/* turn off color */
 		fg = -1;
 		bg = -1;
 	} else {
@@ -1085,11 +1086,8 @@ static void get_mirc_color(const char **str, int *fg_ret, int *bg_ret)
 				(*str)++;
 			}
 		}
-		if (**str == ',') {
+		if ((*str)[0] == ',' && i_isdigit((*str)[1])) {
 			/* background color */
-			if (!i_isdigit((*str)[1]))
-				bg = -1;
-			else {
 				(*str)++;
 				bg = **str-'0';
 				(*str)++;
@@ -1097,7 +1095,6 @@ static void get_mirc_color(const char **str, int *fg_ret, int *bg_ret)
 					bg = bg*10 + (**str-'0');
 					(*str)++;
 				}
-			}
 		}
 	}",True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/nick96,1,https://github.com/irssi/irssi/pull/743,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.","I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.",True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/743#issuecomment-326460281,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.",Sounds more like a bug we should fix,True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/nick96,3,https://github.com/irssi/irssi/pull/743#issuecomment-326499829,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.","Fair enough, is that something that can be determined in the configure file? I used the path for a homebrew install but others might have a different path",True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/743#issuecomment-326531429,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.",maybe it's a local misconfiguration on your system? can you attach config.log and the output of export? sounds like irssi finds the headers of library A but tries to link to library B,True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/nick96,5,https://github.com/irssi/irssi/pull/743#issuecomment-326562184,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.",config.log and output of export,True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/743#issuecomment-327106017,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.","I still can't figure it out, can you please show me also the broken and the working compile log (with make V=1)
and also double check if you provided the right files, as those 2 config.logs are 100% identical",True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/743#issuecomment-328823245,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.",similar error description on another project: NagiosEnterprises/nrpe#164,True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/nick96,8,https://github.com/irssi/irssi/pull/743#issuecomment-330284137,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.","I can no longer replicate this as I'm no longer on OS X, sorry I can't be of more help.",True,{}
irssi/irssi,https://github.com/irssi/irssi,743,2017-08-31T23:44:31Z,2017-10-11T05:58:57Z,2017-10-11T05:58:57Z,CLOSED,False,16,2,1,https://github.com/nick96,OS X install notes,2,['waiting for feedback'],https://github.com/irssi/irssi/pull/743,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/743#issuecomment-335691671,"I was having problems building Irssi from source on OS X and found the issue was that the system openSSL library was the problem. I updated the INSTALL file so that hopefully people don't have to
search too far if they have this problem as well.",closing for now,True,{}
irssi/irssi,https://github.com/irssi/irssi,746,2017-09-08T21:00:20Z,2018-01-07T10:23:23Z,2019-06-26T23:14:01Z,MERGED,True,139,31,12,https://github.com/ailin-nemui,Add method to hide lines in a view,2,['auto-merge'],https://github.com/irssi/irssi/pull/746,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/746,"Initial code for hidden lines.
Usage: /window hidelevel +joins +parts +quits","Initial code for hidden lines.
Usage: /window hidelevel +joins +parts +quits",True,{}
irssi/irssi,https://github.com/irssi/irssi,746,2017-09-08T21:00:20Z,2018-01-07T10:23:23Z,2019-06-26T23:14:01Z,MERGED,True,139,31,12,https://github.com/ailin-nemui,Add method to hide lines in a view,2,['auto-merge'],https://github.com/irssi/irssi/pull/746,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/746#issuecomment-328213344,"Initial code for hidden lines.
Usage: /window hidelevel +joins +parts +quits",first test by kinlo,True,{}
irssi/irssi,https://github.com/irssi/irssi,746,2017-09-08T21:00:20Z,2018-01-07T10:23:23Z,2019-06-26T23:14:01Z,MERGED,True,139,31,12,https://github.com/ailin-nemui,Add method to hide lines in a view,2,['auto-merge'],https://github.com/irssi/irssi/pull/746,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/746#issuecomment-328213479,"Initial code for hidden lines.
Usage: /window hidelevel +joins +parts +quits","todo:

 XS,
 better code for modification of lines (edit level, edit content?)
 check session",True,{}
irssi/irssi,https://github.com/irssi/irssi,746,2017-09-08T21:00:20Z,2018-01-07T10:23:23Z,2019-06-26T23:14:01Z,MERGED,True,139,31,12,https://github.com/ailin-nemui,Add method to hide lines in a view,2,['auto-merge'],https://github.com/irssi/irssi/pull/746,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/746#issuecomment-328352277,"Initial code for hidden lines.
Usage: /window hidelevel +joins +parts +quits","Sounds good overall, didn't review in depth.",True,{}
irssi/irssi,https://github.com/irssi/irssi,746,2017-09-08T21:00:20Z,2018-01-07T10:23:23Z,2019-06-26T23:14:01Z,MERGED,True,139,31,12,https://github.com/ailin-nemui,Add method to hide lines in a view,2,['auto-merge'],https://github.com/irssi/irssi/pull/746,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/746#issuecomment-355431100,"Initial code for hidden lines.
Usage: /window hidelevel +joins +parts +quits",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,749,2017-09-10T16:16:30Z,2020-03-17T01:22:29Z,2020-03-17T01:22:29Z,CLOSED,False,78,17,8,https://github.com/josephbisch,Save backup config during /upgrade,3,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/749,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/749,"Fixes #690 by using a file named config.clientbackup in ~/.irssi.
This is just a suggestion for how to handle #690. There may be a better way to handle this.
This could use testing. Here's the expected flow of things:

Run irssi.
Edit config within irssi.
/upgrade
/save
/quit

After that, you should have ~/.irssi/config, which is the same as before, except whatever config options you changed before the upgrade are reflected in the config file. There was a ~/.irssi/config.clientbackup, but that should be deleted upon successful save.","Fixes #690 by using a file named config.clientbackup in ~/.irssi.
This is just a suggestion for how to handle #690. There may be a better way to handle this.
This could use testing. Here's the expected flow of things:

Run irssi.
Edit config within irssi.
/upgrade
/save
/quit

After that, you should have ~/.irssi/config, which is the same as before, except whatever config options you changed before the upgrade are reflected in the config file. There was a ~/.irssi/config.clientbackup, but that should be deleted upon successful save.",True,{}
irssi/irssi,https://github.com/irssi/irssi,749,2017-09-10T16:16:30Z,2020-03-17T01:22:29Z,2020-03-17T01:22:29Z,CLOSED,False,78,17,8,https://github.com/josephbisch,Save backup config during /upgrade,3,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/749,https://github.com/josephbisch,2,https://github.com/irssi/irssi/pull/749#issuecomment-328983653,"Fixes #690 by using a file named config.clientbackup in ~/.irssi.
This is just a suggestion for how to handle #690. There may be a better way to handle this.
This could use testing. Here's the expected flow of things:

Run irssi.
Edit config within irssi.
/upgrade
/save
/quit

After that, you should have ~/.irssi/config, which is the same as before, except whatever config options you changed before the upgrade are reflected in the config file. There was a ~/.irssi/config.clientbackup, but that should be deleted upon successful save.",Ready for testing and review. Don't forget to backup your config before testing.,True,{}
irssi/irssi,https://github.com/irssi/irssi,749,2017-09-10T16:16:30Z,2020-03-17T01:22:29Z,2020-03-17T01:22:29Z,CLOSED,False,78,17,8,https://github.com/josephbisch,Save backup config during /upgrade,3,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/749,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/749#issuecomment-329169548,"Fixes #690 by using a file named config.clientbackup in ~/.irssi.
This is just a suggestion for how to handle #690. There may be a better way to handle this.
This could use testing. Here's the expected flow of things:

Run irssi.
Edit config within irssi.
/upgrade
/save
/quit

After that, you should have ~/.irssi/config, which is the same as before, except whatever config options you changed before the upgrade are reflected in the config file. There was a ~/.irssi/config.clientbackup, but that should be deleted upon successful save.","just a random thought, haven't reviewed: iirc you can run irssi with --config=myconf, wonder if it would be better to have a backup ""suffix"" instead. but this is likely quite a rare case",True,{}
irssi/irssi,https://github.com/irssi/irssi,749,2017-09-10T16:16:30Z,2020-03-17T01:22:29Z,2020-03-17T01:22:29Z,CLOSED,False,78,17,8,https://github.com/josephbisch,Save backup config during /upgrade,3,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/749,https://github.com/josephbisch,4,https://github.com/irssi/irssi/pull/749#issuecomment-329170872,"Fixes #690 by using a file named config.clientbackup in ~/.irssi.
This is just a suggestion for how to handle #690. There may be a better way to handle this.
This could use testing. Here's the expected flow of things:

Run irssi.
Edit config within irssi.
/upgrade
/save
/quit

After that, you should have ~/.irssi/config, which is the same as before, except whatever config options you changed before the upgrade are reflected in the config file. There was a ~/.irssi/config.clientbackup, but that should be deleted upon successful save.","Right, so if someone is using --config=myconf to switch between two configs, this won't work. So you are right, it should be $config.clientbackup instead of always being config.clientbackup.",True,{}
irssi/irssi,https://github.com/irssi/irssi,749,2017-09-10T16:16:30Z,2020-03-17T01:22:29Z,2020-03-17T01:22:29Z,CLOSED,False,78,17,8,https://github.com/josephbisch,Save backup config during /upgrade,3,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/749,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/749#issuecomment-335691413,"Fixes #690 by using a file named config.clientbackup in ~/.irssi.
This is just a suggestion for how to handle #690. There may be a better way to handle this.
This could use testing. Here's the expected flow of things:

Run irssi.
Edit config within irssi.
/upgrade
/save
/quit

After that, you should have ~/.irssi/config, which is the same as before, except whatever config options you changed before the upgrade are reflected in the config file. There was a ~/.irssi/config.clientbackup, but that should be deleted upon successful save.","maybe just check for a $config.clientbackup instead of explicitly passing the backup file in --config. When does the modified && clientbackup != NULL case happen?
not sure about the exit(1)",True,{}
irssi/irssi,https://github.com/irssi/irssi,749,2017-09-10T16:16:30Z,2020-03-17T01:22:29Z,2020-03-17T01:22:29Z,CLOSED,False,78,17,8,https://github.com/josephbisch,Save backup config during /upgrade,3,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/749,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/749#issuecomment-355813870,"Fixes #690 by using a file named config.clientbackup in ~/.irssi.
This is just a suggestion for how to handle #690. There may be a better way to handle this.
This could use testing. Here's the expected flow of things:

Run irssi.
Edit config within irssi.
/upgrade
/save
/quit

After that, you should have ~/.irssi/config, which is the same as before, except whatever config options you changed before the upgrade are reflected in the config file. There was a ~/.irssi/config.clientbackup, but that should be deleted upon successful save.",@josephbisch this still needs some changes,True,{}
irssi/irssi,https://github.com/irssi/irssi,751,2017-09-11T14:33:30Z,2017-09-13T08:32:39Z,2019-06-26T23:14:23Z,MERGED,True,17,0,1,https://github.com/LemonBoy,Increment the X509_STORE refcount during the connection,2,['auto-merge'],https://github.com/irssi/irssi/pull/751,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/751,"OpenSSL doesn't increment the reference count when the store is assigned
to a SSL_CTX.
Fixes #750","OpenSSL doesn't increment the reference count when the store is assigned
to a SSL_CTX.
Fixes #750",True,{}
irssi/irssi,https://github.com/irssi/irssi,751,2017-09-11T14:33:30Z,2017-09-13T08:32:39Z,2019-06-26T23:14:23Z,MERGED,True,17,0,1,https://github.com/LemonBoy,Increment the X509_STORE refcount during the connection,2,['auto-merge'],https://github.com/irssi/irssi/pull/751,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/751#issuecomment-328769048,"OpenSSL doesn't increment the reference count when the store is assigned
to a SSL_CTX.
Fixes #750","nice, lgtm. should we go for the simpler:
#define X509_STORE_up_ref(store) CRYPTO_add(&(store)->references, 1, CRYPTO_LOCK_X509_STORE)

https://fossies.org/linux/h2o/include/h2o/openssl_backport.h
instead?",True,{}
irssi/irssi,https://github.com/irssi/irssi,754,2017-09-13T11:58:15Z,2017-10-05T09:31:45Z,2019-06-26T23:14:22Z,MERGED,True,24,5,4,https://github.com/ailin-nemui,add new function to set the position in bytes,2,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/754,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/754,fixes #752,fixes #752,True,{}
irssi/irssi,https://github.com/irssi/irssi,755,2017-09-13T17:27:09Z,2017-09-15T11:40:17Z,2019-06-26T23:14:05Z,MERGED,True,7,0,1,https://github.com/trasz,Get rid of the zombies in Capsicum capability mode.,1,['auto-merge'],https://github.com/irssi/irssi/pull/755,https://github.com/trasz,1,https://github.com/irssi/irssi/pull/755,"This solves the problem where Irssi running in capability mode would leave zombies, probably from either DNS resolving or connecting in the background.  The reason, from what I understand, is that glib doesn't know about Capsicum and cannot use process descriptors; the usual method of waiting for processes - wait(2) et al - is not available in capability mode due to requiring access to a global namespace (PID namespace in this case).  The right thing would be to add the neccessary functionality to glib - but until this happens, this workaround should be ok - I don't think it breaks anything that isn't already broken in capability mode, like Perl.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","This solves the problem where Irssi running in capability mode would leave zombies, probably from either DNS resolving or connecting in the background.  The reason, from what I understand, is that glib doesn't know about Capsicum and cannot use process descriptors; the usual method of waiting for processes - wait(2) et al - is not available in capability mode due to requiring access to a global namespace (PID namespace in this case).  The right thing would be to add the neccessary functionality to glib - but until this happens, this workaround should be ok - I don't think it breaks anything that isn't already broken in capability mode, like Perl.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org",True,{}
irssi/irssi,https://github.com/irssi/irssi,757,2017-09-14T10:13:47Z,2018-01-06T19:19:00Z,2019-01-25T11:59:48Z,CLOSED,False,52,5,1,https://github.com/TauPan,ask user for ssl client cert password,1,['needs changes'],https://github.com/irssi/irssi/pull/757,https://github.com/TauPan,1,https://github.com/irssi/irssi/pull/757,"Putting plaintext passwords in the irssi config might not conform to security requirements for some ssl client certificates.
see irssi-import/bugs.irssi.org#305
I'm not quite sure how to do this properly so I get a password prompt on the statusbar, which redraws afterwards.
Looking forward to your feedback on this.","Putting plaintext passwords in the irssi config might not conform to security requirements for some ssl client certificates.
see irssi-import/bugs.irssi.org#305
I'm not quite sure how to do this properly so I get a password prompt on the statusbar, which redraws afterwards.
Looking forward to your feedback on this.",True,{}
irssi/irssi,https://github.com/irssi/irssi,757,2017-09-14T10:13:47Z,2018-01-06T19:19:00Z,2019-01-25T11:59:48Z,CLOSED,False,52,5,1,https://github.com/TauPan,ask user for ssl client cert password,1,['needs changes'],https://github.com/irssi/irssi/pull/757,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/757#issuecomment-329494068,"Putting plaintext passwords in the irssi config might not conform to security requirements for some ssl client certificates.
see irssi-import/bugs.irssi.org#305
I'm not quite sure how to do this properly so I get a password prompt on the statusbar, which redraws afterwards.
Looking forward to your feedback on this.","your code would block irssi while waiting for the password, which is not acceptable",True,{}
irssi/irssi,https://github.com/irssi/irssi,757,2017-09-14T10:13:47Z,2018-01-06T19:19:00Z,2019-01-25T11:59:48Z,CLOSED,False,52,5,1,https://github.com/TauPan,ask user for ssl client cert password,1,['needs changes'],https://github.com/irssi/irssi/pull/757,https://github.com/TauPan,3,https://github.com/irssi/irssi/pull/757#issuecomment-329497923,"Putting plaintext passwords in the irssi config might not conform to security requirements for some ssl client certificates.
see irssi-import/bugs.irssi.org#305
I'm not quite sure how to do this properly so I get a password prompt on the statusbar, which redraws afterwards.
Looking forward to your feedback on this.","@ailin-nemui Oh. My use-case is logging into a single server with a configured ssl_cert on irssi startup.
You mean if the user receives a disconnect from a server irssi would block every other connection as well, while waiting for the password?
I certainly didn't anticipate that.
Since I'm not familiar with irssi's codebase I don't know how to proceed. If you see no other option to integrate this into irssi the proper way, I'm ok with closing this ticket.",True,{}
irssi/irssi,https://github.com/irssi/irssi,757,2017-09-14T10:13:47Z,2018-01-06T19:19:00Z,2019-01-25T11:59:48Z,CLOSED,False,52,5,1,https://github.com/TauPan,ask user for ssl client cert password,1,['needs changes'],https://github.com/irssi/irssi/pull/757,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/757#issuecomment-329719335,"Putting plaintext passwords in the irssi config might not conform to security requirements for some ssl client certificates.
see irssi-import/bugs.irssi.org#305
I'm not quite sure how to do this properly so I get a password prompt on the statusbar, which redraws afterwards.
Looking forward to your feedback on this.","I'm afraid the best we have come up so far with is to put it in /server -ssl_pass (which may get saved to your config)
for some related discussions general to passwords, you may also read issue #6 (and previously #103)",True,{}
irssi/irssi,https://github.com/irssi/irssi,757,2017-09-14T10:13:47Z,2018-01-06T19:19:00Z,2019-01-25T11:59:48Z,CLOSED,False,52,5,1,https://github.com/TauPan,ask user for ssl client cert password,1,['needs changes'],https://github.com/irssi/irssi/pull/757,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/757#issuecomment-355769040,"Putting plaintext passwords in the irssi config might not conform to security requirements for some ssl client certificates.
see irssi-import/bugs.irssi.org#305
I'm not quite sure how to do this properly so I get a password prompt on the statusbar, which redraws afterwards.
Looking forward to your feedback on this.",closing for inactivity,True,{}
irssi/irssi,https://github.com/irssi/irssi,762,2017-10-05T21:58:14Z,2017-11-25T23:28:59Z,2019-06-26T23:14:03Z,MERGED,True,411,28,5,https://github.com/ailin-nemui,allow access to global command history when using a specifc history,4,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/762,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/762,also add history loading method,also add history loading method,True,{}
irssi/irssi,https://github.com/irssi/irssi,762,2017-10-05T21:58:14Z,2017-11-25T23:28:59Z,2019-06-26T23:14:03Z,MERGED,True,411,28,5,https://github.com/ailin-nemui,allow access to global command history when using a specifc history,4,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/762,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/762#issuecomment-334604038,also add history loading method,"usage: ctrl+up/down
this can come in handy if you use /window history named or /set window_history on, but want to recall something from one of the other windows' histories",True,{}
irssi/irssi,https://github.com/irssi/irssi,762,2017-10-05T21:58:14Z,2017-11-25T23:28:59Z,2019-06-26T23:14:03Z,MERGED,True,411,28,5,https://github.com/ailin-nemui,allow access to global command history when using a specifc history,4,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/762,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/762#issuecomment-334609440,also add history loading method,"sample script for your autorun:
use strict;
use warnings;
use YAML::Tiny;

my $histfile = Irssi::get_irssi_dir().""/history"";

my ($hist) = eval { YAML::Tiny::LoadFile($histfile) };
if ($hist) {
    Irssi::UI::Window::load_history_entries(undef, @$hist);
}

Irssi::signal_add 'gui exit' => sub {
    if (Irssi::settings_get_bool('settings_autosave')) {
	YAML::Tiny::DumpFile($histfile, [ Irssi::UI::Window::get_history_entries(undef) ] )
    }
}",True,{}
irssi/irssi,https://github.com/irssi/irssi,762,2017-10-05T21:58:14Z,2017-11-25T23:28:59Z,2019-06-26T23:14:03Z,MERGED,True,411,28,5,https://github.com/ailin-nemui,allow access to global command history when using a specifc history,4,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/762,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/762#issuecomment-334727776,also add history loading method,"Good stuff.
The commit log / PR title could use some more love. I mean, global window history is the default behavior, but being able to use global history while window history is enabled is a very good feature.
Not sure I fully understand what g_history is supposed to hold.
Leaving the job of persisting history to a perl script is a weird choice (not wrong, but not one i'd choose) but I guess you like perl, and more APIs don't hurt. It's a good example of adding more perl stuff, I guess.",True,{}
irssi/irssi,https://github.com/irssi/irssi,762,2017-10-05T21:58:14Z,2017-11-25T23:28:59Z,2019-06-26T23:14:03Z,MERGED,True,411,28,5,https://github.com/ailin-nemui,allow access to global command history when using a specifc history,4,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/762,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/762#issuecomment-334756799,also add history loading method,I renamed g_history to history_entries,True,{}
irssi/irssi,https://github.com/irssi/irssi,763,2017-10-06T03:52:00Z,2017-10-08T16:50:20Z,2018-01-10T11:54:18Z,MERGED,True,23,12,1,https://github.com/rbisewski,Improvements to statusbar documentation and help text.,5,[],https://github.com/irssi/irssi/pull/763,https://github.com/rbisewski,1,https://github.com/irssi/irssi/pull/763,"As per issue #758, I have made an attempt at improving both the HOWTO and the ""/help statusbar"" content to better reflect the current state of irssi statusbar functionality.","As per issue #758, I have made an attempt at improving both the HOWTO and the ""/help statusbar"" content to better reflect the current state of irssi statusbar functionality.",True,{}
irssi/irssi,https://github.com/irssi/irssi,763,2017-10-06T03:52:00Z,2017-10-08T16:50:20Z,2018-01-10T11:54:18Z,MERGED,True,23,12,1,https://github.com/rbisewski,Improvements to statusbar documentation and help text.,5,[],https://github.com/irssi/irssi/pull/763,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/763#issuecomment-334723402,"As per issue #758, I have made an attempt at improving both the HOWTO and the ""/help statusbar"" content to better reflect the current state of irssi statusbar functionality.","Thanks!
Looks like we totally forgot there was a copy of the startup doc in this repo. It's outdated relative to the one in https://github.com/irssi/irssi.github.io/blob/master/documentation/startup/index.markdown
Can you drop that part of this PR and send those changes to the other repo? We'll just use pandoc or something to generate a whole new startup-HOWTO.html
Haven't reviewed too much for correctness but sounds about right. Nitpicks on wording: I'd use ""number"" over ""unsigned integer"", and maybe change those ""refers to"" to ""sets"" (assuming all of them are commands to set attributes of the statusbar, right?)
I'm not sure disable completely removes the statusbar every time. I think that's just the non-builtin ones.",True,{}
irssi/irssi,https://github.com/irssi/irssi,763,2017-10-06T03:52:00Z,2017-10-08T16:50:20Z,2018-01-10T11:54:18Z,MERGED,True,23,12,1,https://github.com/rbisewski,Improvements to statusbar documentation and help text.,5,[],https://github.com/irssi/irssi/pull/763,https://github.com/rbisewski,3,https://github.com/irssi/irssi/pull/763#issuecomment-334748575,"As per issue #758, I have made an attempt at improving both the HOWTO and the ""/help statusbar"" content to better reflect the current state of irssi statusbar functionality.","I have since made the requested changes to the pull-request from your above feedback, and have created a fork of your site and added the HOWTO changes into it.
Let me know if you notice anything else.",True,{}
irssi/irssi,https://github.com/irssi/irssi,763,2017-10-06T03:52:00Z,2017-10-08T16:50:20Z,2018-01-10T11:54:18Z,MERGED,True,23,12,1,https://github.com/rbisewski,Improvements to statusbar documentation and help text.,5,[],https://github.com/irssi/irssi/pull/763,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/763#issuecomment-335020125,"As per issue #758, I have made an attempt at improving both the HOWTO and the ""/help statusbar"" content to better reflect the current state of irssi statusbar functionality.",thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/GinjaNinja32,1,https://github.com/irssi/irssi/pull/764,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/764#issuecomment-335688528,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","seems mostly ok, but I don't like having to use the internal colour attributes from XS -- maybe we can add in some functions to do colour code conversions between \004, % and this. And another thing: it doesn't do 24bit ""true colour"" (api is term_set_color2, didn't exist back then)
The more general question is if we like this implementation. Alternative would be to have in-line colours like in print text / gui prompt. But this code here is much simpler.
In general I think it would be a nice to have feature for your and the other use case",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/764#issuecomment-335714375,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","maybe we can add in some functions to do colour code conversions between \004, % and this.

What if we reuse the same parsing logic that's used for themes formats? It's not that good but at least spares us from writing another parser and having the script writers learn a new set of specifiers.

Alternative would be to have in-line colours

The principle of separation between data and metadata applies here.
A script may as well render the inline colours though, that's an interesting idea.

other use case

I'm using it to turn the whole prompt red whenever there's a cmdchar with leading rubbish, no more accidental commands for me 😃",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/764#issuecomment-335766096,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","I'm using it to turn the whole prompt red whenever there's a cmdchar with leading rubbish, no more accidental commands for me

if we had something more generic like in line colours then it could offer more flexibility like also in line altering of the actual displayed text. think of a blinking ""warning"" appended to the prompt or an in line display of spelling suggestions after the unrecognised word",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/GinjaNinja32,5,https://github.com/irssi/irssi/pull/764#issuecomment-335885534,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","I'm not entirely sure how inline colors would work here.
Using format codes instead of ints sounds good, though. get_nick_color2 appears to return \004-style codes, so it'd be good if it accepts those - perhaps a string containing either a \cD.. code or a %#/%X## code?
I have no idea how I'd implement that, but I can take a look and poke around IRC and see if I can put something together.",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/764#issuecomment-336485200,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","just conceptually speaking, one way to think about inline colours would be to take the input
 /whois xxx

then call a function (e.g. XS) which would change it to
[NOT COMMAND!]  /whois xxx

and that's what would then be visible. This would demand the callback to transform ""input"" into ""displayed input"" to be called at basically every change to the prompt
colours would then be realised by ""returning""
%R /whois xxx

from the signal handler. There /should/ be some methods in irssi (which may need to be moved to some util/misc function) that turn %codes into the appropriate attributes",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/764#issuecomment-338644410,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)",todo: change XS to work on %-codes (maybe exposing some functions for \004 conversion at the same time),True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/764#issuecomment-356776320,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","first version, still some errors, feel free to play with it and fix the remaining bugs",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/764#issuecomment-358803032,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","Irssi::gui_input_clear_extents(pos, len)
Irssi::gui_input_get_extent(pos)
Irssi::gui_input_set_extents(pos, len, left, right)",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/764#issuecomment-358822866,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)",http://anti.teamidiot.de/static/nei/*/Code/Irssi/spellcheck.pl,True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/764#issuecomment-358913568,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)","@GinjaNinja32 I changed the api again slightly,extent -> extents. hope you can test this again and discuss any usability issues that we may need to fix before merge",True,{}
irssi/irssi,https://github.com/irssi/irssi,764,2017-10-06T17:44:00Z,2018-02-05T21:28:09Z,2019-06-26T23:12:44Z,MERGED,True,607,72,5,https://github.com/GinjaNinja32,Add color support for input bar,5,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/764,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/764#issuecomment-362581284,"This is mostly a rebase of this patch, with a few bugfixes (a segfault in gui_entry_transpose_words, and a pointer-to-int assignment).
Allows scripts to specify that ranges of characters in the input bar should be rendered in specific colors; the original intent for this was to implement a spellchecker, my use is to colorise nicks in the input bar.
Example script using this, mostly based on my rewritten colorize_nicks.pl: https://thanatos.gn32.uk/f/colorise_input.pl (I'll likely clean up the code a little and submit for scripts.irssi.org, assuming this PR gets merged)",@irssi/developers I think we should merge this,True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/766,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.","This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.",True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/horgh,2,https://github.com/irssi/irssi/pull/766#issuecomment-335036767,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.",Travis doesn't like the addition of trying to run make check. I'm working on it!,True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/766#issuecomment-335039995,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.",we should discuss a bit more detailed how to best add tests into irssi,True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/horgh,4,https://github.com/irssi/irssi/pull/766#issuecomment-335041443,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.","Sure! I'm happy to change this. Mainly I wanted tests to try to understand what was going on with the relevant functions and this was an easy way.
These tests use automake's test suite functionality. It is pretty flexible and there can be several test programs that will run. Since the one added here is a regular C program, we can also run it under valgrind and gdb and the like.
Another way I sometimes like to write tests like these is to have the test code in the actual source files guarded by ifdefs, and conditionally compile a main function in there. That way static functions can be tested.
What do you think? I'm not sure of the best way that would work here. We could consider test suite libraries/frameworks as well, if we wanted to think about making tests easier to write.",True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/766#issuecomment-335105189,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.",(I opened a separate discussion about this),True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/766#issuecomment-335711411,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.","If I correctly understand what #601 is about all we have to do is preprocess the rest string to make sure an eventual  :  is weeded out: this leads to a much simpler fix IMO that only needs a memmove. Maybe not even that since, after a quick glance at the code, the whitespace is ignored when the mode argument is parsed, you could just replace the : with a   and call it a day.
Just my 0.02€",True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/766#issuecomment-336483403,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.","let's investigate if there is a simpler solution àla LemonBoy's suggestion, and move the test to a separate PR. As per #767 I would like to see something based on glib test for that in tests/irc",True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/horgh,8,https://github.com/irssi/irssi/pull/766#issuecomment-338447663,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.","Thanks for the reviews. I force pushed stripping the "":"" as suggested by @LemonBoy. I opted to strip it rather than replace it with a space as this function is used for more than mode parsing, and I don't know that all uses would ignore it. I'll move the tests to a separate PR.",True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/766#issuecomment-339182573,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.","This will just look for any : anywhere and remove it. Colons are only meaningful at the beginning of a parameter, not in the middle.",True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/horgh,10,https://github.com/irssi/irssi/pull/766#issuecomment-339186154,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.","Hmm yeah, good catch. For some reason I thought we needed to escape parameters containing them with a : prefix, but apparently not!",True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/horgh,11,https://github.com/irssi/irssi/pull/766#issuecomment-339200076,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.",I force pushed an update.,True,{}
irssi/irssi,https://github.com/irssi/irssi,766,2017-10-08T20:07:24Z,2017-12-11T22:48:24Z,2019-06-26T23:14:19Z,MERGED,True,32,2,1,https://github.com/horgh,Fix MODE parameter parsing,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/766,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/766#issuecomment-348722082,"This is to fix #601.
I tested this with the added unit tests, as well as with an IRCD modified to always prefix the last parameter to MODE with a "":"", whether needed or not.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,768,2017-10-09T09:41:44Z,,2020-04-21T16:59:54Z,OPEN,False,105,6,1,https://github.com/ailin-nemui,[wip] trying to find the root issue of /lastlog -clear and /clear reset,2,"['help wanted', 'WIP']",https://github.com/irssi/irssi/pull/768,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/768,"I added some printf' debug code to try and crack issue #745
if someone wants to help me looking feel free to start here

the subline seems to be accounted for incorrectly
I added some debug code so you can /window vi to make it print the current view internals (if you play around with /lastlog -clear and /clear)","I added some printf' debug code to try and crack issue #745
if someone wants to help me looking feel free to start here

the subline seems to be accounted for incorrectly
I added some debug code so you can /window vi to make it print the current view internals (if you play around with /lastlog -clear and /clear)",True,{}
irssi/irssi,https://github.com/irssi/irssi,769,2017-10-09T19:54:13Z,2017-10-13T15:14:48Z,2018-01-10T11:54:18Z,MERGED,True,1,0,1,https://github.com/horgh,Set host to an empty string on error,2,['auto-merge'],https://github.com/irssi/irssi/pull/769,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/769,"While investigating #317, I noticed that it was possible we would access
an uninitialized buffer due to failing to check the return value of
net_ip2host(). This is done in several places. To make such uses safe,
set the host buffer to an empty string on error. It is possible callers
could be improved by handling the error in each spot, but this gives us
some safety.","While investigating #317, I noticed that it was possible we would access
an uninitialized buffer due to failing to check the return value of
net_ip2host(). This is done in several places. To make such uses safe,
set the host buffer to an empty string on error. It is possible callers
could be improved by handling the error in each spot, but this gives us
some safety.",True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,769,2017-10-09T19:54:13Z,2017-10-13T15:14:48Z,2018-01-10T11:54:18Z,MERGED,True,1,0,1,https://github.com/horgh,Set host to an empty string on error,2,['auto-merge'],https://github.com/irssi/irssi/pull/769,https://github.com/josephbisch,2,https://github.com/irssi/irssi/pull/769#issuecomment-335316192,"While investigating #317, I noticed that it was possible we would access
an uninitialized buffer due to failing to check the return value of
net_ip2host(). This is done in several places. To make such uses safe,
set the host buffer to an empty string on error. It is possible callers
could be improved by handling the error in each spot, but this gives us
some safety.",LGTM,True,{}
irssi/irssi,https://github.com/irssi/irssi,769,2017-10-09T19:54:13Z,2017-10-13T15:14:48Z,2018-01-10T11:54:18Z,MERGED,True,1,0,1,https://github.com/horgh,Set host to an empty string on error,2,['auto-merge'],https://github.com/irssi/irssi/pull/769,https://github.com/horgh,3,https://github.com/irssi/irssi/pull/769#issuecomment-335653896,"While investigating #317, I noticed that it was possible we would access
an uninitialized buffer due to failing to check the return value of
net_ip2host(). This is done in several places. To make such uses safe,
set the host buffer to an empty string on error. It is possible callers
could be improved by handling the error in each spot, but this gives us
some safety.",Thanks for checking it out! I updated the change. A lot simpler!,True,{}
irssi/irssi,https://github.com/irssi/irssi,770,2017-10-09T20:27:29Z,2017-10-23T12:29:35Z,2019-06-26T23:13:59Z,MERGED,True,3,41,2,https://github.com/horgh,Remove a couple unused functions,5,['auto-merge'],https://github.com/irssi/irssi/pull/770,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/770,"I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.","I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.",True,{}
irssi/irssi,https://github.com/irssi/irssi,770,2017-10-09T20:27:29Z,2017-10-23T12:29:35Z,2019-06-26T23:13:59Z,MERGED,True,3,41,2,https://github.com/horgh,Remove a couple unused functions,5,['auto-merge'],https://github.com/irssi/irssi/pull/770,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/770#issuecomment-335367566,"I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.","You should deprecate first, then remove, but not in a minor release.",True,{}
irssi/irssi,https://github.com/irssi/irssi,770,2017-10-09T20:27:29Z,2017-10-23T12:29:35Z,2019-06-26T23:13:59Z,MERGED,True,3,41,2,https://github.com/horgh,Remove a couple unused functions,5,['auto-merge'],https://github.com/irssi/irssi/pull/770,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/770#issuecomment-335408446,"I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.",I think we can accept this into master..,True,{}
irssi/irssi,https://github.com/irssi/irssi,770,2017-10-09T20:27:29Z,2017-10-23T12:29:35Z,2019-06-26T23:13:59Z,MERGED,True,3,41,2,https://github.com/horgh,Remove a couple unused functions,5,['auto-merge'],https://github.com/irssi/irssi/pull/770,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/770#issuecomment-335679640,"I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.","-1, it's public api, modules exist, deprecate first.",True,{}
irssi/irssi,https://github.com/irssi/irssi,770,2017-10-09T20:27:29Z,2017-10-23T12:29:35Z,2019-06-26T23:13:59Z,MERGED,True,3,41,2,https://github.com/horgh,Remove a couple unused functions,5,['auto-merge'],https://github.com/irssi/irssi/pull/770,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/770#issuecomment-335687808,"I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.","let's remove the deprecated one, the ip compare I don't really care.. could be useful but I don't see it used anywhere",True,{}
irssi/irssi,https://github.com/irssi/irssi,770,2017-10-09T20:27:29Z,2017-10-23T12:29:35Z,2019-06-26T23:13:59Z,MERGED,True,3,41,2,https://github.com/horgh,Remove a couple unused functions,5,['auto-merge'],https://github.com/irssi/irssi/pull/770,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/770#issuecomment-335699586,"I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.","Oh right one of them is deprecated already. Looks like that was part of #422 included in 1.0.0. I'm ok with removing that.
net_ip_compare is small, doesn't hurt. But yeah, useless. Looks like timo sirainen copypasting his own code from dovecot.",True,{}
irssi/irssi,https://github.com/irssi/irssi,770,2017-10-09T20:27:29Z,2017-10-23T12:29:35Z,2019-06-26T23:13:59Z,MERGED,True,3,41,2,https://github.com/horgh,Remove a couple unused functions,5,['auto-merge'],https://github.com/irssi/irssi/pull/770,https://github.com/horgh,7,https://github.com/irssi/irssi/pull/770#issuecomment-336600641,"I noticed an unused function and then saw another. I see one was already marked deprecated, so maybe there's a reason we should keep it, but anyway.","I reverted removing the one that wasn't already marked deprecated, and marked it deprecated.",True,{}
irssi/irssi,https://github.com/irssi/irssi,771,2017-10-11T20:48:38Z,2017-10-18T10:00:57Z,2019-06-26T23:14:04Z,MERGED,True,21,4,5,https://github.com/paultownsend,Add alternate_nick as a network-specific property,2,[],https://github.com/irssi/irssi/pull/771,https://github.com/paultownsend,1,https://github.com/irssi/irssi/pull/771,Reference issue #120 - I've added the requested feature and updated the docs to reflect the new parameter.,Reference issue #120 - I've added the requested feature and updated the docs to reflect the new parameter.,True,{}
irssi/irssi,https://github.com/irssi/irssi,771,2017-10-11T20:48:38Z,2017-10-18T10:00:57Z,2019-06-26T23:14:04Z,MERGED,True,21,4,5,https://github.com/paultownsend,Add alternate_nick as a network-specific property,2,[],https://github.com/irssi/irssi/pull/771,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/771#issuecomment-335944164,Reference issue #120 - I've added the requested feature and updated the docs to reflect the new parameter.,where is it saved to the config?,True,{}
irssi/irssi,https://github.com/irssi/irssi,771,2017-10-11T20:48:38Z,2017-10-18T10:00:57Z,2019-06-26T23:14:04Z,MERGED,True,21,4,5,https://github.com/paultownsend,Add alternate_nick as a network-specific property,2,[],https://github.com/irssi/irssi/pull/771,https://github.com/paultownsend,3,https://github.com/irssi/irssi/pull/771#issuecomment-335944911,Reference issue #120 - I've added the requested feature and updated the docs to reflect the new parameter.,Ah I knew I'd forget something! That was on my list of things to check and I missed it. I'll take a look now.,True,{}
irssi/irssi,https://github.com/irssi/irssi,771,2017-10-11T20:48:38Z,2017-10-18T10:00:57Z,2019-06-26T23:14:04Z,MERGED,True,21,4,5,https://github.com/paultownsend,Add alternate_nick as a network-specific property,2,[],https://github.com/irssi/irssi/pull/771,https://github.com/paultownsend,4,https://github.com/irssi/irssi/pull/771#issuecomment-335948281,Reference issue #120 - I've added the requested feature and updated the docs to reflect the new parameter.,"Thanks for the feedback and pointers, I'll have to dig into it a bit more.",True,{}
irssi/irssi,https://github.com/irssi/irssi,771,2017-10-11T20:48:38Z,2017-10-18T10:00:57Z,2019-06-26T23:14:04Z,MERGED,True,21,4,5,https://github.com/paultownsend,Add alternate_nick as a network-specific property,2,[],https://github.com/irssi/irssi/pull/771,https://github.com/paultownsend,5,https://github.com/irssi/irssi/pull/771#issuecomment-336647711,Reference issue #120 - I've added the requested feature and updated the docs to reflect the new parameter.,"I've dug into it a bit more and from what I can see, the alternate_nick setting is specific to IRC as the only place it's referenced is in event_nick_in_use() in src/core/irc/irc-nicklist.c. As such I've made my changes based on the above feedback to the irc-specific code as advised by @LemonBoy.",True,{}
irssi/irssi,https://github.com/irssi/irssi,771,2017-10-11T20:48:38Z,2017-10-18T10:00:57Z,2019-06-26T23:14:04Z,MERGED,True,21,4,5,https://github.com/paultownsend,Add alternate_nick as a network-specific property,2,[],https://github.com/irssi/irssi/pull/771,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/771#issuecomment-337534582,Reference issue #120 - I've added the requested feature and updated the docs to reflect the new parameter.,@paultownsend thanks for your contribution!,True,{}
irssi/irssi,https://github.com/irssi/irssi,772,2017-10-12T11:05:11Z,2017-10-13T09:33:44Z,2019-06-26T23:14:05Z,MERGED,True,48,2,2,https://github.com/trasz,Capsicum,6,[],https://github.com/irssi/irssi/pull/772,https://github.com/trasz,1,https://github.com/irssi/irssi/pull/772,"Small tweaks to Capsicum support, best explained in the individual commits.","Small tweaks to Capsicum support, best explained in the individual commits.",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/rbisewski,1,https://github.com/irssi/irssi/pull/773,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/773#issuecomment-336752440,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.",Chesterton's fence,True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/rbisewski,3,https://github.com/irssi/irssi/pull/773#issuecomment-336759517,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","I was under the impression the main error was the scrolling to the bottom of the screen after attempting to do a ""/lastlog -clear"" command. This does solve the use case when the user is viewing the ""LASTLOG"" section line.
Perhaps a more detailed description of the problem might be shed some light on this bug. Can you or some member of the team offer additional information?",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/773#issuecomment-336873818,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","hi, thanks for your investigation. Unless you have an explanation for why removing that line would fix the issue, I'm afraid I cannot yet believe its simplicity.
Let us take a look at the issue again:
/echo abc
/clear
-> screen is empty
/lastlog abc
-> screen shows Lastlog
/lastlog -clear
-> screen should be empty, but instead it shows the previous lines
I applied your patch but did not observe any change in this regard. I believe this is what you noted yourself when you said it doesn't work if the user is in the ""middle"" of a lastlog.
In fact I don't understand in which case your patch does have an effect, care to elaborate?",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/rbisewski,5,https://github.com/irssi/irssi/pull/773#issuecomment-336893131,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","Thanks for elaborating the issue in more detail :)
Specifically the case I had in mind was:
a) if the user has a very large log (e.g. ""/echo abc"" several dozen times)
b) scroll up a number of lines
c) /lastlog (which prints the log at the very bottom)
d) /lastlog -clear (which removes the log at the bottom)
e) the user's screen is not forced to the bottom
Perhaps not that common a use case.
For clarification... if the user does a ""/lastlog -clear"" did you want the screen to be completely empty, correct? Or should only the lines between ""Lastlog"" and ""End of Lastlog"" be cleared?
In any event, I'll take a closer look at the issue later and see if I can create a proper fix for this.",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/773#issuecomment-336901992,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","I think it's not an easy fix (but that shouldn't stop you from proving me wrong!)
I do not see any difference if I do your step c) and d), with or without your change... maybe I'm stupid, quite possible
the idea is that /lastlog -clear should remove the log
if the screen ""looked empty"" (for example due to /clear), then after /lastlog and /lastlog -clear, it should look empty again
if the screen had 3 lines visible (for example /clear, /echo 1, /echo 2, /echo 3), then after /lastlog and /lastlog -clear, it should have 1-3 visible again",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/773#issuecomment-337150523,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","by the way I think this is completely unrelated to lastlog itself, it's just an easy way to demonstrate the issue. The same issue probably exists with /scrollback levelclear -level XXX and also the trackbar script (if you /mark after /clear, then switch windows, and come back, the window is not empty anymore)",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/rbisewski,8,https://github.com/irssi/irssi/pull/773#issuecomment-338295372,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","Alright, I have what appears to be a solution to the use case mentioned by @ailin-nemui above.
https://github.com/rbisewski/irssi/commit/ba65b6308dbc9a2699e16e9ea2731892828460ba
Some basic testing seems to suggest it is fine, but additional testing could be worthwhile.",True,{}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/rbisewski,9,https://github.com/irssi/irssi/pull/773#issuecomment-338509953,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","@ailin-nemui regarding your comment about the scrollback function, I think you probably bring up a good point. My current thinking is to try to get a functional piece of logic and document why in great detail once I have figured it out. That way, future development of this code ought to be easier :)
Anyway, I did some further testing and it is still a bit glitchy when the lastlog is quite large. So I'll look into that later and hopefully have a decent solution.",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,773,2017-10-15T19:00:50Z,2018-03-20T09:31:30Z,2018-03-20T09:31:30Z,CLOSED,False,30,2,1,https://github.com/rbisewski,Correcting lastlog logic to prevent shifting down after a log clear,2,['WIP'],https://github.com/irssi/irssi/pull/773,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/773#issuecomment-374530910,"As per my comments in this thread... #768
I think this might be a solution to the mentioned issue #745.","we are closing this one for inactivity, but do not hesitate to reopen if you succeed in making progress!",True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/775,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.","This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",True,"{'HEART': ['https://github.com/dequis', 'https://github.com/joereynolds', 'https://github.com/mferstl', 'https://github.com/l2dy']}"
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/775#issuecomment-338643931,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",is this finished already or still wip?,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/775#issuecomment-338698801,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.","I guess it can be reviewed, yeah",True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/775#issuecomment-355435030,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",what's the status here @LemonBoy @dequis,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/775#issuecomment-355531175,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.","It's missing another round of review, an idea about what/how to expose those new fields to the perl side and a use case :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/775#issuecomment-355815552,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",would be nice if you can reply to all open comments @LemonBoy then we can merge this.,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/775#issuecomment-356233891,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.","(and fix the errors caused by -Werror=declaration-after-statement, see travis)",True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/775#issuecomment-358913170,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",@irssi/developers tagging this for merge,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/775#issuecomment-359065869,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.","Hm, haven't looked at this one in a while (silly rebases making it hard to tell which was the last commit i reviewed), I'll look again over the weekend.",True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/LemonBoy,10,https://github.com/irssi/irssi/pull/775#issuecomment-360079126,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.","Done, I've addressed all the review comments. I think the whole PR should be squashed before merging it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/775#issuecomment-362581497,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",@LemonBoy you still need to remove the remove_string method,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/LemonBoy,12,https://github.com/irssi/irssi/pull/775#issuecomment-362616612,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",remove_string has been deprecated since @dequis noted that's part of the public API.,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/dequis,13,https://github.com/irssi/irssi/pull/775#issuecomment-362622959,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",Yeah in #775 (comment) I basically suggested the opposite of what nei suggested in #775 (review) (which i hadn't seen before) so adding that function back meant showing that comment again,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/ailin-nemui,14,https://github.com/irssi/irssi/pull/775#issuecomment-362679112,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",we need to get rid of broken functions,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/dequis,15,https://github.com/irssi/irssi/pull/775#issuecomment-379519780,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",lol we forgot to send CAP LS 302,True,{}
irssi/irssi,https://github.com/irssi/irssi,775,2017-10-21T08:24:41Z,2018-02-05T21:29:36Z,2019-06-26T23:12:45Z,MERGED,True,172,43,6,https://github.com/LemonBoy,CAP 3.2 support,19,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/775,https://github.com/LemonBoy,16,https://github.com/irssi/irssi/pull/775#issuecomment-379567441,"This is a prerequisite for the IRC v3.2 compliance.
Fuck this shit, I've accidentally implemented the whole thing.
This has been tested this with Freenode and Unrealircd and found no problem with the old 3.1 flow and Valgrind looks happy with this.
I've tested the multiline thing using netcat and the strings found on the ircv3 page and the ADD/DEL things are untested as of now (I'd like to talk with a real ircd instead of netcat...)
I'm not sure about the XS part as it kept loading the Irssi.pm module off /usr so feel free to give it a shot.",The plan was to bump the required version once we had some feature requiring to do so.,True,{}
irssi/irssi,https://github.com/irssi/irssi,776,2017-10-22T04:37:22Z,2017-12-08T11:03:14Z,2017-12-08T11:03:14Z,CLOSED,False,301,2,8,https://github.com/horgh,Add tests for mode parsing,2,[],https://github.com/irssi/irssi/pull/776,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/776,"This branches off of the changes in #766. I've moved the test program to a new tests subdirectory, switched to using GLib's testing framework, and changed the tests to be table driven.","This branches off of the changes in #766. I've moved the test program to a new tests subdirectory, switched to using GLib's testing framework, and changed the tests to be table driven.",True,{}
irssi/irssi,https://github.com/irssi/irssi,776,2017-10-22T04:37:22Z,2017-12-08T11:03:14Z,2017-12-08T11:03:14Z,CLOSED,False,301,2,8,https://github.com/horgh,Add tests for mode parsing,2,[],https://github.com/irssi/irssi/pull/776,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/776#issuecomment-338643753,"This branches off of the changes in #766. I've moved the test program to a new tests subdirectory, switched to using GLib's testing framework, and changed the tests to be table driven.",can you cherry pick bc059f2 only in this PR?,True,{}
irssi/irssi,https://github.com/irssi/irssi,776,2017-10-22T04:37:22Z,2017-12-08T11:03:14Z,2017-12-08T11:03:14Z,CLOSED,False,301,2,8,https://github.com/horgh,Add tests for mode parsing,2,[],https://github.com/irssi/irssi/pull/776,https://github.com/horgh,3,https://github.com/irssi/irssi/pull/776#issuecomment-338850791,"This branches off of the changes in #766. I've moved the test program to a new tests subdirectory, switched to using GLib's testing framework, and changed the tests to be table driven.",I did that and edited it so tests would pass. By itself it would fail as it was testing the mode parsing PR. If we merge this first I can rebase that PR on it.,True,{}
irssi/irssi,https://github.com/irssi/irssi,776,2017-10-22T04:37:22Z,2017-12-08T11:03:14Z,2017-12-08T11:03:14Z,CLOSED,False,301,2,8,https://github.com/horgh,Add tests for mode parsing,2,[],https://github.com/irssi/irssi/pull/776,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/776#issuecomment-338907919,"This branches off of the changes in #766. I've moved the test program to a new tests subdirectory, switched to using GLib's testing framework, and changed the tests to be table driven.",it's ok if the tests fail as this means we have a bug....,True,{}
irssi/irssi,https://github.com/irssi/irssi,776,2017-10-22T04:37:22Z,2017-12-08T11:03:14Z,2017-12-08T11:03:14Z,CLOSED,False,301,2,8,https://github.com/horgh,Add tests for mode parsing,2,[],https://github.com/irssi/irssi/pull/776,https://github.com/horgh,5,https://github.com/irssi/irssi/pull/776#issuecomment-339010045,"This branches off of the changes in #766. I've moved the test program to a new tests subdirectory, switched to using GLib's testing framework, and changed the tests to be table driven.","Well if we merged this with it failing, Travis would start failing everywhere! That seems unhelpful. I left TODO comments with what can be updated by the other PR.",True,{}
irssi/irssi,https://github.com/irssi/irssi,777,2017-10-22T05:01:20Z,2017-10-22T08:59:51Z,2019-06-26T23:14:30Z,MERGED,True,4,4,1,https://github.com/horgh,Fix a typo in the readme,1,[],https://github.com/irssi/irssi/pull/777,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/777,"Also uppercase Irssi in a couple places, and escape an argument not
shown due to looking like an HTML tag","Also uppercase Irssi in a couple places, and escape an argument not
shown due to looking like an HTML tag",True,{}
irssi/irssi,https://github.com/irssi/irssi,779,2017-10-24T10:07:37Z,2018-01-08T11:19:46Z,2019-06-26T23:14:00Z,MERGED,True,37,14,1,https://github.com/vague666,Allow selection of what kind of activity targets to ignore v2,4,['auto-merge'],https://github.com/irssi/irssi/pull/779,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/779,"Syntax:
 ::all	 	        Ignore activity in all windows
 ::channels       	Ignore activity in all channels
 ::queries  		Ignore activity in all queries
 ::dccqueries    	Ignore activity in all dcc chats
 #chan|[=]nick  	Ignore activity in named target(channel, query, dcc chat)
 tag/::all	        Ignore all activity on network 'tag'
 tag/::channels 	Ignore activity in all channels on network 'tag'
 tag/::queries	        Ignore activity in all queries on network 'tag'
 tag/::dccqueries	Ignore activity in all dcc chats on network 'tag'
 tag/#chan|[=]nick	Ignore activity in named channel/query/dcc chat on network 'tag'","Syntax:
 ::all	 	        Ignore activity in all windows
 ::channels       	Ignore activity in all channels
 ::queries  		Ignore activity in all queries
 ::dccqueries    	Ignore activity in all dcc chats
 #chan|[=]nick  	Ignore activity in named target(channel, query, dcc chat)
 tag/::all	        Ignore all activity on network 'tag'
 tag/::channels 	Ignore activity in all channels on network 'tag'
 tag/::queries	        Ignore activity in all queries on network 'tag'
 tag/::dccqueries	Ignore activity in all dcc chats on network 'tag'
 tag/#chan|[=]nick	Ignore activity in named channel/query/dcc chat on network 'tag'",True,{}
irssi/irssi,https://github.com/irssi/irssi,779,2017-10-24T10:07:37Z,2018-01-08T11:19:46Z,2019-06-26T23:14:00Z,MERGED,True,37,14,1,https://github.com/vague666,Allow selection of what kind of activity targets to ignore v2,4,['auto-merge'],https://github.com/irssi/irssi/pull/779,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/779#issuecomment-355431382,"Syntax:
 ::all	 	        Ignore activity in all windows
 ::channels       	Ignore activity in all channels
 ::queries  		Ignore activity in all queries
 ::dccqueries    	Ignore activity in all dcc chats
 #chan|[=]nick  	Ignore activity in named target(channel, query, dcc chat)
 tag/::all	        Ignore all activity on network 'tag'
 tag/::channels 	Ignore activity in all channels on network 'tag'
 tag/::queries	        Ignore activity in all queries on network 'tag'
 tag/::dccqueries	Ignore activity in all dcc chats on network 'tag'
 tag/#chan|[=]nick	Ignore activity in named channel/query/dcc chat on network 'tag'",@LemonBoy @dequis is this good to go?,True,{}
irssi/irssi,https://github.com/irssi/irssi,779,2017-10-24T10:07:37Z,2018-01-08T11:19:46Z,2019-06-26T23:14:00Z,MERGED,True,37,14,1,https://github.com/vague666,Allow selection of what kind of activity targets to ignore v2,4,['auto-merge'],https://github.com/irssi/irssi/pull/779,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/779#issuecomment-355531656,"Syntax:
 ::all	 	        Ignore activity in all windows
 ::channels       	Ignore activity in all channels
 ::queries  		Ignore activity in all queries
 ::dccqueries    	Ignore activity in all dcc chats
 #chan|[=]nick  	Ignore activity in named target(channel, query, dcc chat)
 tag/::all	        Ignore all activity on network 'tag'
 tag/::channels 	Ignore activity in all channels on network 'tag'
 tag/::queries	        Ignore activity in all queries on network 'tag'
 tag/::dccqueries	Ignore activity in all dcc chats on network 'tag'
 tag/#chan|[=]nick	Ignore activity in named channel/query/dcc chat on network 'tag'","LGTM, but I think another pair of eyes should have a look before it's merged",True,{}
irssi/irssi,https://github.com/irssi/irssi,779,2017-10-24T10:07:37Z,2018-01-08T11:19:46Z,2019-06-26T23:14:00Z,MERGED,True,37,14,1,https://github.com/vague666,Allow selection of what kind of activity targets to ignore v2,4,['auto-merge'],https://github.com/irssi/irssi/pull/779,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/779#issuecomment-355768066,"Syntax:
 ::all	 	        Ignore activity in all windows
 ::channels       	Ignore activity in all channels
 ::queries  		Ignore activity in all queries
 ::dccqueries    	Ignore activity in all dcc chats
 #chan|[=]nick  	Ignore activity in named target(channel, query, dcc chat)
 tag/::all	        Ignore all activity on network 'tag'
 tag/::channels 	Ignore activity in all channels on network 'tag'
 tag/::queries	        Ignore activity in all queries on network 'tag'
 tag/::dccqueries	Ignore activity in all dcc chats on network 'tag'
 tag/#chan|[=]nick	Ignore activity in named channel/query/dcc chat on network 'tag'",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,780,2017-10-24T17:30:55Z,2018-01-15T15:53:21Z,2019-06-26T23:12:51Z,MERGED,True,134,0,6,https://github.com/josephbisch,Add event_get_params to fe-fuzz,6,['auto-merge'],https://github.com/irssi/irssi/pull/780,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/780,"Probably won't actually find anything. But, this should add a little extra coverage to the fuzzing.","Probably won't actually find anything. But, this should add a little extra coverage to the fuzzing.",True,{}
irssi/irssi,https://github.com/irssi/irssi,780,2017-10-24T17:30:55Z,2018-01-15T15:53:21Z,2019-06-26T23:12:51Z,MERGED,True,134,0,6,https://github.com/josephbisch,Add event_get_params to fe-fuzz,6,['auto-merge'],https://github.com/irssi/irssi/pull/780,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/780#issuecomment-343157701,"Probably won't actually find anything. But, this should add a little extra coverage to the fuzzing.",@josephbisch feel free to merge this when you think it's ready...,True,{}
irssi/irssi,https://github.com/irssi/irssi,781,2017-10-24T20:23:44Z,2017-10-26T14:35:58Z,2019-06-26T23:13:56Z,MERGED,True,1403,303,22,https://github.com/ailin-nemui,remove lynx from autogen and make a separate syncdocs script,6,['auto-merge'],https://github.com/irssi/irssi/pull/781,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/781,"add a script to sync scripts as well
Fixes #81","add a script to sync scripts as well
Fixes #81",True,"{'THUMBS_UP': ['https://github.com/dequis'], 'HOORAY': ['https://github.com/LemonBoy']}"
irssi/irssi,https://github.com/irssi/irssi,783,2017-10-29T17:57:40Z,2018-09-14T10:11:57Z,2019-10-11T20:41:40Z,CLOSED,False,213,208,62,https://github.com/ailin-nemui,use includes from irssi,2,['WIP'],https://github.com/irssi/irssi/pull/783,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/783,for discussion -- replace all includes with absolute ones; here on the IRC module only,for discussion -- replace all includes with absolute ones; here on the IRC module only,True,{}
irssi/irssi,https://github.com/irssi/irssi,783,2017-10-29T17:57:40Z,2018-09-14T10:11:57Z,2019-10-11T20:41:40Z,CLOSED,False,213,208,62,https://github.com/ailin-nemui,use includes from irssi,2,['WIP'],https://github.com/irssi/irssi/pull/783,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/783#issuecomment-347037956,for discussion -- replace all includes with absolute ones; here on the IRC module only,"@irssi/developers we need to discuss if we want to do this. The goal would be to remove the -Is, and ease the transition/split into irssi and irssi-irc package which I am targeting for 1.2",True,{}
irssi/irssi,https://github.com/irssi/irssi,783,2017-10-29T17:57:40Z,2018-09-14T10:11:57Z,2019-10-11T20:41:40Z,CLOSED,False,213,208,62,https://github.com/ailin-nemui,use includes from irssi,2,['WIP'],https://github.com/irssi/irssi/pull/783,https://github.com/ahf,3,https://github.com/irssi/irssi/pull/783#issuecomment-368196817,for discussion -- replace all includes with absolute ones; here on the IRC module only,"I have wanted something like this for a very long time, but with a slightly different directory structure:
I would lift all our ""library"" code into a irssi.git/irssi/ directory and the fe-text code into src/irssi/. This way the includes would be #include <irssi/core/foo.h> without the src.
The problem with doing this is that some plug-ins needs headers in src/fe-text/* :-(",True,{}
irssi/irssi,https://github.com/irssi/irssi,783,2017-10-29T17:57:40Z,2018-09-14T10:11:57Z,2019-10-11T20:41:40Z,CLOSED,False,213,208,62,https://github.com/ailin-nemui,use includes from irssi,2,['WIP'],https://github.com/irssi/irssi/pull/783,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/783#issuecomment-374532669,for discussion -- replace all includes with absolute ones; here on the IRC module only,I don't think we should break the old ../src/.. for no reason other than looking nicer. my suggestion is to wait until you fix and merge otr and then I will continue this in the fashion I have proposed (unless there are more votes against it or who want it structured like @ahf ),True,{}
irssi/irssi,https://github.com/irssi/irssi,783,2017-10-29T17:57:40Z,2018-09-14T10:11:57Z,2019-10-11T20:41:40Z,CLOSED,False,213,208,62,https://github.com/ailin-nemui,use includes from irssi,2,['WIP'],https://github.com/irssi/irssi/pull/783,https://github.com/ahf,5,https://github.com/irssi/irssi/pull/783#issuecomment-374751635,for discussion -- replace all includes with absolute ones; here on the IRC module only,Moving things around is not that much of a radical change and we might as well do it together with this while it is being looked at.,True,{}
irssi/irssi,https://github.com/irssi/irssi,783,2017-10-29T17:57:40Z,2018-09-14T10:11:57Z,2019-10-11T20:41:40Z,CLOSED,False,213,208,62,https://github.com/ailin-nemui,use includes from irssi,2,['WIP'],https://github.com/irssi/irssi/pull/783,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/783#issuecomment-374877209,for discussion -- replace all includes with absolute ones; here on the IRC module only,"we should first get it working without moving, then we can do the moving in a 2nd step, what do you think",True,{}
irssi/irssi,https://github.com/irssi/irssi,783,2017-10-29T17:57:40Z,2018-09-14T10:11:57Z,2019-10-11T20:41:40Z,CLOSED,False,213,208,62,https://github.com/ailin-nemui,use includes from irssi,2,['WIP'],https://github.com/irssi/irssi/pull/783,https://github.com/ahf,7,https://github.com/irssi/irssi/pull/783#issuecomment-374908645,for discussion -- replace all includes with absolute ones; here on the IRC module only,As long as it's done in a single release window that is fine with me.,True,{}
irssi/irssi,https://github.com/irssi/irssi,784,2017-10-30T08:44:09Z,2017-11-30T10:41:20Z,2019-06-26T23:14:20Z,MERGED,True,38,0,1,https://github.com/LemonBoy,Turn the style guide into a clang-format file,3,['auto-merge'],https://github.com/irssi/irssi/pull/784,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/784,"Note that his has been written with clang-format 3.8 in mind since that's what Debian ships, see here for the docs.
I'm not too fond of the tabs + 100 columns combo since my laptop has a tiny screen, but that's not much of a problem.
So, I hereby declare the style-related bikeshed season open!","Note that his has been written with clang-format 3.8 in mind since that's what Debian ships, see here for the docs.
I'm not too fond of the tabs + 100 columns combo since my laptop has a tiny screen, but that's not much of a problem.
So, I hereby declare the style-related bikeshed season open!",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,784,2017-10-30T08:44:09Z,2017-11-30T10:41:20Z,2019-06-26T23:14:20Z,MERGED,True,38,0,1,https://github.com/LemonBoy,Turn the style guide into a clang-format file,3,['auto-merge'],https://github.com/irssi/irssi/pull/784,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/784#issuecomment-343609084,"Note that his has been written with clang-format 3.8 in mind since that's what Debian ships, see here for the docs.
I'm not too fond of the tabs + 100 columns combo since my laptop has a tiny screen, but that's not much of a problem.
So, I hereby declare the style-related bikeshed season open!","I tried clang-format on all files but it does the wrong thing in several cases, for example odd column style initialisation of arrays and structs, enum {\n wrapping cannot be configured and it misdetects some casts like (SIGNAL_FUNC) (func) (removes space)",True,{}
irssi/irssi,https://github.com/irssi/irssi,784,2017-10-30T08:44:09Z,2017-11-30T10:41:20Z,2019-06-26T23:14:20Z,MERGED,True,38,0,1,https://github.com/LemonBoy,Turn the style guide into a clang-format file,3,['auto-merge'],https://github.com/irssi/irssi/pull/784,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/784#issuecomment-343859006,"Note that his has been written with clang-format 3.8 in mind since that's what Debian ships, see here for the docs.
I'm not too fond of the tabs + 100 columns combo since my laptop has a tiny screen, but that's not much of a problem.
So, I hereby declare the style-related bikeshed season open!","I suggest we merge this, but do not auto-run clang-format. It does screw up several structures like struct initializers and enum lists. We could selectively run it and revert those erroneous changes, and ponder whether we want to litter the code with /* clang-format off */ at those places",True,{}
irssi/irssi,https://github.com/irssi/irssi,784,2017-10-30T08:44:09Z,2017-11-30T10:41:20Z,2019-06-26T23:14:20Z,MERGED,True,38,0,1,https://github.com/LemonBoy,Turn the style guide into a clang-format file,3,['auto-merge'],https://github.com/irssi/irssi/pull/784,https://github.com/LemonBoy,4,https://github.com/irssi/irssi/pull/784#issuecomment-344204434,"Note that his has been written with clang-format 3.8 in mind since that's what Debian ships, see here for the docs.
I'm not too fond of the tabs + 100 columns combo since my laptop has a tiny screen, but that's not much of a problem.
So, I hereby declare the style-related bikeshed season open!","It does screw up several structures like struct initializers and enum lists. We could selectively run it and revert those erroneous changes

We should double-check if those problems go away using a newer clang-format or more options",True,{}
irssi/irssi,https://github.com/irssi/irssi,784,2017-10-30T08:44:09Z,2017-11-30T10:41:20Z,2019-06-26T23:14:20Z,MERGED,True,38,0,1,https://github.com/LemonBoy,Turn the style guide into a clang-format file,3,['auto-merge'],https://github.com/irssi/irssi/pull/784,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/784#issuecomment-344959390,"Note that his has been written with clang-format 3.8 in mind since that's what Debian ships, see here for the docs.
I'm not too fond of the tabs + 100 columns combo since my laptop has a tiny screen, but that's not much of a problem.
So, I hereby declare the style-related bikeshed season open!","outstanding issues and changes that would happen:
- == original irssi
+ == clang-format
a. spaces around boolean fields:
-unsigned int chanop:1;
+unsigned int chanop : 1;
b. collapsation of #define functions:
-#define alias_runstack_push(alias) \
-       alias_runstack = g_slist_append(alias_runstack, alias)
+#define alias_runstack_push(alias) alias_runstack = g_slist_append(alias_runstack, alias)
c. odd folding of enum types:
-enum {
-       CMDERR_OPTION_UNKNOWN = -3,
+enum { CMDERR_OPTION_UNKNOWN = -3,
c.2. alternative here could be to use break on enum, which would look like this:
-    enum {
-           CMDERR_OPTION_UNKNOWN = -3,
+    enum
+    {
+          CMDERR_OPTION_UNKNOWN = -3,
(I would prefer the original style...)
d. unindent of preprocessor codes:
 #ifdef HAVE_SYS_RESOURCE_H
-#  include <sys/resource.h>
+#include <sys/resource.h>
 #endif
e. odd initializer wrapping:
-       static GOptionEntry options[] = {
-               { ""config"", 0, 0, G_OPTION_ARG_STRING, &irssi_config_file, ""Configuration file location (~/.irssi/config)"", ""PATH"" },
-               { ""home"", 0, 0, G_OPTION_ARG_STRING, &irssi_dir, ""Irssi home dir location (~/.irssi)"", ""PATH"" },
-               { NULL }
-       };
+       static GOptionEntry options[] = { { ""config"", 0, 0, G_OPTION_ARG_STRING, &irssi_config_file,
+                                           ""Configuration file location (~/.irssi/config)"", ""PATH"" },
+                                         { ""home"", 0, 0, G_OPTION_ARG_STRING, &irssi_dir,
+                                           ""Irssi home dir location (~/.irssi)"", ""PATH"" },
+                                         { NULL } };
f. non-helpful column wrapping of initializers:
-static const char *levels[] = {
-       ""CRAP"",
...
-       ""HILIGHTS"",
-       ""NOHILIGHT"",
-       ""NO_ACT"",
-       NULL
-};
+static const char *levels[] = { ""CRAP"",         ""MSGS"",     ""PUBLICS"", ""NOTICES"",       ""SNOTES"",
+                               ""CTCPS"",        ""ACTIONS"",  ""JOINS"",   ""PARTS"",         ""QUITS"",
+                               ""KICKS"",        ""MODES"",    ""TOPICS"",  ""WALLOPS"",       ""INVITES"",
+                               ""NICKS"",        ""DCC"",      ""DCCMSGS"", ""CLIENTNOTICES"", ""CLIENTCRAP"",
+                               ""CLIENTERRORS"", ""HILIGHTS"",
+                               ""NOHILIGHT"",    ""NO_ACT"",   NULL };
g. non-helpful un-wrapping of initializers:
-int mirc_colors[] = { 15, 0, 1, 2, 12, 4, 5, 6, 14, 10, 3, 11, 9, 13, 8, 7,
-        /* 16-27 */  52,  94, 100,  58,  22,  29,  23,  24,  17,  54,  53,  89,
...
+int mirc_colors[] = { 15,
+                     0,
+                     1,
+                     2,
...
+                     /* 16-27 */ 52,
+                     94,
+                     100,
...
h. non-helpful re-wrapping of initializers:
 int term_color256map[] = {
-        0, 4, 2, 6, 1, 5, 3, 7, 8,12,10,14, 9,13,11,15,
-        0, 0, 1, 1, 1, 1, 0, 0, 3, 1, 1, 9, 2, 2, 3, 3, 3, 3,
...
+       0, 4, 2, 6,  1,  5,  3, 7, 8,  12, 10, 14, 9,  13, 11, 15, 0, 0, 1,  1,  1,  1,  0, 0,  3,  1,
+       1, 9, 2, 2,  3,  3,  3, 3, 2,  2,  3,  3,  3,  3,  2,  2,  3, 3, 3,  11, 10, 10, 3, 3,  11, 11,
...
j. its own opinion about empty for loop parts:
-       for (ptr = str; ; str++) {
+       for (ptr = str;; str++) {
altogether, committing the clang-format changes would touch  14000 lines in 285 files, of which are 5000 lines of incorrect tab/space indentation fixes",True,{}
irssi/irssi,https://github.com/irssi/irssi,784,2017-10-30T08:44:09Z,2017-11-30T10:41:20Z,2019-06-26T23:14:20Z,MERGED,True,38,0,1,https://github.com/LemonBoy,Turn the style guide into a clang-format file,3,['auto-merge'],https://github.com/irssi/irssi/pull/784,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/784#issuecomment-347113322,"Note that his has been written with clang-format 3.8 in mind since that's what Debian ships, see here for the docs.
I'm not too fond of the tabs + 100 columns combo since my laptop has a tiny screen, but that's not much of a problem.
So, I hereby declare the style-related bikeshed season open!",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,786,2017-11-01T14:51:41Z,2017-11-15T15:28:22Z,2019-06-26T23:13:54Z,MERGED,True,93,28,10,https://github.com/ailin-nemui,show initial nick and name on first start,3,['auto-merge'],https://github.com/irssi/irssi/pull/786,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/786,fixes #785,fixes #785,True,{}
irssi/irssi,https://github.com/irssi/irssi,786,2017-11-01T14:51:41Z,2017-11-15T15:28:22Z,2019-06-26T23:13:54Z,MERGED,True,93,28,10,https://github.com/ailin-nemui,show initial nick and name on first start,3,['auto-merge'],https://github.com/irssi/irssi/pull/786,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/786#issuecomment-341133598,fixes #785,"I really like this idea, also the part of moving banners to formats",True,{}
irssi/irssi,https://github.com/irssi/irssi,786,2017-11-01T14:51:41Z,2017-11-15T15:28:22Z,2019-06-26T23:13:54Z,MERGED,True,93,28,10,https://github.com/ailin-nemui,show initial nick and name on first start,3,['auto-merge'],https://github.com/irssi/irssi/pull/786,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/786#issuecomment-343597499,fixes #785,thanks for all reviews,True,{}
irssi/irssi,https://github.com/irssi/irssi,786,2017-11-01T14:51:41Z,2017-11-15T15:28:22Z,2019-06-26T23:13:54Z,MERGED,True,93,28,10,https://github.com/ailin-nemui,show initial nick and name on first start,3,['auto-merge'],https://github.com/irssi/irssi/pull/786,https://github.com/tomasi-o,4,https://github.com/irssi/irssi/pull/786#issuecomment-432422011,fixes #785,Is this already fixed in irssi 1.1.1 (20180213 1256)?,True,{}
irssi/irssi,https://github.com/irssi/irssi,786,2017-11-01T14:51:41Z,2017-11-15T15:28:22Z,2019-06-26T23:13:54Z,MERGED,True,93,28,10,https://github.com/ailin-nemui,show initial nick and name on first start,3,['auto-merge'],https://github.com/irssi/irssi/pull/786,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/786#issuecomment-432531323,fixes #785,yes this is in Irssi 1.1.0 and later,True,{}
irssi/irssi,https://github.com/irssi/irssi,788,2017-11-03T15:37:54Z,2017-11-14T07:50:06Z,2019-06-27T09:43:31Z,MERGED,True,5,2,1,https://github.com/LemonBoy,Keep a copy of the strings coming from the config,1,['auto-merge'],https://github.com/irssi/irssi/pull/788,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/788,"Fixes #787, checked with valgrind.","Fixes #787, checked with valgrind.",True,{}
irssi/irssi,https://github.com/irssi/irssi,788,2017-11-03T15:37:54Z,2017-11-14T07:50:06Z,2019-06-27T09:43:31Z,MERGED,True,5,2,1,https://github.com/LemonBoy,Keep a copy of the strings coming from the config,1,['auto-merge'],https://github.com/irssi/irssi/pull/788,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/788#issuecomment-343286284,"Fixes #787, checked with valgrind.",The commit message made this sound like a much bigger thing,True,{}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/trasz,1,https://github.com/irssi/irssi/pull/789,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org",True,"{'THUMBS_DOWN': ['https://github.com/ailin-nemui', 'https://github.com/bmeh']}"
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/789#issuecomment-342446311,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org",opinions @dequis ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/789#issuecomment-343285665,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","Idk, changing defaults isn't something to be done lightly. Users thay don't change it get the new value when upgrading from earlier versions and get a change of behavior, potentially breaking.",True,{}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/789#issuecomment-343290198,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","unlike the real irclogs, the away.log is more of a transient file so I think that's part of the reason being inside the cache folder by default",True,{}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/trasz,5,https://github.com/irssi/irssi/pull/789#issuecomment-343892642,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","I agree this is not to be done lightly.  However, I think the potential for breaking people's setups is fairly small - precisely because it's transient.
On the other hand - it's not in the cache folder, it's in the ~/.irssi/, which I'd consider to be a configuration folder: it's where the config lives, as well as various scripts.  Personally I'd expect that directory to change relatively infrequently, as opposed to the ~/irclogs/, which change all the time.",True,{}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/789#issuecomment-347037314,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","I am voting against the change. If irssi were following XDG, I would move the away.log into the cache dir. It doesn't feel right to be part of the to-be-archived logs folder",True,{'THUMBS_UP': ['https://github.com/bmeh']}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/dkg,7,https://github.com/irssi/irssi/pull/789#issuecomment-356658047,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","I think if you're moving away.log, it should be moved to an ephemeral filesystem wherever possible, rather than putting it in the user's homedir.  See also #810 and #811 for improvements in actual ephemerality of away.log.",True,{}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/anarcat,8,https://github.com/irssi/irssi/pull/789#issuecomment-356668979,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","shouldn't capsicum sandboxing follow irssi configs, and not the other way around?
logs in ~/irclogs have always been stranged to me in the first place as well...",True,{'THUMBS_UP': ['https://github.com/bmeh']}
irssi/irssi,https://github.com/irssi/irssi,789,2017-11-04T15:31:48Z,2018-01-26T10:28:24Z,2018-02-16T13:15:23Z,CLOSED,False,4,9,4,https://github.com/trasz,Change the default awaylog_file to ~/irclogs/away.log.,1,[],https://github.com/irssi/irssi/pull/789,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/789#issuecomment-366232058,"The new location is more compatible with Capsicum sandboxing,
and also seems a bit more logical - it is, after all, a log file.
Signed-off-by: Edward Tomasz Napierala trasz@FreeBSD.org","based on the recent discussions surrounding the awaylog file, I have an idea which could work: conditionally set the default based on existence of the away.log file. then we could ""safely"" move it. thoughts?",True,{}
irssi/irssi,https://github.com/irssi/irssi,790,2017-11-15T15:35:56Z,2017-11-26T14:18:44Z,2019-06-26T23:13:53Z,MERGED,True,13,17,1,https://github.com/ailin-nemui,"reset colour at comma, like mIRC",2,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/790,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/790,Fixes #742 and fixes #740,Fixes #742 and fixes #740,True,{}
irssi/irssi,https://github.com/irssi/irssi,790,2017-11-15T15:35:56Z,2017-11-26T14:18:44Z,2019-06-26T23:13:53Z,MERGED,True,13,17,1,https://github.com/ailin-nemui,"reset colour at comma, like mIRC",2,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/790,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/790#issuecomment-345692792,Fixes #742 and fixes #740,"thanks for review, removed that check",True,{}
irssi/irssi,https://github.com/irssi/irssi,791,2017-11-18T19:12:17Z,2017-11-30T13:13:12Z,2017-11-30T13:13:12Z,CLOSED,False,4,3,1,None,Suggestion for code style fix.,1,[],https://github.com/irssi/irssi/pull/791,None,1,https://github.com/irssi/irssi/pull/791,"Adding brackets to make the relation between else and if statements explicitly. In a case in which indention changes, it is still clear that an specific else belongs to a specific if statement.","Adding brackets to make the relation between else and if statements explicitly. In a case in which indention changes, it is still clear that an specific else belongs to a specific if statement.",True,{}
irssi/irssi,https://github.com/irssi/irssi,791,2017-11-18T19:12:17Z,2017-11-30T13:13:12Z,2017-11-30T13:13:12Z,CLOSED,False,4,3,1,None,Suggestion for code style fix.,1,[],https://github.com/irssi/irssi/pull/791,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/791#issuecomment-345525364,"Adding brackets to make the relation between else and if statements explicitly. In a case in which indention changes, it is still clear that an specific else belongs to a specific if statement.",Are you the same guy as #347?,True,{}
irssi/irssi,https://github.com/irssi/irssi,791,2017-11-18T19:12:17Z,2017-11-30T13:13:12Z,2017-11-30T13:13:12Z,CLOSED,False,4,3,1,None,Suggestion for code style fix.,1,[],https://github.com/irssi/irssi/pull/791,None,3,https://github.com/irssi/irssi/pull/791#issuecomment-345530860,"Adding brackets to make the relation between else and if statements explicitly. In a case in which indention changes, it is still clear that an specific else belongs to a specific if statement.","Hi @dequi, yes, that's me. Please let me this kind of issue makes sense for the project. Thanks",True,{}
irssi/irssi,https://github.com/irssi/irssi,791,2017-11-18T19:12:17Z,2017-11-30T13:13:12Z,2017-11-30T13:13:12Z,CLOSED,False,4,3,1,None,Suggestion for code style fix.,1,[],https://github.com/irssi/irssi/pull/791,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/791#issuecomment-348184192,"Adding brackets to make the relation between else and if statements explicitly. In a case in which indention changes, it is still clear that an specific else belongs to a specific if statement.",We've decided we'll handle all style-related changes through the specification set in #784 instead,True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/793,Fixes #776,Fixes #776,True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/793#issuecomment-347037620,Fixes #776,"@irssi/developers I'm now testing the ""add auto-merge label and ping comment"" workflow (see chat for the discussion)",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/793#issuecomment-347038179,Fixes #776,"this PR which was created by @horgh will add a base test layer to irssi, which could hopefully ease the future addition of tests. See #767 for the relevant discussion. As you can see, there is currently 1 failing test, which might be fixed with #766
Due to our use of recursive make, we have one test report per directory sadly, instead of a big one. But I guess it would be fine for now",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/horgh,4,https://github.com/irssi/irssi/pull/793#issuecomment-347406940,Fixes #776,"Yeah, it looks like the first test case that fails is one that would be fixed by the other PR. I think the test case after it would fail too, but it's not being run. The problem is a "":"" in it is not being stripped.",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/horgh,5,https://github.com/irssi/irssi/pull/793#issuecomment-347415767,Fixes #776,"This looks reasonable. Do we need the added files under util?
An improvement might be to write out names of test cases, rather than numbers. It would make seeing which failed a little easier. I realize in my original version it was probably not easy too!
I take it you would like to allow failing tests in PRs/master if that shows a bug? I'd usually expect tests to always be passing in master or before merging, even if there is a bug. Basically it would be nice if we could say that master's build is always passing.
Then for example with PRs we could say that all tests must pass in order to be merged. Otherwise it seems like there would be a risk that tests would be failing and we could assume it's for one reason but it's because of a new bug. Take what we have here for example: They're failing but it's not clear unless you happen to know about that other bug. And maybe we're right they would pass if we merged it, but it's not guaranteed.",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/793#issuecomment-347484292,Fixes #776,"The utils are not strictly necessary, however they are the ones references in automake/TAP in this Stackoverflow post: https://stackoverflow.com/questions/19958861/how-to-properly-set-up-glib-testing-framework-with-autotools
The main advantage is, as far as I can tell, that they will output more details. Instead of (plain program, automake tests only)
FAIL: test-irc
============================================================================
Testsuite summary for irc/core
============================================================================
# TOTAL: 1
# PASS:  0
# SKIP:  0
# XFAIL: 0
# FAIL:  1
# XPASS: 0
# ERROR: 0

we get the full output visible:
PASS: test-irc 1 /test/event_get_params/0
PASS: test-irc 2 /test/event_get_params/1
PASS: test-irc 3 /test/event_get_params/2
PASS: test-irc 4 /test/event_get_params/3
PASS: test-irc 5 /test/event_get_params/4
PASS: test-irc 6 /test/event_get_params/5
PASS: test-irc 7 /test/event_get_params/6
PASS: test-irc 8 /test/event_get_params/7
PASS: test-irc 9 /test/event_get_params/8
FAIL: test-irc 10 /test/event_get_params/9
FAIL: test-irc 11 /test/event_get_params/10
FAIL: test-irc 12 /test/event_get_params/11
PASS: test-irc 13 /test/event_get_param/0
PASS: test-irc 14 /test/event_get_param/1
PASS: test-irc 15 /test/event_get_param/2
PASS: test-irc 16 /test/event_get_param/3
PASS: test-irc 17 /test/event_get_param/4
PASS: test-irc 18 /test/event_get_param/5
PASS: test-irc 19 /test/event_get_param/6
PASS: test-irc 20 /test/event_get_param/7
PASS: test-irc 21 /test/event_get_param/8
PASS: test-irc 22 /test/event_get_param/9
ERROR: test-irc - exited with status 1
============================================================================
Testsuite summary for irc/core
============================================================================
# TOTAL: 23
# PASS:  19
# SKIP:  0
# XFAIL: 0
# FAIL:  3
# XPASS: 0
# ERROR: 1",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/793#issuecomment-347484748,Fixes #776,"unfortunately, as far as I can tell, there is no way to to have 2 badges: compile|passing tests|some fail",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/793#issuecomment-347491234,Fixes #776,"if there are bugs, it's much better to have failing tests than to have no tests. however, the build (compile) should not fail on master. and new commits should ideally not make existing (already passed) tests fail. if it is easier to add tests of broken behaviour, we can use some ideas from test driven development with the anticipation of fixing all tests eventually",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/horgh,9,https://github.com/irssi/irssi/pull/793#issuecomment-347561484,Fixes #776,"Oh yeah, having that output is way better!
That's sort of what I was getting at with the badges idea. But what you say makes sense. We can fix the bugs!",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/793#issuecomment-347625333,Fixes #776,"you can sort of spot it in the Travis detail view, four green is good compile, the red one are the tests. would be nice to be able to differentiate but idk how",True,{}
irssi/irssi,https://github.com/irssi/irssi,793,2017-11-26T20:24:34Z,2017-12-08T11:03:14Z,2019-06-26T23:14:02Z,MERGED,True,1192,7,16,https://github.com/ailin-nemui,Add tests for mode parsing,8,['auto-merge'],https://github.com/irssi/irssi/pull/793,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/793#issuecomment-347864184,Fixes #776,"I found one tunable which is allow_failures in travis. not sure about it, now it will basically ignore the test result and mark our build as green as before",True,{}
irssi/irssi,https://github.com/irssi/irssi,795,2017-11-29T14:53:28Z,2017-11-30T13:33:51Z,2019-06-26T23:14:19Z,MERGED,True,36,33,9,https://github.com/ailin-nemui,check for declaration-after-statement on travis,3,['auto-merge'],https://github.com/irssi/irssi/pull/795,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/795,"this will make variable declarations after statements illegal. most of the code follows this practice. in the past, this was required to be able to compile on BeOS iirc","this will make variable declarations after statements illegal. most of the code follows this practice. in the past, this was required to be able to compile on BeOS iirc",True,{}
irssi/irssi,https://github.com/irssi/irssi,799,2017-12-15T13:37:17Z,2017-12-19T10:39:47Z,2017-12-19T10:39:47Z,CLOSED,False,2,2,1,None,[Docs] README.md - fixing minor issues with rethorics,1,[],https://github.com/irssi/irssi/pull/799,None,1,https://github.com/irssi/irssi/pull/799,"[Docs] README.md - fixing minor issues with rethorics
this PR does basically aim at:

making minor tweaks to spelling


main motivation behind such:

improving overall document accessebility","[Docs] README.md - fixing minor issues with rethorics
this PR does basically aim at:

making minor tweaks to spelling


main motivation behind such:

improving overall document accessebility",True,{}
irssi/irssi,https://github.com/irssi/irssi,799,2017-12-15T13:37:17Z,2017-12-19T10:39:47Z,2017-12-19T10:39:47Z,CLOSED,False,2,2,1,None,[Docs] README.md - fixing minor issues with rethorics,1,[],https://github.com/irssi/irssi/pull/799,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/799#issuecomment-352013667,"[Docs] README.md - fixing minor issues with rethorics
this PR does basically aim at:

making minor tweaks to spelling


main motivation behind such:

improving overall document accessebility",your pr is making the English incorrect,True,{}
irssi/irssi,https://github.com/irssi/irssi,802,2018-01-04T15:44:27Z,2018-03-20T09:30:40Z,2019-06-26T23:13:06Z,MERGED,True,218,1,4,https://github.com/ailin-nemui,Test for segfault on disconnect during signal processing,5,[],https://github.com/irssi/irssi/pull/802,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/802,Tests #796,Tests #796,True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/803,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.","Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.",True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/803#issuecomment-355414514,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.",this PR needs to be checked for any adverse side effects that could be caused by adding the additional signal and moving the work,True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/horgh,3,https://github.com/irssi/irssi/pull/803#issuecomment-355853697,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.","If we didn't want to change/add signals, we could alternatively return if mserver == NULL in flood.c I think. Is it important to run flood_newmsg() if the server is disconnected?",True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/803#issuecomment-355854349,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.","yes you're probably right
lthough I think trying to improve the signals and refcounting is a good overall direction.
(thanks to your test framework!) try removing https://github.com/irssi/irssi/pull/802/files#diff-3ef538dbbcaf339ceb86081bf85cd41fR118 the fatality increase here, I believe all hash table warnings are bugs. (but maybe they would be fixed by returning from flood_newmsg, I didn't check)",True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/horgh,5,https://github.com/irssi/irssi/pull/803#issuecomment-355855287,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.","Ah yeah. If I try returning early there instead of the fix in this branch, there are a bunch of hash_table_lookup assertion failures and a broken looking message in the status at the time of disconnect:
21:38 -!- Irssi: critical g_hash_table_lookup: assertion 'hash_table != NULL' failed
21:38 -!- Irssi: critical g_hash_table_lookup: assertion 'hash_table != NULL' failed
21:38 < :#test> t
21:38 -!- Irssi: critical g_hash_table_lookup: assertion 'hash_table != NULL' failed
21:38 -!- Irssi: critical g_hash_table_lookup: assertion 'hash_table != NULL' failed

So the fix here is better!",True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/803#issuecomment-363227922,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.",@irssi/developers tagging this for merge unless you have a better suggestion or would prefer to discuss further,True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/803#issuecomment-363245388,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.","I haven't looked at this one at all and it sounds fiddlier than average, give me some time.",True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/803#issuecomment-371266851,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.",@dequis any updates?,True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/803#issuecomment-373295039,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.",@irssi/developers @dequis if you don't want to check this any more I suggest we merge it,True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/803#issuecomment-374107114,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.","I poked this for a while and failed to break it, so, yay? Not that i'm particularly inspired today.
Should this be mentioned in docs/signals.txt?",True,{}
irssi/irssi,https://github.com/irssi/irssi,803,2018-01-04T22:06:54Z,2018-03-20T09:30:01Z,2019-06-26T23:13:05Z,MERGED,True,38,27,5,https://github.com/ailin-nemui,Postpone server cleanup until after unref,3,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/803,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/803#issuecomment-374530461,"Add a new signal, server destroyed, that is supposed to run the clean up
tasks of server disconnected. This is so that some structures will stay
around longer.",I think it's better to leave undocumented for now,True,{}
irssi/irssi,https://github.com/irssi/irssi,804,2018-01-04T23:39:55Z,2018-01-07T10:23:43Z,2019-06-26T23:14:17Z,MERGED,True,15,4,1,https://github.com/ailin-nemui,handle an already used nick different from the one we send,2,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/804,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/804,"continuation of fixes #219
I think this should work","continuation of fixes #219
I think this should work",True,{}
irssi/irssi,https://github.com/irssi/irssi,804,2018-01-04T23:39:55Z,2018-01-07T10:23:43Z,2019-06-26T23:14:17Z,MERGED,True,15,4,1,https://github.com/ailin-nemui,handle an already used nick different from the one we send,2,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/804,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/804#issuecomment-355766585,"continuation of fixes #219
I think this should work",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,805,2018-01-05T22:16:44Z,2018-01-07T10:24:01Z,2019-06-26T23:14:17Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix /exec -o for blank lines,1,['auto-merge'],https://github.com/irssi/irssi/pull/805,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/805,"since it is not allowed to send nothing, instead of spamming the status window
with error, send "" "" instead
Fixes FS#902
Patch by @dj1yfk","since it is not allowed to send nothing, instead of spamming the status window
with error, send "" "" instead
Fixes FS#902
Patch by @dj1yfk",True,{}
irssi/irssi,https://github.com/irssi/irssi,805,2018-01-05T22:16:44Z,2018-01-07T10:24:01Z,2019-06-26T23:14:17Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix /exec -o for blank lines,1,['auto-merge'],https://github.com/irssi/irssi/pull/805,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/805#issuecomment-355766560,"since it is not allowed to send nothing, instead of spamming the status window
with error, send "" "" instead
Fixes FS#902
Patch by @dj1yfk",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,806,2018-01-08T12:34:23Z,2018-01-08T13:33:13Z,2019-06-26T23:13:27Z,MERGED,True,4,0,2,https://github.com/ailin-nemui,only use nonfatal assertions for GLib that actually supports it,1,[],https://github.com/irssi/irssi/pull/806,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/806,Fixes tests on Debian 7 and RHEL 6,Fixes tests on Debian 7 and RHEL 6,True,{}
irssi/irssi,https://github.com/irssi/irssi,807,2018-01-08T12:47:45Z,2018-01-08T13:33:40Z,2019-06-26T23:12:32Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix format_real_length expected test result,1,[],https://github.com/irssi/irssi/pull/807,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/807,This change from 0 -> 4 was introduced by #697 and is thus expected,This change from 0 -> 4 was introduced by #697 and is thus expected,True,{}
irssi/irssi,https://github.com/irssi/irssi,808,2018-01-09T22:17:41Z,2018-01-10T11:15:24Z,2019-06-26T23:14:01Z,MERGED,True,1,0,1,https://github.com/vague666,Add perl access to hidden_level in TEXT_BUFFER_VIEW_REC ,2,['auto-merge'],https://github.com/irssi/irssi/pull/808,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/808,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,808,2018-01-09T22:17:41Z,2018-01-10T11:15:24Z,2019-06-26T23:14:01Z,MERGED,True,1,0,1,https://github.com/vague666,Add perl access to hidden_level in TEXT_BUFFER_VIEW_REC ,2,['auto-merge'],https://github.com/irssi/irssi/pull/808,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/808#issuecomment-356558410,,lgtm,True,{}
irssi/irssi,https://github.com/irssi/irssi,808,2018-01-09T22:17:41Z,2018-01-10T11:15:24Z,2019-06-26T23:14:01Z,MERGED,True,1,0,1,https://github.com/vague666,Add perl access to hidden_level in TEXT_BUFFER_VIEW_REC ,2,['auto-merge'],https://github.com/irssi/irssi/pull/808,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/808#issuecomment-356559638,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/812,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809","this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809",True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/812#issuecomment-356714439,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809",Yeah sounds like the sanest thing to do. Is this going in 1.0.x and 1.1.0?,True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/812#issuecomment-356714874,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809","Oh, uh, this needs review too as it's a partial revert so that could bring problems of its own too.",True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/812#issuecomment-356715271,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809",I would include it in a potential 1.0.7 and ideally in 1.1.0. we probably won't be able to land a complete fix for this in either 1.0 or 1.1 because too much rewrite,True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/812#issuecomment-357137031,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809","So, relevant commits:

#465 ""Some small adjustments to the netsplit code""

ed06e43
8f5e200 ""Avoid entering an endless loop while traversing the channel list""
c0f66c9 ""how did we allow ourselves to get this commit message merged""


#577 ""Minor corrections to the netsplit code""

7574bed
5f0e755 ""Don't shadow the 'channel' variable when printing the netjoins.""



Cherry picked the last two on top of the other three and made this branch for easy diffing of the whole thing:
dequis/irssi@lemon-netsplit-base...dequis:cherry-picked-lemon-netsplit-stuff
Other commits touching fe-netjoin.c or fe-netsplit.c afterwards:

98ead50 ""Prevent some potential null-pointer deferences"" (GL!9)
7c09b72 ""fe-netjoin: remove irc servers on ""server disconnected"" signal"" (GL#7, GL!10)

Both look like crash fixes so probably not relevant.",True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/812#issuecomment-357140659,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809","Things that aren't getting reverted from fe-netsplit:

The old sig_print_starting didn't look at dest, and iterated over all servers.
The server_ischannel(dest->server, dest->target)

Things that aren't getting reverted from fe-netjoin:

The cleaner iteration style, with g_slist_next + g_slist_delete_link
Same stuff as above

Mostly harmless stuff. Any particular reason to leave the server_ischannel in? Going back to iterating over all servers might be the safest option too, but that's probably too much and won't change things meaningfully. On the other hand leaving these things in gives us some bits of data, so,
I can't see this making things worse, at least.",True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/812#issuecomment-357153145,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809","thanks for the review / research, maybe we should just completely revert? at least by checking the server 8 hope maybe we can have the trackbar<>netsplit printing fixed, but I couldn't verify that",True,{}
irssi/irssi,https://github.com/irssi/irssi,812,2018-01-10T19:08:36Z,2018-01-14T19:51:26Z,2019-06-27T09:43:29Z,MERGED,True,4,10,2,https://github.com/ailin-nemui,revert netsplit print optimisation,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/812,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/812#issuecomment-357362458,"this reverts part of #465
unfortunately we need to further refine the initial patch

when filtering by channel, the whole split is cleaned up nevertheless
something similar happens for the netjoins
furthermore, we cannot wait only for PUBLIC msgs, j/p/q are equivalently relevant for temporal integrity

this is a temporary band aid until we can properly implement #465 and f.x #420. the basic idea presented therein seems sound
this is intended to fix #809",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,813,2018-01-15T17:00:37Z,2018-01-15T17:26:49Z,2019-06-26T23:12:52Z,MERGED,True,117,1,6,https://github.com/josephbisch,Add theme_load to fe-fuzz,1,['auto-merge'],https://github.com/irssi/irssi/pull/813,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/813,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,814,2018-01-16T06:34:20Z,2018-01-17T10:05:01Z,2019-06-26T23:13:19Z,MERGED,True,8,8,7,https://github.com/l2dy,Update Irssi website URLs,1,[],https://github.com/irssi/irssi/pull/814,https://github.com/l2dy,1,https://github.com/irssi/irssi/pull/814,"Avoid redirects and use https.
$ curl -I 'http://www.irssi.org'
HTTP/1.1 302 Moved Temporarily
[...]
Location: https://irssi.org/","Avoid redirects and use https.
$ curl -I 'http://www.irssi.org'
HTTP/1.1 302 Moved Temporarily
[...]
Location: https://irssi.org/",True,{}
irssi/irssi,https://github.com/irssi/irssi,814,2018-01-16T06:34:20Z,2018-01-17T10:05:01Z,2019-06-26T23:13:19Z,MERGED,True,8,8,7,https://github.com/l2dy,Update Irssi website URLs,1,[],https://github.com/irssi/irssi/pull/814,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/814#issuecomment-357990013,"Avoid redirects and use https.
$ curl -I 'http://www.irssi.org'
HTTP/1.1 302 Moved Temporarily
[...]
Location: https://irssi.org/",The scripts are synced from https://github.com/irssi/scripts.irssi.org - those local changes will be lost. Revert that part.,True,{}
irssi/irssi,https://github.com/irssi/irssi,814,2018-01-16T06:34:20Z,2018-01-17T10:05:01Z,2019-06-26T23:13:19Z,MERGED,True,8,8,7,https://github.com/l2dy,Update Irssi website URLs,1,[],https://github.com/irssi/irssi/pull/814,https://github.com/l2dy,3,https://github.com/irssi/irssi/pull/814#issuecomment-357995791,"Avoid redirects and use https.
$ curl -I 'http://www.irssi.org'
HTTP/1.1 302 Moved Temporarily
[...]
Location: https://irssi.org/",@dequis Done.,True,{}
irssi/irssi,https://github.com/irssi/irssi,816,2018-01-16T10:06:24Z,2018-01-16T18:12:01Z,2019-06-26T23:13:44Z,MERGED,True,2,4,2,https://github.com/ailin-nemui,fix test builds on some platforms,1,['auto-merge'],https://github.com/irssi/irssi/pull/816,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/816,fixes #815,fixes #815,True,{}
irssi/irssi,https://github.com/irssi/irssi,816,2018-01-16T10:06:24Z,2018-01-16T18:12:01Z,2019-06-26T23:13:44Z,MERGED,True,2,4,2,https://github.com/ailin-nemui,fix test builds on some platforms,1,['auto-merge'],https://github.com/irssi/irssi/pull/816,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/816#issuecomment-357912275,fixes #815,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,818,2018-01-18T11:04:43Z,2018-02-02T13:09:10Z,2019-06-26T23:13:45Z,MERGED,True,19,1,1,https://github.com/ailin-nemui,add backwards compatible code for running tap tests,1,['auto-merge'],https://github.com/irssi/irssi/pull/818,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/818,fixes make check on Debian 7.0 and possibly other systems with old GLib,fixes make check on Debian 7.0 and possibly other systems with old GLib,True,{}
irssi/irssi,https://github.com/irssi/irssi,818,2018-01-18T11:04:43Z,2018-02-02T13:09:10Z,2019-06-26T23:13:45Z,MERGED,True,19,1,1,https://github.com/ailin-nemui,add backwards compatible code for running tap tests,1,['auto-merge'],https://github.com/irssi/irssi/pull/818,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/818#issuecomment-358614900,fixes make check on Debian 7.0 and possibly other systems with old GLib,tested by vague,True,{}
irssi/irssi,https://github.com/irssi/irssi,818,2018-01-18T11:04:43Z,2018-02-02T13:09:10Z,2019-06-26T23:13:45Z,MERGED,True,19,1,1,https://github.com/ailin-nemui,add backwards compatible code for running tap tests,1,['auto-merge'],https://github.com/irssi/irssi/pull/818,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/818#issuecomment-358642552,fixes make check on Debian 7.0 and possibly other systems with old GLib,I guess.,True,{}
irssi/irssi,https://github.com/irssi/irssi,818,2018-01-18T11:04:43Z,2018-02-02T13:09:10Z,2019-06-26T23:13:45Z,MERGED,True,19,1,1,https://github.com/ailin-nemui,add backwards compatible code for running tap tests,1,['auto-merge'],https://github.com/irssi/irssi/pull/818,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/818#issuecomment-358912944,fixes make check on Debian 7.0 and possibly other systems with old GLib,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/821,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/821#issuecomment-358953131,,it does sound like a useful feature. one downside I see is that it doesn't seem to support regex? Also I don't know about the overhead costs,True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/821#issuecomment-358960047,,I'm thinking about limiting it to just $N and instead of using parse_special_string just do str = server->nick,True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,4,https://github.com/irssi/irssi/pull/821#issuecomment-358960597,,"var expansion in regex would be another option to add, sure, but for (full) expando support I need to send in WI_ITEM_REC to hilight_match_text too",True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/821#issuecomment-358963540,,we already have /set hilight_nick_matches so I don't sure if we need this case ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,6,https://github.com/irssi/irssi/pull/821#issuecomment-358967401,,Using /hilight gives more control and I see quite often questions about the possibility of using expandos in hilights,True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/821#issuecomment-359061521,,"One use case was this person called ""day"" who uses that nick in one network but other nicks in other networks
So the flexibility of /set hilight_nick_matches is desirable but they also wanted to have it limited to /^day[>:,]/ because starting sentences with /^day / is apparently common enough to be annoying.
Regexp support is important for this to be useful for that use case.
The obvious issue is that $ is a regexp special char, so we need some escaping and a way to make this new behavior opt-in, along the lines of /hilight -expandos",True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,8,https://github.com/irssi/irssi/pull/821#issuecomment-359165300,,"For regex we would have to compile the pattern at runtime, $N for example wouldn't work precompiled, no idea about the performance penalty",True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/821#issuecomment-374532082,,"I'm not against this but we have to implement the regex case, and that's going to be a bit tricky. it needs a cache that is invalidated based on signals (e.g  own nick change -> invalidate $N regex). also probably should support escaping of expandos inside regexen",True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,10,https://github.com/irssi/irssi/pull/821#issuecomment-374903701,,Can you expand on what you are saying? Why is the invalidation needed?,True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/821#issuecomment-376124650,,"we should just compile regex once, but for that we need to keep track of when they have to be recompiled because e.g. $N changed",True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,12,https://github.com/irssi/irssi/pull/821#issuecomment-397647958,,"Time to revive this, I'm trying to come up with a good strategy for how the signal system should be built up, let's see where we end up :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,821,2018-01-19T11:34:01Z,2018-09-12T12:42:52Z,2018-09-12T12:42:52Z,CLOSED,False,37,16,2,https://github.com/vague666,Allow expandos in /hilight,5,['needs changes'],https://github.com/irssi/irssi/pull/821,https://github.com/vague666,13,https://github.com/irssi/irssi/pull/821#issuecomment-397648735,,"I guess the question is if all expandos should be supported or just a finite set, I don't see much use for anything but $N, the way the code is now all expandos can be used",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/Manishearth,1,https://github.com/irssi/irssi/pull/822,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/Manishearth,2,https://github.com/irssi/irssi/pull/822#issuecomment-358962462,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.",r? @LemonBoy,True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/822#issuecomment-358977192,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","nice idea, but I wonder about ""should be""
in my opinion
nick1: nick2: nick3: hi does not look nice. personally in this situation I would do
nick1: <backspace><backspace>nick2 nick3: hi, in other words
nick1 nick2 nick3: hi
also this probably should take into consideration the completion_char. A popular choice is ,, in which case
nick1, nick2, nick3, hi does look more pleasant to my eyes, compared to the colon
finally you should remember that by default irssi only hilights the single-nick case (or, nick in first place). in that regard, the default behaviour is more clear with regards to the expectancy of the receiver",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/Manishearth,4,https://github.com/irssi/irssi/pull/822#issuecomment-358982549,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","Yeah, however the SIGNAL_FUNC API doesn't work that way because the linestart pointer is immutable and anyway a copy of the original line. This would require some major refactoring to make work.

finally you should remember that by default irssi only hilights the single-nick case

I think other clients don't. However, I could make irssi highlight any nick mention in the initial series of colon'd nicks and make this uniform, if that would be acceptable?",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/Manishearth,5,https://github.com/irssi/irssi/pull/822#issuecomment-358982989,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","Also, fixed the completion_char stuff. I had kept that in the back of my mind when writing this and then totally forgot.",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/822#issuecomment-359135523,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","Hm, build errors in the last commit because completion_char is a char* instead of char so you can't compare with ==.
This also highlights that completion_char can be a multi character string, so that loop needs more changes than just switching to strcmp. Unless we limit the whole thing to only commas as the completion_char...


finally you should remember that by default irssi only hilights the single-nick case

I think other clients don't. However, I could make irssi highlight any nick mention in the initial series of colon'd nicks and make this uniform, if that would be acceptable?

I think that was intended as something that keep in mind, not necessarily something to address. It's out of scope of this change anyway. Currently we have two nicks for this, hilight_nick_matches (default on) and hilight_nick_matches_everywhere (default off) and imo everyone should enable the latter (or set up equivalent hilights) but changing defaults is forbidden. Changing the behavior of hilight_nick_matches is probably not welcome either. So better not do anything there.

nice idea, but I wonder about ""should be""
[snip]

Yeah, not sure this is the best change of behavior, but there's not a lot that can be done with the way completion works, like manish said. I'd love to have something like a secondary completion char and do ""nick1, nick2, nick3:"" with subsequent completes editing past chars, but who knows how to get to that in a sane way. On the other hand nick1: nick2: nick3: is way better looking than nick1: nick2 nick3, so uh.",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/Manishearth,7,https://github.com/irssi/irssi/pull/822#issuecomment-359138882,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","Hmm. For string valued completion_chars it seems like there will be a lot if edge cases, might just restrict this to single-char values",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/Manishearth,8,https://github.com/irssi/irssi/pull/822#issuecomment-359145722,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","Done. I can attempt to handle non-char completion_chars, but that seems like an edge case that itself is fraught with edge cases, so we just bail early then (except in the ""at beginning of line"" case to preserve previous behavior)",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/822#issuecomment-359361126,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.","looks ok to me, @dequis ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,822,2018-01-19T13:10:44Z,2018-02-04T10:28:26Z,2019-06-26T23:12:49Z,MERGED,True,54,1,1,https://github.com/Manishearth,Insert colons after completing nicks preceded by a list of other autocompleted nicks,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/822,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/822#issuecomment-360067469,"When pinging two people, typing nick1<tab> nick2<tab> message for autocompletion will get you nick1: nick2 message, which is kinda confusing.
We only insert the colon after the first autocompleted nick, because if a nick is used in the middle of the sentence it's mentioning the person but not targeting the message at them.
However, this breaks down when we try to ping a list of people. There should be a colon in front of each separating the names from the message. only having a colon at the end of the nick list works too, but it seems like the IRC convention is to just use multiple colons.
This patch makes it so that autocompleting a nick after a list of existing autocompleted nicks at the beginning of the message will include a colon.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,824,2018-01-20T23:43:55Z,2018-02-05T21:26:33Z,2019-06-26T23:13:49Z,MERGED,True,13,18,2,https://github.com/dequis,Revert more of the netsplit print optimisation to fix crashes,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/824,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/824,"Now iterating over all servers to avoid crashes on server_ischannel(), which is a macro for server->ischannel(), so it dies horribly when it's null.
Fixes #819","Now iterating over all servers to avoid crashes on server_ischannel(), which is a macro for server->ischannel(), so it dies horribly when it's null.
Fixes #819",True,{}
irssi/irssi,https://github.com/irssi/irssi,824,2018-01-20T23:43:55Z,2018-02-05T21:26:33Z,2019-06-26T23:13:49Z,MERGED,True,13,18,2,https://github.com/dequis,Revert more of the netsplit print optimisation to fix crashes,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/824,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/824#issuecomment-359211235,"Now iterating over all servers to avoid crashes on server_ischannel(), which is a macro for server->ischannel(), so it dies horribly when it's null.
Fixes #819","Ref #812, #420",True,{}
irssi/irssi,https://github.com/irssi/irssi,824,2018-01-20T23:43:55Z,2018-02-05T21:26:33Z,2019-06-26T23:13:49Z,MERGED,True,13,18,2,https://github.com/dequis,Revert more of the netsplit print optimisation to fix crashes,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/824,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/824#issuecomment-359500463,"Now iterating over all servers to avoid crashes on server_ischannel(), which is a macro for server->ischannel(), so it dies horribly when it's null.
Fixes #819","Oh. You're right. I'm copying this stuff back to #819 because my mistake was there, not here (after all this PR just copypastes the older working code, a change of the analysis won't change the code here)",True,{}
irssi/irssi,https://github.com/irssi/irssi,824,2018-01-20T23:43:55Z,2018-02-05T21:26:33Z,2019-06-26T23:13:49Z,MERGED,True,13,18,2,https://github.com/dequis,Revert more of the netsplit print optimisation to fix crashes,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/824,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/824#issuecomment-361121457,"Now iterating over all servers to avoid crashes on server_ischannel(), which is a macro for server->ischannel(), so it dies horribly when it's null.
Fixes #819","Computers are hard.
The diffs look more harmless now:
git diff lemon-netsplit-base HEAD src/fe-common/irc/fe-netsplit.c
diff --git a/src/fe-common/irc/fe-netsplit.c b/src/fe-common/irc/fe-netsplit.c
index 3eb307965..edd3fc34e 100644
--- a/src/fe-common/irc/fe-netsplit.c
+++ b/src/fe-common/irc/fe-netsplit.c
@@ -142,12 +142,14 @@ static void get_server_splits(void *key, NETSPLIT_REC *split,
 	}
 }
 
-static void print_server_splits(IRC_SERVER_REC *server, TEMP_SPLIT_REC *rec)
+static void print_server_splits(IRC_SERVER_REC *server, TEMP_SPLIT_REC *rec, const char *filter_channel)
 {
 	GString *destservers;
 	char *sourceserver;
 	GSList *tmp;
 
+	g_return_if_fail(rec->servers != NULL);
+
 	destservers = g_string_new(NULL);
 	for (tmp = rec->servers; tmp != NULL; tmp = tmp->next) {
 		NETSPLIT_SERVER_REC *rec = tmp->data;
@@ -168,6 +170,10 @@ static void print_server_splits(IRC_SERVER_REC *server, TEMP_SPLIT_REC *rec)
 	for (tmp = rec->channels; tmp != NULL; tmp = tmp->next) {
 		TEMP_SPLIT_CHAN_REC *chan = tmp->data;
 
+		if (filter_channel != NULL &&
+		    strcasecmp(chan->name, filter_channel) != 0)
+			continue;
+
 		g_string_truncate(chan->nicks, chan->nicks->len-2);
 
 		if (netsplit_max_nicks > 0 &&
@@ -193,7 +199,7 @@ static void temp_split_chan_free(TEMP_SPLIT_CHAN_REC *rec)
 	g_free(rec);
 }
 
-static void print_splits(IRC_SERVER_REC *server)
+static void print_splits(IRC_SERVER_REC *server, const char *filter_channel)
 {
 	TEMP_SPLIT_REC temp;
 	GSList *servers;
@@ -212,7 +218,7 @@ static void print_splits(IRC_SERVER_REC *server)
 
 		g_hash_table_foreach(server->splits,
 				     (GHFunc) get_server_splits, &temp);
-		print_server_splits(server, &temp);
+		print_server_splits(server, &temp, filter_channel);
 
 		g_slist_foreach(temp.channels,
 				(GFunc) temp_split_chan_free, NULL);
@@ -233,13 +239,13 @@ static int check_server_splits(IRC_SERVER_REC *server)
 	if (time(NULL)-last < SPLIT_WAIT_TIME)
 		return FALSE;
 
-	print_splits(server);
+	print_splits(server, NULL);
         return TRUE;
 }
 
 /* something is going to be printed to screen, print our current netsplit
    message before it. */
-static void sig_print_starting(void)
+static void sig_print_starting(TEXT_DEST_REC *dest)
 {
 	GSList *tmp;
 
@@ -250,7 +256,7 @@ static void sig_print_starting(void)
 		IRC_SERVER_REC *rec = tmp->data;
 
 		if (IS_IRC_SERVER(rec) && rec->split_servers != NULL)
-			print_splits(rec);
+			print_splits(rec, NULL);
 	}
 }
 
git diff lemon-netsplit-base HEAD src/fe-common/irc/fe-netjoin.c
diff --git a/src/fe-common/irc/fe-netjoin.c b/src/fe-common/irc/fe-netjoin.c
index f5cb081e4..a7a2e4fe4 100644
--- a/src/fe-common/irc/fe-netjoin.c
+++ b/src/fe-common/irc/fe-netjoin.c
@@ -164,11 +164,11 @@ static void print_channel_netjoins(char *channel, TEMP_PRINT_REC *rec,
 	g_free(channel);
 }
 
-static void print_netjoins(NETJOIN_SERVER_REC *server)
+static void print_netjoins(NETJOIN_SERVER_REC *server, const char *filter_channel)
 {
 	TEMP_PRINT_REC *temp;
 	GHashTable *channels;
-	GSList *tmp, *next, *old;
+	GSList *tmp, *tmp2, *next, *next2, *old;
 
 	g_return_if_fail(server != NULL);
 
@@ -181,11 +181,19 @@ static void print_netjoins(NETJOIN_SERVER_REC *server)
 	for (tmp = server->netjoins; tmp != NULL; tmp = next) {
 		NETJOIN_REC *rec = tmp->data;
 
-		next = tmp->next;
-		while (rec->now_channels != NULL) {
-			char *channel = rec->now_channels->data;
+		next = g_slist_next(tmp);
+
+		for (tmp2 = rec->now_channels; tmp2 != NULL; tmp2 = next2) {
+			char *channel = tmp2->data;
 			char *realchannel = channel + 1;
 
+			next2 = g_slist_next(tmp2);
+
+			/* Filter the results by channel if asked to do so */
+			if (filter_channel != NULL &&
+			    strcasecmp(realchannel, filter_channel) != 0)
+				continue;
+
 			temp = g_hash_table_lookup(channels, realchannel);
 			if (temp == NULL) {
 				temp = g_new0(TEMP_PRINT_REC, 1);
@@ -214,8 +222,8 @@ static void print_netjoins(NETJOIN_SERVER_REC *server)
 				g_free(data);
 			}
 
-			rec->now_channels =
-				g_slist_remove(rec->now_channels, channel);
+			/* drop tmp2 from the list */
+			rec->now_channels = g_slist_delete_link(rec->now_channels, tmp2);
 			g_free(channel);
 		}
 
@@ -235,7 +243,7 @@ static void print_netjoins(NETJOIN_SERVER_REC *server)
 
 /* something is going to be printed to screen, print our current netsplit
    message before it. */
-static void sig_print_starting(void)
+static void sig_print_starting(TEXT_DEST_REC *dest)
 {
 	GSList *tmp, *next;
 
@@ -247,7 +255,7 @@ static void sig_print_starting(void)
 
 		next = tmp->next;
 		if (server->netjoins != NULL)
-			print_netjoins(server);
+			print_netjoins(server, NULL);
 	}
 }
 
@@ -272,7 +280,7 @@ static int sig_check_netjoins(void)
 		}
 
                 if (server->netjoins != NULL)
-			print_netjoins(server);
+			print_netjoins(server, NULL);
 	}
 
 	/* now remove all netjoins which haven't had any new joins
@@ -457,6 +465,20 @@ static void read_settings(void)
 	}
 }
 
+static void sig_server_disconnected(IRC_SERVER_REC *server)
+{
+	NETJOIN_SERVER_REC *netjoin_server;
+
+	g_return_if_fail(server != NULL);
+
+	if (!IS_IRC_SERVER(server))
+		return;
+
+	if ((netjoin_server = netjoin_find_server(server))) {
+		netjoin_server_remove(netjoin_server);
+	}
+}
+
 void fe_netjoin_init(void)
 {
 	settings_add_bool(""misc"", ""hide_netsplit_quits"", TRUE);
@@ -467,6 +489,7 @@ void fe_netjoin_init(void)
 
 	read_settings();
 	signal_add(""setup changed"", (SIGNAL_FUNC) read_settings);
+	signal_add(""server disconnected"", (SIGNAL_FUNC) sig_server_disconnected);
 }
 
 void fe_netjoin_deinit(void)
@@ -479,6 +502,7 @@ void fe_netjoin_deinit(void)
 	}
 
 	signal_remove(""setup changed"", (SIGNAL_FUNC) read_settings);
+	signal_remove(""server disconnected"", (SIGNAL_FUNC) sig_server_disconnected);
 
 	signal_remove(""message quit"", (SIGNAL_FUNC) msg_quit);
 	signal_remove(""message join"", (SIGNAL_FUNC) msg_join);",True,{}
irssi/irssi,https://github.com/irssi/irssi,824,2018-01-20T23:43:55Z,2018-02-05T21:26:33Z,2019-06-26T23:13:49Z,MERGED,True,13,18,2,https://github.com/dequis,Revert more of the netsplit print optimisation to fix crashes,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/824,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/824#issuecomment-363026657,"Now iterating over all servers to avoid crashes on server_ischannel(), which is a macro for server->ischannel(), so it dies horribly when it's null.
Fixes #819",@irssi/developers merge this for 1.1.1?,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,827,2018-01-23T18:03:24Z,2018-03-20T09:33:21Z,2018-06-20T08:15:02Z,CLOSED,False,5,0,1,https://github.com/vague666,add access to set hidden_level from perl…,1,[],https://github.com/irssi/irssi/pull/827,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/827,Requires a $view->redraw to update view,Requires a $view->redraw to update view,True,{'THUMBS_DOWN': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,827,2018-01-23T18:03:24Z,2018-03-20T09:33:21Z,2018-06-20T08:15:02Z,CLOSED,False,5,0,1,https://github.com/vague666,add access to set hidden_level from perl…,1,[],https://github.com/irssi/irssi/pull/827,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/827#issuecomment-359881246,Requires a $view->redraw to update view,"we need a strategic decision, should we add a lot of setters? I am against it because they don't work like the hash access. and we have Irssi::command. maybe if we would implement hash setters instead, but that needs more code",True,{}
irssi/irssi,https://github.com/irssi/irssi,827,2018-01-23T18:03:24Z,2018-03-20T09:33:21Z,2018-06-20T08:15:02Z,CLOSED,False,5,0,1,https://github.com/vague666,add access to set hidden_level from perl…,1,[],https://github.com/irssi/irssi/pull/827,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/827#issuecomment-359901142,Requires a $view->redraw to update view,I'm the wrong person to answer that question :),True,{}
irssi/irssi,https://github.com/irssi/irssi,827,2018-01-23T18:03:24Z,2018-03-20T09:33:21Z,2018-06-20T08:15:02Z,CLOSED,False,5,0,1,https://github.com/vague666,add access to set hidden_level from perl…,1,[],https://github.com/irssi/irssi/pull/827,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/827#issuecomment-360004293,Requires a $view->redraw to update view,"Can't say much here myself, don't really understand the issue. What would this hash access / hash setter stuff look like?",True,{}
irssi/irssi,https://github.com/irssi/irssi,827,2018-01-23T18:03:24Z,2018-03-20T09:33:21Z,2018-06-20T08:15:02Z,CLOSED,False,5,0,1,https://github.com/vague666,add access to set hidden_level from perl…,1,[],https://github.com/irssi/irssi/pull/827,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/827#issuecomment-360035399,Requires a $view->redraw to update view,would look like $view->{hidden_level} = MSGLEVEL_...,True,{}
irssi/irssi,https://github.com/irssi/irssi,827,2018-01-23T18:03:24Z,2018-03-20T09:33:21Z,2018-06-20T08:15:02Z,CLOSED,False,5,0,1,https://github.com/vague666,add access to set hidden_level from perl…,1,[],https://github.com/irssi/irssi/pull/827,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/827#issuecomment-374531436,Requires a $view->redraw to update view,I will close this for now since I don't like adding more api functions that are better written as Irssi::command. but if someone else disagrees feel free to reopen/merge,True,{}
irssi/irssi,https://github.com/irssi/irssi,827,2018-01-23T18:03:24Z,2018-03-20T09:33:21Z,2018-06-20T08:15:02Z,CLOSED,False,5,0,1,https://github.com/vague666,add access to set hidden_level from perl…,1,[],https://github.com/irssi/irssi/pull/827,https://github.com/vague666,7,https://github.com/irssi/irssi/pull/827#issuecomment-398664030,Requires a $view->redraw to update view,"Time to discuss this too :)
I disagree, the problem is that running the commands with Irssi::command adds complexity to the scripts which can be simplified with api calls
Two examples:

toggle_hidelevels.pl hooks to 'window hidelevel' command chain so that the script can know when users manually change window hidelevel, since the script toggles hidelevels by calling 'window hidelevel' from the script this has to be taken into account when hooking into the command chain
away.pl calls 'away' to set/unset away status, it also hooks into the 'away' command chain and in many instances enough care hasn't been taken to take this into account

A way to access the lowlevel setters is the best(easiest) way imo, the hash setters code would be something to look at but XS evades me to a large degree, not enough interest in it to dive in
@irssi/developers",True,{}
irssi/irssi,https://github.com/irssi/irssi,830,2018-01-23T22:41:16Z,2018-01-30T10:20:40Z,2019-06-26T23:12:50Z,MERGED,True,2,1,1,https://github.com/g-elfling,Add Shift-Tab completion to gui-readline,3,['auto-merge'],https://github.com/irssi/irssi/pull/830,https://github.com/g-elfling,1,https://github.com/irssi/irssi/pull/830,"Add  completion because pressing only <Tab> to complete the commands is allowed. <Shift><Tab> is not allowed, it doesn't do anything. For example in /q<Tab> cycles through commands /query, /quit, /quote, and /Q. So if one would type /qu<Tab> to complete to /query and then press <Shift> to cycle next to /quit. After that pressing <Shift><Tab> it would complete back to /query.
Fixes issue #829","Add  completion because pressing only <Tab> to complete the commands is allowed. <Shift><Tab> is not allowed, it doesn't do anything. For example in /q<Tab> cycles through commands /query, /quit, /quote, and /Q. So if one would type /qu<Tab> to complete to /query and then press <Shift> to cycle next to /quit. After that pressing <Shift><Tab> it would complete back to /query.
Fixes issue #829",True,{}
irssi/irssi,https://github.com/irssi/irssi,830,2018-01-23T22:41:16Z,2018-01-30T10:20:40Z,2019-06-26T23:12:50Z,MERGED,True,2,1,1,https://github.com/g-elfling,Add Shift-Tab completion to gui-readline,3,['auto-merge'],https://github.com/irssi/irssi/pull/830,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/830#issuecomment-360035148,"Add  completion because pressing only <Tab> to complete the commands is allowed. <Shift><Tab> is not allowed, it doesn't do anything. For example in /q<Tab> cycles through commands /query, /quit, /quote, and /Q. So if one would type /qu<Tab> to complete to /query and then press <Shift> to cycle next to /quit. After that pressing <Shift><Tab> it would complete back to /query.
Fixes issue #829","you can already do this without changing the source code with /bind meta2-Z key stab and /bind stab word_completion_backward
it's a good idea to make it default though",True,{}
irssi/irssi,https://github.com/irssi/irssi,830,2018-01-23T22:41:16Z,2018-01-30T10:20:40Z,2019-06-26T23:12:50Z,MERGED,True,2,1,1,https://github.com/g-elfling,Add Shift-Tab completion to gui-readline,3,['auto-merge'],https://github.com/irssi/irssi/pull/830,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/830#issuecomment-360066018,"Add  completion because pressing only <Tab> to complete the commands is allowed. <Shift><Tab> is not allowed, it doesn't do anything. For example in /q<Tab> cycles through commands /query, /quit, /quote, and /Q. So if one would type /qu<Tab> to complete to /query and then press <Shift> to cycle next to /quit. After that pressing <Shift><Tab> it would complete back to /query.
Fixes issue #829",..Makes me wonder if there is any way to undo a completion completely and revert to before I used Tab,True,{}
irssi/irssi,https://github.com/irssi/irssi,830,2018-01-23T22:41:16Z,2018-01-30T10:20:40Z,2019-06-26T23:12:50Z,MERGED,True,2,1,1,https://github.com/g-elfling,Add Shift-Tab completion to gui-readline,3,['auto-merge'],https://github.com/irssi/irssi/pull/830,https://github.com/g-elfling,4,https://github.com/irssi/irssi/pull/830#issuecomment-360260492,"Add  completion because pressing only <Tab> to complete the commands is allowed. <Shift><Tab> is not allowed, it doesn't do anything. For example in /q<Tab> cycles through commands /query, /quit, /quote, and /Q. So if one would type /qu<Tab> to complete to /query and then press <Shift> to cycle next to /quit. After that pressing <Shift><Tab> it would complete back to /query.
Fixes issue #829","Couldn't find that kinda feature, why not make it loool ;) It was weird that this key_word_completion_backward thing was built already but was not bound to shift-tab?",True,{}
irssi/irssi,https://github.com/irssi/irssi,830,2018-01-23T22:41:16Z,2018-01-30T10:20:40Z,2019-06-26T23:12:50Z,MERGED,True,2,1,1,https://github.com/g-elfling,Add Shift-Tab completion to gui-readline,3,['auto-merge'],https://github.com/irssi/irssi/pull/830,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/830#issuecomment-360394131,"Add  completion because pressing only <Tab> to complete the commands is allowed. <Shift><Tab> is not allowed, it doesn't do anything. For example in /q<Tab> cycles through commands /query, /quit, /quote, and /Q. So if one would type /qu<Tab> to complete to /query and then press <Shift> to cycle next to /quit. After that pressing <Shift><Tab> it would complete back to /query.
Fixes issue #829",lgtm @irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,831,2018-01-25T14:03:13Z,2018-02-04T10:27:03Z,2019-06-26T23:13:43Z,MERGED,True,19,1,1,https://github.com/ailin-nemui,Do not use X509_STORE on OpenSSL < 1.0.2,2,['auto-merge'],https://github.com/irssi/irssi/pull/831,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/831,This is supposed to fix #820,This is supposed to fix #820,True,{}
irssi/irssi,https://github.com/irssi/irssi,831,2018-01-25T14:03:13Z,2018-02-04T10:27:03Z,2019-06-26T23:13:43Z,MERGED,True,19,1,1,https://github.com/ailin-nemui,Do not use X509_STORE on OpenSSL < 1.0.2,2,['auto-merge'],https://github.com/irssi/irssi/pull/831,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/831#issuecomment-362553251,This is supposed to fix #820,@irssi/developers,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,832,2018-01-25T14:33:41Z,2018-02-12T09:54:42Z,2019-06-26T23:13:49Z,MERGED,True,25,11,2,https://github.com/ailin-nemui,try to make sure the server is still good enough to call ischannel when printing netsplit/join,1,['auto-merge'],https://github.com/irssi/irssi/pull/832,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/832,This should fix #819,This should fix #819,True,{}
irssi/irssi,https://github.com/irssi/irssi,832,2018-01-25T14:33:41Z,2018-02-12T09:54:42Z,2019-06-26T23:13:49Z,MERGED,True,25,11,2,https://github.com/ailin-nemui,try to make sure the server is still good enough to call ischannel when printing netsplit/join,1,['auto-merge'],https://github.com/irssi/irssi/pull/832,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/832#issuecomment-361122273,This should fix #819,"Continuing #819 (comment) here:
This throws two warnings:
22:47 -!- Irssi: critical ischannel_func: assertion 'data != NULL' failed
22:47 -!- Irssi: Disconnecting from server localhost: [Reconnecting]
22:47 -!- Irssi: critical ischannel_func: assertion 'data != NULL' failed

It also seems to not flush pending netsplits like lemon-netsplit-base does
22:47 <@dx|fb> ac off
22:47 <@root> Deactivating all active (re)connections...
22:47 <@root> facebook - Signing off..
22:47 -!- dx|fb [dx3@localhost.localdomain] has joined &bitlbee

lemon-netsplit-base (and #824) looks like this:
23:15 <@dx|fb> ac off
23:15 <@root> Deactivating all active (re)connections...
23:15 <@root> facebook - Signing off..
23:15 -!- Netsplit localhost.localdomain <-> facebook.localhost.localdomain quits: +fb-XXXX, +fb-XXXX, +fb-XXXX, +fb-XXXX, +fb-XXXX, +fb-XXXX
23:15 -!- dx|fb [dx3@localhost.localdomain] has joined &bitlbee",True,{}
irssi/irssi,https://github.com/irssi/irssi,832,2018-01-25T14:33:41Z,2018-02-12T09:54:42Z,2019-06-26T23:13:49Z,MERGED,True,25,11,2,https://github.com/ailin-nemui,try to make sure the server is still good enough to call ischannel when printing netsplit/join,1,['auto-merge'],https://github.com/irssi/irssi/pull/832,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/832#issuecomment-361175832,This should fix #819,how about we change the check to dest==NULL || server_ischannel,True,{}
irssi/irssi,https://github.com/irssi/irssi,832,2018-01-25T14:33:41Z,2018-02-12T09:54:42Z,2019-06-26T23:13:49Z,MERGED,True,25,11,2,https://github.com/ailin-nemui,try to make sure the server is still good enough to call ischannel when printing netsplit/join,1,['auto-merge'],https://github.com/irssi/irssi/pull/832,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/832#issuecomment-363229048,This should fix #819,I'm proposing to put this into git (been running it for a while and tested with bitlbee) @irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,832,2018-01-25T14:33:41Z,2018-02-12T09:54:42Z,2019-06-26T23:13:49Z,MERGED,True,25,11,2,https://github.com/ailin-nemui,try to make sure the server is still good enough to call ischannel when printing netsplit/join,1,['auto-merge'],https://github.com/irssi/irssi/pull/832,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/832#issuecomment-363243914,This should fix #819,"So the safer one for 1.1.1, and this one for git? Sounds like a plan.
There's still the issue that this won't flush pending netsplits when quitting, but that's not a big deal. The real question is if the circumstances that lead to netsplits not being flushed on quit (non-null server, null target) can apply to other less situations in the middle of the connection.",True,{}
irssi/irssi,https://github.com/irssi/irssi,832,2018-01-25T14:33:41Z,2018-02-12T09:54:42Z,2019-06-26T23:13:49Z,MERGED,True,25,11,2,https://github.com/ailin-nemui,try to make sure the server is still good enough to call ischannel when printing netsplit/join,1,['auto-merge'],https://github.com/irssi/irssi/pull/832,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/832#issuecomment-363246988,This should fix #819,"in my testing it did flush them, can you double check that? we can also add a server disconnected handler and add an explicit flush, maybe that's better? I'll rebase this tomorrow....",True,{}
irssi/irssi,https://github.com/irssi/irssi,832,2018-01-25T14:33:41Z,2018-02-12T09:54:42Z,2019-06-26T23:13:49Z,MERGED,True,25,11,2,https://github.com/ailin-nemui,try to make sure the server is still good enough to call ischannel when printing netsplit/join,1,['auto-merge'],https://github.com/irssi/irssi/pull/832,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/832#issuecomment-364401929,This should fix #819,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,833,2018-01-25T14:55:10Z,2018-01-30T10:20:02Z,2019-06-26T23:13:18Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,we probably should not try to replace replaces,1,['auto-merge'],https://github.com/irssi/irssi/pull/833,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/833,Fixes GL#23,Fixes GL#23,True,{}
irssi/irssi,https://github.com/irssi/irssi,833,2018-01-25T14:55:10Z,2018-01-30T10:20:02Z,2019-06-26T23:13:18Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,we probably should not try to replace replaces,1,['auto-merge'],https://github.com/irssi/irssi/pull/833,https://github.com/josephbisch,2,https://github.com/irssi/irssi/pull/833#issuecomment-360765983,Fixes GL#23,"LGTM, except for possibly the thing about the commit message mentioned",True,{}
irssi/irssi,https://github.com/irssi/irssi,833,2018-01-25T14:55:10Z,2018-01-30T10:20:02Z,2019-06-26T23:13:18Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,we probably should not try to replace replaces,1,['auto-merge'],https://github.com/irssi/irssi/pull/833,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/833#issuecomment-361173843,Fixes GL#23,@irssi/developers,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,834,2018-01-30T16:34:25Z,2018-01-30T16:39:14Z,2019-06-26T23:13:51Z,MERGED,True,1,1,1,https://github.com/williamjacksn,Fix typo in help text for /ISON command,1,[],https://github.com/irssi/irssi/pull/834,https://github.com/williamjacksn,1,https://github.com/irssi/irssi/pull/834,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,834,2018-01-30T16:34:25Z,2018-01-30T16:39:14Z,2019-06-26T23:13:51Z,MERGED,True,1,1,1,https://github.com/williamjacksn,Fix typo in help text for /ISON command,1,[],https://github.com/irssi/irssi/pull/834,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/834#issuecomment-361653465,,thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,835,2018-02-01T09:21:45Z,2018-02-07T20:23:40Z,2019-06-26T23:13:15Z,MERGED,True,38,19,1,https://github.com/ailin-nemui,protect theme recursion,2,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/835,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/835,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,835,2018-02-01T09:21:45Z,2018-02-07T20:23:40Z,2019-06-26T23:13:15Z,MERGED,True,38,19,1,https://github.com/ailin-nemui,protect theme recursion,2,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/835,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/835#issuecomment-363228630,,"@irssi/developers
this will solve a stack overflow on oss-fuzz too",True,{}
irssi/irssi,https://github.com/irssi/irssi,835,2018-02-01T09:21:45Z,2018-02-07T20:23:40Z,2019-06-26T23:13:15Z,MERGED,True,38,19,1,https://github.com/ailin-nemui,protect theme recursion,2,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/835,https://github.com/josephbisch,3,https://github.com/irssi/irssi/pull/835#issuecomment-363246425,,I say merge it.,True,{}
irssi/irssi,https://github.com/irssi/irssi,836,2018-02-02T08:50:45Z,2018-02-05T21:25:34Z,2019-06-26T23:13:51Z,MERGED,True,54,32,1,https://github.com/ailin-nemui,Fix resizing of windows when used incorrectly,2,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/836,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/836,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,836,2018-02-02T08:50:45Z,2018-02-05T21:25:34Z,2019-06-26T23:13:51Z,MERGED,True,54,32,1,https://github.com/ailin-nemui,Fix resizing of windows when used incorrectly,2,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/836,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/836#issuecomment-363036237,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,836,2018-02-02T08:50:45Z,2018-02-05T21:25:34Z,2019-06-26T23:13:51Z,MERGED,True,54,32,1,https://github.com/ailin-nemui,Fix resizing of windows when used incorrectly,2,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/836,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/836#issuecomment-363175973,,...going to keep that commit message?,True,{}
irssi/irssi,https://github.com/irssi/irssi,836,2018-02-02T08:50:45Z,2018-02-05T21:25:34Z,2019-06-26T23:13:51Z,MERGED,True,54,32,1,https://github.com/ailin-nemui,Fix resizing of windows when used incorrectly,2,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/836,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/836#issuecomment-377374660,,Fixed #826,True,{}
irssi/irssi,https://github.com/irssi/irssi,837,2018-02-02T09:05:48Z,2018-02-05T21:24:18Z,2019-06-26T23:13:50Z,MERGED,True,5,0,1,https://github.com/ailin-nemui,check the error condition of mainwindow_create,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/837,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/837,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,837,2018-02-02T09:05:48Z,2018-02-05T21:24:18Z,2019-06-26T23:13:50Z,MERGED,True,5,0,1,https://github.com/ailin-nemui,check the error condition of mainwindow_create,1,"['auto-merge', 'z-affects-1.0.6']",https://github.com/irssi/irssi/pull/837,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/837#issuecomment-363036312,,@irssi/developers,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/838,remove UB on high chars,remove UB on high chars,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/LemonBoy,2,https://github.com/irssi/irssi/pull/838#issuecomment-362616265,remove UB on high chars,The commit message is atrocious but #836 takes the cake.,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/838#issuecomment-362623526,remove UB on high chars,c0f66c9 never forget,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/josephbisch,4,https://github.com/irssi/irssi/pull/838#issuecomment-362721344,remove UB on high chars,"After applying this patch:
settings.c:678:25: runtime error: left shift of 138 by 24 places cannot be represented in type 'int'",True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/838#issuecomment-362854492,remove UB on high chars,how about something real instead,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/838#issuecomment-363081987,remove UB on high chars,"I can't really wait to add more of OpenSSL in the mix
We can use glib instead since we bumped the minimum version to 2.28 some time ago.",True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/838#issuecomment-363174697,remove UB on high chars,"Yeah I thought the same thing but really I have no opinion on glib checksums vs openssl. The libcrypto parts of openssl are the safest and hashing is a relatively trivial problem.
g_compute_checksum_for_data would be shorter but heap allocated so to keep the same allocation style you would end up going through the g_checksum_new route which takes the same amount of code. Not that heap allocation hurts.
Also obligatory mention that sha1 has collisions even though the older checksum was worse lol.",True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/838#issuecomment-363228278,remove UB on high chars,@LemonBoy want to rewrite it with glib? I don't care too much which of the libs we use,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/838#issuecomment-365064729,remove UB on high chars,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/838#issuecomment-365108816,remove UB on high chars,"Hm, why did you choose not to use g_compute_checksum_for_data?",True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/838#issuecomment-365109621,remove UB on high chars,for that we need to read the whole file into memory first,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/dequis,12,https://github.com/irssi/irssi/pull/838#issuecomment-365113146,remove UB on high chars,Fair,True,{}
irssi/irssi,https://github.com/irssi/irssi,838,2018-02-02T10:47:24Z,2018-03-07T20:03:43Z,2018-09-04T22:48:22Z,CLOSED,False,43,15,1,https://github.com/ailin-nemui,fix UB in file_checksum method,4,['orphan'],https://github.com/irssi/irssi/pull/838,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/838#issuecomment-365116135,remove UB on high chars,I don't like inout parameters...,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/840,"attempt to fix #839
@RealKindOne can you test this?","attempt to fix #839
@RealKindOne can you test this?",True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/840#issuecomment-363720927,"attempt to fix #839
@RealKindOne can you test this?",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/840#issuecomment-363721825,"attempt to fix #839
@RealKindOne can you test this?",I think the dictionary should be initialized but empty,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/840#issuecomment-363723311,"attempt to fix #839
@RealKindOne can you test this?",what do you mean ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/LemonBoy,5,https://github.com/irssi/irssi/pull/840#issuecomment-363737176,"attempt to fix #839
@RealKindOne can you test this?",With this patch if cap_supported is NULL no perl hash is created at all.,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/840#issuecomment-363740496,"attempt to fix #839
@RealKindOne can you test this?",you mean it should always be created? idk if it matters. it would match more closely the C side where you decided to not always create a table,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/LemonBoy,7,https://github.com/irssi/irssi/pull/840#issuecomment-363741333,"attempt to fix #839
@RealKindOne can you test this?",Since you're the resident perl expert feel free to pick the solution that's more perl-ish/convenient for the API consumer.,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/RealKindOne,8,https://github.com/irssi/irssi/pull/840#issuecomment-363894782,"attempt to fix #839
@RealKindOne can you test this?",Looks like its fixed. Thanks.,True,{}
irssi/irssi,https://github.com/irssi/irssi,840,2018-02-07T10:07:41Z,2018-02-07T20:22:19Z,2019-06-26T23:13:24Z,MERGED,True,10,8,2,https://github.com/ailin-nemui,ensure cap_supported is existent yet,1,['auto-merge'],https://github.com/irssi/irssi/pull/840,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/840#issuecomment-363898380,"attempt to fix #839
@RealKindOne can you test this?",thanks for reporting,True,{}
irssi/irssi,https://github.com/irssi/irssi,842,2018-02-08T13:14:23Z,2018-02-08T21:25:04Z,2019-06-26T23:13:50Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,Fix oob in escaped theme string,1,['z-affects-1.0.6'],https://github.com/irssi/irssi/pull/842,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/842,Credit to OSS-Fuzz,Credit to OSS-Fuzz,True,{}
irssi/irssi,https://github.com/irssi/irssi,843,2018-02-08T13:41:21Z,2018-02-09T10:49:23Z,2019-06-26T23:13:25Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,restore compat with glib <2.40,1,[],https://github.com/irssi/irssi/pull/843,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/843,reported by @pstray,reported by @pstray,True,{}
irssi/irssi,https://github.com/irssi/irssi,843,2018-02-08T13:41:21Z,2018-02-09T10:49:23Z,2019-06-26T23:13:25Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,restore compat with glib <2.40,1,[],https://github.com/irssi/irssi/pull/843,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/843#issuecomment-364125378,reported by @pstray,Filed this https://bugzilla.gnome.org/show_bug.cgi?id=793300,True,{}
irssi/irssi,https://github.com/irssi/irssi,844,2018-02-12T11:12:49Z,2018-02-13T10:10:22Z,2019-06-26T23:13:12Z,MERGED,True,7,3,1,https://github.com/CatboxParadox,dcc get shouldn't fail when file attrs can't be changed,1,[],https://github.com/irssi/irssi/pull/844,https://github.com/CatboxParadox,1,https://github.com/irssi/irssi/pull/844,"Running irssi from within Termux on an un-rooted NVIDIA Shield TV.
DCC downloads never worked for me, no matter what target directory I'd choose... Would you be willing to accept this PR? I don't think the DCC download should fail just because the desired file attributes can't be set (according to strace fchmod fails with EPERM).
Also extending the hardlink workaround to EACCES, not just EPERM (happens when my target directory is an external drive w/ NTFS).","Running irssi from within Termux on an un-rooted NVIDIA Shield TV.
DCC downloads never worked for me, no matter what target directory I'd choose... Would you be willing to accept this PR? I don't think the DCC download should fail just because the desired file attributes can't be set (according to strace fchmod fails with EPERM).
Also extending the hardlink workaround to EACCES, not just EPERM (happens when my target directory is an external drive w/ NTFS).",True,{}
irssi/irssi,https://github.com/irssi/irssi,844,2018-02-12T11:12:49Z,2018-02-13T10:10:22Z,2019-06-26T23:13:12Z,MERGED,True,7,3,1,https://github.com/CatboxParadox,dcc get shouldn't fail when file attrs can't be changed,1,[],https://github.com/irssi/irssi/pull/844,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/844#issuecomment-365065577,"Running irssi from within Termux on an un-rooted NVIDIA Shield TV.
DCC downloads never worked for me, no matter what target directory I'd choose... Would you be willing to accept this PR? I don't think the DCC download should fail just because the desired file attributes can't be set (according to strace fchmod fails with EPERM).
Also extending the hardlink workaround to EACCES, not just EPERM (happens when my target directory is an external drive w/ NTFS).",maybe it would be good to print a warning if chmod fails?,True,{}
irssi/irssi,https://github.com/irssi/irssi,844,2018-02-12T11:12:49Z,2018-02-13T10:10:22Z,2019-06-26T23:13:12Z,MERGED,True,7,3,1,https://github.com/CatboxParadox,dcc get shouldn't fail when file attrs can't be changed,1,[],https://github.com/irssi/irssi/pull/844,https://github.com/CatboxParadox,3,https://github.com/irssi/irssi/pull/844#issuecomment-365172950,"Running irssi from within Termux on an un-rooted NVIDIA Shield TV.
DCC downloads never worked for me, no matter what target directory I'd choose... Would you be willing to accept this PR? I don't think the DCC download should fail just because the desired file attributes can't be set (according to strace fchmod fails with EPERM).
Also extending the hardlink workaround to EACCES, not just EPERM (happens when my target directory is an external drive w/ NTFS).",Moved the EACESS errno check to the /* FUSE */ section; warning added.,True,{}
irssi/irssi,https://github.com/irssi/irssi,844,2018-02-12T11:12:49Z,2018-02-13T10:10:22Z,2019-06-26T23:13:12Z,MERGED,True,7,3,1,https://github.com/CatboxParadox,dcc get shouldn't fail when file attrs can't be changed,1,[],https://github.com/irssi/irssi/pull/844,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/844#issuecomment-365195068,"Running irssi from within Termux on an un-rooted NVIDIA Shield TV.
DCC downloads never worked for me, no matter what target directory I'd choose... Would you be willing to accept this PR? I don't think the DCC download should fail just because the desired file attributes can't be set (according to strace fchmod fails with EPERM).
Also extending the hardlink workaround to EACCES, not just EPERM (happens when my target directory is an external drive w/ NTFS).",looks ok to me..,True,{}
irssi/irssi,https://github.com/irssi/irssi,845,2018-02-12T23:03:49Z,2018-02-13T09:09:07Z,2019-06-26T23:13:45Z,MERGED,True,8,0,1,https://github.com/ailin-nemui,warn if there is non-portable code in the test-driver,1,['auto-merge'],https://github.com/irssi/irssi/pull/845,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/845,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,845,2018-02-12T23:03:49Z,2018-02-13T09:09:07Z,2019-06-26T23:13:45Z,MERGED,True,8,0,1,https://github.com/ailin-nemui,warn if there is non-portable code in the test-driver,1,['auto-merge'],https://github.com/irssi/irssi/pull/845,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/845#issuecomment-365095122,,What did i miss?,True,{}
irssi/irssi,https://github.com/irssi/irssi,846,2018-02-13T11:31:30Z,2018-02-13T11:58:08Z,2019-06-26T23:13:17Z,MERGED,True,6,3,1,https://github.com/ailin-nemui,improve padding performance,1,[],https://github.com/irssi/irssi/pull/846,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/846,Credit to Oss-Fuzz,Credit to Oss-Fuzz,True,{}
irssi/irssi,https://github.com/irssi/irssi,848,2018-02-14T14:04:41Z,2018-02-14T20:21:25Z,2019-06-26T23:13:18Z,MERGED,True,6,0,1,https://github.com/ailin-nemui,limit alignment padding to a screenful,1,[],https://github.com/irssi/irssi/pull/848,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/848,Credit to Oss-Fuzz,Credit to Oss-Fuzz,True,{}
irssi/irssi,https://github.com/irssi/irssi,849,2018-02-14T23:45:11Z,2018-02-15T18:46:32Z,2019-06-27T09:43:26Z,MERGED,True,18,2,1,https://github.com/ailin-nemui,add additional notes to NEWS,1,[],https://github.com/irssi/irssi/pull/849,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/849,(synced back from github releases),(synced back from github releases),True,{}
irssi/irssi,https://github.com/irssi/irssi,849,2018-02-14T23:45:11Z,2018-02-15T18:46:32Z,2019-06-27T09:43:26Z,MERGED,True,18,2,1,https://github.com/ailin-nemui,add additional notes to NEWS,1,[],https://github.com/irssi/irssi/pull/849,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/849#issuecomment-365784810,(synced back from github releases),"Irssi is broken

rude",True,{}
irssi/irssi,https://github.com/irssi/irssi,851,2018-02-16T12:54:38Z,2018-02-16T12:57:06Z,2019-06-26T23:13:16Z,MERGED,True,7,2,1,https://github.com/ailin-nemui,unblock theme elements when processing finished,1,[],https://github.com/irssi/irssi/pull/851,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/851,Fixes #850,Fixes #850,True,{}
irssi/irssi,https://github.com/irssi/irssi,852,2018-02-16T13:11:31Z,2018-03-10T12:11:40Z,2019-06-26T23:13:20Z,MERGED,True,6,2,2,https://github.com/dequis,Document second parameter (seek position) of /cat command,1,[],https://github.com/irssi/irssi/pull/852,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/852,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,852,2018-02-16T13:11:31Z,2018-03-10T12:11:40Z,2019-06-26T23:13:20Z,MERGED,True,6,2,2,https://github.com/dequis,Document second parameter (seek position) of /cat command,1,[],https://github.com/irssi/irssi/pull/852,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/852#issuecomment-366231462,,I wonder if this should really be documented xD,True,{}
irssi/irssi,https://github.com/irssi/irssi,852,2018-02-16T13:11:31Z,2018-03-10T12:11:40Z,2019-06-26T23:13:20Z,MERGED,True,6,2,2,https://github.com/dequis,Document second parameter (seek position) of /cat command,1,[],https://github.com/irssi/irssi/pull/852,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/852#issuecomment-366231840,,Hm. I didn't stop to think if I should.,True,{}
irssi/irssi,https://github.com/irssi/irssi,852,2018-02-16T13:11:31Z,2018-03-10T12:11:40Z,2019-06-26T23:13:20Z,MERGED,True,6,2,2,https://github.com/dequis,Document second parameter (seek position) of /cat command,1,[],https://github.com/irssi/irssi/pull/852,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/852#issuecomment-366232335,,"it's certainly an odd secret flag, but otherwise lgtm, feel free to merge",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,1,https://github.com/irssi/irssi/pull/854,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",True,"{'THUMBS_UP': ['https://github.com/anarcat', 'https://github.com/wilhelmy', 'https://github.com/jvoisin', 'https://github.com/geor-g', 'https://github.com/claucece']}"
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,2,https://github.com/irssi/irssi/pull/854#issuecomment-368222505,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",I'm adding fixup commits when I'm fixing issues that is spotted during review. Let's make sure that we rebase this before it lands - also to clean up some of the intermediate Travis CI commits.,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/micah,3,https://github.com/irssi/irssi/pull/854#issuecomment-368345994,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","I just compiled this and have been running it, and it seems to be functioning well. I had to remember how to turn on the status bar (/statusbar window add otr), but so far so good!",True,"{'HEART': ['https://github.com/ahf'], 'THUMBS_UP': ['https://github.com/anarcat']}"
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/josephbisch,4,https://github.com/irssi/irssi/pull/854#issuecomment-368384562,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","Start irssi
/otr authabort

ASAN:DEADLYSIGNAL
=================================================================
==1224==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x5564927cec5e bp 0x7fff414afaa0 sp 0x7fff414afa70 T0)
==1224==The signal is caused by a READ memory access.
==1224==Hint: address points to the zero page.
    #0 0x5564927cec5d in cmd_params_free /home/joseph/irssi-otr/irssi/src/core/commands.c:786:19
    #1 0x55649286c78d in cmd_otr_authabort /home/joseph/irssi-otr/irssi/src/otr/otr-fe.c:204:3
    #2 0x556492821760 in signal_emit_real /home/joseph/irssi-otr/irssi/src/core/signals.c:242:3
    #3 0x556492820e30 in signal_emit /home/joseph/irssi-otr/irssi/src/core/signals.c:286:3
    #4 0x5564927c9dd8 in command_runsub /home/joseph/irssi-otr/irssi/src/core/commands.c:329:7
    #5 0x55649286b3f7 in cmd_otr /home/joseph/irssi-otr/irssi/src/otr/otr-fe.c:41:2
    #6 0x556492821760 in signal_emit_real /home/joseph/irssi-otr/irssi/src/core/signals.c:242:3
    #7 0x556492820e30 in signal_emit /home/joseph/irssi-otr/irssi/src/core/signals.c:286:3
    #8 0x5564927d0781 in parse_command /home/joseph/irssi-otr/irssi/src/core/commands.c:907:14
    #9 0x5564927cf514 in event_command /home/joseph/irssi-otr/irssi/src/core/commands.c:953:2
    #10 0x556492821760 in signal_emit_real /home/joseph/irssi-otr/irssi/src/core/signals.c:242:3
    #11 0x556492820e30 in signal_emit /home/joseph/irssi-otr/irssi/src/core/signals.c:286:3
    #12 0x55649262fd52 in key_send_line /home/joseph/irssi-otr/irssi/src/fe-text/gui-readline.c:503:3
    #13 0x556492799832 in event_input /home/joseph/irssi-otr/irssi/src/irc/core/channel-events.c:377:2
    #14 0x556492821760 in signal_emit_real /home/joseph/irssi-otr/irssi/src/core/signals.c:242:3
    #15 0x556492820e30 in signal_emit /home/joseph/irssi-otr/irssi/src/core/signals.c:286:3
    #16 0x5564927465fa in irc_server_event /home/joseph/irssi-otr/irssi/src/irc/core/irc.c:338:7
    #17 0x556492821760 in signal_emit_real /home/joseph/irssi-otr/irssi/src/core/signals.c:242:3
    #18 0x556492822007 in signal_emit_id /home/joseph/irssi-otr/irssi/src/core/signals.c:304:3
    #19 0x556492746a92 in irc_parse_incoming_line /home/joseph/irssi-otr/irssi/src/irc/core/irc.c:392:3
    #20 0x556492821760 in signal_emit_real /home/joseph/irssi-otr/irssi/src/core/signals.c:242:3
    #21 0x556492822007 in signal_emit_id /home/joseph/irssi-otr/irssi/src/core/signals.c:304:3
    #22 0x556492746e87 in irc_parse_incoming /home/joseph/irssi-otr/irssi/src/irc/core/irc.c:413:3
    #23 0x5564927e5e04 in irssi_io_invoke /home/joseph/irssi-otr/irssi/src/core/misc.c:51:3
    #24 0x7f549bbdd0bd in g_main_context_dispatch (/usr/lib/libglib-2.0.so.0+0x6b0bd)
    #25 0x7f549bbdef68  (/usr/lib/libglib-2.0.so.0+0x6cf68)
    #26 0x7f549bbdefad in g_main_context_iteration (/usr/lib/libglib-2.0.so.0+0x6cfad)
    #27 0x556492689773 in main /home/joseph/irssi-otr/irssi/src/fe-text/irssi.c:346:3
    #28 0x7f549aaa8f69 in __libc_start_main (/usr/lib/libc.so.6+0x20f69)
    #29 0x556492520fe9 in _start (/usr/local/bin/irssi+0x113fe9)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /home/joseph/irssi-otr/irssi/src/core/commands.c:786:19 in cmd_params_free
==1224==ABORTING",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/854#issuecomment-368386278,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","re: the /otr authabort error above - cmd_param_error is an interesting one, looks like it assumes there's a variable called free_arg written by cmd_get_params(data, &free_arg, ...), and in this case that isn't used, and it's set to NULL. Fix would be to just s/cmd_param_error/cmd_return_error/ in cmd_otr_authabort",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/854#issuecomment-368390676,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","Hah, got you a fun one! A crash on /otr init but with a twist.
My preferred ircd for testing is bitlbee (of course) with a local prosody xmpp server with two accounts, test1 and test2. I also have the jabber xmlconsole open, which shows all incoming and outgoing messages in another irc query window. You can see where this is going.

Remove ~/.irssi/otr
Connect and identify to bitlbee
/query test1
/otr init
Crash.

Thread 1 received signal SIGSEGV, Segmentation fault.
0x0000562936fbbd05 in read_key_gen_status (worker=0x5629385ed0d0, pipe=0x5629386017b0) at key.c:177
177                     err = otrl_privkey_read(key_gen_state.ustate->otr_state, key_gen_state.key_file_path);
(rr) bt
#0  0x0000562936fbbd05 in read_key_gen_status (worker=0x5629385ed0d0, pipe=0x5629386017b0) at key.c:177
#1  0x0000562936f99fad in irssi_io_invoke (source=<optimized out>, condition=<optimized out>, data=<optimized out>) at misc.c:51
#2  0x00007fe30c73bca6 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0
#3  0x00007fe30c73c081 in ?? () from /usr/lib/libglib-2.0.so.0
#4  0x00007fe30c73c10e in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#5  0x0000562936f21017 in main (argc=<optimized out>, argv=<optimized out>) at irssi.c:346
(rr) p key_gen_state
$5 = {ustate = 0x0, account_name = 0x0, key_file_path = 0x0, status = KEY_GEN_FINISHED, gcry_error = 0}

The keygen state is reset but it says finished.
Doing some time travel, writes to the keygen state in order. First:
Thread 1 hit Hardware watchpoint 1: -location *0x56293720dce0

Old value = 0
New value = 945640416
key_gen_run (ustate=0x5629385d53e0, account_name=<optimized out>) at key.c:219
219             key_gen_state.key_file_path = file_path_build(OTR_KEYFILE);
(rr) bt
#0  key_gen_run (ustate=0x5629385d53e0, account_name=<optimized out>) at key.c:219
#1  0x00007fe30d5567ba in otrl_message_receiving () from /usr/lib/libotr.so.5
#2  0x0000562936fbb528 in otr_receive (server=server@entry=0x5629385e3db0,
    msg=msg@entry=0x56293846d400 ""TX: ?OTR:AAMK9Jyy1vScstYAAADAhPz7HGbBVjP/aPYcX4jAxTmFy86I6B+lf/2Fn4PuXLanm8F4sW0lmjegf04CU9yNQMccqLEGb4iCgunzSMg5ibPTPo9gwq+z5v35+QrMee3uCDvAiQK0K8bFHbuSlWDDgnLzLvdJ6WWl9cA3fQfL8/HS0B+WdjTOepJcbcAQDCVFljJ7zJtwfSbpF1MWPpcaBoH8mAiVBQcxGlVZwFrnJvAqA9TWHXoJuLgrltCKibFSfV6gUzq/kE43nUV9Tb9j."", from=from@entry=0x5629385f5a51 ""_xmlconsole"", new_msg=new_msg@entry=0x7ffc96fe8560) at otr.c:733
#3  0x0000562936fb8e06 in sig_message_private (server=0x5629385e3db0,
    msg=0x56293846d400 ""TX: ?OTR:AAMK9Jyy1vScstYAAADAhPz7HGbBVjP/aPYcX4jAxTmFy86I6B+lf/2Fn4PuXLanm8F4sW0lmjegf04CU9yNQMccqLEGb4iCgunzSMg5ibPTPo9gwq+z5v35+QrMee3uCDvAiQK0K8bFHbuSlWDDgnLzLvdJ6WWl9cA3fQfL8/HS0B+WdjTOepJcbcAQDCVFljJ7zJtwfSbpF1MWPpcaBoH8mAiVBQcxGlVZwFrnJvAqA9TWHXoJuLgrltCKibFSfV6gUzq/kE43nUV9Tb9j."", nick=0x5629385f5a51 ""_xmlconsole"", address=0x5629385f5a5d ""_xmlconsole@test1"") at module.c:85
#4  0x0000562936fa89f6 in signal_emit_real (rec=rec@entry=<Signal 24>, params=params@entry=5, va=va@entry=0x7ffc96fe8620, first_hook=<optimized out>) at signals.c:242
#5  0x0000562936fa8f4d in signal_emit (signal=<optimized out>, params=params@entry=5) at signals.c:286
#6  0x0000562936f40568 in event_privmsg (server=0x5629385e3db0, data=<optimized out>, nick=0x5629385f5a51 ""_xmlconsole"", addr=0x5629385f5a5d ""_xmlconsole@test1"") at fe-events.c:68
#7  0x0000562936fa89f6 in signal_emit_real (rec=rec@entry=<Signal 142>, params=params@entry=4, va=va@entry=0x7ffc96fe8810, first_hook=<optimized out>) at signals.c:242
#8  0x0000562936fa8f4d in signal_emit (signal=<optimized out>, params=params@entry=4) at signals.c:286
#9  0x0000562936f6e8c8 in irc_server_event (server=0x5629385e3db0,
    line=0x5629385f5a6f ""PRIVMSG dx|prosody :TX: ?OTR:AAMK9Jyy1vScstYAAADAhPz7HGbBVjP/aPYcX4jAxTmFy86I6B+lf/2Fn4PuXLanm8F4sW0lmjegf04CU9yNQMccqLEGb4iCgunzSMg5ibPTPo9gwq+z5v35+QrMee3uCDvAiQK0K8bFHbuSlWDDgnLzLvdJ6WWl9cA3fQfL8/HS0B+WdjTOepJcbcAQDCVFljJ7zJtwfSbpF1MWPpcaBoH8mAiVBQcxGlVZwFrnJvAqA9TWHXoJuLgrltCKibFSfV6gUzq/kE43nUV9Tb9j."", nick=0x5629385f5a51 ""_xmlconsole"", address=0x5629385f5a5d ""_xmlconsole@test1"") at irc.c:338
#10 0x0000562936fa89f6 in signal_emit_real (rec=rec@entry=<Signal 95>, params=params@entry=4, va=va@entry=0x7ffc96fe89d0, first_hook=<optimized out>) at signals.c:242
#11 0x0000562936fa9025 in signal_emit_id (signal_id=<optimized out>, params=4) at signals.c:304
#12 0x0000562936fa89f6 in signal_emit_real (rec=rec@entry=<Signal 203>, params=params@entry=2, va=va@entry=0x7ffc96fe8b40, first_hook=<optimized out>) at signals.c:242
#13 0x0000562936fa9025 in signal_emit_id (signal_id=<optimized out>, params=params@entry=2) at signals.c:304
#14 0x0000562936f6ea25 in irc_parse_incoming (server=0x5629385e3db0) at irc.c:413
#15 0x0000562936f99fad in irssi_io_invoke (source=<optimized out>, condition=<optimized out>, data=<optimized out>) at misc.c:51
#16 0x00007fe30c73bca6 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0
#17 0x00007fe30c73c081 in ?? () from /usr/lib/libglib-2.0.so.0
#18 0x00007fe30c73c10e in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#19 0x0000562936f21017 in main (argc=<optimized out>, argv=<optimized out>) at irssi.c:346

The xmlconsole is clearly messing things up.
Then it's reset:
(rr) c
Continuing.

Thread 1 hit Hardware watchpoint 1: -location *0x56293720dce0

Old value = 945640416
New value = 0
0x0000562936fbbbb1 in reset_key_gen_state () at key.c:128
128             memset(&key_gen_state, 0, sizeof(key_gen_state));
(rr) bt
#0  0x0000562936fbbbb1 in reset_key_gen_state () at key.c:128
#1  0x0000562936fbbd50 in read_key_gen_status (worker=0x5629385fd270, pipe=0x5629385f4400) at key.c:190
#2  0x0000562936f99fad in irssi_io_invoke (source=<optimized out>, condition=<optimized out>, data=<optimized out>) at misc.c:51
#3  0x00007fe30c73bca6 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0
#4  0x00007fe30c73c081 in ?? () from /usr/lib/libglib-2.0.so.0
#5  0x00007fe30c73c10e in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#6  0x0000562936f21017 in main (argc=<optimized out>, argv=<optimized out>) at irssi.c:346

Then it gets another irssi_io_invoke with another worker, read_key_gen_status sets the status to finished but the most of the state is wiped already and it crashes.
(rr) c
Continuing.

Thread 1 received signal SIGSEGV, Segmentation fault.
0x0000562936fbbd05 in read_key_gen_status (worker=0x5629385ed0d0, pipe=0x5629386017b0) at key.c:177
177                     err = otrl_privkey_read(key_gen_state.ustate->otr_state, key_gen_state.key_file_path);
(rr) bt
#0  0x0000562936fbbd05 in read_key_gen_status (worker=0x5629385ed0d0, pipe=0x5629386017b0) at key.c:177
#1  0x0000562936f99fad in irssi_io_invoke (source=<optimized out>, condition=<optimized out>, data=<optimized out>) at misc.c:51
#2  0x00007fe30c73bca6 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0
#3  0x00007fe30c73c081 in ?? () from /usr/lib/libglib-2.0.so.0
#4  0x00007fe30c73c10e in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#5  0x0000562936f21017 in main (argc=<optimized out>, argv=<optimized out>) at irssi.c:346

The status window shows:
01:53 -!- Irssi: OTR key generation for localhost started
01:53 -!- Irssi: OTR key generation for localhost started
01:53 -!- Irssi: OTR key generation for localhost is still in progress
01:53 -!- Irssi: OTR key generation for localhost is still in progress
01:53 -!- Irssi: OTR key generation for localhost completed

Double keygen, first one completes, second one crashes.
After the initial keygen is done separately, having the xmlconsole open doesn't hurt as much. It still processes messages that it shouldn't and probably sends garbage to the xmpp server too, but that's more or less what you'd expect from receiving random OTR tagged messages in a query window.",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/854#issuecomment-368435950,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","as for the build system, can we default to module build?",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,8,https://github.com/irssi/irssi/pull/854#issuecomment-368666122,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",@ailin-nemui could you check if my latest patch does what you are thinking of when it comes to building as module by default?,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,9,https://github.com/irssi/irssi/pull/854#issuecomment-368667710,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","I think i have fixed the various issues pointed out by @dequis now except for the crash in key generation.
Do you run on a system where key generation is slow? libotr uses /dev/random and not /dev/urandom as entropy source, which means it's crazy slow on Linux. On a Linux with haveged or on other Unix platforms it would be harder to trigger that crash. Let me see what I can do about it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,10,https://github.com/irssi/irssi/pull/854#issuecomment-368667899,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",Still need to fix the documentation a bit.,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/dequis,11,https://github.com/irssi/irssi/pull/854#issuecomment-368749940,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","Key generation is fast enough, this is a desktop so i got plenty of entropy sources (when do we get to convince the libotr devs to use urandom btw?)
I think that what you actually need is to start two of them simultaneously, which can probably be done by receiving two otr messages from two different contacts at the same time. Or do the xmlconsole thing.",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,12,https://github.com/irssi/irssi/pull/854#issuecomment-368783429,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","Ah, makes sense. Let me see if I can reproduce this later today.",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/854#issuecomment-372475782,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",@ahf any updates here?,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,14,https://github.com/irssi/irssi/pull/854#issuecomment-373034133,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",We need to fix the README issues and the slightly odd crash issue that can happen in a very pathological case. Don't think there is any updates.,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,15,https://github.com/irssi/irssi/pull/854#issuecomment-373034354,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","For what it's worth I think we might as well merge this in and fix those two issues afterwards, but having more people than @dequis to review the code would be useful.",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ailin-nemui,16,https://github.com/irssi/irssi/pull/854#issuecomment-373293091,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","I can't even load the otr module, it doesn't seem to implement our ABI check function. Could you please test that this thing loads?",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,17,https://github.com/irssi/irssi/pull/854#issuecomment-373368495,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",Fixed in 8d07f52,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ailin-nemui,18,https://github.com/irssi/irssi/pull/854#issuecomment-373690651,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","can you please fix this bug:
/msg yourself hi

results in
-!- Irssi: critical privmsg_get_query: assertion 'nick != NULL' failed
-!- Irssi: critical query_find: assertion 'nick != NULL' failed
[msg()] hi",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/dequis,19,https://github.com/irssi/irssi/pull/854#issuecomment-377095338,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",Pushed b52cf10 fixing the xmlconsole double keygen thing from #854 (comment),True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/dequis,20,https://github.com/irssi/irssi/pull/854#issuecomment-377103475,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","Pushed dd7dc7c fixing the /msg yourself warnings and 7d7c697 fixing the same bug in a different place.
It was the ""message private"" signal missing one param in the documentation that was fixed by lemon in 0fe81ca (2016). As far as I can see that parameter has always been there.",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ailin-nemui,21,https://github.com/irssi/irssi/pull/854#issuecomment-377133132,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",nice,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,22,https://github.com/irssi/irssi/pull/854#issuecomment-377299222,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",The patches looks good to me!,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ailin-nemui,23,https://github.com/irssi/irssi/pull/854#issuecomment-377372665,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",@irssi/developers can we merge it then?,True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/dequis,24,https://github.com/irssi/irssi/pull/854#issuecomment-377391267,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!","One last thing, can we rename module.c to otr-module.c? (or something else with otr in the name)
It was a bit misleading when reading backtraces in gdb.",True,{}
irssi/irssi,https://github.com/irssi/irssi,854,2018-02-24T03:32:13Z,2018-03-31T11:04:36Z,2019-06-26T23:12:28Z,MERGED,True,3268,42,26,https://github.com/ahf,"OTR support, take 2",10,[],https://github.com/irssi/irssi/pull/854,https://github.com/ahf,25,https://github.com/irssi/irssi/pull/854#issuecomment-377396128,"This is a second attempt at #589 - this time the statusbar have been brought back to life and the code compiles with Travis CI.
If this is merged it will also fix #196
Test & discuss!",I think that's fine to do.,True,{}
irssi/irssi,https://github.com/irssi/irssi,855,2018-03-07T01:25:15Z,2018-03-07T06:33:10Z,2019-06-26T23:13:21Z,MERGED,True,21,15,4,https://github.com/ailin-nemui,run syncdocs.sh and syncscripts.sh,1,[],https://github.com/irssi/irssi/pull/855,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/855,"Sync startup howto to fd1ed2227d529a7ee00d6206caa871ee40c08b69
Sync scriptassist to (2003020806) 211cd515ec87cf9a5d893e97894c2e4b58952f19","Sync startup howto to fd1ed2227d529a7ee00d6206caa871ee40c08b69
Sync scriptassist to (2003020806) 211cd515ec87cf9a5d893e97894c2e4b58952f19",True,{}
irssi/irssi,https://github.com/irssi/irssi,857,2018-03-08T19:35:35Z,2018-03-10T12:11:10Z,2019-06-26T23:13:11Z,MERGED,True,15,5,2,https://github.com/LemonBoy,Compare channels/networks fields case-insensitively,2,[],https://github.com/irssi/irssi/pull/857,https://github.com/LemonBoy,1,https://github.com/irssi/irssi/pull/857,Fixes #856,Fixes #856,True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/858,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.","New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.",True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/858#issuecomment-372137063,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.","@dequis not sure about additem subcommand, thoughts?",True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/858#issuecomment-372137761,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.","Before reading too much: hell yeah we needed this, the statusbar commands suck",True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/858#issuecomment-373294912,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.",@irssi/developers if there isn't any further comment I suggest this for merging,True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/858#issuecomment-374130143,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.",thanks for review,True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/858#issuecomment-374134391,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.",any suggestion as to where/which position to mention the change in syntax?,True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/858#issuecomment-374250980,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.","I was thinking a single-sentence mention in the Description section of the /help, without going in detail",True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/858#issuecomment-374681877,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.","@dequis wow that was more complicated than I thought. it could need another look. Basically the old methods were hard-wired to always create and copy the status bar items, so I had to change that with tests for the internal/default config and only copying if we actually are about to change something",True,{}
irssi/irssi,https://github.com/irssi/irssi,858,2018-03-11T18:21:18Z,2018-04-02T06:36:54Z,2019-06-26T23:07:49Z,MERGED,True,421,207,5,https://github.com/ailin-nemui,change the statusbar commands so that no accidential status bars are created,7,"['needs review', 'auto-merge']",https://github.com/irssi/irssi/pull/858,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/858#issuecomment-376124339,"New command suggestion:
Syntax
STATUSBAR ADD|MODIFY [-disable | -nodisable] [-type window|root] [-placement top|bottom] [-position #] [-visible always|active|inactive] <statusbar>

STATUSBAR RESET <statusbar>

STATUSBAR ADDITEM|MODIFYITEM [-before | -after <item>] [-priority #] [-alignment left|right] <item> <statusbar>

STATUSBAR REMOVEITEM <item> <statusbar>

STATUSBAR INFO <statusbar>
Parameters









ADD:
Adds a statusbar to the list of statusbars.


MODIFY:
Modifies the configuration of a statusbar.


RESET:
Restores the default statusbar configuration.


ADDITEM:
Adds an item to the specified statusbar. It can be set to appear before/after another item and left/right aligned to a specified position on the screen.


MODIFYITEM:
Changes an item position inside a bar.


REMOVEITEM:
Removes an item from the specified statusbar.


INFO:
List the current details and items of the specified statusbar.












-disable:
Removes a statusbar from the list.


-type:
Sets the type of statusbar, for each split window or only for the current root screen.


-placement:
Sets the placement of the statusbar, either at the top or the bottom of the screen.


-position:
Sets the position of the statusbar. Represented as a number, with 0 implying the first position.


-visible:
Sets the visibility of the statusbar or item. If set to always it is visible on all screens, otherwise if set to inactive or active then it is only visible on inactive or active screens, respectively.


-before:
This item is added before the other item.


-after:
This item is added after the other item.


-priority:
When the statusbar items overflow, the item with the lowest priority is removed first


-alignment:
Display the item on the right side.



Where statusbar refers to the name of the statusbar; if no argument is
given, the entire list of statusbars will be displayed.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,859,2018-03-12T14:44:00Z,2018-03-19T15:23:29Z,2019-06-26T23:13:09Z,MERGED,True,51,6,2,https://github.com/ailin-nemui,make default keybinds deletable,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/859,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/859,this should fix #507,this should fix #507,True,{}
irssi/irssi,https://github.com/irssi/irssi,859,2018-03-12T14:44:00Z,2018-03-19T15:23:29Z,2019-06-26T23:13:09Z,MERGED,True,51,6,2,https://github.com/ailin-nemui,make default keybinds deletable,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/859,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/859#issuecomment-372379996,this should fix #507,@peterleurs if you want you can test it :),True,{}
irssi/irssi,https://github.com/irssi/irssi,859,2018-03-12T14:44:00Z,2018-03-19T15:23:29Z,2019-06-26T23:13:09Z,MERGED,True,51,6,2,https://github.com/ailin-nemui,make default keybinds deletable,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/859,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/859#issuecomment-373295217,this should fix #507,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,859,2018-03-12T14:44:00Z,2018-03-19T15:23:29Z,2019-06-26T23:13:09Z,MERGED,True,51,6,2,https://github.com/ailin-nemui,make default keybinds deletable,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/859,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/859#issuecomment-373386684,this should fix #507,"Hm, this changed a bit since i looked at it, what's new, the -reset thing?",True,{}
irssi/irssi,https://github.com/irssi/irssi,859,2018-03-12T14:44:00Z,2018-03-19T15:23:29Z,2019-06-26T23:13:09Z,MERGED,True,51,6,2,https://github.com/ailin-nemui,make default keybinds deletable,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/859,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/859#issuecomment-373436419,this should fix #507,"I thought it might be useful to reset something to the default config (before, deleting would mean it was reset to default state after restart)",True,{}
irssi/irssi,https://github.com/irssi/irssi,859,2018-03-12T14:44:00Z,2018-03-19T15:23:29Z,2019-06-26T23:13:09Z,MERGED,True,51,6,2,https://github.com/ailin-nemui,make default keybinds deletable,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/859,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/859#issuecomment-374098087,this should fix #507,"Tested, looks good, docs/help/in/bind.in needs a mention of -reset",True,{}
irssi/irssi,https://github.com/irssi/irssi,859,2018-03-12T14:44:00Z,2018-03-19T15:23:29Z,2019-06-26T23:13:09Z,MERGED,True,51,6,2,https://github.com/ailin-nemui,make default keybinds deletable,2,"['needs review', 'needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/859,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/859#issuecomment-374130254,this should fix #507,thanks for review,True,{}
irssi/irssi,https://github.com/irssi/irssi,861,2018-03-15T09:06:55Z,2018-03-15T16:23:41Z,2019-06-26T23:13:30Z,MERGED,True,0,2,1,https://github.com/ailin-nemui,in fact hidden levels should not be re-set when you run /set,1,[],https://github.com/irssi/irssi/pull/861,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/861,reported by @vague666,reported by @vague666,True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/862,reported by @vague666,reported by @vague666,True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/862#issuecomment-374566462,reported by @vague666,"@irssi/developers
obscure textbuffer stuff only triggered from scripts",True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/862#issuecomment-374611319,reported by @vague666,What's the reproducer?,True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/862#issuecomment-374633059,reported by @vague666,"$window->gui_printtext_after(undef, MSGLEVEL_CLIENTNOTICE, ""xxx"")
seen in similar fashion in buf.pl",True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/862#issuecomment-374938265,reported by @vague666,"The fix helped but I am still having problems with this code:
https://vague.se/pastes/buf.pl
If I switch the print to gui_printtext_after I see the screen update with a bunch of text and then it's cleared, with print the text stays visible on screen, I'd like to know if any of you can reproduce the behavior",True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/862#issuecomment-374953817,reported by @vague666,did you try scrolling up?,True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/vague666,7,https://github.com/irssi/irssi/pull/862#issuecomment-374954307,reported by @vague666,"Can't remember, I'll try it when I get home",True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/vague666,8,https://github.com/irssi/irssi/pull/862#issuecomment-375060608,reported by @vague666,"The view is actually scrolled up or whatcha-ma-call it
How the screen is after /upgrade:
https://vague.se/pastes/2018-03-21_19:53:03_1920x1080_scrot.png
after pgup:
https://vague.se/pastes/2018-03-21_19:53:41_1920x1080_scrot.png",True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/vague666,9,https://github.com/irssi/irssi/pull/862#issuecomment-375086510,reported by @vague666,"Not sure if that behavior is the desired one, I would expect =Upgrade= to be visible and not scrolled up",True,{}
irssi/irssi,https://github.com/irssi/irssi,862,2018-03-17T12:36:52Z,2018-03-26T10:46:05Z,2019-06-26T23:13:04Z,MERGED,True,30,15,2,https://github.com/ailin-nemui,fix a crash when trying to append to a NULL line,2,['auto-merge'],https://github.com/irssi/irssi/pull/862,https://github.com/vague666,10,https://github.com/irssi/irssi/pull/862#issuecomment-375090272,reported by @vague666,"Maybe I don't understand how gui_printtext_after works? If I think a bit about it, it looks like the text is printed from bottom up, is there a function that prints top to bottom?",True,{}
irssi/irssi,https://github.com/irssi/irssi,865,2018-03-23T20:40:11Z,2018-03-27T04:47:26Z,2019-06-26T23:13:04Z,MERGED,True,4,2,1,https://github.com/woohooyeah,fix build with LibreSSL 2.7.0/2.7.1,2,['auto-merge'],https://github.com/irssi/irssi/pull/865,https://github.com/woohooyeah,1,https://github.com/irssi/irssi/pull/865,"Hi,
This PR fixes issue: build with LibreSSL 2.7.0 fails #864","Hi,
This PR fixes issue: build with LibreSSL 2.7.0 fails #864",True,{}
irssi/irssi,https://github.com/irssi/irssi,865,2018-03-23T20:40:11Z,2018-03-27T04:47:26Z,2019-06-26T23:13:04Z,MERGED,True,4,2,1,https://github.com/woohooyeah,fix build with LibreSSL 2.7.0/2.7.1,2,['auto-merge'],https://github.com/irssi/irssi/pull/865,https://github.com/woohooyeah,2,https://github.com/irssi/irssi/pull/865#issuecomment-375806066,"Hi,
This PR fixes issue: build with LibreSSL 2.7.0 fails #864","A possible testing scenario is:
mkdir -p ~/Temp213471 && cd ~/Temp213471
wget https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-2.7.0.tar.gz
tar zxvf libressl-2.7.0.tar.gz
cd libressl-2.7.0
mkdir build && ./configure --prefix=$PWD/build --exec-prefix=$PWD/build
make -j$(nproc) && make install
cd ~/Temp213471
git clone https://github.com/irssi/irssi.git
cd irssi
./autogen.sh
PKG_CONFIG_PATH=../libressl-2.7.0/build/lib/pkgconfig ./configure
make -j$(nproc)

Build fails.
make clean
wget https://github.com/irssi/irssi/commit/25a44dacf4114f33f3a887f358c02f4fd9938427.patch -O 001-libressl-fix.patch
patch -p1 < 001-libressl-fix.patch
make -j$(nproc)

Build succeeds.",True,{}
irssi/irssi,https://github.com/irssi/irssi,865,2018-03-23T20:40:11Z,2018-03-27T04:47:26Z,2019-06-26T23:13:04Z,MERGED,True,4,2,1,https://github.com/woohooyeah,fix build with LibreSSL 2.7.0/2.7.1,2,['auto-merge'],https://github.com/irssi/irssi/pull/865,https://github.com/woohooyeah,3,https://github.com/irssi/irssi/pull/865#issuecomment-375891681,"Hi,
This PR fixes issue: build with LibreSSL 2.7.0 fails #864","Also tested with LibreSSL 2.7.1, confirmed working.",True,{}
irssi/irssi,https://github.com/irssi/irssi,865,2018-03-23T20:40:11Z,2018-03-27T04:47:26Z,2019-06-26T23:13:04Z,MERGED,True,4,2,1,https://github.com/woohooyeah,fix build with LibreSSL 2.7.0/2.7.1,2,['auto-merge'],https://github.com/irssi/irssi/pull/865,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/865#issuecomment-376124037,"Hi,
This PR fixes issue: build with LibreSSL 2.7.0 fails #864",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,866,2018-03-29T21:24:41Z,2018-04-06T08:50:59Z,2019-06-26T23:13:03Z,MERGED,True,16,0,2,https://github.com/ailin-nemui,reconnect lookup_servers also,1,['auto-merge'],https://github.com/irssi/irssi/pull/866,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/866,"This is a simple change which might fix #130
The lookup_servers are also disconnected if the lookup/SSL handshake doesn't succeed in time. I'm not perfectly sure if this is the master fix but it does seem to be an issue that servers can be stuck in lookup","This is a simple change which might fix #130
The lookup_servers are also disconnected if the lookup/SSL handshake doesn't succeed in time. I'm not perfectly sure if this is the master fix but it does seem to be an issue that servers can be stuck in lookup",True,{}
irssi/irssi,https://github.com/irssi/irssi,866,2018-03-29T21:24:41Z,2018-04-06T08:50:59Z,2019-06-26T23:13:03Z,MERGED,True,16,0,2,https://github.com/ailin-nemui,reconnect lookup_servers also,1,['auto-merge'],https://github.com/irssi/irssi/pull/866,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/866#issuecomment-377877179,"This is a simple change which might fix #130
The lookup_servers are also disconnected if the lookup/SSL handshake doesn't succeed in time. I'm not perfectly sure if this is the master fix but it does seem to be an issue that servers can be stuck in lookup",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,866,2018-03-29T21:24:41Z,2018-04-06T08:50:59Z,2019-06-26T23:13:03Z,MERGED,True,16,0,2,https://github.com/ailin-nemui,reconnect lookup_servers also,1,['auto-merge'],https://github.com/irssi/irssi/pull/866,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/866#issuecomment-378276718,"This is a simple change which might fix #130
The lookup_servers are also disconnected if the lookup/SSL handshake doesn't succeed in time. I'm not perfectly sure if this is the master fix but it does seem to be an issue that servers can be stuck in lookup","LGTM, the error message could be slightly more informative than just ""Timeout"" but I'm just nitpicking.
The commit message, on the other hand, is horrendous since it doesn't explain what it fixes nor how it works nor it links the related ticket.",True,{}
irssi/irssi,https://github.com/irssi/irssi,866,2018-03-29T21:24:41Z,2018-04-06T08:50:59Z,2019-06-26T23:13:03Z,MERGED,True,16,0,2,https://github.com/ailin-nemui,reconnect lookup_servers also,1,['auto-merge'],https://github.com/irssi/irssi/pull/866,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/866#issuecomment-378721726,"This is a simple change which might fix #130
The lookup_servers are also disconnected if the lookup/SSL handshake doesn't succeed in time. I'm not perfectly sure if this is the master fix but it does seem to be an issue that servers can be stuck in lookup",Thanks for Review,True,{}
irssi/irssi,https://github.com/irssi/irssi,868,2018-04-02T15:36:36Z,2018-04-03T07:10:17Z,2019-06-26T23:13:21Z,MERGED,True,143,0,1,https://github.com/dequis,Add libgcrypt.m4 so autogen doesn't require libgcrypt-dev,1,[],https://github.com/irssi/irssi/pull/868,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/868,"libgcrypt is silly and doesn't use pkg-config. License text looks MITish
Tested with a docker container based on debian:buster-slim + apt-get build-dep irssi
Fixes #867
See also google/oss-fuzz#1292","libgcrypt is silly and doesn't use pkg-config. License text looks MITish
Tested with a docker container based on debian:buster-slim + apt-get build-dep irssi
Fixes #867
See also google/oss-fuzz#1292",True,{}
irssi/irssi,https://github.com/irssi/irssi,869,2018-04-08T00:49:31Z,2018-04-11T22:25:26Z,2019-10-31T21:07:51Z,MERGED,True,2,0,1,https://github.com/dequis,signals.txt: add missing 'server cap new|delete' signals,1,['auto-merge'],https://github.com/irssi/irssi/pull/869,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/869,"Emitted by cap_emit_signal in irc/core/irc-cap.c, added as part of the
CAP 3.2 PR merged recentlyish.","Emitted by cap_emit_signal in irc/core/irc-cap.c, added as part of the
CAP 3.2 PR merged recentlyish.",True,{}
irssi/irssi,https://github.com/irssi/irssi,869,2018-04-08T00:49:31Z,2018-04-11T22:25:26Z,2019-10-31T21:07:51Z,MERGED,True,2,0,1,https://github.com/dequis,signals.txt: add missing 'server cap new|delete' signals,1,['auto-merge'],https://github.com/irssi/irssi/pull/869,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/869#issuecomment-379809988,"Emitted by cap_emit_signal in irc/core/irc-cap.c, added as part of the
CAP 3.2 PR merged recentlyish.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,870,2018-04-08T05:34:14Z,2018-04-24T11:58:04Z,2019-06-26T23:12:48Z,MERGED,True,116,3,7,https://github.com/dequis,Add fe-cap to show messages for CAP-related events in the UI ,2,['auto-merge'],https://github.com/irssi/irssi/pull/870,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/870,"Replaces cap.pl (the trimmed down cap_sasl.pl that only prints messages)
First commit adds a ""server cap req"" signal. It's not an incoming CAP REQ, it's an outgoing one. Suggestions of a better name welcome. It also won't catch CAP REQ sent manually by users or by scripts like cap-extjoin.pl but IMO that's out of scope.
For bikeshedding: I didn't like the ""CLICAP"" in cap.pl (that term is not a thing anywhere in the protocol, just a very awkward way to say client capability) so I decided to look at other clients for inspiration.
cap.pl / cap_sasl.pl

-!- CLICAP: supported by server: sasl multi-prefix extended-join away-notify userhost-in-names
-!- CLICAP: requesting: multi-prefix
-!- CLICAP: now enabled: multi-prefix

This PR:

-!- Capabilities requested: multi-prefix
-!- Capabilities supported: sasl multi-prefix extended-join away-notify userhost-in-names
-!- Capabilities acknowledged: multi-prefix

weechat:

irc: client capability, server supports: sasl multi-prefix extended-join away-notify userhost-in-names
irc: client capability, requesting: away-notify multi-prefix extended-join userhost-in-names
irc: client capability, enabled: away-notify multi-prefix extended-join userhost-in-names

hexchat:

* Capabilities supported: sasl=PLAIN multi-prefix extended-join away-notify userhost-in-names
* Capabilities requested: multi-prefix extended-join away-notify userhost-in-names 
* Capabilities acknowledged: multi-prefix extended-join away-notify userhost-in-names

(test server is im.bitlbee.org)
I went with hexchat's wording, took CAP NEW from weechat, kept CAP LIST like cap.pl (matches weechat, hexchat just reuses CAP LS)
Closes #704","Replaces cap.pl (the trimmed down cap_sasl.pl that only prints messages)
First commit adds a ""server cap req"" signal. It's not an incoming CAP REQ, it's an outgoing one. Suggestions of a better name welcome. It also won't catch CAP REQ sent manually by users or by scripts like cap-extjoin.pl but IMO that's out of scope.
For bikeshedding: I didn't like the ""CLICAP"" in cap.pl (that term is not a thing anywhere in the protocol, just a very awkward way to say client capability) so I decided to look at other clients for inspiration.
cap.pl / cap_sasl.pl

-!- CLICAP: supported by server: sasl multi-prefix extended-join away-notify userhost-in-names
-!- CLICAP: requesting: multi-prefix
-!- CLICAP: now enabled: multi-prefix

This PR:

-!- Capabilities requested: multi-prefix
-!- Capabilities supported: sasl multi-prefix extended-join away-notify userhost-in-names
-!- Capabilities acknowledged: multi-prefix

weechat:

irc: client capability, server supports: sasl multi-prefix extended-join away-notify userhost-in-names
irc: client capability, requesting: away-notify multi-prefix extended-join userhost-in-names
irc: client capability, enabled: away-notify multi-prefix extended-join userhost-in-names

hexchat:

* Capabilities supported: sasl=PLAIN multi-prefix extended-join away-notify userhost-in-names
* Capabilities requested: multi-prefix extended-join away-notify userhost-in-names 
* Capabilities acknowledged: multi-prefix extended-join away-notify userhost-in-names

(test server is im.bitlbee.org)
I went with hexchat's wording, took CAP NEW from weechat, kept CAP LIST like cap.pl (matches weechat, hexchat just reuses CAP LS)
Closes #704",True,{'THUMBS_UP': ['https://github.com/ailin-nemui']}
irssi/irssi,https://github.com/irssi/irssi,870,2018-04-08T05:34:14Z,2018-04-24T11:58:04Z,2019-06-26T23:12:48Z,MERGED,True,116,3,7,https://github.com/dequis,Add fe-cap to show messages for CAP-related events in the UI ,2,['auto-merge'],https://github.com/irssi/irssi/pull/870,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/870#issuecomment-381221466,"Replaces cap.pl (the trimmed down cap_sasl.pl that only prints messages)
First commit adds a ""server cap req"" signal. It's not an incoming CAP REQ, it's an outgoing one. Suggestions of a better name welcome. It also won't catch CAP REQ sent manually by users or by scripts like cap-extjoin.pl but IMO that's out of scope.
For bikeshedding: I didn't like the ""CLICAP"" in cap.pl (that term is not a thing anywhere in the protocol, just a very awkward way to say client capability) so I decided to look at other clients for inspiration.
cap.pl / cap_sasl.pl

-!- CLICAP: supported by server: sasl multi-prefix extended-join away-notify userhost-in-names
-!- CLICAP: requesting: multi-prefix
-!- CLICAP: now enabled: multi-prefix

This PR:

-!- Capabilities requested: multi-prefix
-!- Capabilities supported: sasl multi-prefix extended-join away-notify userhost-in-names
-!- Capabilities acknowledged: multi-prefix

weechat:

irc: client capability, server supports: sasl multi-prefix extended-join away-notify userhost-in-names
irc: client capability, requesting: away-notify multi-prefix extended-join userhost-in-names
irc: client capability, enabled: away-notify multi-prefix extended-join userhost-in-names

hexchat:

* Capabilities supported: sasl=PLAIN multi-prefix extended-join away-notify userhost-in-names
* Capabilities requested: multi-prefix extended-join away-notify userhost-in-names 
* Capabilities acknowledged: multi-prefix extended-join away-notify userhost-in-names

(test server is im.bitlbee.org)
I went with hexchat's wording, took CAP NEW from weechat, kept CAP LIST like cap.pl (matches weechat, hexchat just reuses CAP LS)
Closes #704",other suggestions for the signal name?,True,{}
irssi/irssi,https://github.com/irssi/irssi,870,2018-04-08T05:34:14Z,2018-04-24T11:58:04Z,2019-06-26T23:12:48Z,MERGED,True,116,3,7,https://github.com/dequis,Add fe-cap to show messages for CAP-related events in the UI ,2,['auto-merge'],https://github.com/irssi/irssi/pull/870,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/870#issuecomment-381369775,"Replaces cap.pl (the trimmed down cap_sasl.pl that only prints messages)
First commit adds a ""server cap req"" signal. It's not an incoming CAP REQ, it's an outgoing one. Suggestions of a better name welcome. It also won't catch CAP REQ sent manually by users or by scripts like cap-extjoin.pl but IMO that's out of scope.
For bikeshedding: I didn't like the ""CLICAP"" in cap.pl (that term is not a thing anywhere in the protocol, just a very awkward way to say client capability) so I decided to look at other clients for inspiration.
cap.pl / cap_sasl.pl

-!- CLICAP: supported by server: sasl multi-prefix extended-join away-notify userhost-in-names
-!- CLICAP: requesting: multi-prefix
-!- CLICAP: now enabled: multi-prefix

This PR:

-!- Capabilities requested: multi-prefix
-!- Capabilities supported: sasl multi-prefix extended-join away-notify userhost-in-names
-!- Capabilities acknowledged: multi-prefix

weechat:

irc: client capability, server supports: sasl multi-prefix extended-join away-notify userhost-in-names
irc: client capability, requesting: away-notify multi-prefix extended-join userhost-in-names
irc: client capability, enabled: away-notify multi-prefix extended-join userhost-in-names

hexchat:

* Capabilities supported: sasl=PLAIN multi-prefix extended-join away-notify userhost-in-names
* Capabilities requested: multi-prefix extended-join away-notify userhost-in-names 
* Capabilities acknowledged: multi-prefix extended-join away-notify userhost-in-names

(test server is im.bitlbee.org)
I went with hexchat's wording, took CAP NEW from weechat, kept CAP LIST like cap.pl (matches weechat, hexchat just reuses CAP LS)
Closes #704","Been looking, not much prior art of emitting signals directly related to outgoing irc messages.

server sendmsg
dcc request send
server cap end (also client-to-server-only in the cap spec)

Last one has been there since 2015 (released in 0.8.18) so ehhhh. Maybe server cap req is fine...",True,{}
irssi/irssi,https://github.com/irssi/irssi,870,2018-04-08T05:34:14Z,2018-04-24T11:58:04Z,2019-06-26T23:12:48Z,MERGED,True,116,3,7,https://github.com/dequis,Add fe-cap to show messages for CAP-related events in the UI ,2,['auto-merge'],https://github.com/irssi/irssi/pull/870,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/870#issuecomment-381715885,"Replaces cap.pl (the trimmed down cap_sasl.pl that only prints messages)
First commit adds a ""server cap req"" signal. It's not an incoming CAP REQ, it's an outgoing one. Suggestions of a better name welcome. It also won't catch CAP REQ sent manually by users or by scripts like cap-extjoin.pl but IMO that's out of scope.
For bikeshedding: I didn't like the ""CLICAP"" in cap.pl (that term is not a thing anywhere in the protocol, just a very awkward way to say client capability) so I decided to look at other clients for inspiration.
cap.pl / cap_sasl.pl

-!- CLICAP: supported by server: sasl multi-prefix extended-join away-notify userhost-in-names
-!- CLICAP: requesting: multi-prefix
-!- CLICAP: now enabled: multi-prefix

This PR:

-!- Capabilities requested: multi-prefix
-!- Capabilities supported: sasl multi-prefix extended-join away-notify userhost-in-names
-!- Capabilities acknowledged: multi-prefix

weechat:

irc: client capability, server supports: sasl multi-prefix extended-join away-notify userhost-in-names
irc: client capability, requesting: away-notify multi-prefix extended-join userhost-in-names
irc: client capability, enabled: away-notify multi-prefix extended-join userhost-in-names

hexchat:

* Capabilities supported: sasl=PLAIN multi-prefix extended-join away-notify userhost-in-names
* Capabilities requested: multi-prefix extended-join away-notify userhost-in-names 
* Capabilities acknowledged: multi-prefix extended-join away-notify userhost-in-names

(test server is im.bitlbee.org)
I went with hexchat's wording, took CAP NEW from weechat, kept CAP LIST like cap.pl (matches weechat, hexchat just reuses CAP LS)
Closes #704",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,871,2018-04-08T19:29:19Z,2018-04-24T11:58:16Z,2019-06-26T23:13:01Z,MERGED,True,41,4,1,https://github.com/dequis,Make config_write more atomic to prevent truncation when out of space,1,['auto-merge'],https://github.com/irssi/irssi/pull/871,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/871,"This is modeled after glib's g_file_set_contents. It doesn't use that
function directly because the writing is done with GIOChannel
streaming-like writes and g_file_set_contents expects the whole thing to
be in-memory.
Main differences with g_file_set_contents:

complete lack of win32 special casing (cygwin/WSL should work though)
no fallocate() (linux only, but we don't know the size upfront, anyway)
always calls fsync (glib skips it on btrfs or when not overwriting)

Other than that, it's the same old mkstemp + fsync + rename.

Fixes #817
In #817 (comment) I mentioned I wasn't sure if i should keep copying g_file_set_contents(). Few months later, no one is going to refactor config writing to be in-memory, so finishing that WIP code is obviously better than nothing.
The WIP code used g_rename, g_unlink, but those require including gstdio.h and their implementation is all win32 portability code so mehhhh.","This is modeled after glib's g_file_set_contents. It doesn't use that
function directly because the writing is done with GIOChannel
streaming-like writes and g_file_set_contents expects the whole thing to
be in-memory.
Main differences with g_file_set_contents:

complete lack of win32 special casing (cygwin/WSL should work though)
no fallocate() (linux only, but we don't know the size upfront, anyway)
always calls fsync (glib skips it on btrfs or when not overwriting)

Other than that, it's the same old mkstemp + fsync + rename.

Fixes #817
In #817 (comment) I mentioned I wasn't sure if i should keep copying g_file_set_contents(). Few months later, no one is going to refactor config writing to be in-memory, so finishing that WIP code is obviously better than nothing.
The WIP code used g_rename, g_unlink, but those require including gstdio.h and their implementation is all win32 portability code so mehhhh.",True,{}
irssi/irssi,https://github.com/irssi/irssi,871,2018-04-08T19:29:19Z,2018-04-24T11:58:16Z,2019-06-26T23:13:01Z,MERGED,True,41,4,1,https://github.com/dequis,Make config_write more atomic to prevent truncation when out of space,1,['auto-merge'],https://github.com/irssi/irssi/pull/871,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/871#issuecomment-381709113,"This is modeled after glib's g_file_set_contents. It doesn't use that
function directly because the writing is done with GIOChannel
streaming-like writes and g_file_set_contents expects the whole thing to
be in-memory.
Main differences with g_file_set_contents:

complete lack of win32 special casing (cygwin/WSL should work though)
no fallocate() (linux only, but we don't know the size upfront, anyway)
always calls fsync (glib skips it on btrfs or when not overwriting)

Other than that, it's the same old mkstemp + fsync + rename.

Fixes #817
In #817 (comment) I mentioned I wasn't sure if i should keep copying g_file_set_contents(). Few months later, no one is going to refactor config writing to be in-memory, so finishing that WIP code is obviously better than nothing.
The WIP code used g_rename, g_unlink, but those require including gstdio.h and their implementation is all win32 portability code so mehhhh.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,873,2018-04-16T14:20:55Z,2018-04-24T11:58:26Z,2019-06-26T23:13:32Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,record line info on empty lines,1,['auto-merge'],https://github.com/irssi/irssi/pull/873,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/873,Fix for GL#31,Fix for GL#31,True,{}
irssi/irssi,https://github.com/irssi/irssi,873,2018-04-16T14:20:55Z,2018-04-24T11:58:26Z,2019-06-26T23:13:32Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,record line info on empty lines,1,['auto-merge'],https://github.com/irssi/irssi/pull/873,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/873#issuecomment-381908204,Fix for GL#31,we just need to check if this could have any odd unforeseen effects. I can't find them but maybe someone else has an idea where to look?,True,{}
irssi/irssi,https://github.com/irssi/irssi,873,2018-04-16T14:20:55Z,2018-04-24T11:58:26Z,2019-06-26T23:13:32Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,record line info on empty lines,1,['auto-merge'],https://github.com/irssi/irssi/pull/873,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/873#issuecomment-381908307,Fix for GL#31,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,873,2018-04-16T14:20:55Z,2018-04-24T11:58:26Z,2019-06-26T23:13:32Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,record line info on empty lines,1,['auto-merge'],https://github.com/irssi/irssi/pull/873,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/873#issuecomment-389539432,Fix for GL#31,had to be reverted,True,{}
irssi/irssi,https://github.com/irssi/irssi,875,2018-04-24T12:00:35Z,2018-04-24T14:21:59Z,2019-06-26T23:13:28Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,Fix test compilation on old glib,1,[],https://github.com/irssi/irssi/pull/875,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/875,e.g. Debian 7,e.g. Debian 7,True,{}
irssi/irssi,https://github.com/irssi/irssi,878,2018-05-07T19:23:10Z,2018-05-08T05:17:11Z,2019-06-26T23:13:33Z,MERGED,True,3,9,2,https://github.com/ailin-nemui,"Revert ""record line info on empty lines""",1,['auto-merge'],https://github.com/irssi/irssi/pull/878,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/878,"Reverts #873
Regression #877
Need to fix this and try again
@irssi/developers","Reverts #873
Regression #877
Need to fix this and try again
@irssi/developers",True,{}
irssi/irssi,https://github.com/irssi/irssi,880,2018-05-13T02:41:26Z,2018-09-04T11:42:44Z,2018-09-04T11:42:53Z,CLOSED,False,6,2,1,https://github.com/jkhsjdhjs,"fix sending of server passwords starting with "":"" or containing spaces",1,['waiting for management decision'],https://github.com/irssi/irssi/pull/880,https://github.com/jkhsjdhjs,1,https://github.com/irssi/irssi/pull/880,"This PR fixes sending of server passwords according to RFC.
Fixes #362
If the server passwords contains at least one space a colon will be added in front of it when logging in.
Same applies if the password begins with a colon.","This PR fixes sending of server passwords according to RFC.
Fixes #362
If the server passwords contains at least one space a colon will be added in front of it when logging in.
Same applies if the password begins with a colon.",True,{}
irssi/irssi,https://github.com/irssi/irssi,880,2018-05-13T02:41:26Z,2018-09-04T11:42:44Z,2018-09-04T11:42:53Z,CLOSED,False,6,2,1,https://github.com/jkhsjdhjs,"fix sending of server passwords starting with "":"" or containing spaces",1,['waiting for management decision'],https://github.com/irssi/irssi/pull/880,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/880#issuecomment-418336320,"This PR fixes sending of server passwords according to RFC.
Fixes #362
If the server passwords contains at least one space a colon will be added in front of it when logging in.
Same applies if the password begins with a colon.","thanks for the fix, we've decided to ignore this for the time being",True,{}
irssi/irssi,https://github.com/irssi/irssi,883,2018-06-05T12:45:06Z,2018-06-05T12:45:28Z,2018-06-05T22:43:42Z,CLOSED,False,74,5,8,https://github.com/vague666,Ignore hidden,4,[],https://github.com/irssi/irssi/pull/883,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/883,This appears to work but I'm a bit unsure about the bitwise operations in ignore_match_level,This appears to work but I'm a bit unsure about the bitwise operations in ignore_match_level,True,{}
irssi/irssi,https://github.com/irssi/irssi,883,2018-06-05T12:45:06Z,2018-06-05T12:45:28Z,2018-06-05T22:43:42Z,CLOSED,False,74,5,8,https://github.com/vague666,Ignore hidden,4,[],https://github.com/irssi/irssi/pull/883,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/883#issuecomment-394826874,This appears to work but I'm a bit unsure about the bitwise operations in ignore_match_level,I removed the three extra commits that somehow got included so we can open this up again :),True,{}
irssi/irssi,https://github.com/irssi/irssi,883,2018-06-05T12:45:06Z,2018-06-05T12:45:28Z,2018-06-05T22:43:42Z,CLOSED,False,74,5,8,https://github.com/vague666,Ignore hidden,4,[],https://github.com/irssi/irssi/pull/883,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/883#issuecomment-394883814,This appears to work but I'm a bit unsure about the bitwise operations in ignore_match_level,"Open a new one, the reopen button is disabled for this one (""The ignore_hidden branch was force-pushed or recreated."")",True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/884,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/884#issuecomment-394964676,,The testing I did worked well but I might've missed something,True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/884#issuecomment-394998880,,"I would prefer making the #define ignore_match_level into a function too, but it didn't become too ugly when I added hidden to it",True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/884#issuecomment-395385009,,I think what would help there is a #define FLAG_MSGLEVELS ( MSGLEVEL_NO_ACT  | MSGLEVEL_HIDDEN ),True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/884#issuecomment-395423207,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/884#issuecomment-395433493,,What does this do?,True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/884#issuecomment-395434385,,I think it allows you to /ignore ..... hidden and then it will hide the messages instead of ignoring them completely,True,{}
irssi/irssi,https://github.com/irssi/irssi,884,2018-06-06T07:10:01Z,2018-06-15T12:28:10Z,2019-06-26T23:12:42Z,MERGED,True,80,7,7,https://github.com/vague666,Added HIDDEN level to ignores,5,['auto-merge'],https://github.com/irssi/irssi/pull/884,https://github.com/vague666,8,https://github.com/irssi/irssi/pull/884#issuecomment-395438749,,"Indeed
…
On Thu, Jun 7, 2018, 16:11 ailin-nemui ***@***.***> wrote:
 I think it allows you to /ignore ..... hidden and then it will hide the
 messages instead of ignoring them completely

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#884 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AHqGLo9XuMcUXh-FIP7GdTnGPoXXwB8aks5t6TR1gaJpZM4UcGfE>
 .",True,{}
irssi/irssi,https://github.com/irssi/irssi,886,2018-06-14T18:08:11Z,2018-07-25T09:32:07Z,2019-06-26T23:07:49Z,MERGED,True,1,1,1,https://github.com/vague666,remove = from format because people get confused by it,1,[],https://github.com/irssi/irssi/pull/886,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/886,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,886,2018-06-14T18:08:11Z,2018-07-25T09:32:07Z,2019-06-26T23:07:49Z,MERGED,True,1,1,1,https://github.com/vague666,remove = from format because people get confused by it,1,[],https://github.com/irssi/irssi/pull/886,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/886#issuecomment-397605635,,"I like this but to be fair it does make the display a bit ""odd"" when filtering shorter settings names. however there aren't any alternatives I can think of",True,{}
irssi/irssi,https://github.com/irssi/irssi,886,2018-06-14T18:08:11Z,2018-07-25T09:32:07Z,2019-06-26T23:07:49Z,MERGED,True,1,1,1,https://github.com/vague666,remove = from format because people get confused by it,1,[],https://github.com/irssi/irssi/pull/886,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/886#issuecomment-397605690,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,892,2018-06-29T13:11:17Z,2018-08-02T11:42:25Z,2019-06-26T23:12:41Z,MERGED,True,11,5,1,https://github.com/dwfreed,core/ignore: fix ignore_match_level handling of flag levels,1,['auto-merge'],https://github.com/irssi/irssi/pull/892,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/892,"This should fix #890; I don't have a good way to test this myself, though","This should fix #890; I don't have a good way to test this myself, though",True,{'THUMBS_UP': ['https://github.com/vague666']}
irssi/irssi,https://github.com/irssi/irssi,892,2018-06-29T13:11:17Z,2018-08-02T11:42:25Z,2019-06-26T23:12:41Z,MERGED,True,11,5,1,https://github.com/dwfreed,core/ignore: fix ignore_match_level handling of flag levels,1,['auto-merge'],https://github.com/irssi/irssi/pull/892,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/892#issuecomment-407694456,"This should fix #890; I don't have a good way to test this myself, though",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,895,2018-07-18T18:19:12Z,2018-07-24T07:38:02Z,2019-06-26T23:13:38Z,MERGED,True,1,1,1,https://github.com/janikrabe,Keep errstr set to NULL if errno is not set,1,['auto-merge'],https://github.com/irssi/irssi/pull/895,https://github.com/janikrabe,1,https://github.com/irssi/irssi/pull/895,"Don't use errno if it is not set and show the default error message
instead. This prevents messages like ""SSL handshake failed: Success""
from being shown.","Don't use errno if it is not set and show the default error message
instead. This prevents messages like ""SSL handshake failed: Success""
from being shown.",True,{}
irssi/irssi,https://github.com/irssi/irssi,895,2018-07-18T18:19:12Z,2018-07-24T07:38:02Z,2019-06-26T23:13:38Z,MERGED,True,1,1,1,https://github.com/janikrabe,Keep errstr set to NULL if errno is not set,1,['auto-merge'],https://github.com/irssi/irssi/pull/895,https://github.com/janikrabe,2,https://github.com/irssi/irssi/pull/895#issuecomment-406039191,"Don't use errno if it is not set and show the default error message
instead. This prevents messages like ""SSL handshake failed: Success""
from being shown.","@dequis thanks. This happened after receiving an empty handshake from a misconfigured server. You can reproduce it by running nc -lp 6697, using /connect -ssl localhost and then killing the netcat process.",True,{}
irssi/irssi,https://github.com/irssi/irssi,895,2018-07-18T18:19:12Z,2018-07-24T07:38:02Z,2019-06-26T23:13:38Z,MERGED,True,1,1,1,https://github.com/janikrabe,Keep errstr set to NULL if errno is not set,1,['auto-merge'],https://github.com/irssi/irssi/pull/895,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/895#issuecomment-406041344,"Don't use errno if it is not set and show the default error message
instead. This prevents messages like ""SSL handshake failed: Success""
from being shown.","Oh easier than I thought, so yeah this works. Thanks!",True,{}
irssi/irssi,https://github.com/irssi/irssi,895,2018-07-18T18:19:12Z,2018-07-24T07:38:02Z,2019-06-26T23:13:38Z,MERGED,True,1,1,1,https://github.com/janikrabe,Keep errstr set to NULL if errno is not set,1,['auto-merge'],https://github.com/irssi/irssi/pull/895,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/895#issuecomment-407211437,"Don't use errno if it is not set and show the default error message
instead. This prevents messages like ""SSL handshake failed: Success""
from being shown.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/phillid,1,https://github.com/irssi/irssi/pull/896,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.","Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.",True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/896#issuecomment-407329317,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.",you can run dtach -r ctrl_l or manually press Ctrl+L if you need this,True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/phillid,3,https://github.com/irssi/irssi/pull/896#issuecomment-407331639,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.",@ailin-nemui that is a workaround indeed. But surely turning SIGWINCH into a nop is expecting breakage to occur? People don't send SIGWINCH for no reason; they send it when a redraw is expected.,True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/896#issuecomment-407332352,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.","no, regular terminals send winch to tell irssi that their WINdowsize CHanged and the dirty flag handles that case in an optimised manner (especially since a full redraw is not necessary in many cases)",True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/phillid,5,https://github.com/irssi/irssi/pull/896#issuecomment-407332619,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.",That leaves you wide open and exposed for when a full redraw is necessary. How many CPU ticks does this flawed optimisation save?,True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/896#issuecomment-407333396,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.",a full redraw is never necessary unless you use abduco :),True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/896#issuecomment-407333599,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.",most importantly it makes the screen adapt to new window size much faster over slow network links,True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/phillid,8,https://github.com/irssi/irssi/pull/896#issuecomment-407334298,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.","That's true. More generally, anything that uses a nice simplistic approach like abduco where the terminal state is not kept between detachment and reattachment. I would have thought that this is a use case that irssi is prepared to support, considering the triviality of it. I am aware that slow network will exacerbate any increased redraw times. I notice that other IRC clients redraw on SIGWINCH without ""optimisation"".
EDIT: I'll add that the case of ""on SIGWINCH, redrawing only the parts of the screen needed"" is able to be separated from ""on SIGWINCH, we observe the same screen size as before."" A sane terminal would not create the latter scenario naturally so it's interesting that it's optimised out at all. I wonder if, as an alternative to this patch, the check for window dimensions being the same as before could be removed since this should only ever be triggered by a tool like abduco or a user sending SIGWINCH to irssi for some other reason -- both very intentional actions that don't need optimising out. Thoughts?",True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/phillid,9,https://github.com/irssi/irssi/pull/896#issuecomment-410579440,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.","Hmm, looks like Travis itself broke rather than my code? I wonder if that can be re-run.",True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/896#issuecomment-410598411,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.","Re-ran that job.
This version of the patch looks much more reasonable than the original one",True,{}
irssi/irssi,https://github.com/irssi/irssi,896,2018-07-24T08:08:01Z,2018-09-04T08:02:52Z,2019-06-26T23:07:51Z,MERGED,True,3,5,1,https://github.com/phillid,Don't ignore SIGWINCH when window size is unchanged,1,['needs testing'],https://github.com/irssi/irssi/pull/896,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/896#issuecomment-414243267,"Currently, the SIGWINCH handler assumes that the entire window doesn't
need to be redrawn. This assumption fails when session detachment tools
like abduco rely on SIGWINCH to ask a curses program to redraw itself
after a session is resumed.
This patch makes SIGWINCH trigger a full redraw instead of just a dirty
mark being applied.
The updated patch makes irssi stop ignoring a SIGWINCH if the reported terminal size hasn't changed.","TODO: resize terminal interactively, check how many times winch is generated and what the size is at the point of TIOCGWINSZ. do this for at least gnome-terminal and original xterm",True,{}
irssi/irssi,https://github.com/irssi/irssi,897,2018-07-25T01:36:12Z,2018-07-31T07:34:16Z,2019-06-26T23:12:57Z,MERGED,True,13,10,2,https://github.com/horgh,Flag topic as unset if it is zero length,4,['auto-merge'],https://github.com/irssi/irssi/pull/897,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/897,This is to fix #888.,This is to fix #888.,True,{}
irssi/irssi,https://github.com/irssi/irssi,897,2018-07-25T01:36:12Z,2018-07-31T07:34:16Z,2019-06-26T23:12:57Z,MERGED,True,13,10,2,https://github.com/horgh,Flag topic as unset if it is zero length,4,['auto-merge'],https://github.com/irssi/irssi/pull/897,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/897#issuecomment-407694585,This is to fix #888.,"lgtm, @irssi/developers",True,{}
irssi/irssi,https://github.com/irssi/irssi,897,2018-07-25T01:36:12Z,2018-07-31T07:34:16Z,2019-06-26T23:12:57Z,MERGED,True,13,10,2,https://github.com/horgh,Flag topic as unset if it is zero length,4,['auto-merge'],https://github.com/irssi/irssi/pull/897,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/897#issuecomment-409076624,This is to fix #888.,"I pushed a commit with a nitpick, otherwise looks good to me.",True,{}
irssi/irssi,https://github.com/irssi/irssi,901,2018-08-03T21:07:23Z,2018-08-06T12:36:21Z,2019-06-26T23:12:39Z,MERGED,True,2,1,1,https://github.com/dwfreed,core/ignore: fix #900,1,[],https://github.com/irssi/irssi/pull/901,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/901,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,901,2018-08-03T21:07:23Z,2018-08-06T12:36:21Z,2019-06-26T23:12:39Z,MERGED,True,2,1,1,https://github.com/dwfreed,core/ignore: fix #900,1,[],https://github.com/irssi/irssi/pull/901,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/901#issuecomment-410436224,,Great catch :),True,{}
irssi/irssi,https://github.com/irssi/irssi,905,2018-08-10T01:55:46Z,2018-10-17T10:31:52Z,2019-06-26T23:12:56Z,MERGED,True,243,6,6,https://github.com/horgh,Add tests for topic events,9,['auto-merge'],https://github.com/irssi/irssi/pull/905,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/905,"As we called the same function for the topic info numeric, we ended up
losing the topic as that numeric does not include it. We now call a
different function to handle this case more carefully. Fixes #903.
Note if we want to be able to show who & unset a topic and when as we discussed on #903, this won't work.
Some manual tests:


Test 1

Join channel with no topic. Look good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 2

Join channel with no topic.
I set topic. Looks good.
I unset topic. Looks good.



Test 3

Join channel with topic. Looks good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 4

Join channel with topic. Looks good.
I set topic. Looks good.
I unset topic. Looks good.","As we called the same function for the topic info numeric, we ended up
losing the topic as that numeric does not include it. We now call a
different function to handle this case more carefully. Fixes #903.
Note if we want to be able to show who & unset a topic and when as we discussed on #903, this won't work.
Some manual tests:


Test 1

Join channel with no topic. Look good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 2

Join channel with no topic.
I set topic. Looks good.
I unset topic. Looks good.



Test 3

Join channel with topic. Looks good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 4

Join channel with topic. Looks good.
I set topic. Looks good.
I unset topic. Looks good.",True,{}
irssi/irssi,https://github.com/irssi/irssi,905,2018-08-10T01:55:46Z,2018-10-17T10:31:52Z,2019-06-26T23:12:56Z,MERGED,True,243,6,6,https://github.com/horgh,Add tests for topic events,9,['auto-merge'],https://github.com/irssi/irssi/pull/905,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/905#issuecomment-415729958,"As we called the same function for the topic info numeric, we ended up
losing the topic as that numeric does not include it. We now call a
different function to handle this case more carefully. Fixes #903.
Note if we want to be able to show who & unset a topic and when as we discussed on #903, this won't work.
Some manual tests:


Test 1

Join channel with no topic. Look good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 2

Join channel with no topic.
I set topic. Looks good.
I unset topic. Looks good.



Test 3

Join channel with topic. Looks good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 4

Join channel with topic. Looks good.
I set topic. Looks good.
I unset topic. Looks good.","I really like the tests you're bringing into irssi, but we should not un-static methods needlessly. can these be reached by sending signals instead?",True,{}
irssi/irssi,https://github.com/irssi/irssi,905,2018-08-10T01:55:46Z,2018-10-17T10:31:52Z,2019-06-26T23:12:56Z,MERGED,True,243,6,6,https://github.com/horgh,Add tests for topic events,9,['auto-merge'],https://github.com/irssi/irssi/pull/905,https://github.com/horgh,3,https://github.com/irssi/irssi/pull/905#issuecomment-416444969,"As we called the same function for the topic info numeric, we ended up
losing the topic as that numeric does not include it. We now call a
different function to handle this case more carefully. Fixes #903.
Note if we want to be able to show who & unset a topic and when as we discussed on #903, this won't work.
Some manual tests:


Test 1

Join channel with no topic. Look good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 2

Join channel with no topic.
I set topic. Looks good.
I unset topic. Looks good.



Test 3

Join channel with topic. Looks good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 4

Join channel with topic. Looks good.
I set topic. Looks good.
I unset topic. Looks good.","Yeah, that's way better! Thanks!
I also pulled back in the original PR changes as they're needed for this. Not sure if we want to rework the approach more, but anyway.",True,{}
irssi/irssi,https://github.com/irssi/irssi,905,2018-08-10T01:55:46Z,2018-10-17T10:31:52Z,2019-06-26T23:12:56Z,MERGED,True,243,6,6,https://github.com/horgh,Add tests for topic events,9,['auto-merge'],https://github.com/irssi/irssi/pull/905,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/905#issuecomment-427594951,"As we called the same function for the topic info numeric, we ended up
losing the topic as that numeric does not include it. We now call a
different function to handle this case more carefully. Fixes #903.
Note if we want to be able to show who & unset a topic and when as we discussed on #903, this won't work.
Some manual tests:


Test 1

Join channel with no topic. Look good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 2

Join channel with no topic.
I set topic. Looks good.
I unset topic. Looks good.



Test 3

Join channel with topic. Looks good.
Other user sets topic. Looks good.
Other user unsets topic. Looks good.



Test 4

Join channel with topic. Looks good.
I set topic. Looks good.
I unset topic. Looks good.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,909,2018-08-12T07:26:52Z,2018-08-27T08:13:21Z,2019-06-26T23:13:00Z,MERGED,True,11,3,1,https://github.com/meribold,Fix `/save` replacing symlinks with regular files,2,['auto-merge'],https://github.com/irssi/irssi/pull/909,https://github.com/meribold,1,https://github.com/irssi/irssi/pull/909,"A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.","A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.",True,{}
irssi/irssi,https://github.com/irssi/irssi,909,2018-08-12T07:26:52Z,2018-08-27T08:13:21Z,2019-06-26T23:13:00Z,MERGED,True,11,3,1,https://github.com/meribold,Fix `/save` replacing symlinks with regular files,2,['auto-merge'],https://github.com/irssi/irssi/pull/909,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/909#issuecomment-412330550,"A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.","rename doesn't work if symlink point to another FS, I didn't check your fix yet but did you consider this?",True,{}
irssi/irssi,https://github.com/irssi/irssi,909,2018-08-12T07:26:52Z,2018-08-27T08:13:21Z,2019-06-26T23:13:00Z,MERGED,True,11,3,1,https://github.com/meribold,Fix `/save` replacing symlinks with regular files,2,['auto-merge'],https://github.com/irssi/irssi/pull/909,https://github.com/meribold,3,https://github.com/irssi/irssi/pull/909#issuecomment-412331370,"A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.",I didn't. I can change the code to base the path of the temporary file on the expanded path of the configuration file. I assume that would take care of this issue.,True,{}
irssi/irssi,https://github.com/irssi/irssi,909,2018-08-12T07:26:52Z,2018-08-27T08:13:21Z,2019-06-26T23:13:00Z,MERGED,True,11,3,1,https://github.com/meribold,Fix `/save` replacing symlinks with regular files,2,['auto-merge'],https://github.com/irssi/irssi/pull/909,https://github.com/meribold,4,https://github.com/irssi/irssi/pull/909#issuecomment-412334966,"A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.",I added another commit that should prevent renames across file systems.,True,{}
irssi/irssi,https://github.com/irssi/irssi,909,2018-08-12T07:26:52Z,2018-08-27T08:13:21Z,2019-06-26T23:13:00Z,MERGED,True,11,3,1,https://github.com/meribold,Fix `/save` replacing symlinks with regular files,2,['auto-merge'],https://github.com/irssi/irssi/pull/909,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/909#issuecomment-412503600,"A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.",@dequis,True,{}
irssi/irssi,https://github.com/irssi/irssi,909,2018-08-12T07:26:52Z,2018-08-27T08:13:21Z,2019-06-26T23:13:00Z,MERGED,True,11,3,1,https://github.com/meribold,Fix `/save` replacing symlinks with regular files,2,['auto-merge'],https://github.com/irssi/irssi/pull/909,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/909#issuecomment-414242445,"A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,909,2018-08-12T07:26:52Z,2018-08-27T08:13:21Z,2019-06-26T23:13:00Z,MERGED,True,11,3,1,https://github.com/meribold,Fix `/save` replacing symlinks with regular files,2,['auto-merge'],https://github.com/irssi/irssi/pull/909,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/909#issuecomment-417889888,"A side-effect of 8deb618 is that /save may replace configuration files that are symlinks with regular files.  Fix this by resolving all symlinks before renaming the temporary file.
This fixes #906.","Turns out this breaks when the file didn't already exist
Error: Couldn't save configuration file: No such file or directory
18:50 -!- Irssi: Error saving theme to /tmp/foobar/default.theme: No such file or directory",True,{}
irssi/irssi,https://github.com/irssi/irssi,911,2018-08-13T12:44:39Z,2018-08-13T12:59:56Z,2019-06-26T23:12:56Z,MERGED,True,10,13,2,https://github.com/ailin-nemui,"Revert ""Flag topic as unset if it is zero length""",1,[],https://github.com/irssi/irssi/pull/911,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/911,"Reverts #897
Hotfix for #903","Reverts #897
Hotfix for #903",True,{}
irssi/irssi,https://github.com/irssi/irssi,911,2018-08-13T12:44:39Z,2018-08-13T12:59:56Z,2019-06-26T23:12:56Z,MERGED,True,10,13,2,https://github.com/ailin-nemui,"Revert ""Flag topic as unset if it is zero length""",1,[],https://github.com/irssi/irssi/pull/911,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/911#issuecomment-412505447,"Reverts #897
Hotfix for #903",I will revert this quickly and then we will fix this again & more better,True,{}
irssi/irssi,https://github.com/irssi/irssi,913,2018-08-15T15:13:56Z,2018-08-15T18:26:44Z,2019-06-26T23:12:51Z,MERGED,True,190,3,2,https://github.com/josephbisch,Add server-fuzz to fe-fuzz,1,[],https://github.com/irssi/irssi/pull/913,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/913,"Based on test-796.c by @horgh in the tests directory.
Will make corresponding oss-fuzz PR.","Based on test-796.c by @horgh in the tests directory.
Will make corresponding oss-fuzz PR.",True,{}
irssi/irssi,https://github.com/irssi/irssi,913,2018-08-15T15:13:56Z,2018-08-15T18:26:44Z,2019-06-26T23:12:51Z,MERGED,True,190,3,2,https://github.com/josephbisch,Add server-fuzz to fe-fuzz,1,[],https://github.com/irssi/irssi/pull/913,https://github.com/Dor1s,2,https://github.com/irssi/irssi/pull/913#issuecomment-504282216,"Based on test-796.c by @horgh in the tests directory.
Will make corresponding oss-fuzz PR.",@ailin-nemui would you be interested in landing #921 and then enabling continuous fuzzing on OSS-Fuzz?,True,{}
irssi/irssi,https://github.com/irssi/irssi,913,2018-08-15T15:13:56Z,2018-08-15T18:26:44Z,2019-06-26T23:12:51Z,MERGED,True,190,3,2,https://github.com/josephbisch,Add server-fuzz to fe-fuzz,1,[],https://github.com/irssi/irssi/pull/913,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/913#issuecomment-504298142,"Based on test-796.c by @horgh in the tests directory.
Will make corresponding oss-fuzz PR.","@Dor1s thanks for your interest, unfortunately I have no experience with the great oss fuzz project and our best man here has gone back to the real life. #921 is probably not the correct thing to do, we would have to find out what's the real iss causing the log messages",True,{}
irssi/irssi,https://github.com/irssi/irssi,914,2018-08-20T22:31:28Z,2018-09-04T07:37:11Z,2019-06-26T23:13:35Z,MERGED,True,19,8,3,https://github.com/ailin-nemui,properly record line info on empty lines,2,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/914,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/914,"another attempt at fixing #873 GL#31 #907
it's basically the same as before with a special case for trackbar.","another attempt at fixing #873 GL#31 #907
it's basically the same as before with a special case for trackbar.",True,{}
irssi/irssi,https://github.com/irssi/irssi,914,2018-08-20T22:31:28Z,2018-09-04T07:37:11Z,2019-06-26T23:13:35Z,MERGED,True,19,8,3,https://github.com/ailin-nemui,properly record line info on empty lines,2,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/914,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/914#issuecomment-414485375,"another attempt at fixing #873 GL#31 #907
it's basically the same as before with a special case for trackbar.","anything which prints an empty string was previously ignored. now, it starts a new line. this might cause issues -- already identified the trackbar one last time, but it's unknown if there are other special cases which need consideration",True,{}
irssi/irssi,https://github.com/irssi/irssi,914,2018-08-20T22:31:28Z,2018-09-04T07:37:11Z,2019-06-26T23:13:35Z,MERGED,True,19,8,3,https://github.com/ailin-nemui,properly record line info on empty lines,2,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/914,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/914#issuecomment-414486523,"another attempt at fixing #873 GL#31 #907
it's basically the same as before with a special case for trackbar.","it's unknown if there are other special cases which need consideration

This makes the g_slice_new0 solution look more attractive tbh",True,{}
irssi/irssi,https://github.com/irssi/irssi,914,2018-08-20T22:31:28Z,2018-09-04T07:37:11Z,2019-06-26T23:13:35Z,MERGED,True,19,8,3,https://github.com/ailin-nemui,properly record line info on empty lines,2,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/914,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/914#issuecomment-414550263,"another attempt at fixing #873 GL#31 #907
it's basically the same as before with a special case for trackbar.","but that doesn't record the proper time and level. we can do both, this one to fix a missing thing and new0 to avoid uninitialised memory",True,{}
irssi/irssi,https://github.com/irssi/irssi,914,2018-08-20T22:31:28Z,2018-09-04T07:37:11Z,2019-06-26T23:13:35Z,MERGED,True,19,8,3,https://github.com/ailin-nemui,properly record line info on empty lines,2,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/914,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/914#issuecomment-416063519,"another attempt at fixing #873 GL#31 #907
it's basically the same as before with a special case for trackbar.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/917,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */","Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */",True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/917#issuecomment-415297944,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */","One way in which i saw #720 manifest:

Have a glibc 2.26+ system (or two systems with unicode versions newer than 9)
Do mosh localhost (or another server)
Start irssi
Paste one emoji (try 🔥)
Write some text after it
Press ^L to refresh
Watch the cursor (and possibly other chars) move to the left.

It's invisible outside of mosh, which is interesting, but it's clearly our fault. Using CJK characters that mk_wcwidth knows about, such as あ, does not show this issue.
The other CJK character I used in the system wcwidth tests of this PR is 🈀, added in unicode 5.2, and shows the same bad behavior.",True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/917#issuecomment-415319542,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */","nice!
I wonder how this might confuse the textbuffer view's line cache when you change the implementation back and forth?",True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/917#issuecomment-415394875,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */",I think I fixed it...,True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/917#issuecomment-415657224,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */","Neat, thanks for the changes.
I'm not really sure why we need utf8proc, but i guess it would make sense to force newer unicode in mac os whose libc is stuck in the past forever. The problem with doing that is that it might make mismatches with the terminal / tmux / mosh / etc more likely. I guess we could just document the risks and benefits.",True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/917#issuecomment-415659876,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */","sometimes you have a remote server and a local terminal emulator who disagree (different libc)
but utf8proc also cannot solve this properly",True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/917#issuecomment-415663090,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */",Oh right i'm the only weirdo who has an arch linux server (wasn't my choice). I guess it helps for those cases.,True,{}
irssi/irssi,https://github.com/irssi/irssi,917,2018-08-23T05:32:41Z,2018-09-04T07:52:21Z,2019-06-26T23:12:34Z,MERGED,True,191,18,12,https://github.com/dequis,Add a wrapper of wcwidth() that picks the best implementation,8,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/917,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/917#issuecomment-416063458,"Fixes #720

This adds a i_wcwidth() function that replaces mk_wcwidth(), and a
'wcwidth_implementation' setting to pick which one it wraps.
Values:

old: uses our local mk_wcwidth() which implements unicode 5.0
system: uses the libc-provided wcwidth(), which may be better or worse
than ours depending on how up to date the system is.
auto: tests the system one against two characters that became
fullwidth in unicode 5.2 and 9.0 respectively. If either of them pass,
pick the system implementation, otherwise pick ours.

It defaults to auto.
mk_wcwidth() is still preferable in some cases, since the way it uses
ranges for fullwidth characters means most CJK blocks are covered even
if their characters didn't exist back then.
The ""system"" implementation is also wrapped to never return -1, but to
assume those unknown characters use one cell. Quoting the code:
/* Treat all unknown characters as taking one cell. This is
 * the reason mk_wcwidth and other outdated implementations
 * mostly worked with newer unicode, while glibc's wcwidth
 * needs updating to recognize new characters.
 *
 * Instead of relying on that, we keep the behavior of assuming
 * one cell even for glibc's implementation, which is still
 * highly accurate and less of a headache overall.
 */",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,918,2018-08-23T06:23:40Z,2018-08-26T19:27:13Z,2019-06-26T23:12:47Z,MERGED,True,3,0,1,https://github.com/dequis,irc-cap: Don't show warning on CAP LIST response,1,[],https://github.com/irssi/irssi/pull/918,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/918,Fixes #916,Fixes #916,True,{}
irssi/irssi,https://github.com/irssi/irssi,918,2018-08-23T06:23:40Z,2018-08-26T19:27:13Z,2019-06-26T23:12:47Z,MERGED,True,3,0,1,https://github.com/dequis,irc-cap: Don't show warning on CAP LIST response,1,[],https://github.com/irssi/irssi/pull/918,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/918#issuecomment-415394798,Fixes #916,lgtm,True,{}
irssi/irssi,https://github.com/irssi/irssi,919,2018-08-23T12:14:41Z,2018-09-04T07:35:48Z,2019-06-26T23:13:36Z,MERGED,True,10,6,5,https://github.com/ailin-nemui,Use-after-frees,4,['auto-merge'],https://github.com/irssi/irssi/pull/919,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/919,"coypu AT sdf DOT org wrote:

Hi folks!
I tried clang-static-analyzer on irssi 1.1.1, it seems like it
finds some things. Here's a diff, but there might be more that you would
want to check, or choose to work differently.
(in special-vars.c, ret is commands->data sometime)
I hope it's not too much trouble if reported as a confidential bug.
Thanks.","coypu AT sdf DOT org wrote:

Hi folks!
I tried clang-static-analyzer on irssi 1.1.1, it seems like it
finds some things. Here's a diff, but there might be more that you would
want to check, or choose to work differently.
(in special-vars.c, ret is commands->data sometime)
I hope it's not too much trouble if reported as a confidential bug.
Thanks.",True,{}
irssi/irssi,https://github.com/irssi/irssi,919,2018-08-23T12:14:41Z,2018-09-04T07:35:48Z,2019-06-26T23:13:36Z,MERGED,True,10,6,5,https://github.com/ailin-nemui,Use-after-frees,4,['auto-merge'],https://github.com/irssi/irssi/pull/919,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/919#issuecomment-415655291,"coypu AT sdf DOT org wrote:

Hi folks!
I tried clang-static-analyzer on irssi 1.1.1, it seems like it
finds some things. Here's a diff, but there might be more that you would
want to check, or choose to work differently.
(in special-vars.c, ret is commands->data sometime)
I hope it's not too much trouble if reported as a confidential bug.
Thanks.","Turns out the dcc part of the patch changed a use after free from ""referencing the address of an object which just got deallocated without touching its contents"" to ""reading an address out of an object that just got deallocated"" making it crash on exist. Cool. That's fixed now.",True,{}
irssi/irssi,https://github.com/irssi/irssi,919,2018-08-23T12:14:41Z,2018-09-04T07:35:48Z,2019-06-26T23:13:36Z,MERGED,True,10,6,5,https://github.com/ailin-nemui,Use-after-frees,4,['auto-merge'],https://github.com/irssi/irssi/pull/919,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/919#issuecomment-415729595,"coypu AT sdf DOT org wrote:

Hi folks!
I tried clang-static-analyzer on irssi 1.1.1, it seems like it
finds some things. Here's a diff, but there might be more that you would
want to check, or choose to work differently.
(in special-vars.c, ret is commands->data sometime)
I hope it's not too much trouble if reported as a confidential bug.
Thanks.",cool,True,{}
irssi/irssi,https://github.com/irssi/irssi,919,2018-08-23T12:14:41Z,2018-09-04T07:35:48Z,2019-06-26T23:13:36Z,MERGED,True,10,6,5,https://github.com/ailin-nemui,Use-after-frees,4,['auto-merge'],https://github.com/irssi/irssi/pull/919,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/919#issuecomment-416063368,"coypu AT sdf DOT org wrote:

Hi folks!
I tried clang-static-analyzer on irssi 1.1.1, it seems like it
finds some things. Here's a diff, but there might be more that you would
want to check, or choose to work differently.
(in special-vars.c, ret is commands->data sometime)
I hope it's not too much trouble if reported as a confidential bug.
Thanks.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,920,2018-08-29T07:10:10Z,2018-09-04T07:35:32Z,2019-06-26T23:13:39Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,Add information about crash on unload to perl.txt,1,[],https://github.com/irssi/irssi/pull/920,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/920,reported by urchlay: http://urchlay.naptime.net/repos/misc-scripts/tree/selfunload.pl,reported by urchlay: http://urchlay.naptime.net/repos/misc-scripts/tree/selfunload.pl,True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/921,@irssi/developers - please review. This is for fuzzing.,@irssi/developers - please review. This is for fuzzing.,True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/921#issuecomment-417160608,@irssi/developers - please review. This is for fuzzing.,Does this also handle glib stuff?,True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/josephbisch,3,https://github.com/irssi/irssi/pull/921#issuecomment-417161196,@irssi/developers - please review. This is for fuzzing.,"No. Glib stuff seems to only be on stderr (maybe???) so I just used close_fd_mask=2 from libfuzzer to disable that.
Glib themselves use close_fd_mask=2 for their oss-fuzz fuzzers: https://github.com/google/oss-fuzz/blob/master/projects/glib/fuzz.options.",True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/921#issuecomment-417229455,@irssi/developers - please review. This is for fuzzing.,do we really need this? afaik there's only like 2 calls to printf in the whole irssi,True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/josephbisch,5,https://github.com/irssi/irssi/pull/921#issuecomment-417273975,@irssi/developers - please review. This is for fuzzing.,"Without this (combined with close_fd_mask=2) I get output like this:
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ::::�::�
NO WINDOWS: -!- ����������
                          ::::�::�
NO WINDOWS: -!- ����������
NO WINDOWS: -!- �����������::����::�
NO WINDOWS: -!- ��������������������shrink
NO WINDOWS: -!- ��������������*��
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ::::�::�
NO WINDOWS: -!- ����������
                          ::::�::�
NO WINDOWS: -!- ����������
NO WINDOWS: -!- �����������::�����::�
NO WINDOWS: -!- ��������������������shrink
NO WINDOWS: -!- ��������������*��
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ::::::�
NO WINDOWS: -!- ����������
                          ::::�::�
NO WINDOWS: -!- ����������
NO WINDOWS: -!- �����������::�����::�
NO WINDOWS: -!- ��������������������shrinkk
NO WINDOWS: -!- ��������������*��
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ::::::�
NO WINDOWS: -!- ����������
                          ::::�::�
NO WINDOWS: -!- ����������
NO WINDOWS: -!- �����������::�����::�
NO WINDOWS: -!- ��������������������shrinkk
NO WINDOWS: -!- ���������������������������������������������������������������������������������������������*��
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ut��h
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ut��h
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ut��h
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ut��h
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ut��h
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ut��h
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost
NO WINDOWS: -!- Irssi: Connection to localhost established
NO WINDOWS: -!- ::���;�:�:RRRRRRRRRRRRRRRR����
NO WINDOWS: -!- 
NO WINDOWS: -!- Irssi: Connection lost to localhost

With this (but still with close_fd_mask=2) I get just libfuzzer output. No irssi output.",True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/921#issuecomment-417891260,@irssi/developers - please review. This is for fuzzing.,"that doesn't make any sense, if you check the file (src/fe-common/core/printtext.c:450), the #define SUPPRESS_PRINTF_FALLBACK already disables this particular line of printf. need to investigate what's wrong therre instead of slapping another #define printf (0) on top of it",True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/921#issuecomment-421306297,@irssi/developers - please review. This is for fuzzing.,@josephbisch ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,921,2018-08-30T01:27:55Z,2019-04-05T14:00:29Z,2019-04-05T14:00:30Z,CLOSED,False,5,0,1,https://github.com/josephbisch,Disable printf and fprintf when compiling with SUPPRESS_PRINTF_FALLBACK,1,[],https://github.com/irssi/irssi/pull/921,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/921#issuecomment-480286103,@irssi/developers - please review. This is for fuzzing.,closing for inactivity,True,{}
irssi/irssi,https://github.com/irssi/irssi,922,2018-09-01T22:16:12Z,2018-09-04T07:35:22Z,2019-06-26T23:12:58Z,MERGED,True,13,4,1,https://github.com/dequis,Fix /save not working if the config didn't previously exist,1,[],https://github.com/irssi/irssi/pull/922,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/922,"realpath() was supposed to resolve symlinks but it also fails with
ENOENT (no such file or directory) if the file just isn't there.

Fixes regression introduced by PR #909","realpath() was supposed to resolve symlinks but it also fails with
ENOENT (no such file or directory) if the file just isn't there.

Fixes regression introduced by PR #909",True,"{'THUMBS_UP': ['https://github.com/ailin-nemui', 'https://github.com/meribold']}"
irssi/irssi,https://github.com/irssi/irssi,925,2018-09-02T04:24:28Z,2018-09-04T07:34:32Z,2019-06-26T23:12:58Z,MERGED,True,2,1,1,https://github.com/dequis,Improve error message when failing to create the config dir,1,[],https://github.com/irssi/irssi/pull/925,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/925,"For #910
IMO we'll never know what happened there, and it's not very important either, but for the next time we can show the actual reason the mkdir failed.
The fact that it aborts and generates coredump is a bit awkward but g_error really is the handiest way to show this sort of thing and quit, so that's fine I think.","For #910
IMO we'll never know what happened there, and it's not very important either, but for the next time we can show the actual reason the mkdir failed.
The fact that it aborts and generates coredump is a bit awkward but g_error really is the handiest way to show this sort of thing and quit, so that's fine I think.",True,{}
irssi/irssi,https://github.com/irssi/irssi,927,2018-09-02T23:37:10Z,2018-09-04T07:34:14Z,2019-06-26T23:13:40Z,MERGED,True,2,2,1,https://github.com/DomT4,configure: fix Perl detection on macOS Mojave,1,[],https://github.com/irssi/irssi/pull/927,https://github.com/DomT4,1,https://github.com/irssi/irssi/pull/927,"Apple has significantly changed the way perl is structured in macOS Mojave/10.14, which is due to ship stable this month. The perl restructuring has been an issue for a while but I recently obtained confirmation from Apple the changes were intentional & consequently not something that was going to be walked back before Mojave reaches its stable release.
As of 10.14 the Perl headers are moving inside the SDK, instead of residing in /System directly. There's a flag to tell Clang to look inside the SDK without projects having to explicitly locate the SDK & fiddle with the location themselves, which is -iwithsysroot, and that's what perl outputs now when configure checks perl -MExtUtils::Embed -e ccopts:
  -g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector  -iwithsysroot /System/Library/Perl/5.18/darwin-thread-multi-2level/CORE

The latter bit of that was previously -I/System/Library/Perl/5.18/darwin-thread-multi-2level/CORE. The problem here is that configure filters out flags that start with a lowercase i and consequently the Perl elements fail to build. This tiny patch fixes that issue, restoring Perl support to irssi when built on macOS 10.14.","Apple has significantly changed the way perl is structured in macOS Mojave/10.14, which is due to ship stable this month. The perl restructuring has been an issue for a while but I recently obtained confirmation from Apple the changes were intentional & consequently not something that was going to be walked back before Mojave reaches its stable release.
As of 10.14 the Perl headers are moving inside the SDK, instead of residing in /System directly. There's a flag to tell Clang to look inside the SDK without projects having to explicitly locate the SDK & fiddle with the location themselves, which is -iwithsysroot, and that's what perl outputs now when configure checks perl -MExtUtils::Embed -e ccopts:
  -g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector  -iwithsysroot /System/Library/Perl/5.18/darwin-thread-multi-2level/CORE

The latter bit of that was previously -I/System/Library/Perl/5.18/darwin-thread-multi-2level/CORE. The problem here is that configure filters out flags that start with a lowercase i and consequently the Perl elements fail to build. This tiny patch fixes that issue, restoring Perl support to irssi when built on macOS 10.14.",True,{}
irssi/irssi,https://github.com/irssi/irssi,929,2018-09-04T08:17:48Z,2018-09-18T19:14:55Z,2019-06-26T23:13:29Z,MERGED,True,0,26,2,https://github.com/ailin-nemui,Remove incorrectly copied automake commands from fuzzer,1,['auto-merge'],https://github.com/irssi/irssi/pull/929,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/929,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,929,2018-09-04T08:17:48Z,2018-09-18T19:14:55Z,2019-06-26T23:13:29Z,MERGED,True,0,26,2,https://github.com/ailin-nemui,Remove incorrectly copied automake commands from fuzzer,1,['auto-merge'],https://github.com/irssi/irssi/pull/929,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/929#issuecomment-418285693,,@josephbisch ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,929,2018-09-04T08:17:48Z,2018-09-18T19:14:55Z,2019-06-26T23:13:29Z,MERGED,True,0,26,2,https://github.com/ailin-nemui,Remove incorrectly copied automake commands from fuzzer,1,['auto-merge'],https://github.com/irssi/irssi/pull/929,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/929#issuecomment-421299758,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,930,2018-09-04T12:12:44Z,2018-09-20T15:37:51Z,2019-06-26T23:13:31Z,MERGED,True,2,3,1,https://github.com/ailin-nemui,fix accessing unallocated text when checking entry position,1,['auto-merge'],https://github.com/irssi/irssi/pull/930,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/930,"The redraw position could be beyond the actually written text if the
entry gets resized.
fixes #928","The redraw position could be beyond the actually written text if the
entry gets resized.
fixes #928",True,{}
irssi/irssi,https://github.com/irssi/irssi,930,2018-09-04T12:12:44Z,2018-09-20T15:37:51Z,2019-06-26T23:13:31Z,MERGED,True,2,3,1,https://github.com/ailin-nemui,fix accessing unallocated text when checking entry position,1,['auto-merge'],https://github.com/irssi/irssi/pull/930,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/930#issuecomment-421306136,"The redraw position could be beyond the actually written text if the
entry gets resized.
fixes #928",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,931,2018-09-04T13:51:11Z,2018-09-07T21:05:12Z,2019-06-26T23:12:52Z,MERGED,True,37,23,3,https://github.com/ailin-nemui,Disconnect SASL properly in case the sasl module got unloaded from server,1,['auto-merge'],https://github.com/irssi/irssi/pull/931,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/931,"stops from getting on the network when sasl is unavailable
fixes #629","stops from getting on the network when sasl is unavailable
fixes #629",True,{}
irssi/irssi,https://github.com/irssi/irssi,931,2018-09-04T13:51:11Z,2018-09-07T21:05:12Z,2019-06-26T23:12:52Z,MERGED,True,37,23,3,https://github.com/ailin-nemui,Disconnect SASL properly in case the sasl module got unloaded from server,1,['auto-merge'],https://github.com/irssi/irssi/pull/931,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/931#issuecomment-418374877,"stops from getting on the network when sasl is unavailable
fixes #629",by the way the disconnect code was in the wrong place (frontend instead of core),True,{}
irssi/irssi,https://github.com/irssi/irssi,931,2018-09-04T13:51:11Z,2018-09-07T21:05:12Z,2019-06-26T23:12:52Z,MERGED,True,37,23,3,https://github.com/ailin-nemui,Disconnect SASL properly in case the sasl module got unloaded from server,1,['auto-merge'],https://github.com/irssi/irssi/pull/931,https://github.com/LemonBoy,3,https://github.com/irssi/irssi/pull/931#issuecomment-418378430,"stops from getting on the network when sasl is unavailable
fixes #629","So this server pulls the sasl cap during the negotiation? What a wild world we live in.
The patch is fine, just a couple of nits:

g_hash_table_lookup_extended can be replaced with g_hash_table_lookup since we only care about the key being there
cap_supported cannot be null if we get there",True,{}
irssi/irssi,https://github.com/irssi/irssi,931,2018-09-04T13:51:11Z,2018-09-07T21:05:12Z,2019-06-26T23:12:52Z,MERGED,True,37,23,3,https://github.com/ailin-nemui,Disconnect SASL properly in case the sasl module got unloaded from server,1,['auto-merge'],https://github.com/irssi/irssi/pull/931,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/931#issuecomment-418379530,"stops from getting on the network when sasl is unavailable
fixes #629",thanks! we can also get there when the server didn't have any CAP,True,{}
irssi/irssi,https://github.com/irssi/irssi,931,2018-09-04T13:51:11Z,2018-09-07T21:05:12Z,2019-06-26T23:12:52Z,MERGED,True,37,23,3,https://github.com/ailin-nemui,Disconnect SASL properly in case the sasl module got unloaded from server,1,['auto-merge'],https://github.com/irssi/irssi/pull/931,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/931#issuecomment-418380407,"stops from getting on the network when sasl is unavailable
fixes #629",also it seems that we store value NULL so that would create a problem with the non-extended hash table lookup,True,{}
irssi/irssi,https://github.com/irssi/irssi,931,2018-09-04T13:51:11Z,2018-09-07T21:05:12Z,2019-06-26T23:12:52Z,MERGED,True,37,23,3,https://github.com/ailin-nemui,Disconnect SASL properly in case the sasl module got unloaded from server,1,['auto-merge'],https://github.com/irssi/irssi/pull/931,https://github.com/LemonBoy,6,https://github.com/irssi/irssi/pull/931#issuecomment-418381518,"stops from getting on the network when sasl is unavailable
fixes #629","we can also get there when the server didn't have any CAP

I forgot about ill-behaving servers :)

also it seems that we store value NULL so that would create a problem with the non-extended hash table lookup

Yup, I also forgot about the missing values!",True,{}
irssi/irssi,https://github.com/irssi/irssi,933,2018-09-08T11:57:11Z,2018-09-28T18:21:31Z,2018-09-28T20:27:33Z,CLOSED,False,3,2,1,https://github.com/dwfreed,Hide all levels in window hiddenlevel from act bar,1,[],https://github.com/irssi/irssi/pull/933,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/933,Also don't always hide HIDDEN level from activity bar.,Also don't always hide HIDDEN level from activity bar.,True,{}
irssi/irssi,https://github.com/irssi/irssi,933,2018-09-08T11:57:11Z,2018-09-28T18:21:31Z,2018-09-28T20:27:33Z,CLOSED,False,3,2,1,https://github.com/dwfreed,Hide all levels in window hiddenlevel from act bar,1,[],https://github.com/irssi/irssi/pull/933,https://github.com/dwfreed,2,https://github.com/irssi/irssi/pull/933#issuecomment-419637868,Also don't always hide HIDDEN level from activity bar.,"Suggested way to fix this? gui-windows.h is in fe-text, but this code is in fe-common; arguably window activity is an fe-text thing, though",True,{}
irssi/irssi,https://github.com/irssi/irssi,933,2018-09-08T11:57:11Z,2018-09-28T18:21:31Z,2018-09-28T20:27:33Z,CLOSED,False,3,2,1,https://github.com/dwfreed,Hide all levels in window hiddenlevel from act bar,1,[],https://github.com/irssi/irssi/pull/933,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/933#issuecomment-419857372,Also don't always hide HIDDEN level from activity bar.,could  you instead /ignore * joins parts quits hidden no_act? In fact I'm not sure anymore if we should even have hidden added to the no_act levels at all,True,{}
irssi/irssi,https://github.com/irssi/irssi,933,2018-09-08T11:57:11Z,2018-09-28T18:21:31Z,2018-09-28T20:27:33Z,CLOSED,False,3,2,1,https://github.com/dwfreed,Hide all levels in window hiddenlevel from act bar,1,[],https://github.com/irssi/irssi/pull/933,https://github.com/dwfreed,4,https://github.com/irssi/irssi/pull/933#issuecomment-419877168,Also don't always hide HIDDEN level from activity bar.,"Having to maintain both an ignore and a hiddenlevel sucks, especially when you want to remove something from the hiddenlevel for a while",True,{}
irssi/irssi,https://github.com/irssi/irssi,933,2018-09-08T11:57:11Z,2018-09-28T18:21:31Z,2018-09-28T20:27:33Z,CLOSED,False,3,2,1,https://github.com/dwfreed,Hide all levels in window hiddenlevel from act bar,1,[],https://github.com/irssi/irssi/pull/933,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/933#issuecomment-425524168,Also don't always hide HIDDEN level from activity bar.,fixed by #938,True,{}
irssi/irssi,https://github.com/irssi/irssi,937,2018-09-17T10:52:23Z,2018-09-23T09:22:32Z,2019-06-26T23:12:42Z,MERGED,True,99,119,7,https://github.com/ailin-nemui,"correctly separate ignore flags (no_act, hidden) from level",4,['auto-merge'],https://github.com/irssi/irssi/pull/937,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/937,another attempt at fix #900,another attempt at fix #900,True,{}
irssi/irssi,https://github.com/irssi/irssi,937,2018-09-17T10:52:23Z,2018-09-23T09:22:32Z,2019-06-26T23:12:42Z,MERGED,True,99,119,7,https://github.com/ailin-nemui,"correctly separate ignore flags (no_act, hidden) from level",4,['auto-merge'],https://github.com/irssi/irssi/pull/937,https://github.com/dwfreed,2,https://github.com/irssi/irssi/pull/937#issuecomment-423238096,another attempt at fix #900,@dequis can you test that this fixes your issue?,True,{}
irssi/irssi,https://github.com/irssi/irssi,937,2018-09-17T10:52:23Z,2018-09-23T09:22:32Z,2019-06-26T23:12:42Z,MERGED,True,99,119,7,https://github.com/ailin-nemui,"correctly separate ignore flags (no_act, hidden) from level",4,['auto-merge'],https://github.com/irssi/irssi/pull/937,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/937#issuecomment-423238253,another attempt at fix #900,"@dwfreed reverting it as you commented didn't fix it, but reverting to your original code did",True,{}
irssi/irssi,https://github.com/irssi/irssi,937,2018-09-17T10:52:23Z,2018-09-23T09:22:32Z,2019-06-26T23:12:42Z,MERGED,True,99,119,7,https://github.com/ailin-nemui,"correctly separate ignore flags (no_act, hidden) from level",4,['auto-merge'],https://github.com/irssi/irssi/pull/937,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/937#issuecomment-423396159,another attempt at fix #900,"Can't really test much these days, no",True,{}
irssi/irssi,https://github.com/irssi/irssi,938,2018-09-17T10:56:45Z,2018-09-29T20:02:10Z,2019-06-26T23:12:43Z,MERGED,True,42,2,3,https://github.com/ailin-nemui,Don't trigger activity on hidden lines by default,1,['auto-merge'],https://github.com/irssi/irssi/pull/938,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/938,attempt to fix #933,attempt to fix #933,True,{}
irssi/irssi,https://github.com/irssi/irssi,938,2018-09-17T10:56:45Z,2018-09-29T20:02:10Z,2019-06-26T23:12:43Z,MERGED,True,42,2,3,https://github.com/ailin-nemui,Don't trigger activity on hidden lines by default,1,['auto-merge'],https://github.com/irssi/irssi/pull/938,https://github.com/dwfreed,2,https://github.com/irssi/irssi/pull/938#issuecomment-421981082,attempt to fix #933,"activity_hide_level shouldn't have to include HIDDEN, because that ends up being counterintuitive.  It would suggest that whenever a message has HIDDEN level, it would not trigger activity, rather than being based on the window's hidelevel setting.  The hidelevel activity hiding should always happen, and if a user wants to put HIDDEN in their activity_hide_level, then that will always not trigger activity if the message has HIDDEN level, even if window hidelevel would not hide it (eg because it's set to none).",True,{}
irssi/irssi,https://github.com/irssi/irssi,938,2018-09-17T10:56:45Z,2018-09-29T20:02:10Z,2019-06-26T23:12:43Z,MERGED,True,42,2,3,https://github.com/ailin-nemui,Don't trigger activity on hidden lines by default,1,['auto-merge'],https://github.com/irssi/irssi/pull/938,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/938#issuecomment-421981855,attempt to fix #933,"then we don't have a way to trigger activity for hidden things, which is bad imo. for example you may want to hide the joins by default but still see in your Act bar that someone joined",True,{}
irssi/irssi,https://github.com/irssi/irssi,938,2018-09-17T10:56:45Z,2018-09-29T20:02:10Z,2019-06-26T23:12:43Z,MERGED,True,42,2,3,https://github.com/ailin-nemui,Don't trigger activity on hidden lines by default,1,['auto-merge'],https://github.com/irssi/irssi/pull/938,https://github.com/dwfreed,4,https://github.com/irssi/irssi/pull/938#issuecomment-421982754,attempt to fix #933,"That's also counterintuitive; people aren't going to want to see activity for a channel and not see anything change in the channel as a result (because of their window hidelevel).  If they cared about the activity, they'd generally care to see it too, so they'd remove that level from their window hidelevel.",True,{}
irssi/irssi,https://github.com/irssi/irssi,938,2018-09-17T10:56:45Z,2018-09-29T20:02:10Z,2019-06-26T23:12:43Z,MERGED,True,42,2,3,https://github.com/ailin-nemui,Don't trigger activity on hidden lines by default,1,['auto-merge'],https://github.com/irssi/irssi/pull/938,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/938#issuecomment-423905223,attempt to fix #933,lgtm,True,{}
irssi/irssi,https://github.com/irssi/irssi,938,2018-09-17T10:56:45Z,2018-09-29T20:02:10Z,2019-06-26T23:12:43Z,MERGED,True,42,2,3,https://github.com/ailin-nemui,Don't trigger activity on hidden lines by default,1,['auto-merge'],https://github.com/irssi/irssi/pull/938,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/938#issuecomment-423905430,attempt to fix #933,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,939,2018-09-17T12:14:19Z,2018-09-20T15:38:04Z,2019-06-26T23:13:19Z,MERGED,True,11,11,1,https://github.com/ailin-nemui,some header fixes for C modules,2,['auto-merge'],https://github.com/irssi/irssi/pull/939,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/939,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,939,2018-09-17T12:14:19Z,2018-09-20T15:38:04Z,2019-06-26T23:13:19Z,MERGED,True,11,11,1,https://github.com/ailin-nemui,some header fixes for C modules,2,['auto-merge'],https://github.com/irssi/irssi/pull/939,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/939#issuecomment-421992501,,#940,True,{}
irssi/irssi,https://github.com/irssi/irssi,939,2018-09-17T12:14:19Z,2018-09-20T15:38:04Z,2019-06-26T23:13:19Z,MERGED,True,11,11,1,https://github.com/ailin-nemui,some header fixes for C modules,2,['auto-merge'],https://github.com/irssi/irssi/pull/939,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/939#issuecomment-422063003,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,941,2018-09-17T14:29:55Z,2018-09-23T09:22:46Z,2019-06-26T23:12:43Z,MERGED,True,5,3,2,https://github.com/dwfreed,Add window_default_hidelevel setting,3,['auto-merge'],https://github.com/irssi/irssi/pull/941,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/941,Allows specifying the hidelevel that new windows get by default.,Allows specifying the hidelevel that new windows get by default.,True,{}
irssi/irssi,https://github.com/irssi/irssi,941,2018-09-17T14:29:55Z,2018-09-23T09:22:46Z,2019-06-26T23:12:43Z,MERGED,True,5,3,2,https://github.com/dwfreed,Add window_default_hidelevel setting,3,['auto-merge'],https://github.com/irssi/irssi/pull/941,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/941#issuecomment-422284511,Allows specifying the hidelevel that new windows get by default.,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,945,2018-09-23T06:24:35Z,2019-06-17T22:33:21Z,2019-06-17T22:33:21Z,CLOSED,False,2,0,1,https://github.com/bcattaneo,makes '/window item goto' search on all servers,1,['orphan'],https://github.com/irssi/irssi/pull/945,https://github.com/bcattaneo,1,https://github.com/irssi/irssi/pull/945,"Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg","Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg",True,{}
irssi/irssi,https://github.com/irssi/irssi,945,2018-09-23T06:24:35Z,2019-06-17T22:33:21Z,2019-06-17T22:33:21Z,CLOSED,False,2,0,1,https://github.com/bcattaneo,makes '/window item goto' search on all servers,1,['orphan'],https://github.com/irssi/irssi/pull/945,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/945#issuecomment-423804334,"Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg","my only concern is that it's more difficult to implement the proper behaviour, which should  be /win item goto #chan , /win item goto #chan , /win item goto #chan , ... should probably cycle between all items . but I guess we could also use this patch as it's an improvement over the current situation. @irssi/developers  ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,945,2018-09-23T06:24:35Z,2019-06-17T22:33:21Z,2019-06-17T22:33:21Z,CLOSED,False,2,0,1,https://github.com/bcattaneo,makes '/window item goto' search on all servers,1,['orphan'],https://github.com/irssi/irssi/pull/945,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/945#issuecomment-423806023,"Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg","Looks good to me, it's better than the previous behaviour",True,{}
irssi/irssi,https://github.com/irssi/irssi,945,2018-09-23T06:24:35Z,2019-06-17T22:33:21Z,2019-06-17T22:33:21Z,CLOSED,False,2,0,1,https://github.com/bcattaneo,makes '/window item goto' search on all servers,1,['orphan'],https://github.com/irssi/irssi/pull/945,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/945#issuecomment-423988488,"Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg","I would prefer the following solution: starting with the currently active item, search for the ->next item which matches your goto channel. this may require a new function in window-items.c. If you want you can try to implement that @bcattaneo",True,{}
irssi/irssi,https://github.com/irssi/irssi,945,2018-09-23T06:24:35Z,2019-06-17T22:33:21Z,2019-06-17T22:33:21Z,CLOSED,False,2,0,1,https://github.com/bcattaneo,makes '/window item goto' search on all servers,1,['orphan'],https://github.com/irssi/irssi/pull/945,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/945#issuecomment-427591503,"Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg",@bcattaneo what's your opinion?,True,{}
irssi/irssi,https://github.com/irssi/irssi,945,2018-09-23T06:24:35Z,2019-06-17T22:33:21Z,2019-06-17T22:33:21Z,CLOSED,False,2,0,1,https://github.com/bcattaneo,makes '/window item goto' search on all servers,1,['orphan'],https://github.com/irssi/irssi/pull/945,https://github.com/bcattaneo,6,https://github.com/irssi/irssi/pull/945#issuecomment-427627920,"Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg",@ailin-nemui sounds good! let me work on it,True,{}
irssi/irssi,https://github.com/irssi/irssi,945,2018-09-23T06:24:35Z,2019-06-17T22:33:21Z,2019-06-17T22:33:21Z,CLOSED,False,2,0,1,https://github.com/bcattaneo,makes '/window item goto' search on all servers,1,['orphan'],https://github.com/irssi/irssi/pull/945,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/945#issuecomment-502875626,"Fixes #904 partially, still need to do something about this:

It needs to handle when items with the same name from several networks, or should enable users to define the network at the end or with -network like for /msg",Closing for inactivity,True,{}
irssi/irssi,https://github.com/irssi/irssi,946,2018-09-26T12:16:26Z,2018-09-29T20:02:30Z,2019-06-26T23:13:10Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,fix irssi being stuck when resized very small,1,['auto-merge'],https://github.com/irssi/irssi/pull/946,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/946,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,946,2018-09-26T12:16:26Z,2018-09-29T20:02:30Z,2019-06-26T23:13:10Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,fix irssi being stuck when resized very small,1,['auto-merge'],https://github.com/irssi/irssi/pull/946,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/946#issuecomment-424715265,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,947,2018-09-26T13:21:26Z,2018-09-29T20:03:07Z,2019-06-26T23:12:33Z,MERGED,True,14,6,1,https://github.com/ailin-nemui,Fix broken display after resizing many windows very small,1,['auto-merge'],https://github.com/irssi/irssi/pull/947,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/947,Fixes #841,Fixes #841,True,{}
irssi/irssi,https://github.com/irssi/irssi,947,2018-09-26T13:21:26Z,2018-09-29T20:03:07Z,2019-06-26T23:12:33Z,MERGED,True,14,6,1,https://github.com/ailin-nemui,Fix broken display after resizing many windows very small,1,['auto-merge'],https://github.com/irssi/irssi/pull/947,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/947#issuecomment-424715367,Fixes #841,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,948,2018-09-28T09:41:27Z,2018-10-01T22:08:30Z,2019-06-26T23:13:35Z,MERGED,True,10,0,1,https://github.com/ailin-nemui,invalidate startline and bottom_startline when hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/948,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/948,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,948,2018-09-28T09:41:27Z,2018-10-01T22:08:30Z,2019-06-26T23:13:35Z,MERGED,True,10,0,1,https://github.com/ailin-nemui,invalidate startline and bottom_startline when hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/948,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/948#issuecomment-425403244,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,948,2018-09-28T09:41:27Z,2018-10-01T22:08:30Z,2019-06-26T23:13:35Z,MERGED,True,10,0,1,https://github.com/ailin-nemui,invalidate startline and bottom_startline when hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/948,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/948#issuecomment-425403318,,may be worth to ponder if there is something I overlooked,True,{}
irssi/irssi,https://github.com/irssi/irssi,949,2018-09-28T12:31:29Z,2018-10-01T22:09:01Z,2019-06-26T23:13:36Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,Fix insufficient size of help column when the window width is small,1,['auto-merge'],https://github.com/irssi/irssi/pull/949,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/949,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,949,2018-09-28T12:31:29Z,2018-10-01T22:09:01Z,2019-06-26T23:13:36Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,Fix insufficient size of help column when the window width is small,1,['auto-merge'],https://github.com/irssi/irssi/pull/949,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/949#issuecomment-425523087,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,951,2018-09-29T11:14:22Z,2018-10-05T08:47:13Z,2019-06-26T23:13:31Z,MERGED,True,2,0,1,https://github.com/dwfreed,fe-text: clear hidelevel in layout if default,1,['auto-merge'],https://github.com/irssi/irssi/pull/951,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/951,"This is required, otherwise setting the hidelevel to the default will
not be written in the layout and so won't persist.","This is required, otherwise setting the hidelevel to the default will
not be written in the layout and so won't persist.",True,{}
irssi/irssi,https://github.com/irssi/irssi,951,2018-09-29T11:14:22Z,2018-10-05T08:47:13Z,2019-06-26T23:13:31Z,MERGED,True,2,0,1,https://github.com/dwfreed,fe-text: clear hidelevel in layout if default,1,['auto-merge'],https://github.com/irssi/irssi/pull/951,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/951#issuecomment-425672163,"This is required, otherwise setting the hidelevel to the default will
not be written in the layout and so won't persist.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,953,2018-09-30T07:00:24Z,2018-10-05T08:48:26Z,2019-06-26T23:13:26Z,MERGED,True,5,5,1,https://github.com/dwfreed,Use ##__VA_ARGS__ extension to allow for argument-less ...,1,['auto-merge'],https://github.com/irssi/irssi/pull/953,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/953,"This also makes the macros work when no arguments are given.  This is technically a GCC extension, but both GCC and clang support it in standards-compliant mode without complaint.","This also makes the macros work when no arguments are given.  This is technically a GCC extension, but both GCC and clang support it in standards-compliant mode without complaint.",True,{}
irssi/irssi,https://github.com/irssi/irssi,953,2018-09-30T07:00:24Z,2018-10-05T08:48:26Z,2019-06-26T23:13:26Z,MERGED,True,5,5,1,https://github.com/dwfreed,Use ##__VA_ARGS__ extension to allow for argument-less ...,1,['auto-merge'],https://github.com/irssi/irssi/pull/953,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/953#issuecomment-425810783,"This also makes the macros work when no arguments are given.  This is technically a GCC extension, but both GCC and clang support it in standards-compliant mode without complaint.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/954,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/954#issuecomment-425810969,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,will this cause any issues on solaris builds?,True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/954#issuecomment-427591479,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,"if we cannot answer that, could we first commit 2df8357",True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/ahf,4,https://github.com/irssi/irssi/pull/954#issuecomment-427866138,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,Neat.,True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/954#issuecomment-427929269,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,"Hm, turning a public symbol into a macro is at least ABI breaking, not sure if it counts as API breaking too.",True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/dwfreed,6,https://github.com/irssi/irssi/pull/954#issuecomment-427930437,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,"It's only API breaking if you're dumb enough to try to use the symbol in any other way besides calling it.  But yes, it is ABI breaking.  About to go to sleep, will bump the ABI number later (or somebody else can push that commit to my branch)",True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/954#issuecomment-437855127,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,we might be able to solve this better by using a signal registry and typed emissions,True,{}
irssi/irssi,https://github.com/irssi/irssi,954,2018-09-30T07:02:20Z,,2018-11-12T17:59:31Z,OPEN,False,23,6,3,https://github.com/dwfreed, Add macros to check for correct signal_emit params,2,[],https://github.com/irssi/irssi/pull/954,https://github.com/dwfreed,8,https://github.com/irssi/irssi/pull/954#issuecomment-437974211,This allows the compiler to throw an error if the params argument doesn't match the number of params provided after.  Also fixes the issues the macros detected.,"The current type system we have, for things like IS_SERVER, is a not-insignificant chunk of CPU time in my playback tests, which is why I've talked about getting rid of it on IRC.  Also, that is a runtime check, whereas this is a compile-time check.",True,{}
irssi/irssi,https://github.com/irssi/irssi,955,2018-10-01T07:13:24Z,2018-10-05T08:49:50Z,2019-06-26T23:12:33Z,MERGED,True,3,3,2,https://github.com/ailin-nemui,fix and document window width on screen width dependency,1,['auto-merge'],https://github.com/irssi/irssi/pull/955,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/955,"previously, the rsplits would be created in an incorrect way and the text would spill over for widths < 20","previously, the rsplits would be created in an incorrect way and the text would spill over for widths < 20",True,{}
irssi/irssi,https://github.com/irssi/irssi,955,2018-10-01T07:13:24Z,2018-10-05T08:49:50Z,2019-06-26T23:12:33Z,MERGED,True,3,3,2,https://github.com/ailin-nemui,fix and document window width on screen width dependency,1,['auto-merge'],https://github.com/irssi/irssi/pull/955,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/955#issuecomment-425811233,"previously, the rsplits would be created in an incorrect way and the text would spill over for widths < 20",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,956,2018-10-02T14:27:47Z,2018-10-07T08:19:03Z,2019-06-26T23:07:50Z,MERGED,True,0,1,1,https://github.com/ailin-nemui,Remove cubes from irssi.conf,1,['auto-merge'],https://github.com/irssi/irssi/pull/956,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/956,This is long and ugly and better done externally (script),This is long and ugly and better done externally (script),True,{}
irssi/irssi,https://github.com/irssi/irssi,956,2018-10-02T14:27:47Z,2018-10-07T08:19:03Z,2019-06-26T23:07:50Z,MERGED,True,0,1,1,https://github.com/ailin-nemui,Remove cubes from irssi.conf,1,['auto-merge'],https://github.com/irssi/irssi/pull/956,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/956#issuecomment-427291394,This is long and ugly and better done externally (script),@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/957,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/957#issuecomment-427138312,,Fancy! When does this bottleneck / how to test perf difference?,True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/957#issuecomment-427151765,,@dwfreed complained about this when replaying his enormous znc with largish rawlog_lines,True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/dwfreed,4,https://github.com/irssi/irssi/pull/957#issuecomment-427614466,,"Other than that and the backwards use of the queue (which, since it's a doubly-linked list, doesn't affect performance, just prevents the use of g_queue_foreach giving the right order of lines), looks good to me",True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/957#issuecomment-428232941,,while loop jay nay? @dequis,True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/957#issuecomment-433844373,,@dwfreed do you want to push a commit to implement your suggestions?,True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/957#issuecomment-436214325,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/957#issuecomment-437795587,,"@irssi/developers I reversed the queue, someone wants to give it a sanity check?",True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/vague666,9,https://github.com/irssi/irssi/pull/957#issuecomment-437801458,,"Just running the patch seems to work ok and rawlog is printed out in the correct order :)
I don't have znc to test playback performance though",True,{}
irssi/irssi,https://github.com/irssi/irssi,957,2018-10-04T07:24:38Z,2018-11-12T12:02:41Z,2021-10-12T13:57:14Z,MERGED,True,14,18,5,https://github.com/ailin-nemui,Improve rawlog performance,5,['auto-merge'],https://github.com/irssi/irssi/pull/957,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/957#issuecomment-437854993,,"thanks, vague",True,{}
irssi/irssi,https://github.com/irssi/irssi,958,2018-10-05T11:47:03Z,2018-10-07T08:21:29Z,2019-06-26T23:07:50Z,MERGED,True,17,100,3,https://github.com/ailin-nemui,Make /1/2/3/... a setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/958,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/958,Remove the noise from irssi.conf,Remove the noise from irssi.conf,True,{}
irssi/irssi,https://github.com/irssi/irssi,958,2018-10-05T11:47:03Z,2018-10-07T08:21:29Z,2019-06-26T23:07:50Z,MERGED,True,17,100,3,https://github.com/ailin-nemui,Make /1/2/3/... a setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/958,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/958#issuecomment-427591348,Remove the noise from irssi.conf,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,958,2018-10-05T11:47:03Z,2018-10-07T08:21:29Z,2019-06-26T23:07:50Z,MERGED,True,17,100,3,https://github.com/ailin-nemui,Make /1/2/3/... a setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/958,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/958#issuecomment-427635063,Remove the noise from irssi.conf,please open an issue for that...,True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/959,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.","This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.",True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/959#issuecomment-427375843,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.","Fancy! I kinda wanted this behavior too.
Might be worth moving the check from [ to the strndup to a separate function that returns either string or null?",True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/959#issuecomment-427380865,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.",good idea,True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/959#issuecomment-427591383,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/959#issuecomment-427635148,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.","always good to have options, but why would you like it off?",True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/dwfreed,6,https://github.com/irssi/irssi/pull/959#issuecomment-427636049,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.","In my case, I have a permanent query window with ChanServ (and other services), intentionally so that all ChanServ messages go there; this bypasses that
As an oper, I don't want random users to be able to flood the channel window of their choice just by forming their message in a special way",True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/959#issuecomment-427663826,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.","+1 for the setting, I thought about it but failed to come up with use cases where it's undesirable.
Regarding the latter, that's probably worth thinking about a bit more, maybe check what restrictions are set by other clients that implement this behavior. Channel membership of the source nick?",True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/959#issuecomment-427664035,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.","we talked about it on IRC but ChanServ, a prime offender, is often not on channel",True,{}
irssi/irssi,https://github.com/irssi/irssi,959,2018-10-05T13:39:53Z,2018-10-08T16:18:55Z,2019-06-26T23:12:27Z,MERGED,True,42,11,1,https://github.com/ailin-nemui,Route notices intended for channels into the channel,3,['auto-merge'],https://github.com/irssi/irssi/pull/959,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/959#issuecomment-427883241,"This works for
-ChanServ(ChanServ@services.)- [#irssi] Welcome to #irssi.

or
-bI(~xxx@unaffiliated/account)- [#irssi] your message is restrained

etc.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,961,2018-10-06T18:15:01Z,2018-10-07T08:23:19Z,2019-06-26T23:12:55Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,Show the proper TXT when topic was unset,1,[],https://github.com/irssi/irssi/pull/961,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/961,as discussed in fix #903,as discussed in fix #903,True,{}
irssi/irssi,https://github.com/irssi/irssi,962,2018-10-09T04:33:06Z,2018-10-09T15:16:21Z,2019-06-26T23:13:27Z,MERGED,True,17,14,2,https://github.com/horgh,Fix some indentation and add some comments,2,['auto-merge'],https://github.com/irssi/irssi/pull/962,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/962,I was poking at #95 and have some minor changes from reading related code.,I was poking at #95 and have some minor changes from reading related code.,True,{}
irssi/irssi,https://github.com/irssi/irssi,964,2018-10-16T23:17:12Z,2018-10-18T13:15:50Z,2019-06-26T23:13:28Z,MERGED,True,3,4,2,https://github.com/ailin-nemui,fix duplicate include guard and link libs of test,2,['auto-merge'],https://github.com/irssi/irssi/pull/964,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/964,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,964,2018-10-16T23:17:12Z,2018-10-18T13:15:50Z,2019-06-26T23:13:28Z,MERGED,True,3,4,2,https://github.com/ailin-nemui,fix duplicate include guard and link libs of test,2,['auto-merge'],https://github.com/irssi/irssi/pull/964,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/964#issuecomment-430434284,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,965,2018-10-18T23:11:38Z,2018-10-19T00:08:10Z,2019-06-26T23:13:39Z,MERGED,True,2,2,1,https://github.com/ailin-nemui,Fix wrong signal emission arg count,1,['auto-merge'],https://github.com/irssi/irssi/pull/965,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/965,Fix issues pointed out by e38774c,Fix issues pointed out by e38774c,True,{}
irssi/irssi,https://github.com/irssi/irssi,965,2018-10-18T23:11:38Z,2018-10-19T00:08:10Z,2019-06-26T23:13:39Z,MERGED,True,2,2,1,https://github.com/ailin-nemui,Fix wrong signal emission arg count,1,['auto-merge'],https://github.com/irssi/irssi/pull/965,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/965#issuecomment-431194202,Fix issues pointed out by e38774c,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,967,2018-10-27T18:55:54Z,2018-10-29T09:35:09Z,2019-06-26T23:12:36Z,MERGED,True,4,2,2,https://github.com/vague666,allow activity_hide_targets to hide activity in itemless windows,2,[],https://github.com/irssi/irssi/pull/967,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/967,for example (status) or hilight,for example (status) or hilight,True,{}
irssi/irssi,https://github.com/irssi/irssi,968,2018-10-27T18:56:21Z,2018-10-29T09:33:51Z,2019-06-26T23:12:44Z,MERGED,True,9,0,1,https://github.com/vague666,Only log saved channels,2,[],https://github.com/irssi/irssi/pull/968,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/968,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,971,2018-11-09T10:06:53Z,2018-11-19T15:07:01Z,2019-06-26T23:13:38Z,MERGED,True,129,8,6,https://github.com/ailin-nemui,fix paste_join_multiline,3,['auto-merge'],https://github.com/irssi/irssi/pull/971,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/971,fixes #970,fixes #970,True,{}
irssi/irssi,https://github.com/irssi/irssi,971,2018-11-09T10:06:53Z,2018-11-19T15:07:01Z,2019-06-26T23:13:38Z,MERGED,True,129,8,6,https://github.com/ailin-nemui,fix paste_join_multiline,3,['auto-merge'],https://github.com/irssi/irssi/pull/971,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/971#issuecomment-437326420,fixes #970,"Seems to work better but I'm not sure I agree with the assumption that only indented lines should be squashed to the earlier unindented line
I'd prefer having all \n replaced with , regardless of indentation(which can/should be removed)
Maybe make the separation char a setting, paste_replace_newline_with",True,{}
irssi/irssi,https://github.com/irssi/irssi,971,2018-11-09T10:06:53Z,2018-11-19T15:07:01Z,2019-06-26T23:13:38Z,MERGED,True,129,8,6,https://github.com/ailin-nemui,fix paste_join_multiline,3,['auto-merge'],https://github.com/irssi/irssi/pull/971,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/971#issuecomment-437329242,fixes #970,"Maybe make a lone \n on a line the squashing separator, ie
line1
line2
line3
line4
line5
turns into
line1, line2, line3
line4, line5",True,{}
irssi/irssi,https://github.com/irssi/irssi,971,2018-11-09T10:06:53Z,2018-11-19T15:07:01Z,2019-06-26T23:13:38Z,MERGED,True,129,8,6,https://github.com/ailin-nemui,fix paste_join_multiline,3,['auto-merge'],https://github.com/irssi/irssi/pull/971,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/971#issuecomment-437336188,fixes #970,"that could be discussed in a feature request, this is to restore the code to working conditions",True,{}
irssi/irssi,https://github.com/irssi/irssi,971,2018-11-09T10:06:53Z,2018-11-19T15:07:01Z,2019-06-26T23:13:38Z,MERGED,True,129,8,6,https://github.com/ailin-nemui,fix paste_join_multiline,3,['auto-merge'],https://github.com/irssi/irssi/pull/971,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/971#issuecomment-437795745,fixes #970,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,973,2018-11-12T12:15:15Z,2018-11-29T09:18:17Z,2019-06-26T23:12:35Z,MERGED,True,43,0,2,https://github.com/ailin-nemui,expose wcwidth and related to perl,3,['auto-merge'],https://github.com/irssi/irssi/pull/973,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/973,easier for scripts to match Irssi's width calculations,easier for scripts to match Irssi's width calculations,True,{}
irssi/irssi,https://github.com/irssi/irssi,973,2018-11-12T12:15:15Z,2018-11-29T09:18:17Z,2019-06-26T23:12:35Z,MERGED,True,43,0,2,https://github.com/ailin-nemui,expose wcwidth and related to perl,3,['auto-merge'],https://github.com/irssi/irssi/pull/973,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/973#issuecomment-439924152,easier for scripts to match Irssi's width calculations,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,975,2018-11-19T13:22:37Z,2018-11-26T17:52:02Z,2019-06-26T23:13:24Z,MERGED,True,23,23,7,https://github.com/NattyNarwhal,Fix irssi build on IBM i and AIX,5,[],https://github.com/irssi/irssi/pull/975,https://github.com/NattyNarwhal,1,https://github.com/irssi/irssi/pull/975,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,975,2018-11-19T13:22:37Z,2018-11-26T17:52:02Z,2019-06-26T23:13:24Z,MERGED,True,23,23,7,https://github.com/NattyNarwhal,Fix irssi build on IBM i and AIX,5,[],https://github.com/irssi/irssi/pull/975,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/975#issuecomment-439918345,,"this is highly asymmetric. for the time being maybe you can get by with -Dcap_init=irc_cap_init  in your cflags? You're probably the single only person who cares about and has access to AIX.
cap_ may be overloaded but we should change all API functions and will have to bump the abi constant
You changed the automake configuration, but does this impact the functionality of `out of tree' builds in any (negative) way?",True,{}
irssi/irssi,https://github.com/irssi/irssi,975,2018-11-19T13:22:37Z,2018-11-26T17:52:02Z,2019-06-26T23:13:24Z,MERGED,True,23,23,7,https://github.com/NattyNarwhal,Fix irssi build on IBM i and AIX,5,[],https://github.com/irssi/irssi/pull/975,https://github.com/NattyNarwhal,3,https://github.com/irssi/irssi/pull/975#issuecomment-439945694,,"Setting a preprocessor flag would also refine the name for the system definition in headers too.
The change to the automake flags in configure.ac don't affect make dist release tarballs. It does squelch some warnings in autogen though, because of this. It seems this could have deeper implications though, so I can revert it.",True,{}
irssi/irssi,https://github.com/irssi/irssi,975,2018-11-19T13:22:37Z,2018-11-26T17:52:02Z,2019-06-26T23:13:24Z,MERGED,True,23,23,7,https://github.com/NattyNarwhal,Fix irssi build on IBM i and AIX,5,[],https://github.com/irssi/irssi/pull/975,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/975#issuecomment-441441167,,"consistently rename all public cap functions, increase ABI number in common.h and we can ship this",True,{}
irssi/irssi,https://github.com/irssi/irssi,975,2018-11-19T13:22:37Z,2018-11-26T17:52:02Z,2019-06-26T23:13:24Z,MERGED,True,23,23,7,https://github.com/NattyNarwhal,Fix irssi build on IBM i and AIX,5,[],https://github.com/irssi/irssi/pull/975,https://github.com/NattyNarwhal,5,https://github.com/irssi/irssi/pull/975#issuecomment-441442947,,"Changes made. I also reverted my changes to the configure script because an RPM build environment would set the magic variables for 64-bit mode automatically, and a user can do it themse4lves if building outside of RPM anyways. The subdir-objects change has been reverted too, no changes to function. Based on what upstream says, you'll probably want to toggle that bit, but it's not my decision to make.",True,{}
irssi/irssi,https://github.com/irssi/irssi,975,2018-11-19T13:22:37Z,2018-11-26T17:52:02Z,2019-06-26T23:13:24Z,MERGED,True,23,23,7,https://github.com/NattyNarwhal,Fix irssi build on IBM i and AIX,5,[],https://github.com/irssi/irssi/pull/975,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/975#issuecomment-441445671,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,978,2018-11-25T12:43:53Z,2019-01-09T08:29:30Z,2019-06-26T23:13:13Z,MERGED,True,21,2,4,https://github.com/ailin-nemui,Fix inconsistent escaping from expand_escapes,3,['auto-merge'],https://github.com/irssi/irssi/pull/978,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/978,"The completion should only escape the backslash, so add a function which does this.
Fixes #974","The completion should only escape the backslash, so add a function which does this.
Fixes #974",True,{}
irssi/irssi,https://github.com/irssi/irssi,978,2018-11-25T12:43:53Z,2019-01-09T08:29:30Z,2019-06-26T23:13:13Z,MERGED,True,21,2,4,https://github.com/ailin-nemui,Fix inconsistent escaping from expand_escapes,3,['auto-merge'],https://github.com/irssi/irssi/pull/978,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/978#issuecomment-444153247,"The completion should only escape the backslash, so add a function which does this.
Fixes #974",@dequis ping,True,{}
irssi/irssi,https://github.com/irssi/irssi,978,2018-11-25T12:43:53Z,2019-01-09T08:29:30Z,2019-06-26T23:13:13Z,MERGED,True,21,2,4,https://github.com/ailin-nemui,Fix inconsistent escaping from expand_escapes,3,['auto-merge'],https://github.com/irssi/irssi/pull/978,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/978#issuecomment-452266546,"The completion should only escape the backslash, so add a function which does this.
Fixes #974",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,978,2018-11-25T12:43:53Z,2019-01-09T08:29:30Z,2019-06-26T23:13:13Z,MERGED,True,21,2,4,https://github.com/ailin-nemui,Fix inconsistent escaping from expand_escapes,3,['auto-merge'],https://github.com/irssi/irssi/pull/978,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/978#issuecomment-452300309,"The completion should only escape the backslash, so add a function which does this.
Fixes #974","So hmmm there's escape_string() which escapes quotes and backslashes, which sucks as a name but we can't change. And now we have escape_string_escape() which only escapes backslashes and the name is similarly ambiguous. escape_string_backslashes? If we're going for single-parameter functions that don't have a ""what"" parameter that is.",True,{}
irssi/irssi,https://github.com/irssi/irssi,978,2018-11-25T12:43:53Z,2019-01-09T08:29:30Z,2019-06-26T23:13:13Z,MERGED,True,21,2,4,https://github.com/ailin-nemui,Fix inconsistent escaping from expand_escapes,3,['auto-merge'],https://github.com/irssi/irssi/pull/978,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/978#issuecomment-452324317,"The completion should only escape the backslash, so add a function which does this.
Fixes #974",ok...,True,{}
irssi/irssi,https://github.com/irssi/irssi,979,2018-11-25T13:20:44Z,2018-12-04T16:01:34Z,2019-06-26T23:12:36Z,MERGED,True,13,0,1,https://github.com/ailin-nemui,add keep_word setting to completion,2,['auto-merge'],https://github.com/irssi/irssi/pull/979,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/979,"This setting can be used to put the word you are completing into the
completion list itself","This setting can be used to put the word you are completing into the
completion list itself",True,{}
irssi/irssi,https://github.com/irssi/irssi,979,2018-11-25T13:20:44Z,2018-12-04T16:01:34Z,2019-06-26T23:12:36Z,MERGED,True,13,0,1,https://github.com/ailin-nemui,add keep_word setting to completion,2,['auto-merge'],https://github.com/irssi/irssi/pull/979,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/979#issuecomment-442262692,"This setting can be used to put the word you are completing into the
completion list itself",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,982,2018-12-04T15:04:37Z,2018-12-18T15:57:38Z,2019-06-26T23:13:41Z,MERGED,True,1,0,1,https://github.com/yarda,Fixed problem found by Coverity Scan,1,['auto-merge'],https://github.com/irssi/irssi/pull/982,https://github.com/yarda,1,https://github.com/irssi/irssi/pull/982,"Fixes #981
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","Fixes #981
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com",True,{}
irssi/irssi,https://github.com/irssi/irssi,982,2018-12-04T15:04:37Z,2018-12-18T15:57:38Z,2019-06-26T23:13:41Z,MERGED,True,1,0,1,https://github.com/yarda,Fixed problem found by Coverity Scan,1,['auto-merge'],https://github.com/irssi/irssi/pull/982,https://github.com/yarda,2,https://github.com/irssi/irssi/pull/982#issuecomment-444240042,"Fixes #981
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com",Updated.,True,{}
irssi/irssi,https://github.com/irssi/irssi,982,2018-12-04T15:04:37Z,2018-12-18T15:57:38Z,2019-06-26T23:13:41Z,MERGED,True,1,0,1,https://github.com/yarda,Fixed problem found by Coverity Scan,1,['auto-merge'],https://github.com/irssi/irssi/pull/982,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/982#issuecomment-444861530,"Fixes #981
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","I guess the PR title is outdated, right?",True,{}
irssi/irssi,https://github.com/irssi/irssi,982,2018-12-04T15:04:37Z,2018-12-18T15:57:38Z,2019-06-26T23:13:41Z,MERGED,True,1,0,1,https://github.com/yarda,Fixed problem found by Coverity Scan,1,['auto-merge'],https://github.com/irssi/irssi/pull/982,https://github.com/yarda,4,https://github.com/irssi/irssi/pull/982#issuecomment-444868753,"Fixes #981
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","It was OK in the commit itself, I changed the title here manually.",True,{}
irssi/irssi,https://github.com/irssi/irssi,985,2018-12-07T08:53:10Z,2018-12-18T19:53:09Z,2019-06-26T23:13:22Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,automake warns that subdir-objects will be enabled in 2.0,1,['auto-merge'],https://github.com/irssi/irssi/pull/985,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/985,this was mentioned in #975,this was mentioned in #975,True,{}
irssi/irssi,https://github.com/irssi/irssi,985,2018-12-07T08:53:10Z,2018-12-18T19:53:09Z,2019-06-26T23:13:22Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,automake warns that subdir-objects will be enabled in 2.0,1,['auto-merge'],https://github.com/irssi/irssi/pull/985,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/985#issuecomment-448270621,this was mentioned in #975,"@irssi/developers
I didn't notice any issues with this sooo",True,{}
irssi/irssi,https://github.com/irssi/irssi,988,2019-01-09T20:11:22Z,2019-01-16T08:47:49Z,2019-06-26T23:13:23Z,MERGED,True,1,5,1,https://github.com/ailin-nemui,show output of git describe as PACKAGE_VERSION,1,['auto-merge'],https://github.com/irssi/irssi/pull/988,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/988,"also fixes GNUism in sed call
reported by Zed`","also fixes GNUism in sed call
reported by Zed`",True,{}
irssi/irssi,https://github.com/irssi/irssi,988,2019-01-09T20:11:22Z,2019-01-16T08:47:49Z,2019-06-26T23:13:23Z,MERGED,True,1,5,1,https://github.com/ailin-nemui,show output of git describe as PACKAGE_VERSION,1,['auto-merge'],https://github.com/irssi/irssi/pull/988,https://github.com/dwfreed,2,https://github.com/irssi/irssi/pull/988#issuecomment-452845574,"also fixes GNUism in sed call
reported by Zed`",Note that this changes PACKAGE_VERSION from 1.2-gc7ce0f32 to 1.2-dev-320-gc7ce0f32,True,{}
irssi/irssi,https://github.com/irssi/irssi,988,2019-01-09T20:11:22Z,2019-01-16T08:47:49Z,2019-06-26T23:13:23Z,MERGED,True,1,5,1,https://github.com/ailin-nemui,show output of git describe as PACKAGE_VERSION,1,['auto-merge'],https://github.com/irssi/irssi/pull/988,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/988#issuecomment-452900309,"also fixes GNUism in sed call
reported by Zed`",on bsd it would incorrectly show 1.2-1.2-dev-320-gc7ce0f32 due to the lack of \+ support. I think showing it like this would be fine and even more insightful,True,{}
irssi/irssi,https://github.com/irssi/irssi,988,2019-01-09T20:11:22Z,2019-01-16T08:47:49Z,2019-06-26T23:13:23Z,MERGED,True,1,5,1,https://github.com/ailin-nemui,show output of git describe as PACKAGE_VERSION,1,['auto-merge'],https://github.com/irssi/irssi/pull/988,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/988#issuecomment-453940508,"also fixes GNUism in sed call
reported by Zed`",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,989,2019-01-09T22:47:15Z,2019-01-14T09:17:52Z,2019-06-26T23:12:34Z,MERGED,True,299,224,3,https://github.com/ailin-nemui,update sidewayssplit syntax,1,['auto-merge'],https://github.com/irssi/irssi/pull/989,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/989,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,989,2019-01-09T22:47:15Z,2019-01-14T09:17:52Z,2019-06-26T23:12:34Z,MERGED,True,299,224,3,https://github.com/ailin-nemui,update sidewayssplit syntax,1,['auto-merge'],https://github.com/irssi/irssi/pull/989,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/989#issuecomment-452898454,,hope I didn't break anything on the way,True,{}
irssi/irssi,https://github.com/irssi/irssi,989,2019-01-09T22:47:15Z,2019-01-14T09:17:52Z,2019-06-26T23:12:34Z,MERGED,True,299,224,3,https://github.com/ailin-nemui,update sidewayssplit syntax,1,['auto-merge'],https://github.com/irssi/irssi/pull/989,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/989#issuecomment-453610298,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,990,2019-01-15T20:01:32Z,2019-01-28T23:30:44Z,2019-06-26T23:12:39Z,MERGED,True,5,0,1,https://github.com/ailin-nemui,add activity_hide_visible setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/990,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/990,makes split window activity configurable,makes split window activity configurable,True,{}
irssi/irssi,https://github.com/irssi/irssi,990,2019-01-15T20:01:32Z,2019-01-28T23:30:44Z,2019-06-26T23:12:39Z,MERGED,True,5,0,1,https://github.com/ailin-nemui,add activity_hide_visible setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/990,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/990#issuecomment-456442389,makes split window activity configurable,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,994,2019-01-22T14:25:25Z,2019-02-02T13:35:00Z,2019-06-26T23:13:07Z,MERGED,True,45,15,3,https://github.com/ailin-nemui,add more config checks and assertions in statusbar code,1,['auto-merge'],https://github.com/irssi/irssi/pull/994,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/994,should fix #993,should fix #993,True,{}
irssi/irssi,https://github.com/irssi/irssi,994,2019-01-22T14:25:25Z,2019-02-02T13:35:00Z,2019-06-26T23:13:07Z,MERGED,True,45,15,3,https://github.com/ailin-nemui,add more config checks and assertions in statusbar code,1,['auto-merge'],https://github.com/irssi/irssi/pull/994,https://github.com/josephbisch,2,https://github.com/irssi/irssi/pull/994#issuecomment-456537116,should fix #993,"(gdb) r --config=config.min
Starting program: /home/joseph/install/irssi-fix-993/bin/irssi --config=config.min
[Thread debugging using libthread_db enabled]
Using host libthread_db library ""/usr/lib/libthread_db.so.1"".

** (irssi:6014): CRITICAL **: 14:42:36.008: Expected block node at `/00000000' was of scalar type. Corrupt config?

Program received signal SIGTRAP, Trace/breakpoint trap.
0x00007ffff76c8879 in _g_log_abort (breakpoint=1) at gmessages.c:554
554	    G_BREAKPOINT ();
(gdb) bt
#0  0x00007ffff76c8879 in _g_log_abort (breakpoint=1) at gmessages.c:554
#1  0x00007ffff76c7891 in g_logv (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, format=0x555555a36260 <.str.5> ""Expected %s node at `%s%s/%s' was of scalar type. Corrupt config?"", args=0x7fffffffdce0) at gmessages.c:1371
#2  0x00007ffff76c6c9d in g_log (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, format=0x555555a36260 <.str.5> ""Expected %s node at `%s%s/%s' was of scalar type. Corrupt config?"") at gmessages.c:1413
#3  0x000055555598830c in config_node_section_index (rec=0x6070000001e0, parent=0x60300000b560, key=0x6020000007b0 ""00000000"", index=-1, new_type=2) at get.c:76
#4  0x000055555598e11e in config_parse_symbol (rec=<optimized out>, node=<optimized out>) at parse.c:176
#5  config_parse_loop (rec=0x6070000001e0, node=<optimized out>, expect=G_TOKEN_EOF) at parse.c:223
#6  0x000055555598cba6 in config_parse (rec=0x6070000001e0) at parse.c:283
#7  0x000055555596d8f9 in parse_configfile (fname=0x606000001040 ""/home/joseph/install/irssi-fix-993/config.min"") at settings.c:751
#8  0x000055555596e68b in init_configfile () at settings.c:777
#9  settings_init () at settings.c:884
#10 0x0000555555923ae7 in core_init () at core.c:240
#11 0x00005555557ebb18 in textui_init () at irssi.c:152
#12 main (argc=<optimized out>, argv=<optimized out>) at irssi.c:328

$ hexdump -C config.min 
00000000  22 22 22 22 22 22 3b 30  22 22 30 30 30 30 30 30  |"""""""""""";0""""000000|
00000010  30 30 22 22 30 30 30 30  30 30 30 30 7b           |00""""00000000{|
0000001d",True,{}
irssi/irssi,https://github.com/irssi/irssi,994,2019-01-22T14:25:25Z,2019-02-02T13:35:00Z,2019-06-26T23:13:07Z,MERGED,True,45,15,3,https://github.com/ailin-nemui,add more config checks and assertions in statusbar code,1,['auto-merge'],https://github.com/irssi/irssi/pull/994,https://github.com/josephbisch,3,https://github.com/irssi/irssi/pull/994#issuecomment-456538102,should fix #993,"(gdb) r --config=config2.min
Starting program: /home/joseph/install/irssi-fix-993/bin/irssi --config=config2.min
[Thread debugging using libthread_db enabled]
Using host libthread_db library ""/usr/lib/libthread_db.so.1"".

** (irssi:6935): CRITICAL **: 14:46:25.872: Expected list node at `/0' was of scalar type. Corrupt config?

Program received signal SIGTRAP, Trace/breakpoint trap.
0x00007ffff76c8879 in _g_log_abort (breakpoint=1) at gmessages.c:554
554	    G_BREAKPOINT ();
(gdb) bt
#0  0x00007ffff76c8879 in _g_log_abort (breakpoint=1) at gmessages.c:554
#1  0x00007ffff76c7891 in g_logv (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, format=0x555555a36260 <.str.5> ""Expected %s node at `%s%s/%s' was of scalar type. Corrupt config?"", args=0x7fffffffdce0) at gmessages.c:1371
#2  0x00007ffff76c6c9d in g_log (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, format=0x555555a36260 <.str.5> ""Expected %s node at `%s%s/%s' was of scalar type. Corrupt config?"") at gmessages.c:1413
#3  0x000055555598830c in config_node_section_index (rec=0x6070000001e0, parent=0x60300000b560, key=0x6020000005b0 ""0"", index=-1, new_type=3) at get.c:76
#4  0x000055555598e54c in config_parse_symbol (rec=<optimized out>, node=<optimized out>) at parse.c:191
#5  config_parse_loop (rec=0x6070000001e0, node=<optimized out>, expect=G_TOKEN_EOF) at parse.c:223
#6  0x000055555598cba6 in config_parse (rec=0x6070000001e0) at parse.c:283
#7  0x000055555596d8f9 in parse_configfile (fname=0x606000001040 ""/home/joseph/install/irssi-fix-993/config2.min"") at settings.c:751
#8  0x000055555596e68b in init_configfile () at settings.c:777
#9  settings_init () at settings.c:884
#10 0x0000555555923ae7 in core_init () at core.c:240
#11 0x00005555557ebb18 in textui_init () at irssi.c:152
#12 main (argc=<optimized out>, argv=<optimized out>) at irssi.c:328

hexdump -C config2.min 
00000000  30 20 30 29 30 28                                 |0 0)0(|
00000006",True,{}
irssi/irssi,https://github.com/irssi/irssi,994,2019-01-22T14:25:25Z,2019-02-02T13:35:00Z,2019-06-26T23:13:07Z,MERGED,True,45,15,3,https://github.com/ailin-nemui,add more config checks and assertions in statusbar code,1,['auto-merge'],https://github.com/irssi/irssi/pull/994,https://github.com/josephbisch,4,https://github.com/irssi/irssi/pull/994#issuecomment-456539011,should fix #993,"(gdb) r --config=config2.min
Starting program: /home/joseph/install/irssi-fix-993/bin/irssi --config=config2.min
[Thread debugging using libthread_db enabled]
Using host libthread_db library ""/usr/lib/libthread_db.so.1"".

** (irssi:7927): CRITICAL **: 14:49:25.157: Expected section node at `/statusbar' was of scalar type. Corrupt config?

Program received signal SIGTRAP, Trace/breakpoint trap.
0x00007ffff76c8879 in _g_log_abort (breakpoint=1) at gmessages.c:554
554	    G_BREAKPOINT ();
(gdb) bt
#0  0x00007ffff76c8879 in _g_log_abort (breakpoint=1) at gmessages.c:554
#1  0x00007ffff76c7891 in g_logv (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, format=0x555555a36260 <.str.5> ""Expected %s node at `%s%s/%s' was of scalar type. Corrupt config?"", args=0x7fffffffe040) at gmessages.c:1371
#2  0x00007ffff76c6c9d in g_log (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, format=0x555555a36260 <.str.5> ""Expected %s node at `%s%s/%s' was of scalar type. Corrupt config?"") at gmessages.c:1413
#3  0x000055555598830c in config_node_section_index (rec=0x6070000001e0, parent=0x60300000b560, key=0x6020000f4cb0 ""statusbar"", index=-1, new_type=-1) at get.c:76
#4  0x0000555555988deb in config_node_section (rec=<optimized out>, parent=<optimized out>, key=0xffffffff """", new_type=-1) at get.c:43
#5  config_node_traverse (rec=0x6070000001e0, section=0x5555559cda60 <.str.3> ""statusbar"", create=0) at get.c:145
#6  0x00005555557be221 in read_statusbar_config () at statusbar-config.c:275
#7  0x00005555557bde57 in statusbar_config_init () at statusbar-config.c:790
#8  0x00005555557ebc3d in textui_finish_init () at irssi.c:182
#9  main (argc=<optimized out>, argv=<optimized out>) at irssi.c:336

$ hexdump -C config2.min 
00000000  30 22 22 30 22 22 53 54  41 54 55 53 42 41 52 22  |0""""0""""STATUSBAR""|
00000010  22                                                |""|
00000011",True,{}
irssi/irssi,https://github.com/irssi/irssi,994,2019-01-22T14:25:25Z,2019-02-02T13:35:00Z,2019-06-26T23:13:07Z,MERGED,True,45,15,3,https://github.com/ailin-nemui,add more config checks and assertions in statusbar code,1,['auto-merge'],https://github.com/irssi/irssi/pull/994,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/994#issuecomment-458344726,should fix #993,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,999,2019-01-29T20:33:50Z,2019-02-08T13:37:32Z,2019-06-26T23:13:08Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,do not touch uninitialised protocols on item restore,1,['auto-merge'],https://github.com/irssi/irssi/pull/999,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/999,"if there are saved QUERY items inside the layout, Irssi will restore them in a way similar to doing /query. This works differently from channels which are only saved as bounds.
The code has a 'generic' path to create basic QUERY_REC objects for any protocol that does not require more. However, Irssi will also 'fake' protocols that are not loaded yet (thus their query_create vtable entry will not be valid)
As a result, the protocol-specific query_create method will not be invoked and the created object will be of wrong type, causing type confusion and oob write later on.
This patch will stop Irssi from creating any query in that case. Instead, only a bound will be created.
Protocol modules such as IRC might need to be updated to scan the bounds on load and recreate the queries as the original code did.
Open question: where should we store the type of the bound (i.e. QUERY)?
I have also pondered moving the autorun_startup code earlier: if it works, then this would be a workaround for this issue (the patch should still be done for protocols that are not loaded in startup)
But it does not work easily because the startup expects a working window. dummy window does not work easily because mainwindows cannot be destroyed. :-(","if there are saved QUERY items inside the layout, Irssi will restore them in a way similar to doing /query. This works differently from channels which are only saved as bounds.
The code has a 'generic' path to create basic QUERY_REC objects for any protocol that does not require more. However, Irssi will also 'fake' protocols that are not loaded yet (thus their query_create vtable entry will not be valid)
As a result, the protocol-specific query_create method will not be invoked and the created object will be of wrong type, causing type confusion and oob write later on.
This patch will stop Irssi from creating any query in that case. Instead, only a bound will be created.
Protocol modules such as IRC might need to be updated to scan the bounds on load and recreate the queries as the original code did.
Open question: where should we store the type of the bound (i.e. QUERY)?
I have also pondered moving the autorun_startup code earlier: if it works, then this would be a workaround for this issue (the patch should still be done for protocols that are not loaded in startup)
But it does not work easily because the startup expects a working window. dummy window does not work easily because mainwindows cannot be destroyed. :-(",True,{}
irssi/irssi,https://github.com/irssi/irssi,999,2019-01-29T20:33:50Z,2019-02-08T13:37:32Z,2019-06-26T23:13:08Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,do not touch uninitialised protocols on item restore,1,['auto-merge'],https://github.com/irssi/irssi/pull/999,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/999#issuecomment-460049288,"if there are saved QUERY items inside the layout, Irssi will restore them in a way similar to doing /query. This works differently from channels which are only saved as bounds.
The code has a 'generic' path to create basic QUERY_REC objects for any protocol that does not require more. However, Irssi will also 'fake' protocols that are not loaded yet (thus their query_create vtable entry will not be valid)
As a result, the protocol-specific query_create method will not be invoked and the created object will be of wrong type, causing type confusion and oob write later on.
This patch will stop Irssi from creating any query in that case. Instead, only a bound will be created.
Protocol modules such as IRC might need to be updated to scan the bounds on load and recreate the queries as the original code did.
Open question: where should we store the type of the bound (i.e. QUERY)?
I have also pondered moving the autorun_startup code earlier: if it works, then this would be a workaround for this issue (the patch should still be done for protocols that are not loaded in startup)
But it does not work easily because the startup expects a working window. dummy window does not work easily because mainwindows cannot be destroyed. :-(",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1000,2019-01-30T10:19:09Z,2019-02-11T16:33:30Z,2019-06-26T23:13:09Z,MERGED,True,7,5,3,https://github.com/ailin-nemui,Store window bounds type,1,['auto-merge'],https://github.com/irssi/irssi/pull/1000,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1000,extension of #999 to additionally take a note of the bounds' types if they were queries,extension of #999 to additionally take a note of the bounds' types if they were queries,True,{}
irssi/irssi,https://github.com/irssi/irssi,1000,2019-01-30T10:19:09Z,2019-02-11T16:33:30Z,2019-06-26T23:13:09Z,MERGED,True,7,5,3,https://github.com/ailin-nemui,Store window bounds type,1,['auto-merge'],https://github.com/irssi/irssi/pull/1000,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1000#issuecomment-460049325,extension of #999 to additionally take a note of the bounds' types if they were queries,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1001,2019-02-01T12:19:03Z,2019-02-01T13:29:22Z,2019-06-26T23:12:38Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,add missing NULL check,1,['auto-merge'],https://github.com/irssi/irssi/pull/1001,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1001,fixes #997,fixes #997,True,{}
irssi/irssi,https://github.com/irssi/irssi,1001,2019-02-01T12:19:03Z,2019-02-01T13:29:22Z,2019-06-26T23:12:38Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,add missing NULL check,1,['auto-merge'],https://github.com/irssi/irssi/pull/1001,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1001#issuecomment-459708344,fixes #997,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1001,2019-02-01T12:19:03Z,2019-02-01T13:29:22Z,2019-06-26T23:12:38Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,add missing NULL check,1,['auto-merge'],https://github.com/irssi/irssi/pull/1001,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1001#issuecomment-459722623,fixes #997,"something like
/set use_status_window off
/window new
/window server -sticky
/window level all
/window up
/quote help",True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,1001,2019-02-01T12:19:03Z,2019-02-01T13:29:22Z,2019-06-26T23:12:38Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,add missing NULL check,1,['auto-merge'],https://github.com/irssi/irssi/pull/1001,https://github.com/josephbisch,4,https://github.com/irssi/irssi/pull/1001#issuecomment-459897964,fixes #997,"In case anyone else is trying to reproduce this, I used the following commands to get it (changed the last command since @ailin-nemui commands weren't working):
/set use_status_window off
/window new
/window server -sticky
/window level all
/window up
/set activity_hide_targets tag/#chan|[=]nick",True,{}
irssi/irssi,https://github.com/irssi/irssi,1003,2019-02-02T13:51:32Z,2019-02-02T17:21:08Z,2019-06-26T23:12:38Z,MERGED,True,3,2,1,https://github.com/ailin-nemui,correct fix for #997,1,['auto-merge'],https://github.com/irssi/irssi/pull/1003,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1003,fix #1002,fix #1002,True,{}
irssi/irssi,https://github.com/irssi/irssi,1003,2019-02-02T13:51:32Z,2019-02-02T17:21:08Z,2019-06-26T23:12:38Z,MERGED,True,3,2,1,https://github.com/ailin-nemui,correct fix for #997,1,['auto-merge'],https://github.com/irssi/irssi/pull/1003,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1003#issuecomment-459966736,fix #1002,is this better @irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1003,2019-02-02T13:51:32Z,2019-02-02T17:21:08Z,2019-06-26T23:12:38Z,MERGED,True,3,2,1,https://github.com/ailin-nemui,correct fix for #997,1,['auto-merge'],https://github.com/irssi/irssi/pull/1003,https://github.com/josephbisch,3,https://github.com/irssi/irssi/pull/1003#issuecomment-459978119,fix #1002,LGTM,True,{}
irssi/irssi,https://github.com/irssi/irssi,1004,2019-02-04T13:33:58Z,2019-02-05T00:08:20Z,2019-06-26T23:12:45Z,MERGED,True,5,7,1,https://github.com/ailin-nemui,fix gui_input_get_extent,1,['auto-merge'],https://github.com/irssi/irssi/pull/1004,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1004,"it was causing a free of data with [transfer=none]
reported by @GinjaNinja32","it was causing a free of data with [transfer=none]
reported by @GinjaNinja32",True,{}
irssi/irssi,https://github.com/irssi/irssi,1004,2019-02-04T13:33:58Z,2019-02-05T00:08:20Z,2019-06-26T23:12:45Z,MERGED,True,5,7,1,https://github.com/ailin-nemui,fix gui_input_get_extent,1,['auto-merge'],https://github.com/irssi/irssi/pull/1004,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1004#issuecomment-460254084,"it was causing a free of data with [transfer=none]
reported by @GinjaNinja32",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1011,2019-02-09T21:52:58Z,2019-02-11T08:49:05Z,2019-06-26T23:13:29Z,MERGED,True,5,3,1,https://github.com/ahf,Use memcpy() instead of strncpy() to silence the compiler warning.,1,[],https://github.com/irssi/irssi/pull/1011,https://github.com/ahf,1,https://github.com/irssi/irssi/pull/1011,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1013,2019-02-12T12:28:20Z,2019-02-18T08:36:35Z,2019-06-28T20:04:36Z,MERGED,True,2,5,1,https://github.com/ailin-nemui,do not stop autolog_ignore_targets from matching itemless targets,1,"['auto-merge', 'z-affects-1.1.2', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1013,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1013,fixes #1012,fixes #1012,True,{}
irssi/irssi,https://github.com/irssi/irssi,1013,2019-02-12T12:28:20Z,2019-02-18T08:36:35Z,2019-06-28T20:04:36Z,MERGED,True,2,5,1,https://github.com/ailin-nemui,do not stop autolog_ignore_targets from matching itemless targets,1,"['auto-merge', 'z-affects-1.1.2', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1013,https://github.com/blabber,2,https://github.com/irssi/irssi/pull/1013#issuecomment-462882801,fixes #1012,Works for me 👍,True,{}
irssi/irssi,https://github.com/irssi/irssi,1014,2019-02-13T12:56:24Z,2019-02-19T06:22:07Z,2019-06-28T20:04:37Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,"fix test on Big Endian 64bit, due to pointer size mismatch",1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1014,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1014,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1014,2019-02-13T12:56:24Z,2019-02-19T06:22:07Z,2019-06-28T20:04:37Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,"fix test on Big Endian 64bit, due to pointer size mismatch",1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1014,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1014#issuecomment-463228349,,the code was wrong (casting a small size ptr to a larger one),True,{}
irssi/irssi,https://github.com/irssi/irssi,1014,2019-02-13T12:56:24Z,2019-02-19T06:22:07Z,2019-06-28T20:04:37Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,"fix test on Big Endian 64bit, due to pointer size mismatch",1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1014,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1014#issuecomment-463228860,,reported via debian build infrastructure / @rhonda,True,{}
irssi/irssi,https://github.com/irssi/irssi,1014,2019-02-13T12:56:24Z,2019-02-19T06:22:07Z,2019-06-28T20:04:37Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,"fix test on Big Endian 64bit, due to pointer size mismatch",1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1014,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1014#issuecomment-463229070,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1014,2019-02-13T12:56:24Z,2019-02-19T06:22:07Z,2019-06-28T20:04:37Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,"fix test on Big Endian 64bit, due to pointer size mismatch",1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1014,https://github.com/dwfreed,5,https://github.com/irssi/irssi/pull/1014#issuecomment-463229614,,"The fix makes sense, but why are you making a block here? I'd just put the variable declaration at the top of the function with the others.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1014,2019-02-13T12:56:24Z,2019-02-19T06:22:07Z,2019-06-28T20:04:37Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,"fix test on Big Endian 64bit, due to pointer size mismatch",1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1014,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1014#issuecomment-463236571,,"it's just a test.. but you wouldn't want any access to the temporary buf_len, could lead to wrong usage",True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/neheb,1,https://github.com/irssi/irssi/pull/1016,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.","SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1016#issuecomment-464636939,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.",@neheb any reason pkg-config doesn't work on your system?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/neheb,3,https://github.com/irssi/irssi/pull/1016#issuecomment-464824734,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.",No idea. I just assumed as a different project needed a similar fix. irssi compiles with and without deprecated APIs.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1016#issuecomment-465119125,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.","the logic is like this:
IF { Openssl can be found with pkg-config } THEN {
    use pkg-config values
} ELSE {
    try to find old ssl with SSL_library_init (because there was no pkg-config at that time)
}

so your patch should not be needed if pkg-config works. that's what I am trying to understand",True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/neheb,5,https://github.com/irssi/irssi/pull/1016#issuecomment-465290321,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.",Hrm so the patch is for the fall back path.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1016#issuecomment-465511678,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.","So if I'm understanding this right, this was never actually broken, but a different project used a similar pattern without the pkg-config step, and this is applying the same fix even though the relevant path is never reached.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1016#issuecomment-467794425,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.",@neheb any clarification here? I'd rather avoid fixing legacy code paths,True,{}
irssi/irssi,https://github.com/irssi/irssi,1016,2019-02-15T23:02:40Z,2019-02-27T10:27:37Z,2019-02-27T10:27:38Z,CLOSED,False,1,1,1,https://github.com/neheb,Fix finding OpenSSL when 1.1 with deprecated APIs disabled,1,['tls'],https://github.com/irssi/irssi/pull/1016,https://github.com/neheb,8,https://github.com/irssi/irssi/pull/1016#issuecomment-467809011,"SSL_library_init is a deprecated function. OPENSSL_init_ssl is not in 1.0.2.
SSL_CTX_new is in both.",I'll just close this,True,{}
irssi/irssi,https://github.com/irssi/irssi,1017,2019-02-18T19:58:58Z,2019-03-29T08:48:21Z,2021-10-11T20:54:59Z,MERGED,True,5,125,4,https://github.com/horgh,Remove unused functions,3,[],https://github.com/irssi/irssi/pull/1017,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/1017,"I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]","I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]",True,"{'THUMBS_UP': ['https://github.com/ailin-nemui', 'https://github.com/horgh'], 'THUMBS_DOWN': ['https://github.com/dequis']}"
irssi/irssi,https://github.com/irssi/irssi,1017,2019-02-18T19:58:58Z,2019-03-29T08:48:21Z,2021-10-11T20:54:59Z,MERGED,True,5,125,4,https://github.com/horgh,Remove unused functions,3,[],https://github.com/irssi/irssi/pull/1017,https://github.com/horgh,2,https://github.com/irssi/irssi/pull/1017#issuecomment-464890807,"I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]",I checked all modules I could find and none use these functions. (I checked all in #940 and all listed on irssi.org except psyc as I couldn't find that one's code).,True,{}
irssi/irssi,https://github.com/irssi/irssi,1017,2019-02-18T19:58:58Z,2019-03-29T08:48:21Z,2021-10-11T20:54:59Z,MERGED,True,5,125,4,https://github.com/horgh,Remove unused functions,3,[],https://github.com/irssi/irssi/pull/1017,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1017#issuecomment-465173164,"I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]","sounds good to me, we should bump ABI constant before merge",True,{}
irssi/irssi,https://github.com/irssi/irssi,1017,2019-02-18T19:58:58Z,2019-03-29T08:48:21Z,2021-10-11T20:54:59Z,MERGED,True,5,125,4,https://github.com/horgh,Remove unused functions,3,[],https://github.com/irssi/irssi/pull/1017,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1017#issuecomment-465173236,"I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1017,2019-02-18T19:58:58Z,2019-03-29T08:48:21Z,2021-10-11T20:54:59Z,MERGED,True,5,125,4,https://github.com/horgh,Remove unused functions,3,[],https://github.com/irssi/irssi/pull/1017,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1017#issuecomment-465174552,"I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]","Can we at least go through deprecation in one release? And maybe stub out the contents of the functions, but don't break API just yet",True,{}
irssi/irssi,https://github.com/irssi/irssi,1017,2019-02-18T19:58:58Z,2019-03-29T08:48:21Z,2021-10-11T20:54:59Z,MERGED,True,5,125,4,https://github.com/horgh,Remove unused functions,3,[],https://github.com/irssi/irssi/pull/1017,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1017#issuecomment-465224697,"I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]","my opinion is that we should skip deprecation

irssi is not so popular as an API provider for protocol modules (that would call those functions)
public modules do not use these functions",True,{}
irssi/irssi,https://github.com/irssi/irssi,1017,2019-02-18T19:58:58Z,2019-03-29T08:48:21Z,2021-10-11T20:54:59Z,MERGED,True,5,125,4,https://github.com/horgh,Remove unused functions,3,[],https://github.com/irssi/irssi/pull/1017,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1017#issuecomment-467794151,"I noticed a bug in one of these functions but then saw that it wasn't actually even used. So I figure it is better to delete!
These are public so perhaps we don't want to merge yet.
Edited by Nei
Functions to be removed:

NET_CALLBACK
NET_HOST_CALLBACK
RESOLVED_NAME_REC
net_gethostbyaddr_nonblock
net_connect_nonblock
[ SIMPLE_THREAD_REC, simple_init, simple_readpipe ]","@irssi/developers please vote on the first post
final votes: +2 / -1",True,{}
irssi/irssi,https://github.com/irssi/irssi,1019,2019-02-20T15:34:29Z,2019-02-27T12:00:23Z,2019-06-28T20:04:38Z,MERGED,True,22,2,1,https://github.com/ailin-nemui,make utf8proc configurable,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1019,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1019,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1019,2019-02-20T15:34:29Z,2019-02-27T12:00:23Z,2019-06-28T20:04:38Z,MERGED,True,22,2,1,https://github.com/ailin-nemui,make utf8proc configurable,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1019,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1019#issuecomment-465628219,,"https://bugs.gentoo.org/677804
http://cvsweb.openbsd.org/cgi-bin/cvsweb/ports/net/irssi/Makefile?rev=1.79&content-type=text/x-cvsweb-markup
#720",True,{}
irssi/irssi,https://github.com/irssi/irssi,1019,2019-02-20T15:34:29Z,2019-02-27T12:00:23Z,2019-06-28T20:04:38Z,MERGED,True,22,2,1,https://github.com/ailin-nemui,make utf8proc configurable,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1019,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1019#issuecomment-467793812,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1020,2019-02-23T22:37:11Z,2019-05-23T08:39:46Z,2021-10-11T20:54:59Z,MERGED,True,1,1,1,https://github.com/teschi,"allow rawlog-buffer to shrink again after lowering ""rawlog_lines""",1,[],https://github.com/irssi/irssi/pull/1020,https://github.com/teschi,1,https://github.com/irssi/irssi/pull/1020,"It seems that when setting the size of the rawlog-buffer (using ""rawlog_lines"") to a value lower the number of lines already in the buffer, the buffer will never shrink again.
This change allows multiple lines to be popped from the queue.","It seems that when setting the size of the rawlog-buffer (using ""rawlog_lines"") to a value lower the number of lines already in the buffer, the buffer will never shrink again.
This change allows multiple lines to be popped from the queue.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1020,2019-02-23T22:37:11Z,2019-05-23T08:39:46Z,2021-10-11T20:54:59Z,MERGED,True,1,1,1,https://github.com/teschi,"allow rawlog-buffer to shrink again after lowering ""rawlog_lines""",1,[],https://github.com/irssi/irssi/pull/1020,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1020#issuecomment-467793301,"It seems that when setting the size of the rawlog-buffer (using ""rawlog_lines"") to a value lower the number of lines already in the buffer, the buffer will never shrink again.
This change allows multiple lines to be popped from the queue.","we had briefly discussed this is #957
any particular reason you're in favour of allowing the buffer to shrink without reconnect?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1020,2019-02-23T22:37:11Z,2019-05-23T08:39:46Z,2021-10-11T20:54:59Z,MERGED,True,1,1,1,https://github.com/teschi,"allow rawlog-buffer to shrink again after lowering ""rawlog_lines""",1,[],https://github.com/irssi/irssi/pull/1020,https://github.com/teschi,3,https://github.com/irssi/irssi/pull/1020#issuecomment-495001087,"It seems that when setting the size of the rawlog-buffer (using ""rawlog_lines"") to a value lower the number of lines already in the buffer, the buffer will never shrink again.
This change allows multiple lines to be popped from the queue.","Sorry for replying late (I completely missed the notification).
My use-case was recording on IRC level into files, and rotating the raw-logs from inside irssi.
I had issues that the new logfile ends up having duplicates of the buffer, so i basically wanted to set the buffer to a single line.
I did play around for a bit (mainly in the config files), but couldn't get it smaller.
(There might be ways to do this without that code change, but as I already modified the log-format for my purpose, I just also added the ability to shrink)
I primarily raised the pull request because the behavior of: only ever removing one item after adding one and therefore never being able to shrink the buffer, ""felt"" a bit wrong. And removing items in a loop as long as the buffer is larger than it's maximum seemed a bit more straight-forward to me.
I don't have a strong opinion about this, as the change is kinda cosmetic, therefore I don't have any issue if it get's rejected.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1021,2019-03-08T10:24:35Z,2019-03-08T13:57:05Z,2021-04-08T22:15:01Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,fix the compilation of utf8proc code if desired,1,[],https://github.com/irssi/irssi/pull/1021,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1021,fix for #1019,fix for #1019,True,{}
irssi/irssi,https://github.com/irssi/irssi,1022,2019-03-13T22:08:54Z,2019-04-05T13:58:37Z,2021-10-11T20:55:00Z,MERGED,True,26,1,1,https://github.com/heikkiorsila,Implement a method to delete messages older than given time in scroll…,1,['auto-merge'],https://github.com/irssi/irssi/pull/1022,https://github.com/heikkiorsila,1,https://github.com/irssi/irssi/pull/1022,"Implement a method to delete messages older than given time in scrollback history.
The maximum age of messages is controlled by /set scrollback_max_age variable.
E.g. /set scrollback_max_age 7days
Rationale: I created this patch to let my client forget messages in a private chat that I don't want to keep around. In practice, ""day changed"" messages force an effective event to delete old messages when no new messages have been sent to a chat.","Implement a method to delete messages older than given time in scrollback history.
The maximum age of messages is controlled by /set scrollback_max_age variable.
E.g. /set scrollback_max_age 7days
Rationale: I created this patch to let my client forget messages in a private chat that I don't want to keep around. In practice, ""day changed"" messages force an effective event to delete old messages when no new messages have been sent to a chat.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1022,2019-03-13T22:08:54Z,2019-04-05T13:58:37Z,2021-10-11T20:55:00Z,MERGED,True,26,1,1,https://github.com/heikkiorsila,Implement a method to delete messages older than given time in scroll…,1,['auto-merge'],https://github.com/irssi/irssi/pull/1022,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1022#issuecomment-477917501,"Implement a method to delete messages older than given time in scrollback history.
The maximum age of messages is controlled by /set scrollback_max_age variable.
E.g. /set scrollback_max_age 7days
Rationale: I created this patch to let my client forget messages in a private chat that I don't want to keep around. In practice, ""day changed"" messages force an effective event to delete old messages when no new messages have been sent to a chat.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1022,2019-03-13T22:08:54Z,2019-04-05T13:58:37Z,2021-10-11T20:55:00Z,MERGED,True,26,1,1,https://github.com/heikkiorsila,Implement a method to delete messages older than given time in scroll…,1,['auto-merge'],https://github.com/irssi/irssi/pull/1022,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1022#issuecomment-480285880,"Implement a method to delete messages older than given time in scrollback history.
The maximum age of messages is controlled by /set scrollback_max_age variable.
E.g. /set scrollback_max_age 7days
Rationale: I created this patch to let my client forget messages in a private chat that I don't want to keep around. In practice, ""day changed"" messages force an effective event to delete old messages when no new messages have been sent to a chat.",@heikkiorsila you can consider contributing a description for https://github.com/irssi/irssi.github.io/blob/master/documentation/settings.markdown,True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1023,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1023#issuecomment-477918100,,"btw, /exec -o cat",True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1023#issuecomment-477918752,,"this is confusing because of the name -out, maybe use ""-window"" or such?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1023#issuecomment-478920765,,"Is this intended to write to the channel publicly as /exec -out, or to write to the current window locally as /echo? Because the help string talks about it as the former, and the code behaves as the latter.
Also I don't want to bikeshed but -window is not a great name, as it's usually a parameter that takes a value (like /echo -window <name>).
Ironically -current, which #1024 removes, would make it consistent with /echo (unchangeable default behavior aside)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/1023#issuecomment-478948766,,"-window is used for various purposes, /exec -window sends the output to active window for instance without argument while /echo -window takes an argument. /exec -out sends the output as a msg to the active window which we might not want to mix into this",True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1023#issuecomment-478952620,,"Oh, okay, then you probably want to fix the help text which has the same wording as /exec -out",True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/1023#issuecomment-479073331,,Sounds fine to me,True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1023#issuecomment-483166198,,"really, only use ""server"" if the flag is given. Otherwise the printtext would curiously end up in the server window of the active item instead of the status window",True,{}
irssi/irssi,https://github.com/irssi/irssi,1023,2019-03-22T11:31:26Z,2019-05-13T12:27:50Z,2021-10-11T20:55:01Z,MERGED,True,18,8,2,https://github.com/vague666,Add -out parameter to /CAT,1,[],https://github.com/irssi/irssi/pull/1023,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1023#issuecomment-490046342,,@vague666 please rebase this and then we can merge it,True,{}
irssi/irssi,https://github.com/irssi/irssi,1024,2019-03-22T12:12:03Z,2019-04-05T13:58:23Z,2021-10-11T20:55:01Z,MERGED,True,3,4,2,https://github.com/vague666,Remove unused parameter to /ECHO,1,['auto-merge'],https://github.com/irssi/irssi/pull/1024,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1024,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1024,2019-03-22T12:12:03Z,2019-04-05T13:58:23Z,2021-10-11T20:55:01Z,MERGED,True,3,4,2,https://github.com/vague666,Remove unused parameter to /ECHO,1,['auto-merge'],https://github.com/irssi/irssi/pull/1024,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1024#issuecomment-477918919,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1025,2019-03-22T18:10:48Z,2019-04-15T08:52:54Z,2021-10-11T20:55:02Z,MERGED,True,6,1,1,https://github.com/vague666,Add setting to choose between window name and visible name in actlist,3,[],https://github.com/irssi/irssi/pull/1025,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1025,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1026,2019-03-22T18:25:24Z,2019-04-05T14:02:42Z,2021-10-11T20:55:02Z,MERGED,True,11,1,2,https://github.com/vague666,add access to set hidden_level from perl,2,['auto-merge'],https://github.com/irssi/irssi/pull/1026,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1026,"revisit!
requires $view->redraw to update view","revisit!
requires $view->redraw to update view",True,{}
irssi/irssi,https://github.com/irssi/irssi,1026,2019-03-22T18:25:24Z,2019-04-05T14:02:42Z,2021-10-11T20:55:02Z,MERGED,True,11,1,2,https://github.com/vague666,add access to set hidden_level from perl,2,['auto-merge'],https://github.com/irssi/irssi/pull/1026,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1026#issuecomment-477919554,"revisit!
requires $view->redraw to update view",lgtm. bump ABI in common.h and see if there are any other textbuffer_view_ methods you want exposed?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1026,2019-03-22T18:25:24Z,2019-04-05T14:02:42Z,2021-10-11T20:55:02Z,MERGED,True,11,1,2,https://github.com/vague666,add access to set hidden_level from perl,2,['auto-merge'],https://github.com/irssi/irssi/pull/1026,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1026#issuecomment-478974607,"revisit!
requires $view->redraw to update view",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1026,2019-03-22T18:25:24Z,2019-04-05T14:02:42Z,2021-10-11T20:55:02Z,MERGED,True,11,1,2,https://github.com/vague666,add access to set hidden_level from perl,2,['auto-merge'],https://github.com/irssi/irssi/pull/1026,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1026#issuecomment-478974903,"revisit!
requires $view->redraw to update view",Yeah sure why not,True,{}
irssi/irssi,https://github.com/irssi/irssi,1030,2019-04-01T11:16:03Z,2019-04-04T08:44:48Z,2021-10-11T20:55:03Z,MERGED,True,20,4,2,https://github.com/blackthornedk,Add tls_* options to manual,2,['auto-merge'],https://github.com/irssi/irssi/pull/1030,https://github.com/blackthornedk,1,https://github.com/irssi/irssi/pull/1030,"Add tls_* options to the SERVER section of the manual.
Part of solution to #1029","Add tls_* options to the SERVER section of the manual.
Part of solution to #1029",True,{}
irssi/irssi,https://github.com/irssi/irssi,1030,2019-04-01T11:16:03Z,2019-04-04T08:44:48Z,2021-10-11T20:55:03Z,MERGED,True,20,4,2,https://github.com/blackthornedk,Add tls_* options to manual,2,['auto-merge'],https://github.com/irssi/irssi/pull/1030,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1030#issuecomment-479100471,"Add tls_* options to the SERVER section of the manual.
Part of solution to #1029",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1032,2019-04-03T09:55:12Z,2019-04-05T11:55:49Z,2021-10-11T20:55:04Z,MERGED,True,7,2,1,https://github.com/vague666,Add special targets to help,1,[],https://github.com/irssi/irssi/pull/1032,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1032,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1032,2019-04-03T09:55:12Z,2019-04-05T11:55:49Z,2021-10-11T20:55:04Z,MERGED,True,7,2,1,https://github.com/vague666,Add special targets to help,1,[],https://github.com/irssi/irssi/pull/1032,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1032#issuecomment-479426506,,Fancy,True,{}
irssi/irssi,https://github.com/irssi/irssi,1035,2019-04-06T18:54:32Z,2019-04-07T13:30:35Z,2021-10-11T20:55:05Z,MERGED,True,1,1,1,https://github.com/berkerpeksag,Add missing NULL check in mask_match(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1035,https://github.com/berkerpeksag,1,https://github.com/irssi/irssi/pull/1035,"Fixes #902
Please let me know if you want me to update NEWS file.","Fixes #902
Please let me know if you want me to update NEWS file.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1035,2019-04-06T18:54:32Z,2019-04-07T13:30:35Z,2021-10-11T20:55:05Z,MERGED,True,1,1,1,https://github.com/berkerpeksag,Add missing NULL check in mask_match(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1035,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1035#issuecomment-480529805,"Fixes #902
Please let me know if you want me to update NEWS file.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1036,2019-04-06T20:02:55Z,2019-04-24T11:51:07Z,2021-10-11T20:55:06Z,MERGED,True,23,5,1,https://github.com/berkerpeksag,Check return value of BIO_read() in set_pubkey_info(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1036,https://github.com/berkerpeksag,1,https://github.com/irssi/irssi/pull/1036,"Fixes #943
I tried to copy what Python does in the ssl module:
https://github.com/python/cpython/blob/2ea8099523581cf2ecc060831a53debb57ff98ee/Modules/_ssl.c#L4733-L4738
Please let me know if you want me to update NEWS file.","Fixes #943
I tried to copy what Python does in the ssl module:
https://github.com/python/cpython/blob/2ea8099523581cf2ecc060831a53debb57ff98ee/Modules/_ssl.c#L4733-L4738
Please let me know if you want me to update NEWS file.",True,{'HEART': ['https://github.com/omarkurt']}
irssi/irssi,https://github.com/irssi/irssi,1036,2019-04-06T20:02:55Z,2019-04-24T11:51:07Z,2021-10-11T20:55:06Z,MERGED,True,23,5,1,https://github.com/berkerpeksag,Check return value of BIO_read() in set_pubkey_info(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1036,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1036#issuecomment-480566432,"Fixes #943
I tried to copy what Python does in the ssl module:
https://github.com/python/cpython/blob/2ea8099523581cf2ecc060831a53debb57ff98ee/Modules/_ssl.c#L4733-L4738
Please let me know if you want me to update NEWS file.",@ahf,True,{}
irssi/irssi,https://github.com/irssi/irssi,1036,2019-04-06T20:02:55Z,2019-04-24T11:51:07Z,2021-10-11T20:55:06Z,MERGED,True,23,5,1,https://github.com/berkerpeksag,Check return value of BIO_read() in set_pubkey_info(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1036,https://github.com/berkerpeksag,3,https://github.com/irssi/irssi/pull/1036#issuecomment-481674756,"Fixes #943
I tried to copy what Python does in the ssl module:
https://github.com/python/cpython/blob/2ea8099523581cf2ecc060831a53debb57ff98ee/Modules/_ssl.c#L4733-L4738
Please let me know if you want me to update NEWS file.",Do you need anything else from me? Or are we waiting for another pair of eyes?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1036,2019-04-06T20:02:55Z,2019-04-24T11:51:07Z,2021-10-11T20:55:06Z,MERGED,True,23,5,1,https://github.com/berkerpeksag,Check return value of BIO_read() in set_pubkey_info(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1036,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1036#issuecomment-481721018,"Fixes #943
I tried to copy what Python does in the ssl module:
https://github.com/python/cpython/blob/2ea8099523581cf2ecc060831a53debb57ff98ee/Modules/_ssl.c#L4733-L4738
Please let me know if you want me to update NEWS file.",irssi project is short on maintainers/reviewers. thanks for your patience,True,{}
irssi/irssi,https://github.com/irssi/irssi,1036,2019-04-06T20:02:55Z,2019-04-24T11:51:07Z,2021-10-11T20:55:06Z,MERGED,True,23,5,1,https://github.com/berkerpeksag,Check return value of BIO_read() in set_pubkey_info(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1036,https://github.com/berkerpeksag,5,https://github.com/irssi/irssi/pull/1036#issuecomment-481780796,"Fixes #943
I tried to copy what Python does in the ssl module:
https://github.com/python/cpython/blob/2ea8099523581cf2ecc060831a53debb57ff98ee/Modules/_ssl.c#L4733-L4738
Please let me know if you want me to update NEWS file.",@ailin-nemui thank you for the invite!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1036,2019-04-06T20:02:55Z,2019-04-24T11:51:07Z,2021-10-11T20:55:06Z,MERGED,True,23,5,1,https://github.com/berkerpeksag,Check return value of BIO_read() in set_pubkey_info(),1,['auto-merge'],https://github.com/irssi/irssi/pull/1036,https://github.com/berkerpeksag,6,https://github.com/irssi/irssi/pull/1036#issuecomment-485190786,"Fixes #943
I tried to copy what Python does in the ssl module:
https://github.com/python/cpython/blob/2ea8099523581cf2ecc060831a53debb57ff98ee/Modules/_ssl.c#L4733-L4738
Please let me know if you want me to update NEWS file.",Just a friendly ping. Please let me know if you need anything from me in order to get this merged. Happy holidays!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1037,2019-04-06T20:22:04Z,2019-04-07T13:30:03Z,2021-10-11T20:55:06Z,MERGED,True,1,2,1,https://github.com/berkerpeksag,Move NULL check for cert above pubkey,1,['auto-merge'],https://github.com/irssi/irssi/pull/1037,https://github.com/berkerpeksag,1,https://github.com/irssi/irssi/pull/1037,"This patch was originally proposed by Chi Li.
Fixes #944","This patch was originally proposed by Chi Li.
Fixes #944",True,{}
irssi/irssi,https://github.com/irssi/irssi,1037,2019-04-06T20:22:04Z,2019-04-07T13:30:03Z,2021-10-11T20:55:06Z,MERGED,True,1,2,1,https://github.com/berkerpeksag,Move NULL check for cert above pubkey,1,['auto-merge'],https://github.com/irssi/irssi/pull/1037,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1037#issuecomment-480566469,"This patch was originally proposed by Chi Li.
Fixes #944",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1039,2019-04-24T11:31:48Z,2019-04-30T18:40:16Z,2021-10-11T20:55:07Z,MERGED,True,70,0,2,https://github.com/ailin-nemui,Add code to support Github Actions,2,['auto-merge'],https://github.com/irssi/irssi/pull/1039,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1039,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1039,2019-04-24T11:31:48Z,2019-04-30T18:40:16Z,2021-10-11T20:55:07Z,MERGED,True,70,0,2,https://github.com/ailin-nemui,Add code to support Github Actions,2,['auto-merge'],https://github.com/irssi/irssi/pull/1039,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1039#issuecomment-486190164,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1039,2019-04-24T11:31:48Z,2019-04-30T18:40:16Z,2021-10-11T20:55:07Z,MERGED,True,70,0,2,https://github.com/ailin-nemui,Add code to support Github Actions,2,['auto-merge'],https://github.com/irssi/irssi/pull/1039,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1039#issuecomment-486287828,,"So, what makes this preferable to travis?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1039,2019-04-24T11:31:48Z,2019-04-30T18:40:16Z,2021-10-11T20:55:07Z,MERGED,True,70,0,2,https://github.com/ailin-nemui,Add code to support Github Actions,2,['auto-merge'],https://github.com/irssi/irssi/pull/1039,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1039#issuecomment-486291702,,"I can't say yet if this will be preferable. But it's always good to have a choice :-)
(besides, travis doesn't open for me anymore in Firefox 68 and I have no idea why)
Example output: https://github.com/ailin-nemui/irssi/actions",True,{}
irssi/irssi,https://github.com/irssi/irssi,1039,2019-04-24T11:31:48Z,2019-04-30T18:40:16Z,2021-10-11T20:55:07Z,MERGED,True,70,0,2,https://github.com/ailin-nemui,Add code to support Github Actions,2,['auto-merge'],https://github.com/irssi/irssi/pull/1039,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1039#issuecomment-486294837,,404 here,True,{}
irssi/irssi,https://github.com/irssi/irssi,1039,2019-04-24T11:31:48Z,2019-04-30T18:40:16Z,2021-10-11T20:55:07Z,MERGED,True,70,0,2,https://github.com/ailin-nemui,Add code to support Github Actions,2,['auto-merge'],https://github.com/irssi/irssi/pull/1039,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1039#issuecomment-486300279,,I thought that was a public page :-(,True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1040,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1040#issuecomment-488399744,,"This is a huge change, replacing all the #includes with full paths and removing -Is from Makefile.ams",True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1040#issuecomment-488421232,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1040#issuecomment-488688435,,Fun. Are we sure this doesn't break modules?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1040#issuecomment-488695166,,pretty sure it will break them :(,True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1040#issuecomment-488696104,,rude :(,True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/falsovsky,7,https://github.com/irssi/irssi/pull/1040#issuecomment-488703596,,For me its OK. Ill update FiSH afterwards. I always thought that irssi includes were weird.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1040,2019-05-01T20:06:18Z,2019-05-06T09:12:14Z,2021-10-11T20:55:07Z,MERGED,True,2408,2188,371,https://github.com/ailin-nemui,Use full paths to includes,5,['auto-merge'],https://github.com/irssi/irssi/pull/1040,https://github.com/elfring,8,https://github.com/irssi/irssi/pull/1040#issuecomment-502956090,,Thanks for your improvement of affected include guards.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1041,2019-05-07T11:37:57Z,2019-05-13T09:50:53Z,2021-10-11T20:55:08Z,MERGED,True,10,7,1,https://github.com/ailin-nemui,fix reconnect of multiplexed proxy,1,['auto-merge'],https://github.com/irssi/irssi/pull/1041,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1041,irssi-proxy designated using the ? port assignment (network is sent as part of password) did not reconnect. reported by Peter `kinlo' Leurs,irssi-proxy designated using the ? port assignment (network is sent as part of password) did not reconnect. reported by Peter `kinlo' Leurs,True,{}
irssi/irssi,https://github.com/irssi/irssi,1041,2019-05-07T11:37:57Z,2019-05-13T09:50:53Z,2021-10-11T20:55:08Z,MERGED,True,10,7,1,https://github.com/ailin-nemui,fix reconnect of multiplexed proxy,1,['auto-merge'],https://github.com/irssi/irssi/pull/1041,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1041#issuecomment-490046076,irssi-proxy designated using the ? port assignment (network is sent as part of password) did not reconnect. reported by Peter `kinlo' Leurs,@mauke @irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1041,2019-05-07T11:37:57Z,2019-05-13T09:50:53Z,2021-10-11T20:55:08Z,MERGED,True,10,7,1,https://github.com/ailin-nemui,fix reconnect of multiplexed proxy,1,['auto-merge'],https://github.com/irssi/irssi/pull/1041,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1041#issuecomment-491755872,irssi-proxy designated using the ? port assignment (network is sent as part of password) did not reconnect. reported by Peter `kinlo' Leurs,#425,True,{}
irssi/irssi,https://github.com/irssi/irssi,1043,2019-05-13T13:16:07Z,2019-05-13T13:26:22Z,2019-10-11T20:40:41Z,MERGED,True,9,0,1,https://github.com/ailin-nemui,fix realpath on old solaris,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1043,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1043,"POSIX.1-2001 did not implement realpath(..., NULL) yet.
Fixes #1042","POSIX.1-2001 did not implement realpath(..., NULL) yet.
Fixes #1042",True,{}
irssi/irssi,https://github.com/irssi/irssi,1043,2019-05-13T13:16:07Z,2019-05-13T13:26:22Z,2019-10-11T20:40:41Z,MERGED,True,9,0,1,https://github.com/ailin-nemui,fix realpath on old solaris,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1043,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1043#issuecomment-491818121,"POSIX.1-2001 did not implement realpath(..., NULL) yet.
Fixes #1042",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1044,2019-05-15T12:24:34Z,2019-05-23T08:36:24Z,2021-10-11T20:55:08Z,MERGED,True,8,1,2,https://github.com/vague666,Make MSGLEVEL_HIDDEN accessible from scripts,1,['auto-merge'],https://github.com/irssi/irssi/pull/1044,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1044,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1044,2019-05-15T12:24:34Z,2019-05-23T08:36:24Z,2021-10-11T20:55:08Z,MERGED,True,8,1,2,https://github.com/vague666,Make MSGLEVEL_HIDDEN accessible from scripts,1,['auto-merge'],https://github.com/irssi/irssi/pull/1044,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1044#issuecomment-495118759,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1046,2019-05-22T10:46:55Z,2019-05-22T10:56:10Z,2019-05-22T10:56:10Z,CLOSED,False,2,1,1,https://github.com/Tronic,Implement social media style @nick completion.,1,[],https://github.com/irssi/irssi/pull/1046,https://github.com/Tronic,1,https://github.com/irssi/irssi/pull/1046,"Autocomplete ""@nick "" instead of traditional IRC style ""nick: ""
enabled by /set completion_char @. Use nick as usual.","Autocomplete ""@nick "" instead of traditional IRC style ""nick: ""
enabled by /set completion_char @. Use nick as usual.",True,{'THUMBS_DOWN': ['https://github.com/dwfreed']}
irssi/irssi,https://github.com/irssi/irssi,1046,2019-05-22T10:46:55Z,2019-05-22T10:56:10Z,2019-05-22T10:56:10Z,CLOSED,False,2,1,1,https://github.com/Tronic,Implement social media style @nick completion.,1,[],https://github.com/irssi/irssi/pull/1046,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/1046#issuecomment-494753519,"Autocomplete ""@nick "" instead of traditional IRC style ""nick: ""
enabled by /set completion_char @. Use nick as usual.","There's already script to accomplish this so no need to bloat irssi
https://github.com/irssi/scripts.irssi.org/blob/master/scripts/slack_complete.pl
https://github.com/irssi/scripts.irssi.org/blob/master/scripts/complete_at.pl",True,{}
irssi/irssi,https://github.com/irssi/irssi,1047,2019-05-26T16:59:32Z,2019-05-26T17:29:01Z,2021-10-11T20:55:09Z,MERGED,True,1,1,1,https://github.com/Gallactide,Syntax Issue,1,[],https://github.com/irssi/irssi/pull/1047,https://github.com/Gallactide,1,https://github.com/irssi/irssi/pull/1047,"""was is"" changed to ""was"" for otr_msg_not_in_private","""was is"" changed to ""was"" for otr_msg_not_in_private",True,{}
irssi/irssi,https://github.com/irssi/irssi,1048,2019-05-28T12:01:11Z,2019-06-10T10:33:29Z,2021-10-11T20:55:09Z,MERGED,True,33,5,2,https://github.com/vague666,Make it possible to list specific section with /set,1,[],https://github.com/irssi/irssi/pull/1048,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1048,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1048,2019-05-28T12:01:11Z,2019-06-10T10:33:29Z,2021-10-11T20:55:09Z,MERGED,True,33,5,2,https://github.com/vague666,Make it possible to list specific section with /set,1,[],https://github.com/irssi/irssi/pull/1048,https://github.com/dwfreed,2,https://github.com/irssi/irssi/pull/1048#issuecomment-496488025,,Perhaps support partial section names?  Like how /set supports partial key names for settings.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1049,2019-05-30T14:24:11Z,2019-05-30T14:47:12Z,2021-10-11T20:55:10Z,MERGED,True,3,1,1,https://github.com/mgedmin,Clarify statusbar priorities,1,[],https://github.com/irssi/irssi/pull/1049,https://github.com/mgedmin,1,https://github.com/irssi/irssi/pull/1049,"I was misled by the documentation a little bit and thought that status bar items of lower priority will be removed rather than truncated if they didn't fit.
Also, I had a hard time lowering priority below 0 because I didn't realize negative numbers have to be quoted so they won't be interpreted as option flags.","I was misled by the documentation a little bit and thought that status bar items of lower priority will be removed rather than truncated if they didn't fit.
Also, I had a hard time lowering priority below 0 because I didn't realize negative numbers have to be quoted so they won't be interpreted as option flags.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1052,2019-06-04T02:59:54Z,2019-06-10T10:21:36Z,2021-10-11T20:55:14Z,MERGED,True,3,0,1,https://github.com/ashafer01,Document Irssi::get_irssi_dir(),1,[],https://github.com/irssi/irssi/pull/1052,https://github.com/ashafer01,1,https://github.com/irssi/irssi/pull/1052,This fixes #1051 and documents the existence and function of Irssi::get_irssi_dir(),This fixes #1051 and documents the existence and function of Irssi::get_irssi_dir(),True,{}
irssi/irssi,https://github.com/irssi/irssi,1054,2019-06-09T23:11:07Z,2019-06-10T10:20:51Z,2021-10-11T20:55:15Z,MERGED,True,1,3,1,https://github.com/dwfreed,fe-text/mainwindows: fix /window balance warning,1,[],https://github.com/irssi/irssi/pull/1054,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/1054,"mainwindow_resize() expects that the mainwindow's height has not yet been updated, as it updates it itself, and throws a warning otherwise.","mainwindow_resize() expects that the mainwindow's height has not yet been updated, as it updates it itself, and throws a warning otherwise.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1057,2019-06-17T12:54:18Z,2019-06-28T09:29:20Z,2019-10-11T20:40:39Z,MERGED,True,12,4,1,https://github.com/ailin-nemui,restore 8bit support in input entry,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1057,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1057,"This should fix #1018
Regression of #764
Based on patch by @saahriktu","This should fix #1018
Regression of #764
Based on patch by @saahriktu",True,{}
irssi/irssi,https://github.com/irssi/irssi,1057,2019-06-17T12:54:18Z,2019-06-28T09:29:20Z,2019-10-11T20:40:39Z,MERGED,True,12,4,1,https://github.com/ailin-nemui,restore 8bit support in input entry,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1057,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1057#issuecomment-502673972,"This should fix #1018
Regression of #764
Based on patch by @saahriktu",at least until #671 is finished,True,{}
irssi/irssi,https://github.com/irssi/irssi,1057,2019-06-17T12:54:18Z,2019-06-28T09:29:20Z,2019-10-11T20:40:39Z,MERGED,True,12,4,1,https://github.com/ailin-nemui,restore 8bit support in input entry,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1057,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1057#issuecomment-502801382,"This should fix #1018
Regression of #764
Based on patch by @saahriktu","Kinda weird to check unichar_isprint against a character that might not be unicode after all, but i suspect this isn't the only place where that is done. Would be nice to know how to test this.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1057,2019-06-17T12:54:18Z,2019-06-28T09:29:20Z,2019-10-11T20:40:39Z,MERGED,True,12,4,1,https://github.com/ailin-nemui,restore 8bit support in input entry,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1057,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1057#issuecomment-502819872,"This should fix #1018
Regression of #764
Based on patch by @saahriktu","I agree and I haven't tested this, only followed similar code",True,{}
irssi/irssi,https://github.com/irssi/irssi,1057,2019-06-17T12:54:18Z,2019-06-28T09:29:20Z,2019-10-11T20:40:39Z,MERGED,True,12,4,1,https://github.com/ailin-nemui,restore 8bit support in input entry,1,"['auto-merge', 'z-affects-1.2.0']",https://github.com/irssi/irssi/pull/1057,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1057#issuecomment-506079513,"This should fix #1018
Regression of #764
Based on patch by @saahriktu",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1058,2019-06-17T13:22:39Z,2019-06-28T09:28:31Z,2019-10-11T20:40:38Z,MERGED,True,6,4,3,https://github.com/ailin-nemui,copy sasl username and password values,1,"['auto-merge', 'z-affects-1.1.2', 'z-affects-1.2.0', 'z-affects-1.0.7']",https://github.com/irssi/irssi/pull/1058,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1058,This should fix #1055,This should fix #1055,True,{'LAUGH': ['https://github.com/lisp-ceo']}
irssi/irssi,https://github.com/irssi/irssi,1058,2019-06-17T13:22:39Z,2019-06-28T09:28:31Z,2019-10-11T20:40:38Z,MERGED,True,6,4,3,https://github.com/ailin-nemui,copy sasl username and password values,1,"['auto-merge', 'z-affects-1.1.2', 'z-affects-1.2.0', 'z-affects-1.0.7']",https://github.com/irssi/irssi/pull/1058,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1058#issuecomment-502727810,This should fix #1055,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1058,2019-06-17T13:22:39Z,2019-06-28T09:28:31Z,2019-10-11T20:40:38Z,MERGED,True,6,4,3,https://github.com/ailin-nemui,copy sasl username and password values,1,"['auto-merge', 'z-affects-1.1.2', 'z-affects-1.2.0', 'z-affects-1.0.7']",https://github.com/irssi/irssi/pull/1058,https://github.com/ilbelkyr,3,https://github.com/irssi/irssi/pull/1058#issuecomment-502864673,This should fix #1055,"Seems to work, and valgrind is happy as well.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1059,2019-06-18T13:31:01Z,2019-06-27T05:46:42Z,2021-04-08T15:21:27Z,MERGED,True,46,20,1,https://github.com/ailin-nemui,Use the 24bit mIRC colour mappings if colors_ansi_24bit is enabled,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1059,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1059,this also fixed mIRC colours when colors_ansi_24bit is not enabled,this also fixed mIRC colours when colors_ansi_24bit is not enabled,True,{}
irssi/irssi,https://github.com/irssi/irssi,1059,2019-06-18T13:31:01Z,2019-06-27T05:46:42Z,2021-04-08T15:21:27Z,MERGED,True,46,20,1,https://github.com/ailin-nemui,Use the 24bit mIRC colour mappings if colors_ansi_24bit is enabled,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1059,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1059#issuecomment-503136525,this also fixed mIRC colours when colors_ansi_24bit is not enabled,This PR was sponsored by bl1p,True,{}
irssi/irssi,https://github.com/irssi/irssi,1059,2019-06-18T13:31:01Z,2019-06-27T05:46:42Z,2021-04-08T15:21:27Z,MERGED,True,46,20,1,https://github.com/ailin-nemui,Use the 24bit mIRC colour mappings if colors_ansi_24bit is enabled,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1059,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1059#issuecomment-506079579,this also fixed mIRC colours when colors_ansi_24bit is not enabled,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1059,2019-06-18T13:31:01Z,2019-06-27T05:46:42Z,2021-04-08T15:21:27Z,MERGED,True,46,20,1,https://github.com/ailin-nemui,Use the 24bit mIRC colour mappings if colors_ansi_24bit is enabled,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1059,https://github.com/dwfreed,4,https://github.com/irssi/irssi/pull/1059#issuecomment-506153574,this also fixed mIRC colours when colors_ansi_24bit is not enabled,"This uses mod 100, meaning possible indices are 0-99; however, neither mirc_colors nor mirc_colors24 are long enough to have index 99.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1059,2019-06-18T13:31:01Z,2019-06-27T05:46:42Z,2021-04-08T15:21:27Z,MERGED,True,46,20,1,https://github.com/ailin-nemui,Use the 24bit mIRC colour mappings if colors_ansi_24bit is enabled,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1059,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1059#issuecomment-506192727,this also fixed mIRC colours when colors_ansi_24bit is not enabled,I would hope it does... hopefully only the comment is misleading,True,{}
irssi/irssi,https://github.com/irssi/irssi,1059,2019-06-18T13:31:01Z,2019-06-27T05:46:42Z,2021-04-08T15:21:27Z,MERGED,True,46,20,1,https://github.com/ailin-nemui,Use the 24bit mIRC colour mappings if colors_ansi_24bit is enabled,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1059,https://github.com/dwfreed,6,https://github.com/irssi/irssi/pull/1059#issuecomment-506193904,this also fixed mIRC colours when colors_ansi_24bit is not enabled,"I failed at the math; indeed, only the comments are wrong (first line of both has 16, the 7 subsequent lines have 12 each; 16 + 7 * 12 = 100)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1060,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/1060#issuecomment-506960746,,hopefully a #730 fix,True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1060#issuecomment-506962188,,"https://github.com/irssi/irssi/pull/1060/files#diff-820acea5c23ba424526175f91ccd42acL153 needs a bit of thought I reckon, not sure how to handle it",True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1060#issuecomment-516024494,,I think we should keep these entries and just not use them,True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1060#issuecomment-516024865,,we may need to check why they cannot be unset(?),True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/vague666,6,https://github.com/irssi/irssi/pull/1060#issuecomment-516297669,,Not sure what you mean,True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1060#issuecomment-516330642,,"From #730:

-tls_capath/-tls_cafile implication.

my requirement: do not unset tls_capath (like you do in this patch), instead, do not enable TLS unless tls or tls_verify is given. That way, you can ""keep"" the tls_capath setting and only enable/disable the tls for a server, and  do not have to repeat the tls_capath setting when you enable tls again

Also, there's no way to get rid of -tls_capath/-tls_cafile without editing the config because the empty string is equivalent to not changing it.

this might need to be fixed, so that -tls_capath '' does remove the capath",True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/vague666,8,https://github.com/irssi/irssi/pull/1060#issuecomment-516344204,,"Ok, I've added -tls_capath '' et al so tls options can be removed with empty string
Where should I look to check for use_tls to disable tls options if use_tls is FALSE?
So far I've added a check to https://github.com/irssi/irssi/blob/master/src/core/servers-setup.c#L170
but all the different code paths makes me uncertain in case I am missing something",True,{}
irssi/irssi,https://github.com/irssi/irssi,1060,2019-06-29T14:03:57Z,2021-09-02T21:24:13Z,2021-10-11T20:55:15Z,CLOSED,False,7,7,1,https://github.com/vague666,disable tls when using -notls,2,['needs changes'],https://github.com/irssi/irssi/pull/1060,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1060#issuecomment-821966833,,"@vague666 can you check if this is fixed in latest master?
or otherwise would you  be interested in picking it up again and trying to continue the fix ;-)?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1063,2019-07-03T20:52:49Z,2019-08-07T08:42:48Z,2020-03-30T12:33:01Z,CLOSED,False,288,7,19,https://github.com/ailin-nemui,reapply a theme to previous formats,3,"['needs changes', 'WIP']",https://github.com/irssi/irssi/pull/1063,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1063,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1063,2019-07-03T20:52:49Z,2019-08-07T08:42:48Z,2020-03-30T12:33:01Z,CLOSED,False,288,7,19,https://github.com/ailin-nemui,reapply a theme to previous formats,3,"['needs changes', 'WIP']",https://github.com/irssi/irssi/pull/1063,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1063#issuecomment-508251953,,"todos:

automate it
smart match on /format changes
use the new feature to implement server_time
what to do about expandos? now they are lost/reevaluated
fix/hide it from buf.pl
tighten up code when removing lines (e.g from perl)

cool:

change nick width on the fly
test themes",True,{}
irssi/irssi,https://github.com/irssi/irssi,1063,2019-07-03T20:52:49Z,2019-08-07T08:42:48Z,2020-03-30T12:33:01Z,CLOSED,False,288,7,19,https://github.com/ailin-nemui,reapply a theme to previous formats,3,"['needs changes', 'WIP']",https://github.com/irssi/irssi/pull/1063,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1063#issuecomment-508372273,,Great work! That's a shitload of code you've produced :),True,{}
irssi/irssi,https://github.com/irssi/irssi,1063,2019-07-03T20:52:49Z,2019-08-07T08:42:48Z,2020-03-30T12:33:01Z,CLOSED,False,288,7,19,https://github.com/ailin-nemui,reapply a theme to previous formats,3,"['needs changes', 'WIP']",https://github.com/irssi/irssi/pull/1063,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1063#issuecomment-508392673,,"to test, run /scrollback redraw",True,{}
irssi/irssi,https://github.com/irssi/irssi,1063,2019-07-03T20:52:49Z,2019-08-07T08:42:48Z,2020-03-30T12:33:01Z,CLOSED,False,288,7,19,https://github.com/ailin-nemui,reapply a theme to previous formats,3,"['needs changes', 'WIP']",https://github.com/irssi/irssi/pull/1063,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1063#issuecomment-512181916,,"discussion from irc

reimplement glib code, do not require newer glib
design doesn't work, wastes 2x the memory (instead: need to avoid storing rendered lines)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1063,2019-07-03T20:52:49Z,2019-08-07T08:42:48Z,2020-03-30T12:33:01Z,CLOSED,False,288,7,19,https://github.com/ailin-nemui,reapply a theme to previous formats,3,"['needs changes', 'WIP']",https://github.com/irssi/irssi/pull/1063,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1063#issuecomment-512203727,,"I think a design that only stores a limited, tiny amount of lines also wouldn't need reimplementing glib stuff, as a bunch of strdup wouldn't hurt in that case",True,{}
irssi/irssi,https://github.com/irssi/irssi,1063,2019-07-03T20:52:49Z,2019-08-07T08:42:48Z,2020-03-30T12:33:01Z,CLOSED,False,288,7,19,https://github.com/ailin-nemui,reapply a theme to previous formats,3,"['needs changes', 'WIP']",https://github.com/irssi/irssi/pull/1063,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1063#issuecomment-519002646,,superseded by #1079,True,{}
irssi/irssi,https://github.com/irssi/irssi,1064,2019-07-07T22:03:57Z,2019-07-16T14:16:35Z,2021-10-11T20:55:16Z,MERGED,True,1844,66,55,https://github.com/ailin-nemui,meson build support,3,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1064,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1064,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1064,2019-07-07T22:03:57Z,2019-07-16T14:16:35Z,2021-10-11T20:55:16Z,MERGED,True,1844,66,55,https://github.com/ailin-nemui,meson build support,3,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1064,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1064#issuecomment-509034583,,"This will change Irssi to use Meson Build system
Todos:

capsicum
fe-fuzz
otr
perl
make dist (?) --> ninja dist
proxy
double check -D directories. do they need get_option('prefix') / ?
remove crap at the end of root meson.build
test with travis
subdir('tests')
subdir('docs')
subdir('scripts')
subdir('themes')
subdir('utils')",True,{}
irssi/irssi,https://github.com/irssi/irssi,1064,2019-07-07T22:03:57Z,2019-07-16T14:16:35Z,2021-10-11T20:55:16Z,MERGED,True,1844,66,55,https://github.com/ailin-nemui,meson build support,3,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1064,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1064#issuecomment-509165260,,Fun! I guess we're keeping autotools for a while?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1064,2019-07-07T22:03:57Z,2019-07-16T14:16:35Z,2021-10-11T20:55:16Z,MERGED,True,1844,66,55,https://github.com/ailin-nemui,meson build support,3,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1064,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1064#issuecomment-509172860,,I wouldn't keep it too long since we already have not enough people maintaining irssi :D,True,{}
irssi/irssi,https://github.com/irssi/irssi,1064,2019-07-07T22:03:57Z,2019-07-16T14:16:35Z,2021-10-11T20:55:16Z,MERGED,True,1844,66,55,https://github.com/ailin-nemui,meson build support,3,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1064,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1064#issuecomment-509454886,,@irssi/developers please test,True,{}
irssi/irssi,https://github.com/irssi/irssi,1064,2019-07-07T22:03:57Z,2019-07-16T14:16:35Z,2021-10-11T20:55:16Z,MERGED,True,1844,66,55,https://github.com/ailin-nemui,meson build support,3,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1064,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1064#issuecomment-509456531,,"short meson manual:
meson Build
ninja -C Build
ninja -C Build install










See available options:
meson configure


Use available options:
meson Build -Denable-true-color=yes


Change options:
meson --reconfigure Build -Dwith-proxy=yes


Set prefix:
meson Build --prefix=$HOME/irssi_inst


Make:
ninja


Make V=1
ninja -v


Make install:
ninja install",True,{}
irssi/irssi,https://github.com/irssi/irssi,1064,2019-07-07T22:03:57Z,2019-07-16T14:16:35Z,2021-10-11T20:55:16Z,MERGED,True,1844,66,55,https://github.com/ailin-nemui,meson build support,3,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1064,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1064#issuecomment-511224202,,"I say good enough?
@irssi/developers",True,{}
irssi/irssi,https://github.com/irssi/irssi,1065,2019-07-16T14:24:05Z,2019-07-17T09:45:41Z,2021-10-11T20:55:17Z,MERGED,True,7,2,3,https://github.com/ailin-nemui,Misc Meson Fixes,3,['auto-merge'],https://github.com/irssi/irssi/pull/1065,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1065,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1065,2019-07-16T14:24:05Z,2019-07-17T09:45:41Z,2021-10-11T20:55:17Z,MERGED,True,7,2,3,https://github.com/ailin-nemui,Misc Meson Fixes,3,['auto-merge'],https://github.com/irssi/irssi/pull/1065,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1065#issuecomment-512150815,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1067,2019-07-17T11:37:46Z,2019-07-18T08:56:41Z,2021-10-11T20:55:17Z,MERGED,True,46,8,11,https://github.com/ailin-nemui,modularise irc component,1,['auto-merge'],https://github.com/irssi/irssi/pull/1067,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1067,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1067,2019-07-17T11:37:46Z,2019-07-18T08:56:41Z,2021-10-11T20:55:17Z,MERGED,True,46,8,11,https://github.com/ailin-nemui,modularise irc component,1,['auto-merge'],https://github.com/irssi/irssi/pull/1067,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1067#issuecomment-512228915,,"this is in preparation of ""/load irc""
there is a logic error with misusing allocation/deallocation functions when registering a chatnet:
diff --git a/src/irc/core/irc-chatnets.c b/src/irc/core/irc-chatnets.c
index c3b24a11..732d33ab 100644
--- a/src/irc/core/irc-chatnets.c
+++ b/src/irc/core/irc-chatnets.c
@@ -110,6 +110,9 @@ static void sig_chatnet_destroyed(IRC_CHATNET_REC *rec)
 void irc_chatnets_init(void)
 {
 	signal_add(""chatnet read"", (SIGNAL_FUNC) sig_chatnet_read);
+	signal_emit(""setup reread"", 0); /* XXX: use the old destroy
+					handlers, and reread with the
+					new read handlers */
 	signal_add(""chatnet saved"", (SIGNAL_FUNC) sig_chatnet_saved);
 	signal_add(""chatnet destroyed"", (SIGNAL_FUNC) sig_chatnet_destroyed);
 }",True,{}
irssi/irssi,https://github.com/irssi/irssi,1067,2019-07-17T11:37:46Z,2019-07-18T08:56:41Z,2021-10-11T20:55:17Z,MERGED,True,46,8,11,https://github.com/ailin-nemui,modularise irc component,1,['auto-merge'],https://github.com/irssi/irssi/pull/1067,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1067#issuecomment-512228995,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1068,2019-07-17T12:11:04Z,2019-07-17T12:16:52Z,2021-10-11T20:55:18Z,MERGED,True,23,8,2,https://github.com/ailin-nemui,Improve Meson documentation,2,[],https://github.com/irssi/irssi/pull/1068,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1068,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1070,2019-07-18T08:29:40Z,2019-07-18T08:32:31Z,2021-10-11T20:55:19Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix small overflow,1,[],https://github.com/irssi/irssi/pull/1070,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1070,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1071,2019-07-18T09:37:30Z,2019-07-18T12:22:55Z,2021-10-11T20:55:20Z,MERGED,True,4,1,1,https://github.com/ailin-nemui,carry rpath to working perl test,1,[],https://github.com/irssi/irssi/pull/1071,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1071,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1071,2019-07-18T09:37:30Z,2019-07-18T12:22:55Z,2021-10-11T20:55:20Z,MERGED,True,4,1,1,https://github.com/ailin-nemui,carry rpath to working perl test,1,[],https://github.com/irssi/irssi/pull/1071,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1071#issuecomment-512743314,,"This one was

Running compile:
Working directory:  /tmp/tmprkbi28ef
Command line:  cc -I/usr/local/include -I/usr/lib/perl5/5.30/core_perl/CORE -L/usr/local/lib -L/usr/lib/perl5/5.30/core_perl/CORE /tmp/tmprkbi28ef/testfile.c -o /tmp/tmprkbi28ef/output.exe -pipe -O0 -D_REENTRANT -D_GNU_SOURCE -fwrapv -fno-strict-aliasing -fstack-protector-strong -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2 -fPIC -Wl,-E -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -fstack-protector-strong -Wl,--start-group -lperl -lpthread -ldl -lm -lcrypt -lutil -Wl,--end-group 

Code:
 
#include <EXTERN.h>
#include <perl.h>
int main()
{
  perl_alloc();
  return 0;
}

Compiler stdout:
 
Compiler stderr:
 In file included from /usr/include/sys/types.h:25,
                 from /usr/lib/perl5/5.30/core_perl/CORE/perl.h:697,
                 from /tmp/tmprkbi28ef/testfile.c:3:
/usr/include/features.h:382:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]
 #  warning _FORTIFY_SOURCE requires compiling with optimization (-O)
    ^~~~~~~

Program stdout:


Program stderr:

/tmp/tmprkbi28ef/output.exe: error while loading shared libraries: libperl.so: cannot open shared object file: No such file or directory

Checking if ""working Perl support"" runs: NO (127)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1072,2019-07-18T09:39:23Z,2019-07-18T16:47:20Z,2021-10-11T20:55:20Z,CLOSED,False,2,0,2,https://github.com/dequis,"Add ""automatically generated by configure"" comments to source",1,[],https://github.com/irssi/irssi/pull/1072,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/1072,"Since running ./configure now changes git-tracked source files to have
this line, might as well have that git tracked so it doesn't create
local changes all the time.","Since running ./configure now changes git-tracked source files to have
this line, might as well have that git tracked so it doesn't create
local changes all the time.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1072,2019-07-18T09:39:23Z,2019-07-18T16:47:20Z,2021-10-11T20:55:20Z,CLOSED,False,2,0,2,https://github.com/dequis,"Add ""automatically generated by configure"" comments to source",1,[],https://github.com/irssi/irssi/pull/1072,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1072#issuecomment-512744331,"Since running ./configure now changes git-tracked source files to have
this line, might as well have that git tracked so it doesn't create
local changes all the time.","good point, instead I need to rip out this part of the code from configure.ac :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1072,2019-07-18T09:39:23Z,2019-07-18T16:47:20Z,2021-10-11T20:55:20Z,CLOSED,False,2,0,2,https://github.com/dequis,"Add ""automatically generated by configure"" comments to source",1,[],https://github.com/irssi/irssi/pull/1072,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1072#issuecomment-512744389,"Since running ./configure now changes git-tracked source files to have
this line, might as well have that git tracked so it doesn't create
local changes all the time.",otherwise we will desync,True,{}
irssi/irssi,https://github.com/irssi/irssi,1072,2019-07-18T09:39:23Z,2019-07-18T16:47:20Z,2021-10-11T20:55:20Z,CLOSED,False,2,0,2,https://github.com/dequis,"Add ""automatically generated by configure"" comments to source",1,[],https://github.com/irssi/irssi/pull/1072,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1072#issuecomment-512748340,"Since running ./configure now changes git-tracked source files to have
this line, might as well have that git tracked so it doesn't create
local changes all the time.","The part I don't quite get is when this change happened, there's not much going on configure.ac",True,{}
irssi/irssi,https://github.com/irssi/irssi,1073,2019-07-18T16:05:30Z,2019-07-18T16:47:20Z,2021-10-11T20:55:21Z,MERGED,True,0,37,3,https://github.com/ailin-nemui,manually maintain irc loader,1,[],https://github.com/irssi/irssi/pull/1073,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1073,Fixes #1072,Fixes #1072,True,{}
irssi/irssi,https://github.com/irssi/irssi,1073,2019-07-18T16:05:30Z,2019-07-18T16:47:20Z,2021-10-11T20:55:21Z,MERGED,True,0,37,3,https://github.com/ailin-nemui,manually maintain irc loader,1,[],https://github.com/irssi/irssi/pull/1073,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1073#issuecomment-512881650,Fixes #1072,"the code is simplified because it's easier to maintain this manually, and to match the meson code",True,{}
irssi/irssi,https://github.com/irssi/irssi,1073,2019-07-18T16:05:30Z,2019-07-18T16:47:20Z,2021-10-11T20:55:21Z,MERGED,True,0,37,3,https://github.com/ailin-nemui,manually maintain irc loader,1,[],https://github.com/irssi/irssi/pull/1073,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1073#issuecomment-513151406,Fixes #1072,That works. Thank you!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1073,2019-07-18T16:05:30Z,2019-07-18T16:47:20Z,2021-10-11T20:55:21Z,MERGED,True,0,37,3,https://github.com/ailin-nemui,manually maintain irc loader,1,[],https://github.com/irssi/irssi/pull/1073,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1073#issuecomment-513194147,Fixes #1072,thanks to you!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1074,2019-07-20T21:30:29Z,2019-07-20T21:39:25Z,2021-10-11T20:55:21Z,MERGED,True,1,1,1,https://github.com/horgh,Link to Ninja site and use HTTPS for Meson site,1,[],https://github.com/irssi/irssi/pull/1074,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/1074,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1074,2019-07-20T21:30:29Z,2019-07-20T21:39:25Z,2021-10-11T20:55:21Z,MERGED,True,1,1,1,https://github.com/horgh,Link to Ninja site and use HTTPS for Meson site,1,[],https://github.com/irssi/irssi/pull/1074,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1074#issuecomment-513501178,,oops,True,{}
irssi/irssi,https://github.com/irssi/irssi,1075,2019-07-20T22:09:03Z,2019-07-20T22:21:39Z,2021-10-11T20:55:22Z,MERGED,True,19,4,2,https://github.com/ailin-nemui,do not use ?: to stay compatible with meson 0.49,1,[],https://github.com/irssi/irssi/pull/1075,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1075,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1075,2019-07-20T22:09:03Z,2019-07-20T22:21:39Z,2021-10-11T20:55:22Z,MERGED,True,19,4,2,https://github.com/ailin-nemui,do not use ?: to stay compatible with meson 0.49,1,[],https://github.com/irssi/irssi/pull/1075,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1075#issuecomment-513502712,,"reported by @horgh
mesonbuild/meson#5003
mesonbuild/meson@841da29 0.50.0",True,{}
irssi/irssi,https://github.com/irssi/irssi,1076,2019-07-27T18:27:32Z,2019-07-27T19:49:56Z,2021-04-08T22:15:02Z,MERGED,True,1,1,1,https://github.com/l2dy,Free g_strdup() allocated memory with g_free(),1,[],https://github.com/irssi/irssi/pull/1076,https://github.com/l2dy,1,https://github.com/irssi/irssi/pull/1076,"Memory allocated with g_malloc() must be freed with g_free(). The
allocators may use different memory pools.
See: https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html","Memory allocated with g_malloc() must be freed with g_free(). The
allocators may use different memory pools.
See: https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html",True,{}
irssi/irssi,https://github.com/irssi/irssi,1076,2019-07-27T18:27:32Z,2019-07-27T19:49:56Z,2021-04-08T22:15:02Z,MERGED,True,1,1,1,https://github.com/l2dy,Free g_strdup() allocated memory with g_free(),1,[],https://github.com/irssi/irssi/pull/1076,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1076#issuecomment-515709120,"Memory allocated with g_malloc() must be freed with g_free(). The
allocators may use different memory pools.
See: https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html",thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,1077,2019-07-27T18:34:30Z,2019-07-27T23:26:58Z,2021-10-11T20:55:22Z,MERGED,True,4,1,2,https://github.com/l2dy,Fix memory leaks,1,['auto-merge'],https://github.com/irssi/irssi/pull/1077,https://github.com/l2dy,1,https://github.com/irssi/irssi/pull/1077,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1077,2019-07-27T18:34:30Z,2019-07-27T23:26:58Z,2021-10-11T20:55:22Z,MERGED,True,4,1,2,https://github.com/l2dy,Fix memory leaks,1,['auto-merge'],https://github.com/irssi/irssi/pull/1077,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1077#issuecomment-515708500,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1078,2019-07-27T22:55:29Z,2019-08-04T20:16:56Z,2021-10-11T20:55:23Z,MERGED,True,3,2,1,https://github.com/ailin-nemui,fix cut off text with theme-indent and /set indent_always off,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1078,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1078,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1078,2019-07-27T22:55:29Z,2019-08-04T20:16:56Z,2021-10-11T20:55:23Z,MERGED,True,3,2,1,https://github.com/ailin-nemui,fix cut off text with theme-indent and /set indent_always off,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1078,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1078#issuecomment-515783305,,How do I repro this issue?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1078,2019-07-27T22:55:29Z,2019-08-04T20:16:56Z,2021-10-11T20:55:23Z,MERGED,True,3,2,1,https://github.com/ailin-nemui,fix cut off text with theme-indent and /set indent_always off,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1078,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1078#issuecomment-515791456,,"add
indent_default = ""...something..."";

to your theme abstracts
/load theme_indent
/set indent_always off

check that wrapped long words (e.g. URLs ) get overwritten by the indentation (without this fix)
What I hope the fix does (: disable the callback and the indent function for line continuations and long words",True,{}
irssi/irssi,https://github.com/irssi/irssi,1078,2019-07-27T22:55:29Z,2019-08-04T20:16:56Z,2021-10-11T20:55:23Z,MERGED,True,3,2,1,https://github.com/ailin-nemui,fix cut off text with theme-indent and /set indent_always off,1,"['needs testing', 'auto-merge']",https://github.com/irssi/irssi/pull/1078,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1078#issuecomment-516019601,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1079,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1079#issuecomment-519002517,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text",another attempt at #1063,True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1079#issuecomment-519006428,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","reimplement glib code, do not require newer glib


 design doesn't waste twice the memory, uses cache and original formats


completely removed the old textbuffer representation ( https://github.com/shabble/irssi-docs/wiki/Notes-256-Colour#textbuffer-encoding )

this may have some drawbacks:

texts are no longer NUL-safe
additional escaping routines would need to be introduced if text is supposed to contain formatting codes


benefits

one less layer of indirection
NUL-terminated strings, no weird issues with cut off UTF8 (although we fixed that)
simpler code





the textbuffer-formats is an extra module, so if we unhook the signals it should go back to the ""old way"" of storing pre-rendered text


Todos

 differentiate between deleted formats and empty lines
 fix all the bugs



we should check if the removal of the optimised textbuffer has any visible performance implications",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/vague666,4,https://github.com/irssi/irssi/pull/1079#issuecomment-519025667,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","first-off: autotools compiled successfully
then, I have a lot of blinking elements after applying the patch
https://vague.se/pastes/2019-08-07_11:41:58_1920x1080_scrot.png
https://vague.se/pastes/2019-08-07_11:42:26_1920x1080_scrot.png
I'll test reapplying themes next",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/1079#issuecomment-519028829,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","/scrollback redraw seems to work well, too bad it's not done automatically yet :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1079#issuecomment-519036753,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","-> under what circumstances would we ""want"" an automated scrollback redraw?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/vague666,7,https://github.com/irssi/irssi/pull/1079#issuecomment-519046145,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","/set theme and /format .... imo, and /window theme
basically in all instances :)
Maybe control it with a setting",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1079#issuecomment-519243413,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text",@vague666 now with less blink,True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/1079#issuecomment-520739049,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","You kinda got unrelated stuff in this branch. Also, nice.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/1079#issuecomment-520769483,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","...I guess that's one way to make the changes not unrelated
Seriously though this PR was already massive enough that it's very hard to give it a proper review, adding a bunch of new features on top doesn't help :(
Feel free to have a kitchen sink branch to experiment with, but don't make that this branch. I'd rather aim to get the original feature reviewed and merged.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/1079#issuecomment-520910663,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","the code is mostly split into 3 parts;

ripping out the old textbuffer implementation and storing the line texts and formats
the expando caching in special-vars
the perl code",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/1079#issuecomment-521376221,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","you should be able to review each commit individually, but  it's still a big hairy lump
for the view_update_line_cache in textbuffer-view.c, it would make sense to review with white-space ignored (?w=1 )",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/1079#issuecomment-599825071,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text",@irssi/developers please test,True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/vague666,14,https://github.com/irssi/irssi/pull/1079#issuecomment-603784020,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","There's some drawing issues
tested with 1079.diff on HEAD, Irssi v1.2-dev-522-g991e24fb-dirty and themes https://irssi-import.github.io/themes/elite.theme and https://bitbucket.org/realnot/dirssi/src/master/



irssi
elite
dirssi




HEAD + diff




g991e24fb





Also, I'd still like the scrollback to be redrawn automatically if possible when theme is applied",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,15,https://github.com/irssi/irssi/pull/1079#issuecomment-603810116,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","thank you very much for the detailed report. btw the auto redraw will come, just not in this PR!",True,{'THUMBS_UP': ['https://github.com/vague666']}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,16,https://github.com/irssi/irssi/pull/1079#issuecomment-605704559,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text","I think I fixed dirssi, still need to check elite",True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,17,https://github.com/irssi/irssi/pull/1079#issuecomment-605706905,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text",now I think that should fix elite,True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/vague666,18,https://github.com/irssi/irssi/pull/1079#issuecomment-605954551,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text",Seems to work as expected now with the themes I've tested :),True,{}
irssi/irssi,https://github.com/irssi/irssi,1079,2019-08-07T08:42:19Z,2020-04-30T07:00:35Z,2021-10-11T20:55:23Z,MERGED,True,1206,634,32,https://github.com/ailin-nemui,reapply a theme to previous formats,6,['auto-merge'],https://github.com/irssi/irssi/pull/1079,https://github.com/ailin-nemui,19,https://github.com/irssi/irssi/pull/1079#issuecomment-616832951,"fix /set hide_colors
 fix line IDs on perl side
 reimplement the colour stripping in line2text",@irssi/developers last chance to review....,True,{}
irssi/irssi,https://github.com/irssi/irssi,1080,2019-08-07T09:33:28Z,,2019-10-11T20:50:40Z,OPEN,False,15,4,1,https://github.com/vague666,WIP for saving only channel-window layout,1,['WIP'],https://github.com/irssi/irssi/pull/1080,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1080,Need some opinions on how to go forward with this,Need some opinions on how to go forward with this,True,{}
irssi/irssi,https://github.com/irssi/irssi,1080,2019-08-07T09:33:28Z,,2019-10-11T20:50:40Z,OPEN,False,15,4,1,https://github.com/vague666,WIP for saving only channel-window layout,1,['WIP'],https://github.com/irssi/irssi/pull/1080,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1080#issuecomment-519050118,Need some opinions on how to go forward with this,"What does ""saving only channel-window layout"" mean?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1080,2019-08-07T09:33:28Z,,2019-10-11T20:50:40Z,OPEN,False,15,4,1,https://github.com/vague666,WIP for saving only channel-window layout,1,['WIP'],https://github.com/irssi/irssi/pull/1080,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1080#issuecomment-519067538,Need some opinions on how to go forward with this,"save only layout of items that are channels if setting is true (realised now channel-window was bad wording by me :) )
the problem I'm seeing is that the window is still saved, just not the items, I'd prefer the window not being saved if there are no items",True,{}
irssi/irssi,https://github.com/irssi/irssi,1080,2019-08-07T09:33:28Z,,2019-10-11T20:50:40Z,OPEN,False,15,4,1,https://github.com/vague666,WIP for saving only channel-window layout,1,['WIP'],https://github.com/irssi/irssi/pull/1080,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1080#issuecomment-525010237,Need some opinions on how to go forward with this,"the code you wrote, looks like it wouldn't save windows if there were no items? are you saying your code doesn't work?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1081,2019-08-07T20:52:52Z,2019-08-07T20:53:29Z,2021-10-11T20:55:24Z,MERGED,True,1,1,1,https://github.com/DFrostByte,hilight.in: fix typo the->to,1,[],https://github.com/irssi/irssi/pull/1081,https://github.com/DFrostByte,1,https://github.com/irssi/irssi/pull/1081,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1081,2019-08-07T20:52:52Z,2019-08-07T20:53:29Z,2021-10-11T20:55:24Z,MERGED,True,1,1,1,https://github.com/DFrostByte,hilight.in: fix typo the->to,1,[],https://github.com/irssi/irssi/pull/1081,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1081#issuecomment-519264828,,thanks!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1083,2019-08-09T08:17:27Z,2019-08-16T15:38:08Z,2019-10-11T20:42:35Z,CLOSED,False,22,31,4,https://github.com/ailin-nemui,migrate workflow to yml,3,[],https://github.com/irssi/irssi/pull/1083,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1083,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1083,2019-08-09T08:17:27Z,2019-08-16T15:38:08Z,2019-10-11T20:42:35Z,CLOSED,False,22,31,4,https://github.com/ailin-nemui,migrate workflow to yml,3,[],https://github.com/irssi/irssi/pull/1083,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1083#issuecomment-519887500,,heh. It doesn't work (?) so maybe we need to wait for github somehow. let's visit this again later,True,{}
irssi/irssi,https://github.com/irssi/irssi,1083,2019-08-09T08:17:27Z,2019-08-16T15:38:08Z,2019-10-11T20:42:35Z,CLOSED,False,22,31,4,https://github.com/ailin-nemui,migrate workflow to yml,3,[],https://github.com/irssi/irssi/pull/1083,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1083#issuecomment-522053442,,superseded by #1103,True,{}
irssi/irssi,https://github.com/irssi/irssi,1084,2019-08-13T14:56:20Z,2019-08-13T15:50:15Z,2021-10-11T20:55:24Z,MERGED,True,3,0,1,https://github.com/ailin-nemui,fix build system debug config to include -fno-omit-frame-pointer,1,[],https://github.com/irssi/irssi/pull/1084,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1084,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1085,2019-08-13T14:56:56Z,2019-08-13T16:08:58Z,2021-10-11T20:55:25Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix glib version dependency in meson,1,[],https://github.com/irssi/irssi/pull/1085,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1085,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1086,2019-08-13T14:58:40Z,2019-08-13T16:29:29Z,2021-10-11T20:55:26Z,MERGED,True,15,12,5,https://github.com/ailin-nemui,increase disconnect buffer and get rid of some magic 510 values,1,[],https://github.com/irssi/irssi/pull/1086,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1086,this is also in preparation for a configurable IRC line length,this is also in preparation for a configurable IRC line length,True,{}
irssi/irssi,https://github.com/irssi/irssi,1086,2019-08-13T14:58:40Z,2019-08-13T16:29:29Z,2021-10-11T20:55:26Z,MERGED,True,15,12,5,https://github.com/ailin-nemui,increase disconnect buffer and get rid of some magic 510 values,1,[],https://github.com/irssi/irssi/pull/1086,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1086#issuecomment-520900558,this is also in preparation for a configurable IRC line length,"with tags support, the disconnect buffer wouldn't possibly fit ""one complete line until the \r\n"", so it's safer to increase this a bit",True,{}
irssi/irssi,https://github.com/irssi/irssi,1087,2019-08-13T14:59:34Z,2019-08-13T16:07:48Z,2021-10-11T20:55:26Z,MERGED,True,3,1,2,https://github.com/ailin-nemui,make the $Z time overridable,1,[],https://github.com/irssi/irssi/pull/1087,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1087,"this will aid in implementing server-time
it is also required for proper time rendering in #1079","this will aid in implementing server-time
it is also required for proper time rendering in #1079",True,{}
irssi/irssi,https://github.com/irssi/irssi,1088,2019-08-13T15:01:03Z,2019-08-14T12:24:09Z,2021-10-11T20:55:27Z,MERGED,True,4,0,1,https://github.com/ailin-nemui,"add a new ""print noformat"" signal to be emitted on printtext",1,['auto-merge'],https://github.com/irssi/irssi/pull/1088,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1088,"this will be used together with ""print format"" in the reformattable
textbuffer implementation","this will be used together with ""print format"" in the reformattable
textbuffer implementation",True,{}
irssi/irssi,https://github.com/irssi/irssi,1088,2019-08-13T15:01:03Z,2019-08-14T12:24:09Z,2021-10-11T20:55:27Z,MERGED,True,4,0,1,https://github.com/ailin-nemui,"add a new ""print noformat"" signal to be emitted on printtext",1,['auto-merge'],https://github.com/irssi/irssi/pull/1088,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1088#issuecomment-521134976,"this will be used together with ""print format"" in the reformattable
textbuffer implementation",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1089,2019-08-13T15:04:15Z,2019-08-14T18:53:14Z,2021-10-11T20:55:27Z,MERGED,True,133,0,6,https://github.com/ailin-nemui,implement reference counted strings,1,[],https://github.com/irssi/irssi/pull/1089,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1089,"on glib >=2.58, use the implementation provided by glib
otherwise, a hash table will contain the strings

this data type is used to save space in the upcoming reformattable
textbuffer implementation","on glib >=2.58, use the implementation provided by glib
otherwise, a hash table will contain the strings

this data type is used to save space in the upcoming reformattable
textbuffer implementation",True,{}
irssi/irssi,https://github.com/irssi/irssi,1090,2019-08-13T15:25:03Z,2019-08-15T14:32:02Z,2021-10-11T20:55:28Z,MERGED,True,38,7,2,https://github.com/ailin-nemui,incoming irc message tags support,3,['ircv3'],https://github.com/irssi/irssi/pull/1090,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1090,"this is just the very bare bones to accept and ignore incoming
tags. further patches can build upon it
original implementation by @dequis #576","this is just the very bare bones to accept and ignore incoming
tags. further patches can build upon it
original implementation by @dequis #576",True,{}
irssi/irssi,https://github.com/irssi/irssi,1090,2019-08-13T15:25:03Z,2019-08-15T14:32:02Z,2021-10-11T20:55:28Z,MERGED,True,38,7,2,https://github.com/ailin-nemui,incoming irc message tags support,3,['ircv3'],https://github.com/irssi/irssi/pull/1090,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1090#issuecomment-520892016,"this is just the very bare bones to accept and ignore incoming
tags. further patches can build upon it
original implementation by @dequis #576",Reminds me of #576 :D,True,{}
irssi/irssi,https://github.com/irssi/irssi,1090,2019-08-13T15:25:03Z,2019-08-15T14:32:02Z,2021-10-11T20:55:28Z,MERGED,True,38,7,2,https://github.com/ailin-nemui,incoming irc message tags support,3,['ircv3'],https://github.com/irssi/irssi/pull/1090,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1090#issuecomment-520892542,"this is just the very bare bones to accept and ignore incoming
tags. further patches can build upon it
original implementation by @dequis #576",oops,True,{}
irssi/irssi,https://github.com/irssi/irssi,1090,2019-08-13T15:25:03Z,2019-08-15T14:32:02Z,2021-10-11T20:55:28Z,MERGED,True,38,7,2,https://github.com/ailin-nemui,incoming irc message tags support,3,['ircv3'],https://github.com/irssi/irssi/pull/1090,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1090#issuecomment-520892965,"this is just the very bare bones to accept and ignore incoming
tags. further patches can build upon it
original implementation by @dequis #576","in #576, I wrote

I would like to see actual use case implementation before proceeding here...

now, I'm posting the same patch again but I'm already working on use cases. Separate patch for easier review",True,{}
irssi/irssi,https://github.com/irssi/irssi,1090,2019-08-13T15:25:03Z,2019-08-15T14:32:02Z,2021-10-11T20:55:28Z,MERGED,True,38,7,2,https://github.com/ailin-nemui,incoming irc message tags support,3,['ircv3'],https://github.com/irssi/irssi/pull/1090,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1090#issuecomment-520893508,"this is just the very bare bones to accept and ignore incoming
tags. further patches can build upon it
original implementation by @dequis #576","Yeah no worries, I didn't really have the time to do the whole thing (and still don't)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1091,2019-08-13T15:27:51Z,2019-08-13T16:07:18Z,2021-10-11T20:55:29Z,MERGED,True,7,3,2,https://github.com/ailin-nemui,enable irc cap ls 302,2,[],https://github.com/irssi/irssi/pull/1091,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1091,"this is needed to learn about the values of capabilities, otherwise
they are not sent for backwards compatibility reasons
the values are required to support for example the maximum line length
value (upcoming patch)
also change the strings to #defines for easier handling","this is needed to learn about the values of capabilities, otherwise
they are not sent for backwards compatibility reasons
the values are required to support for example the maximum line length
value (upcoming patch)
also change the strings to #defines for easier handling",True,{}
irssi/irssi,https://github.com/irssi/irssi,1091,2019-08-13T15:27:51Z,2019-08-13T16:07:18Z,2021-10-11T20:55:29Z,MERGED,True,7,3,2,https://github.com/ailin-nemui,enable irc cap ls 302,2,[],https://github.com/irssi/irssi/pull/1091,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1091#issuecomment-520890842,"this is needed to learn about the values of capabilities, otherwise
they are not sent for backwards compatibility reasons
the values are required to support for example the maximum line length
value (upcoming patch)
also change the strings to #defines for easier handling","also change the strings to #defines for easier handling

Easier how? Locality is underrated imo",True,{}
irssi/irssi,https://github.com/irssi/irssi,1091,2019-08-13T15:27:51Z,2019-08-13T16:07:18Z,2021-10-11T20:55:29Z,MERGED,True,7,3,2,https://github.com/ailin-nemui,enable irc cap ls 302,2,[],https://github.com/irssi/irssi/pull/1091,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1091#issuecomment-520891490,"this is needed to learn about the values of capabilities, otherwise
they are not sent for backwards compatibility reasons
the values are required to support for example the maximum line length
value (upcoming patch)
also change the strings to #defines for easier handling",we may need to refer to those caps in further hash table lookups,True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1092,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1092#issuecomment-521301968,,"I like what I see!
So this adds CAP_MESSAGE_TAGS to the .h file but doesn't request it, is that intended?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1092#issuecomment-521309463,,"it is, we use it to ensure if a server understands /expects tags as input, but we don't necessarily need to request tags going in our direction
that said we're probably going to request it in a future PR (soon)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1092#issuecomment-521312837,,I guess it's easily testable with /quote cap req message-tags,True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1092#issuecomment-521346578,,should be!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1092#issuecomment-521381997,,thanks for review!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1092#issuecomment-524455808,,@dequis can this be merged?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1092#issuecomment-524455901,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1092,2019-08-13T15:41:47Z,2019-08-26T20:01:54Z,2021-10-11T20:55:29Z,MERGED,True,79,18,6,https://github.com/ailin-nemui,sending of tag messages and customisable maximum irc message length,3,['ircv3'],https://github.com/irssi/irssi/pull/1092,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1092#issuecomment-525009267,,nice!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1093,2019-08-13T15:43:50Z,2019-08-14T21:44:53Z,2021-10-11T20:55:30Z,MERGED,True,29,1,4,https://github.com/ailin-nemui,request the setname capability,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1093,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1093,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1093,2019-08-13T15:43:50Z,2019-08-14T21:44:53Z,2021-10-11T20:55:30Z,MERGED,True,29,1,4,https://github.com/ailin-nemui,request the setname capability,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1093,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1093#issuecomment-520899568,,Sounds good but don't forget to clean the cap ls 302,True,{}
irssi/irssi,https://github.com/irssi/irssi,1093,2019-08-13T15:43:50Z,2019-08-14T21:44:53Z,2021-10-11T20:55:30Z,MERGED,True,29,1,4,https://github.com/ailin-nemui,request the setname capability,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1093,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1093#issuecomment-520900001,,I have to locally merge the other branches or these patches won't apply/compile,True,{}
irssi/irssi,https://github.com/irssi/irssi,1093,2019-08-13T15:43:50Z,2019-08-14T21:44:53Z,2021-10-11T20:55:30Z,MERGED,True,29,1,4,https://github.com/ailin-nemui,request the setname capability,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1093,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1093#issuecomment-521377668,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1094,2019-08-13T15:44:54Z,2019-08-15T14:31:30Z,2021-10-11T20:55:30Z,MERGED,True,47,6,8,https://github.com/ailin-nemui,show invites of other users when provided,1,['ircv3'],https://github.com/irssi/irssi/pull/1094,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1094,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1095,2019-08-13T15:45:34Z,2019-08-14T15:58:52Z,2021-10-11T20:55:31Z,MERGED,True,3,0,1,https://github.com/ailin-nemui,fix cap queue order,1,['auto-merge'],https://github.com/irssi/irssi/pull/1095,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1095,"as capabilities are prepended to the queue, it needs to be reversed once before sending it out","as capabilities are prepended to the queue, it needs to be reversed once before sending it out",True,{}
irssi/irssi,https://github.com/irssi/irssi,1095,2019-08-13T15:45:34Z,2019-08-14T15:58:52Z,2021-10-11T20:55:31Z,MERGED,True,3,0,1,https://github.com/ailin-nemui,fix cap queue order,1,['auto-merge'],https://github.com/irssi/irssi/pull/1095,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1095#issuecomment-521135110,"as capabilities are prepended to the queue, it needs to be reversed once before sending it out",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1096,2019-08-13T16:20:30Z,2019-08-15T15:28:53Z,2021-10-11T20:55:31Z,MERGED,True,74,0,8,https://github.com/ailin-nemui,add chghost capability support,2,['ircv3'],https://github.com/irssi/irssi/pull/1096,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1096,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1097,2019-08-13T16:23:46Z,2019-08-14T19:08:12Z,2021-10-11T20:55:32Z,MERGED,True,26,10,9,https://github.com/ailin-nemui,use extended-join capability,2,['ircv3'],https://github.com/irssi/irssi/pull/1097,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1097,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1098,2019-08-13T16:28:21Z,2019-08-15T16:19:34Z,2021-10-11T20:55:32Z,MERGED,True,79,3,9,https://github.com/ailin-nemui,use account-notify capability,2,['ircv3'],https://github.com/irssi/irssi/pull/1098,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1098,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1099,2019-08-14T15:45:27Z,2019-08-15T15:09:54Z,2021-10-11T20:55:33Z,MERGED,True,61,0,7,https://github.com/ailin-nemui,support cap away-notify,2,['ircv3'],https://github.com/irssi/irssi/pull/1099,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1099,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1099,2019-08-14T15:45:27Z,2019-08-15T15:09:54Z,2021-10-11T20:55:33Z,MERGED,True,61,0,7,https://github.com/ailin-nemui,support cap away-notify,2,['ircv3'],https://github.com/irssi/irssi/pull/1099,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1099#issuecomment-521417275,,"I added some commits to move the code to fe-common/core, we can either use these changes or throw them away",True,{}
irssi/irssi,https://github.com/irssi/irssi,1100,2019-08-15T13:37:40Z,2019-08-15T14:15:27Z,2021-10-11T20:55:33Z,MERGED,True,42,20,1,https://github.com/ailin-nemui,refactor quit message into a separate function,1,[],https://github.com/irssi/irssi/pull/1100,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1100,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1100,2019-08-15T13:37:40Z,2019-08-15T14:15:27Z,2021-10-11T20:55:33Z,MERGED,True,42,20,1,https://github.com/ailin-nemui,refactor quit message into a separate function,1,[],https://github.com/irssi/irssi/pull/1100,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1100#issuecomment-521647579,,"Context: This refactor is currently a commit in a bunch of other PRs implementing ircv3 caps (#1096, #1098, #1099) and I asked to have this split to its own PR to simplify the review process",True,{}
irssi/irssi,https://github.com/irssi/irssi,1100,2019-08-15T13:37:40Z,2019-08-15T14:15:27Z,2021-10-11T20:55:33Z,MERGED,True,42,20,1,https://github.com/ailin-nemui,refactor quit message into a separate function,1,[],https://github.com/irssi/irssi/pull/1100,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1100#issuecomment-521652246,,"I ""moved the part handler up"" so the patch is less confusing",True,{}
irssi/irssi,https://github.com/irssi/irssi,1101,2019-08-15T19:44:53Z,2019-08-19T13:35:34Z,2021-10-11T20:55:34Z,MERGED,True,0,4,2,https://github.com/ailin-nemui,fix autotools build,1,['auto-merge'],https://github.com/irssi/irssi/pull/1101,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1101,some missing files due to recent changes,some missing files due to recent changes,True,{}
irssi/irssi,https://github.com/irssi/irssi,1101,2019-08-15T19:44:53Z,2019-08-19T13:35:34Z,2021-10-11T20:55:34Z,MERGED,True,0,4,2,https://github.com/ailin-nemui,fix autotools build,1,['auto-merge'],https://github.com/irssi/irssi/pull/1101,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1101#issuecomment-521771766,some missing files due to recent changes,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1101,2019-08-15T19:44:53Z,2019-08-19T13:35:34Z,2021-10-11T20:55:34Z,MERGED,True,0,4,2,https://github.com/ailin-nemui,fix autotools build,1,['auto-merge'],https://github.com/irssi/irssi/pull/1101,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1101#issuecomment-522005059,some missing files due to recent changes,"Uhhh what was broken and how does this fix it?
edit: appears to work fine for me, but if something is broken in a nontrivial way then we should update the CI scripts to catch that",True,{}
irssi/irssi,https://github.com/irssi/irssi,1101,2019-08-15T19:44:53Z,2019-08-19T13:35:34Z,2021-10-11T20:55:34Z,MERGED,True,0,4,2,https://github.com/ailin-nemui,fix autotools build,1,['auto-merge'],https://github.com/irssi/irssi/pull/1101,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1101#issuecomment-522005616,some missing files due to recent changes,"make dist, then build the dist tarball. one thing that you'd typically not test",True,{}
irssi/irssi,https://github.com/irssi/irssi,1101,2019-08-15T19:44:53Z,2019-08-19T13:35:34Z,2021-10-11T20:55:34Z,MERGED,True,0,4,2,https://github.com/ailin-nemui,fix autotools build,1,['auto-merge'],https://github.com/irssi/irssi/pull/1101,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1101#issuecomment-522488656,some missing files due to recent changes,some changes needed @dequis ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1101,2019-08-15T19:44:53Z,2019-08-19T13:35:34Z,2021-10-11T20:55:34Z,MERGED,True,0,4,2,https://github.com/ailin-nemui,fix autotools build,1,['auto-merge'],https://github.com/irssi/irssi/pull/1101,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1101#issuecomment-522578083,some missing files due to recent changes,"I think this is alright, the CI stuff is out of scope of this fix",True,{}
irssi/irssi,https://github.com/irssi/irssi,1102,2019-08-16T15:24:31Z,2019-08-19T19:33:56Z,2021-10-11T20:55:34Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix wrong version in version-date when building git with merges of old commits on top,1,['auto-merge'],https://github.com/irssi/irssi/pull/1102,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1102,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1102,2019-08-16T15:24:31Z,2019-08-19T19:33:56Z,2021-10-11T20:55:34Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix wrong version in version-date when building git with merges of old commits on top,1,['auto-merge'],https://github.com/irssi/irssi/pull/1102,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1102#issuecomment-522048904,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1102,2019-08-16T15:24:31Z,2019-08-19T19:33:56Z,2021-10-11T20:55:34Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix wrong version in version-date when building git with merges of old commits on top,1,['auto-merge'],https://github.com/irssi/irssi/pull/1102,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1102#issuecomment-522722389,,I'm merging this now let's keep the other improvements in mind,True,{}
irssi/irssi,https://github.com/irssi/irssi,1103,2019-08-16T15:30:03Z,2019-08-27T08:14:49Z,2021-10-11T20:55:35Z,MERGED,True,21,27,2,https://github.com/ailin-nemui,Migrate push workflow to yaml,2,[],https://github.com/irssi/irssi/pull/1103,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1103,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1103,2019-08-16T15:30:03Z,2019-08-27T08:14:49Z,2021-10-11T20:55:35Z,MERGED,True,21,27,2,https://github.com/ailin-nemui,Migrate push workflow to yaml,2,[],https://github.com/irssi/irssi/pull/1103,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1103#issuecomment-525192914,,#1083,True,{}
irssi/irssi,https://github.com/irssi/irssi,1104,2019-08-16T19:19:59Z,2019-08-16T19:24:05Z,2021-10-11T20:55:35Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,fix crash in setname,1,[],https://github.com/irssi/irssi/pull/1104,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1104,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1104,2019-08-16T19:19:59Z,2019-08-16T19:24:05Z,2021-10-11T20:55:35Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,fix crash in setname,1,[],https://github.com/irssi/irssi/pull/1104,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1104#issuecomment-522122651,,GL#33,True,{}
irssi/irssi,https://github.com/irssi/irssi,1105,2019-08-16T19:38:08Z,2019-08-16T19:41:06Z,2021-10-11T20:55:36Z,MERGED,True,3,0,2,https://github.com/ailin-nemui,fix crashes when nick is missing,1,[],https://github.com/irssi/irssi/pull/1105,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1105,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1105,2019-08-16T19:38:08Z,2019-08-16T19:41:06Z,2021-10-11T20:55:36Z,MERGED,True,3,0,2,https://github.com/ailin-nemui,fix crashes when nick is missing,1,[],https://github.com/irssi/irssi/pull/1105,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1105#issuecomment-522127631,,cf GL#33,True,{}
irssi/irssi,https://github.com/irssi/irssi,1106,2019-08-16T20:41:20Z,2019-08-16T20:47:00Z,2021-10-11T20:55:36Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,increase abi for the recently commited changes,1,[],https://github.com/irssi/irssi/pull/1106,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1106,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1107,2019-08-18T09:25:06Z,2019-08-26T21:02:21Z,2021-10-11T20:55:37Z,MERGED,True,16,2,3,https://github.com/ailin-nemui,make extended account info visible and formattable,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1107,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1107,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1107,2019-08-18T09:25:06Z,2019-08-26T21:02:21Z,2021-10-11T20:55:37Z,MERGED,True,16,2,3,https://github.com/ailin-nemui,make extended account info visible and formattable,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1107,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1107#issuecomment-525009543,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1108,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1108#issuecomment-522797817,,this is currently layered on top of some other prerequisite PRs,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1108#issuecomment-527574444,,"to try it, /set show_server_time on",True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1108#issuecomment-621911391,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1108#issuecomment-623201017,,I made a hash table implementation,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1108#issuecomment-623727137,,@dequis do you want to review this again? Now we have a tags parser and everything is hashes,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1108#issuecomment-754542359,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/1108#issuecomment-754569031,,"Okay, okay, give me a few days.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1108#issuecomment-757551000,,@dequis how many days do you want :)?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/1108#issuecomment-757848384,,Uhm. A few more?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/1108#issuecomment-783563429,,@dequis ping,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/dequis,12,https://github.com/irssi/irssi/pull/1108#issuecomment-785231655,,Damn time flies huh,True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/dequis,13,https://github.com/irssi/irssi/pull/1108#issuecomment-785453659,,"I like this a lot!
I tried really hard to find something to complain about to justify the time it took me to get around to this, and luckily I got something in the end. Phew.
But yeah all good from architectural point of view. I'm a bit rusty on detecting memory bugs visually, we should just fuzz this stuff.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1108,2019-08-19T23:54:56Z,2021-02-25T18:25:42Z,2021-10-11T20:55:37Z,MERGED,True,363,54,22,https://github.com/ailin-nemui,implement server-time,4,"['needs testing', 'ircv3']",https://github.com/irssi/irssi/pull/1108,https://github.com/ailin-nemui,14,https://github.com/irssi/irssi/pull/1108#issuecomment-785705916,,"thanks so much for your time and looking through it, much appreciated",True,{}
irssi/irssi,https://github.com/irssi/irssi,1110,2019-08-22T21:28:31Z,,2021-02-26T13:02:30Z,OPEN,False,384,41,23,https://github.com/ailin-nemui,implement account-tag,4,['ircv3'],https://github.com/irssi/irssi/pull/1110,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1110,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1110,2019-08-22T21:28:31Z,,2021-02-26T13:02:30Z,OPEN,False,384,41,23,https://github.com/ailin-nemui,implement account-tag,4,['ircv3'],https://github.com/irssi/irssi/pull/1110,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1110#issuecomment-524088833,,this PR is layered on top of some prerequisite PRs,True,{}
irssi/irssi,https://github.com/irssi/irssi,1110,2019-08-22T21:28:31Z,,2021-02-26T13:02:30Z,OPEN,False,384,41,23,https://github.com/ailin-nemui,implement account-tag,4,['ircv3'],https://github.com/irssi/irssi/pull/1110,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1110#issuecomment-524089219,,"to test it, add the $has_account_tag format to your pubmsg, e.g.
/format pubmsg {pubmsgnick $has_account_tag$2 {pubnick $0}}$1",True,{}
irssi/irssi,https://github.com/irssi/irssi,1111,2019-08-22T21:34:07Z,2019-08-25T07:50:30Z,2021-10-11T20:55:38Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,add various new message events to signals.txt,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1111,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1111,these are from the merged ircv3 patches,these are from the merged ircv3 patches,True,{}
irssi/irssi,https://github.com/irssi/irssi,1111,2019-08-22T21:34:07Z,2019-08-25T07:50:30Z,2021-10-11T20:55:38Z,MERGED,True,6,1,1,https://github.com/ailin-nemui,add various new message events to signals.txt,1,"['auto-merge', 'ircv3']",https://github.com/irssi/irssi/pull/1111,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1111#issuecomment-524523160,these are from the merged ircv3 patches,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1113,2019-08-23T20:26:53Z,2019-08-24T21:21:11Z,2021-10-11T20:55:39Z,MERGED,True,0,3,1,https://github.com/ailin-nemui,revert the change to perl-common that would stop it from creating ghost chatnets,1,['auto-merge'],https://github.com/irssi/irssi/pull/1113,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1113,fixes #1112,fixes #1112,True,{}
irssi/irssi,https://github.com/irssi/irssi,1113,2019-08-23T20:26:53Z,2019-08-24T21:21:11Z,2021-10-11T20:55:39Z,MERGED,True,0,3,1,https://github.com/ailin-nemui,revert the change to perl-common that would stop it from creating ghost chatnets,1,['auto-merge'],https://github.com/irssi/irssi/pull/1113,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/1113#issuecomment-524453422,fixes #1112,Works,True,{}
irssi/irssi,https://github.com/irssi/irssi,1113,2019-08-23T20:26:53Z,2019-08-24T21:21:11Z,2021-10-11T20:55:39Z,MERGED,True,0,3,1,https://github.com/ailin-nemui,revert the change to perl-common that would stop it from creating ghost chatnets,1,['auto-merge'],https://github.com/irssi/irssi/pull/1113,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1113#issuecomment-524454023,fixes #1112,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1113,2019-08-23T20:26:53Z,2019-08-24T21:21:11Z,2021-10-11T20:55:39Z,MERGED,True,0,3,1,https://github.com/ailin-nemui,revert the change to perl-common that would stop it from creating ghost chatnets,1,['auto-merge'],https://github.com/irssi/irssi/pull/1113,https://github.com/vague666,4,https://github.com/irssi/irssi/pull/1113#issuecomment-524458312,fixes #1112,"Don't know if it can be rewritten somehow, this is the output without patch
aug 23 22:44:56 $VAR1 = \bless( {
aug 23 22:44:56                    'chat_type' => 'IRC',
aug 23 22:44:56                    '_irssi' => '94811764237312',
aug 23 22:44:56                    'nick' => '',
aug 23 22:44:56                    'autosendcmd' => '',
aug 23 22:44:56                    'own_host' => '',
aug 23 22:44:56                    'realname' => '',
aug 23 22:44:56                    'username' => '',
aug 23 22:44:56                    'type' => 'CHATNET',
aug 23 22:44:56                    'name' => 'QuakeNet'
aug 23 22:44:56                  }, 'Irssi::Irc::Chatnet' );
aug 23 22:44:56 **$VAR2 = \'94811764236112'; // this is a SILC network**
aug 23 22:44:56 $VAR3 = \bless( {
aug 23 22:44:56                    'username' => 'vague',
aug 23 22:44:56                    'name' => 'freenode',
aug 23 22:44:56                    'type' => 'CHATNET',
aug 23 22:44:56                    'nick' => 'vague',
aug 23 22:44:56                    'autosendcmd' => '',
aug 23 22:44:56                    'own_host' => '',
aug 23 22:44:56                    'realname' => 'vague',
aug 23 22:44:56                    '_irssi' => '94811764235744',
aug 23 22:44:56                    'chat_type' => 'IRC'
aug 23 22:44:56                  }, 'Irssi::Irc::Chatnet' );
aug 23 22:44:56 $VAR4 = \bless( {
aug 23 22:44:56                    'autosendcmd' => '',
aug 23 22:44:56                    'nick' => '',
aug 23 22:44:56                    'realname' => '',
aug 23 22:44:56                    'own_host' => '',
aug 23 22:44:56                    'type' => 'CHATNET',
aug 23 22:44:56                    'name' => 'EFNet',
aug 23 22:44:56                    'username' => '',
aug 23 22:44:56                    'chat_type' => 'IRC',
aug 23 22:44:56                    '_irssi' => '94811764232480'
aug 23 22:44:56                  }, 'Irssi::Irc::Chatnet' );
aug 23 22:44:56 $VAR5 = \bless( {
aug 23 22:44:56                    'type' => 'CHATNET',
aug 23 22:44:56                    'name' => 'bitlbee',
aug 23 22:44:56                    'username' => '',
aug 23 22:44:56                    'realname' => '',
aug 23 22:44:56                    'own_host' => '',
aug 23 22:44:56                    'nick' => '',
aug 23 22:44:56                    '_irssi' => '94811764220176',
aug 23 22:44:56                    'chat_type' => 'IRC'
aug 23 22:44:56                  }, 'Irssi::Irc::Chatnet' );",True,{}
irssi/irssi,https://github.com/irssi/irssi,1113,2019-08-23T20:26:53Z,2019-08-24T21:21:11Z,2021-10-11T20:55:39Z,MERGED,True,0,3,1,https://github.com/ailin-nemui,revert the change to perl-common that would stop it from creating ghost chatnets,1,['auto-merge'],https://github.com/irssi/irssi/pull/1113,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1113#issuecomment-524466906,fixes #1112,I think the bug was never released,True,{}
irssi/irssi,https://github.com/irssi/irssi,1114,2019-08-27T10:42:29Z,2019-08-27T13:12:05Z,2019-09-03T12:22:45Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix crash on startup when resizing before active_win,1,"['z-affects-1.2.0', 'z-affects-1.2.1']",https://github.com/irssi/irssi/pull/1114,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1114,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1114,2019-08-27T10:42:29Z,2019-08-27T13:12:05Z,2019-09-03T12:22:45Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix crash on startup when resizing before active_win,1,"['z-affects-1.2.0', 'z-affects-1.2.1']",https://github.com/irssi/irssi/pull/1114,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1114#issuecomment-525246115,,reported by fling,True,{}
irssi/irssi,https://github.com/irssi/irssi,1114,2019-08-27T10:42:29Z,2019-08-27T13:12:05Z,2019-09-03T12:22:45Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix crash on startup when resizing before active_win,1,"['z-affects-1.2.0', 'z-affects-1.2.1']",https://github.com/irssi/irssi/pull/1114,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1114#issuecomment-525281357,,"Nice, how did you figure it out? What are the repro steps?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1114,2019-08-27T10:42:29Z,2019-08-27T13:12:05Z,2019-09-03T12:22:45Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix crash on startup when resizing before active_win,1,"['z-affects-1.2.0', 'z-affects-1.2.1']",https://github.com/irssi/irssi/pull/1114,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1114#issuecomment-525281709,,"I did
while :; do pkill -WINCH irssi; done

and the start Irssi to simulate this race.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1114,2019-08-27T10:42:29Z,2019-08-27T13:12:05Z,2019-09-03T12:22:45Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix crash on startup when resizing before active_win,1,"['z-affects-1.2.0', 'z-affects-1.2.1']",https://github.com/irssi/irssi/pull/1114,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1114#issuecomment-525294355,,bdo#935813 @smcv,True,{}
irssi/irssi,https://github.com/irssi/irssi,1114,2019-08-27T10:42:29Z,2019-08-27T13:12:05Z,2019-09-03T12:22:45Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix crash on startup when resizing before active_win,1,"['z-affects-1.2.0', 'z-affects-1.2.1']",https://github.com/irssi/irssi/pull/1114,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1114#issuecomment-527434633,,actually a duplicate of #1053 oops!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1116,2019-08-30T18:29:16Z,2019-08-30T19:16:20Z,2021-10-11T20:55:39Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,fix warning in fe-fuzz/server-fuzz,1,[],https://github.com/irssi/irssi/pull/1116,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1116,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1117,2019-08-30T18:30:17Z,2019-08-30T19:20:34Z,2021-10-11T20:55:40Z,MERGED,True,4,0,1,https://github.com/ailin-nemui,limit special-vars alignment memory to not exhaust fuzzer,1,[],https://github.com/irssi/irssi/pull/1117,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1117,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1118,2019-08-30T19:13:11Z,2019-08-30T19:22:05Z,2021-10-11T20:55:41Z,MERGED,True,15,7,2,https://github.com/ailin-nemui,Add a new meson option : -Dstatic-dependency=yes to use static dependencies,1,[],https://github.com/irssi/irssi/pull/1118,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1118,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1119,2019-08-30T20:11:38Z,2019-08-31T05:48:03Z,2021-10-11T20:55:41Z,MERGED,True,8,0,1,https://github.com/ailin-nemui,add some dummy objects to server-fuzz,1,[],https://github.com/irssi/irssi/pull/1119,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1119,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1120,2019-08-30T20:14:35Z,2019-09-16T09:42:49Z,2021-04-08T22:15:02Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,free params,1,[],https://github.com/irssi/irssi/pull/1120,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1120,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1120,2019-08-30T20:14:35Z,2019-09-16T09:42:49Z,2021-04-08T22:15:02Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,free params,1,[],https://github.com/irssi/irssi/pull/1120,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1120#issuecomment-526734525,,let's see if oss-fuzz can find this missing free as well @josephbisch,True,{'THUMBS_UP': ['https://github.com/josephbisch']}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/isundil,1,https://github.com/irssi/irssi/pull/1122,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1122#issuecomment-527855975,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","Uhm, as a general guideline for any open source project, please discuss any non-trivial changes or additions in the issue tracker before spending any significant amount of time working on them.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/isundil,3,https://github.com/irssi/irssi/pull/1122#issuecomment-527862185,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","I understand your opinion and we can discuss about the enhancement here.
I wouldn't have done this if the enhancement was more time consuming.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1122#issuecomment-527866336,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","could it be more appropriate to simply use an /alias identify ^msg nickserv identify and combine this with a script such as http://anti.teamidiot.de/static/nei/*/Code/Irssi/conceal.pl to hide the password from sight ?
(most people would probably prefer to store their passwords and  networks such as freenode require identifying on connect for best user experience like permit to join channels and hide the user host)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/isundil,5,https://github.com/irssi/irssi/pull/1122#issuecomment-529339176,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","As must of the IRC servers have an identify service I find it relevant to have it built-in.
As I also use others IRC client I let nickserv handle my autojoin channels",True,{}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1122#issuecomment-529519098,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","Well, from an ircv3 perspective, identifying through nickserv is a legacy method, and has several downsides compared to SASL (mainly race conditions). I wouldn't encourage its use.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/isundil,7,https://github.com/irssi/irssi/pull/1122#issuecomment-532570026,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","Well, I didn't known about the SASL authentication. Maybe it's better to make it an alias then",True,{}
irssi/irssi,https://github.com/irssi/irssi,1122,2019-09-04T11:07:40Z,2019-10-11T20:49:45Z,2019-10-11T20:49:45Z,CLOSED,False,65,5,7,https://github.com/isundil,add /identify command,2,[],https://github.com/irssi/irssi/pull/1122,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1122#issuecomment-541219172,"A a new command /identify [password]
The aim of this command is to avoid storing the Nickserv password in a config file and to avoid typing directly the command
It can be customized in chatnet using identifycmd (default is PRIVMS NickServ IDENTIFY %s)
The password is requested like /oper opername (similar to noecho but print spaces)","thank you for taking your time to provide this PR. Unfortunately, at this time, we do not consider this a core feature that should be provided inside Irssi. If you would like to make this available as a script we can discuss a PR that enhances the scripting API. There are also some other ideas about passwords which you could work on if you want (please discuss further to avoid any disappointments)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1123,2019-09-04T12:27:16Z,2019-09-04T12:37:17Z,2021-10-11T20:55:42Z,MERGED,True,2,0,2,https://github.com/ailin-nemui,enable self-message support,1,[],https://github.com/irssi/irssi/pull/1123,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1123,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1123,2019-09-04T12:27:16Z,2019-09-04T12:37:17Z,2021-10-11T20:55:42Z,MERGED,True,2,0,2,https://github.com/ailin-nemui,enable self-message support,1,[],https://github.com/irssi/irssi/pull/1123,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1123#issuecomment-527878306,,"without this, znc doesn't display your other client PMs for instance",True,{}
irssi/irssi,https://github.com/irssi/irssi,1123,2019-09-04T12:27:16Z,2019-09-04T12:37:17Z,2021-10-11T20:55:42Z,MERGED,True,2,0,2,https://github.com/ailin-nemui,enable self-message support,1,[],https://github.com/irssi/irssi/pull/1123,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1123#issuecomment-527878467,,(note that this spec has been removed from IRCv3 but they have no usable replacement),True,{}
irssi/irssi,https://github.com/irssi/irssi,1123,2019-09-04T12:27:16Z,2019-09-04T12:37:17Z,2021-10-11T20:55:42Z,MERGED,True,2,0,2,https://github.com/ailin-nemui,enable self-message support,1,[],https://github.com/irssi/irssi/pull/1123,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1123#issuecomment-527881462,,re: echo-message; there is no way to know which messages are echoes and which are from other connected clients :-),True,{}
irssi/irssi,https://github.com/irssi/irssi,1123,2019-09-04T12:27:16Z,2019-09-04T12:37:17Z,2021-10-11T20:55:42Z,MERGED,True,2,0,2,https://github.com/ailin-nemui,enable self-message support,1,[],https://github.com/irssi/irssi/pull/1123,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1123#issuecomment-527882839,,"Yeah, so if you disable local echo entirely and display every incoming message, you don't need to know that.
But it gets perceived as higher latency when sending messages, can be weird for people used to it being instant (or can be seen as a feature confirming messages got to the server!). It'd be nice as an off-by-default setting.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1124,2019-09-04T12:58:05Z,2019-09-05T16:19:04Z,2021-10-11T20:55:42Z,MERGED,True,5,2,1,https://github.com/ailin-nemui,fix crash in join due to incorrect free,1,[],https://github.com/irssi/irssi/pull/1124,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1124,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1124,2019-09-04T12:58:05Z,2019-09-05T16:19:04Z,2021-10-11T20:55:42Z,MERGED,True,5,2,1,https://github.com/ailin-nemui,fix crash in join due to incorrect free,1,[],https://github.com/irssi/irssi/pull/1124,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1124#issuecomment-527888720,,reported by @josephbisch,True,{}
irssi/irssi,https://github.com/irssi/irssi,1125,2019-09-04T20:48:12Z,2019-09-05T13:46:36Z,2021-10-11T20:55:43Z,MERGED,True,10,1,5,https://github.com/ailin-nemui,add new meson build option -Dfuzzer-link-language=cpp for oss-fuzz,1,[],https://github.com/irssi/irssi/pull/1125,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1125,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1125,2019-09-04T20:48:12Z,2019-09-05T13:46:36Z,2021-10-11T20:55:43Z,MERGED,True,10,1,5,https://github.com/ailin-nemui,add new meson build option -Dfuzzer-link-language=cpp for oss-fuzz,1,[],https://github.com/irssi/irssi/pull/1125,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1125#issuecomment-528090637,,"oss-fuzz needs to be linked with clang++ according to https://google.github.io/oss-fuzz/getting-started/new-project-guide/, this patch allows us to do this with Meson >= 0.51, and the flag -Dfuzzer-link-language=cpp",True,{}
irssi/irssi,https://github.com/irssi/irssi,1125,2019-09-04T20:48:12Z,2019-09-05T13:46:36Z,2021-10-11T20:55:43Z,MERGED,True,10,1,5,https://github.com/ailin-nemui,add new meson build option -Dfuzzer-link-language=cpp for oss-fuzz,1,[],https://github.com/irssi/irssi/pull/1125,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1125#issuecomment-528267247,,"If it works it's fine by me I guess, just one question about the ""UI"" side of this - does it ever make sense to pass -Dfuzzer-link-language=c?
Ignoring that it's the default (because, I assume, the fuzzer is not being built most of the time), that configuration is always broken when building the fuzzer, isn't it?
...now I'm not sure how it ever worked in the first place.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1125,2019-09-04T20:48:12Z,2019-09-05T13:46:36Z,2021-10-11T20:55:43Z,MERGED,True,10,1,5,https://github.com/ailin-nemui,add new meson build option -Dfuzzer-link-language=cpp for oss-fuzz,1,[],https://github.com/irssi/irssi/pull/1125,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1125#issuecomment-528291599,,"the oss-fuzz docs say we have to link with clang++
but in fact you can build the fuzzer locally, and the libfuzzer included in clang has no such requirement at all; it will build just fine with -Dfuzzer-link-language=c (the default)
about oss-fuzz, it currently seems to only really require linking with c++ for their afl implementation (see the travis build on google/oss-fuzz#2785)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1126,2019-09-10T11:08:56Z,2019-09-11T11:33:15Z,2021-10-11T20:55:43Z,MERGED,True,54,5,13,https://github.com/ailin-nemui,silence glib log output during fuzzing on oss-fuzz,2,['auto-merge'],https://github.com/irssi/irssi/pull/1126,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1126,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1126,2019-09-10T11:08:56Z,2019-09-11T11:33:15Z,2021-10-11T20:55:43Z,MERGED,True,54,5,13,https://github.com/ailin-nemui,silence glib log output during fuzzing on oss-fuzz,2,['auto-merge'],https://github.com/irssi/irssi/pull/1126,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1126#issuecomment-529987568,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1127,2019-09-15T14:50:59Z,2019-09-16T09:43:09Z,2019-09-16T09:43:09Z,CLOSED,False,1,0,1,https://github.com/josephbisch,Fix memory leak in cap code,1,[],https://github.com/irssi/irssi/pull/1127,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/1127,"Malformed CAPs fail to free params before returning from event_cap.
This makes oss-fuzz sad.","Malformed CAPs fail to free params before returning from event_cap.
This makes oss-fuzz sad.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1127,2019-09-15T14:50:59Z,2019-09-16T09:43:09Z,2019-09-16T09:43:09Z,CLOSED,False,1,0,1,https://github.com/josephbisch,Fix memory leak in cap code,1,[],https://github.com/irssi/irssi/pull/1127,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1127#issuecomment-531708020,"Malformed CAPs fail to free params before returning from event_cap.
This makes oss-fuzz sad.",#1120,True,{}
irssi/irssi,https://github.com/irssi/irssi,1128,2019-09-25T01:38:00Z,2019-09-30T13:39:21Z,2021-04-08T22:15:03Z,MERGED,True,3,1,1,https://github.com/josephbisch,Properly free sasl_buffer GString,2,[],https://github.com/irssi/irssi/pull/1128,https://github.com/josephbisch,1,https://github.com/irssi/irssi/pull/1128,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1129,2019-09-29T00:11:50Z,2019-10-15T09:02:42Z,2021-10-11T20:55:44Z,MERGED,True,48,8,1,https://github.com/dcollinsn,#354 Fix hilight behavior for STATUSMSG,2,['auto-merge'],https://github.com/irssi/irssi/pull/1129,https://github.com/dcollinsn,1,https://github.com/irssi/irssi/pull/1129,"This patch allows irc_op_public messages to properly trigger
hilights when the message mentions the current nick or one of our
hilights. This is done by copying the required code from
sig_message_public. This is important because Freenode has begun
using this message type for messages that can only be seen by ops
due to the +z channel mode, and ops will want to be notified of
watchwords even in that type of message.
To test, make two connections to Freenode, join a new channel. The
first client to join that channel will be an op. To establish a
baseline, use the non-opped client to attempt to ""ping"" the opped
client by addressing it by name and using terms in /hilight. Then,
set channel mode to +mz and use the non-opped client to send the
messages again. Without this patch, no message will ""ping"" the opped
client with +mz set. With this patch, ""pings"" should operate
normally, causing a bell, hilighting the window number, and so on.
What I don't know is whether there is any other code from
sig_message_public that should be copied over too. In particular,
the lines related to ""ignore_check_plus"", ""emphasis"", and
""printnick"", I don't know if they are needed here. I also don't know
if there are any other message types that these changes should be
applied to.","This patch allows irc_op_public messages to properly trigger
hilights when the message mentions the current nick or one of our
hilights. This is done by copying the required code from
sig_message_public. This is important because Freenode has begun
using this message type for messages that can only be seen by ops
due to the +z channel mode, and ops will want to be notified of
watchwords even in that type of message.
To test, make two connections to Freenode, join a new channel. The
first client to join that channel will be an op. To establish a
baseline, use the non-opped client to attempt to ""ping"" the opped
client by addressing it by name and using terms in /hilight. Then,
set channel mode to +mz and use the non-opped client to send the
messages again. Without this patch, no message will ""ping"" the opped
client with +mz set. With this patch, ""pings"" should operate
normally, causing a bell, hilighting the window number, and so on.
What I don't know is whether there is any other code from
sig_message_public that should be copied over too. In particular,
the lines related to ""ignore_check_plus"", ""emphasis"", and
""printnick"", I don't know if they are needed here. I also don't know
if there are any other message types that these changes should be
applied to.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1129,2019-09-29T00:11:50Z,2019-10-15T09:02:42Z,2021-10-11T20:55:44Z,MERGED,True,48,8,1,https://github.com/dcollinsn,#354 Fix hilight behavior for STATUSMSG,2,['auto-merge'],https://github.com/irssi/irssi/pull/1129,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1129#issuecomment-537002133,"This patch allows irc_op_public messages to properly trigger
hilights when the message mentions the current nick or one of our
hilights. This is done by copying the required code from
sig_message_public. This is important because Freenode has begun
using this message type for messages that can only be seen by ops
due to the +z channel mode, and ops will want to be notified of
watchwords even in that type of message.
To test, make two connections to Freenode, join a new channel. The
first client to join that channel will be an op. To establish a
baseline, use the non-opped client to attempt to ""ping"" the opped
client by addressing it by name and using terms in /hilight. Then,
set channel mode to +mz and use the non-opped client to send the
messages again. Without this patch, no message will ""ping"" the opped
client with +mz set. With this patch, ""pings"" should operate
normally, causing a bell, hilighting the window number, and so on.
What I don't know is whether there is any other code from
sig_message_public that should be copied over too. In particular,
the lines related to ""ignore_check_plus"", ""emphasis"", and
""printnick"", I don't know if they are needed here. I also don't know
if there are any other message types that these changes should be
applied to.","Thanks for your contribution! I suspect the ignore_check_plus does indeed need to go there as well, we have to check if it is possible to /ignore and /ignore HIDDEN/NO_ACT these messages properly",True,{}
irssi/irssi,https://github.com/irssi/irssi,1129,2019-09-29T00:11:50Z,2019-10-15T09:02:42Z,2021-10-11T20:55:44Z,MERGED,True,48,8,1,https://github.com/dcollinsn,#354 Fix hilight behavior for STATUSMSG,2,['auto-merge'],https://github.com/irssi/irssi/pull/1129,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1129#issuecomment-541217370,"This patch allows irc_op_public messages to properly trigger
hilights when the message mentions the current nick or one of our
hilights. This is done by copying the required code from
sig_message_public. This is important because Freenode has begun
using this message type for messages that can only be seen by ops
due to the +z channel mode, and ops will want to be notified of
watchwords even in that type of message.
To test, make two connections to Freenode, join a new channel. The
first client to join that channel will be an op. To establish a
baseline, use the non-opped client to attempt to ""ping"" the opped
client by addressing it by name and using terms in /hilight. Then,
set channel mode to +mz and use the non-opped client to send the
messages again. Without this patch, no message will ""ping"" the opped
client with +mz set. With this patch, ""pings"" should operate
normally, causing a bell, hilighting the window number, and so on.
What I don't know is whether there is any other code from
sig_message_public that should be copied over too. In particular,
the lines related to ""ignore_check_plus"", ""emphasis"", and
""printnick"", I don't know if they are needed here. I also don't know
if there are any other message types that these changes should be
applied to.",@dcollinsn can you test this additional commit,True,{}
irssi/irssi,https://github.com/irssi/irssi,1129,2019-09-29T00:11:50Z,2019-10-15T09:02:42Z,2021-10-11T20:55:44Z,MERGED,True,48,8,1,https://github.com/dcollinsn,#354 Fix hilight behavior for STATUSMSG,2,['auto-merge'],https://github.com/irssi/irssi/pull/1129,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1129#issuecomment-541217417,"This patch allows irc_op_public messages to properly trigger
hilights when the message mentions the current nick or one of our
hilights. This is done by copying the required code from
sig_message_public. This is important because Freenode has begun
using this message type for messages that can only be seen by ops
due to the +z channel mode, and ops will want to be notified of
watchwords even in that type of message.
To test, make two connections to Freenode, join a new channel. The
first client to join that channel will be an op. To establish a
baseline, use the non-opped client to attempt to ""ping"" the opped
client by addressing it by name and using terms in /hilight. Then,
set channel mode to +mz and use the non-opped client to send the
messages again. Without this patch, no message will ""ping"" the opped
client with +mz set. With this patch, ""pings"" should operate
normally, causing a bell, hilighting the window number, and so on.
What I don't know is whether there is any other code from
sig_message_public that should be copied over too. In particular,
the lines related to ""ignore_check_plus"", ""emphasis"", and
""printnick"", I don't know if they are needed here. I also don't know
if there are any other message types that these changes should be
applied to.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1129,2019-09-29T00:11:50Z,2019-10-15T09:02:42Z,2021-10-11T20:55:44Z,MERGED,True,48,8,1,https://github.com/dcollinsn,#354 Fix hilight behavior for STATUSMSG,2,['auto-merge'],https://github.com/irssi/irssi/pull/1129,https://github.com/dcollinsn,5,https://github.com/irssi/irssi/pull/1129#issuecomment-541226567,"This patch allows irc_op_public messages to properly trigger
hilights when the message mentions the current nick or one of our
hilights. This is done by copying the required code from
sig_message_public. This is important because Freenode has begun
using this message type for messages that can only be seen by ops
due to the +z channel mode, and ops will want to be notified of
watchwords even in that type of message.
To test, make two connections to Freenode, join a new channel. The
first client to join that channel will be an op. To establish a
baseline, use the non-opped client to attempt to ""ping"" the opped
client by addressing it by name and using terms in /hilight. Then,
set channel mode to +mz and use the non-opped client to send the
messages again. Without this patch, no message will ""ping"" the opped
client with +mz set. With this patch, ""pings"" should operate
normally, causing a bell, hilighting the window number, and so on.
What I don't know is whether there is any other code from
sig_message_public that should be copied over too. In particular,
the lines related to ""ignore_check_plus"", ""emphasis"", and
""printnick"", I don't know if they are needed here. I also don't know
if there are any other message types that these changes should be
applied to.","@ailin-nemui Yes, tested and works fine for me!",True,{}
irssi/irssi,https://github.com/irssi/irssi,1130,2019-10-01T09:09:57Z,2019-10-01T11:55:47Z,2021-04-08T22:15:03Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,Only call g_string_free if there is a string,1,[],https://github.com/irssi/irssi/pull/1130,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1130,Reported by Lipps on irc,Reported by Lipps on irc,True,{}
irssi/irssi,https://github.com/irssi/irssi,1131,2019-10-05T21:33:19Z,2019-10-06T15:58:44Z,2021-10-11T20:55:44Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,missing free in nicklist/account,1,['auto-merge'],https://github.com/irssi/irssi/pull/1131,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1131,"Was missing in #1098
Credit to oss-fuzz","Was missing in #1098
Credit to oss-fuzz",True,{}
irssi/irssi,https://github.com/irssi/irssi,1131,2019-10-05T21:33:19Z,2019-10-06T15:58:44Z,2021-10-11T20:55:44Z,MERGED,True,1,0,1,https://github.com/ailin-nemui,missing free in nicklist/account,1,['auto-merge'],https://github.com/irssi/irssi/pull/1131,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1131#issuecomment-538716843,"Was missing in #1098
Credit to oss-fuzz",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1132,2019-10-05T21:34:24Z,2019-10-15T09:03:05Z,2021-10-11T20:55:45Z,MERGED,True,1,6,2,https://github.com/horgh,Remove an unused function and deprecate another,2,[],https://github.com/irssi/irssi/pull/1132,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/1132,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1132,2019-10-05T21:34:24Z,2019-10-15T09:03:05Z,2021-10-11T20:55:45Z,MERGED,True,1,6,2,https://github.com/horgh,Remove an unused function and deprecate another,2,[],https://github.com/irssi/irssi/pull/1132,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1132#issuecomment-541217686,,I can understand the duality of providing conversion functions. @irssi/developers  ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1134,2019-10-12T22:50:27Z,2019-10-15T09:02:23Z,2021-04-08T15:21:28Z,MERGED,True,41,43,2,https://github.com/horgh,Use correct TLS settings when reconnecting,3,"['auto-merge', 'tls', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1134,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/1134,This is to fix #1027.,This is to fix #1027.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1134,2019-10-12T22:50:27Z,2019-10-15T09:02:23Z,2021-04-08T15:21:28Z,MERGED,True,41,43,2,https://github.com/horgh,Use correct TLS settings when reconnecting,3,"['auto-merge', 'tls', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1134,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1134#issuecomment-541395780,This is to fix #1027.,Nice!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1134,2019-10-12T22:50:27Z,2019-10-15T09:02:23Z,2021-04-08T15:21:28Z,MERGED,True,41,43,2,https://github.com/horgh,Use correct TLS settings when reconnecting,3,"['auto-merge', 'tls', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1134,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1134#issuecomment-541431908,This is to fix #1027.,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1135,2019-10-13T00:11:38Z,2019-11-19T18:42:06Z,2021-10-11T20:55:45Z,MERGED,True,14,60,5,https://github.com/horgh,Remove resolve_reverse_lookup setting,4,['auto-merge'],https://github.com/irssi/irssi/pull/1135,https://github.com/horgh,1,https://github.com/irssi/irssi/pull/1135,This basically just reverts 5b60b85 which added it.,This basically just reverts 5b60b85 which added it.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1135,2019-10-13T00:11:38Z,2019-11-19T18:42:06Z,2021-10-11T20:55:45Z,MERGED,True,14,60,5,https://github.com/horgh,Remove resolve_reverse_lookup setting,4,['auto-merge'],https://github.com/irssi/irssi/pull/1135,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1135#issuecomment-541395631,This basically just reverts 5b60b85 which added it.,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1135,2019-10-13T00:11:38Z,2019-11-19T18:42:06Z,2021-10-11T20:55:45Z,MERGED,True,14,60,5,https://github.com/horgh,Remove resolve_reverse_lookup setting,4,['auto-merge'],https://github.com/irssi/irssi/pull/1135,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1135#issuecomment-542652732,This basically just reverts 5b60b85 which added it.,"Thanks! Looks good.
ABI version bump maybe?",True,{'THUMBS_UP': ['https://github.com/horgh']}
irssi/irssi,https://github.com/irssi/irssi,1135,2019-10-13T00:11:38Z,2019-11-19T18:42:06Z,2021-10-11T20:55:45Z,MERGED,True,14,60,5,https://github.com/horgh,Remove resolve_reverse_lookup setting,4,['auto-merge'],https://github.com/irssi/irssi/pull/1135,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1135#issuecomment-542652942,This basically just reverts 5b60b85 which added it.,(RESOLVED_IP_REC becoming shorter),True,{}
irssi/irssi,https://github.com/irssi/irssi,1136,2019-10-13T19:36:01Z,2019-10-15T10:56:37Z,2021-04-08T15:21:30Z,MERGED,True,8,3,1,https://github.com/ailin-nemui,Make sure the bottom_startline is not lost when removing lines,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1136,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1136,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1136,2019-10-13T19:36:01Z,2019-10-15T10:56:37Z,2021-04-08T15:21:30Z,MERGED,True,8,3,1,https://github.com/ailin-nemui,Make sure the bottom_startline is not lost when removing lines,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1136,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1136#issuecomment-541450746,,This is a potential fix for #1115 based on code analysis,True,{}
irssi/irssi,https://github.com/irssi/irssi,1136,2019-10-13T19:36:01Z,2019-10-15T10:56:37Z,2021-04-08T15:21:30Z,MERGED,True,8,3,1,https://github.com/ailin-nemui,Make sure the bottom_startline is not lost when removing lines,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1136,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1136#issuecomment-542114323,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1137,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels","I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels",True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1137#issuecomment-543166149,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels","while I don't necessarily disagree in principle, this would be a huge change in behaviour (currently JOINS and +JOINS has the same meaning)
that's why I'm hesitant about making such a change",True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1137#issuecomment-543246185,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels","I agree it does change things around but is it such a big change really? Usage wise
combine_level isn't used a lot in core, no idea about modules out there in the world
vague@irssi:~/irssi$ grep -RI combine_level src/*
src/core/levels.c:int combine_level(int dest, const char *src)
src/core/levels.h:int combine_level(int dest, const char *src);
src/fe-common/core/fe-ignore.c: rec->level = combine_level(rec->level, levels);
src/fe-common/core/window-commands.c:   window_set_level(active_win, combine_level(active_win->level, data));
src/fe-text/textbuffer-commands.c:      combine_level(gui->view->hidden_level, data));
src/perl/common/Core.xs:combine_level(level, str)

and only scripts in the repo using it are
sbclearmatch.pl
sb_search.pl",True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/vague666,4,https://github.com/irssi/irssi/pull/1137#issuecomment-543275871,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels",Or maybe we should rewrite https://github.com/irssi/irssi/blob/master/src/fe-text/textbuffer-commands.c#L96 somehow,True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1137#issuecomment-543289598,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels",fwiw you can already set absolute levels using /window hidelevel NONE joins parts quits,True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/vague666,6,https://github.com/irssi/irssi/pull/1137#issuecomment-543326486,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels",It's not very logical,True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1137#issuecomment-583463969,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels",I can't think of a good solution ...... I don't want to break backward compat,True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1137#issuecomment-583464281,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels",@irssi/developers any other opinions?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1137,2019-10-17T13:03:24Z,2020-03-17T01:00:12Z,2020-03-17T01:00:13Z,CLOSED,False,17,12,1,https://github.com/vague666,handle levels more logically,1,[],https://github.com/irssi/irssi/pull/1137,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1137#issuecomment-599824945,"I've only tested this for hidelevel but I reckon it should work the same for everything else
IMO /window hidelevel JOINS PARTS should set the absolute value of hidelevel
and +JOINS +PARTS and -JOINS -PARTS should be used to add/delete levels",let's chat if you can think of any ideas and see if we can agree,True,{}
irssi/irssi,https://github.com/irssi/irssi,1138,2019-10-19T10:35:02Z,2019-10-19T14:01:17Z,2021-10-11T20:55:46Z,MERGED,True,1,1,1,https://github.com/mquin,Improve clarity of nick in use message,1,['auto-merge'],https://github.com/irssi/irssi/pull/1138,https://github.com/mquin,1,https://github.com/irssi/irssi/pull/1138,"If irssi's preferred nick is in use irssi will issue a whois command and report some information
on the current user of the nick. As the ""is owned by"" wording can be confusing to users of networks with nickname registration, I propose rephrasing this to ""is in use by"".","If irssi's preferred nick is in use irssi will issue a whois command and report some information
on the current user of the nick. As the ""is owned by"" wording can be confusing to users of networks with nickname registration, I propose rephrasing this to ""is in use by"".",True,{}
irssi/irssi,https://github.com/irssi/irssi,1138,2019-10-19T10:35:02Z,2019-10-19T14:01:17Z,2021-10-11T20:55:46Z,MERGED,True,1,1,1,https://github.com/mquin,Improve clarity of nick in use message,1,['auto-merge'],https://github.com/irssi/irssi/pull/1138,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1138#issuecomment-544127840,"If irssi's preferred nick is in use irssi will issue a whois command and report some information
on the current user of the nick. As the ""is owned by"" wording can be confusing to users of networks with nickname registration, I propose rephrasing this to ""is in use by"".",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1140,2019-10-31T20:07:08Z,2020-04-14T08:23:10Z,2021-10-11T20:55:48Z,MERGED,True,0,1,1,https://github.com/dequis,meson.build: Remove unnecessary -Wall,1,['auto-merge'],https://github.com/irssi/irssi/pull/1140,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/1140,"#1069 is delicious low hanging fruit for tshirt month, surprised no one else took it before","#1069 is delicious low hanging fruit for tshirt month, surprised no one else took it before",True,{}
irssi/irssi,https://github.com/irssi/irssi,1140,2019-10-31T20:07:08Z,2020-04-14T08:23:10Z,2021-10-11T20:55:48Z,MERGED,True,0,1,1,https://github.com/dequis,meson.build: Remove unnecessary -Wall,1,['auto-merge'],https://github.com/irssi/irssi/pull/1140,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1140#issuecomment-613295456,"#1069 is delicious low hanging fruit for tshirt month, surprised no one else took it before","@irssi/developers
I forgot about this one. I got my tshirt btw.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1141,2019-10-31T22:52:15Z,2019-11-19T18:41:17Z,2021-10-11T20:55:48Z,MERGED,True,33,33,11,https://github.com/dequis,Fix some glib deprecation warnings,1,[],https://github.com/irssi/irssi/pull/1141,https://github.com/dequis,1,https://github.com/irssi/irssi/pull/1141,"Most of these have been deprecated since forever (2.2), but they didn't
raise warnings. Now they do, and the warnings are not the most verbose
warnings you could ask for, but, they point in the right direction.
This doesn't handle the GTimeVal deprecation warnings. Those seem
trickier since they cover API, will look into those right after this.","Most of these have been deprecated since forever (2.2), but they didn't
raise warnings. Now they do, and the warnings are not the most verbose
warnings you could ask for, but, they point in the right direction.
This doesn't handle the GTimeVal deprecation warnings. Those seem
trickier since they cover API, will look into those right after this.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1141,2019-10-31T22:52:15Z,2019-11-19T18:41:17Z,2021-10-11T20:55:48Z,MERGED,True,33,33,11,https://github.com/dequis,Fix some glib deprecation warnings,1,[],https://github.com/irssi/irssi/pull/1141,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1141#issuecomment-555649005,"Most of these have been deprecated since forever (2.2), but they didn't
raise warnings. Now they do, and the warnings are not the most verbose
warnings you could ask for, but, they point in the right direction.
This doesn't handle the GTimeVal deprecation warnings. Those seem
trickier since they cover API, will look into those right after this.",Nice!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1145,2019-12-06T09:57:15Z,2020-01-08T09:41:09Z,2021-10-11T20:55:49Z,MERGED,True,74,69,14,https://github.com/ailin-nemui,remove GTimeVal following glib 2.61.2 deprecation,2,['auto-merge'],https://github.com/irssi/irssi/pull/1145,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1145,fixes #1144,fixes #1144,True,{}
irssi/irssi,https://github.com/irssi/irssi,1145,2019-12-06T09:57:15Z,2020-01-08T09:41:09Z,2021-10-11T20:55:49Z,MERGED,True,74,69,14,https://github.com/ailin-nemui,remove GTimeVal following glib 2.61.2 deprecation,2,['auto-merge'],https://github.com/irssi/irssi/pull/1145,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1145#issuecomment-562509537,fixes #1144,@dequis #1141,True,{}
irssi/irssi,https://github.com/irssi/irssi,1145,2019-12-06T09:57:15Z,2020-01-08T09:41:09Z,2021-10-11T20:55:49Z,MERGED,True,74,69,14,https://github.com/ailin-nemui,remove GTimeVal following glib 2.61.2 deprecation,2,['auto-merge'],https://github.com/irssi/irssi/pull/1145,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1145#issuecomment-570065479,fixes #1144,"15:36 < dx> [1:bitlbee (change with ^X)] [Lag: 973.33]
15:36 < dx> lol i guess
15:36 < dx> i started irssi before bitlbee, and that's the time since it started the reconnection attempts, shows up as lag for a brief moment
15:39 < dx> (it does this for every network)

Restarted today with git master + this PR merged in.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1145,2019-12-06T09:57:15Z,2020-01-08T09:41:09Z,2021-10-11T20:55:49Z,MERGED,True,74,69,14,https://github.com/ailin-nemui,remove GTimeVal following glib 2.61.2 deprecation,2,['auto-merge'],https://github.com/irssi/irssi/pull/1145,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1145#issuecomment-571072013,fixes #1144,are you sure that this only happens with this patch?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1145,2019-12-06T09:57:15Z,2020-01-08T09:41:09Z,2021-10-11T20:55:49Z,MERGED,True,74,69,14,https://github.com/ailin-nemui,remove GTimeVal following glib 2.61.2 deprecation,2,['auto-merge'],https://github.com/irssi/irssi/pull/1145,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1145#issuecomment-571123775,fixes #1144,"Not really, i just commented to not forget about it and check later.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1145,2019-12-06T09:57:15Z,2020-01-08T09:41:09Z,2021-10-11T20:55:49Z,MERGED,True,74,69,14,https://github.com/ailin-nemui,remove GTimeVal following glib 2.61.2 deprecation,2,['auto-merge'],https://github.com/irssi/irssi/pull/1145,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1145#issuecomment-571372739,fixes #1144,"Confirming: with this commit, irssi shows [Lag: 88.42] for one network, weirdly always that number, a few seconds after startup / successfully connecting to a network. Not correlated to reconnection time as I previously thought.
Valgrind doesn't whine about uninitialized reads but I guess this one doesn't hit a condition.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1145,2019-12-06T09:57:15Z,2020-01-08T09:41:09Z,2021-10-11T20:55:49Z,MERGED,True,74,69,14,https://github.com/ailin-nemui,remove GTimeVal following glib 2.61.2 deprecation,2,['auto-merge'],https://github.com/irssi/irssi/pull/1145,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1145#issuecomment-571959460,fixes #1144,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1146,2019-12-10T03:53:58Z,2020-01-06T09:42:29Z,2021-10-11T20:55:50Z,MERGED,True,15,3,3,https://github.com/slingamn,Reconnect retry IPv4 on IPv6 failure ,1,['auto-merge'],https://github.com/irssi/irssi/pull/1146,https://github.com/slingamn,1,https://github.com/irssi/irssi/pull/1146,"Track the address family of the last failed connection attempt (either immediately or during TLS handshake), then disprefer that address family during reconnection.
A note on testing ipv6 connectivity failure on Linux: disable_ipv6 will not simulate it correctly, because irssi calls getaddrinfo(3) with AI_ADDRCONFIG, which suppresses resolution of ipv6 addresses if no local ipv6 address is available.
The correct way to simulate this is with disable_ra. That way, the link-local address will remain, and getaddrinfo(3) will return addresses corresponding to AAAA records, but attempts to connect to them will fail with ""Network is unreachable"".
I tested a few different cases (disable_ra for cutting off ipv6, an iptables rule dropping outgoing packets for cutting off ipv4), but this probably needs more testing --- let me know if you have suggestions.","Track the address family of the last failed connection attempt (either immediately or during TLS handshake), then disprefer that address family during reconnection.
A note on testing ipv6 connectivity failure on Linux: disable_ipv6 will not simulate it correctly, because irssi calls getaddrinfo(3) with AI_ADDRCONFIG, which suppresses resolution of ipv6 addresses if no local ipv6 address is available.
The correct way to simulate this is with disable_ra. That way, the link-local address will remain, and getaddrinfo(3) will return addresses corresponding to AAAA records, but attempts to connect to them will fail with ""Network is unreachable"".
I tested a few different cases (disable_ra for cutting off ipv6, an iptables rule dropping outgoing packets for cutting off ipv4), but this probably needs more testing --- let me know if you have suggestions.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1146,2019-12-10T03:53:58Z,2020-01-06T09:42:29Z,2021-10-11T20:55:50Z,MERGED,True,15,3,3,https://github.com/slingamn,Reconnect retry IPv4 on IPv6 failure ,1,['auto-merge'],https://github.com/irssi/irssi/pull/1146,https://github.com/slingamn,2,https://github.com/irssi/irssi/pull/1146#issuecomment-563727829,"Track the address family of the last failed connection attempt (either immediately or during TLS handshake), then disprefer that address family during reconnection.
A note on testing ipv6 connectivity failure on Linux: disable_ipv6 will not simulate it correctly, because irssi calls getaddrinfo(3) with AI_ADDRCONFIG, which suppresses resolution of ipv6 addresses if no local ipv6 address is available.
The correct way to simulate this is with disable_ra. That way, the link-local address will remain, and getaddrinfo(3) will return addresses corresponding to AAAA records, but attempts to connect to them will fail with ""Network is unreachable"".
I tested a few different cases (disable_ra for cutting off ipv6, an iptables rule dropping outgoing packets for cutting off ipv4), but this probably needs more testing --- let me know if you have suggestions.","This is really a band-aid because it imposes the standard reconnection timeout (default 5 minutes?) on any attempt to fail over from ipv6 to ipv4 or vice versa. Ideally in the future we'd do one of the following:

A suggestion from nei in #irssi: resolve all the addresses, then do local round-robin over them (sorting them in the order implied by resolve_prefer_ipv6) until a connection succeeds.
A full Happy Eyeballs implementation",True,{}
irssi/irssi,https://github.com/irssi/irssi,1146,2019-12-10T03:53:58Z,2020-01-06T09:42:29Z,2021-10-11T20:55:50Z,MERGED,True,15,3,3,https://github.com/slingamn,Reconnect retry IPv4 on IPv6 failure ,1,['auto-merge'],https://github.com/irssi/irssi/pull/1146,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1146#issuecomment-563948182,"Track the address family of the last failed connection attempt (either immediately or during TLS handshake), then disprefer that address family during reconnection.
A note on testing ipv6 connectivity failure on Linux: disable_ipv6 will not simulate it correctly, because irssi calls getaddrinfo(3) with AI_ADDRCONFIG, which suppresses resolution of ipv6 addresses if no local ipv6 address is available.
The correct way to simulate this is with disable_ra. That way, the link-local address will remain, and getaddrinfo(3) will return addresses corresponding to AAAA records, but attempts to connect to them will fail with ""Network is unreachable"".
I tested a few different cases (disable_ra for cutting off ipv6, an iptables rule dropping outgoing packets for cutting off ipv4), but this probably needs more testing --- let me know if you have suggestions.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1146,2019-12-10T03:53:58Z,2020-01-06T09:42:29Z,2021-10-11T20:55:50Z,MERGED,True,15,3,3,https://github.com/slingamn,Reconnect retry IPv4 on IPv6 failure ,1,['auto-merge'],https://github.com/irssi/irssi/pull/1146,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1146#issuecomment-563948990,"Track the address family of the last failed connection attempt (either immediately or during TLS handshake), then disprefer that address family during reconnection.
A note on testing ipv6 connectivity failure on Linux: disable_ipv6 will not simulate it correctly, because irssi calls getaddrinfo(3) with AI_ADDRCONFIG, which suppresses resolution of ipv6 addresses if no local ipv6 address is available.
The correct way to simulate this is with disable_ra. That way, the link-local address will remain, and getaddrinfo(3) will return addresses corresponding to AAAA records, but attempts to connect to them will fail with ""Network is unreachable"".
I tested a few different cases (disable_ra for cutting off ipv6, an iptables rule dropping outgoing packets for cutting off ipv4), but this probably needs more testing --- let me know if you have suggestions.",nb this will require an abi bump due to added field,True,{}
irssi/irssi,https://github.com/irssi/irssi,1146,2019-12-10T03:53:58Z,2020-01-06T09:42:29Z,2021-10-11T20:55:50Z,MERGED,True,15,3,3,https://github.com/slingamn,Reconnect retry IPv4 on IPv6 failure ,1,['auto-merge'],https://github.com/irssi/irssi/pull/1146,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1146#issuecomment-569449451,"Track the address family of the last failed connection attempt (either immediately or during TLS handshake), then disprefer that address family during reconnection.
A note on testing ipv6 connectivity failure on Linux: disable_ipv6 will not simulate it correctly, because irssi calls getaddrinfo(3) with AI_ADDRCONFIG, which suppresses resolution of ipv6 addresses if no local ipv6 address is available.
The correct way to simulate this is with disable_ra. That way, the link-local address will remain, and getaddrinfo(3) will return addresses corresponding to AAAA records, but attempts to connect to them will fail with ""Network is unreachable"".
I tested a few different cases (disable_ra for cutting off ipv6, an iptables rule dropping outgoing packets for cutting off ipv4), but this probably needs more testing --- let me know if you have suggestions.",@irssi/developers,True,{'THUMBS_UP': ['https://github.com/vague666']}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/JustAnotherArchivist,1,https://github.com/irssi/irssi/pull/1151,Fixes #1148,Fixes #1148,True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1151#issuecomment-583332805,Fixes #1148,@irssi/developers any opinions here?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1151#issuecomment-583379320,Fixes #1148,"Not really, I guess it's alright?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1151#issuecomment-583460119,Fixes #1148,"@JustAnotherArchivist how do you feel about this instead
diff --git a/src/irc/core/irc-servers.c b/src/irc/core/irc-servers.c
index 9779ab58..67ce601a 100644
--- a/src/irc/core/irc-servers.c
+++ b/src/irc/core/irc-servers.c
@@ -553,6 +553,8 @@ void irc_server_send_away(IRC_SERVER_REC *server, const char *reason)
 
 void irc_server_send_data(IRC_SERVER_REC *server, const char *data, int len)
 {
+	signal_emit(""server outgoing"", 3, server, data, len);
+
 	if (net_sendbuffer_send(server->handle, data, len) == -1) {
 		/* something bad happened */
 		server->connection_lost = TRUE;",True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1151#issuecomment-583597136,Fixes #1148,"I think you want to be able to cancel the signal or modify the args, and your version doesn't allow that, while the original does",True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1151#issuecomment-583606356,Fixes #1148,If author requires the ability to modify the data before it goes into socket write. (then I would prefer to rename the signal to server send data or something},True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/1151#issuecomment-583616858,Fixes #1148,"Doesn't ""server incoming"" work the same way? You can modify what happened on the wire before it continues normal processing by irssi. This is just mirroring that.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/JustAnotherArchivist,8,https://github.com/irssi/irssi/pull/1151#issuecomment-587027125,Fixes #1148,"Yes, the intention is to be able to block or modify the message before sending for full flexibility. Is there a good reason not to allow that, given that ""server incoming"" is implemented that way?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1151,2020-01-15T01:31:33Z,,2022-03-11T08:08:33Z,OPEN,False,5,3,4,https://github.com/JustAnotherArchivist,"Add a ""server outgoing"" signal mirroring ""server incoming""",1,[],https://github.com/irssi/irssi/pull/1151,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1151#issuecomment-1064871939,Fixes #1148,a different variant of this has been merged into ailin-nemui#43 (using GString),True,{}
irssi/irssi,https://github.com/irssi/irssi,1154,2020-02-07T15:34:08Z,2020-02-14T19:17:51Z,2021-04-08T22:15:04Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,refine zero width input test in empty line,1,['auto-merge'],https://github.com/irssi/irssi/pull/1154,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1154,fixes #1153,fixes #1153,True,{}
irssi/irssi,https://github.com/irssi/irssi,1154,2020-02-07T15:34:08Z,2020-02-14T19:17:51Z,2021-04-08T22:15:04Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,refine zero width input test in empty line,1,['auto-merge'],https://github.com/irssi/irssi/pull/1154,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1154#issuecomment-583460419,fixes #1153,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1154,2020-02-07T15:34:08Z,2020-02-14T19:17:51Z,2021-04-08T22:15:04Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,refine zero width input test in empty line,1,['auto-merge'],https://github.com/irssi/irssi/pull/1154,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1154#issuecomment-583598866,fixes #1153,"Isn't this defeating the purpose of a429e2b? (Whatever that purpose is). That commit is using wcwidth 0 as a way to get ""not printable"". Are there any printable characters with wcwidth 0?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1154,2020-02-07T15:34:08Z,2020-02-14T19:17:51Z,2021-04-08T22:15:04Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,refine zero width input test in empty line,1,['auto-merge'],https://github.com/irssi/irssi/pull/1154,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1154#issuecomment-583605327,fixes #1153,My understanding is that this was supposed to catch combining diacrits which are supposed to go after a base character. The other wcwidth implementations seem to return 1 for control characters,True,{}
irssi/irssi,https://github.com/irssi/irssi,1155,2020-02-09T11:41:01Z,2020-07-04T18:37:37Z,2021-10-11T20:55:51Z,MERGED,True,2,3,1,https://github.com/vague666,rewrite how /bind searches for bindings when listing them,3,['auto-merge'],https://github.com/irssi/irssi/pull/1155,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1155,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1155,2020-02-09T11:41:01Z,2020-07-04T18:37:37Z,2021-10-11T20:55:51Z,MERGED,True,2,3,1,https://github.com/vague666,rewrite how /bind searches for bindings when listing them,3,['auto-merge'],https://github.com/irssi/irssi/pull/1155,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1155#issuecomment-599823398,,what use case is this?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1155,2020-02-09T11:41:01Z,2020-07-04T18:37:37Z,2021-10-11T20:55:51Z,MERGED,True,2,3,1,https://github.com/vague666,rewrite how /bind searches for bindings when listing them,3,['auto-merge'],https://github.com/irssi/irssi/pull/1155,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1155#issuecomment-599923188,,"When searching it searches from the beginning, so you need to know what you are looking for to find it, would be better to search the same way /set txt finds settings with txt in them",True,{}
irssi/irssi,https://github.com/irssi/irssi,1155,2020-02-09T11:41:01Z,2020-07-04T18:37:37Z,2021-10-11T20:55:51Z,MERGED,True,2,3,1,https://github.com/vague666,rewrite how /bind searches for bindings when listing them,3,['auto-merge'],https://github.com/irssi/irssi/pull/1155,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1155#issuecomment-599927750,,"mhm, I guess that's fine. can you change it to strstr instead of g_strrstr though ;p
@irssi/developers  ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1155,2020-02-09T11:41:01Z,2020-07-04T18:37:37Z,2021-10-11T20:55:51Z,MERGED,True,2,3,1,https://github.com/vague666,rewrite how /bind searches for bindings when listing them,3,['auto-merge'],https://github.com/irssi/irssi/pull/1155,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1155#issuecomment-651606790,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1156,2020-02-17T18:57:18Z,2020-03-17T00:54:35Z,2021-04-08T22:15:05Z,MERGED,True,3,0,1,https://github.com/vague666,Improve help for how to remove saved server password,3,[],https://github.com/irssi/irssi/pull/1156,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1156,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1158,2020-03-09T13:16:29Z,2020-03-18T15:58:02Z,2021-10-11T20:55:52Z,MERGED,True,8,0,1,https://github.com/vague666,-time was missing in /ignore output and made it human-readable,1,[],https://github.com/irssi/irssi/pull/1158,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1158,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1158,2020-03-09T13:16:29Z,2020-03-18T15:58:02Z,2021-10-11T20:55:52Z,MERGED,True,8,0,1,https://github.com/vague666,-time was missing in /ignore output and made it human-readable,1,[],https://github.com/irssi/irssi/pull/1158,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1158#issuecomment-599824032,,@irssi/developers ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1158,2020-03-09T13:16:29Z,2020-03-18T15:58:02Z,2021-10-11T20:55:52Z,MERGED,True,8,0,1,https://github.com/vague666,-time was missing in /ignore output and made it human-readable,1,[],https://github.com/irssi/irssi/pull/1158,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1158#issuecomment-600695781,,"Weird commit subject phrasing but ok. It sounded like ""-time was missing in the output, and that was the reason it was readable. Now it's not. Get rid of it again""",True,{}
irssi/irssi,https://github.com/irssi/irssi,1159,2020-03-12T21:53:14Z,2020-07-10T08:24:07Z,2021-10-11T20:55:52Z,MERGED,True,8,4,1,https://github.com/vague666,Make sure witem exists in cmd_cat when using -window,4,['auto-merge'],https://github.com/irssi/irssi/pull/1159,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1159,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1159,2020-03-12T21:53:14Z,2020-07-10T08:24:07Z,2021-10-11T20:55:52Z,MERGED,True,8,4,1,https://github.com/vague666,Make sure witem exists in cmd_cat when using -window,4,['auto-merge'],https://github.com/irssi/irssi/pull/1159,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1159#issuecomment-599824710,,@vague666 can you test my change?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1159,2020-03-12T21:53:14Z,2020-07-10T08:24:07Z,2021-10-11T20:55:52Z,MERGED,True,8,4,1,https://github.com/vague666,Make sure witem exists in cmd_cat when using -window,4,['auto-merge'],https://github.com/irssi/irssi/pull/1159,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1159#issuecomment-599928249,,"Works for me, although I'd prefer to print to an itemless window if that's possible, like if item == NULL then Irssi::active_win <-- whatever c code that calls to find a target",True,{}
irssi/irssi,https://github.com/irssi/irssi,1159,2020-03-12T21:53:14Z,2020-07-10T08:24:07Z,2021-10-11T20:55:52Z,MERGED,True,8,4,1,https://github.com/vague666,Make sure witem exists in cmd_cat when using -window,4,['auto-merge'],https://github.com/irssi/irssi/pull/1159,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1159#issuecomment-599931720,,"then you can maybe change the code to use
if (-window flag is given) {
    printtext_window(active_win, ...);
} else {
    printtext(NULL, NULL, ...);
}

?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1159,2020-03-12T21:53:14Z,2020-07-10T08:24:07Z,2021-10-11T20:55:52Z,MERGED,True,8,4,1,https://github.com/vague666,Make sure witem exists in cmd_cat when using -window,4,['auto-merge'],https://github.com/irssi/irssi/pull/1159,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1159#issuecomment-654665242,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1160,2020-03-18T16:33:07Z,2020-03-18T18:53:20Z,2021-10-11T20:55:53Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,Use github actions to test PRs,1,[],https://github.com/irssi/irssi/pull/1160,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1160,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1161,2020-03-18T16:36:51Z,2020-03-18T18:53:56Z,2021-10-11T20:55:53Z,MERGED,True,1,1,1,https://github.com/vague666,"unignore_time can not be NULL, check for 0 instead",1,[],https://github.com/irssi/irssi/pull/1161,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1161,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1161,2020-03-18T16:36:51Z,2020-03-18T18:53:56Z,2021-10-11T20:55:53Z,MERGED,True,1,1,1,https://github.com/vague666,"unignore_time can not be NULL, check for 0 instead",1,[],https://github.com/irssi/irssi/pull/1161,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1161#issuecomment-600740061,,Damn we're good at code review,True,{}
irssi/irssi,https://github.com/irssi/irssi,1163,2020-03-30T12:28:47Z,2020-03-30T14:21:27Z,2021-10-11T20:55:54Z,MERGED,True,45,45,7,https://github.com/ailin-nemui,update docs and sync scriptassist,2,['auto-merge'],https://github.com/irssi/irssi/pull/1163,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1163,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1164,2020-03-31T15:41:26Z,2020-04-03T08:20:53Z,2021-10-11T20:55:55Z,MERGED,True,10,7,1,https://github.com/ailin-nemui,fix /ignore ... MODES NO_ACT not working,1,['auto-merge'],https://github.com/irssi/irssi/pull/1164,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1164,reported by letty,reported by letty,True,{}
irssi/irssi,https://github.com/irssi/irssi,1164,2020-03-31T15:41:26Z,2020-04-03T08:20:53Z,2021-10-11T20:55:55Z,MERGED,True,10,7,1,https://github.com/ailin-nemui,fix /ignore ... MODES NO_ACT not working,1,['auto-merge'],https://github.com/irssi/irssi/pull/1164,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1164#issuecomment-606829966,reported by letty,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1165,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1165#issuecomment-607353658,,"Oh is this the sort of thing where 64bit platforms are happy but 32bit complain?
I think G_GINT64_FORMAT exists for portability here
""%s PING %"" G_GINT64_FORMAT "" %"" G_GINT64_FORMAT

Looks like ass but yeah.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1165#issuecomment-607360669,,or maybe we need to cast something to (long). and there is another warning caused by a corresponding sscanf. and scanning to long long is not portable. advice of real C programmers (i.e. @dequis ) appreciated,True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1165#issuecomment-607392033,,"Oh that sscanf is annoying. So the old version pre-GTimeVal-deprecation-fixes was
if (sscanf(data, ""%ld %ld"", &tv2.tv_sec, &tv2.tv_usec) < 1) {

where tv2 is a GTimeVal
struct _GTimeVal
{
  glong tv_sec;
  glong tv_usec;
} GLIB_DEPRECATED_TYPE_IN_2_62_FOR(GDateTime);

So one way is to have the sscanf put stuff into long-sized temp vars instead of operating directly on the gint64... but i guess we're being pushed to do this for y2038 reasons.
Can we uhhhhh event_get_params(data, 2, &sec, &usec) and g_ascii_strtoull() each?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1165#issuecomment-607855619,,@dequis do you think this would work?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1165#issuecomment-608578483,,"Before 2038, i guess, yeah",True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/1165#issuecomment-618889747,,wait what,True,{}
irssi/irssi,https://github.com/irssi/irssi,1165,2020-03-31T17:01:43Z,2020-04-23T19:47:01Z,2020-04-24T09:41:43Z,CLOSED,False,5,4,2,https://github.com/ailin-nemui,fix warning in cmd_ping,1,['needs changes'],https://github.com/irssi/irssi/pull/1165,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1165#issuecomment-618912201,,this still needs to be fixed... but it should be y2k38 safe,True,{}
irssi/irssi,https://github.com/irssi/irssi,1166,2020-04-02T12:25:57Z,2020-04-03T21:26:41Z,2021-10-11T20:55:55Z,MERGED,True,8,1,2,https://github.com/ailin-nemui,fix perl module build on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1166,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1166,"unfortunately, some mangling is needed to create the correct linker and compiler invocations","unfortunately, some mangling is needed to create the correct linker and compiler invocations",True,{}
irssi/irssi,https://github.com/irssi/irssi,1166,2020-04-02T12:25:57Z,2020-04-03T21:26:41Z,2021-10-11T20:55:55Z,MERGED,True,8,1,2,https://github.com/ailin-nemui,fix perl module build on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1166,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1166#issuecomment-607814540,"unfortunately, some mangling is needed to create the correct linker and compiler invocations","this fixes perl errors because symbols in libm cannot be found and creates the ""same"" module as libtool",True,{}
irssi/irssi,https://github.com/irssi/irssi,1166,2020-04-02T12:25:57Z,2020-04-03T21:26:41Z,2021-10-11T20:55:55Z,MERGED,True,8,1,2,https://github.com/ailin-nemui,fix perl module build on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1166,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1166#issuecomment-607854530,"unfortunately, some mangling is needed to create the correct linker and compiler invocations",originally reported by letty,True,{}
irssi/irssi,https://github.com/irssi/irssi,1166,2020-04-02T12:25:57Z,2020-04-03T21:26:41Z,2021-10-11T20:55:55Z,MERGED,True,8,1,2,https://github.com/ailin-nemui,fix perl module build on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1166,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1166#issuecomment-607854585,"unfortunately, some mangling is needed to create the correct linker and compiler invocations",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1167,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.","this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1167#issuecomment-607854067,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.",originally reported by letty,True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1167#issuecomment-607854228,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.","as a side effect, this will reverse the output of /load. not sure if that's anything to worry about",True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1167#issuecomment-607854339,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1167#issuecomment-609034840,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.",Can you post some specifics? Seems like a rather arbitrary fix without context.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1167#issuecomment-609036224,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.","if we /load perl, then Irssi will append ""core"", then ""fe"", to module->files

  
    
      irssi/src/core/modules.c
    
    
         Line 229
      in
      00a7efc
    
  
  
    

        
          
           module->files = g_slist_append(module->files, file); 
        
    
  


on quit, Irssi will unload all modules by iterating over module->files:

  
    
      irssi/src/core/modules-load.c
    
    
         Line 439
      in
      8b7bf1f
    
  
  
    

        
          
           module_file_unload(module->files->data); 
        
    
  


when the fe-perl is unloaded, it will call perl_core_print_script_error:

  
    
      irssi/src/perl/perl-fe.c
    
    
         Line 292
      in
      00a7efc
    
  
  
    

        
          
           perl_core_print_script_error(TRUE); 
        
    
  


at that time, due to the order of the list (first ""core"" is unloaded, then ""fe""), this function already ceased to exist:

  
    
      irssi/src/perl/perl-core.c
    
    
         Line 385
      in
      00a7efc
    
  
  
    

        
          
           void perl_core_print_script_error(int print) 
        
    
  


that leads to a segfault on openbsd",True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1167#issuecomment-609036319,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.","by reverting the list, a module that loads ""core"" and ""fe"" will put ""fe"", then ""core"" in the list. now, the unloading will be ""fe"", then ""core"", thus avoiding the crash",True,{}
irssi/irssi,https://github.com/irssi/irssi,1167,2020-04-02T13:41:08Z,2020-04-03T21:26:55Z,2021-04-08T22:15:05Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix crash on /quit when unloading modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1167,https://github.com/dequis,8,https://github.com/irssi/irssi/pull/1167#issuecomment-609037389,"this fixes a crash on /quit when the module unloaded is trying to reference symbols from already-unloaded modules, by reversing the lists.",Thanks!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1169,2020-04-03T23:00:35Z,2020-04-06T15:14:41Z,2021-10-11T20:55:56Z,MERGED,True,16,11,4,https://github.com/Pinguin1234,Added option to quit in SIGHUP,4,[],https://github.com/irssi/irssi/pull/1169,https://github.com/Pinguin1234,1,https://github.com/irssi/irssi/pull/1169,Fixes Issue #828,Fixes Issue #828,True,{}
irssi/irssi,https://github.com/irssi/irssi,1169,2020-04-03T23:00:35Z,2020-04-06T15:14:41Z,2021-10-11T20:55:56Z,MERGED,True,16,11,4,https://github.com/Pinguin1234,Added option to quit in SIGHUP,4,[],https://github.com/irssi/irssi/pull/1169,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1169#issuecomment-608782625,Fixes Issue #828,nice!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1169,2020-04-03T23:00:35Z,2020-04-06T15:14:41Z,2021-10-11T20:55:56Z,MERGED,True,16,11,4,https://github.com/Pinguin1234,Added option to quit in SIGHUP,4,[],https://github.com/irssi/irssi/pull/1169,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1169#issuecomment-608790269,Fixes Issue #828,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1169,2020-04-03T23:00:35Z,2020-04-06T15:14:41Z,2021-10-11T20:55:56Z,MERGED,True,16,11,4,https://github.com/Pinguin1234,Added option to quit in SIGHUP,4,[],https://github.com/irssi/irssi/pull/1169,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1169#issuecomment-609754813,Fixes Issue #828,you think this is good now @dequis ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1169,2020-04-03T23:00:35Z,2020-04-06T15:14:41Z,2021-10-11T20:55:56Z,MERGED,True,16,11,4,https://github.com/Pinguin1234,Added option to quit in SIGHUP,4,[],https://github.com/irssi/irssi/pull/1169,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1169#issuecomment-609777097,Fixes Issue #828,"Yeah, definitely okay from the signal side. Is sighup_received an ABI change? At least I can't imagine that change breaking anything, it's internal enough.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1169,2020-04-03T23:00:35Z,2020-04-06T15:14:41Z,2021-10-11T20:55:56Z,MERGED,True,16,11,4,https://github.com/Pinguin1234,Added option to quit in SIGHUP,4,[],https://github.com/irssi/irssi/pull/1169,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1169#issuecomment-609814600,Fixes Issue #828,"@Pinguin1234 please indent your code with TAB
and increase the ABI_VERSION in common.h",True,{}
irssi/irssi,https://github.com/irssi/irssi,1169,2020-04-03T23:00:35Z,2020-04-06T15:14:41Z,2021-10-11T20:55:56Z,MERGED,True,16,11,4,https://github.com/Pinguin1234,Added option to quit in SIGHUP,4,[],https://github.com/irssi/irssi/pull/1169,https://github.com/Pinguin1234,7,https://github.com/irssi/irssi/pull/1169#issuecomment-609856002,Fixes Issue #828,"Should be done now.

ailin-nemui <notifications@github.com> schrieb am Mo., 6. Apr. 2020, 16:03:
…
 @Pinguin1234 <https://github.com/Pinguin1234> please indent your code
 with TAB

 and increase the ABI_VERSION in common.h

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#1169 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AEKCYFMBNOZOJWBQHXXK4ZDRLHOJVANCNFSM4L4PYMQA>
 .",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1170,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1170#issuecomment-609401174,,This extension has been deprecated in favour of encouraging IRC networks to use implicit TLS and deploy Strict Transport Security instead. This is in alignment with the recommendations given in RFC 8314,True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1170#issuecomment-609401421,,might still be good to use it rather than nothing? sts is currently not possible to implement until they finish the sts host port spec: ircv3/ircv3-specifications#390,True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1170#issuecomment-609401989,,"Ugh that one. It's definitely possible to implement without it on our side, that issue just means freenode won't deploy a sts policy on their server without it.
Also, the blocker there is because of certificate validation of the hostname. If that doesn't affect this code, then that means this never validates hostnames.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1170#issuecomment-609404975,,of course the verification would fail if the hostname was validated. the users can control this with -tls_verify (in theory),True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1170#issuecomment-609425052,,"So if i'm reading this right, this defaults to starttls for every server that doesn't have use_tls already, and handles the lack of starttls by delaying the connection 8 seconds.


This should detect the presence of starttls by using the tls cap, otherwise that's a pointless delay for servers that don't support starttls.


This should not fallback to plaintext if the server is known to support starttls, that's a downgrade attack.

If TLS cannot be negotiated, it is a hard error and the client must abort the connection



The knowledge of whether the server has supported starttls in the past should be stored persistently somewhere, in the same way as sts, otherwise it's still vulnerable to downgrade attacks. The spec recommends asking the user for confirmation, but it's also okay to upgrade without asking.

the client should ask the user whether they want to use TLS for all future connections (or until disabled manually). If the user agrees, all future connections to the server must use TLS via STARTTLS",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1170#issuecomment-609425696,,"Thanks for taking your time to read through this.
in my testing, I found that Afternet offers STARTTLS based on the older spec, without announcing it in CAP LS. A CAP-based STARTTLS would be possible but a bit more work. Note that there is no way to support pre-CAP starttls without best effort and delay, or an explicit request from the user as far as I know.
If we want to store the availability of starttls, then we will have to implement some more code in the SERVER_CONNECT_REC, likely similar in what would need to be done for an eventual sts implementation",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1170#issuecomment-609429849,,"we have another related issue which is waiting for the cap ls reply. currently, Irssi will send CAP LS and NICK and USER, thus allowing us to log in.
If I wait for CAP LS in order to send STARTTLS, I will move the 8 second delay for the starttls response to an 8 second delay for the CAP LS response. I don't see any other way, you?
The main concern here would be to avoid delaying connections to IRCnet for no reason, which supports neither STARTTLS nor CAP LS (but does support TLS on port 6667)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/dequis,9,https://github.com/irssi/irssi/pull/1170#issuecomment-609432314,,"in my testing, I found that Afternet offers STARTTLS based on the older spec, without announcing it in CAP LS. A CAP-based STARTTLS would be possible but a bit more work. Note that there is no way to support pre-CAP starttls without best effort and delay, or an explicit request from the user as far as I know.

Yeah. I would ignore this pre-CAP starttls entirely, it's not worth the hassle

If I wait for CAP LS in order to send STARTTLS, I will move the 8 second delay for the starttls response to an 8 second delay for the CAP LS response. I don't see any other way, you?

If the server isn't known to have STARTTLS, send the usual, and if there's a CAP LS response that happens to contain tls, upgrade.
If the server is known to have STARTTLS, then it should be sent right away as the first thing (anything else is a plaintext leak), and if the server doesn't reply to it, that should kill the connection. That should be the only timeout needed, which I think we already have (the server will also be happy to kick us for being quiet, too)

(but does support TLS on port 6667)

Wait is that a typo or a cursed ssl multiplexer?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,10,https://github.com/irssi/irssi/pull/1170#issuecomment-609435694,,"The problem with ""send the usual"" is that usually we send CAP LS / PASS / USER / NICK
but we don't want to send that when we can upgrade to starttls or sts.
but if servers do NOT support CAP LS, they will just stall us waiting for the registration sequence
jess in #ircv3 told me that we may get an error out of servers if we send JOIN 0 as the first command
question is if that is how we want to proceed?
yes some ircnet servers are running ssl multiplex, try /connect -tls eu.irc6.net 6667 :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/1170#issuecomment-609443550,,I have implemented this idea now,True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/1170#issuecomment-609644671,,after some playing with it I think I'm too stupid to properly stuff the left-over read buffer into the SSL context. maybe starttls was a stupid idea to begin with @ahf you wouldn't know how to achieve this feat?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/1170#issuecomment-609752522,,"the attached [wip] commit stores the starttls state in the config iff the user has registered this server. (otherwise until a reconnect)
unfortunately, I cannot get /connect -starttls irc.afternet.org to work and I don't understand   why. the openssl s_client works, so I guess it must be a bug in my code",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,14,https://github.com/irssi/irssi/pull/1170#issuecomment-613076874,,"fwiw, today /connect -starttls irc.afternet.org does work",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,15,https://github.com/irssi/irssi/pull/1170#issuecomment-770442758,,"rename nonostarttls to something less awkward, maybe -nodisallow_starttls
pointed out by ahf",True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,16,https://github.com/irssi/irssi/pull/1170#issuecomment-815243219,,implemented the suggestions by ahf,True,{}
irssi/irssi,https://github.com/irssi/irssi,1170,2020-04-05T11:19:33Z,2021-04-18T10:01:15Z,2021-10-11T20:55:56Z,MERGED,True,643,234,25,https://github.com/ailin-nemui,use starttls / enable tls_verify,10,['auto-merge'],https://github.com/irssi/irssi/pull/1170,https://github.com/ailin-nemui,17,https://github.com/irssi/irssi/pull/1170#issuecomment-815258263,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1171,2020-04-05T19:22:29Z,2020-04-07T19:12:05Z,2021-10-11T20:55:57Z,MERGED,True,51,16,4,https://github.com/ailin-nemui,hide the deprecated -ssl options from completion,1,['auto-merge'],https://github.com/irssi/irssi/pull/1171,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1171,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1171,2020-04-05T19:22:29Z,2020-04-07T19:12:05Z,2021-10-11T20:55:57Z,MERGED,True,51,16,4,https://github.com/ailin-nemui,hide the deprecated -ssl options from completion,1,['auto-merge'],https://github.com/irssi/irssi/pull/1171,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1171#issuecomment-609688441,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1172,2020-04-12T15:17:08Z,2020-04-13T20:52:17Z,2021-10-11T20:55:57Z,MERGED,True,22,0,1,https://github.com/ailin-nemui,run clang-format as a pull request hook,1,['auto-merge'],https://github.com/irssi/irssi/pull/1172,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1172,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1172,2020-04-12T15:17:08Z,2020-04-13T20:52:17Z,2021-10-11T20:55:57Z,MERGED,True,22,0,1,https://github.com/ailin-nemui,run clang-format as a pull request hook,1,['auto-merge'],https://github.com/irssi/irssi/pull/1172,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1172#issuecomment-612911071,,Sup?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1172,2020-04-12T15:17:08Z,2020-04-13T20:52:17Z,2021-10-11T20:55:57Z,MERGED,True,22,0,1,https://github.com/ailin-nemui,run clang-format as a pull request hook,1,['auto-merge'],https://github.com/irssi/irssi/pull/1172,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1172#issuecomment-612912371,,"not sure how to best go about it. you can check the current state here :  #1079 (comment)
what do you think, is failing the  build like that good (enough)?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1172,2020-04-12T15:17:08Z,2020-04-13T20:52:17Z,2021-10-11T20:55:57Z,MERGED,True,22,0,1,https://github.com/ailin-nemui,run clang-format as a pull request hook,1,['auto-merge'],https://github.com/irssi/irssi/pull/1172,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1172#issuecomment-612915491,,"Oh that makes more sense. Yeah, I'd just tweak the output so that the ""cat diff"" and ""cmp"" steps are the same (&& them together) so if it fails it shows the diff right in the failing step.
Also goddamn the scope of that PR was already scary before",True,{}
irssi/irssi,https://github.com/irssi/irssi,1172,2020-04-12T15:17:08Z,2020-04-13T20:52:17Z,2021-10-11T20:55:57Z,MERGED,True,22,0,1,https://github.com/ailin-nemui,run clang-format as a pull request hook,1,['auto-merge'],https://github.com/irssi/irssi/pull/1172,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1172#issuecomment-613076553,,@dequis I think it's ready,True,{}
irssi/irssi,https://github.com/irssi/irssi,1172,2020-04-12T15:17:08Z,2020-04-13T20:52:17Z,2021-10-11T20:55:57Z,MERGED,True,22,0,1,https://github.com/ailin-nemui,run clang-format as a pull request hook,1,['auto-merge'],https://github.com/irssi/irssi/pull/1172,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1172#issuecomment-613092307,,let's see how much self inflicted pain that will be!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1173,2020-04-14T07:55:57Z,2020-04-14T07:59:41Z,2021-10-11T20:55:58Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,Fix clang-format checker on empty diff,1,[],https://github.com/irssi/irssi/pull/1173,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1173,empty diff is also a pass,empty diff is also a pass,True,{}
irssi/irssi,https://github.com/irssi/irssi,1179,2020-04-21T16:59:01Z,2020-04-23T05:41:13Z,2021-10-11T20:55:59Z,MERGED,True,71,0,1,https://github.com/ailin-nemui,Check for abi compatibility using github actions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1179,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1179,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1179,2020-04-21T16:59:01Z,2020-04-23T05:41:13Z,2021-10-11T20:55:59Z,MERGED,True,71,0,1,https://github.com/ailin-nemui,Check for abi compatibility using github actions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1179,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1179#issuecomment-617286283,,wip,True,{}
irssi/irssi,https://github.com/irssi/irssi,1179,2020-04-21T16:59:01Z,2020-04-23T05:41:13Z,2021-10-11T20:55:59Z,MERGED,True,71,0,1,https://github.com/ailin-nemui,Check for abi compatibility using github actions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1179,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1179#issuecomment-617298496,,Noice,True,{}
irssi/irssi,https://github.com/irssi/irssi,1179,2020-04-21T16:59:01Z,2020-04-23T05:41:13Z,2021-10-11T20:55:59Z,MERGED,True,71,0,1,https://github.com/ailin-nemui,Check for abi compatibility using github actions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1179,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1179#issuecomment-617311251,,this will use abigail's abidiff so it's probably not bullet proof all but at least should stop us from big mistakes in forgetting to bump the abi constant,True,{}
irssi/irssi,https://github.com/irssi/irssi,1179,2020-04-21T16:59:01Z,2020-04-23T05:41:13Z,2021-10-11T20:55:59Z,MERGED,True,71,0,1,https://github.com/ailin-nemui,Check for abi compatibility using github actions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1179,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1179#issuecomment-617434975,,"seems to be doing it's thing
https://github.com/irssi/irssi/actions/runs/84183959
@irssi/developers",True,{}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1181,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1181#issuecomment-618318020,,these are fixes in an order -only dependency that was missed (had to be manually added now) due to fix #1166 and automatic configuration of some options for building glib on openbsd,True,{}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1181#issuecomment-618318073,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1181#issuecomment-618331530,,"I guess it's fine!
Why do we even have an install-glib, anyway?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1181#issuecomment-618332265,,"good question, maybe to work around #1180 with -Dinstall-glib=force",True,{}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/dequis,6,https://github.com/irssi/irssi/pull/1181#issuecomment-618336718,,IIIiii really don't think we should be in the business of fixing issues with our dependencies that distros don't.,True,{'THUMBS_UP': ['https://github.com/kjensenxz']}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/dequis,7,https://github.com/irssi/irssi/pull/1181#issuecomment-621418554,,To answer my own question: the oss-fuzz build script downloads and statically links glib https://github.com/google/oss-fuzz/blob/master/projects/irssi/build.sh#L37,True,{}
irssi/irssi,https://github.com/irssi/irssi,1181,2020-04-23T10:15:31Z,2020-04-23T10:52:45Z,2021-10-11T20:55:59Z,MERGED,True,53,4,2,https://github.com/ailin-nemui,build fixes when using install-glib and on openbsd,1,['auto-merge'],https://github.com/irssi/irssi/pull/1181,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1181#issuecomment-621442918,,"oh, good to know!",True,{}
irssi/irssi,https://github.com/irssi/irssi,1182,2020-04-25T09:59:25Z,2020-04-26T17:18:53Z,2021-10-11T20:56:00Z,MERGED,True,1,74,1,https://github.com/ailin-nemui,remove some old compat code,1,['auto-merge'],https://github.com/irssi/irssi/pull/1182,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1182,we already rely on c99 in other parts of the code,we already rely on c99 in other parts of the code,True,{}
irssi/irssi,https://github.com/irssi/irssi,1182,2020-04-25T09:59:25Z,2020-04-26T17:18:53Z,2021-10-11T20:56:00Z,MERGED,True,1,74,1,https://github.com/ailin-nemui,remove some old compat code,1,['auto-merge'],https://github.com/irssi/irssi/pull/1182,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1182#issuecomment-619354831,we already rely on c99 in other parts of the code,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1183,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1183#issuecomment-620517410,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","Much neater message, thanks!
Sorry for being annoying about this but: Can you also --amend that message to the commit itself? I suspect we might end up seeing that commit turned as a patch file as part of distro packages for a while.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1183#issuecomment-620621172,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093",updated,True,{'THUMBS_UP': ['https://github.com/eqhmcow']}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/eqhmcow,4,https://github.com/irssi/irssi/pull/1183#issuecomment-640140907,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","sorry to bother; but any reason this wasn't merged? or was it merged in a different commit to master?
Thank you",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/LaserEyess,5,https://github.com/irssi/irssi/pull/1183#issuecomment-650798110,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","What's the status on this? Some IMEs use ctrl+space to switch between layouts, which crashes irssi every time.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/felixfontein,6,https://github.com/irssi/irssi/pull/1183#issuecomment-655423669,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","@ailin-nemui is there a chance that this could get merged (and a new irssi version released soon)? This bug is really annoying, since I have to kill irssi every time it happens :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1183#issuecomment-655493632,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093",hi @felixfontein even if there were an Irssi release there is nothing guaranteeing you that distributions would ship the update,True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1183#issuecomment-655493924,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/felixfontein,9,https://github.com/irssi/irssi/pull/1183#issuecomment-655499357,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","@ailin-nemui true, but it definitely increases the chances! Thanks a lot :)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/LaserEyess,10,https://github.com/irssi/irssi/pull/1183#issuecomment-655529756,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","Just want to say I have been using a patched irssi for over a week now and this does fix the issue, in case you were waiting on user testing. I also disagree that there is 'no guarantee' that distros will ship this update. For distros affected by newer glibs and irssi, the most likely will if this fix is approved, either through backporting the fix or by updating irssi in their repos.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/1183#issuecomment-655534839,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093","@LaserEyess they can already do that now, though. (as some have)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1183,2020-04-28T10:02:53Z,2020-07-08T15:43:12Z,2021-04-08T15:21:31Z,MERGED,True,5,1,1,https://github.com/ailin-nemui,manually handle NUL unicode in g_utf8_get_next_char_validated,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1183,https://github.com/felixfontein,12,https://github.com/irssi/irssi/pull/1183#issuecomment-655671084,"A change in GLib 2.63 broke some assumptions in Irssi that the null-byte NUL  / U+0000 is a valid Unicode character. This would occur when the user types Ctrl+Space. As a result, the input loop never manages to process the NUL-byte (and any other user input that follows, ever).
This patch adds a manual check that properly advances the input loop if GLib returns -2 (incomplete character) despite the length being positive and a NUL is in first position.
Fixes #1180
https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967
https://gitlab.gnome.org/GNOME/glib/-/issues/2093",@ailin-nemui thank you very much for fixing this!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1184,2020-04-28T13:49:29Z,2020-04-29T17:08:24Z,2021-10-11T20:56:01Z,MERGED,True,246,0,5,https://github.com/ailin-nemui,also check xs files in the clang-format github action,1,['auto-merge'],https://github.com/irssi/irssi/pull/1184,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1184,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1184,2020-04-28T13:49:29Z,2020-04-29T17:08:24Z,2021-10-11T20:56:01Z,MERGED,True,246,0,5,https://github.com/ailin-nemui,also check xs files in the clang-format github action,1,['auto-merge'],https://github.com/irssi/irssi/pull/1184,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1184#issuecomment-620620851,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1188,2020-05-06T23:13:34Z,2020-05-07T19:46:56Z,2021-10-11T20:56:01Z,MERGED,True,20,1,1,https://github.com/ailin-nemui,fix npe on no text from format_get_text_theme_charargs,1,['auto-merge'],https://github.com/irssi/irssi/pull/1188,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1188,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1188,2020-05-06T23:13:34Z,2020-05-07T19:46:56Z,2021-10-11T20:56:01Z,MERGED,True,20,1,1,https://github.com/ailin-nemui,fix npe on no text from format_get_text_theme_charargs,1,['auto-merge'],https://github.com/irssi/irssi/pull/1188,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1188#issuecomment-624938384,,for example during /quit if buffer has already been unloaded,True,{}
irssi/irssi,https://github.com/irssi/irssi,1188,2020-05-06T23:13:34Z,2020-05-07T19:46:56Z,2021-10-11T20:56:01Z,MERGED,True,20,1,1,https://github.com/ailin-nemui,fix npe on no text from format_get_text_theme_charargs,1,['auto-merge'],https://github.com/irssi/irssi/pull/1188,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1188#issuecomment-624946217,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1188,2020-05-06T23:13:34Z,2020-05-07T19:46:56Z,2021-10-11T20:56:01Z,MERGED,True,20,1,1,https://github.com/ailin-nemui,fix npe on no text from format_get_text_theme_charargs,1,['auto-merge'],https://github.com/irssi/irssi/pull/1188,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1188#issuecomment-625735141,,Is this because of #1079 ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1188,2020-05-06T23:13:34Z,2020-05-07T19:46:56Z,2021-10-11T20:56:01Z,MERGED,True,20,1,1,https://github.com/ailin-nemui,fix npe on no text from format_get_text_theme_charargs,1,['auto-merge'],https://github.com/irssi/irssi/pull/1188,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1188#issuecomment-625735553,,yea it's a condition in this new code,True,{}
irssi/irssi,https://github.com/irssi/irssi,1191,2020-05-08T13:35:03Z,2020-05-08T13:42:55Z,2021-10-11T20:56:02Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix NULL assertion in format args,1,['auto-merge'],https://github.com/irssi/irssi/pull/1191,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1191,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1191,2020-05-08T13:35:03Z,2020-05-08T13:42:55Z,2021-10-11T20:56:02Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix NULL assertion in format args,1,['auto-merge'],https://github.com/irssi/irssi/pull/1191,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1191#issuecomment-625819215,,I'll merge this as it is another fixup to #1188 and the new code from #1079,True,{}
irssi/irssi,https://github.com/irssi/irssi,1191,2020-05-08T13:35:03Z,2020-05-08T13:42:55Z,2021-10-11T20:56:02Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,fix NULL assertion in format args,1,['auto-merge'],https://github.com/irssi/irssi/pull/1191,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1191#issuecomment-625819920,,Yeah sure,True,{}
irssi/irssi,https://github.com/irssi/irssi,1192,2020-05-12T22:04:29Z,2020-05-14T09:20:22Z,2021-10-11T20:56:03Z,MERGED,True,231,178,10,https://github.com/ailin-nemui,"add ""print format"" signal to perl",3,['auto-merge'],https://github.com/irssi/irssi/pull/1192,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1192,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1192,2020-05-12T22:04:29Z,2020-05-14T09:20:22Z,2021-10-11T20:56:03Z,MERGED,True,231,178,10,https://github.com/ailin-nemui,"add ""print format"" signal to perl",3,['auto-merge'],https://github.com/irssi/irssi/pull/1192,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1192#issuecomment-627624922,,"this will be needed to implement a workaround / new way to change printed text from scripts. scripts have to be adapted to change the text in the format arguments, instead of the final ""print text"".
#1189 -> #1079",True,{}
irssi/irssi,https://github.com/irssi/irssi,1192,2020-05-12T22:04:29Z,2020-05-14T09:20:22Z,2021-10-11T20:56:03Z,MERGED,True,231,178,10,https://github.com/ailin-nemui,"add ""print format"" signal to perl",3,['auto-merge'],https://github.com/irssi/irssi/pull/1192,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1192#issuecomment-627632378,,"@irssi/developers
need to also think about adapting python &| tcl...",True,{}
irssi/irssi,https://github.com/irssi/irssi,1194,2020-05-14T22:49:24Z,,2020-06-30T08:15:12Z,OPEN,False,9,1,2,https://github.com/ailin-nemui,"add Irssi::UI::TextDest->set_level($bits) to change the level  of a ""print (no)format"" or ""print text"" in the old code",2,[],https://github.com/irssi/irssi/pull/1194,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1194,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1194,2020-05-14T22:49:24Z,,2020-06-30T08:15:12Z,OPEN,False,9,1,2,https://github.com/ailin-nemui,"add Irssi::UI::TextDest->set_level($bits) to change the level  of a ""print (no)format"" or ""print text"" in the old code",2,[],https://github.com/irssi/irssi/pull/1194,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1194#issuecomment-628925900,,this can be used for hideshow.pl in #1189,True,{}
irssi/irssi,https://github.com/irssi/irssi,1194,2020-05-14T22:49:24Z,,2020-06-30T08:15:12Z,OPEN,False,9,1,2,https://github.com/ailin-nemui,"add Irssi::UI::TextDest->set_level($bits) to change the level  of a ""print (no)format"" or ""print text"" in the old code",2,[],https://github.com/irssi/irssi/pull/1194,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1194#issuecomment-629075844,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1195,2020-05-15T10:09:07Z,2020-05-15T10:13:23Z,2021-10-11T20:56:04Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,also check XS abi in abi-diff github workflow,1,['auto-merge'],https://github.com/irssi/irssi/pull/1195,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1195,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1196,2020-05-15T18:37:33Z,2020-05-16T11:58:35Z,2021-10-11T20:56:05Z,MERGED,True,36,5,4,https://github.com/mh-source,Add better support for numeric 489 ERR_SECUREONLYCHAN along with a print format,5,[],https://github.com/irssi/irssi/pull/1196,https://github.com/mh-source,1,https://github.com/irssi/irssi/pull/1196,"This is a first attempt at adding support for numeric 489 as ERR_SECUREONLYCHAN in addition to the already supported ERR_VOICENEEDED. To fix my own submitted issue #1193
It adds a new event_489 handler and the format string 'joinerror_secure_only'. but it is not unlikely i have missed some other (required) details for adding a numeric and format string.
It is ofcourse tested (at least for ERR_SECUREONLYCHAN, i dont know where it is used as ERR_VOICENEEDED so cant test triggering that) and ""it works on my computer"" :-)
modified:   src/fe-common/irc/fe-events-numeric.c
modified:   src/fe-common/irc/module-formats.c
modified:   src/fe-common/irc/module-formats.h","This is a first attempt at adding support for numeric 489 as ERR_SECUREONLYCHAN in addition to the already supported ERR_VOICENEEDED. To fix my own submitted issue #1193
It adds a new event_489 handler and the format string 'joinerror_secure_only'. but it is not unlikely i have missed some other (required) details for adding a numeric and format string.
It is ofcourse tested (at least for ERR_SECUREONLYCHAN, i dont know where it is used as ERR_VOICENEEDED so cant test triggering that) and ""it works on my computer"" :-)
modified:   src/fe-common/irc/fe-events-numeric.c
modified:   src/fe-common/irc/module-formats.c
modified:   src/fe-common/irc/module-formats.h",True,{}
irssi/irssi,https://github.com/irssi/irssi,1196,2020-05-15T18:37:33Z,2020-05-16T11:58:35Z,2021-10-11T20:56:05Z,MERGED,True,36,5,4,https://github.com/mh-source,Add better support for numeric 489 ERR_SECUREONLYCHAN along with a print format,5,[],https://github.com/irssi/irssi/pull/1196,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1196#issuecomment-629532479,"This is a first attempt at adding support for numeric 489 as ERR_SECUREONLYCHAN in addition to the already supported ERR_VOICENEEDED. To fix my own submitted issue #1193
It adds a new event_489 handler and the format string 'joinerror_secure_only'. but it is not unlikely i have missed some other (required) details for adding a numeric and format string.
It is ofcourse tested (at least for ERR_SECUREONLYCHAN, i dont know where it is used as ERR_VOICENEEDED so cant test triggering that) and ""it works on my computer"" :-)
modified:   src/fe-common/irc/fe-events-numeric.c
modified:   src/fe-common/irc/module-formats.c
modified:   src/fe-common/irc/module-formats.h",thanks :-),True,{}
irssi/irssi,https://github.com/irssi/irssi,1196,2020-05-15T18:37:33Z,2020-05-16T11:58:35Z,2021-10-11T20:56:05Z,MERGED,True,36,5,4,https://github.com/mh-source,Add better support for numeric 489 ERR_SECUREONLYCHAN along with a print format,5,[],https://github.com/irssi/irssi/pull/1196,https://github.com/mh-source,3,https://github.com/irssi/irssi/pull/1196#issuecomment-629546120,"This is a first attempt at adding support for numeric 489 as ERR_SECUREONLYCHAN in addition to the already supported ERR_VOICENEEDED. To fix my own submitted issue #1193
It adds a new event_489 handler and the format string 'joinerror_secure_only'. but it is not unlikely i have missed some other (required) details for adding a numeric and format string.
It is ofcourse tested (at least for ERR_SECUREONLYCHAN, i dont know where it is used as ERR_VOICENEEDED so cant test triggering that) and ""it works on my computer"" :-)
modified:   src/fe-common/irc/fe-events-numeric.c
modified:   src/fe-common/irc/module-formats.c
modified:   src/fe-common/irc/module-formats.h",Now the failed tests have been fixed and I tested the ERR_VOICENEEDED on undernet with success. Hopefully no more loose ends.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1196,2020-05-15T18:37:33Z,2020-05-16T11:58:35Z,2021-10-11T20:56:05Z,MERGED,True,36,5,4,https://github.com/mh-source,Add better support for numeric 489 ERR_SECUREONLYCHAN along with a print format,5,[],https://github.com/irssi/irssi/pull/1196,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1196#issuecomment-629550450,"This is a first attempt at adding support for numeric 489 as ERR_SECUREONLYCHAN in addition to the already supported ERR_VOICENEEDED. To fix my own submitted issue #1193
It adds a new event_489 handler and the format string 'joinerror_secure_only'. but it is not unlikely i have missed some other (required) details for adding a numeric and format string.
It is ofcourse tested (at least for ERR_SECUREONLYCHAN, i dont know where it is used as ERR_VOICENEEDED so cant test triggering that) and ""it works on my computer"" :-)
modified:   src/fe-common/irc/fe-events-numeric.c
modified:   src/fe-common/irc/module-formats.c
modified:   src/fe-common/irc/module-formats.h",@irssi/developers,True,{'THUMBS_UP': ['https://github.com/vague666']}
irssi/irssi,https://github.com/irssi/irssi,1196,2020-05-15T18:37:33Z,2020-05-16T11:58:35Z,2021-10-11T20:56:05Z,MERGED,True,36,5,4,https://github.com/mh-source,Add better support for numeric 489 ERR_SECUREONLYCHAN along with a print format,5,[],https://github.com/irssi/irssi/pull/1196,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1196#issuecomment-629622162,"This is a first attempt at adding support for numeric 489 as ERR_SECUREONLYCHAN in addition to the already supported ERR_VOICENEEDED. To fix my own submitted issue #1193
It adds a new event_489 handler and the format string 'joinerror_secure_only'. but it is not unlikely i have missed some other (required) details for adding a numeric and format string.
It is ofcourse tested (at least for ERR_SECUREONLYCHAN, i dont know where it is used as ERR_VOICENEEDED so cant test triggering that) and ""it works on my computer"" :-)
modified:   src/fe-common/irc/fe-events-numeric.c
modified:   src/fe-common/irc/module-formats.c
modified:   src/fe-common/irc/module-formats.h","Sure, looks solid. We should do something about those clang-format off at some point later (shouldn't block this, good to keep them as a marker)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1197,2020-05-21T08:32:47Z,2020-05-21T14:00:31Z,2021-04-08T22:15:06Z,MERGED,True,3,3,2,https://github.com/lotheac,use visible channel name in layout save,1,[],https://github.com/irssi/irssi/pull/1197,https://github.com/lotheac,1,https://github.com/irssi/irssi/pull/1197,"Hi,
there's something of a long standing problem with /layout save and !-channels (eg. on IRCnet). Consider the following initial config file, without channels or windows saved:
servers = (
  {
    address = ""irc.cs.hut.fi"";
    chatnet = ""IRCnet"";
    port = ""6667"";
    autoconnect = ""yes"";
  }
);

chatnets = {
  IRCnet = {
    type = ""IRC"";
    max_kicks = ""1"";
    max_msgs = ""1"";
    max_whois = ""1"";
  };
};

settings = {
  core = {
    real_name = ""irssi-chansave"";
    user_name = ""irssi-chansave"";
    nick = ""irssi-chansave"";
  };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};
windows = {
  1 = { immortal = ""yes""; name = ""(status)""; level = ""ALL""; };
};

When irssi is started on this config file, and a !-channel is joined (/join !!new-channel, or /join !existing-channel), a new window is created and the channel item is added to that window, as expected. /window will report:
11:27 Window  : #3
11:27 Size    : 113x54
11:27 Level   : NONE
11:27 Server  : IRCnet
11:27 Items   : Name                           Server tag
11:27  CHANNEL: !existing-channel              IRCnet

Now, however, if /layout save is used by the user who wants this channel to stay in the same window next time they run irssi, a discrepancy is created:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky
11:29 Items   : Name                           Server tag
11:29  CHANNEL: !existing-channel              IRCnet

When irssi is restarted, window #3 is again created with the bound:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky

but when !existing-channel is rejoined, it does not match the bound on window 3, creating a new window instead and leaving window 3 empty.
So, I propose this patch to modify layout saving to create a binding for the visible_name of the channel instead, which makes this scenario of saving layouts for !-channels work correctly.","Hi,
there's something of a long standing problem with /layout save and !-channels (eg. on IRCnet). Consider the following initial config file, without channels or windows saved:
servers = (
  {
    address = ""irc.cs.hut.fi"";
    chatnet = ""IRCnet"";
    port = ""6667"";
    autoconnect = ""yes"";
  }
);

chatnets = {
  IRCnet = {
    type = ""IRC"";
    max_kicks = ""1"";
    max_msgs = ""1"";
    max_whois = ""1"";
  };
};

settings = {
  core = {
    real_name = ""irssi-chansave"";
    user_name = ""irssi-chansave"";
    nick = ""irssi-chansave"";
  };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};
windows = {
  1 = { immortal = ""yes""; name = ""(status)""; level = ""ALL""; };
};

When irssi is started on this config file, and a !-channel is joined (/join !!new-channel, or /join !existing-channel), a new window is created and the channel item is added to that window, as expected. /window will report:
11:27 Window  : #3
11:27 Size    : 113x54
11:27 Level   : NONE
11:27 Server  : IRCnet
11:27 Items   : Name                           Server tag
11:27  CHANNEL: !existing-channel              IRCnet

Now, however, if /layout save is used by the user who wants this channel to stay in the same window next time they run irssi, a discrepancy is created:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky
11:29 Items   : Name                           Server tag
11:29  CHANNEL: !existing-channel              IRCnet

When irssi is restarted, window #3 is again created with the bound:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky

but when !existing-channel is rejoined, it does not match the bound on window 3, creating a new window instead and leaving window 3 empty.
So, I propose this patch to modify layout saving to create a binding for the visible_name of the channel instead, which makes this scenario of saving layouts for !-channels work correctly.",True,"{'THUMBS_UP': ['https://github.com/PGHM', 'https://github.com/Sonicus']}"
irssi/irssi,https://github.com/irssi/irssi,1197,2020-05-21T08:32:47Z,2020-05-21T14:00:31Z,2021-04-08T22:15:06Z,MERGED,True,3,3,2,https://github.com/lotheac,use visible channel name in layout save,1,[],https://github.com/irssi/irssi/pull/1197,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1197#issuecomment-631963404,"Hi,
there's something of a long standing problem with /layout save and !-channels (eg. on IRCnet). Consider the following initial config file, without channels or windows saved:
servers = (
  {
    address = ""irc.cs.hut.fi"";
    chatnet = ""IRCnet"";
    port = ""6667"";
    autoconnect = ""yes"";
  }
);

chatnets = {
  IRCnet = {
    type = ""IRC"";
    max_kicks = ""1"";
    max_msgs = ""1"";
    max_whois = ""1"";
  };
};

settings = {
  core = {
    real_name = ""irssi-chansave"";
    user_name = ""irssi-chansave"";
    nick = ""irssi-chansave"";
  };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};
windows = {
  1 = { immortal = ""yes""; name = ""(status)""; level = ""ALL""; };
};

When irssi is started on this config file, and a !-channel is joined (/join !!new-channel, or /join !existing-channel), a new window is created and the channel item is added to that window, as expected. /window will report:
11:27 Window  : #3
11:27 Size    : 113x54
11:27 Level   : NONE
11:27 Server  : IRCnet
11:27 Items   : Name                           Server tag
11:27  CHANNEL: !existing-channel              IRCnet

Now, however, if /layout save is used by the user who wants this channel to stay in the same window next time they run irssi, a discrepancy is created:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky
11:29 Items   : Name                           Server tag
11:29  CHANNEL: !existing-channel              IRCnet

When irssi is restarted, window #3 is again created with the bound:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky

but when !existing-channel is rejoined, it does not match the bound on window 3, creating a new window instead and leaving window 3 empty.
So, I propose this patch to modify layout saving to create a binding for the visible_name of the channel instead, which makes this scenario of saving layouts for !-channels work correctly.",interesting! I wonder if there is any argument for this way or making sure that the idchan is matched by full ID on the bond when rejoining?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1197,2020-05-21T08:32:47Z,2020-05-21T14:00:31Z,2021-04-08T22:15:06Z,MERGED,True,3,3,2,https://github.com/lotheac,use visible channel name in layout save,1,[],https://github.com/irssi/irssi/pull/1197,https://github.com/lotheac,3,https://github.com/irssi/irssi/pull/1197#issuecomment-631964613,"Hi,
there's something of a long standing problem with /layout save and !-channels (eg. on IRCnet). Consider the following initial config file, without channels or windows saved:
servers = (
  {
    address = ""irc.cs.hut.fi"";
    chatnet = ""IRCnet"";
    port = ""6667"";
    autoconnect = ""yes"";
  }
);

chatnets = {
  IRCnet = {
    type = ""IRC"";
    max_kicks = ""1"";
    max_msgs = ""1"";
    max_whois = ""1"";
  };
};

settings = {
  core = {
    real_name = ""irssi-chansave"";
    user_name = ""irssi-chansave"";
    nick = ""irssi-chansave"";
  };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};
windows = {
  1 = { immortal = ""yes""; name = ""(status)""; level = ""ALL""; };
};

When irssi is started on this config file, and a !-channel is joined (/join !!new-channel, or /join !existing-channel), a new window is created and the channel item is added to that window, as expected. /window will report:
11:27 Window  : #3
11:27 Size    : 113x54
11:27 Level   : NONE
11:27 Server  : IRCnet
11:27 Items   : Name                           Server tag
11:27  CHANNEL: !existing-channel              IRCnet

Now, however, if /layout save is used by the user who wants this channel to stay in the same window next time they run irssi, a discrepancy is created:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky
11:29 Items   : Name                           Server tag
11:29  CHANNEL: !existing-channel              IRCnet

When irssi is restarted, window #3 is again created with the bound:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky

but when !existing-channel is rejoined, it does not match the bound on window 3, creating a new window instead and leaving window 3 empty.
So, I propose this patch to modify layout saving to create a binding for the visible_name of the channel instead, which makes this scenario of saving layouts for !-channels work correctly.","interesting! I wonder if there is any argument for this way or making sure that the idchan is matched by full ID on the bond when rejoining?

I'm not sure. But actually it turns out I spoke a bit too soon - this doesn't fully work. It creates the binding correctly on !existing-channel, but on exit the full id is written to the config file anyway.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1197,2020-05-21T08:32:47Z,2020-05-21T14:00:31Z,2021-04-08T22:15:06Z,MERGED,True,3,3,2,https://github.com/lotheac,use visible channel name in layout save,1,[],https://github.com/irssi/irssi/pull/1197,https://github.com/lotheac,4,https://github.com/irssi/irssi/pull/1197#issuecomment-631973201,"Hi,
there's something of a long standing problem with /layout save and !-channels (eg. on IRCnet). Consider the following initial config file, without channels or windows saved:
servers = (
  {
    address = ""irc.cs.hut.fi"";
    chatnet = ""IRCnet"";
    port = ""6667"";
    autoconnect = ""yes"";
  }
);

chatnets = {
  IRCnet = {
    type = ""IRC"";
    max_kicks = ""1"";
    max_msgs = ""1"";
    max_whois = ""1"";
  };
};

settings = {
  core = {
    real_name = ""irssi-chansave"";
    user_name = ""irssi-chansave"";
    nick = ""irssi-chansave"";
  };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};
windows = {
  1 = { immortal = ""yes""; name = ""(status)""; level = ""ALL""; };
};

When irssi is started on this config file, and a !-channel is joined (/join !!new-channel, or /join !existing-channel), a new window is created and the channel item is added to that window, as expected. /window will report:
11:27 Window  : #3
11:27 Size    : 113x54
11:27 Level   : NONE
11:27 Server  : IRCnet
11:27 Items   : Name                           Server tag
11:27  CHANNEL: !existing-channel              IRCnet

Now, however, if /layout save is used by the user who wants this channel to stay in the same window next time they run irssi, a discrepancy is created:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky
11:29 Items   : Name                           Server tag
11:29  CHANNEL: !existing-channel              IRCnet

When irssi is restarted, window #3 is again created with the bound:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky

but when !existing-channel is rejoined, it does not match the bound on window 3, creating a new window instead and leaving window 3 empty.
So, I propose this patch to modify layout saving to create a binding for the visible_name of the channel instead, which makes this scenario of saving layouts for !-channels work correctly.","There's two arguments that come to my mind against storing the full timestamped name for !-channels in the configuration file:

if the !-channel to be autojoined does not exist the next time that irssi is started, a new incorrectly-named channel is automatically created. eg. when I had !KYKAFexisting-channel configured in both channels and windows, the correct saved window was used, but I ended up on the channel !KYLPPKYKAFexisting-channel instead. If the prefix is not present in the config file, a new channel is still created, but it will have the correct name (though the prefix changes, obviously).
/channel add !existing-channel (or /join !existing-channel, if the user manually joins the channel instead of adding it) is probably a more friendly user experience than having to figure out what the channel prefix is for these commands -- I think that information isn't particularly easy to find in irssi.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1197,2020-05-21T08:32:47Z,2020-05-21T14:00:31Z,2021-04-08T22:15:06Z,MERGED,True,3,3,2,https://github.com/lotheac,use visible channel name in layout save,1,[],https://github.com/irssi/irssi/pull/1197,https://github.com/lotheac,5,https://github.com/irssi/irssi/pull/1197#issuecomment-631981035,"Hi,
there's something of a long standing problem with /layout save and !-channels (eg. on IRCnet). Consider the following initial config file, without channels or windows saved:
servers = (
  {
    address = ""irc.cs.hut.fi"";
    chatnet = ""IRCnet"";
    port = ""6667"";
    autoconnect = ""yes"";
  }
);

chatnets = {
  IRCnet = {
    type = ""IRC"";
    max_kicks = ""1"";
    max_msgs = ""1"";
    max_whois = ""1"";
  };
};

settings = {
  core = {
    real_name = ""irssi-chansave"";
    user_name = ""irssi-chansave"";
    nick = ""irssi-chansave"";
  };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};
windows = {
  1 = { immortal = ""yes""; name = ""(status)""; level = ""ALL""; };
};

When irssi is started on this config file, and a !-channel is joined (/join !!new-channel, or /join !existing-channel), a new window is created and the channel item is added to that window, as expected. /window will report:
11:27 Window  : #3
11:27 Size    : 113x54
11:27 Level   : NONE
11:27 Server  : IRCnet
11:27 Items   : Name                           Server tag
11:27  CHANNEL: !existing-channel              IRCnet

Now, however, if /layout save is used by the user who wants this channel to stay in the same window next time they run irssi, a discrepancy is created:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky
11:29 Items   : Name                           Server tag
11:29  CHANNEL: !existing-channel              IRCnet

When irssi is restarted, window #3 is again created with the bound:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky

but when !existing-channel is rejoined, it does not match the bound on window 3, creating a new window instead and leaving window 3 empty.
So, I propose this patch to modify layout saving to create a binding for the visible_name of the channel instead, which makes this scenario of saving layouts for !-channels work correctly.","Updated patch to now actually also write the visible_name to the config file. Now, the resulting config actually keeps the channel in the intended window, regardless of whether it was created by autojoining, and the binding matches the item in /window:
12:16 Window  : #2
12:16 Size    : 113x54
12:16 Level   : NONE
12:16 Server  : IRCnet
12:16 Bounds  : Name                           Server tag
12:16         : !existing-channel              IRCnet          sticky
12:16 Items   : Name                           Server tag
12:16  CHANNEL: !existing-channel              IRCnet

I also updated the ADDALLCHAN alias to add channels with their visible_name.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1197,2020-05-21T08:32:47Z,2020-05-21T14:00:31Z,2021-04-08T22:15:06Z,MERGED,True,3,3,2,https://github.com/lotheac,use visible channel name in layout save,1,[],https://github.com/irssi/irssi/pull/1197,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1197#issuecomment-632029128,"Hi,
there's something of a long standing problem with /layout save and !-channels (eg. on IRCnet). Consider the following initial config file, without channels or windows saved:
servers = (
  {
    address = ""irc.cs.hut.fi"";
    chatnet = ""IRCnet"";
    port = ""6667"";
    autoconnect = ""yes"";
  }
);

chatnets = {
  IRCnet = {
    type = ""IRC"";
    max_kicks = ""1"";
    max_msgs = ""1"";
    max_whois = ""1"";
  };
};

settings = {
  core = {
    real_name = ""irssi-chansave"";
    user_name = ""irssi-chansave"";
    nick = ""irssi-chansave"";
  };
  ""fe-text"" = { actlist_sort = ""refnum""; };
};
windows = {
  1 = { immortal = ""yes""; name = ""(status)""; level = ""ALL""; };
};

When irssi is started on this config file, and a !-channel is joined (/join !!new-channel, or /join !existing-channel), a new window is created and the channel item is added to that window, as expected. /window will report:
11:27 Window  : #3
11:27 Size    : 113x54
11:27 Level   : NONE
11:27 Server  : IRCnet
11:27 Items   : Name                           Server tag
11:27  CHANNEL: !existing-channel              IRCnet

Now, however, if /layout save is used by the user who wants this channel to stay in the same window next time they run irssi, a discrepancy is created:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky
11:29 Items   : Name                           Server tag
11:29  CHANNEL: !existing-channel              IRCnet

When irssi is restarted, window #3 is again created with the bound:
11:29 Window  : #3
11:29 Size    : 113x54
11:29 Level   : NONE
11:29 Server  : IRCnet
11:29 Bounds  : Name                           Server tag
11:29         : !KYKAFexisting-channel         IRCnet          sticky

but when !existing-channel is rejoined, it does not match the bound on window 3, creating a new window instead and leaving window 3 empty.
So, I propose this patch to modify layout saving to create a binding for the visible_name of the channel instead, which makes this scenario of saving layouts for !-channels work correctly.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1198,2020-05-24T16:51:01Z,2020-05-24T16:59:15Z,2021-10-11T20:56:05Z,MERGED,True,2,14,1,https://github.com/ailin-nemui,make actlist_sort a choice type now that we have it,1,['auto-merge'],https://github.com/irssi/irssi/pull/1198,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1198,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1198,2020-05-24T16:51:01Z,2020-05-24T16:59:15Z,2021-10-11T20:56:05Z,MERGED,True,2,14,1,https://github.com/ailin-nemui,make actlist_sort a choice type now that we have it,1,['auto-merge'],https://github.com/irssi/irssi/pull/1198,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1198#issuecomment-633259692,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1199,2020-06-02T08:29:36Z,2020-06-17T11:57:31Z,2021-10-11T20:56:06Z,MERGED,True,169,46,12,https://github.com/ailin-nemui,Add support for building in Termux-Android in meson,2,['auto-merge'],https://github.com/irssi/irssi/pull/1199,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1199,"introduce cross perl
workaround for the android linker","introduce cross perl
workaround for the android linker",True,{}
irssi/irssi,https://github.com/irssi/irssi,1199,2020-06-02T08:29:36Z,2020-06-17T11:57:31Z,2021-10-11T20:56:06Z,MERGED,True,169,46,12,https://github.com/ailin-nemui,Add support for building in Termux-Android in meson,2,['auto-merge'],https://github.com/irssi/irssi/pull/1199,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1199#issuecomment-637381186,"introduce cross perl
workaround for the android linker","@irssi/developers
can anyone comment especially on disable setuid/setgid on android; is it ok to make it like that or should this be explicitly requested with some flag?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1204,2020-07-04T10:15:37Z,2020-07-07T07:48:43Z,2021-10-11T20:56:06Z,MERGED,True,14,12,1,https://github.com/ailin-nemui,fix extended bg colours,1,['auto-merge'],https://github.com/irssi/irssi/pull/1204,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1204,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1204,2020-07-04T10:15:37Z,2020-07-07T07:48:43Z,2021-10-11T20:56:06Z,MERGED,True,14,12,1,https://github.com/ailin-nemui,fix extended bg colours,1,['auto-merge'],https://github.com/irssi/irssi/pull/1204,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1204#issuecomment-653748210,,these got broken in #1079,True,{}
irssi/irssi,https://github.com/irssi/irssi,1204,2020-07-04T10:15:37Z,2020-07-07T07:48:43Z,2021-10-11T20:56:06Z,MERGED,True,14,12,1,https://github.com/ailin-nemui,fix extended bg colours,1,['auto-merge'],https://github.com/irssi/irssi/pull/1204,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1204#issuecomment-653748282,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1205,2020-07-04T16:20:12Z,2020-07-08T08:07:08Z,2021-10-11T20:56:07Z,MERGED,True,36,22,6,https://github.com/ailin-nemui,properly restore the saved text dest,1,['auto-merge'],https://github.com/irssi/irssi/pull/1205,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1205,fixes %[-t] on saved prints,fixes %[-t] on saved prints,True,{}
irssi/irssi,https://github.com/irssi/irssi,1205,2020-07-04T16:20:12Z,2020-07-08T08:07:08Z,2021-10-11T20:56:07Z,MERGED,True,36,22,6,https://github.com/ailin-nemui,properly restore the saved text dest,1,['auto-merge'],https://github.com/irssi/irssi/pull/1205,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1205#issuecomment-653785907,fixes %[-t] on saved prints,related to #1079,True,{}
irssi/irssi,https://github.com/irssi/irssi,1205,2020-07-04T16:20:12Z,2020-07-08T08:07:08Z,2021-10-11T20:56:07Z,MERGED,True,36,22,6,https://github.com/ailin-nemui,properly restore the saved text dest,1,['auto-merge'],https://github.com/irssi/irssi/pull/1205,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1205#issuecomment-653785925,fixes %[-t] on saved prints,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1206,2020-07-05T23:28:30Z,2020-07-14T01:14:47Z,2021-10-11T20:56:07Z,MERGED,True,45,8,5,https://github.com/aquanight,Fix crash from self-unloading script,7,['auto-merge'],https://github.com/irssi/irssi/pull/1206,https://github.com/aquanight,1,https://github.com/irssi/irssi/pull/1206,"Fixes a crash that can be caused by self-unloading scripts (or other cases of unloading scripts that also have active code), by guarding against multiple calls of perl_script_unload (by /script unload and by sig_script_error).
The particular test case that prompted this is http://urchlay.naptime.net/repos/misc-scripts/tree/selfunload.pl
The crash in the above test case was caused by the following:

The script unloads itself using Irssi::command(""/script unload selfunload"")
This leads to perl_script_unload which in turn destroys the script package and then calls perl_script_destroy (freeing the PERL_SCRIPT_REC).
Execution then returns to the perl script. An insertion of a print to STDERR can confirm that execution does in fact return to the script (the original version incorrectly believed the first command() never returned - it does).
However, the second command() refers to command() unqualified. Before this was imported via the use statement, but due to step 2, this import was undefined, so this second command causes a perl error.
The unhandled error triggers a ""script error"" signal, which sig_script_error() then calls perl_script_unload. On the same PERL_SCRIPT_REC that had already had perl_script_unload called upon it.
This leads to perl_script_unload executing against a free()'d memory block, and eventually leads to perl_script_destroy again which results in a double-free of the PERL_SCRIPT_REC and its constituent variables. And so everything explodes.

The resolution is to make PERL_SCRIPT_REC ref-counted. Some of the unload logic that previously existed in perl_script_destroy was moved to perl_script_unload: e.g. de-registration of signals and event handlers and removal from the active-scripts list. perl_script_destroy now is exclusively free()ing of the PERL_SCRIPT_REC (and still is responsible for generating the ""script destroyed"" signal. The signal and input/timeout handling trampolines will now ref/unref the PERL_SCRIPT_REC, so it will not be destroyed by perl_script_unload until these handlers complete.","Fixes a crash that can be caused by self-unloading scripts (or other cases of unloading scripts that also have active code), by guarding against multiple calls of perl_script_unload (by /script unload and by sig_script_error).
The particular test case that prompted this is http://urchlay.naptime.net/repos/misc-scripts/tree/selfunload.pl
The crash in the above test case was caused by the following:

The script unloads itself using Irssi::command(""/script unload selfunload"")
This leads to perl_script_unload which in turn destroys the script package and then calls perl_script_destroy (freeing the PERL_SCRIPT_REC).
Execution then returns to the perl script. An insertion of a print to STDERR can confirm that execution does in fact return to the script (the original version incorrectly believed the first command() never returned - it does).
However, the second command() refers to command() unqualified. Before this was imported via the use statement, but due to step 2, this import was undefined, so this second command causes a perl error.
The unhandled error triggers a ""script error"" signal, which sig_script_error() then calls perl_script_unload. On the same PERL_SCRIPT_REC that had already had perl_script_unload called upon it.
This leads to perl_script_unload executing against a free()'d memory block, and eventually leads to perl_script_destroy again which results in a double-free of the PERL_SCRIPT_REC and its constituent variables. And so everything explodes.

The resolution is to make PERL_SCRIPT_REC ref-counted. Some of the unload logic that previously existed in perl_script_destroy was moved to perl_script_unload: e.g. de-registration of signals and event handlers and removal from the active-scripts list. perl_script_destroy now is exclusively free()ing of the PERL_SCRIPT_REC (and still is responsible for generating the ""script destroyed"" signal. The signal and input/timeout handling trampolines will now ref/unref the PERL_SCRIPT_REC, so it will not be destroyed by perl_script_unload until these handlers complete.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1206,2020-07-05T23:28:30Z,2020-07-14T01:14:47Z,2021-10-11T20:56:07Z,MERGED,True,45,8,5,https://github.com/aquanight,Fix crash from self-unloading script,7,['auto-merge'],https://github.com/irssi/irssi/pull/1206,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1206#issuecomment-654091739,"Fixes a crash that can be caused by self-unloading scripts (or other cases of unloading scripts that also have active code), by guarding against multiple calls of perl_script_unload (by /script unload and by sig_script_error).
The particular test case that prompted this is http://urchlay.naptime.net/repos/misc-scripts/tree/selfunload.pl
The crash in the above test case was caused by the following:

The script unloads itself using Irssi::command(""/script unload selfunload"")
This leads to perl_script_unload which in turn destroys the script package and then calls perl_script_destroy (freeing the PERL_SCRIPT_REC).
Execution then returns to the perl script. An insertion of a print to STDERR can confirm that execution does in fact return to the script (the original version incorrectly believed the first command() never returned - it does).
However, the second command() refers to command() unqualified. Before this was imported via the use statement, but due to step 2, this import was undefined, so this second command causes a perl error.
The unhandled error triggers a ""script error"" signal, which sig_script_error() then calls perl_script_unload. On the same PERL_SCRIPT_REC that had already had perl_script_unload called upon it.
This leads to perl_script_unload executing against a free()'d memory block, and eventually leads to perl_script_destroy again which results in a double-free of the PERL_SCRIPT_REC and its constituent variables. And so everything explodes.

The resolution is to make PERL_SCRIPT_REC ref-counted. Some of the unload logic that previously existed in perl_script_destroy was moved to perl_script_unload: e.g. de-registration of signals and event handlers and removal from the active-scripts list. perl_script_destroy now is exclusively free()ing of the PERL_SCRIPT_REC (and still is responsible for generating the ""script destroyed"" signal. The signal and input/timeout handling trampolines will now ref/unref the PERL_SCRIPT_REC, so it will not be destroyed by perl_script_unload until these handlers complete.",nice!,True,{}
irssi/irssi,https://github.com/irssi/irssi,1206,2020-07-05T23:28:30Z,2020-07-14T01:14:47Z,2021-10-11T20:56:07Z,MERGED,True,45,8,5,https://github.com/aquanight,Fix crash from self-unloading script,7,['auto-merge'],https://github.com/irssi/irssi/pull/1206,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1206#issuecomment-657017322,"Fixes a crash that can be caused by self-unloading scripts (or other cases of unloading scripts that also have active code), by guarding against multiple calls of perl_script_unload (by /script unload and by sig_script_error).
The particular test case that prompted this is http://urchlay.naptime.net/repos/misc-scripts/tree/selfunload.pl
The crash in the above test case was caused by the following:

The script unloads itself using Irssi::command(""/script unload selfunload"")
This leads to perl_script_unload which in turn destroys the script package and then calls perl_script_destroy (freeing the PERL_SCRIPT_REC).
Execution then returns to the perl script. An insertion of a print to STDERR can confirm that execution does in fact return to the script (the original version incorrectly believed the first command() never returned - it does).
However, the second command() refers to command() unqualified. Before this was imported via the use statement, but due to step 2, this import was undefined, so this second command causes a perl error.
The unhandled error triggers a ""script error"" signal, which sig_script_error() then calls perl_script_unload. On the same PERL_SCRIPT_REC that had already had perl_script_unload called upon it.
This leads to perl_script_unload executing against a free()'d memory block, and eventually leads to perl_script_destroy again which results in a double-free of the PERL_SCRIPT_REC and its constituent variables. And so everything explodes.

The resolution is to make PERL_SCRIPT_REC ref-counted. Some of the unload logic that previously existed in perl_script_destroy was moved to perl_script_unload: e.g. de-registration of signals and event handlers and removal from the active-scripts list. perl_script_destroy now is exclusively free()ing of the PERL_SCRIPT_REC (and still is responsible for generating the ""script destroyed"" signal. The signal and input/timeout handling trampolines will now ref/unref the PERL_SCRIPT_REC, so it will not be destroyed by perl_script_unload until these handlers complete.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1208,2020-07-13T11:25:28Z,2020-07-16T10:07:17Z,2021-10-11T20:56:08Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,do not use localtime result after other functions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1208,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1208,Fixes #1207,Fixes #1207,True,{}
irssi/irssi,https://github.com/irssi/irssi,1208,2020-07-13T11:25:28Z,2020-07-16T10:07:17Z,2021-10-11T20:56:08Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,do not use localtime result after other functions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1208,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1208#issuecomment-657502803,Fixes #1207,"not tested, might fix #1207",True,{}
irssi/irssi,https://github.com/irssi/irssi,1208,2020-07-13T11:25:28Z,2020-07-16T10:07:17Z,2021-10-11T20:56:08Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,do not use localtime result after other functions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1208,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1208#issuecomment-658730317,Fixes #1207,works for kinlo,True,{}
irssi/irssi,https://github.com/irssi/irssi,1208,2020-07-13T11:25:28Z,2020-07-16T10:07:17Z,2021-10-11T20:56:08Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,do not use localtime result after other functions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1208,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1208#issuecomment-658730439,Fixes #1207,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1208,2020-07-13T11:25:28Z,2020-07-16T10:07:17Z,2021-10-11T20:56:08Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,do not use localtime result after other functions,1,['auto-merge'],https://github.com/irssi/irssi/pull/1208,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/1208#issuecomment-658801870,Fixes #1207,Works for me too although I did not test without the diff to see if I experienced similar problems as kinlo,True,{}
irssi/irssi,https://github.com/irssi/irssi,1209,2020-07-22T22:29:00Z,2020-07-26T08:47:14Z,2021-10-11T20:56:09Z,MERGED,True,61,6,5,https://github.com/ailin-nemui,fix missing wrapping of line in signals,2,['auto-merge'],https://github.com/irssi/irssi/pull/1209,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1209,"related to #1079 /  57fb173
the signals that include LINE_REC*s do not have any possibility to wrap these, so we have to create some more code
otherwise we get a segv in perl_line_fill_hash, which is passed a raw LINE_REC* when called from plain_bless
in perl-signals.c","related to #1079 /  57fb173
the signals that include LINE_REC*s do not have any possibility to wrap these, so we have to create some more code
otherwise we get a segv in perl_line_fill_hash, which is passed a raw LINE_REC* when called from plain_bless
in perl-signals.c",True,{}
irssi/irssi,https://github.com/irssi/irssi,1209,2020-07-22T22:29:00Z,2020-07-26T08:47:14Z,2021-10-11T20:56:09Z,MERGED,True,61,6,5,https://github.com/ailin-nemui,fix missing wrapping of line in signals,2,['auto-merge'],https://github.com/irssi/irssi/pull/1209,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1209#issuecomment-663005901,"related to #1079 /  57fb173
the signals that include LINE_REC*s do not have any possibility to wrap these, so we have to create some more code
otherwise we get a segv in perl_line_fill_hash, which is passed a raw LINE_REC* when called from plain_bless
in perl-signals.c",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1211,2020-07-22T22:45:42Z,2020-07-26T08:43:52Z,2021-04-08T22:15:07Z,MERGED,True,3,0,1,https://github.com/ailin-nemui,fix crash when server got disconnected/reconnected before it was properly connected,1,['auto-merge'],https://github.com/irssi/irssi/pull/1211,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1211,might fix #1210,might fix #1210,True,{}
irssi/irssi,https://github.com/irssi/irssi,1211,2020-07-22T22:45:42Z,2020-07-26T08:43:52Z,2021-04-08T22:15:07Z,MERGED,True,3,0,1,https://github.com/ailin-nemui,fix crash when server got disconnected/reconnected before it was properly connected,1,['auto-merge'],https://github.com/irssi/irssi/pull/1211,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1211#issuecomment-662927634,might fix #1210,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1212,2020-07-23T10:06:15Z,2020-07-23T10:15:06Z,2021-10-11T20:56:10Z,MERGED,True,4,4,3,https://github.com/ailin-nemui,update github actions/checkout to new branch,1,['auto-merge'],https://github.com/irssi/irssi/pull/1212,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1212,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1213,2020-07-27T14:14:57Z,2020-07-30T07:04:04Z,2021-04-08T15:21:31Z,MERGED,True,1,0,1,https://github.com/vague666,Update help with HIDDEN level,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1213,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1213,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1213,2020-07-27T14:14:57Z,2020-07-30T07:04:04Z,2021-04-08T15:21:31Z,MERGED,True,1,0,1,https://github.com/vague666,Update help with HIDDEN level,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1213,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1213#issuecomment-664438931,,also mention it on IGNORE?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1213,2020-07-27T14:14:57Z,2020-07-30T07:04:04Z,2021-04-08T15:21:31Z,MERGED,True,1,0,1,https://github.com/vague666,Update help with HIDDEN level,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1213,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1213#issuecomment-664466844,,Good idea :),True,{}
irssi/irssi,https://github.com/irssi/irssi,1213,2020-07-27T14:14:57Z,2020-07-30T07:04:04Z,2021-04-08T15:21:31Z,MERGED,True,1,0,1,https://github.com/vague666,Update help with HIDDEN level,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1213,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1213#issuecomment-664873009,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1214,2020-07-27T15:37:21Z,2020-07-30T17:09:29Z,2021-04-08T15:21:32Z,MERGED,True,3,0,1,https://github.com/vague666,Update ignore help,2,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1214,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1214,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1214,2020-07-27T15:37:21Z,2020-07-30T17:09:29Z,2021-04-08T15:21:32Z,MERGED,True,3,0,1,https://github.com/vague666,Update ignore help,2,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1214,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1214#issuecomment-664878676,,"I don't like the help yet but have yet to think of a better help text
`hide matching activity' sounds odd, we're hiding (lines?messages?text?)
Maybe something like?

The special level 'HIDDEN' can be used to hide messages that can be revealed using WINDOW HIDELEVEL",True,{}
irssi/irssi,https://github.com/irssi/irssi,1214,2020-07-27T15:37:21Z,2020-07-30T17:09:29Z,2021-04-08T15:21:32Z,MERGED,True,3,0,1,https://github.com/vague666,Update ignore help,2,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1214,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1214#issuecomment-665301586,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1221,2020-09-08T11:04:51Z,2020-09-11T12:15:42Z,2021-04-08T15:21:33Z,MERGED,True,1,0,1,https://github.com/nachanon,Decolor the vertical window split bar in stock `colorless` theme,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1221,https://github.com/nachanon,1,https://github.com/irssi/irssi/pull/1221,"Current Irssi's stock colorless theme does not contain any code to de-color vertical window split bars (i.e. bug #1220), resulting in them being colored with default blue background; defeating the purpose of the theme.
This one-line change introduces following line into themes/colorless.theme:
  window_border = ""%8"";

Which makes the vertical window split bars use reverse-video of default terminal foreground/background instead.
Screenshots
Before the fix:

After the fix:

Caveat
This fix brings out a quirk in Irssi's styling implementation— where vertical window split bar's styling overlapped with the bottom status bar's styling, resulting in a black cell at the middle of bottom status bar. (Status bar used reverse video, and split bar reversed it back)
Fixing the quirk itself might entail redefining the extent of of window split bar and/or status bar drawing inside Irssi's main codebase (with consideration on effects on other themes' compatibility); but that warrants a dedicated ticket for another day.
Having this fix is likely to be better than leaving color in colorless theme of course.
System Information
Irssi: 1.2.2 (20190829 0225)*
System: Fedora 32 (GNU/Linux x86_64)
* The change is tested by installing the new theme file as a user's own theme file.","Current Irssi's stock colorless theme does not contain any code to de-color vertical window split bars (i.e. bug #1220), resulting in them being colored with default blue background; defeating the purpose of the theme.
This one-line change introduces following line into themes/colorless.theme:
  window_border = ""%8"";

Which makes the vertical window split bars use reverse-video of default terminal foreground/background instead.
Screenshots
Before the fix:

After the fix:

Caveat
This fix brings out a quirk in Irssi's styling implementation— where vertical window split bar's styling overlapped with the bottom status bar's styling, resulting in a black cell at the middle of bottom status bar. (Status bar used reverse video, and split bar reversed it back)
Fixing the quirk itself might entail redefining the extent of of window split bar and/or status bar drawing inside Irssi's main codebase (with consideration on effects on other themes' compatibility); but that warrants a dedicated ticket for another day.
Having this fix is likely to be better than leaving color in colorless theme of course.
System Information
Irssi: 1.2.2 (20190829 0225)*
System: Fedora 32 (GNU/Linux x86_64)
* The change is tested by installing the new theme file as a user's own theme file.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1221,2020-09-08T11:04:51Z,2020-09-11T12:15:42Z,2021-04-08T15:21:33Z,MERGED,True,1,0,1,https://github.com/nachanon,Decolor the vertical window split bar in stock `colorless` theme,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1221,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1221#issuecomment-688819455,"Current Irssi's stock colorless theme does not contain any code to de-color vertical window split bars (i.e. bug #1220), resulting in them being colored with default blue background; defeating the purpose of the theme.
This one-line change introduces following line into themes/colorless.theme:
  window_border = ""%8"";

Which makes the vertical window split bars use reverse-video of default terminal foreground/background instead.
Screenshots
Before the fix:

After the fix:

Caveat
This fix brings out a quirk in Irssi's styling implementation— where vertical window split bar's styling overlapped with the bottom status bar's styling, resulting in a black cell at the middle of bottom status bar. (Status bar used reverse video, and split bar reversed it back)
Fixing the quirk itself might entail redefining the extent of of window split bar and/or status bar drawing inside Irssi's main codebase (with consideration on effects on other themes' compatibility); but that warrants a dedicated ticket for another day.
Having this fix is likely to be better than leaving color in colorless theme of course.
System Information
Irssi: 1.2.2 (20190829 0225)*
System: Fedora 32 (GNU/Linux x86_64)
* The change is tested by installing the new theme file as a user's own theme file.",@irssi/developers,True,"{'THUMBS_UP': ['https://github.com/vague666', 'https://github.com/dequis']}"
irssi/irssi,https://github.com/irssi/irssi,1224,2020-09-26T14:48:32Z,2020-09-26T14:51:27Z,2021-10-11T20:56:11Z,MERGED,True,2,2,2,https://github.com/ailin-nemui,Fix meson capsicum,1,['auto-merge'],https://github.com/irssi/irssi/pull/1224,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1224,Fixes #1223,Fixes #1223,True,{}
irssi/irssi,https://github.com/irssi/irssi,1225,2020-09-29T12:42:28Z,2021-01-11T12:55:20Z,2021-01-11T12:55:20Z,CLOSED,False,11,5,1,https://github.com/kishorkunal-raj,Adding ppc64le architecture support on travis-ci,1,[],https://github.com/irssi/irssi/pull/1225,https://github.com/kishorkunal-raj,1,https://github.com/irssi/irssi/pull/1225,"Hi,
I had added ppc64le architecture support on travis-ci and looks like its been successfully added. Also I had added installation of ninja and glib for uniformity across the platforms. I believe it is ready for the final review and merge.
Please have a look.
Thanks!!
Kishor Kunal Raj","Hi,
I had added ppc64le architecture support on travis-ci and looks like its been successfully added. Also I had added installation of ninja and glib for uniformity across the platforms. I believe it is ready for the final review and merge.
Please have a look.
Thanks!!
Kishor Kunal Raj",True,{}
irssi/irssi,https://github.com/irssi/irssi,1225,2020-09-29T12:42:28Z,2021-01-11T12:55:20Z,2021-01-11T12:55:20Z,CLOSED,False,11,5,1,https://github.com/kishorkunal-raj,Adding ppc64le architecture support on travis-ci,1,[],https://github.com/irssi/irssi/pull/1225,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1225#issuecomment-701306302,"Hi,
I had added ppc64le architecture support on travis-ci and looks like its been successfully added. Also I had added installation of ninja and glib for uniformity across the platforms. I believe it is ready for the final review and merge.
Please have a look.
Thanks!!
Kishor Kunal Raj","I considered bumping our version requirement to 2.58 in the past but we have compat code in place now.
Meson 0.54 will require Ninja newer than 1.7, and compdb requires Ninja 1.9, but I guess we are not using those on Travis
We probably should not leave behind commented-out code or references to now non-existing folders if we decide to use system-provided ninja and glib",True,{}
irssi/irssi,https://github.com/irssi/irssi,1225,2020-09-29T12:42:28Z,2021-01-11T12:55:20Z,2021-01-11T12:55:20Z,CLOSED,False,11,5,1,https://github.com/kishorkunal-raj,Adding ppc64le architecture support on travis-ci,1,[],https://github.com/irssi/irssi/pull/1225,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1225#issuecomment-701308397,"Hi,
I had added ppc64le architecture support on travis-ci and looks like its been successfully added. Also I had added installation of ninja and glib for uniformity across the platforms. I believe it is ready for the final review and merge.
Please have a look.
Thanks!!
Kishor Kunal Raj",is there any point in testing Irssi compilation on ppc64le? is there anything in particular where our code might fail in the future?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1225,2020-09-29T12:42:28Z,2021-01-11T12:55:20Z,2021-01-11T12:55:20Z,CLOSED,False,11,5,1,https://github.com/kishorkunal-raj,Adding ppc64le architecture support on travis-ci,1,[],https://github.com/irssi/irssi/pull/1225,https://github.com/gerrith3,4,https://github.com/irssi/irssi/pull/1225#issuecomment-702164283,"Hi,
I had added ppc64le architecture support on travis-ci and looks like its been successfully added. Also I had added installation of ninja and glib for uniformity across the platforms. I believe it is ready for the final review and merge.
Please have a look.
Thanks!!
Kishor Kunal Raj","This code appears to be written in C/C++ - with a different compiler, libraries, possible differences in distro dependencies, there are a lot of reasons why this could fail, testing will ensure no regresssion, which will be really helpful when rebuilding for the next distro release.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1225,2020-09-29T12:42:28Z,2021-01-11T12:55:20Z,2021-01-11T12:55:20Z,CLOSED,False,11,5,1,https://github.com/kishorkunal-raj,Adding ppc64le architecture support on travis-ci,1,[],https://github.com/irssi/irssi/pull/1225,https://github.com/kishorkunal-raj,5,https://github.com/irssi/irssi/pull/1225#issuecomment-706472001,"Hi,
I had added ppc64le architecture support on travis-ci and looks like its been successfully added. Also I had added installation of ninja and glib for uniformity across the platforms. I believe it is ready for the final review and merge.
Please have a look.
Thanks!!
Kishor Kunal Raj","Hi @ailin-nemui ,
Kindly let us know your opinion towards the changes
Thanks!",True,{}
irssi/irssi,https://github.com/irssi/irssi,1225,2020-09-29T12:42:28Z,2021-01-11T12:55:20Z,2021-01-11T12:55:20Z,CLOSED,False,11,5,1,https://github.com/kishorkunal-raj,Adding ppc64le architecture support on travis-ci,1,[],https://github.com/irssi/irssi/pull/1225,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1225#issuecomment-709226933,"Hi,
I had added ppc64le architecture support on travis-ci and looks like its been successfully added. Also I had added installation of ninja and glib for uniformity across the platforms. I believe it is ready for the final review and merge.
Please have a look.
Thanks!!
Kishor Kunal Raj",you can fix the obvious issues and address my requests from above comment first,True,{}
irssi/irssi,https://github.com/irssi/irssi,1230,2020-10-26T16:01:56Z,2020-10-27T09:39:26Z,2021-10-11T20:56:12Z,MERGED,True,50,48,1,https://github.com/ailin-nemui,fix clang-format-xs option parser by using getopt,1,['auto-merge'],https://github.com/irssi/irssi/pull/1230,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1230,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1230,2020-10-26T16:01:56Z,2020-10-27T09:39:26Z,2021-10-11T20:56:12Z,MERGED,True,50,48,1,https://github.com/ailin-nemui,fix clang-format-xs option parser by using getopt,1,['auto-merge'],https://github.com/irssi/irssi/pull/1230,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1230#issuecomment-716768509,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1231,2020-10-26T22:24:43Z,2020-10-27T09:27:47Z,2021-10-11T20:56:12Z,MERGED,True,4,4,1,https://github.com/ailin-nemui,keep up with github-actions changes,1,['auto-merge'],https://github.com/irssi/irssi/pull/1231,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1231,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1231,2020-10-26T22:24:43Z,2020-10-27T09:27:47Z,2021-10-11T20:56:12Z,MERGED,True,4,4,1,https://github.com/ailin-nemui,keep up with github-actions changes,1,['auto-merge'],https://github.com/irssi/irssi/pull/1231,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1231#issuecomment-716857294,,github links to https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/ as an explanation,True,{}
irssi/irssi,https://github.com/irssi/irssi,1231,2020-10-26T22:24:43Z,2020-10-27T09:27:47Z,2021-10-11T20:56:12Z,MERGED,True,4,4,1,https://github.com/ailin-nemui,keep up with github-actions changes,1,['auto-merge'],https://github.com/irssi/irssi/pull/1231,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1231#issuecomment-716859215,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1232,2020-10-27T07:38:35Z,2020-12-14T14:22:57Z,2021-10-11T20:56:13Z,MERGED,True,17,10,1,https://github.com/vague666,Implement priority on the matched lines for /hilight,5,['auto-merge'],https://github.com/irssi/irssi/pull/1232,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1232,Since the original use case wasn't broken(Fixes #1228) this adds more functionality instead :),Since the original use case wasn't broken(Fixes #1228) this adds more functionality instead :),True,{}
irssi/irssi,https://github.com/irssi/irssi,1232,2020-10-27T07:38:35Z,2020-12-14T14:22:57Z,2021-10-11T20:56:13Z,MERGED,True,17,10,1,https://github.com/vague666,Implement priority on the matched lines for /hilight,5,['auto-merge'],https://github.com/irssi/irssi/pull/1232,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1232#issuecomment-717054459,Since the original use case wasn't broken(Fixes #1228) this adds more functionality instead :),maybe you forgot to set some variable to NULL?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1232,2020-10-27T07:38:35Z,2020-12-14T14:22:57Z,2021-10-11T20:56:13Z,MERGED,True,17,10,1,https://github.com/vague666,Implement priority on the matched lines for /hilight,5,['auto-merge'],https://github.com/irssi/irssi/pull/1232,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1232#issuecomment-717065290,Since the original use case wasn't broken(Fixes #1228) this adds more functionality instead :),"Only possible var is tmprec, maybe I am remembering wrong that it is NULL when declared?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1232,2020-10-27T07:38:35Z,2020-12-14T14:22:57Z,2021-10-11T20:56:13Z,MERGED,True,17,10,1,https://github.com/vague666,Implement priority on the matched lines for /hilight,5,['auto-merge'],https://github.com/irssi/irssi/pull/1232,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1232#issuecomment-717091291,Since the original use case wasn't broken(Fixes #1228) this adds more functionality instead :),now it doesn't crash anymore :-) only the code formatting is left to clean up to confirm to the new standard,True,{}
irssi/irssi,https://github.com/irssi/irssi,1232,2020-10-27T07:38:35Z,2020-12-14T14:22:57Z,2021-10-11T20:56:13Z,MERGED,True,17,10,1,https://github.com/vague666,Implement priority on the matched lines for /hilight,5,['auto-merge'],https://github.com/irssi/irssi/pull/1232,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/1232#issuecomment-717098645,Since the original use case wasn't broken(Fixes #1228) this adds more functionality instead :),Maybe I do too much perl and forget that not all languages initialize variables :),True,{}
irssi/irssi,https://github.com/irssi/irssi,1232,2020-10-27T07:38:35Z,2020-12-14T14:22:57Z,2021-10-11T20:56:13Z,MERGED,True,17,10,1,https://github.com/vague666,Implement priority on the matched lines for /hilight,5,['auto-merge'],https://github.com/irssi/irssi/pull/1232,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1232#issuecomment-739811542,Since the original use case wasn't broken(Fixes #1228) this adds more functionality instead :),@irssi/developers ?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1234,2020-11-11T22:10:18Z,2020-11-14T18:43:11Z,2021-10-11T20:56:14Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,Copy Perl signal arguments prior to running callbacks,2,['auto-merge'],https://github.com/irssi/irssi/pull/1234,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1234,Might fix #1233,Might fix #1233,True,{}
irssi/irssi,https://github.com/irssi/irssi,1234,2020-11-11T22:10:18Z,2020-11-14T18:43:11Z,2021-10-11T20:56:14Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,Copy Perl signal arguments prior to running callbacks,2,['auto-merge'],https://github.com/irssi/irssi/pull/1234,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1234#issuecomment-725697592,Might fix #1233,I guess the croaks around lines 100-102 might leak memory?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1234,2020-11-11T22:10:18Z,2020-11-14T18:43:11Z,2021-10-11T20:56:14Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,Copy Perl signal arguments prior to running callbacks,2,['auto-merge'],https://github.com/irssi/irssi/pull/1234,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1234#issuecomment-725701351,Might fix #1233,that would seem likely...,True,{}
irssi/irssi,https://github.com/irssi/irssi,1234,2020-11-11T22:10:18Z,2020-11-14T18:43:11Z,2021-10-11T20:56:14Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,Copy Perl signal arguments prior to running callbacks,2,['auto-merge'],https://github.com/irssi/irssi/pull/1234,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1234#issuecomment-725933233,Might fix #1233,"it would probably suffice to copy the arguments before the callback, what do you think would be better?

  
    
      irssi/src/perl/perl-signals.c
    
    
         Line 206
      in
      e029266
    
  
  
    

        
          
           callback(cb_arg, n_args, p);",True,{}
irssi/irssi,https://github.com/irssi/irssi,1234,2020-11-11T22:10:18Z,2020-11-14T18:43:11Z,2021-10-11T20:56:14Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,Copy Perl signal arguments prior to running callbacks,2,['auto-merge'],https://github.com/irssi/irssi/pull/1234,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1234#issuecomment-726005966,Might fix #1233,"Yeah, maybe, if that makes the diff more minimal and you understand the scope of the issue. I'm not terribly confident about this one, the perl API is a lot.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1234,2020-11-11T22:10:18Z,2020-11-14T18:43:11Z,2021-10-11T20:56:14Z,MERGED,True,9,3,2,https://github.com/ailin-nemui,Copy Perl signal arguments prior to running callbacks,2,['auto-merge'],https://github.com/irssi/irssi/pull/1234,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1234#issuecomment-727168928,Might fix #1233,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1243,2020-12-31T16:51:00Z,2021-01-08T22:12:32Z,2021-10-11T20:56:15Z,MERGED,True,50,9,3,https://github.com/ailin-nemui,ignore comments and abort irssi on servers and channels config errors,2,[],https://github.com/irssi/irssi/pull/1243,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1243,"fixes #1242
maybe fixes #1062","fixes #1242
maybe fixes #1062",True,{}
irssi/irssi,https://github.com/irssi/irssi,1243,2020-12-31T16:51:00Z,2021-01-08T22:12:32Z,2021-10-11T20:56:15Z,MERGED,True,50,9,3,https://github.com/ailin-nemui,ignore comments and abort irssi on servers and channels config errors,2,[],https://github.com/irssi/irssi/pull/1243,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1243#issuecomment-756190051,"fixes #1242
maybe fixes #1062","I extended the scope of this a bit, now it should also error out on broken configs",True,{}
irssi/irssi,https://github.com/irssi/irssi,1244,2021-01-03T22:07:48Z,2021-01-03T23:48:20Z,2021-01-03T23:48:24Z,MERGED,True,3,1,1,https://github.com/ailin-nemui,"error out on empty perlmodlib, for example non-existant vendor",1,[],https://github.com/irssi/irssi/pull/1244,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1244,"meson build system
reported by Xogium","meson build system
reported by Xogium",True,{}
irssi/irssi,https://github.com/irssi/irssi,1245,2021-01-04T07:38:07Z,2021-01-04T09:17:52Z,2021-10-11T20:56:16Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,use cc.links in meson.build to fix regression of meson 0.56,1,[],https://github.com/irssi/irssi/pull/1245,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1245,fixes #1235 reported by dcbaker,fixes #1235 reported by dcbaker,True,{}
irssi/irssi,https://github.com/irssi/irssi,1246,2021-01-04T15:04:55Z,2021-01-30T20:09:27Z,2021-10-11T20:56:16Z,MERGED,True,182,232,47,https://github.com/ailin-nemui,correct wrong function prefixes,9,[],https://github.com/irssi/irssi/pull/1246,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1246,"g_input -> i_input
g_istr -> i_istr
g_io_channel -> i_io_channel
g_hash_free_value -> i_hash_free_value
remove g_free_true
gslist -> i_slist
glog_func -> i_log_func","g_input -> i_input
g_istr -> i_istr
g_io_channel -> i_io_channel
g_hash_free_value -> i_hash_free_value
remove g_free_true
gslist -> i_slist
glog_func -> i_log_func",True,{}
irssi/irssi,https://github.com/irssi/irssi,1246,2021-01-04T15:04:55Z,2021-01-30T20:09:27Z,2021-10-11T20:56:16Z,MERGED,True,182,232,47,https://github.com/ailin-nemui,correct wrong function prefixes,9,[],https://github.com/irssi/irssi/pull/1246,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1246#issuecomment-754028511,"g_input -> i_input
g_istr -> i_istr
g_io_channel -> i_io_channel
g_hash_free_value -> i_hash_free_value
remove g_free_true
gslist -> i_slist
glog_func -> i_log_func",We were clobbering the GLib prefix. Note，this is a tad annoying change but better to get over with it,True,{}
irssi/irssi,https://github.com/irssi/irssi,1246,2021-01-04T15:04:55Z,2021-01-30T20:09:27Z,2021-10-11T20:56:16Z,MERGED,True,182,232,47,https://github.com/ailin-nemui,correct wrong function prefixes,9,[],https://github.com/irssi/irssi/pull/1246,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1246#issuecomment-754037660,"g_input -> i_input
g_istr -> i_istr
g_io_channel -> i_io_channel
g_hash_free_value -> i_hash_free_value
remove g_free_true
gslist -> i_slist
glog_func -> i_log_func","Module authors will have to adapt these changes:
    [M] 'constant I_INPUT_READ'    {G_INPUT_READ}
    [M] 'constant I_INPUT_WRITE'    {G_INPUT_WRITE}
    [M] 'function int i_input_add(GIOChannel*, int, GInputFunction, void*)'    {g_input_add}
    [M] 'function int i_input_add_full(GIOChannel*, int, int, GInputFunction, void*)'    {g_input_add_full}
    [M] 'function int i_input_add_poll(int, int, int, GInputFunction, void*)'    {g_input_add_poll}
    [M] 'function GIOChannel* i_io_channel_new(int)'    {g_io_channel_new}
    [M] 'function int i_io_channel_read_block(GIOChannel*, void*, int)'    {g_io_channel_read_block}
    [M] 'function int i_io_channel_write_block(GIOChannel*, void*, int)'    {g_io_channel_write_block}
    [M] 'function int i_istr_cmp(gconstpointer, gconstpointer)'    {g_istr_cmp}
    [M] 'function int i_istr_equal(gconstpointer, gconstpointer)'    {g_istr_equal}
    [M] 'function guint i_istr_hash(gconstpointer)'    {g_istr_hash}
    [M] 'function void i_log_func(const char*, GLogLevelFlags, const char*)'    {glog_func}
    [M] 'function GSList* i_slist_delete_string(GSList*, const char*, GDestroyNotify)'    {gslist_delete_string}
    [M] 'function GSList* i_slist_find_icase_string(GSList*, const char*)'    {gslist_find_icase_string}
    [M] 'function GSList* i_slist_find_string(GSList*, const char*)'    {gslist_find_string}
    [M] 'function void* i_slist_foreach_find(GSList*, FOREACH_FIND_FUNC, void*)'    {gslist_foreach_find}
    [M] 'function void i_slist_free_full(GSList*, GDestroyNotify)'    {gslist_free_full}
    [M] 'function GSList* i_slist_remove_string(GSList*, const char*)'    {gslist_remove_string}
    [M] 'function char* i_slist_to_string(GSList*, const char*)'    {gslist_to_string}",True,{}
irssi/irssi,https://github.com/irssi/irssi,1246,2021-01-04T15:04:55Z,2021-01-30T20:09:27Z,2021-10-11T20:56:16Z,MERGED,True,182,232,47,https://github.com/ailin-nemui,correct wrong function prefixes,9,[],https://github.com/irssi/irssi/pull/1246,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1246#issuecomment-754050793,"g_input -> i_input
g_istr -> i_istr
g_io_channel -> i_io_channel
g_hash_free_value -> i_hash_free_value
remove g_free_true
gslist -> i_slist
glog_func -> i_log_func","Ugh.
Any particular motivation for this change? Did it finally become a problem?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1246,2021-01-04T15:04:55Z,2021-01-30T20:09:27Z,2021-10-11T20:56:16Z,MERGED,True,182,232,47,https://github.com/ailin-nemui,correct wrong function prefixes,9,[],https://github.com/irssi/irssi/pull/1246,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1246#issuecomment-754055207,"g_input -> i_input
g_istr -> i_istr
g_io_channel -> i_io_channel
g_hash_free_value -> i_hash_free_value
remove g_free_true
gslist -> i_slist
glog_func -> i_log_func",just doing clean-up work. what's your opinion? better delay indefinitely :-)?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1246,2021-01-04T15:04:55Z,2021-01-30T20:09:27Z,2021-10-11T20:56:16Z,MERGED,True,182,232,47,https://github.com/ailin-nemui,correct wrong function prefixes,9,[],https://github.com/irssi/irssi/pull/1246,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1246#issuecomment-770273858,"g_input -> i_input
g_istr -> i_istr
g_io_channel -> i_io_channel
g_hash_free_value -> i_hash_free_value
remove g_free_true
gslist -> i_slist
glog_func -> i_log_func",merging this after discussion with dequis who doesn't like it. But it's better to fix mistakes. We had one break already in the past with ssl->tls,True,{'THUMBS_UP': ['https://github.com/dequis']}
irssi/irssi,https://github.com/irssi/irssi,1247,2021-01-04T15:06:20Z,2021-01-04T15:17:59Z,2021-10-11T20:56:17Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix clang-format-xs formatting whole file,1,[],https://github.com/irssi/irssi/pull/1247,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1247,incomplete fix in #1234,incomplete fix in #1234,True,{}
irssi/irssi,https://github.com/irssi/irssi,1248,2021-01-04T15:51:33Z,2021-01-07T00:25:55Z,2021-01-07T00:41:02Z,CLOSED,False,0,0,0,https://github.com/ailin-nemui,put proper versions in PACKAGE_VERSION,0,['auto-merge'],https://github.com/irssi/irssi/pull/1248,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1248,"we should ensure PACKAGE_VERSION aka $J resembles a version
could be broken if you tag something","we should ensure PACKAGE_VERSION aka $J resembles a version
could be broken if you tag something",True,{}
irssi/irssi,https://github.com/irssi/irssi,1248,2021-01-04T15:51:33Z,2021-01-07T00:25:55Z,2021-01-07T00:41:02Z,CLOSED,False,0,0,0,https://github.com/ailin-nemui,put proper versions in PACKAGE_VERSION,0,['auto-merge'],https://github.com/irssi/irssi/pull/1248,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1248#issuecomment-755194239,"we should ensure PACKAGE_VERSION aka $J resembles a version
could be broken if you tag something",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1248,2021-01-04T15:51:33Z,2021-01-07T00:25:55Z,2021-01-07T00:41:02Z,CLOSED,False,0,0,0,https://github.com/ailin-nemui,put proper versions in PACKAGE_VERSION,0,['auto-merge'],https://github.com/irssi/irssi/pull/1248,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1248#issuecomment-755462288,"we should ensure PACKAGE_VERSION aka $J resembles a version
could be broken if you tag something","What's the motivation for this one? What's a bad version, what's a good version, what happens if you have a bad version?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1248,2021-01-04T15:51:33Z,2021-01-07T00:25:55Z,2021-01-07T00:41:02Z,CLOSED,False,0,0,0,https://github.com/ailin-nemui,put proper versions in PACKAGE_VERSION,0,['auto-merge'],https://github.com/irssi/irssi/pull/1248,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1248#issuecomment-755473135,"we should ensure PACKAGE_VERSION aka $J resembles a version
could be broken if you tag something","an arbitrary tag such as ""test"" will get saved as the version (/eval echo $J), breaking scriptassist and possibly other things that want to use this value",True,{}
irssi/irssi,https://github.com/irssi/irssi,1248,2021-01-04T15:51:33Z,2021-01-07T00:25:55Z,2021-01-07T00:41:02Z,CLOSED,False,0,0,0,https://github.com/ailin-nemui,put proper versions in PACKAGE_VERSION,0,['auto-merge'],https://github.com/irssi/irssi/pull/1248,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1248#issuecomment-755799215,"we should ensure PACKAGE_VERSION aka $J resembles a version
could be broken if you tag something",screwed up my git skills -> #1253,True,{}
irssi/irssi,https://github.com/irssi/irssi,1249,2021-01-05T20:23:00Z,2021-01-06T18:23:08Z,2021-04-08T22:15:07Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix multiple identical active caps,1,['auto-merge'],https://github.com/irssi/irssi/pull/1249,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1249,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1249,2021-01-05T20:23:00Z,2021-01-06T18:23:08Z,2021-04-08T22:15:07Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,fix multiple identical active caps,1,['auto-merge'],https://github.com/irssi/irssi/pull/1249,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1249#issuecomment-755194704,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1250,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1250#issuecomment-757896566,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1250#issuecomment-766435587,,https://github.com/mquin/irssi-scripts/blob/master/account-notify.pl,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1250#issuecomment-768632578,,"if disable extended-join, the chase account code runs into verne.freenode.net 263 Nei WHO :This command could not be completed because it has been used recently, and is rate-limited. on freenode
at least make sure the chase is run only 1 time per user",True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1250#issuecomment-769686903,,"we're now only querying one user once even if they join multiple channels, but still:
I get the 263 error for something like WHO losuler %tna
the common issue seems to be that the person (nick) has left already (QUIT the network or changed nick)
at the time my queued who command makes it through",True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1250#issuecomment-769874306,,now we purge the WHOs from the queue. hope that's good enough,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1250#issuecomment-770276318,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1250#issuecomment-770404642,,here is a script that makes use of the account field http://anti.teamidiot.de/static/nei/*/Code/Irssi/account_expando.pl,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1250#issuecomment-786655408,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/dequis,10,https://github.com/irssi/irssi/pull/1250#issuecomment-787108899,,"""update clang-format to clang-format-11, fixes enum bug"" what enum bug?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/1250#issuecomment-787109314,,"clang-format < 11 will want to force-format  enums like this, iirc:
enum {	CHANNEL_QUERY_MODE,
		CHANNEL_QUERY_WHO,
		CHANNEL_QUERY_BMODE,

		CHANNEL_QUERIES
};",True,{}
irssi/irssi,https://github.com/irssi/irssi,1250,2021-01-06T00:55:00Z,2021-04-01T19:27:52Z,2021-10-11T20:56:18Z,MERGED,True,368,69,15,https://github.com/ailin-nemui,better account tracking,14,['needs testing'],https://github.com/irssi/irssi/pull/1250,https://github.com/ailin-nemui,12,https://github.com/irssi/irssi/pull/1250#issuecomment-797395972,,@dequis friendly ping :-),True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/realaltffour,1,https://github.com/irssi/irssi/pull/1251,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1251#issuecomment-755242799,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","please consider

#51 (comment)

I agree that XDG makes sense however I worry implementation of it would be incredibly confusing.
For example (I haven't thought through all the aspects of this):
Currently scripts both live under ~/.irssi/scripts and ~/.irssi/scripts/autorun (although ideally a symlink to the parent), if we strictly interpret the xdg base directory spec the autorun aspect should be treated as configuration while the script itself should be treated as data.
This means scripts should go under ~/.local/share/irssi/scripts but then with symlinks under ~/.config/irssi/scripts/autorun (maybe -- maybe we switch to a different way of specifying autorun as this is a bit cumbersome).
For this particular thing that would mean changes in:

API to add variants on Irssi::get_irssi_dir(); (perl and C)
scriptassist
Docs

Additionally it would mean introducing a search order for scripts (and probably code to warn users if they have a script named the same thing in both ~/.local/share/irssi/scripts and ~/.irssi/scripts).
In general I don't think the cost of this is worth it. (Remember Irssi has users who are not hugely familiar with Unix and use this on a shell account; the cost of making a change and then obsoleting random tutorials on the web is very large).


https://wiki.archlinux.org/index.php/XDG_Base_Directory#Specification
#1200 (comment)


scripts use IRSSI_DIR_FULL ""/scripts"" but they belong into $XDG_DATA_HOME/irssi/scripts
themes use IRSSI_DIR_FULL, but they belong into $XDG_DATA_HOME/irssi/themes
awaylog uses IRSSI_DIR_FULL ""/away.log"", but it (probably) belongs into $XDG_CACHE_HOME
several scripts such as adv_windowlist or nicklist create pipes in IRSSI_DIR_FULL which belong into $XDG_RUNTIME_DIR



--config and --home must take precedence
never look in multiple places in the user's folders, use the first folder that exists
only look in XDG_DATA_HOME for scripts, and only look there if using XDG_CONFIG_HOME
only fix clang-format errors of the code that you touched, this is important for code review. use the git-clang-format command to do this, or download the ""artefact"" from github actions to manually patch the requested diff. also see https://github.com/irssi/irssi/wiki/clang-format#manual-check-after-git-add

in general it will require some work before we can accept this feature. I haven't found a definite answer for the script autorun mechanism in particular",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1251#issuecomment-755252436,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","about mixed declarations, just declare your variables at the beginning of a block! Instead of
...
const char *x = y();
...

write
{
    const char *x;
    ...
    x = y();",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/realaltffour,4,https://github.com/irssi/irssi/pull/1251#issuecomment-755424565,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","@ailin-nemui added fallback which sets irssi_dir with either ~/.irssi or ~/.config/irssi, depending on XDG_CONFIG_HOME existence. Then it enables is_xdg_supported(). Making the need to check for XDG support only required when writing to outside of XDG_CONFIG_HOME.
Points that I need more clarification on:


--config and --home must take precedence


Correct me if I am wrong, but the irssi_dir check in core/core.c should do this automatically.


several scripts such as adv_windowlist or nicklist create pipes in IRSSI_DIR_FULL which belong
into $XDG_RUNTIME_DIR


I'd assume that these scripts are the defaults and present in /scripts?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1251#issuecomment-755775066,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","thanks for taking a stab at this! After checking your suggested changes, it seems that making get_irssi_dir return the XDG_DATA_DIR would more or less be identical to your solution?
in other words, running irssi --config=""$XDG_CONFIG_HOME""/irssi/config --home=""$XDG_DATA_HOME""/irssi ?
if that is correct, then the solution could be as simple as adding a single if CONFIG_HOME/irssi/ exists, set the config to that dir and the irssi_dir to the DATA_HOME/irssi.
@dequis ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1251#issuecomment-755775874,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","what I just described seems to be exactly what was done in #511 but rejected at that time 🤔
--> no, there only XDG_CONFIG_HOME was used",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1251#issuecomment-755790221,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","In any case I feel we have to get rid of all the IFs in your code:
for example. instead of
	if (is_xdg_supported())
		awaylog_file = g_build_filename(g_get_user_cache_dir(), ""irssi"", ""away.log"", NULL);
	else
		awaylog_file = g_strconcat(get_irssi_dir(), ""/away.log"", NULL);

the code should just be
	awaylog_file = g_build_filename(get_irssi_cache_dir(), ""away.log"", NULL);

and so on",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1251#issuecomment-755790380,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.",another caveat is that we may now need to ensure that certain directories such as cache_dir / irssi are created if they do not exist,True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/realaltffour,9,https://github.com/irssi/irssi/pull/1251#issuecomment-755892800,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","thanks for taking a stab at this! After checking your suggested changes, it seems that making get_irssi_dir return the XDG_DATA_DIR would more or less be identical to your solution?
in other words, running irssi --config=""$XDG_CONFIG_HOME""/irssi/config --home=""$XDG_DATA_HOME""/irssi ?

From my understanding irssi_dir is the config directory location. Therefore it would make sense to return XDG_CONFIG_HOME or ~/.irssi. I don't get why you would return XDG_DATA_HOME with a variable that is meant to represent the configuration folder. Also we should be able to differentiate between XDG_DATA_HOME and XDG_CONFIG_HOME files, and having one function (get_irssi_dir) return two different meaning variables is not a good idea.

if that is correct, then the solution could be as simple as adding a single if CONFIG_HOME/irssi/ exists, set the config to that dir and the irssi_dir to the DATA_HOME/irssi.

Well, if the only use of irssi_dir is for non-config stuff, then this is a sane way to add XDG support.

In any case I feel we have to get rid of all the IFs in your code:
for example. instead of
	if (is_xdg_supported())
		awaylog_file = g_build_filename(g_get_user_cache_dir(), ""irssi"", ""away.log"", NULL);
	else
		awaylog_file = g_strconcat(get_irssi_dir(), ""/away.log"", NULL);

the code should just be
	awaylog_file = g_build_filename(get_irssi_cache_dir(), ""away.log"", NULL);

and so on

I am going to work on this implementation.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/realaltffour,10,https://github.com/irssi/irssi/pull/1251#issuecomment-755895018,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","another caveat is that we may now need to ensure that certain directories such as cache_dir / irssi are created if they do not exist

We should keep in mind that my changes only assume XDG is being used if XDG_CONFIG_HOME/irssi is present. I believe I saw a function that ensures that ~/.irssi is present, if core_preinit() runs before it, we can test to see if the user created XDG config directory, if they did, we check/create the XDG cache, runtime and data directories. I will investigate the changes I mentioned before.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/1251#issuecomment-756056823,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","starting to look nicely!
I was mistaken about one thing,
looks like we need get_irssi_data_dir after all, and get_irssi_dir should be == irssi_config_dir, for the startup file
we also need the differentiation between data and config dir for some scripts, for example the friends* scripts need configs
only question is what to do with get_irssi_dir, should it default to config, data, or remove it entirely?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/realaltffour,12,https://github.com/irssi/irssi/pull/1251#issuecomment-756058435,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","only question is what to do with get_irssi_dir, should it default to config, data, or remove it entirely?

Defaulting it to data would be a sane thing to do, this would allow backward compatibility with user made scripts, and since they are scripts, they would belong to XDG data",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,13,https://github.com/irssi/irssi/pull/1251#issuecomment-757123443,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.",you could also take a look at the compilation error here https://github.com/irssi/irssi/pull/1251/checks?check_run_id=1673055256,True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/realaltffour,14,https://github.com/irssi/irssi/pull/1251#issuecomment-757336798,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","you could also take a look at the compilation error here https://github.com/irssi/irssi/pull/1251/checks?check_run_id=1673055256

I fixed that. Do you have an idea on why my commits are failing the clang-format checks? I installed the git hook, and ensured git clang-format is ran.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,15,https://github.com/irssi/irssi/pull/1251#issuecomment-757797847,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","I can't say I know for sure, maybe you hadn't installed it yet when that commit was created? Please manually apply the fix from the Artefact download on this page: https://github.com/irssi/irssi/actions/runs/474336250
There still seems to be some error condition of the new code, maybe you can investigate:
https://github.com/irssi/irssi/pull/1251/checks?check_run_id=1674123860#step:6:25
Once we're confident this code is good, you will have to increase our ABI constant in https://github.com/irssi/irssi/blob/master/src/common.h#L9",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,16,https://github.com/irssi/irssi/pull/1251#issuecomment-757957019,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.",thanks for the review @LemonBoy,True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,17,https://github.com/irssi/irssi/pull/1251#issuecomment-758510603,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","sorry, I didn't write clearly
it does NOT matter if you g_strdup_printf, or g_build_filename, the end result must be freed here:
https://github.com/irssi/irssi/blob/master/src/core/core.c#L325
If you later on copy a string (y = x;) they point to the same memory, so you must only g_free one of them
if you copy the string like y = g_strdup(x);, then you have two copies and both must be g_freed
again, it does not matter if you use g_strdup_printf or g_build_filename
hope it's more clear now :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,18,https://github.com/irssi/irssi/pull/1251#issuecomment-759280221,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.",@OJFord @josteink @keis @wsdjeg @LCRERGO now is your chance to test this awesome feature you've been requesting. Looking forward to your test results,True,{}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/josteink,19,https://github.com/irssi/irssi/pull/1251#issuecomment-759408090,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","As the one who filed the original feature request, back in 2015, I do appreciate the effort put into this by all you contributors. I really do!
That said, I've largely moved to using IRC via Matrix and IRC-bridges, instead of using a dedicated IRC-client for that purpose. As such, I don't really have a live environment I can use to provide test-feedback with.
Sorry 😬",True,{'THUMBS_UP': ['https://github.com/OJFord']}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/keis,20,https://github.com/irssi/irssi/pull/1251#issuecomment-761799433,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","Hey, thanks for working on this. I really wasn't expecting some action on this after all this time.
However it does not seem to work as (I) expected.

I moved my config to ~/.config/irssi/config and started irssi
Looks like no config was detect and I just got the default instead
A empty ~/.irssi directory was created for some reason
I tried loading my config with -c and irssi segfaulted

Relevant bits of my env
env | grep XDG                                                                                                                                                                                                  
XDG_CONFIG_HOME=/home/keis/.config
XDG_DATA_DIRS=/home/keis/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share
XDG_DATA_HOME=/home/keis/.local/share
XDG_DOWNLOAD_DIR=/home/keis/Downloads
XDG_RUNTIME_DIR=/run/user/1000
XDG_SEAT=seat0
XDG_SESSION_CLASS=user
XDG_SESSION_DESKTOP=sway
XDG_SESSION_ID=2
XDG_SESSION_TYPE=wayland
XDG_VTNR=2",True,{'THUMBS_UP': ['https://github.com/realaltffour']}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/keis,21,https://github.com/irssi/irssi/pull/1251#issuecomment-761818750,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","Oh derp, -c is not shorthand for config. loading with --config does work. Segfaulting is not great though and FWIW it does not do so on irssi 1.2.2 (20190829 0225)",True,{'THUMBS_UP': ['https://github.com/realaltffour']}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,22,https://github.com/irssi/irssi/pull/1251#issuecomment-761844906,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.","@keis thank you very much for testing, I guess there are still some bugs
@realaltffour can you check these issues?",True,{'THUMBS_UP': ['https://github.com/realaltffour']}
irssi/irssi,https://github.com/irssi/irssi,1251,2021-01-06T10:50:43Z,2021-05-17T08:55:32Z,2021-05-17T08:55:32Z,CLOSED,False,134,45,10,https://github.com/realaltffour,[WIP] add: xdg-support,28,"['needs changes', 'needs testing', 'orphan']",https://github.com/irssi/irssi/pull/1251,https://github.com/ailin-nemui,23,https://github.com/irssi/irssi/pull/1251#issuecomment-762116884,"config file XDG support inspired from #511
added support to try loading scripts from XDG_DATA_HOME, if not present try
loading from XDG_CONFIG_HOME, if not present try loading the usual way.",@keis wrt -c I believe you are running into #1239,True,{}
irssi/irssi,https://github.com/irssi/irssi,1252,2021-01-06T21:26:20Z,2021-01-11T10:15:58Z,2021-10-11T20:56:18Z,MERGED,True,261,155,46,https://github.com/ailin-nemui,fix autotools build and package the meson.build files,5,['auto-merge'],https://github.com/irssi/irssi/pull/1252,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1252,"Check Irssi compilation using github actions
move clang-format-xs into utils
remove travis","Check Irssi compilation using github actions
move clang-format-xs into utils
remove travis",True,{}
irssi/irssi,https://github.com/irssi/irssi,1252,2021-01-06T21:26:20Z,2021-01-11T10:15:58Z,2021-10-11T20:56:18Z,MERGED,True,261,155,46,https://github.com/ailin-nemui,fix autotools build and package the meson.build files,5,['auto-merge'],https://github.com/irssi/irssi/pull/1252,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1252#issuecomment-755736893,"Check Irssi compilation using github actions
move clang-format-xs into utils
remove travis",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1252,2021-01-06T21:26:20Z,2021-01-11T10:15:58Z,2021-10-11T20:56:18Z,MERGED,True,261,155,46,https://github.com/ailin-nemui,fix autotools build and package the meson.build files,5,['auto-merge'],https://github.com/irssi/irssi/pull/1252,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1252#issuecomment-756779274,"Check Irssi compilation using github actions
move clang-format-xs into utils
remove travis","I don't get the ""package the meson.build files"" part of this",True,{}
irssi/irssi,https://github.com/irssi/irssi,1252,2021-01-06T21:26:20Z,2021-01-11T10:15:58Z,2021-10-11T20:56:18Z,MERGED,True,261,155,46,https://github.com/ailin-nemui,fix autotools build and package the meson.build files,5,['auto-merge'],https://github.com/irssi/irssi/pull/1252,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1252#issuecomment-757026048,"Check Irssi compilation using github actions
move clang-format-xs into utils
remove travis","we use make dist to create our release. If we want the next release to be buildable using meson and configure, then we have to ship all the meson.build files in that release tarball. to do this, we need to add the meson files to the EXTRA_DIST variable of automake",True,{'HEART': ['https://github.com/ysangkok']}
irssi/irssi,https://github.com/irssi/irssi,1253,2021-01-07T00:40:31Z,2021-01-08T17:58:23Z,2021-10-11T20:56:19Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,put proper versions in PACKAGE_VERSION,1,[],https://github.com/irssi/irssi/pull/1253,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1253,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1254,2021-01-07T17:32:05Z,2021-01-08T17:58:52Z,2021-10-11T20:56:19Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,undraft setname capability,1,[],https://github.com/irssi/irssi/pull/1254,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1254,no draft since feb.2020,no draft since feb.2020,True,{}
irssi/irssi,https://github.com/irssi/irssi,1255,2021-01-07T19:00:45Z,2021-01-09T09:38:37Z,2021-04-08T22:15:08Z,MERGED,True,1,1,1,https://github.com/vague666,Update ignore.in examples ,1,[],https://github.com/irssi/irssi/pull/1255,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1255,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1258,2021-01-14T13:28:26Z,2021-04-18T10:02:00Z,2021-04-18T10:02:00Z,CLOSED,False,13,3,2,https://github.com/ailin-nemui,add a limit to showing /NAMES on join,2,['waiting for management decision'],https://github.com/irssi/irssi/pull/1258,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1258,only show the counts if too many nicks,only show the counts if too many nicks,True,{}
irssi/irssi,https://github.com/irssi/irssi,1258,2021-01-14T13:28:26Z,2021-04-18T10:02:00Z,2021-04-18T10:02:00Z,CLOSED,False,13,3,2,https://github.com/ailin-nemui,add a limit to showing /NAMES on join,2,['waiting for management decision'],https://github.com/irssi/irssi/pull/1258,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1258#issuecomment-782739007,only show the counts if too many nicks,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1258,2021-01-14T13:28:26Z,2021-04-18T10:02:00Z,2021-04-18T10:02:00Z,CLOSED,False,13,3,2,https://github.com/ailin-nemui,add a limit to showing /NAMES on join,2,['waiting for management decision'],https://github.com/irssi/irssi/pull/1258,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1258#issuecomment-815670884,only show the counts if too many nicks,"idea by dx: right before the count, add a message saying ""number of users over show_names_on_join_limit, use /names to show full list""",True,{}
irssi/irssi,https://github.com/irssi/irssi,1259,2021-01-15T22:33:49Z,2021-04-18T10:01:04Z,2021-10-11T20:56:20Z,MERGED,True,38,2,4,https://github.com/ailin-nemui,do not beep on hidden lines with /set beep_msg_level ... -hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/1259,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1259,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1259,2021-01-15T22:33:49Z,2021-04-18T10:01:04Z,2021-10-11T20:56:20Z,MERGED,True,38,2,4,https://github.com/ailin-nemui,do not beep on hidden lines with /set beep_msg_level ... -hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/1259,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1259#issuecomment-761232677,,idea by xerox_,True,{}
irssi/irssi,https://github.com/irssi/irssi,1259,2021-01-15T22:33:49Z,2021-04-18T10:01:04Z,2021-10-11T20:56:20Z,MERGED,True,38,2,4,https://github.com/ailin-nemui,do not beep on hidden lines with /set beep_msg_level ... -hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/1259,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1259#issuecomment-814905524,,"Works as advertised if I understand the use case correctly, ie hidden lines trigger beep/activity hilight in terminal/wm and -HIDDEN prevents this. The question is should this have to be added? Shouldn't the original code already make sure activity is blocked",True,{}
irssi/irssi,https://github.com/irssi/irssi,1259,2021-01-15T22:33:49Z,2021-04-18T10:01:04Z,2021-10-11T20:56:20Z,MERGED,True,38,2,4,https://github.com/ailin-nemui,do not beep on hidden lines with /set beep_msg_level ... -hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/1259,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1259#issuecomment-814962107,,"should we change the defaults?
@irssi/developers",True,{}
irssi/irssi,https://github.com/irssi/irssi,1259,2021-01-15T22:33:49Z,2021-04-18T10:01:04Z,2021-10-11T20:56:20Z,MERGED,True,38,2,4,https://github.com/ailin-nemui,do not beep on hidden lines with /set beep_msg_level ... -hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/1259,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/1259#issuecomment-814974940,,If we go this route then yes,True,{}
irssi/irssi,https://github.com/irssi/irssi,1259,2021-01-15T22:33:49Z,2021-04-18T10:01:04Z,2021-10-11T20:56:20Z,MERGED,True,38,2,4,https://github.com/ailin-nemui,do not beep on hidden lines with /set beep_msg_level ... -hidden,1,['auto-merge'],https://github.com/irssi/irssi/pull/1259,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1259#issuecomment-815242551,,by default beep_msg_level is empty so .. idk,True,{}
irssi/irssi,https://github.com/irssi/irssi,1260,2021-01-15T23:32:23Z,2021-04-18T10:00:53Z,2021-10-11T20:56:20Z,MERGED,True,39,16,6,https://github.com/ailin-nemui,add /IGNORE ... NOHILIGHT to ignore some hilights,1,['auto-merge'],https://github.com/irssi/irssi/pull/1260,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1260,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1260,2021-01-15T23:32:23Z,2021-04-18T10:00:53Z,2021-10-11T20:56:20Z,MERGED,True,39,16,6,https://github.com/ailin-nemui,add /IGNORE ... NOHILIGHT to ignore some hilights,1,['auto-merge'],https://github.com/irssi/irssi/pull/1260,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/1260#issuecomment-814948475,,Works as advertised,True,{}
irssi/irssi,https://github.com/irssi/irssi,1260,2021-01-15T23:32:23Z,2021-04-18T10:00:53Z,2021-10-11T20:56:20Z,MERGED,True,39,16,6,https://github.com/ailin-nemui,add /IGNORE ... NOHILIGHT to ignore some hilights,1,['auto-merge'],https://github.com/irssi/irssi/pull/1260,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1260#issuecomment-814961655,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1261,2021-01-20T08:58:39Z,2021-01-20T09:06:33Z,2021-10-11T20:56:21Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,unfix breakage in python setuptools,1,['auto-merge'],https://github.com/irssi/irssi/pull/1261,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1261,see pypa/setuptools#2541,see pypa/setuptools#2541,True,{}
irssi/irssi,https://github.com/irssi/irssi,1264,2021-01-30T22:23:34Z,2021-01-30T22:33:19Z,2021-10-11T20:56:21Z,MERGED,True,14,14,4,https://github.com/ailin-nemui,correct two more wrong prefixes,1,[],https://github.com/irssi/irssi/pull/1264,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1264,"fixup to #1246

glist -> i_list

glist_find_string -> i_list_find_string
glist_find_icase_string -> i_list_find_icase_string","fixup to #1246

glist -> i_list

glist_find_string -> i_list_find_string
glist_find_icase_string -> i_list_find_icase_string",True,{}
irssi/irssi,https://github.com/irssi/irssi,1268,2021-02-01T23:24:59Z,2021-02-03T16:46:12Z,2021-04-08T15:21:34Z,MERGED,True,24,1,23,https://github.com/ailin-nemui,configure automake with nostdinc,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1268,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1268,the current directory won't be added to the compiler's -I path,the current directory won't be added to the compiler's -I path,True,{}
irssi/irssi,https://github.com/irssi/irssi,1268,2021-02-01T23:24:59Z,2021-02-03T16:46:12Z,2021-04-08T15:21:34Z,MERGED,True,24,1,23,https://github.com/ailin-nemui,configure automake with nostdinc,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1268,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1268#issuecomment-771232674,the current directory won't be added to the compiler's -I path,this makes the build closer to meson. also it means #include <term.h> shouldn't include Irssi's own term.h in #1267,True,{}
irssi/irssi,https://github.com/irssi/irssi,1268,2021-02-01T23:24:59Z,2021-02-03T16:46:12Z,2021-04-08T15:21:34Z,MERGED,True,24,1,23,https://github.com/ailin-nemui,configure automake with nostdinc,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1268,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1268#issuecomment-772499606,the current directory won't be added to the compiler's -I path,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1268,2021-02-01T23:24:59Z,2021-02-03T16:46:12Z,2021-04-08T15:21:34Z,MERGED,True,24,1,23,https://github.com/ailin-nemui,configure automake with nostdinc,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1268,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1268#issuecomment-772560614,the current directory won't be added to the compiler's -I path,Did you check if this affects known modules? (Should probably include it in release notes as potentially breaking anyway),True,{}
irssi/irssi,https://github.com/irssi/irssi,1268,2021-02-01T23:24:59Z,2021-02-03T16:46:12Z,2021-04-08T15:21:34Z,MERGED,True,24,1,23,https://github.com/ailin-nemui,configure automake with nostdinc,1,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1268,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1268#issuecomment-772561258,the current directory won't be added to the compiler's -I path,"as it is only our own compilation, this should not be able to affect 3rd party modules in any way :-)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1269,2021-02-05T15:35:23Z,2021-02-10T09:59:40Z,2021-04-08T22:15:08Z,MERGED,True,2,2,1,https://github.com/ihsinme,fix invalid unsigned arithmetic.,3,['auto-merge'],https://github.com/irssi/irssi/pull/1269,https://github.com/ihsinme,1,https://github.com/irssi/irssi/pull/1269,"I believe your checks are not correct.
in my opinion they are equivalent to checks !=.
I suggest a simple fix.","I believe your checks are not correct.
in my opinion they are equivalent to checks !=.
I suggest a simple fix.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1269,2021-02-05T15:35:23Z,2021-02-10T09:59:40Z,2021-04-08T22:15:08Z,MERGED,True,2,2,1,https://github.com/ihsinme,fix invalid unsigned arithmetic.,3,['auto-merge'],https://github.com/irssi/irssi/pull/1269,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1269#issuecomment-774131745,"I believe your checks are not correct.
in my opinion they are equivalent to checks !=.
I suggest a simple fix.","thanks for the report, would you be interested in following through and applying the style patch as well:
https://github.com/irssi/irssi/pull/1269/checks?check_run_id=1839878784#step:5:9
by the way did you or your automated checker find any other cases in the code? maybe there are more cases of signed -> unsigned",True,{'THUMBS_UP': ['https://github.com/ihsinme']}
irssi/irssi,https://github.com/irssi/irssi,1269,2021-02-05T15:35:23Z,2021-02-10T09:59:40Z,2021-04-08T22:15:08Z,MERGED,True,2,2,1,https://github.com/ihsinme,fix invalid unsigned arithmetic.,3,['auto-merge'],https://github.com/irssi/irssi/pull/1269,https://github.com/ihsinme,3,https://github.com/irssi/irssi/pull/1269#issuecomment-774254139,"I believe your checks are not correct.
in my opinion they are equivalent to checks !=.
I suggest a simple fix.","by the way did you or your automated checker find any other cases in the code? maybe there are more cases of signed -> unsigned

currently I see only this error. (",True,{}
irssi/irssi,https://github.com/irssi/irssi,1269,2021-02-05T15:35:23Z,2021-02-10T09:59:40Z,2021-04-08T22:15:08Z,MERGED,True,2,2,1,https://github.com/ihsinme,fix invalid unsigned arithmetic.,3,['auto-merge'],https://github.com/irssi/irssi/pull/1269,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1269#issuecomment-774256111,"I believe your checks are not correct.
in my opinion they are equivalent to checks !=.
I suggest a simple fix.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1270,2021-02-08T09:20:26Z,2021-02-08T16:17:08Z,2021-04-08T22:15:09Z,MERGED,True,3,3,1,https://github.com/ihsinme,correction of incorrect sequence of checks.,1,['auto-merge'],https://github.com/irssi/irssi/pull/1270,https://github.com/ihsinme,1,https://github.com/irssi/irssi/pull/1270,"I find it odd to first use size as a non-negative parameter, and then check for a value.","I find it odd to first use size as a non-negative parameter, and then check for a value.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1270,2021-02-08T09:20:26Z,2021-02-08T16:17:08Z,2021-04-08T22:15:09Z,MERGED,True,3,3,1,https://github.com/ihsinme,correction of incorrect sequence of checks.,1,['auto-merge'],https://github.com/irssi/irssi/pull/1270,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1270#issuecomment-775036407,"I find it odd to first use size as a non-negative parameter, and then check for a value.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1270,2021-02-08T09:20:26Z,2021-02-08T16:17:08Z,2021-04-08T22:15:09Z,MERGED,True,3,3,1,https://github.com/ihsinme,correction of incorrect sequence of checks.,1,['auto-merge'],https://github.com/irssi/irssi/pull/1270,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1270#issuecomment-775144601,"I find it odd to first use size as a non-negative parameter, and then check for a value.",Sure. What motivates this?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1270,2021-02-08T09:20:26Z,2021-02-08T16:17:08Z,2021-04-08T22:15:09Z,MERGED,True,3,3,1,https://github.com/ihsinme,correction of incorrect sequence of checks.,1,['auto-merge'],https://github.com/irssi/irssi/pull/1270,https://github.com/ihsinme,4,https://github.com/irssi/irssi/pull/1270#issuecomment-775146077,"I find it odd to first use size as a non-negative parameter, and then check for a value.",I'm sorry I didn't understand the question.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1270,2021-02-08T09:20:26Z,2021-02-08T16:17:08Z,2021-04-08T22:15:09Z,MERGED,True,3,3,1,https://github.com/ihsinme,correction of incorrect sequence of checks.,1,['auto-merge'],https://github.com/irssi/irssi/pull/1270,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1270#issuecomment-775204241,"I find it odd to first use size as a non-negative parameter, and then check for a value.",they mean: why are you fixing these bugs for us?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1270,2021-02-08T09:20:26Z,2021-02-08T16:17:08Z,2021-04-08T22:15:09Z,MERGED,True,3,3,1,https://github.com/ihsinme,correction of incorrect sequence of checks.,1,['auto-merge'],https://github.com/irssi/irssi/pull/1270,https://github.com/ihsinme,6,https://github.com/irssi/irssi/pull/1270#issuecomment-775225761,"I find it odd to first use size as a non-negative parameter, and then check for a value.","I am doing security analysis.
It is important for me to understand the representation of errors in real projects.
so I fix them, not only in your project.
and your project is open source, and it seems logical to me that anyone can suggest an improvement to you.)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1270,2021-02-08T09:20:26Z,2021-02-08T16:17:08Z,2021-04-08T22:15:09Z,MERGED,True,3,3,1,https://github.com/ihsinme,correction of incorrect sequence of checks.,1,['auto-merge'],https://github.com/irssi/irssi/pull/1270,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1270#issuecomment-775262082,"I find it odd to first use size as a non-negative parameter, and then check for a value.","by the way, theoretically the behaviour could be different for the case size == 0 now (write with 0 does error check, if the buffering is turned off)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1271,2021-02-18T13:48:08Z,2021-02-24T20:50:18Z,2021-10-12T13:57:02Z,MERGED,True,1,0,1,https://github.com/vague666,Update dcc-get.c,1,['auto-merge'],https://github.com/irssi/irssi/pull/1271,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1271,Apply fix according with discussion in #159,Apply fix according with discussion in #159,True,{}
irssi/irssi,https://github.com/irssi/irssi,1271,2021-02-18T13:48:08Z,2021-02-24T20:50:18Z,2021-10-12T13:57:02Z,MERGED,True,1,0,1,https://github.com/vague666,Update dcc-get.c,1,['auto-merge'],https://github.com/irssi/irssi/pull/1271,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/1271#issuecomment-781356083,Apply fix according with discussion in #159,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1272,2021-02-24T20:57:23Z,2021-02-25T05:52:09Z,2021-10-11T20:56:23Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,update deprecated GLib symbol,1,['auto-merge'],https://github.com/irssi/irssi/pull/1272,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1272,g_main_quit -> g_main_loop_quit,g_main_quit -> g_main_loop_quit,True,{}
irssi/irssi,https://github.com/irssi/irssi,1272,2021-02-24T20:57:23Z,2021-02-25T05:52:09Z,2021-10-11T20:56:23Z,MERGED,True,1,1,1,https://github.com/ailin-nemui,update deprecated GLib symbol,1,['auto-merge'],https://github.com/irssi/irssi/pull/1272,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1272#issuecomment-785382216,g_main_quit -> g_main_loop_quit,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1274,2021-02-26T19:25:59Z,2021-02-26T19:40:03Z,2021-10-11T20:56:23Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,skip parsing empty tags,1,['auto-merge'],https://github.com/irssi/irssi/pull/1274,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1274,Credit to OSS-Fuzz,Credit to OSS-Fuzz,True,{}
irssi/irssi,https://github.com/irssi/irssi,1274,2021-02-26T19:25:59Z,2021-02-26T19:40:03Z,2021-10-11T20:56:23Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,skip parsing empty tags,1,['auto-merge'],https://github.com/irssi/irssi/pull/1274,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1274#issuecomment-786847606,Credit to OSS-Fuzz,"as @dequis said in #1108 (comment), here is the OSS-Fuzz credit",True,{}
irssi/irssi,https://github.com/irssi/irssi,1274,2021-02-26T19:25:59Z,2021-02-26T19:40:03Z,2021-10-11T20:56:23Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,skip parsing empty tags,1,['auto-merge'],https://github.com/irssi/irssi/pull/1274,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1274#issuecomment-786847792,Credit to OSS-Fuzz,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1275,2021-02-27T17:31:20Z,2021-02-27T17:43:49Z,2021-10-11T20:56:24Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,stop parsing on lone tag escape,1,['auto-merge'],https://github.com/irssi/irssi/pull/1275,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1275,Credit to OSS-Fuzz,Credit to OSS-Fuzz,True,{}
irssi/irssi,https://github.com/irssi/irssi,1275,2021-02-27T17:31:20Z,2021-02-27T17:43:49Z,2021-10-11T20:56:24Z,MERGED,True,2,0,1,https://github.com/ailin-nemui,stop parsing on lone tag escape,1,['auto-merge'],https://github.com/irssi/irssi/pull/1275,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1275#issuecomment-787107154,Credit to OSS-Fuzz,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1279,2021-03-03T16:19:04Z,2021-03-08T17:25:57Z,2021-10-11T20:56:24Z,MERGED,True,40,0,1,https://github.com/ailin-nemui,Test CIFuzz offering,1,[],https://github.com/irssi/irssi/pull/1279,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1279,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1279,2021-03-03T16:19:04Z,2021-03-08T17:25:57Z,2021-10-11T20:56:24Z,MERGED,True,40,0,1,https://github.com/ailin-nemui,Test CIFuzz offering,1,[],https://github.com/irssi/irssi/pull/1279,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1279#issuecomment-791997939,,"@irssi/developers
any objections?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1280,2021-03-03T16:39:53Z,2021-03-06T17:37:34Z,2021-10-11T20:56:25Z,MERGED,True,8,5,1,https://github.com/ailin-nemui,fix level uninitialised,1,['auto-merge'],https://github.com/irssi/irssi/pull/1280,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1280,Credit to OSS-Fuzz,Credit to OSS-Fuzz,True,{}
irssi/irssi,https://github.com/irssi/irssi,1280,2021-03-03T16:39:53Z,2021-03-06T17:37:34Z,2021-10-11T20:56:25Z,MERGED,True,8,5,1,https://github.com/ailin-nemui,fix level uninitialised,1,['auto-merge'],https://github.com/irssi/irssi/pull/1280,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1280#issuecomment-789950873,Credit to OSS-Fuzz,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1280,2021-03-03T16:39:53Z,2021-03-06T17:37:34Z,2021-10-11T20:56:25Z,MERGED,True,8,5,1,https://github.com/ailin-nemui,fix level uninitialised,1,['auto-merge'],https://github.com/irssi/irssi/pull/1280,https://github.com/dequis,3,https://github.com/irssi/irssi/pull/1280#issuecomment-790063270,Credit to OSS-Fuzz,Not really sure how to judge this change from the originally-intended-behavior perspective tbh... From the C side I guess it's fine?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1280,2021-03-03T16:39:53Z,2021-03-06T17:37:34Z,2021-10-11T20:56:25Z,MERGED,True,8,5,1,https://github.com/ailin-nemui,fix level uninitialised,1,['auto-merge'],https://github.com/irssi/irssi/pull/1280,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1280#issuecomment-790064290,Credit to OSS-Fuzz,you can compare with https://github.com/irssi/irssi/blob/master/src/fe-common/core/fe-messages.c#L169 maybe,True,{}
irssi/irssi,https://github.com/irssi/irssi,1280,2021-03-03T16:39:53Z,2021-03-06T17:37:34Z,2021-10-11T20:56:25Z,MERGED,True,8,5,1,https://github.com/ailin-nemui,fix level uninitialised,1,['auto-merge'],https://github.com/irssi/irssi/pull/1280,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1280#issuecomment-791457350,Credit to OSS-Fuzz,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1281,2021-03-05T19:28:33Z,2021-03-06T17:37:15Z,2021-04-08T15:32:41Z,MERGED,True,8,7,1,https://github.com/ailin-nemui,fix assertion failure when the line does not have text (yet),1,[],https://github.com/irssi/irssi/pull/1281,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1281,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1283,2021-03-12T20:17:10Z,2021-04-01T19:27:29Z,2021-10-11T20:56:26Z,MERGED,True,37,13,3,https://github.com/ailin-nemui,fail redirects on EFNet/freenode 263,1,['auto-merge'],https://github.com/irssi/irssi/pull/1283,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1283,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1283,2021-03-12T20:17:10Z,2021-04-01T19:27:29Z,2021-10-11T20:56:26Z,MERGED,True,37,13,3,https://github.com/ailin-nemui,fail redirects on EFNet/freenode 263,1,['auto-merge'],https://github.com/irssi/irssi/pull/1283,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1283#issuecomment-797732409,,"if you redirect a /who and freenode cancels the who with 263, Irssi will use the response to the next who as that of the current one. This might also confuse some internal caches.
This code will send a redirect failure if a 263 is encountered, so I think it's better than before. The question is if we need even better handling (and if so, how to implement it?)
@irssi/developers",True,{}
irssi/irssi,https://github.com/irssi/irssi,1283,2021-03-12T20:17:10Z,2021-04-01T19:27:29Z,2021-10-11T20:56:26Z,MERGED,True,37,13,3,https://github.com/ailin-nemui,fail redirects on EFNet/freenode 263,1,['auto-merge'],https://github.com/irssi/irssi/pull/1283,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1283#issuecomment-798950208,,"to add to the insult, Ratbox also sends a 315, but it sends it after the 263 and it sends it with argument * so Irssi has no way to match it against the requested /who argument",True,{}
irssi/irssi,https://github.com/irssi/irssi,1283,2021-03-12T20:17:10Z,2021-04-01T19:27:29Z,2021-10-11T20:56:26Z,MERGED,True,37,13,3,https://github.com/ailin-nemui,fail redirects on EFNet/freenode 263,1,['auto-merge'],https://github.com/irssi/irssi/pull/1283,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1283#issuecomment-800192419,,"the same happens on EFNet, thanks @edk0",True,{}
irssi/irssi,https://github.com/irssi/irssi,1283,2021-03-12T20:17:10Z,2021-04-01T19:27:29Z,2021-10-11T20:56:26Z,MERGED,True,37,13,3,https://github.com/ailin-nemui,fail redirects on EFNet/freenode 263,1,['auto-merge'],https://github.com/irssi/irssi/pull/1283,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1283#issuecomment-803853866,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1284,2021-03-12T22:18:17Z,2021-04-01T19:27:12Z,2021-10-11T20:56:26Z,MERGED,True,45,4,1,https://github.com/ailin-nemui,printformats on TextDest and other modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1284,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1284,,,True,{'HEART': ['https://github.com/jesopo']}
irssi/irssi,https://github.com/irssi/irssi,1284,2021-03-12T22:18:17Z,2021-04-01T19:27:12Z,2021-10-11T20:56:26Z,MERGED,True,45,4,1,https://github.com/ailin-nemui,printformats on TextDest and other modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1284,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1284#issuecomment-798949989,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1284,2021-03-12T22:18:17Z,2021-04-01T19:27:12Z,2021-10-11T20:56:26Z,MERGED,True,45,4,1,https://github.com/ailin-nemui,printformats on TextDest and other modules,1,['auto-merge'],https://github.com/irssi/irssi/pull/1284,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1284#issuecomment-886084023,,"$...->format_create_dest(...)->printformat(""format"", args...) or ...->printformat_module(""module"", ""format"", args...)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1285,2021-03-13T20:51:09Z,2021-04-01T19:26:11Z,2021-04-01T19:26:14Z,CLOSED,False,0,0,0,https://github.com/ailin-nemui,add format_string_expand to Perl,0,['auto-merge'],https://github.com/irssi/irssi/pull/1285,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1285,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1285,2021-03-13T20:51:09Z,2021-04-01T19:26:11Z,2021-04-01T19:26:14Z,CLOSED,False,0,0,0,https://github.com/ailin-nemui,add format_string_expand to Perl,0,['auto-merge'],https://github.com/irssi/irssi/pull/1285,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1285#issuecomment-798949619,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1286,2021-03-14T17:32:14Z,2021-04-01T19:24:18Z,2021-10-11T20:56:27Z,MERGED,True,240,8,10,https://github.com/ailin-nemui,add format_string_expand and format_string_unexpand methods to Perl,3,[],https://github.com/irssi/irssi/pull/1286,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1286,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1287,2021-03-14T17:53:51Z,2021-03-20T18:02:20Z,2021-10-11T20:56:27Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,"update clang-format to clang-format-11, fixes enum bug",1,['auto-merge'],https://github.com/irssi/irssi/pull/1287,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1287,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1287,2021-03-14T17:53:51Z,2021-03-20T18:02:20Z,2021-10-11T20:56:27Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,"update clang-format to clang-format-11, fixes enum bug",1,['auto-merge'],https://github.com/irssi/irssi/pull/1287,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1287#issuecomment-798949591,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1287,2021-03-14T17:53:51Z,2021-03-20T18:02:20Z,2021-10-11T20:56:27Z,MERGED,True,4,2,1,https://github.com/ailin-nemui,"update clang-format to clang-format-11, fixes enum bug",1,['auto-merge'],https://github.com/irssi/irssi/pull/1287,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1287#issuecomment-798950420,,"Example of the bug:
diff --git a/src/fe-text/textbuffer.h b/src/fe-text/textbuffer.h
index 5f5f9a2..a8b230a 100644
--- a/src/fe-text/textbuffer.h
+++ b/src/fe-text/textbuffer.h
@@ -11,11 +11,10 @@ enum {
 	LINE_CMD_EOL=0x80,	/* line ends here */
 };
 
-enum {
-	COLORING_STRIP = 0,
-	COLORING_EXPAND = 1,
-	COLORING_UNEXPAND = 2,
-	COLORING_RAW = 3,
+enum { COLORING_STRIP = 0,
+       COLORING_EXPAND = 1,
+       COLORING_UNEXPAND = 2,
+       COLORING_RAW = 3,
 };
 
 struct _TEXT_BUFFER_FORMAT_REC;

https://github.com/irssi/irssi/runs/2107467912?check_suite_focus=true",True,{}
irssi/irssi,https://github.com/irssi/irssi,1288,2021-03-17T20:32:43Z,2021-04-01T19:24:01Z,2021-10-11T20:56:28Z,MERGED,True,10,1,3,https://github.com/jesopo,add IRC_CHATNET_REC->usermode to perl chatnet hashes,2,['auto-merge'],https://github.com/irssi/irssi/pull/1288,https://github.com/jesopo,1,https://github.com/irssi/irssi/pull/1288,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1288,2021-03-17T20:32:43Z,2021-04-01T19:24:01Z,2021-10-11T20:56:28Z,MERGED,True,10,1,3,https://github.com/jesopo,add IRC_CHATNET_REC->usermode to perl chatnet hashes,2,['auto-merge'],https://github.com/irssi/irssi/pull/1288,https://github.com/jesopo,2,https://github.com/irssi/irssi/pull/1288#issuecomment-801447533,,the include reordering that clang-format wants breaks stuff >:O,True,{}
irssi/irssi,https://github.com/irssi/irssi,1288,2021-03-17T20:32:43Z,2021-04-01T19:24:01Z,2021-10-11T20:56:28Z,MERGED,True,10,1,3,https://github.com/jesopo,add IRC_CHATNET_REC->usermode to perl chatnet hashes,2,['auto-merge'],https://github.com/irssi/irssi/pull/1288,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1288#issuecomment-803854420,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/mistydemeo,1,https://github.com/irssi/irssi/pull/1290,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.","If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.",True,{'HEART': ['https://github.com/Julian']}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1290#issuecomment-808697849,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.","thanks for the contribution! small nit pick, could you indent the snippet in the configure.ac so it is visually within the if",True,{}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/mistydemeo,3,https://github.com/irssi/irssi/pull/1290#issuecomment-808769811,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.",Sure thing! Done.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1290#issuecomment-808823115,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.","I tested it on Solaris, works as expected",True,{}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1290#issuecomment-808823157,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/carlocab,6,https://github.com/irssi/irssi/pull/1290#issuecomment-818724223,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.","Just to double-check: this landed in 1.2.3, right?
I wasn't sure because the tag doesn't show up in the merged commit. This would be good to know before merging Homebrew/homebrew-core#75094, which removes patches backported from this PR.
Thanks!",True,{}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/mistydemeo,7,https://github.com/irssi/irssi/pull/1290#issuecomment-818870044,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.","Yes, I see this in 1.2.3's source: https://github.com/irssi/irssi/blob/1.2.3/configure.ac#L372-L374 Looks like it made it into the generated configure too.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1290,2021-03-27T02:24:55Z,2021-04-01T19:28:04Z,2021-10-12T13:57:03Z,MERGED,True,10,0,3,https://github.com/mistydemeo,Add a check for term.h,1,['auto-merge'],https://github.com/irssi/irssi/pull/1290,https://github.com/carlocab,8,https://github.com/irssi/irssi/pull/1290#issuecomment-818875817,"If term.h is present, use that instead of defining prototypes for the terminfo functions in terminfo-core.c. This causes problems on certain platforms (e.g. Apple aarch64) due to the functions being prototyped as non-variadic but called as variadic. If term.h isn't found, it falls back to the old behaviour.
This fixes #1238; I was able to test on my Apple ARM Mac and it builds/works as expected using the system curses. I wasn't able to test the meson build since it's failing for me for unrelated reasons, but I think my fix should fix that as well.","Saw that too; just wanted to make sure I wasn't missing anything. Thanks, @mistydemeo.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1291,2021-04-01T19:04:10Z,2021-04-01T19:28:16Z,2021-04-08T22:15:10Z,MERGED,True,0,2,1,https://github.com/ailin-nemui,remove unused bool include,1,[],https://github.com/irssi/irssi/pull/1291,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1291,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1291,2021-04-01T19:04:10Z,2021-04-01T19:28:16Z,2021-04-08T22:15:10Z,MERGED,True,0,2,1,https://github.com/ailin-nemui,remove unused bool include,1,[],https://github.com/irssi/irssi/pull/1291,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1291#issuecomment-812122920,,also fixes compilation on solaris,True,{}
irssi/irssi,https://github.com/irssi/irssi,1292,2021-04-01T19:53:38Z,2021-04-01T20:13:01Z,2021-04-08T22:15:10Z,MERGED,True,5,0,1,https://github.com/ailin-nemui,don't bother if we don't have a nick,1,[],https://github.com/irssi/irssi/pull/1292,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1292,Credit to OSS-Fuzz,Credit to OSS-Fuzz,True,{}
irssi/irssi,https://github.com/irssi/irssi,1293,2021-04-02T11:21:43Z,2021-04-02T12:44:33Z,2021-04-08T22:15:11Z,MERGED,True,1,0,1,https://github.com/ihsinme,fix memory leak.,1,[],https://github.com/irssi/irssi/pull/1293,https://github.com/ihsinme,1,https://github.com/irssi/irssi/pull/1293,"It seems to me that you have a memory leak in this area.
however, it is easily accessible from outside, which makes it dangerous.
I suggest a simple fix.","It seems to me that you have a memory leak in this area.
however, it is easily accessible from outside, which makes it dangerous.
I suggest a simple fix.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1293,2021-04-02T11:21:43Z,2021-04-02T12:44:33Z,2021-04-08T22:15:11Z,MERGED,True,1,0,1,https://github.com/ihsinme,fix memory leak.,1,[],https://github.com/irssi/irssi/pull/1293,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1293#issuecomment-812514135,"It seems to me that you have a memory leak in this area.
however, it is easily accessible from outside, which makes it dangerous.
I suggest a simple fix.",thanks,True,{}
irssi/irssi,https://github.com/irssi/irssi,1295,2021-04-03T19:25:26Z,2021-04-11T11:24:21Z,2021-10-11T20:56:29Z,MERGED,True,36,1,4,https://github.com/ailin-nemui,autoload modules from default setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/1295,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1295,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1295,2021-04-03T19:25:26Z,2021-04-11T11:24:21Z,2021-10-11T20:56:29Z,MERGED,True,36,1,4,https://github.com/ailin-nemui,autoload modules from default setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/1295,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1295#issuecomment-812914178,,a replacement for the startup file when it comes to /load,True,{}
irssi/irssi,https://github.com/irssi/irssi,1295,2021-04-03T19:25:26Z,2021-04-11T11:24:21Z,2021-10-11T20:56:29Z,MERGED,True,36,1,4,https://github.com/ailin-nemui,autoload modules from default setting,1,['auto-merge'],https://github.com/irssi/irssi/pull/1295,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1295#issuecomment-812915747,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1296,2021-04-03T19:26:07Z,2022-04-25T22:50:05Z,2022-04-25T22:50:06Z,CLOSED,False,1782,545,106,https://github.com/ailin-nemui,autoload the IRC module,147,[],https://github.com/irssi/irssi/pull/1296,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1296,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1296,2021-04-03T19:26:07Z,2022-04-25T22:50:05Z,2022-04-25T22:50:06Z,CLOSED,False,1782,545,106,https://github.com/ailin-nemui,autoload the IRC module,147,[],https://github.com/irssi/irssi/pull/1296,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1296#issuecomment-812914356,,"a tracking issue
currently, Irssi creates dummy protocols which crash everything. The config loading is done into a dummy protocol (for example CHATNET_REC) which is later cast to the IRC_CHATNET_REC when the IRC protocol is loaded, but now of course these objects have the wrong memory",True,{}
irssi/irssi,https://github.com/irssi/irssi,1296,2021-04-03T19:26:07Z,2022-04-25T22:50:05Z,2022-04-25T22:50:06Z,CLOSED,False,1782,545,106,https://github.com/ailin-nemui,autoload the IRC module,147,[],https://github.com/irssi/irssi/pull/1296,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1296#issuecomment-932151331,,"Ticho> IIRC the exact problem I was was that my matrix server setup struct was created as an irc server setup struct, with all the irc module specific extra members set and initialized, so I was accessing wrong memory locations when I casted it to MATRIX_SERVER_SETUP_REC and reached inside",True,{}
irssi/irssi,https://github.com/irssi/irssi,1296,2021-04-03T19:26:07Z,2022-04-25T22:50:05Z,2022-04-25T22:50:06Z,CLOSED,False,1782,545,106,https://github.com/ailin-nemui,autoload the IRC module,147,[],https://github.com/irssi/irssi/pull/1296,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1296#issuecomment-1064873313,,merged into ailin-nemui#42,True,{}
irssi/irssi,https://github.com/irssi/irssi,1297,2021-04-03T19:33:01Z,2021-04-11T11:24:42Z,2021-10-11T20:56:30Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,missing strdup on netsplits w/o chan,1,['auto-merge'],https://github.com/irssi/irssi/pull/1297,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1297,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1297,2021-04-03T19:33:01Z,2021-04-11T11:24:42Z,2021-10-11T20:56:30Z,MERGED,True,3,3,1,https://github.com/ailin-nemui,missing strdup on netsplits w/o chan,1,['auto-merge'],https://github.com/irssi/irssi/pull/1297,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1297#issuecomment-812915841,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1298,2021-04-03T20:38:43Z,2021-04-08T13:46:19Z,2021-04-08T15:21:35Z,MERGED,True,18,5,1,https://github.com/ailin-nemui,fix crash on /connect -tls,3,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1298,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1298,fixes #1239,fixes #1239,True,{}
irssi/irssi,https://github.com/irssi/irssi,1298,2021-04-03T20:38:43Z,2021-04-08T13:46:19Z,2021-04-08T15:21:35Z,MERGED,True,18,5,1,https://github.com/ailin-nemui,fix crash on /connect -tls,3,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1298,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1298#issuecomment-813007080,fixes #1239,confirmed by Koffa,True,{}
irssi/irssi,https://github.com/irssi/irssi,1298,2021-04-03T20:38:43Z,2021-04-08T13:46:19Z,2021-04-08T15:21:35Z,MERGED,True,18,5,1,https://github.com/ailin-nemui,fix crash on /connect -tls,3,"['auto-merge', 'z-affects-1.2.2']",https://github.com/irssi/irssi/pull/1298,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1298#issuecomment-813007100,fixes #1239,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1299,2021-04-07T09:46:44Z,2021-04-08T15:27:47Z,2021-04-08T15:33:38Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,fail on empty text,1,['z-affects-1.2.2'],https://github.com/irssi/irssi/pull/1299,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1299,reported by @dwfreed,reported by @dwfreed,True,{}
irssi/irssi,https://github.com/irssi/irssi,1299,2021-04-07T09:46:44Z,2021-04-08T15:27:47Z,2021-04-08T15:33:38Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,fail on empty text,1,['z-affects-1.2.2'],https://github.com/irssi/irssi/pull/1299,https://github.com/dwfreed,2,https://github.com/irssi/irssi/pull/1299#issuecomment-814781026,reported by @dwfreed,"lastlog reuses the same GString with every call of textbuffer_line2text, and depends on this function truncating the GString, otherwise when this particular edge case triggers, you'll end up with multiple copies of the same line printed by lastlog.  Either test after the truncation, or make lastlog do the truncation itself before calling textbuffer_line2text.
(Originally reported to me by @mnordhoff)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1299,2021-04-07T09:46:44Z,2021-04-08T15:27:47Z,2021-04-08T15:33:38Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,fail on empty text,1,['z-affects-1.2.2'],https://github.com/irssi/irssi/pull/1299,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1299#issuecomment-814798937,reported by @dwfreed,moved it to after the truncation. the actual bug (reason unclear) is the line not having a text,True,{}
irssi/irssi,https://github.com/irssi/irssi,1299,2021-04-07T09:46:44Z,2021-04-08T15:27:47Z,2021-04-08T15:33:38Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,fail on empty text,1,['z-affects-1.2.2'],https://github.com/irssi/irssi/pull/1299,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1299#issuecomment-815674321,reported by @dwfreed,#1281,True,{}
irssi/irssi,https://github.com/irssi/irssi,1302,2021-04-10T08:33:03Z,2021-04-18T10:01:25Z,2021-10-11T20:56:30Z,MERGED,True,2,0,1,https://github.com/rkta,Ignore files generated by ./autogen.sh,1,['auto-merge'],https://github.com/irssi/irssi/pull/1302,https://github.com/rkta,1,https://github.com/irssi/irssi/pull/1302,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1302,2021-04-10T08:33:03Z,2021-04-18T10:01:25Z,2021-10-11T20:56:30Z,MERGED,True,2,0,1,https://github.com/rkta,Ignore files generated by ./autogen.sh,1,['auto-merge'],https://github.com/irssi/irssi/pull/1302,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1302#issuecomment-818708250,,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1304,2021-04-20T07:11:35Z,2021-04-20T08:27:33Z,2021-10-11T20:56:31Z,MERGED,True,4,1,2,https://github.com/ailin-nemui,fuzz test,1,[],https://github.com/irssi/irssi/pull/1304,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1304,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1304,2021-04-20T07:11:35Z,2021-04-20T08:27:33Z,2021-10-11T20:56:31Z,MERGED,True,4,1,2,https://github.com/ailin-nemui,fuzz test,1,[],https://github.com/irssi/irssi/pull/1304,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1304#issuecomment-823086272,,Testing for Oss-Fuzz 33444,True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/alarixnia,1,https://github.com/irssi/irssi/pull/1305,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.","Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1305#issuecomment-826069276,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",that's what you get from trying to fix apple :(,True,{'LAUGH': ['https://github.com/alarixnia']}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1305#issuecomment-826077578,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",nb we don't have tiparm on Solaris 5.10,True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/alarixnia,4,https://github.com/irssi/irssi/pull/1305#issuecomment-826086004,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",@ailin-nemui does irssi compile using solaris 10 curses? i'd expect it not to because their tparm is also fixed-argument,True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/ailin-nemui,5,https://github.com/irssi/irssi/pull/1305#issuecomment-826086352,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",maybe we have to revert the apple patch and go back to not including term.h,True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/alarixnia,6,https://github.com/irssi/irssi/pull/1305#issuecomment-826086699,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.","that's fine by me, I'd only worry about it breaking again in the future because of people being unaware of this ncurses vs. other quirk (or being unaware that there's an other to ncurses tbh)",True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/ailin-nemui,7,https://github.com/irssi/irssi/pull/1305#issuecomment-826086945,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",@mistydemeo any ideas?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/alarixnia,8,https://github.com/irssi/irssi/pull/1305#issuecomment-826090158,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.","FWIW my first version of this patch just added the missing arguments to tparm(), but it does add a lot of noise to the code.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/ailin-nemui,9,https://github.com/irssi/irssi/pull/1305#issuecomment-826143471,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",for the time being I have attached a no-term.h.patch to the releases page. sorry for the inconvenience,True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/mistydemeo,10,https://github.com/irssi/irssi/pull/1305#issuecomment-826372460,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.","I wonder if we can add a check for tiparm and set a macro which decides whether to use tparm or tiparm based on that?

FWIW my first version of this patch just added the missing arguments to tparm(), but it does add a lot of noise to the code.

How ugly is it? Sounds like it might actually be a good solution.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1305,2021-04-24T08:34:31Z,2021-05-02T13:13:57Z,2021-10-11T20:56:31Z,CLOSED,False,47,47,1,https://github.com/alarixnia,Fix compat with NetBSD libcurses by using tiparm() instead of tparm(),1,['z-affects-1.2.3'],https://github.com/irssi/irssi/pull/1305,https://github.com/ailin-nemui,11,https://github.com/irssi/irssi/pull/1305#issuecomment-826813368,"Previously, irssi defined its own tparm() prototype, so passing a variable number of arguments worked.
However, since 0b82f14, <term.h> in included, which on systems using NetBSD's libcurses instead of ncurses, gives the X/Open compliant definition of tparm, which does not work with a variable number of arguments, resulting in a build error.
tiparm() is a variable-argument version of tparm() supported by both ncurses and NetBSD's libcurses. It was added to the X/Open Curses standard in Issue 7, the final version of which was released in November 2009.
from the ncurses man page:

X/Open Curses  prototypes tparm with a fixed number of parameters,
rather than a variable argument list.
This implementation uses a variable argument list, but can be  con-
figured  to  use  the  fixed-parameter list.  Portable applications
should provide 9 parameters after the format; zeroes are  fine  for
this purpose.
In  response  to review comments by Thomas E. Dickey, X/Open Curses
Issue 7 proposed the tiparm function in mid-2009.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1308,2021-04-26T08:35:35Z,2021-05-02T07:02:46Z,2021-10-11T20:56:32Z,MERGED,True,55,53,1,https://github.com/alarixnia,"Fix build on operating systems with X/Open Curses, version 2",2,"['auto-merge', 'z-affects-1.2.3']",https://github.com/irssi/irssi/pull/1308,https://github.com/alarixnia,1,https://github.com/irssi/irssi/pull/1308,"Add the missing arguments to tparm. X/Open Curses specifies tparm takes a fixed number of 10 arguments, while ncurses has implemented it as a varargs function. tiparm is a standardized version of varargs tparm, support in both NetBSD libcurses and ncurses, but not by older versions of Solaris.
This is an alternate fix to the one proposed in #1305 that should keep compatibility with older versions of Solaris by avoiding tiparm.","Add the missing arguments to tparm. X/Open Curses specifies tparm takes a fixed number of 10 arguments, while ncurses has implemented it as a varargs function. tiparm is a standardized version of varargs tparm, support in both NetBSD libcurses and ncurses, but not by older versions of Solaris.
This is an alternate fix to the one proposed in #1305 that should keep compatibility with older versions of Solaris by avoiding tiparm.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1308,2021-04-26T08:35:35Z,2021-05-02T07:02:46Z,2021-10-11T20:56:32Z,MERGED,True,55,53,1,https://github.com/alarixnia,"Fix build on operating systems with X/Open Curses, version 2",2,"['auto-merge', 'z-affects-1.2.3']",https://github.com/irssi/irssi/pull/1308,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1308#issuecomment-829934018,"Add the missing arguments to tparm. X/Open Curses specifies tparm takes a fixed number of 10 arguments, while ncurses has implemented it as a varargs function. tiparm is a standardized version of varargs tparm, support in both NetBSD libcurses and ncurses, but not by older versions of Solaris.
This is an alternate fix to the one proposed in #1305 that should keep compatibility with older versions of Solaris by avoiding tiparm.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1312,2021-05-10T06:35:09Z,2021-05-17T08:54:22Z,2021-10-11T20:56:33Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,slightly improve nocap detection,1,['auto-merge'],https://github.com/irssi/irssi/pull/1312,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1312,Fixes #1311,Fixes #1311,True,{'THUMBS_UP': ['https://github.com/kkabrams']}
irssi/irssi,https://github.com/irssi/irssi,1312,2021-05-10T06:35:09Z,2021-05-17T08:54:22Z,2021-10-11T20:56:33Z,MERGED,True,2,1,1,https://github.com/ailin-nemui,slightly improve nocap detection,1,['auto-merge'],https://github.com/irssi/irssi/pull/1312,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1312#issuecomment-836451708,Fixes #1311,@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1313,2021-05-10T08:13:44Z,2021-05-10T09:18:41Z,2021-10-11T20:56:33Z,MERGED,True,10,1,2,https://github.com/ailin-nemui,downgrade meson in github actions,1,[],https://github.com/irssi/irssi/pull/1313,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1313,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1314,2021-05-10T11:07:31Z,2021-05-10T11:14:41Z,2021-10-11T20:56:34Z,MERGED,True,6,3,3,https://github.com/ailin-nemui,fix build with meson 0.58.0,1,[],https://github.com/irssi/irssi/pull/1314,https://github.com/ailin-nemui,1,https://github.com/irssi/irssi/pull/1314,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1314,2021-05-10T11:07:31Z,2021-05-10T11:14:41Z,2021-10-11T20:56:34Z,MERGED,True,6,3,3,https://github.com/ailin-nemui,fix build with meson 0.58.0,1,[],https://github.com/irssi/irssi/pull/1314,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1314#issuecomment-836567805,,"See mesonbuild/meson#8700
thanks @eli-schwartz",True,{}
irssi/irssi,https://github.com/irssi/irssi,1315,2021-05-15T16:12:23Z,2021-05-17T12:43:31Z,2021-10-11T20:56:34Z,MERGED,True,1,1,1,https://github.com/pekdon,"Use g_strndup, strndup is not available on old platforms",1,['auto-merge'],https://github.com/irssi/irssi/pull/1315,https://github.com/pekdon,1,https://github.com/irssi/irssi/pull/1315,"strndup is not available on Solaris 10, to ensure building is ok use
glib function.","strndup is not available on Solaris 10, to ensure building is ok use
glib function.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1315,2021-05-15T16:12:23Z,2021-05-17T12:43:31Z,2021-10-11T20:56:34Z,MERGED,True,1,1,1,https://github.com/pekdon,"Use g_strndup, strndup is not available on old platforms",1,['auto-merge'],https://github.com/irssi/irssi/pull/1315,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1315#issuecomment-842147308,"strndup is not available on Solaris 10, to ensure building is ok use
glib function.",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1316,2021-05-20T07:41:22Z,2021-05-23T16:25:03Z,2021-10-11T20:56:35Z,MERGED,True,4,0,1,https://github.com/FeepingCreature,"Add aliases for ns, ms, os, cs shorthand commands supported by many servers to message services easily",1,[],https://github.com/irssi/irssi/pull/1316,https://github.com/FeepingCreature,1,https://github.com/irssi/irssi/pull/1316,"Right now, you have to either do /quote cs ... or /msg chanserv ..., raising potential for leaking information via typos.
Tested on Esper, Freenode and Libera.","Right now, you have to either do /quote cs ... or /msg chanserv ..., raising potential for leaking information via typos.
Tested on Esper, Freenode and Libera.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1316,2021-05-20T07:41:22Z,2021-05-23T16:25:03Z,2021-10-11T20:56:35Z,MERGED,True,4,0,1,https://github.com/FeepingCreature,"Add aliases for ns, ms, os, cs shorthand commands supported by many servers to message services easily",1,[],https://github.com/irssi/irssi/pull/1316,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1316#issuecomment-844834482,"Right now, you have to either do /quote cs ... or /msg chanserv ..., raising potential for leaking information via typos.
Tested on Esper, Freenode and Libera.","Thanks for this pull request, however I believe that the Irssi project prefers to do these commands yourself. Every user can set up their own aliases for example /alias ns quote ns
@irssi/developers ?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1316,2021-05-20T07:41:22Z,2021-05-23T16:25:03Z,2021-10-11T20:56:35Z,MERGED,True,4,0,1,https://github.com/FeepingCreature,"Add aliases for ns, ms, os, cs shorthand commands supported by many servers to message services easily",1,[],https://github.com/irssi/irssi/pull/1316,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1316#issuecomment-844837748,"Right now, you have to either do /quote cs ... or /msg chanserv ..., raising potential for leaking information via typos.
Tested on Esper, Freenode and Libera.","I don't mind adding default aliases, those commands are often referenced in support articles so it would be good if irssi knew what to do with them without the user having to ask for help when stuff fail",True,{}
irssi/irssi,https://github.com/irssi/irssi,1316,2021-05-20T07:41:22Z,2021-05-23T16:25:03Z,2021-10-11T20:56:35Z,MERGED,True,4,0,1,https://github.com/FeepingCreature,"Add aliases for ns, ms, os, cs shorthand commands supported by many servers to message services easily",1,[],https://github.com/irssi/irssi/pull/1316,https://github.com/FeepingCreature,4,https://github.com/irssi/irssi/pull/1316#issuecomment-844852450,"Right now, you have to either do /quote cs ... or /msg chanserv ..., raising potential for leaking information via typos.
Tested on Esper, Freenode and Libera.",Switched to aliases.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1316,2021-05-20T07:41:22Z,2021-05-23T16:25:03Z,2021-10-11T20:56:35Z,MERGED,True,4,0,1,https://github.com/FeepingCreature,"Add aliases for ns, ms, os, cs shorthand commands supported by many servers to message services easily",1,[],https://github.com/irssi/irssi/pull/1316,https://github.com/dequis,5,https://github.com/irssi/irssi/pull/1316#issuecomment-846588561,"Right now, you have to either do /quote cs ... or /msg chanserv ..., raising potential for leaking information via typos.
Tested on Esper, Freenode and Libera.",I'm also ok with these as aliases,True,{}
irssi/irssi,https://github.com/irssi/irssi,1322,2021-05-26T03:46:48Z,2022-04-25T17:09:47Z,2022-04-25T17:09:48Z,MERGED,True,1,1,1,https://github.com/ffrogman,Fix cursor getting stuck for auto completions that changes case,1,[],https://github.com/irssi/irssi/pull/1322,https://github.com/ffrogman,1,https://github.com/irssi/irssi/pull/1322,"Fixes #1176
So I realized autocomplete code is case insensitive - I did not change that behavior. For example if you only define the following autocomplete:  abccd -> ABCCD. abccd, aBccD, ABcCD all will convert to ABCCD. This also means ABCCD would convert to the identical string ABCCD. This is the source of the bug
This bug was reproducible for any complete that exclusively changes the case of letters and no other character changes; :d -> :D, Ffrogman -> ffrogman, FfroGmAn -> ffrogman..
The autocomplete would return a match for these and the replacement would happen every time space was pressed - even after the completion was already made. After an auto completion the cursor jumps to one character after the completion. So every space would trigger another completion and reset the cursor even though there would be no change.
Fix is to stop trying to replace these identical strings if they are already. There's no reason to do the work of swapping out identical strings.","Fixes #1176
So I realized autocomplete code is case insensitive - I did not change that behavior. For example if you only define the following autocomplete:  abccd -> ABCCD. abccd, aBccD, ABcCD all will convert to ABCCD. This also means ABCCD would convert to the identical string ABCCD. This is the source of the bug
This bug was reproducible for any complete that exclusively changes the case of letters and no other character changes; :d -> :D, Ffrogman -> ffrogman, FfroGmAn -> ffrogman..
The autocomplete would return a match for these and the replacement would happen every time space was pressed - even after the completion was already made. After an auto completion the cursor jumps to one character after the completion. So every space would trigger another completion and reset the cursor even though there would be no change.
Fix is to stop trying to replace these identical strings if they are already. There's no reason to do the work of swapping out identical strings.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1322,2021-05-26T03:46:48Z,2022-04-25T17:09:47Z,2022-04-25T17:09:48Z,MERGED,True,1,1,1,https://github.com/ffrogman,Fix cursor getting stuck for auto completions that changes case,1,[],https://github.com/irssi/irssi/pull/1322,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1322#issuecomment-1064232407,"Fixes #1176
So I realized autocomplete code is case insensitive - I did not change that behavior. For example if you only define the following autocomplete:  abccd -> ABCCD. abccd, aBccD, ABcCD all will convert to ABCCD. This also means ABCCD would convert to the identical string ABCCD. This is the source of the bug
This bug was reproducible for any complete that exclusively changes the case of letters and no other character changes; :d -> :D, Ffrogman -> ffrogman, FfroGmAn -> ffrogman..
The autocomplete would return a match for these and the replacement would happen every time space was pressed - even after the completion was already made. After an auto completion the cursor jumps to one character after the completion. So every space would trigger another completion and reset the cursor even though there would be no change.
Fix is to stop trying to replace these identical strings if they are already. There's no reason to do the work of swapping out identical strings.",merged into ailin-nemui#8,True,{}
irssi/irssi,https://github.com/irssi/irssi,1327,2021-05-27T15:34:10Z,2021-05-27T15:46:35Z,2021-05-27T15:46:36Z,CLOSED,False,64,58,22,https://github.com/sudoforge,rephrase documentation to be abstract to any given network,1,[],https://github.com/irssi/irssi/pull/1327,https://github.com/sudoforge,1,https://github.com/irssi/irssi/pull/1327,"IRSSI is an IRC client and should not advertise nor be beholden to any
particular IRC network. This patch is inspired by both of the following
commits, and aims to remove references to any particular network in the
documentation, in an effort to avoid potential conflict amongst team and
community members:

- a4486c236a3bf15192d0500b3a1892f7465826c7
- 1ba48840a112dfacf13cbbf6b77c1e3489fefcf8

Based on a (as of this writing) draft blog post [0], and the discussion
that has occurred regarding the blog post, it doesn't appear as if the
IRSSI development team is interested in being transparent about the
reasoning behind its aversion to removing the Freenode network,
specifically related to the comments about ""potential legal
consequences"". By removing references to any given network in the
documentation, this project moves forward without taking a political
stance, but in a way that avoids recommending any given network to
users.

[0]: https://github.com/irssi/irssi.github.io/pull/79","IRSSI is an IRC client and should not advertise nor be beholden to any
particular IRC network. This patch is inspired by both of the following
commits, and aims to remove references to any particular network in the
documentation, in an effort to avoid potential conflict amongst team and
community members:

- a4486c236a3bf15192d0500b3a1892f7465826c7
- 1ba48840a112dfacf13cbbf6b77c1e3489fefcf8

Based on a (as of this writing) draft blog post [0], and the discussion
that has occurred regarding the blog post, it doesn't appear as if the
IRSSI development team is interested in being transparent about the
reasoning behind its aversion to removing the Freenode network,
specifically related to the comments about ""potential legal
consequences"". By removing references to any given network in the
documentation, this project moves forward without taking a political
stance, but in a way that avoids recommending any given network to
users.

[0]: https://github.com/irssi/irssi.github.io/pull/79",True,{}
irssi/irssi,https://github.com/irssi/irssi,1327,2021-05-27T15:34:10Z,2021-05-27T15:46:35Z,2021-05-27T15:46:36Z,CLOSED,False,64,58,22,https://github.com/sudoforge,rephrase documentation to be abstract to any given network,1,[],https://github.com/irssi/irssi/pull/1327,https://github.com/dequis,2,https://github.com/irssi/irssi/pull/1327#issuecomment-849736596,"IRSSI is an IRC client and should not advertise nor be beholden to any
particular IRC network. This patch is inspired by both of the following
commits, and aims to remove references to any particular network in the
documentation, in an effort to avoid potential conflict amongst team and
community members:

- a4486c236a3bf15192d0500b3a1892f7465826c7
- 1ba48840a112dfacf13cbbf6b77c1e3489fefcf8

Based on a (as of this writing) draft blog post [0], and the discussion
that has occurred regarding the blog post, it doesn't appear as if the
IRSSI development team is interested in being transparent about the
reasoning behind its aversion to removing the Freenode network,
specifically related to the comments about ""potential legal
consequences"". By removing references to any given network in the
documentation, this project moves forward without taking a political
stance, but in a way that avoids recommending any given network to
users.

[0]: https://github.com/irssi/irssi.github.io/pull/79",Why are you doing this? You said you don't even use irssi.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1327,2021-05-27T15:34:10Z,2021-05-27T15:46:35Z,2021-05-27T15:46:36Z,CLOSED,False,64,58,22,https://github.com/sudoforge,rephrase documentation to be abstract to any given network,1,[],https://github.com/irssi/irssi/pull/1327,https://github.com/sudoforge,3,https://github.com/irssi/irssi/pull/1327#issuecomment-849739800,"IRSSI is an IRC client and should not advertise nor be beholden to any
particular IRC network. This patch is inspired by both of the following
commits, and aims to remove references to any particular network in the
documentation, in an effort to avoid potential conflict amongst team and
community members:

- a4486c236a3bf15192d0500b3a1892f7465826c7
- 1ba48840a112dfacf13cbbf6b77c1e3489fefcf8

Based on a (as of this writing) draft blog post [0], and the discussion
that has occurred regarding the blog post, it doesn't appear as if the
IRSSI development team is interested in being transparent about the
reasoning behind its aversion to removing the Freenode network,
specifically related to the comments about ""potential legal
consequences"". By removing references to any given network in the
documentation, this project moves forward without taking a political
stance, but in a way that avoids recommending any given network to
users.

[0]: https://github.com/irssi/irssi.github.io/pull/79","Why are you doing this? You said you don't even use irssi.

This is an open source project, and I am submitting what I see as an improvement to this project and its ecosystem for the team's review.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1327,2021-05-27T15:34:10Z,2021-05-27T15:46:35Z,2021-05-27T15:46:36Z,CLOSED,False,64,58,22,https://github.com/sudoforge,rephrase documentation to be abstract to any given network,1,[],https://github.com/irssi/irssi/pull/1327,https://github.com/dequis,4,https://github.com/irssi/irssi/pull/1327#issuecomment-849742417,"IRSSI is an IRC client and should not advertise nor be beholden to any
particular IRC network. This patch is inspired by both of the following
commits, and aims to remove references to any particular network in the
documentation, in an effort to avoid potential conflict amongst team and
community members:

- a4486c236a3bf15192d0500b3a1892f7465826c7
- 1ba48840a112dfacf13cbbf6b77c1e3489fefcf8

Based on a (as of this writing) draft blog post [0], and the discussion
that has occurred regarding the blog post, it doesn't appear as if the
IRSSI development team is interested in being transparent about the
reasoning behind its aversion to removing the Freenode network,
specifically related to the comments about ""potential legal
consequences"". By removing references to any given network in the
documentation, this project moves forward without taking a political
stance, but in a way that avoids recommending any given network to
users.

[0]: https://github.com/irssi/irssi.github.io/pull/79","We already have commits prepared for this, as stated in the plan described in the blog post you're referencing. There was no need for you to do this.
You're also making bold statements in the commit message, which we can't endorse.
I was hoping we wouldn't need to talk about the nonsenes of ""not making a political stance"" again.
I'm sorry if this sounds harsh and you're trying to be helpful but this whole situation is stressful enough already and people appearing out of nowhere with this stuff does not help.",True,"{'THUMBS_UP': ['https://github.com/ben0x539'], 'EYES': ['https://github.com/hftf'], 'HEART': ['https://github.com/FeepingCreature']}"
irssi/irssi,https://github.com/irssi/irssi,1328,2021-05-27T17:51:43Z,2021-05-30T08:20:50Z,2021-05-30T08:20:50Z,MERGED,True,73,65,23,https://github.com/GeertHauwaerts,Applied the updated docs changes in line with the upcoming blog post.,2,[],https://github.com/irssi/irssi/pull/1328,https://github.com/GeertHauwaerts,1,https://github.com/irssi/irssi/pull/1328,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1330,2021-05-30T19:37:21Z,,2022-03-10T16:14:41Z,OPEN,False,8,1,2,https://github.com/guntbert,Add documentation for  escaping some characters,1,[],https://github.com/irssi/irssi/pull/1330,https://github.com/guntbert,1,https://github.com/irssi/irssi/pull/1330,"fixes #1329
this is especially important when using sendcmd to send a password for autologin
The important place is /help network sendcmd but putting the complete text there would clutter things. So I followed what @ailin-nemui suggested and

put it into /help eval
with a pointer in /help network","fixes #1329
this is especially important when using sendcmd to send a password for autologin
The important place is /help network sendcmd but putting the complete text there would clutter things. So I followed what @ailin-nemui suggested and

put it into /help eval
with a pointer in /help network",True,{}
irssi/irssi,https://github.com/irssi/irssi,1330,2021-05-30T19:37:21Z,,2022-03-10T16:14:41Z,OPEN,False,8,1,2,https://github.com/guntbert,Add documentation for  escaping some characters,1,[],https://github.com/irssi/irssi/pull/1330,https://github.com/guntbert,2,https://github.com/irssi/irssi/pull/1330#issuecomment-855458407,"fixes #1329
this is especially important when using sendcmd to send a password for autologin
The important place is /help network sendcmd but putting the complete text there would clutter things. So I followed what @ailin-nemui suggested and

put it into /help eval
with a pointer in /help network",@ailin-nemui do you have time to approve the checking workflows?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1330,2021-05-30T19:37:21Z,,2022-03-10T16:14:41Z,OPEN,False,8,1,2,https://github.com/guntbert,Add documentation for  escaping some characters,1,[],https://github.com/irssi/irssi/pull/1330,https://github.com/ailin-nemui,3,https://github.com/irssi/irssi/pull/1330#issuecomment-855460648,"fixes #1329
this is especially important when using sendcmd to send a password for autologin
The important place is /help network sendcmd but putting the complete text there would clutter things. So I followed what @ailin-nemui suggested and

put it into /help eval
with a pointer in /help network",@irssi/developers,True,{}
irssi/irssi,https://github.com/irssi/irssi,1330,2021-05-30T19:37:21Z,,2022-03-10T16:14:41Z,OPEN,False,8,1,2,https://github.com/guntbert,Add documentation for  escaping some characters,1,[],https://github.com/irssi/irssi/pull/1330,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1330#issuecomment-1064233447,"fixes #1329
this is especially important when using sendcmd to send a password for autologin
The important place is /help network sendcmd but putting the complete text there would clutter things. So I followed what @ailin-nemui suggested and

put it into /help eval
with a pointer in /help network",merged into ailin-nemui#9,True,{}
irssi/irssi,https://github.com/irssi/irssi,1336,2021-06-22T15:40:19Z,,2022-03-10T16:16:07Z,OPEN,False,3,3,2,https://github.com/mteofrancis,Fix minor typos in help text,1,[],https://github.com/irssi/irssi/pull/1336,https://github.com/mteofrancis,1,https://github.com/irssi/irssi/pull/1336,,,True,{'HOORAY': ['https://github.com/vague666']}
irssi/irssi,https://github.com/irssi/irssi,1336,2021-06-22T15:40:19Z,,2022-03-10T16:16:07Z,OPEN,False,3,3,2,https://github.com/mteofrancis,Fix minor typos in help text,1,[],https://github.com/irssi/irssi/pull/1336,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1336#issuecomment-1064234805,,merged into ailin-nemui#10,True,{}
irssi/irssi,https://github.com/irssi/irssi,1337,2021-06-23T18:56:40Z,,2022-03-10T16:15:23Z,OPEN,False,1,1,1,https://github.com/vague666,Allow tag/* in activity_hide_targets,2,[],https://github.com/irssi/irssi/pull/1337,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1337,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1337,2021-06-23T18:56:40Z,,2022-03-10T16:15:23Z,OPEN,False,1,1,1,https://github.com/vague666,Allow tag/* in activity_hide_targets,2,[],https://github.com/irssi/irssi/pull/1337,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1337#issuecomment-1064234130,,merged into ailin-nemui#11,True,{}
irssi/irssi,https://github.com/irssi/irssi,1342,2021-08-27T18:11:43Z,,2021-08-27T18:11:43Z,OPEN,False,21,2,3,https://github.com/progval,Implement the UTF8ONLY IRCv3 specification,1,[],https://github.com/irssi/irssi/pull/1342,https://github.com/progval,1,https://github.com/irssi/irssi/pull/1342,https://ircv3.net/specs/extensions/utf8-only,https://ircv3.net/specs/extensions/utf8-only,True,{}
irssi/irssi,https://github.com/irssi/irssi,1360,2021-12-31T08:21:31Z,,2021-12-31T08:21:31Z,OPEN,False,0,0,0,https://github.com/pixlephonexl,Create .clang-format,1,[],https://github.com/irssi/irssi/pull/1360,https://github.com/pixlephonexl,1,https://github.com/irssi/irssi/pull/1360,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1364,2022-01-31T09:40:31Z,,2022-05-29T21:06:22Z,OPEN,False,13,1,1,https://github.com/vague666,Actlist separator,5,[],https://github.com/irssi/irssi/pull/1364,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1364,Allow changing the actlist separator between items in the list,Allow changing the actlist separator between items in the list,True,{}
irssi/irssi,https://github.com/irssi/irssi,1364,2022-01-31T09:40:31Z,,2022-05-29T21:06:22Z,OPEN,False,13,1,1,https://github.com/vague666,Actlist separator,5,[],https://github.com/irssi/irssi/pull/1364,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1364#issuecomment-1042973165,Allow changing the actlist separator between items in the list,merged into ailin-nemui#61,True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/vague666,1,https://github.com/irssi/irssi/pull/1368,,,True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1368#issuecomment-1061896727,,maybe <time> instead of <str>? compare https://irssi.org/documentation/help/knockout/,True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/vague666,3,https://github.com/irssi/irssi/pull/1368#issuecomment-1062133557,,Does knockout accept time units or is seconds the only valid unit?,True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1368#issuecomment-1062136314,,"iirc it uses the same ""time value"" parsing function",True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/vague666,5,https://github.com/irssi/irssi/pull/1368#issuecomment-1062166234,,@ailin-nemui you'll have to check the errors for the fuzzer and clang-format :),True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1368#issuecomment-1062166989,,they surely can't be caused by fixing the docs ;),True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/vague666,7,https://github.com/irssi/irssi/pull/1368#issuecomment-1062172399,,I sure hope not! :P,True,{}
irssi/irssi,https://github.com/irssi/irssi,1368,2022-03-08T15:21:00Z,,2022-05-29T21:06:23Z,OPEN,False,6,2,2,https://github.com/vague666,Clarify the help for /ignore -time,2,[],https://github.com/irssi/irssi/pull/1368,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1368#issuecomment-1065012799,,merged into ailin-nemui#77,True,{}
irssi/irssi,https://github.com/irssi/irssi,1369,2022-03-22T19:58:05Z,,2022-03-23T09:33:57Z,OPEN,False,838,362,62,https://github.com/tomaw,Irssi nei patches,63,[],https://github.com/irssi/irssi/pull/1369,https://github.com/tomaw,1,https://github.com/irssi/irssi/pull/1369,Let's merge this back in.,Let's merge this back in.,True,{}
irssi/irssi,https://github.com/irssi/irssi,1369,2022-03-22T19:58:05Z,,2022-03-23T09:33:57Z,OPEN,False,838,362,62,https://github.com/tomaw,Irssi nei patches,63,[],https://github.com/irssi/irssi/pull/1369,https://github.com/vague666,2,https://github.com/irssi/irssi/pull/1369#issuecomment-1076149504,Let's merge this back in.,We need to just press the merge button I think :),True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/progval,1,https://github.com/irssi/irssi/pull/1371,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:",True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/ailin-nemui,2,https://github.com/irssi/irssi/pull/1371#issuecomment-1091865453,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","524 is already used to notify about Quarantined channels, it would not be good to bind it as ""help not found""",True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/progval,3,https://github.com/irssi/irssi/pull/1371#issuecomment-1092081252,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","Yes, but ERR_HELPNOTFOUND is more widespread:

524 is ERR_HELPNOTFOUND on irc-ratbox and derivatives (Hybrid, Solanum, Plexus, ...), InspIRCd, and Ergo. This covers 6 of the top 10 networks (according to netsplit.de).
UnrealIRCd may also start using it as ERR_HELPNOTFOUND in a few years depending on client support.
524 is ERR_QUARANTINED on ircu2 derivatives (Nefarious, snircd, ...) except UnrealIRCd. This covers 2 of the top 10.

What do you usually do when numerics clash between servers?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/ailin-nemui,4,https://github.com/irssi/irssi/pull/1371#issuecomment-1104403310,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","we would need to detect which one it is, probably by using a strcmp and see if the response contains :Help, so that we can display the right one. quarantined channels also contain the quarantine reason, wouldn't want to hide that for sure",True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/progval,5,https://github.com/irssi/irssi/pull/1371#issuecomment-1104406595,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","Hmm that might fail because :Help is not guaranteed to be a substring of the ERR_HELPNOTFOUND message.
However, we could check if the second parameter starts with one of the ISUPPORT PREFIX character; it's unlikely to be a valid topic name. Agreed?",True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/ailin-nemui,6,https://github.com/irssi/irssi/pull/1371#issuecomment-1104412741,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","sadly that's not so cool either, if we do /shelp #xxx then it would trigger the quarantine code path??
maybe just leave the 524 unhandled (sad but less work)?
Edit: according to https://www.alien.net.au/irc/irc2numerics.html, 524 could also be in use for ERR_OPERSPVERIFY",True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/progval,7,https://github.com/irssi/irssi/pull/1371#issuecomment-1104437675,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","Ah, sad. I'll remove it, then.",True,{}
irssi/irssi,https://github.com/irssi/irssi,1371,2022-04-01T13:54:56Z,,2022-05-29T21:31:06Z,OPEN,False,59,2,3,https://github.com/progval,Format RPL_HELPSTART/RPL_HELPTXT/RPL_ENDOFHELP,7,[],https://github.com/irssi/irssi/pull/1371,https://github.com/ailin-nemui,8,https://github.com/irssi/irssi/pull/1371#issuecomment-1105722315,"They are typical replies when using the HELP command.
Tested on Ergo, using /quote HELP MODE
Before:

After:","thanks for the improvement, merged into ailin-nemui#82",True,{}
irssi/irssi,https://github.com/irssi/irssi,1372,2022-04-24T20:08:12Z,2022-04-25T17:09:45Z,2022-04-27T13:14:32Z,MERGED,True,1138,440,82,https://github.com/dwfreed,Merge Nei's changes,95,[],https://github.com/irssi/irssi/pull/1372,https://github.com/dwfreed,1,https://github.com/irssi/irssi/pull/1372,,,True,{}
