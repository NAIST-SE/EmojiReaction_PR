pbatard/rufus,https://github.com/pbatard/rufus,688,2016-02-05T12:35:50Z,2016-02-05T13:03:50Z,2019-04-06T13:12:16Z,CLOSED,False,8,2,1,https://github.com/nmargaritis,Updated greek localisation to v1.0.19,1,[],https://github.com/pbatard/rufus/pull/688,https://github.com/nmargaritis,1,https://github.com/pbatard/rufus/pull/688,Update for greek localisation so that v1.0.19 is fully supported.,Update for greek localisation so that v1.0.19 is fully supported.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,688,2016-02-05T12:35:50Z,2016-02-05T13:03:50Z,2019-04-06T13:12:16Z,CLOSED,False,8,2,1,https://github.com/nmargaritis,Updated greek localisation to v1.0.19,1,[],https://github.com/pbatard/rufus/pull/688,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/688#issuecomment-480503078,Update for greek localisation so that v1.0.19 is fully supported.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,750,2016-05-09T13:13:02Z,2016-05-09T16:41:59Z,2019-04-06T13:12:10Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/750,https://github.com/Tmp341,1,https://github.com/pbatard/rufus/pull/750,"Added and translated two lines. But i don't know, whether or not Turkish localization is 100% synchronized with English.","Added and translated two lines. But i don't know, whether or not Turkish localization is 100% synchronized with English.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,750,2016-05-09T13:13:02Z,2016-05-09T16:41:59Z,2019-04-06T13:12:10Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/750,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/750#issuecomment-217918913,"Added and translated two lines. But i don't know, whether or not Turkish localization is 100% synchronized with English.","Thanks. Looks like I had forgotten MSG_286 in the translation ChangeLog, but you picked it up - thansk for spotting it. I have applied your changes now, and your translation should be fully in sync with English.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,750,2016-05-09T13:13:02Z,2016-05-09T16:41:59Z,2019-04-06T13:12:10Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/750,https://github.com/Tmp341,3,https://github.com/pbatard/rufus/pull/750#issuecomment-218420815,"Added and translated two lines. But i don't know, whether or not Turkish localization is 100% synchronized with English.","No problem, but I didn't do that intentionally.
Have you ever edited a line in English, other than adding? If yes, i've gotta check those.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,750,2016-05-09T13:13:02Z,2016-05-09T16:41:59Z,2019-04-06T13:12:10Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/750,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/750#issuecomment-218421239,"Added and translated two lines. But i don't know, whether or not Turkish localization is 100% synchronized with English.","The localization Changelog contains all information about lines that were added/modified. If you want to find out if English lines were changed, look for Changed MSG_### in that file.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,750,2016-05-09T13:13:02Z,2016-05-09T16:41:59Z,2019-04-06T13:12:10Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/750,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/750#issuecomment-480503067,"Added and translated two lines. But i don't know, whether or not Turkish localization is 100% synchronized with English.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,751,2016-05-10T06:45:05Z,2016-05-10T10:57:01Z,2019-04-06T13:12:12Z,CLOSED,False,3,1,1,https://github.com/Chocobo1,Update zh-TW Translation,1,[],https://github.com/pbatard/rufus/pull/751,https://github.com/Chocobo1,1,https://github.com/pbatard/rufus/pull/751,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,751,2016-05-10T06:45:05Z,2016-05-10T10:57:01Z,2019-04-06T13:12:12Z,CLOSED,False,3,1,1,https://github.com/Chocobo1,Update zh-TW Translation,1,[],https://github.com/pbatard/rufus/pull/751,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/751#issuecomment-218124715,,Many thanks for the quick patch!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,751,2016-05-10T06:45:05Z,2016-05-10T10:57:01Z,2019-04-06T13:12:12Z,CLOSED,False,3,1,1,https://github.com/Chocobo1,Update zh-TW Translation,1,[],https://github.com/pbatard/rufus/pull/751,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/751#issuecomment-480503071,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,754,2016-05-12T17:55:52Z,2016-05-12T19:05:35Z,2019-04-06T13:11:53Z,CLOSED,False,1,0,1,https://github.com/Tiryoh,Update Japanese to Version 1.0.20,9,[],https://github.com/pbatard/rufus/pull/754,https://github.com/Tiryoh,1,https://github.com/pbatard/rufus/pull/754,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,754,2016-05-12T17:55:52Z,2016-05-12T19:05:35Z,2019-04-06T13:11:53Z,CLOSED,False,1,0,1,https://github.com/Tiryoh,Update Japanese to Version 1.0.20,9,[],https://github.com/pbatard/rufus/pull/754,https://github.com/Tiryoh,2,https://github.com/pbatard/rufus/pull/754#issuecomment-218837511,,"I'm so sorry for requesting many commits.
I will make sure that this will never happen again.
I added this.
t MSG_287 ""USB接続でないリムーバブルディスクの検出""",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,754,2016-05-12T17:55:52Z,2016-05-12T19:05:35Z,2019-04-06T13:11:53Z,CLOSED,False,1,0,1,https://github.com/Tiryoh,Update Japanese to Version 1.0.20,9,[],https://github.com/pbatard/rufus/pull/754,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/754#issuecomment-218997759,,"I'm so sorry for requesting many commits.

Don't worry about it. Thanks for #755.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,754,2016-05-12T17:55:52Z,2016-05-12T19:05:35Z,2019-04-06T13:11:53Z,CLOSED,False,1,0,1,https://github.com/Tiryoh,Update Japanese to Version 1.0.20,9,[],https://github.com/pbatard/rufus/pull/754,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/754#issuecomment-480503042,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,755,2016-05-12T19:06:39Z,2016-05-13T09:38:27Z,2019-04-06T13:12:08Z,CLOSED,False,1,0,1,https://github.com/Tiryoh,Update Japanese to Version 1.0.20,1,[],https://github.com/pbatard/rufus/pull/755,https://github.com/Tiryoh,1,https://github.com/pbatard/rufus/pull/755,Add Japanese MSG_287,Add Japanese MSG_287,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,755,2016-05-12T19:06:39Z,2016-05-13T09:38:27Z,2019-04-06T13:12:08Z,CLOSED,False,1,0,1,https://github.com/Tiryoh,Update Japanese to Version 1.0.20,1,[],https://github.com/pbatard/rufus/pull/755,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/755#issuecomment-480503064,Add Japanese MSG_287,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,762,2016-05-27T03:12:51Z,2016-05-27T09:52:03Z,2019-04-06T13:12:07Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update Turkish loc,1,[],https://github.com/pbatard/rufus/pull/762,https://github.com/Tmp341,1,https://github.com/pbatard/rufus/pull/762,Updated to the latest.,Updated to the latest.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,762,2016-05-27T03:12:51Z,2016-05-27T09:52:03Z,2019-04-06T13:12:07Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update Turkish loc,1,[],https://github.com/pbatard/rufus/pull/762,https://github.com/Tmp341,2,https://github.com/pbatard/rufus/pull/762#issuecomment-222050547,Updated to the latest.,"Btw, i didn't do that deletion.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,762,2016-05-27T03:12:51Z,2016-05-27T09:52:03Z,2019-04-06T13:12:07Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update Turkish loc,1,[],https://github.com/pbatard/rufus/pull/762,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/762#issuecomment-222106886,Updated to the latest.,"I'm sorry, but I have to reject this request.
I appreciate that you're following the changes to Rufus, but please hold on from submitting change requests for translations until AFTER I have updated res/localization/ChangeLog.txt with a new version.
In other words, until you see changes for 1.0.21 being introduced in ChangeLog.txt, I will not be accepting translation updates, even if the English version has changed.
The reason for that is that there may be many more messages being added/modified for the next version, and with 35 translators to go after, if I were to add every single translation changes as they are introduced, instead of grouping them shortly before a release, I'd spend my life dealing with translation updates.
So, please wait until you see res/localization/ChangeLog.txt being updated. Thank you.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,762,2016-05-27T03:12:51Z,2016-05-27T09:52:03Z,2019-04-06T13:12:07Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update Turkish loc,1,[],https://github.com/pbatard/rufus/pull/762,https://github.com/Tmp341,4,https://github.com/pbatard/rufus/pull/762#issuecomment-222154205,Updated to the latest.,I thought you'll keep it open until you think it's addable.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,762,2016-05-27T03:12:51Z,2016-05-27T09:52:03Z,2019-04-06T13:12:07Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update Turkish loc,1,[],https://github.com/pbatard/rufus/pull/762,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/762#issuecomment-222166822,Updated to the latest.,"Nah. I don't want to keep pull requests open for months, and I think I should be able to remember it.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,762,2016-05-27T03:12:51Z,2016-05-27T09:52:03Z,2019-04-06T13:12:07Z,CLOSED,False,3,1,1,https://github.com/Tmp341,Update Turkish loc,1,[],https://github.com/pbatard/rufus/pull/762,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/762#issuecomment-480503060,Updated to the latest.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/pluto00987,1,https://github.com/pbatard/rufus/pull/801,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.","Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/801#issuecomment-234804422,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.","Thanks, but I'm not sure I see the point of having that in Rufus, especially as we don't create anything ntldr or bootmgr bootable using FAT32.
As you will have seen from the source, we deliberately chose to ignore the fat_32_pe part of ms-sys because there is no real need for it: the only (BIOS) bootable FAT32 drives Rufus creates are for Linux or DOS (as well a few oddities like KolibriOS or ReactOS), but not Windows. Anything BIOS/Windows is forced to NTFS, so that, in most cases, it can't be booted from UEFI, which avoids people installing in UEFI mode when they wanted BIOS mode, and vice versa. So this is the very intentional reason why there aren't any calls for write_fat_32_pe_br() or write_fat_32_nt_br() in the first place. In other words, the new boot record writing cases you are adding with this patch are not meant to ever be selectable.
So the only thing this may add is the ability to report, when you plug a drive, whether it has an existing fat32pe or fat32nt boot record, which is about one line in the log...
Do you have an actual usage scenario, besides detection of the boot record written by a tool other than Rufus, for this patch?
Depending on the increase in size, I may still decide to add the detection part (so that the ms-sys part from Rufus is closer to the current ms-sys), but I don't think I'll add the boot record writing part.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/pluto00987,3,https://github.com/pbatard/rufus/pull/801#issuecomment-235785577,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.","Well, primarily the use case I mentioned: Win PE 2.0+. While I realize Rufus defaults to NTFS for such images, one is still able to click the drop-down and switch back to FAT32. Rufus will happily create a drive with those settings, but as-is it results in a non-working boot disk (BIOS at least). In addition, the cause isn't the least bit obvious. Even as a very experienced system admin, it took me several hours of futzing and testing to finally figure out that Rufus was writing an old-school DOS BR when FAT32 is selected.
I had already read the FAQ about dual-BIOS/UEFI booting being purposefully disabled so I did have a hunch it was 'broken' on purpose. I mostly wrote the patch for fun. I guess it was wishful thinking that you'd accept it.
Still, sticking with your intention, I would suggest either actually disallowing the selection of FAT32 (or FAT or exFAT), or popping up a warning saying THIS WON'T DO WHAT YOU WANT or something to that effect. That might save some future users some hair-pulling like I dealt with.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/801#issuecomment-236027317,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.","one is still able to click the drop-down and switch back to FAT32. Rufus will happily create a drive with those settings

I don't think you are reading the information that is presented to you correctly then.
If you use a Windows ISO and try to select FAT32 with ""MBR for BIOS or UEFI-CSM"", then Rufus will flat out tell you that this is not supported. That is the case even if you try to use the Alt-E trick.
So, really, the ONLY way to get Rufus to accept FAT32 with a Windows ISO is if you select ""GPT for UEFI"" or ""MBR for UEFI"", in which case, Rufus quite explicitly indicates that, whatever you do, the drive
will NOT be BIOS bootable (Just in case this needs to be clarified MBR ≠ BIOS. Oh and there are tooltips for the MBR/GPT for BIOS/UEFI option)

THIS WON'T DO WHAT YOU WANT

Sorry, but if someone did change the default ""MBR for BIOS or UEFI-CSM"" to ""GPT for UEFI"" or ""MBR for UEFI"", which they need to do if they select a Windows ISO (as it will always default to the first one), then they should realize that they have just removed all promise of booting from BIOS.
An additional message would pretty much equate saying ""Hey, user, you don't really read what Rufus is telling you, are you? What part of being only UEFI bootable when only UEFI is present in the dropdown for target system type is so hard to understand?"", which I'd rather not do for obvious reasons.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/pluto00987,5,https://github.com/pbatard/rufus/pull/801#issuecomment-236245487,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.","If you use a Windows ISO and try to select FAT32 with ""MBR for BIOS or UEFI-CSM"", then Rufus will flat out tell you that this is not supported. That is the case even if you try to use the Alt-E trick.

I'm sorry, but that's not the case. Using Rufus 2.10, I select my PE 4.0 ISO, and the settings are populated with ""MBR for BIOS or UEFI-CSM""and ""NTFS"". I can then change the file system to ""FAT32"" and the partition scheme DOES NOT CHANGE. Then I click 'start' and Rufus will go about its business without a complaint.
Maybe what you say is supposed to happen, but it does not. Perhaps some iso check in there isn't accurate for newer PE images.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/pbatard,6,https://github.com/pbatard/rufus/pull/801#issuecomment-236248887,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.","Then I'll need to fix the check, as I only tested it with official Microsoft images, and of course, PE 4.0 ISOs should behave the same. Do you have an example of a public PE 4.0 based ISO I could download to test?",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/pbatard,7,https://github.com/pbatard/rufus/pull/801#issuecomment-236249512,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.","Additionally, a full log from Rufus of how you created your FAT32 with Rufus, from a PE 4.0 image, would help.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,801,2016-07-24T05:36:32Z,2016-08-11T15:14:17Z,2019-04-06T13:12:02Z,CLOSED,False,193,4,9,https://github.com/pluto00987,Use modern FAT32 boot records,1,[],https://github.com/pbatard/rufus/pull/801,https://github.com/apps/lock,8,https://github.com/pbatard/rufus/pull/801#issuecomment-480503054,"Hi.
This adds checks and actions to use nt52 or nt60 FAT32 boot records when appropriate.
The nt60 (ie PE) BR is used extensively for Win PE 2.0+ boot disks.
The nt52 (ie NT) BR may or may not be used in anything common but it might as well be available if the case comes up.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/SetTrend,1,https://github.com/pbatard/rufus/pull/808,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/SetTrend,2,https://github.com/pbatard/rufus/pull/808#issuecomment-237934277,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","I have updated the English and German localization only. If you accept the changes I'll try to revise other languages, too.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/808#issuecomment-237934687,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","As I explained with #807, I have to reject this request for the time being. Sorry.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/SetTrend,4,https://github.com/pbatard/rufus/pull/808#issuecomment-237935204,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.",Er ... all work is done ... You just have to merge. No work needed from your side.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/808#issuecomment-237936205,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","Let me be clearer. Your proposed changes is NOT how I see the UI for Rufus 3.0, which is the version of Rufus where I will be redesigning it. As the creator of Rufus, I hope I am entitled to follow my vision for the UI, which I have been thinking about for the past couple of years, rather than have to accept someone else's. Just moving stuff around is only a small part of how I want the redesign to happen.
I do appreciate your effort, but I just can't see myself applying the changes you propose, so, thanks, but no thanks.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/SetTrend,6,https://github.com/pbatard/rufus/pull/808#issuecomment-237998539,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","Sure, no problem.
I had just been wondering why it should take a couple of years to amend the GUI when it can be done in a few hours. I was supposing you'd probably be involved in more important tasks.
After all, I was just trying to help.
BTW: From what I can tell, you've got a good coding style. It was very easy to survey and straightforward to amend. That's a cachet which is not very common nowadays. 👏 👍",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/pbatard,7,https://github.com/pbatard/rufus/pull/808#issuecomment-238010792,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","I had just been wondering why it should take a couple of years to amend the GUI when it can be done in a few hours. I was supposing you'd probably be involved in more important tasks.

Since you spent some time on this, I'm going to try to answer that.
One of the first thing I want from the redesign is something that will look good at various DPIs and follow the Windows UI design guidelines. For a start, we're not using the font size that Microsoft recommends for modern UI design, so that needs to be fixed. But if we do that, then we need to review all the move/resize business from the .loc file. And then there's the whole ""We had to compute an empirical formula that makes no sense to find out how much space we need to add at various DPIs when we move stuff around (e.g. advanced mode)"". Furthermore, Microsoft is really screwing up UI developers with RC's (but IMO forms is worse coz it adds A LOT of completely superfluous overhead), and we also had to apply ugly workarounds to keep XP and non XP users happy in terms of fonts (and even then, Microsoft still managed to stab us in the back with their braindead use of Unicode). So a MUCH better solution then would be to design something that does away with placing elements in an RC file, so that things flow without having to reposition/resize them manually, and so that, if we decide to adjust font size (or, if has happened in the past, Microsoft decides with Windows 11 that UI should use a different font/font size), we won't have to repeat this whole excruciating exercise of positioning and sizing stuff around, for the base RC as well as for the 36 translations.
So that means writing a mini UI framework that will properly size and position the various UI components. This is pretty much an independent component (such as bled, which I designed when I needed compression support, and found that none of the existing libs satisfied my needs, or efifs, of which I only needed the NTFS driver, but with which I decided to support as many file systems as possible, in case it could help other people). So before I can even start moving a single element for Rufus 3.0, there'll probably need to be a 'noRC' project, that takes care of what I described above in a semi-generic fashion, and that I can integrate in Rufus so that I never ever have to go through a costly manual move/resize exercise when I design a new win32 application or redesign an existing one. That's a long term goal, i.e. something that needs to be crafted properly and with enough dedicated time, to avoid something half assed that falls apart at the first real hurdle. My current estimate is that doing this properly will take about 6 months, during which I don't want to have to be distracted with another major feature.
So, why hasn't this been started yet even though the UI redesign request has been opened for about 3 years now?
Well, for a start, UI redesign is always lower priority compared to non existing features. Let me make that a bit clearer with an example: If people want Windows To Go support, and it's not existing in Rufus, they'll probably be much happier if they get it sooner (even if they have to use a somewhat quirky UI to access the feature) rather than later. So what happened between the time I knew I wanted to redesign the UI and now is me concentrating on adding features (some of which major, necessitating many months of work) rather than rework existing ones like the UI.
Now, because I know that many people are growing impatient about this, I was aiming at starting the UI redesign/noRC work in January this year. However, due to various circumstances, some of which were major and external to development, that couldn't happen. For instance, I still decided prioritizing adding non USB card reader support (which had been requested by many Rufus users) and speeding up checksum computations (when your tool is downloaded A LOT, you kind of have an obligation to save the millions of people who use it as much time as you can, as, the way I see it, not doing so globally adds up to months or years being collectively wasted waiting in front of a screen!), as well as other stuff (you can always take a look at the commit history or ChangeLog to see what I focused on), instead of working on the UI. And the year before that that was Windows To Go, UEFI:NTFS and other stuff that people couldn't do.
Right now, I'm really hoping I'll be able to get started with the 6-month UI redesign in the second half of the year, but we'll have to see what other factors come into play.
And, I'm afraid that, because this is something that I consider crucial to Rufus, and for which (as I hope you can see), I already have a fairly good idea of how I want to proceed, no, I am not willing to delegate this major UI redesign effort to anybody else, or even try to rush a stopgap solution that will only confuse users (throwing UI redesigns on your users every 6 months is the surest way to get them to look elsewhere IMO).",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/SetTrend,8,https://github.com/pbatard/rufus/pull/808#issuecomment-238012466,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","We're absolutely on the same page. Microsoft RC dialog design and its quirks are hell to work with. I've been struggling with that fact for years, too. (And at the eve of Windows 8.1 they finally noticed themselves. Hard to believe they acted deaf for decades.)
May I humbly suggest to switch to Microsoft WPF for your GUI design. It is Microsoft's solution to all your concerns and encapsulates localization, fonts and automatic dialog resizing using a grid layout approach. WPF encapsulates and deals with all the gory details/peculiarities of the different operating systems.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/pbatard,9,https://github.com/pbatard/rufus/pull/808#issuecomment-238013838,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.","Yeah, I looked into WPF a little (which is what I called ""forms"" above), but I'm not convinced. It adds way too much overhead IMO, so I'd rather see what can be achieved without, and if we go full fledged framework, then I'd rather go Qt, so that it could ease the pains of porting Rufus to Linux or OS X (which I'm not really planning to do, but which someone else might) as far as UI is concerned. Maybe I'll change my mind once I've started my own UI mini-framework, but for the time being, I don't think I should have to go the full UI framework route, just as I didn't go the gettext route for localization, but created my own thing which I think turned quite okay.
And of course, that's not to say I won't take suggestions in terms of redesign. Maybe if more people complain about the UI size, I'll look into dual column (or, which is the solution I'd prefer, if I can get a good ""reflow"" from my mini framework, let users decide that for themselves). But I need to have that UI framework first, just like I wasn't ready to accept translations until I had support for .loc files.
I can only apologize for the time I know you spent on the redesign — it's simply still too early for me to accept these requests.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,808,2016-08-05T18:54:11Z,2016-08-05T18:58:34Z,2019-04-06T13:12:04Z,CLOSED,False,109,126,7,https://github.com/SetTrend,GUI amended,2,[],https://github.com/pbatard/rufus/pull/808,https://github.com/apps/lock,10,https://github.com/pbatard/rufus/pull/808#issuecomment-480503056,"Read-only field added showing selected ISO file.
Input elements reorganized to reflect workflow
Revised one-column layout to become two-column layout, having the main window fit 800*600 pixels.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,827,2016-09-10T10:40:30Z,2016-09-12T08:42:52Z,2019-04-06T13:12:00Z,CLOSED,False,3,3,1,https://github.com/dpeukert,[loc] fix two strings in the czech translation,1,[],https://github.com/pbatard/rufus/pull/827,https://github.com/dpeukert,1,https://github.com/pbatard/rufus/pull/827,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,827,2016-09-10T10:40:30Z,2016-09-12T08:42:52Z,2019-04-06T13:12:00Z,CLOSED,False,3,3,1,https://github.com/dpeukert,[loc] fix two strings in the czech translation,1,[],https://github.com/pbatard/rufus/pull/827,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/827#issuecomment-246284399,,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,827,2016-09-10T10:40:30Z,2016-09-12T08:42:52Z,2019-04-06T13:12:00Z,CLOSED,False,3,3,1,https://github.com/dpeukert,[loc] fix two strings in the czech translation,1,[],https://github.com/pbatard/rufus/pull/827,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/827#issuecomment-480503053,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,850,2016-11-10T15:37:43Z,2016-11-11T12:06:05Z,2019-04-06T13:11:58Z,CLOSED,False,19,19,10,https://github.com/aperezdc,Fix case sensitiviness issues by using always lowercase,1,[],https://github.com/pbatard/rufus/pull/850,https://github.com/aperezdc,1,https://github.com/pbatard/rufus/pull/850,"This makes it possible to cross build in a machine with a case-sensitive file system. Tested in Arch Linux, where the following commands will successfully complete a build:
% sudo pacman -S mingw-w64  # Only if it wasn't already installed
% sh configure --host=i686-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32 executable (GUI) Intel 80386, for MS Windows

Doing 64-bit builds seems to be working as well:
% sh configure --host=x86_64-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32+ executable (GUI) x86-64, for MS Windows","This makes it possible to cross build in a machine with a case-sensitive file system. Tested in Arch Linux, where the following commands will successfully complete a build:
% sudo pacman -S mingw-w64  # Only if it wasn't already installed
% sh configure --host=i686-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32 executable (GUI) Intel 80386, for MS Windows

Doing 64-bit builds seems to be working as well:
% sh configure --host=x86_64-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32+ executable (GUI) x86-64, for MS Windows",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,850,2016-11-10T15:37:43Z,2016-11-11T12:06:05Z,2019-04-06T13:11:58Z,CLOSED,False,19,19,10,https://github.com/aperezdc,Fix case sensitiviness issues by using always lowercase,1,[],https://github.com/pbatard/rufus/pull/850,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/850#issuecomment-259943942,"This makes it possible to cross build in a machine with a case-sensitive file system. Tested in Arch Linux, where the following commands will successfully complete a build:
% sudo pacman -S mingw-w64  # Only if it wasn't already installed
% sh configure --host=i686-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32 executable (GUI) Intel 80386, for MS Windows

Doing 64-bit builds seems to be working as well:
% sh configure --host=x86_64-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32+ executable (GUI) x86-64, for MS Windows","Thanks, but the only DOS file that actually needs to be renamed is MODE.COM.
I tend to keep the case of the files as they are supplied by the FreeDOS project, which is why the EGA's are lowercase, and the rest aren't. So I'd rather not move everything to lowercase when it isn't needed, as next time I update FreeDOS, we may end up with case alteration.
For now, I just renamed mode.com → MODE.COM (since that follows the case I have in both the .rc and here). Of course, I also picked the Windows.h to windows.h (which is something Visual Studio automatically capitalizes on its own, and which I always fight again... but it looks like I had missed this one).
While I was at it, I also applied the x permission to the script files, which, at the very least, should allow to invoke ./configure.
Please test and let me know if you still see an issue.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,850,2016-11-10T15:37:43Z,2016-11-11T12:06:05Z,2019-04-06T13:11:58Z,CLOSED,False,19,19,10,https://github.com/aperezdc,Fix case sensitiviness issues by using always lowercase,1,[],https://github.com/pbatard/rufus/pull/850,https://github.com/aperezdc,3,https://github.com/pbatard/rufus/pull/850#issuecomment-260025139,"This makes it possible to cross build in a machine with a case-sensitive file system. Tested in Arch Linux, where the following commands will successfully complete a build:
% sudo pacman -S mingw-w64  # Only if it wasn't already installed
% sh configure --host=i686-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32 executable (GUI) Intel 80386, for MS Windows

Doing 64-bit builds seems to be working as well:
% sh configure --host=x86_64-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32+ executable (GUI) x86-64, for MS Windows","@pbatard: Your explanation about keeping the capitalization in FreeDOS makes sense 😉
I have tried running a build locally with MingGW in Linux after your changes, and it works perfect. Thanks!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,850,2016-11-10T15:37:43Z,2016-11-11T12:06:05Z,2019-04-06T13:11:58Z,CLOSED,False,19,19,10,https://github.com/aperezdc,Fix case sensitiviness issues by using always lowercase,1,[],https://github.com/pbatard/rufus/pull/850,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/850#issuecomment-260025313,"This makes it possible to cross build in a machine with a case-sensitive file system. Tested in Arch Linux, where the following commands will successfully complete a build:
% sudo pacman -S mingw-w64  # Only if it wasn't already installed
% sh configure --host=i686-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32 executable (GUI) Intel 80386, for MS Windows

Doing 64-bit builds seems to be working as well:
% sh configure --host=x86_64-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32+ executable (GUI) x86-64, for MS Windows",Glad to hear that. Thanks again for the patch!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,850,2016-11-10T15:37:43Z,2016-11-11T12:06:05Z,2019-04-06T13:11:58Z,CLOSED,False,19,19,10,https://github.com/aperezdc,Fix case sensitiviness issues by using always lowercase,1,[],https://github.com/pbatard/rufus/pull/850,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/850#issuecomment-480503052,"This makes it possible to cross build in a machine with a case-sensitive file system. Tested in Arch Linux, where the following commands will successfully complete a build:
% sudo pacman -S mingw-w64  # Only if it wasn't already installed
% sh configure --host=i686-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32 executable (GUI) Intel 80386, for MS Windows

Doing 64-bit builds seems to be working as well:
% sh configure --host=x86_64-w64-mingw32 && make -j$(nproc --all)
% file src/rufus.exe
src/rufus.exe: PE32+ executable (GUI) x86-64, for MS Windows",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,879,2016-12-31T23:01:14Z,2017-01-01T15:25:13Z,2019-04-06T13:11:56Z,CLOSED,False,1,1,1,https://github.com/trinaldi,Fix grammar errors,1,[],https://github.com/pbatard/rufus/pull/879,https://github.com/trinaldi,1,https://github.com/pbatard/rufus/pull/879,An user left a message alerting me about this issue,An user left a message alerting me about this issue,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,879,2016-12-31T23:01:14Z,2017-01-01T15:25:13Z,2019-04-06T13:11:56Z,CLOSED,False,1,1,1,https://github.com/trinaldi,Fix grammar errors,1,[],https://github.com/pbatard/rufus/pull/879,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/879#issuecomment-269907047,An user left a message alerting me about this issue,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,879,2016-12-31T23:01:14Z,2017-01-01T15:25:13Z,2019-04-06T13:11:56Z,CLOSED,False,1,1,1,https://github.com/trinaldi,Fix grammar errors,1,[],https://github.com/pbatard/rufus/pull/879,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/879#issuecomment-480503048,An user left a message alerting me about this issue,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,889,2017-01-17T13:07:36Z,2017-01-17T13:13:21Z,2019-04-06T13:11:54Z,CLOSED,False,7,0,1,https://github.com/Chocobo1,Update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/889,https://github.com/Chocobo1,1,https://github.com/pbatard/rufus/pull/889,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,889,2017-01-17T13:07:36Z,2017-01-17T13:13:21Z,2019-04-06T13:11:54Z,CLOSED,False,7,0,1,https://github.com/Chocobo1,Update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/889,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/889#issuecomment-273150974,,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,889,2017-01-17T13:07:36Z,2017-01-17T13:13:21Z,2019-04-06T13:11:54Z,CLOSED,False,7,0,1,https://github.com/Chocobo1,Update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/889,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/889#issuecomment-480503046,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,905,2017-02-17T08:25:14Z,2017-02-17T11:55:15Z,2019-04-06T13:11:50Z,CLOSED,False,9,2,1,https://github.com/jwangac,[loc] fix a typo in Simplified Chinese translation,2,[],https://github.com/pbatard/rufus/pull/905,https://github.com/jwangac,1,https://github.com/pbatard/rufus/pull/905,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,905,2017-02-17T08:25:14Z,2017-02-17T11:55:15Z,2019-04-06T13:11:50Z,CLOSED,False,9,2,1,https://github.com/jwangac,[loc] fix a typo in Simplified Chinese translation,2,[],https://github.com/pbatard/rufus/pull/905,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/905#issuecomment-280630721,,Thank you very much!!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,905,2017-02-17T08:25:14Z,2017-02-17T11:55:15Z,2019-04-06T13:11:50Z,CLOSED,False,9,2,1,https://github.com/jwangac,[loc] fix a typo in Simplified Chinese translation,2,[],https://github.com/pbatard/rufus/pull/905,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/905#issuecomment-480503039,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,914,2017-03-16T16:19:28Z,2017-03-16T20:22:20Z,2019-04-06T13:11:48Z,CLOSED,False,45,45,1,https://github.com/kant,"Some fixes, updates, misspellings.",1,[],https://github.com/pbatard/rufus/pull/914,https://github.com/kant,1,https://github.com/pbatard/rufus/pull/914,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,914,2017-03-16T16:19:28Z,2017-03-16T20:22:20Z,2019-04-06T13:11:48Z,CLOSED,False,45,45,1,https://github.com/kant,"Some fixes, updates, misspellings.",1,[],https://github.com/pbatard/rufus/pull/914,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/914#issuecomment-287179521,,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,914,2017-03-16T16:19:28Z,2017-03-16T20:22:20Z,2019-04-06T13:11:48Z,CLOSED,False,45,45,1,https://github.com/kant,"Some fixes, updates, misspellings.",1,[],https://github.com/pbatard/rufus/pull/914,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/914#issuecomment-480503036,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,915,2017-03-17T12:10:41Z,2017-03-17T14:04:27Z,2019-04-06T11:38:54Z,CLOSED,False,10,10,1,https://github.com/mayuso,Fixed Spanish translations.,1,[],https://github.com/pbatard/rufus/pull/915,https://github.com/mayuso,1,https://github.com/pbatard/rufus/pull/915,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,915,2017-03-17T12:10:41Z,2017-03-17T14:04:27Z,2019-04-06T11:38:54Z,CLOSED,False,10,10,1,https://github.com/mayuso,Fixed Spanish translations.,1,[],https://github.com/pbatard/rufus/pull/915,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/915#issuecomment-287362168,,Applied. Thanks.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,915,2017-03-17T12:10:41Z,2017-03-17T14:04:27Z,2019-04-06T11:38:54Z,CLOSED,False,10,10,1,https://github.com/mayuso,Fixed Spanish translations.,1,[],https://github.com/pbatard/rufus/pull/915,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/915#issuecomment-480497247,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,974,2017-06-28T21:48:21Z,2017-06-29T10:33:43Z,2019-04-06T13:11:42Z,CLOSED,False,5,5,1,https://github.com/trinaldi,Fix ortographic errors,2,[],https://github.com/pbatard/rufus/pull/974,https://github.com/trinaldi,1,https://github.com/pbatard/rufus/pull/974,An user - Ricardo Pereira da Costa - contacted me and suggest/show me some fixes.,An user - Ricardo Pereira da Costa - contacted me and suggest/show me some fixes.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,974,2017-06-28T21:48:21Z,2017-06-29T10:33:43Z,2019-04-06T13:11:42Z,CLOSED,False,5,5,1,https://github.com/trinaldi,Fix ortographic errors,2,[],https://github.com/pbatard/rufus/pull/974,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/974#issuecomment-311928034,An user - Ricardo Pereira da Costa - contacted me and suggest/show me some fixes.,Applied. Thank you very much!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,974,2017-06-28T21:48:21Z,2017-06-29T10:33:43Z,2019-04-06T13:11:42Z,CLOSED,False,5,5,1,https://github.com/trinaldi,Fix ortographic errors,2,[],https://github.com/pbatard/rufus/pull/974,https://github.com/trinaldi,3,https://github.com/pbatard/rufus/pull/974#issuecomment-312135450,An user - Ricardo Pereira da Costa - contacted me and suggest/show me some fixes.,"Pete, let me ask you.

When someone suggests a change, should I edit right away or wait for some
kind of review?

Thanks",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,974,2017-06-28T21:48:21Z,2017-06-29T10:33:43Z,2019-04-06T13:11:42Z,CLOSED,False,5,5,1,https://github.com/trinaldi,Fix ortographic errors,2,[],https://github.com/pbatard/rufus/pull/974,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/974#issuecomment-313119439,An user - Ricardo Pereira da Costa - contacted me and suggest/show me some fixes.,"Hi Tiago, sorry for the late reply. How and when you submit it is pretty much up to you, as I'm not really in a position to review changes for languages that I don't speak. Generally speaking, I prefer if a series of changes for a specific translation are grouped into a single commit, but it's not a big deal if they aren't. But it's really up to you to decide what you think is best. Thanks.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,974,2017-06-28T21:48:21Z,2017-06-29T10:33:43Z,2019-04-06T13:11:42Z,CLOSED,False,5,5,1,https://github.com/trinaldi,Fix ortographic errors,2,[],https://github.com/pbatard/rufus/pull/974,https://github.com/NickeManarin,5,https://github.com/pbatard/rufus/pull/974#issuecomment-314091004,An user - Ricardo Pereira da Costa - contacted me and suggest/show me some fixes.,I speak Portuguese and I agree with this changes.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,974,2017-06-28T21:48:21Z,2017-06-29T10:33:43Z,2019-04-06T13:11:42Z,CLOSED,False,5,5,1,https://github.com/trinaldi,Fix ortographic errors,2,[],https://github.com/pbatard/rufus/pull/974,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/974#issuecomment-480503026,An user - Ricardo Pereira da Costa - contacted me and suggest/show me some fixes.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,975,2017-06-29T16:53:20Z,2017-07-05T14:30:43Z,2019-04-06T13:11:46Z,CLOSED,False,11,11,1,https://github.com/marcellogianola,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/975,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/975,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,975,2017-06-29T16:53:20Z,2017-07-05T14:30:43Z,2019-04-06T13:11:46Z,CLOSED,False,11,11,1,https://github.com/marcellogianola,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/975,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/975#issuecomment-313120497,,"Sorry for the late update - I now have applied your changes to the translation, thank you very much for this!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,975,2017-06-29T16:53:20Z,2017-07-05T14:30:43Z,2019-04-06T13:11:46Z,CLOSED,False,11,11,1,https://github.com/marcellogianola,Update rufus.loc,1,[],https://github.com/pbatard/rufus/pull/975,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/975#issuecomment-480503034,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,978,2017-07-05T00:41:30Z,2017-07-05T14:49:32Z,2019-04-06T13:11:44Z,CLOSED,False,4,0,1,https://github.com/j123123,fix memory leak in do_convert() in src/libcdio/driver/utf8.c,1,[],https://github.com/pbatard/rufus/pull/978,https://github.com/j123123,1,https://github.com/pbatard/rufus/pull/978,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,978,2017-07-05T00:41:30Z,2017-07-05T14:49:32Z,2019-04-06T13:11:44Z,CLOSED,False,4,0,1,https://github.com/j123123,fix memory leak in do_convert() in src/libcdio/driver/utf8.c,1,[],https://github.com/pbatard/rufus/pull/978,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/978#issuecomment-313126251,,"Thanks, but can you send this patch to the libcdio mailing list instead?
Rufus is reusing the code from libcdio here, and as much as possible I try to avoid deviating too much from libcdio upstream, so that I can more easily pick up updates from this library.
If you get the libcdio team to fix this, then that fix will naturally find its way into Rufus, as I tend to update the libcdio code on regular basis.
For the record, there are quite a few potential issues similar to this one, that I am well aware of, with the libcdio code, but that I am not planning to address in Rufus as I'd rather have them addressed upstream. You can get a good idea for that if you ran the libcdio part through Coverity or other static code analysis tools.
Ever since I started using libcdio and Coverity in Rufus, I've been meaning to produce patches for those, and send them to the libcdio people for review and integration, but I never managed to prioritize this over other things, as most of these issues don't seem that problematic (a memory leak because realloc doesn't have enough memory for the new buffer is usually the least of one's worries). Still, I sure wouldn't mind if people could send patches to the libcdio project to address them.
For now, I'm afraid that I will just close that request, again, not because the patch is unneeded, but because it should be a part of libcdio first.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,978,2017-07-05T00:41:30Z,2017-07-05T14:49:32Z,2019-04-06T13:11:44Z,CLOSED,False,4,0,1,https://github.com/j123123,fix memory leak in do_convert() in src/libcdio/driver/utf8.c,1,[],https://github.com/pbatard/rufus/pull/978,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/978#issuecomment-480503029,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,981,2017-07-17T21:39:32Z,2017-07-24T16:37:00Z,2019-04-06T13:11:27Z,CLOSED,False,15,6,1,https://github.com/trinaldi,Insert new translations for Rufus 2.16,5,[],https://github.com/pbatard/rufus/pull/981,https://github.com/trinaldi,1,https://github.com/pbatard/rufus/pull/981,"Preparing for the new release, I've already made the new changes.","Preparing for the new release, I've already made the new changes.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,981,2017-07-17T21:39:32Z,2017-07-24T16:37:00Z,2019-04-06T13:11:27Z,CLOSED,False,15,6,1,https://github.com/trinaldi,Insert new translations for Rufus 2.16,5,[],https://github.com/pbatard/rufus/pull/981,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/981#issuecomment-316032246,"Preparing for the new release, I've already made the new changes.",Okay. Let me know when it's done - no rush.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,981,2017-07-17T21:39:32Z,2017-07-24T16:37:00Z,2019-04-06T13:11:27Z,CLOSED,False,15,6,1,https://github.com/trinaldi,Insert new translations for Rufus 2.16,5,[],https://github.com/pbatard/rufus/pull/981,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/981#issuecomment-317480039,"Preparing for the new release, I've already made the new changes.","Okay, since I'm releasing a new BETA version, I'm gonna pick your changes. If you still need to update it, feel free to create a new pull request.
PS: I corrected the ""SAe"" to ""Se"" in ""SAe você obteve este arquivo da Internet..."", as I assume this was a typo.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,981,2017-07-17T21:39:32Z,2017-07-24T16:37:00Z,2019-04-06T13:11:27Z,CLOSED,False,15,6,1,https://github.com/trinaldi,Insert new translations for Rufus 2.16,5,[],https://github.com/pbatard/rufus/pull/981,https://github.com/trinaldi,4,https://github.com/pbatard/rufus/pull/981#issuecomment-317480389,"Preparing for the new release, I've already made the new changes.","That's right, Pete",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,981,2017-07-17T21:39:32Z,2017-07-24T16:37:00Z,2019-04-06T13:11:27Z,CLOSED,False,15,6,1,https://github.com/trinaldi,Insert new translations for Rufus 2.16,5,[],https://github.com/pbatard/rufus/pull/981,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/981#issuecomment-480503008,"Preparing for the new release, I've already made the new changes.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,982,2017-07-18T03:34:08Z,2017-07-18T10:56:54Z,2019-04-06T13:11:40Z,CLOSED,False,7,1,1,https://github.com/jwangac,[loc] update Chinese Simplified translation to latest,1,[],https://github.com/pbatard/rufus/pull/982,https://github.com/jwangac,1,https://github.com/pbatard/rufus/pull/982,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,982,2017-07-18T03:34:08Z,2017-07-18T10:56:54Z,2019-04-06T13:11:40Z,CLOSED,False,7,1,1,https://github.com/jwangac,[loc] update Chinese Simplified translation to latest,1,[],https://github.com/pbatard/rufus/pull/982,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/982#issuecomment-316029230,,Applied. Many thanks for this!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,982,2017-07-18T03:34:08Z,2017-07-18T10:56:54Z,2019-04-06T13:11:40Z,CLOSED,False,7,1,1,https://github.com/jwangac,[loc] update Chinese Simplified translation to latest,1,[],https://github.com/pbatard/rufus/pull/982,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/982#issuecomment-480503023,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,985,2017-07-19T09:13:13Z,2017-07-19T12:51:25Z,2019-04-06T13:11:32Z,CLOSED,False,7,1,1,https://github.com/Chocobo1,[loc] update Chinese Traditional translation to latest,1,[],https://github.com/pbatard/rufus/pull/985,https://github.com/Chocobo1,1,https://github.com/pbatard/rufus/pull/985,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,985,2017-07-19T09:13:13Z,2017-07-19T12:51:25Z,2019-04-06T13:11:32Z,CLOSED,False,7,1,1,https://github.com/Chocobo1,[loc] update Chinese Traditional translation to latest,1,[],https://github.com/pbatard/rufus/pull/985,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/985#issuecomment-316375703,,Applied! Many thanks for this.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,985,2017-07-19T09:13:13Z,2017-07-19T12:51:25Z,2019-04-06T13:11:32Z,CLOSED,False,7,1,1,https://github.com/Chocobo1,[loc] update Chinese Traditional translation to latest,1,[],https://github.com/pbatard/rufus/pull/985,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/985#issuecomment-480503010,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,990,2017-07-31T11:28:56Z,2017-07-31T11:32:07Z,2019-04-06T13:11:25Z,CLOSED,False,1,1,1,https://github.com/JeroenSack,Fix typo in Changelog,1,[],https://github.com/pbatard/rufus/pull/990,https://github.com/JeroenSack,1,https://github.com/pbatard/rufus/pull/990,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,990,2017-07-31T11:28:56Z,2017-07-31T11:32:07Z,2019-04-06T13:11:25Z,CLOSED,False,1,1,1,https://github.com/JeroenSack,Fix typo in Changelog,1,[],https://github.com/pbatard/rufus/pull/990,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/990#issuecomment-319042000,,Thanks for spotting it!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,990,2017-07-31T11:28:56Z,2017-07-31T11:32:07Z,2019-04-06T13:11:25Z,CLOSED,False,1,1,1,https://github.com/JeroenSack,Fix typo in Changelog,1,[],https://github.com/pbatard/rufus/pull/990,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/990#issuecomment-480503007,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1008,2017-08-27T20:54:48Z,2017-08-28T00:17:22Z,2019-04-06T13:11:23Z,CLOSED,False,0,0,0,https://github.com/mfloresn90,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1008,https://github.com/mfloresn90,1,https://github.com/pbatard/rufus/pull/1008,Pull request,Pull request,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1008,2017-08-27T20:54:48Z,2017-08-28T00:17:22Z,2019-04-06T13:11:23Z,CLOSED,False,0,0,0,https://github.com/mfloresn90,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1008,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1008#issuecomment-480503005,Pull request,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1011,2017-08-28T22:12:24Z,2017-08-29T10:57:40Z,2019-04-06T13:11:21Z,CLOSED,False,0,1,1,https://github.com/Ino-Bagaric,Double preprocessor definitions,1,[],https://github.com/pbatard/rufus/pull/1011,https://github.com/Ino-Bagaric,1,https://github.com/pbatard/rufus/pull/1011,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1011,2017-08-28T22:12:24Z,2017-08-29T10:57:40Z,2019-04-06T13:11:21Z,CLOSED,False,0,1,1,https://github.com/Ino-Bagaric,Double preprocessor definitions,1,[],https://github.com/pbatard/rufus/pull/1011,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1011#issuecomment-325628963,,Applied. Thanks.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1011,2017-08-28T22:12:24Z,2017-08-29T10:57:40Z,2019-04-06T13:11:21Z,CLOSED,False,0,1,1,https://github.com/Ino-Bagaric,Double preprocessor definitions,1,[],https://github.com/pbatard/rufus/pull/1011,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1011#issuecomment-480503003,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1012,2017-08-29T19:03:12Z,2017-08-29T19:37:45Z,2019-04-06T13:11:19Z,CLOSED,False,0,0,0,https://github.com/mfloresn90,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1012,https://github.com/mfloresn90,1,https://github.com/pbatard/rufus/pull/1012,Pull request,Pull request,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1012,2017-08-29T19:03:12Z,2017-08-29T19:37:45Z,2019-04-06T13:11:19Z,CLOSED,False,0,0,0,https://github.com/mfloresn90,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1012,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1012#issuecomment-325776187,Pull request,"There's no code change. If you want to propose a pull request, can you please make sure there's actually something valid to pull?",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1012,2017-08-29T19:03:12Z,2017-08-29T19:37:45Z,2019-04-06T13:11:19Z,CLOSED,False,0,0,0,https://github.com/mfloresn90,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1012,https://github.com/NSbuilder,3,https://github.com/pbatard/rufus/pull/1012#issuecomment-325780161,Pull request,"Well, I'm quite sure that's a mistake, it's not like someone will want to commit dummy pull requests anyway.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1012,2017-08-29T19:03:12Z,2017-08-29T19:37:45Z,2019-04-06T13:11:19Z,CLOSED,False,0,0,0,https://github.com/mfloresn90,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1012,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1012#issuecomment-325780528,Pull request,"The problem is that it's the second time I'm getting an empty pull request this week... I hope this is not the beginning of a trend, especially as I would expect it's hard to create a pull request by mistake.",True,{'LAUGH': ['https://github.com/NSbuilder']}
pbatard/rufus,https://github.com/pbatard/rufus,1012,2017-08-29T19:03:12Z,2017-08-29T19:37:45Z,2019-04-06T13:11:19Z,CLOSED,False,0,0,0,https://github.com/mfloresn90,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1012,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/1012#issuecomment-480503000,Pull request,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1019,2017-09-09T09:33:44Z,2017-10-03T12:05:06Z,2019-04-06T13:11:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,2,[],https://github.com/pbatard/rufus/pull/1019,https://github.com/embar-,1,https://github.com/pbatard/rufus/pull/1019,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1019,2017-09-09T09:33:44Z,2017-10-03T12:05:06Z,2019-04-06T13:11:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,2,[],https://github.com/pbatard/rufus/pull/1019,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1019#issuecomment-328293082,,"Sorry but I can't accept this translation update, as it messes up the UI:

As you can see Paleidimo laikmeną kurti naudojant is truncated on high DPI displays, and to correct this, the size of the dialog as well as most of the combo boxes need to be adjusted..
Also, I would very much prefer if you contacted the current Lithuanian translator (whose e-mail is provided in the About dialog) to discuss your proposed changes with them. As long as there is an active translator, and especially if the changes are not trivial, I don't want to update translation behind the back of the current translator.
So please get in touch with the current translator, and make sure you both agree with a proposal, as well as ensure that the UI elements don't get truncated.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1019,2017-09-09T09:33:44Z,2017-10-03T12:05:06Z,2019-04-06T13:11:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,2,[],https://github.com/pbatard/rufus/pull/1019,https://github.com/embar-,3,https://github.com/pbatard/rufus/pull/1019#issuecomment-328756066,,"Now few more changes, including changing „Paleidimo laikmeną kurti naudojant“ to shorter „Sistema paleidžiama iš laikmenos“",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1019,2017-09-09T09:33:44Z,2017-10-03T12:05:06Z,2019-04-06T13:11:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,2,[],https://github.com/pbatard/rufus/pull/1019,https://github.com/embar-,4,https://github.com/pbatard/rufus/pull/1019#issuecomment-328756460,,"I wrote letter to Gintaras, waiting for his opinion.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1019,2017-09-09T09:33:44Z,2017-10-03T12:05:06Z,2019-04-06T13:11:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,2,[],https://github.com/pbatard/rufus/pull/1019,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1019#issuecomment-333821412,,"Still can't accept this translation:


Please create a new pull request once you have fixed these issue.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1019,2017-09-09T09:33:44Z,2017-10-03T12:05:06Z,2019-04-06T13:11:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,2,[],https://github.com/pbatard/rufus/pull/1019,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/1019#issuecomment-480502992,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1029,2017-09-24T00:04:11Z,2017-09-24T01:11:33Z,2019-04-06T13:11:17Z,CLOSED,False,85963,4798,375,https://github.com/Geeknificent,Request for Esata Hard drive Dock recognition,1082,[],https://github.com/pbatard/rufus/pull/1029,https://github.com/Geeknificent,1,https://github.com/pbatard/rufus/pull/1029,Hello I have been using yoursoftware quite successfuly for a few years now. But I have found that there is no option for Esata hard drive dock recognition. Can you make this a feature? I would love to use rufus to create images on hard drives in my Hard drive dock.,Hello I have been using yoursoftware quite successfuly for a few years now. But I have found that there is no option for Esata hard drive dock recognition. Can you make this a feature? I would love to use rufus to create images on hard drives in my Hard drive dock.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1029,2017-09-24T00:04:11Z,2017-09-24T01:11:33Z,2019-04-06T13:11:17Z,CLOSED,False,85963,4798,375,https://github.com/Geeknificent,Request for Esata Hard drive Dock recognition,1082,[],https://github.com/pbatard/rufus/pull/1029,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1029#issuecomment-331679774,Hello I have been using yoursoftware quite successfuly for a few years now. But I have found that there is no option for Esata hard drive dock recognition. Can you make this a feature? I would love to use rufus to create images on hard drives in my Hard drive dock.,"Not sure why you created this weird pull request.
I believe what you ask is already there, but as a super-unofficial cheat mode. Please try the Ctrl-Alt-F in Rufus. You may also have to enable Enumeration debug with Alt-..
Note that this is only meant to work if your drive is seen as removable by the BIOS/UEFI firmware (so you may have to adjust your settings there, and if you can't then you're out of luck).
Now, since I have no plans to enable eSata outside of the current UNSUPPORTED cheat mode (i.e. if it works, great, if it doesn't, you're on your own), I will now close this request.",True,{'THUMBS_UP': ['https://github.com/e24zv55drn5og32gl3zdi4']}
pbatard/rufus,https://github.com/pbatard/rufus,1029,2017-09-24T00:04:11Z,2017-09-24T01:11:33Z,2019-04-06T13:11:17Z,CLOSED,False,85963,4798,375,https://github.com/Geeknificent,Request for Esata Hard drive Dock recognition,1082,[],https://github.com/pbatard/rufus/pull/1029,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1029#issuecomment-480502995,Hello I have been using yoursoftware quite successfuly for a few years now. But I have found that there is no option for Esata hard drive dock recognition. Can you make this a feature? I would love to use rufus to create images on hard drives in my Hard drive dock.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1032,2017-10-02T20:52:22Z,2017-10-03T12:08:37Z,2019-04-06T13:11:13Z,CLOSED,False,2,2,1,https://github.com/jzeferino,Fixed some português / portugal translations.,1,[],https://github.com/pbatard/rufus/pull/1032,https://github.com/jzeferino,1,https://github.com/pbatard/rufus/pull/1032,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1032,2017-10-02T20:52:22Z,2017-10-03T12:08:37Z,2019-04-06T13:11:13Z,CLOSED,False,2,2,1,https://github.com/jzeferino,Fixed some português / portugal translations.,1,[],https://github.com/pbatard/rufus/pull/1032,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1032#issuecomment-333822040,,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1032,2017-10-02T20:52:22Z,2017-10-03T12:08:37Z,2019-04-06T13:11:13Z,CLOSED,False,2,2,1,https://github.com/jzeferino,Fixed some português / portugal translations.,1,[],https://github.com/pbatard/rufus/pull/1032,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1032#issuecomment-480502984,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1033,2017-10-03T05:32:39Z,2017-10-03T12:05:34Z,2019-04-06T13:11:11Z,CLOSED,False,25,1,1,https://github.com/tgiphil,[misc] add option to specify dd image,1,[],https://github.com/pbatard/rufus/pull/1033,https://github.com/tgiphil,1,https://github.com/pbatard/rufus/pull/1033,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1033,2017-10-03T05:32:39Z,2017-10-03T12:05:34Z,2019-04-06T13:11:11Z,CLOSED,False,25,1,1,https://github.com/tgiphil,[misc] add option to specify dd image,1,[],https://github.com/pbatard/rufus/pull/1033,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1033#issuecomment-333770223,,"I don't believe that's needed. It's only the UI that splits ISO and DD images as different beasts, but you can feed a DD image in the ISO image selection dialog, and Rufus will be smart enough to detect that it's a DD image and process it accordingly.
Have you  actually tried using -i with a DD Image?
Now, if you want to force an ISOHybrid image to be written in DD mode, that's a different story, but since -i should work for ISO/DD image selection, I don't think there is any need to add a new image selection option.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1033,2017-10-03T05:32:39Z,2017-10-03T12:05:34Z,2019-04-06T13:11:11Z,CLOSED,False,25,1,1,https://github.com/tgiphil,[misc] add option to specify dd image,1,[],https://github.com/pbatard/rufus/pull/1033,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1033#issuecomment-333821500,,I'm going to close this pull request then.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1033,2017-10-03T05:32:39Z,2017-10-03T12:05:34Z,2019-04-06T13:11:11Z,CLOSED,False,25,1,1,https://github.com/tgiphil,[misc] add option to specify dd image,1,[],https://github.com/pbatard/rufus/pull/1033,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1033#issuecomment-480502978,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1034,2017-10-03T15:11:28Z,2017-10-13T15:40:55Z,2019-04-06T11:40:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,3,[],https://github.com/pbatard/rufus/pull/1034,https://github.com/embar-,1,https://github.com/pbatard/rufus/pull/1034,#1019 (comment) should be fixed now,#1019 (comment) should be fixed now,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1034,2017-10-03T15:11:28Z,2017-10-13T15:40:55Z,2019-04-06T11:40:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,3,[],https://github.com/pbatard/rufus/pull/1034,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1034#issuecomment-336489299,#1019 (comment) should be fixed now,"Applied. Thanks.
Note that I prefer when patches are grouped, rather than split in 3 parts...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1034,2017-10-03T15:11:28Z,2017-10-13T15:40:55Z,2019-04-06T11:40:15Z,CLOSED,False,127,127,1,https://github.com/embar-,Update rufus.loc Lithuanian translation,3,[],https://github.com/pbatard/rufus/pull/1034,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1034#issuecomment-480497340,#1019 (comment) should be fixed now,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1040,2017-10-12T16:13:11Z,2017-10-13T09:48:55Z,2019-04-06T13:11:09Z,CLOSED,False,8,1,1,https://github.com/wjt,[cmp] propagate decompression errors from bled,1,[],https://github.com/pbatard/rufus/pull/1040,https://github.com/wjt,1,https://github.com/pbatard/rufus/pull/1040,"If, for example, you have a truncated gz-compressed file and try to write it to disk, bled_uncompress_with_handles() will return an error.  Previously, this was not reported back to the user -- there's no indication of any problem. If they're lucky, booting the partially-written disk will fail in an obvious way, but better to report an error sooner, even if we cannot give details.
(This is inspired by a similar change in our fork. This branch is untested until Visual Studio 2017 finishes downloading!)","If, for example, you have a truncated gz-compressed file and try to write it to disk, bled_uncompress_with_handles() will return an error.  Previously, this was not reported back to the user -- there's no indication of any problem. If they're lucky, booting the partially-written disk will fail in an obvious way, but better to report an error sooner, even if we cannot give details.
(This is inspired by a similar change in our fork. This branch is untested until Visual Studio 2017 finishes downloading!)",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1040,2017-10-12T16:13:11Z,2017-10-13T09:48:55Z,2019-04-06T13:11:09Z,CLOSED,False,8,1,1,https://github.com/wjt,[cmp] propagate decompression errors from bled,1,[],https://github.com/pbatard/rufus/pull/1040,https://github.com/wjt,2,https://github.com/pbatard/rufus/pull/1040#issuecomment-336189936,"If, for example, you have a truncated gz-compressed file and try to write it to disk, bled_uncompress_with_handles() will return an error.  Previously, this was not reported back to the user -- there's no indication of any problem. If they're lucky, booting the partially-written disk will fail in an obvious way, but better to report an error sooner, even if we cannot give details.
(This is inspired by a similar change in our fork. This branch is untested until Visual Studio 2017 finishes downloading!)","I have, however, tested the same change applied to our fork with our UI.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1040,2017-10-12T16:13:11Z,2017-10-13T09:48:55Z,2019-04-06T13:11:09Z,CLOSED,False,8,1,1,https://github.com/wjt,[cmp] propagate decompression errors from bled,1,[],https://github.com/pbatard/rufus/pull/1040,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1040#issuecomment-336404658,"If, for example, you have a truncated gz-compressed file and try to write it to disk, bled_uncompress_with_handles() will return an error.  Previously, this was not reported back to the user -- there's no indication of any problem. If they're lucky, booting the partially-written disk will fail in an obvious way, but better to report an error sooner, even if we cannot give details.
(This is inspired by a similar change in our fork. This branch is untested until Visual Studio 2017 finishes downloading!)",Very good point. Rufus should definitely report errors from Bled. The pull request has been applied — many thanks for this!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1040,2017-10-12T16:13:11Z,2017-10-13T09:48:55Z,2019-04-06T13:11:09Z,CLOSED,False,8,1,1,https://github.com/wjt,[cmp] propagate decompression errors from bled,1,[],https://github.com/pbatard/rufus/pull/1040,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1040#issuecomment-480502975,"If, for example, you have a truncated gz-compressed file and try to write it to disk, bled_uncompress_with_handles() will return an error.  Previously, this was not reported back to the user -- there's no indication of any problem. If they're lucky, booting the partially-written disk will fail in an obvious way, but better to report an error sooner, even if we cannot give details.
(This is inspired by a similar change in our fork. This branch is untested until Visual Studio 2017 finishes downloading!)",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1046,2017-10-22T15:16:10Z,2017-10-22T18:22:35Z,2019-04-06T11:40:13Z,CLOSED,False,0,0,0,https://github.com/nonomal,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1046,https://github.com/nonomal,1,https://github.com/pbatard/rufus/pull/1046,update 2017-10-22,update 2017-10-22,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1046,2017-10-22T15:16:10Z,2017-10-22T18:22:35Z,2019-04-06T11:40:13Z,CLOSED,False,0,0,0,https://github.com/nonomal,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1046,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1046#issuecomment-338498105,update 2017-10-22,Invalid request. Closed.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1046,2017-10-22T15:16:10Z,2017-10-22T18:22:35Z,2019-04-06T11:40:13Z,CLOSED,False,0,0,0,https://github.com/nonomal,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1046,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1046#issuecomment-480497335,update 2017-10-22,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1050,2017-10-27T09:31:07Z,2017-10-28T18:02:13Z,2019-04-06T11:40:11Z,CLOSED,False,3,1,1,https://github.com/ip-gpu,fix V773 from PVS-Studio,1,[],https://github.com/pbatard/rufus/pull/1050,https://github.com/ip-gpu,1,https://github.com/pbatard/rufus/pull/1050,"I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug, found using PVS-Studio. Warning: V773 The function was exited without releasing the 'hDC' handle. A resource leak is possible.
(https://github.com/pbatard/rufus/blob/master/src/stdfn.c#L638)","I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug, found using PVS-Studio. Warning: V773 The function was exited without releasing the 'hDC' handle. A resource leak is possible.
(https://github.com/pbatard/rufus/blob/master/src/stdfn.c#L638)",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1050,2017-10-27T09:31:07Z,2017-10-28T18:02:13Z,2019-04-06T11:40:11Z,CLOSED,False,3,1,1,https://github.com/ip-gpu,fix V773 from PVS-Studio,1,[],https://github.com/pbatard/rufus/pull/1050,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1050#issuecomment-340209114,"I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug, found using PVS-Studio. Warning: V773 The function was exited without releasing the 'hDC' handle. A resource leak is possible.
(https://github.com/pbatard/rufus/blob/master/src/stdfn.c#L638)",Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1050,2017-10-27T09:31:07Z,2017-10-28T18:02:13Z,2019-04-06T11:40:11Z,CLOSED,False,3,1,1,https://github.com/ip-gpu,fix V773 from PVS-Studio,1,[],https://github.com/pbatard/rufus/pull/1050,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1050#issuecomment-480497331,"I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug, found using PVS-Studio. Warning: V773 The function was exited without releasing the 'hDC' handle. A resource leak is possible.
(https://github.com/pbatard/rufus/blob/master/src/stdfn.c#L638)",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1062,2017-11-21T23:30:45Z,2017-12-06T17:42:36Z,2019-04-06T11:40:07Z,CLOSED,False,308,198,1,https://github.com/trinaldi,Complete review and refactoring of the Portuguese (Brazil) translation.,7,[],https://github.com/pbatard/rufus/pull/1062,https://github.com/trinaldi,1,https://github.com/pbatard/rufus/pull/1062,Thanks to Ricardo Pereira da Costa for the carefully review.,Thanks to Ricardo Pereira da Costa for the carefully review.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1062,2017-11-21T23:30:45Z,2017-12-06T17:42:36Z,2019-04-06T11:40:07Z,CLOSED,False,308,198,1,https://github.com/trinaldi,Complete review and refactoring of the Portuguese (Brazil) translation.,7,[],https://github.com/pbatard/rufus/pull/1062,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1062#issuecomment-347523178,Thanks to Ricardo Pereira da Costa for the carefully review.,"Thanks Tiago! For various reasons, it'll probably be a couple more weeks before I can apply this update, but I'm not forgetting your request.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1062,2017-11-21T23:30:45Z,2017-12-06T17:42:36Z,2019-04-06T11:40:07Z,CLOSED,False,308,198,1,https://github.com/trinaldi,Complete review and refactoring of the Portuguese (Brazil) translation.,7,[],https://github.com/pbatard/rufus/pull/1062,https://github.com/trinaldi,3,https://github.com/pbatard/rufus/pull/1062#issuecomment-347536252,Thanks to Ricardo Pereira da Costa for the carefully review.,"No problem. Thanks, Pete.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1062,2017-11-21T23:30:45Z,2017-12-06T17:42:36Z,2019-04-06T11:40:07Z,CLOSED,False,308,198,1,https://github.com/trinaldi,Complete review and refactoring of the Portuguese (Brazil) translation.,7,[],https://github.com/pbatard/rufus/pull/1062,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1062#issuecomment-349643768,Thanks to Ricardo Pereira da Costa for the carefully review.,"Can I please ask you to create a single patch, on top of the current Rufus tree, and submit that as a pull request. A pull request should only ever be of a single patch, and if they all relate to updating a translation, they should be grouped. Thanks!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1062,2017-11-21T23:30:45Z,2017-12-06T17:42:36Z,2019-04-06T11:40:07Z,CLOSED,False,308,198,1,https://github.com/trinaldi,Complete review and refactoring of the Portuguese (Brazil) translation.,7,[],https://github.com/pbatard/rufus/pull/1062,https://github.com/trinaldi,5,https://github.com/pbatard/rufus/pull/1062#issuecomment-349718436,Thanks to Ricardo Pereira da Costa for the carefully review.,I'll close this PR.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1062,2017-11-21T23:30:45Z,2017-12-06T17:42:36Z,2019-04-06T11:40:07Z,CLOSED,False,308,198,1,https://github.com/trinaldi,Complete review and refactoring of the Portuguese (Brazil) translation.,7,[],https://github.com/pbatard/rufus/pull/1062,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/1062#issuecomment-480497325,Thanks to Ricardo Pereira da Costa for the carefully review.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1063,2017-12-01T12:16:06Z,2017-12-06T13:12:08Z,2019-04-06T11:40:09Z,CLOSED,False,164,163,1,https://github.com/The2rB,Update rufus.loc Norwegian translations,1,[],https://github.com/pbatard/rufus/pull/1063,https://github.com/The2rB,1,https://github.com/pbatard/rufus/pull/1063,Done changes to the Norwegian translation.,Done changes to the Norwegian translation.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1063,2017-12-01T12:16:06Z,2017-12-06T13:12:08Z,2019-04-06T11:40:09Z,CLOSED,False,164,163,1,https://github.com/The2rB,Update rufus.loc Norwegian translations,1,[],https://github.com/pbatard/rufus/pull/1063,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1063#issuecomment-349635291,Done changes to the Norwegian translation.,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1063,2017-12-01T12:16:06Z,2017-12-06T13:12:08Z,2019-04-06T11:40:09Z,CLOSED,False,164,163,1,https://github.com/The2rB,Update rufus.loc Norwegian translations,1,[],https://github.com/pbatard/rufus/pull/1063,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1063#issuecomment-480497327,Done changes to the Norwegian translation.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1067,2017-12-06T18:40:13Z,2017-12-06T19:25:59Z,2019-04-06T11:40:05Z,CLOSED,False,300,239,1,https://github.com/trinaldi,Update rufus.loc PT-BR translations,1,[],https://github.com/pbatard/rufus/pull/1067,https://github.com/trinaldi,1,https://github.com/pbatard/rufus/pull/1067,"Thanks to Ricardo Pereira da Costa for the review.
Cleaning up the mess from the previous PR.
Sorry, Pete, I'm in between a new city/job.","Thanks to Ricardo Pereira da Costa for the review.
Cleaning up the mess from the previous PR.
Sorry, Pete, I'm in between a new city/job.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1067,2017-12-06T18:40:13Z,2017-12-06T19:25:59Z,2019-04-06T11:40:05Z,CLOSED,False,300,239,1,https://github.com/trinaldi,Update rufus.loc PT-BR translations,1,[],https://github.com/pbatard/rufus/pull/1067,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1067#issuecomment-349747336,"Thanks to Ricardo Pereira da Costa for the review.
Cleaning up the mess from the previous PR.
Sorry, Pete, I'm in between a new city/job.","Thanks you very much for the quick refactoring of your pull request - much appreciated!
Everything looks good, so I have applied it.
The only small modification I applied was a change for ""Windows Para Levar"" → ""Windows To Go (Windows Para Levar)"" as my understanding is that Microsoft is using the Windows To Go moniker in most regions, including the ones that don't speak English. Searching for Windows Para Levar didn't seem to return many hits were it was used without also adding Windows To Go, so I prefer to have both terms used just in case. I'm hoping this small change can make things clearer about what this option does, and that this is okay with you.
Many thanks again for improving the translation.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1067,2017-12-06T18:40:13Z,2017-12-06T19:25:59Z,2019-04-06T11:40:05Z,CLOSED,False,300,239,1,https://github.com/trinaldi,Update rufus.loc PT-BR translations,1,[],https://github.com/pbatard/rufus/pull/1067,https://github.com/trinaldi,3,https://github.com/pbatard/rufus/pull/1067#issuecomment-349753208,"Thanks to Ricardo Pereira da Costa for the review.
Cleaning up the mess from the previous PR.
Sorry, Pete, I'm in between a new city/job.","I agree, the old translation used Windows To Go, but since the reviewer use the translated version, I let it pass. But I definitely agree with you.
Thanks and sorry about some inconvenience .",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1067,2017-12-06T18:40:13Z,2017-12-06T19:25:59Z,2019-04-06T11:40:05Z,CLOSED,False,300,239,1,https://github.com/trinaldi,Update rufus.loc PT-BR translations,1,[],https://github.com/pbatard/rufus/pull/1067,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1067#issuecomment-480497321,"Thanks to Ricardo Pereira da Costa for the review.
Cleaning up the mess from the previous PR.
Sorry, Pete, I'm in between a new city/job.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1075,2017-12-23T13:50:53Z,2017-12-24T15:12:56Z,2019-04-06T11:40:03Z,CLOSED,False,11,11,1,https://github.com/ryo-a,Improve Japanese Translation,1,[],https://github.com/pbatard/rufus/pull/1075,https://github.com/ryo-a,1,https://github.com/pbatard/rufus/pull/1075,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1075,2017-12-23T13:50:53Z,2017-12-24T15:12:56Z,2019-04-06T11:40:03Z,CLOSED,False,11,11,1,https://github.com/ryo-a,Improve Japanese Translation,1,[],https://github.com/pbatard/rufus/pull/1075,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1075#issuecomment-353789326,,Applied. Thanks!,True,{'LAUGH': ['https://github.com/ryo-a']}
pbatard/rufus,https://github.com/pbatard/rufus,1075,2017-12-23T13:50:53Z,2017-12-24T15:12:56Z,2019-04-06T11:40:03Z,CLOSED,False,11,11,1,https://github.com/ryo-a,Improve Japanese Translation,1,[],https://github.com/pbatard/rufus/pull/1075,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1075#issuecomment-480497317,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1099,2018-03-28T03:57:33Z,2018-03-28T10:47:50Z,2019-04-06T11:40:01Z,CLOSED,False,34,15,1,https://github.com/jwangac,[loc] update Simplified Chinese translation to latest,2,[],https://github.com/pbatard/rufus/pull/1099,https://github.com/jwangac,1,https://github.com/pbatard/rufus/pull/1099,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1099,2018-03-28T03:57:33Z,2018-03-28T10:47:50Z,2019-04-06T11:40:01Z,CLOSED,False,34,15,1,https://github.com/jwangac,[loc] update Simplified Chinese translation to latest,2,[],https://github.com/pbatard/rufus/pull/1099,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1099#issuecomment-480497314,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1100,2018-03-28T06:20:25Z,2018-03-28T10:47:50Z,2019-04-06T11:39:59Z,CLOSED,False,32,11,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1100,https://github.com/Chocobo1,1,https://github.com/pbatard/rufus/pull/1100,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1100,2018-03-28T06:20:25Z,2018-03-28T10:47:50Z,2019-04-06T11:39:59Z,CLOSED,False,32,11,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1100,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1100#issuecomment-376843959,,Applied. Many thanks for this!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1100,2018-03-28T06:20:25Z,2018-03-28T10:47:50Z,2019-04-06T11:39:59Z,CLOSED,False,32,11,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1100,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1100#issuecomment-480497312,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1101,2018-03-28T16:04:24Z,2018-04-12T12:47:13Z,2019-04-06T11:39:55Z,CLOSED,False,6,6,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1101,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1101,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1101,2018-03-28T16:04:24Z,2018-04-12T12:47:13Z,2019-04-06T11:39:55Z,CLOSED,False,6,6,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1101,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1101#issuecomment-480497308,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1105,2018-04-04T05:40:17Z,2018-04-04T09:30:51Z,2019-04-06T11:39:57Z,CLOSED,False,5,5,1,https://github.com/agentFinland,Updated Compilation Section of Readme,1,[],https://github.com/pbatard/rufus/pull/1105,https://github.com/agentFinland,1,https://github.com/pbatard/rufus/pull/1105,Made minor grammar and technical style fixes to compilation secion of README,Made minor grammar and technical style fixes to compilation secion of README,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1105,2018-04-04T05:40:17Z,2018-04-04T09:30:51Z,2019-04-06T11:39:57Z,CLOSED,False,5,5,1,https://github.com/agentFinland,Updated Compilation Section of Readme,1,[],https://github.com/pbatard/rufus/pull/1105,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1105#issuecomment-378539415,Made minor grammar and technical style fixes to compilation secion of README,"These changes are a matter of stylistic preference and I actually disagree with all of them, so I'm afraid I'm going to have to reject this request.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1105,2018-04-04T05:40:17Z,2018-04-04T09:30:51Z,2019-04-06T11:39:57Z,CLOSED,False,5,5,1,https://github.com/agentFinland,Updated Compilation Section of Readme,1,[],https://github.com/pbatard/rufus/pull/1105,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1105#issuecomment-480497309,Made minor grammar and technical style fixes to compilation secion of README,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1110,2018-04-13T20:44:12Z,2018-04-13T22:53:04Z,2019-04-06T11:39:53Z,CLOSED,False,39,23,1,https://github.com/trinaldi, [loc] update portuguese (Brazil) translation to latest,1,[],https://github.com/pbatard/rufus/pull/1110,https://github.com/trinaldi,1,https://github.com/pbatard/rufus/pull/1110,Update the Portuguese (Brazil) version to version 1.0.23,Update the Portuguese (Brazil) version to version 1.0.23,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1110,2018-04-13T20:44:12Z,2018-04-13T22:53:04Z,2019-04-06T11:39:53Z,CLOSED,False,39,23,1,https://github.com/trinaldi, [loc] update portuguese (Brazil) translation to latest,1,[],https://github.com/pbatard/rufus/pull/1110,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1110#issuecomment-381279075,Update the Portuguese (Brazil) version to version 1.0.23,Applied! Many thanks.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1110,2018-04-13T20:44:12Z,2018-04-13T22:53:04Z,2019-04-06T11:39:53Z,CLOSED,False,39,23,1,https://github.com/trinaldi, [loc] update portuguese (Brazil) translation to latest,1,[],https://github.com/pbatard/rufus/pull/1110,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1110#issuecomment-480497306,Update the Portuguese (Brazil) version to version 1.0.23,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1113,2018-04-19T10:15:38Z,2018-04-19T11:54:22Z,2019-04-06T11:39:51Z,CLOSED,False,35,18,1,https://github.com/ziaa,[loc] Update Persian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1113,https://github.com/ziaa,1,https://github.com/pbatard/rufus/pull/1113,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1113,2018-04-19T10:15:38Z,2018-04-19T11:54:22Z,2019-04-06T11:39:51Z,CLOSED,False,35,18,1,https://github.com/ziaa,[loc] Update Persian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1113,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1113#issuecomment-382706585,,Applied. Much appreciated as always! 😄,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1113,2018-04-19T10:15:38Z,2018-04-19T11:54:22Z,2019-04-06T11:39:51Z,CLOSED,False,35,18,1,https://github.com/ziaa,[loc] Update Persian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1113,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1113#issuecomment-480497303,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1131,2018-05-14T08:11:52Z,2018-05-14T12:39:22Z,2019-04-06T11:39:50Z,CLOSED,False,7,7,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1131,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1131,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1131,2018-05-14T08:11:52Z,2018-05-14T12:39:22Z,2019-04-06T11:39:50Z,CLOSED,False,7,7,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1131,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1131#issuecomment-388802049,,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1131,2018-05-14T08:11:52Z,2018-05-14T12:39:22Z,2019-04-06T11:39:50Z,CLOSED,False,7,7,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1131,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1131#issuecomment-480497293,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1134,2018-05-14T20:11:31Z,2018-05-15T09:25:26Z,2019-04-06T11:39:26Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1134,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1134,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1134,2018-05-14T20:11:31Z,2018-05-15T09:25:26Z,2019-04-06T11:39:26Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1134,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1134#issuecomment-480497280,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1138,2018-05-27T10:33:01Z,2018-05-27T20:32:18Z,2019-04-06T11:39:21Z,CLOSED,False,36,17,1,https://github.com/nmargaritis, Update el-gr translation to 1.0.23,4,[],https://github.com/pbatard/rufus/pull/1138,https://github.com/nmargaritis,1,https://github.com/pbatard/rufus/pull/1138,This PR migrates the el-gr translation to version 1.0.23 🎉 🎉 📚,This PR migrates the el-gr translation to version 1.0.23 🎉 🎉 📚,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1138,2018-05-27T10:33:01Z,2018-05-27T20:32:18Z,2019-04-06T11:39:21Z,CLOSED,False,36,17,1,https://github.com/nmargaritis, Update el-gr translation to 1.0.23,4,[],https://github.com/pbatard/rufus/pull/1138,https://github.com/nmargaritis,2,https://github.com/pbatard/rufus/pull/1138#issuecomment-392321665,This PR migrates the el-gr translation to version 1.0.23 🎉 🎉 📚,"@pbatard Hey Pete, please review this PR.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1138,2018-05-27T10:33:01Z,2018-05-27T20:32:18Z,2019-04-06T11:39:21Z,CLOSED,False,36,17,1,https://github.com/nmargaritis, Update el-gr translation to 1.0.23,4,[],https://github.com/pbatard/rufus/pull/1138,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1138#issuecomment-392363816,This PR migrates the el-gr translation to version 1.0.23 🎉 🎉 📚,Looks good. Thank you very much! 👍,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1138,2018-05-27T10:33:01Z,2018-05-27T20:32:18Z,2019-04-06T11:39:21Z,CLOSED,False,36,17,1,https://github.com/nmargaritis, Update el-gr translation to 1.0.23,4,[],https://github.com/pbatard/rufus/pull/1138,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1138#issuecomment-480497278,This PR migrates the el-gr translation to version 1.0.23 🎉 🎉 📚,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1139,2018-05-27T22:02:41Z,2018-05-28T08:54:01Z,2019-04-06T11:39:18Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1139,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1139,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1139,2018-05-27T22:02:41Z,2018-05-28T08:54:01Z,2019-04-06T11:39:18Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1139,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1139#issuecomment-480497276,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1140,2018-05-29T13:39:23Z,2018-05-29T15:45:52Z,2019-04-06T11:39:16Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1140,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1140,"I have noticed this before 3.0 release, but I was not able to find that in source...","I have noticed this before 3.0 release, but I was not able to find that in source...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1140,2018-05-29T13:39:23Z,2018-05-29T15:45:52Z,2019-04-06T11:39:16Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1140,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1140#issuecomment-480497273,"I have noticed this before 3.0 release, but I was not able to find that in source...",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1151,2018-06-09T02:02:19Z,2018-06-09T10:32:13Z,2019-04-06T11:39:14Z,CLOSED,False,0,0,0,https://github.com/nonomal,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1151,https://github.com/nonomal,1,https://github.com/pbatard/rufus/pull/1151,update 2017-10-22,update 2017-10-22,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1151,2018-06-09T02:02:19Z,2018-06-09T10:32:13Z,2019-04-06T11:39:14Z,CLOSED,False,0,0,0,https://github.com/nonomal,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1151,https://github.com/nonomal,2,https://github.com/pbatard/rufus/pull/1151#issuecomment-395931867,update 2017-10-22,update,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1151,2018-06-09T02:02:19Z,2018-06-09T10:32:13Z,2019-04-06T11:39:14Z,CLOSED,False,0,0,0,https://github.com/nonomal,Merge pull request #1 from pbatard/master,1,[],https://github.com/pbatard/rufus/pull/1151,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1151#issuecomment-480497271,update 2017-10-22,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/Mattiwatti,1,https://github.com/pbatard/rufus/pull/1167,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.","First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.",True,{'THUMBS_UP': ['https://github.com/JonnyTech']}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1167#issuecomment-399610060,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.","Agh!! Where were you 3-4 years ago, when people were pestering me about once a month with regards to XP64 or 2003 installation support?
This patch looks straightforward enough, and considering that I have not yet removed the ability to create XP bootable USBs (you're quite lucky about that, because that was almost the first thing I was about to do for the 3.1 release, as per #1095), I actually have no qualms about applying it, once I have tested it a little bit, since it's not going to affect a part of the code I care much about at this stage...
So you were right about trying your luck with a pull request, as I'm planning to integrate it to the code. I just wish you had submitted that one a few years earlier... 😄",True,{'HOORAY': ['https://github.com/JonnyTech']}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/Mattiwatti,3,https://github.com/pbatard/rufus/pull/1167#issuecomment-399631568,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.","Where I was 4 years ago? Not sure, but clearly I was doing a better job of not having to install XP at the time than I am now 😄 I'm surprised you got so many requests for it to be honest - I guess there are a lot of masochists out there...
Seriously though, purely as an OS XP/2003 was actually very impressive at the time especially considering it was MS's first x64 OS. The company I worked for had a few 2003 servers running in production and they were rock solid. But all those machines contained only carefully selected (and expensive...) hardware that was known to actually have working x64 drivers available. For home use it was an outright disaster, and it still is. By the time vendors finally caught up with x64 support, XP was already out of date and many never even bothered releasing drivers for it.
I did see your comment on #1095 and it was basically my line of thinking as well. Is this patch useless? Kinda. Is it for an OS that's not officially even supported? Yeah. But in terms of damage done it only comes in at +6 LOC at the moment which I'd say is acceptable. If I'd had to rewrite, say, all of SetupWinPE() from scratch only to add x64 support I wouldn't have submitted a PR for that.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/blackcrack,4,https://github.com/pbatard/rufus/pull/1167#issuecomment-399637070,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.","well, Reactos it is at moment on the way to be a modern XP/S2003 (and it is for free/for no money/for less as nothing ... and, the best , reactos is the sourcecode free/open and .. you can helping with !!
And.. the company's can helping with to create a free/open Source and honest WinNT Orderingsystem from the Community for the community of the internet.. and the way it doesn't stop behind version 1.0, goes further up to Win7 and later (what the community determine) and -not- a M$ Designer
The compatibility from (if anyone implement 3.11) from WinXP/S2003 up to .... should stay ad infinitum..
or so.. and should support for ever skining like it was in XP and because the open sourcecode it is possible for programming patches to change it like the owner it want  .. and can do all what the user/owner want..
so i see no different between Reactos and WinXP.. the game goes far, further,  far away..... outer spaceeeee ;) (joke) but it becomes really interesting, just because it is possible to building jobs in Factorys and the Factorys can have his own programming employee('s) and can have more Data security and Factory Security because, the information's can stay in the factory's and in the land's of the factory's now..
so, it is very important to supporting Reactos.. it make jobst and helps to build up :)
best regards
Blacky",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1167#issuecomment-399984083,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.","Now applied.
Note that I modified your commit a little bit to use multidimensional tables (cleaner than switching table pointers IMO), and I also reworked the WINPE_### bitmap constants so that the bits are grouped by ""arch"" (i386 → 3 least significant bits, etc.), so that the bit mapping is less confusing.
I only ran some limited testing with Win2k3 x64 (no XP x64), as well as with a regular XP and MiniNT ISO to confirm that there was no regression.
If you feel like it, you can use https://rufus.ie/testing/rufus-3.1_TEST1.exe that includes the modified commit, as well as your other commit with the speed improvements.
Thanks again for the patch!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/Mattiwatti,6,https://github.com/pbatard/rufus/pull/1167#issuecomment-400293282,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.","Cool. Your method is better. I actually wanted to do the exact same thing (using multidimensional arrays) but decided against it in order to keep the existing code mostly undisturbed. But this way is more readable and also provides future proofing for when the 128 bit version of Windows XP is released.

I only ran some limited testing with Win2k3 x64 (no XP x64)

Windows 2003 and XP x64 are exactly the same thing, so either would have worked :) To be precise, XP x64 RTM corresponds to Server 2003 SP1 (the RTM version of Server 2003 was only available for x86 and Itanium). Of course Microsoft has always used shared codebases for server and client editions (this is only logical), but it's not unfair to say that XP x64 really is just Server 2003 with a different boot logo, themes enabled by default and of course the amazing 64 bit version of Pinball.
I tried your test exe and both formatting and booting the stick worked without any issues (besides the ones inherent to XP x64 in general I mean...). So all seems OK.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/pbatard,7,https://github.com/pbatard/rufus/pull/1167#issuecomment-400294254,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.",Great! Thanks for testing.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1167,2018-06-22T23:12:45Z,2018-06-25T15:03:51Z,2019-04-06T11:39:12Z,CLOSED,False,23,17,3,https://github.com/Mattiwatti,[iso] Support XP/Server 2003 x64 ISOs,1,[],https://github.com/pbatard/rufus/pull/1167,https://github.com/apps/lock,8,https://github.com/pbatard/rufus/pull/1167#issuecomment-480497269,"First of all, thanks for all the work you've put into Rufus. I've been using Rufus for years now and it's a been a breath of relief compared to the dark ages of things that came before it (I had many in-head acronyms for HPUSBFW, but the 'F' always stood for the same thing). So, apologies in advance for the fact that this PR probably made you groan as soon as you read the title, but... here it comes anyway.
Because of reasons, I needed to install a copy of XP x64 on an older machine yesterday. It also happened that the only DVD drive in my house (which I normally would have used, since XP's boot loader is not known for its USB-friendliness to begin with) was broken. So I fired up Rufus, and saw this for the first time in my life:

Even more amazingly, it turns out someone else had this same issue once (#296), although admittedly, that was over 4 years ago, and even then they were told to either fix it themselves or use a supported OS. The FAQ is also pretty clear w.r.t. XP support. So I'm mostly submitting this because I was going to write the patch regardless (I really have no choice in target OS for this machine) and if it gets merged and helps the other 3 people on this planet who use XP x64 for some reason - great. If not, that's fine too.
Some notes on this patch:

The boot process of an x64 CD of XP/Server 2003 is very similar to Server 2003 x86 since they use the same 32 bit setup (by same I mean bitwise identical). Therefore most of the files relevant for Rufus are still under \i386, except for txtsetup.sif which is under \amd64. setupldr.bin must also be patched to use \amd64 paths rather than \i386 ones.
The winpe field of RUFUS_IMG_REPORT has been widened to 2 bytes since there are now 3 base directories that may exist on a WinPE 1.x disk (\i386, \amd64 and \minint) making the maximum possible flag value >1 byte. This could probably be improved if needed since there are still really only 3^3 relevant files at most.
WINPE_MININT is still mutually exclusive with WINPE_I386 as well as the new WINPE_AMD64, but this is not true for (WINPE_I386 & WINPE_AMD64) which gives the nonzero 0x9. Therefore these two flags should always be tested with a strict equality operator if the distinction is important.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1170,2018-06-24T02:48:39Z,2018-06-25T15:03:51Z,2019-04-06T11:39:11Z,CLOSED,False,50,35,1,https://github.com/Mattiwatti,[iso] Improve ISO extraction performance by preallocating files prior to writing,1,[],https://github.com/pbatard/rufus/pull/1170,https://github.com/Mattiwatti,1,https://github.com/pbatard/rufus/pull/1170,"The problem here seems to be the pattern of issuing many synchronous WriteFile calls on the same file handle with small buffers that are limited to the block size of the UDF/ISO 9660 reads. This leads to fragmentation because the target filesystem cannot always keep a file contiguous when its size continuously increases like this.
This commit basically inserts what SetEndOfFile() would do if the file pointer was not 0 in order to force an allocation so that the filesystem can make a better decision about where to place the file and doesn't have to keep moving it around later. A different way to achieve the same thing would be to just read the entire file into memory and then issuing a single WriteFile. But doing that would overcomplicate things for what it's trying to solve IMO (do you really want to allocate 4GB for install.wim? Can you? Not to mention keeping track of whether this buffer has already been freed or not along the various gotos. Etc.)
I tested this patch on a Windows 7 machine with a 64GB USB 3.1 Kingston HyperX, and a Windows 10 machine with a 32GB USB 3.0 Sandisk Extreme. I tried a variety of ISOs, ranging from modern well behaved UEFI ones to pathological cases like the XP setup ISO which contains 8000 files. The only thing I learned is that it's impossible to benchmark any kind of I/O reliably on a modern OS. Even repeating something you just did without changing anything can give a completely different runtime due to caching alone. If anyone knows how this magic can be performed properly, please let me know. All I can say is that I tried really hard to make the original version beat the patched one and the worst result I managed was still a 5% improvement. On Windows 10 I'd guesstimate this to be somewhere in the ballpark of 10% faster on average, and a bit more than that on Windows 7. A lot more if you use plain malicious input like that XP setup disc.","The problem here seems to be the pattern of issuing many synchronous WriteFile calls on the same file handle with small buffers that are limited to the block size of the UDF/ISO 9660 reads. This leads to fragmentation because the target filesystem cannot always keep a file contiguous when its size continuously increases like this.
This commit basically inserts what SetEndOfFile() would do if the file pointer was not 0 in order to force an allocation so that the filesystem can make a better decision about where to place the file and doesn't have to keep moving it around later. A different way to achieve the same thing would be to just read the entire file into memory and then issuing a single WriteFile. But doing that would overcomplicate things for what it's trying to solve IMO (do you really want to allocate 4GB for install.wim? Can you? Not to mention keeping track of whether this buffer has already been freed or not along the various gotos. Etc.)
I tested this patch on a Windows 7 machine with a 64GB USB 3.1 Kingston HyperX, and a Windows 10 machine with a 32GB USB 3.0 Sandisk Extreme. I tried a variety of ISOs, ranging from modern well behaved UEFI ones to pathological cases like the XP setup ISO which contains 8000 files. The only thing I learned is that it's impossible to benchmark any kind of I/O reliably on a modern OS. Even repeating something you just did without changing anything can give a completely different runtime due to caching alone. If anyone knows how this magic can be performed properly, please let me know. All I can say is that I tried really hard to make the original version beat the patched one and the worst result I managed was still a 5% improvement. On Windows 10 I'd guesstimate this to be somewhere in the ballpark of 10% faster on average, and a bit more than that on Windows 7. A lot more if you use plain malicious input like that XP setup disc.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1170,2018-06-24T02:48:39Z,2018-06-25T15:03:51Z,2019-04-06T11:39:11Z,CLOSED,False,50,35,1,https://github.com/Mattiwatti,[iso] Improve ISO extraction performance by preallocating files prior to writing,1,[],https://github.com/pbatard/rufus/pull/1170,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1170#issuecomment-399745900,"The problem here seems to be the pattern of issuing many synchronous WriteFile calls on the same file handle with small buffers that are limited to the block size of the UDF/ISO 9660 reads. This leads to fragmentation because the target filesystem cannot always keep a file contiguous when its size continuously increases like this.
This commit basically inserts what SetEndOfFile() would do if the file pointer was not 0 in order to force an allocation so that the filesystem can make a better decision about where to place the file and doesn't have to keep moving it around later. A different way to achieve the same thing would be to just read the entire file into memory and then issuing a single WriteFile. But doing that would overcomplicate things for what it's trying to solve IMO (do you really want to allocate 4GB for install.wim? Can you? Not to mention keeping track of whether this buffer has already been freed or not along the various gotos. Etc.)
I tested this patch on a Windows 7 machine with a 64GB USB 3.1 Kingston HyperX, and a Windows 10 machine with a 32GB USB 3.0 Sandisk Extreme. I tried a variety of ISOs, ranging from modern well behaved UEFI ones to pathological cases like the XP setup ISO which contains 8000 files. The only thing I learned is that it's impossible to benchmark any kind of I/O reliably on a modern OS. Even repeating something you just did without changing anything can give a completely different runtime due to caching alone. If anyone knows how this magic can be performed properly, please let me know. All I can say is that I tried really hard to make the original version beat the patched one and the worst result I managed was still a 5% improvement. On Windows 10 I'd guesstimate this to be somewhere in the ballpark of 10% faster on average, and a bit more than that on Windows 7. A lot more if you use plain malicious input like that XP setup disc.","Very nice!
I wasn't aware of this trick and it makes a lot of sense to have it in Rufus indeed.
When I get a chance (might be in a day or two), I'll validate it and integrate your commit to the codebase.
With regards to speedups, the other trick I had thought of was, if there's enough free RAM available (and the user agrees to using that feature, which would of course be optional), to start copying the whole ISO to memory as soon as the user has selected it, and then work with the in-memory copy. A bit similar to your other suggestion, the idea, since most ISO file content is going to be sequential on disc (though UDF can have sparse files, which complicates matters), would be to be able to write the whole file in one go by simply pointing the write buffer to the RAM-cached sequential ISO data.
Of course, this presents some new issues (for instance, what should we do if the user clicked START before the file blocks we are interested in have been cached in RAM? If we're dealing with a 4GB install.wim, and the user was quick on launching the operation, or the disk they have the image on is slow, it makes little sense to wait for the last install.wim block to be available in RAM before starting to write that file to the USB, as the whole operation is likely to be much slower then), so I didn't look that seriously into it.
Eventually, the best approach to speeding things up, since we are reformatting the drive anyway, would be to both ""manually"" create the file system (allocation tables, directory entries and so on) and copy data at the same time, by having Rufus provide its own low-level FAT32 or NTFS handling. But of course, that' would be a whole different and super time-consuming endeavour...
At any rate, thank you very much for submitting this commit. I'll make sure it gets integrated in Rufus 3.2!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1170,2018-06-24T02:48:39Z,2018-06-25T15:03:51Z,2019-04-06T11:39:11Z,CLOSED,False,50,35,1,https://github.com/Mattiwatti,[iso] Improve ISO extraction performance by preallocating files prior to writing,1,[],https://github.com/pbatard/rufus/pull/1170,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1170#issuecomment-399984051,"The problem here seems to be the pattern of issuing many synchronous WriteFile calls on the same file handle with small buffers that are limited to the block size of the UDF/ISO 9660 reads. This leads to fragmentation because the target filesystem cannot always keep a file contiguous when its size continuously increases like this.
This commit basically inserts what SetEndOfFile() would do if the file pointer was not 0 in order to force an allocation so that the filesystem can make a better decision about where to place the file and doesn't have to keep moving it around later. A different way to achieve the same thing would be to just read the entire file into memory and then issuing a single WriteFile. But doing that would overcomplicate things for what it's trying to solve IMO (do you really want to allocate 4GB for install.wim? Can you? Not to mention keeping track of whether this buffer has already been freed or not along the various gotos. Etc.)
I tested this patch on a Windows 7 machine with a 64GB USB 3.1 Kingston HyperX, and a Windows 10 machine with a 32GB USB 3.0 Sandisk Extreme. I tried a variety of ISOs, ranging from modern well behaved UEFI ones to pathological cases like the XP setup ISO which contains 8000 files. The only thing I learned is that it's impossible to benchmark any kind of I/O reliably on a modern OS. Even repeating something you just did without changing anything can give a completely different runtime due to caching alone. If anyone knows how this magic can be performed properly, please let me know. All I can say is that I tried really hard to make the original version beat the patched one and the worst result I managed was still a 5% improvement. On Windows 10 I'd guesstimate this to be somewhere in the ballpark of 10% faster on average, and a bit more than that on Windows 7. A lot more if you use plain malicious input like that XP setup disc.",Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1170,2018-06-24T02:48:39Z,2018-06-25T15:03:51Z,2019-04-06T11:39:11Z,CLOSED,False,50,35,1,https://github.com/Mattiwatti,[iso] Improve ISO extraction performance by preallocating files prior to writing,1,[],https://github.com/pbatard/rufus/pull/1170,https://github.com/Mattiwatti,4,https://github.com/pbatard/rufus/pull/1170#issuecomment-400777661,"The problem here seems to be the pattern of issuing many synchronous WriteFile calls on the same file handle with small buffers that are limited to the block size of the UDF/ISO 9660 reads. This leads to fragmentation because the target filesystem cannot always keep a file contiguous when its size continuously increases like this.
This commit basically inserts what SetEndOfFile() would do if the file pointer was not 0 in order to force an allocation so that the filesystem can make a better decision about where to place the file and doesn't have to keep moving it around later. A different way to achieve the same thing would be to just read the entire file into memory and then issuing a single WriteFile. But doing that would overcomplicate things for what it's trying to solve IMO (do you really want to allocate 4GB for install.wim? Can you? Not to mention keeping track of whether this buffer has already been freed or not along the various gotos. Etc.)
I tested this patch on a Windows 7 machine with a 64GB USB 3.1 Kingston HyperX, and a Windows 10 machine with a 32GB USB 3.0 Sandisk Extreme. I tried a variety of ISOs, ranging from modern well behaved UEFI ones to pathological cases like the XP setup ISO which contains 8000 files. The only thing I learned is that it's impossible to benchmark any kind of I/O reliably on a modern OS. Even repeating something you just did without changing anything can give a completely different runtime due to caching alone. If anyone knows how this magic can be performed properly, please let me know. All I can say is that I tried really hard to make the original version beat the patched one and the worst result I managed was still a 5% improvement. On Windows 10 I'd guesstimate this to be somewhere in the ballpark of 10% faster on average, and a bit more than that on Windows 7. A lot more if you use plain malicious input like that XP setup disc.","Yes, I thought the same about the first approach you mentioned. It is very much a gamble depending on the layout of the ISO. In general I don't think there would be that much benefit anyway because by definition the input ISO is always going to be on a different physical disk than the target disk (since the first thing Rufus does is wipe the target disk).
Your last suggestion is indeed very interesting because ideally, you would be able to construct the target file system completely in memory and then write it to the USB disk in one go, dd style. But this would involve either writing a small filesystem driver (<-- this is an oxymoron), or making some kind of ramdisk and doing file operations on it like on a normal disk, and then afterward write to the target disk by copying the ramdisk as raw bytes. I think in both cases you would probably need a driver for this to work, unless I'm missing some other more obvious approach.
What puzzles me about this particular fix is that NTFS was visibly being fragmented by Rufus. Not much (1-2% in most cases) but 25% for the XP disk. After patch: 0% fragmentation. However for FAT32 I get 0% fragmentation either way. So my thinking was: both filesystems are aware of the write fragmentation occurring, but NTFS has a more lax policy towards this than FAT32 which defragments after itself (this can be seen by the CPU time spent in CloseHandle - this is where the FS does cleanup).
Possibly FAT32 read performance suffers so much from fragmentation that it is simply disallowed from happening, at the cost of write speed, whereas NTFS is OK with fragmentation to some degree. I don't know. But the funny thing is that it is actually NTFS that benefits more from this patch. This is the opposite of what I would expect, because FAT32 is the one that no longer has to defragment itself on the fly all the time.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1170,2018-06-24T02:48:39Z,2018-06-25T15:03:51Z,2019-04-06T11:39:11Z,CLOSED,False,50,35,1,https://github.com/Mattiwatti,[iso] Improve ISO extraction performance by preallocating files prior to writing,1,[],https://github.com/pbatard/rufus/pull/1170,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/1170#issuecomment-480497267,"The problem here seems to be the pattern of issuing many synchronous WriteFile calls on the same file handle with small buffers that are limited to the block size of the UDF/ISO 9660 reads. This leads to fragmentation because the target filesystem cannot always keep a file contiguous when its size continuously increases like this.
This commit basically inserts what SetEndOfFile() would do if the file pointer was not 0 in order to force an allocation so that the filesystem can make a better decision about where to place the file and doesn't have to keep moving it around later. A different way to achieve the same thing would be to just read the entire file into memory and then issuing a single WriteFile. But doing that would overcomplicate things for what it's trying to solve IMO (do you really want to allocate 4GB for install.wim? Can you? Not to mention keeping track of whether this buffer has already been freed or not along the various gotos. Etc.)
I tested this patch on a Windows 7 machine with a 64GB USB 3.1 Kingston HyperX, and a Windows 10 machine with a 32GB USB 3.0 Sandisk Extreme. I tried a variety of ISOs, ranging from modern well behaved UEFI ones to pathological cases like the XP setup ISO which contains 8000 files. The only thing I learned is that it's impossible to benchmark any kind of I/O reliably on a modern OS. Even repeating something you just did without changing anything can give a completely different runtime due to caching alone. If anyone knows how this magic can be performed properly, please let me know. All I can say is that I tried really hard to make the original version beat the patched one and the worst result I managed was still a 5% improvement. On Windows 10 I'd guesstimate this to be somewhere in the ballpark of 10% faster on average, and a bit more than that on Windows 7. A lot more if you use plain malicious input like that XP setup disc.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1174,2018-06-28T12:27:09Z,2018-07-06T12:33:23Z,2019-04-06T11:39:08Z,CLOSED,False,89,4,3,https://github.com/renevdzee,"add cheat mode (alt-""-"") to quickly erase a flash drive ",2,[],https://github.com/pbatard/rufus/pull/1174,https://github.com/renevdzee,1,https://github.com/pbatard/rufus/pull/1174,"I add a cheat mode (alt-""-"") to quickly erase a flash drive by skipping blocks that are already empty (a usb flashdrive reads a lot faster than it writes). This is very useful to erase partially used flash drives.

classifies blocks filled with either 0x00 or 0xff as empty. Some/most flash drives are erased to 0xff from the factory.
added a new message MSG_306, so far only translated into dutch.
added a BOOL ""smart_skip"" to enable this feature. Currently setting ""zero_drive"" combined with ""smart_skip"" enables the erase cheat mode. I am not sure if this is the right way.
could also be enabled to skip unchanged blocks when writing or zeroing a drive, but I don't see the use-case for that.","I add a cheat mode (alt-""-"") to quickly erase a flash drive by skipping blocks that are already empty (a usb flashdrive reads a lot faster than it writes). This is very useful to erase partially used flash drives.

classifies blocks filled with either 0x00 or 0xff as empty. Some/most flash drives are erased to 0xff from the factory.
added a new message MSG_306, so far only translated into dutch.
added a BOOL ""smart_skip"" to enable this feature. Currently setting ""zero_drive"" combined with ""smart_skip"" enables the erase cheat mode. I am not sure if this is the right way.
could also be enabled to skip unchanged blocks when writing or zeroing a drive, but I don't see the use-case for that.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1174,2018-06-28T12:27:09Z,2018-07-06T12:33:23Z,2019-04-06T11:39:08Z,CLOSED,False,89,4,3,https://github.com/renevdzee,"add cheat mode (alt-""-"") to quickly erase a flash drive ",2,[],https://github.com/pbatard/rufus/pull/1174,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1174#issuecomment-401093168,"I add a cheat mode (alt-""-"") to quickly erase a flash drive by skipping blocks that are already empty (a usb flashdrive reads a lot faster than it writes). This is very useful to erase partially used flash drives.

classifies blocks filled with either 0x00 or 0xff as empty. Some/most flash drives are erased to 0xff from the factory.
added a new message MSG_306, so far only translated into dutch.
added a BOOL ""smart_skip"" to enable this feature. Currently setting ""zero_drive"" combined with ""smart_skip"" enables the erase cheat mode. I am not sure if this is the right way.
could also be enabled to skip unchanged blocks when writing or zeroing a drive, but I don't see the use-case for that.","That sounds like a fair enhancement, so I'll see what I can do to integrate it.
I'll probably modify it a little though, and it will also probably be a couple of days or more before I can get started on that.
Thanks for the pull request.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1174,2018-06-28T12:27:09Z,2018-07-06T12:33:23Z,2019-04-06T11:39:08Z,CLOSED,False,89,4,3,https://github.com/renevdzee,"add cheat mode (alt-""-"") to quickly erase a flash drive ",2,[],https://github.com/pbatard/rufus/pull/1174,None,3,https://github.com/pbatard/rufus/pull/1174#issuecomment-401648080,"I add a cheat mode (alt-""-"") to quickly erase a flash drive by skipping blocks that are already empty (a usb flashdrive reads a lot faster than it writes). This is very useful to erase partially used flash drives.

classifies blocks filled with either 0x00 or 0xff as empty. Some/most flash drives are erased to 0xff from the factory.
added a new message MSG_306, so far only translated into dutch.
added a BOOL ""smart_skip"" to enable this feature. Currently setting ""zero_drive"" combined with ""smart_skip"" enables the erase cheat mode. I am not sure if this is the right way.
could also be enabled to skip unchanged blocks when writing or zeroing a drive, but I don't see the use-case for that.","l ""es-ES"" ""Spanish (Español)"" 0x040a
t MSG_306 ""Borrando disco: %0.1f%% completado""",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1174,2018-06-28T12:27:09Z,2018-07-06T12:33:23Z,2019-04-06T11:39:08Z,CLOSED,False,89,4,3,https://github.com/renevdzee,"add cheat mode (alt-""-"") to quickly erase a flash drive ",2,[],https://github.com/pbatard/rufus/pull/1174,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1174#issuecomment-403020631,"I add a cheat mode (alt-""-"") to quickly erase a flash drive by skipping blocks that are already empty (a usb flashdrive reads a lot faster than it writes). This is very useful to erase partially used flash drives.

classifies blocks filled with either 0x00 or 0xff as empty. Some/most flash drives are erased to 0xff from the factory.
added a new message MSG_306, so far only translated into dutch.
added a BOOL ""smart_skip"" to enable this feature. Currently setting ""zero_drive"" combined with ""smart_skip"" enables the erase cheat mode. I am not sure if this is the right way.
could also be enabled to skip unchanged blocks when writing or zeroing a drive, but I don't see the use-case for that.","Okay, I have now applied a slightly modified version of this patch to Rufus mainline at long last.
Note that I have changed the cheat mode from, Alt-- to Ctrl-Alt-Z, since this is pretty much an enhancement of Alt-Z, and I am already doing something like this for Alt-F/Ctrl-Alt-F.
I am also renaming this feature to Fast-zeroing, even as I understand that there are provisions to use it for more than zeroing a drive. The reason behind that is that I really want users who may only get a clue about the feature from what is displayed in the UI to at least get some idea of the intent behind this feature, which I don't thing ""Erase"" vs ""Zero"" provides much insight about (even if, depending on your hardware and existing content, Fast-zeroing may actually be slower than regular zeroing).
As a result of this, I had to ditch the NL and ES translation. But to tell the truth, I very much prefer to have the regular translator take care of translations, for many different reasons, one of which being that, until I start a new round of translation (which is something I try to limit at no more than one every 5-6 months, as it gets exceedingly time consuming for me otherwise), I want to be able to change any new/modified English messages freely, which means that none of the new English changes should be considered final. So please don't worry about providing me a translation for a single message. I would very much prefer that you do not.
At any rate, thank you very much for this pull request!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1174,2018-06-28T12:27:09Z,2018-07-06T12:33:23Z,2019-04-06T11:39:08Z,CLOSED,False,89,4,3,https://github.com/renevdzee,"add cheat mode (alt-""-"") to quickly erase a flash drive ",2,[],https://github.com/pbatard/rufus/pull/1174,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/1174#issuecomment-480497266,"I add a cheat mode (alt-""-"") to quickly erase a flash drive by skipping blocks that are already empty (a usb flashdrive reads a lot faster than it writes). This is very useful to erase partially used flash drives.

classifies blocks filled with either 0x00 or 0xff as empty. Some/most flash drives are erased to 0xff from the factory.
added a new message MSG_306, so far only translated into dutch.
added a BOOL ""smart_skip"" to enable this feature. Currently setting ""zero_drive"" combined with ""smart_skip"" enables the erase cheat mode. I am not sure if this is the right way.
could also be enabled to skip unchanged blocks when writing or zeroing a drive, but I don't see the use-case for that.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1182,2018-07-21T14:58:15Z,2018-07-21T17:28:12Z,2019-04-06T11:39:07Z,CLOSED,False,1596,0,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1182,https://github.com/Chocobo1,1,https://github.com/pbatard/rufus/pull/1182,"A bit of problem here, pardon... Since my poedit is installed on a linux machine,  I don't know how tell pollock.exe to convert zh-TW.po back to rufus.loc file, so I'm only sending you the .po file here.
I.e. I'm running pollock.exe on windows, after it outputs zh-TW.po, I send it on my linux VM to edit, then now there is no way to convert back AFAIK.
Let me know if there is any way I can do better.","A bit of problem here, pardon... Since my poedit is installed on a linux machine,  I don't know how tell pollock.exe to convert zh-TW.po back to rufus.loc file, so I'm only sending you the .po file here.
I.e. I'm running pollock.exe on windows, after it outputs zh-TW.po, I send it on my linux VM to edit, then now there is no way to convert back AFAIK.
Let me know if there is any way I can do better.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1182,2018-07-21T14:58:15Z,2018-07-21T17:28:12Z,2019-04-06T11:39:07Z,CLOSED,False,1596,0,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1182,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1182#issuecomment-406811359,"A bit of problem here, pardon... Since my poedit is installed on a linux machine,  I don't know how tell pollock.exe to convert zh-TW.po back to rufus.loc file, so I'm only sending you the .po file here.
I.e. I'm running pollock.exe on windows, after it outputs zh-TW.po, I send it on my linux VM to edit, then now there is no way to convert back AFAIK.
Let me know if there is any way I can do better.","That's fine, but I kind of expect translators to be able to run everything in a Windows environment since you are supposed to validate your changes using the rufus.loc generated by pollock by running Rufus (and Rufus requires admin rights so I expect that you are able to install Poedit on the platform where you run Rufus). If you really want to run pollock on Linux, I can look into creating a .NET core version that can work there, but I'd like to understand your requirements a bit better.
Anyway, I reviewed your changes and they look fine. Many thanks for the update!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1182,2018-07-21T14:58:15Z,2018-07-21T17:28:12Z,2019-04-06T11:39:07Z,CLOSED,False,1596,0,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1182,https://github.com/Chocobo1,3,https://github.com/pbatard/rufus/pull/1182#issuecomment-406814299,"A bit of problem here, pardon... Since my poedit is installed on a linux machine,  I don't know how tell pollock.exe to convert zh-TW.po back to rufus.loc file, so I'm only sending you the .po file here.
I.e. I'm running pollock.exe on windows, after it outputs zh-TW.po, I send it on my linux VM to edit, then now there is no way to convert back AFAIK.
Let me know if there is any way I can do better.","I can look into creating a .NET core version that can work there, but I'd like to understand your requirements a bit better.

Running on linux is an edge case, so I won't bother if I were you.
However it might improve the situation if the conversion back to .loc is done when I see the message ""Poedit was not found. You will have to launch it and ..."" and ""Now press any key to launch your e-mail client ..."". I mean do the convert after key input (just before the e-mail client is launched).
I'm not sure it will make sense, just some idea.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1182,2018-07-21T14:58:15Z,2018-07-21T17:28:12Z,2019-04-06T11:39:07Z,CLOSED,False,1596,0,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1182,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1182#issuecomment-406830105,"A bit of problem here, pardon... Since my poedit is installed on a linux machine,  I don't know how tell pollock.exe to convert zh-TW.po back to rufus.loc file, so I'm only sending you the .po file here.
I.e. I'm running pollock.exe on windows, after it outputs zh-TW.po, I send it on my linux VM to edit, then now there is no way to convert back AFAIK.
Let me know if there is any way I can do better.","Actually, what you want should already be in there. The process that monitors whether the .po has been updated is launched regardless of whether Poedit is found or not.
So, if you copy the .po back to the location where you picked it, and you still have Pollock running, it should create the updated .loc for you, even if you didn't run Poedit on the same machine.
I guess you can try that with the next round of translations, and let me know if that doesn't work.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1182,2018-07-21T14:58:15Z,2018-07-21T17:28:12Z,2019-04-06T11:39:07Z,CLOSED,False,1596,0,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1182,https://github.com/Chocobo1,5,https://github.com/pbatard/rufus/pull/1182#issuecomment-406883804,"A bit of problem here, pardon... Since my poedit is installed on a linux machine,  I don't know how tell pollock.exe to convert zh-TW.po back to rufus.loc file, so I'm only sending you the .po file here.
I.e. I'm running pollock.exe on windows, after it outputs zh-TW.po, I send it on my linux VM to edit, then now there is no way to convert back AFAIK.
Let me know if there is any way I can do better.","Actually, what you want should already be in there.

Tested, I can verify it do work as expected! 👍",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1182,2018-07-21T14:58:15Z,2018-07-21T17:28:12Z,2019-04-06T11:39:07Z,CLOSED,False,1596,0,1,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1182,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/1182#issuecomment-480497264,"A bit of problem here, pardon... Since my poedit is installed on a linux machine,  I don't know how tell pollock.exe to convert zh-TW.po back to rufus.loc file, so I'm only sending you the .po file here.
I.e. I'm running pollock.exe on windows, after it outputs zh-TW.po, I send it on my linux VM to edit, then now there is no way to convert back AFAIK.
Let me know if there is any way I can do better.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1184,2018-07-22T23:58:04Z,2018-07-23T10:10:46Z,2019-04-06T11:39:04Z,CLOSED,False,1615,0,1,https://github.com/trinaldi,[loc] update Portuguese Brazilian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1184,https://github.com/trinaldi,1,https://github.com/pbatard/rufus/pull/1184,"Translations are now easier thanks to the new system. This is the new version, with .po file created.
Keep it up.","Translations are now easier thanks to the new system. This is the new version, with .po file created.
Keep it up.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1184,2018-07-22T23:58:04Z,2018-07-23T10:10:46Z,2019-04-06T11:39:04Z,CLOSED,False,1615,0,1,https://github.com/trinaldi,[loc] update Portuguese Brazilian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1184,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1184#issuecomment-407007929,"Translations are now easier thanks to the new system. This is the new version, with .po file created.
Keep it up.",Looks good. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1184,2018-07-22T23:58:04Z,2018-07-23T10:10:46Z,2019-04-06T11:39:04Z,CLOSED,False,1615,0,1,https://github.com/trinaldi,[loc] update Portuguese Brazilian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1184,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1184#issuecomment-480497262,"Translations are now easier thanks to the new system. This is the new version, with .po file created.
Keep it up.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1212,2018-09-20T09:51:51Z,2018-09-21T12:58:05Z,2019-04-06T11:39:02Z,CLOSED,False,8,8,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1212,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1212,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1212,2018-09-20T09:51:51Z,2018-09-21T12:58:05Z,2019-04-06T11:39:02Z,CLOSED,False,8,8,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1212,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1212#issuecomment-423521957,,Applied. Thanks!,True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
pbatard/rufus,https://github.com/pbatard/rufus,1212,2018-09-20T09:51:51Z,2018-09-21T12:58:05Z,2019-04-06T11:39:02Z,CLOSED,False,8,8,1,https://github.com/marcellogianola,[loc] update Italian translation to latest,1,[],https://github.com/pbatard/rufus/pull/1212,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1212#issuecomment-480497257,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1231,2018-10-19T13:52:43Z,2018-10-19T14:59:55Z,2019-04-06T11:39:00Z,CLOSED,False,0,0,6,https://github.com/apps/imgbot,[ImgBot] Optimize images,1,[],https://github.com/pbatard/rufus/pull/1231,https://github.com/apps/imgbot,1,https://github.com/pbatard/rufus/pull/1231,"Beep boop. Your images are optimized!
Your image file size has been reduced by 8% 🎉


Details




File
Before
After
Percent reduction




/res/icons/lang-32.png
2.35kb
2.04kb
13.25%


/res/icons/info-24.png
1.17kb
1.07kb
9.08%


/res/icons/info-32.png
1.54kb
1.41kb
8.38%


/res/icons/hash-32.png
1.96kb
1.80kb
7.93%


/res/icons/hash-24.png
1.34kb
1.33kb
1.31%


/res/icons/info-16.png
0.69kb
0.68kb
0.85%








Total :
9.05kb
8.33kb
8.01%





📝docs |  repo | 🙋issues | 🏅swag | 🏪marketplace","Beep boop. Your images are optimized!
Your image file size has been reduced by 8% 🎉


Details




File
Before
After
Percent reduction




/res/icons/lang-32.png
2.35kb
2.04kb
13.25%


/res/icons/info-24.png
1.17kb
1.07kb
9.08%


/res/icons/info-32.png
1.54kb
1.41kb
8.38%


/res/icons/hash-32.png
1.96kb
1.80kb
7.93%


/res/icons/hash-24.png
1.34kb
1.33kb
1.31%


/res/icons/info-16.png
0.69kb
0.68kb
0.85%








Total :
9.05kb
8.33kb
8.01%





📝docs |  repo | 🙋issues | 🏅swag | 🏪marketplace",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1231,2018-10-19T13:52:43Z,2018-10-19T14:59:55Z,2019-04-06T11:39:00Z,CLOSED,False,0,0,6,https://github.com/apps/imgbot,[ImgBot] Optimize images,1,[],https://github.com/pbatard/rufus/pull/1231,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1231#issuecomment-480497255,"Beep boop. Your images are optimized!
Your image file size has been reduced by 8% 🎉


Details




File
Before
After
Percent reduction




/res/icons/lang-32.png
2.35kb
2.04kb
13.25%


/res/icons/info-24.png
1.17kb
1.07kb
9.08%


/res/icons/info-32.png
1.54kb
1.41kb
8.38%


/res/icons/hash-32.png
1.96kb
1.80kb
7.93%


/res/icons/hash-24.png
1.34kb
1.33kb
1.31%


/res/icons/info-16.png
0.69kb
0.68kb
0.85%








Total :
9.05kb
8.33kb
8.01%





📝docs |  repo | 🙋issues | 🏅swag | 🏪marketplace",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1236,2018-10-23T19:31:17Z,2018-10-30T12:57:56Z,2020-01-25T23:16:31Z,CLOSED,False,57,11,1,https://github.com/chazste,Add command line handling of preferred file system.,1,[],https://github.com/pbatard/rufus/pull/1236,https://github.com/chazste,1,https://github.com/pbatard/rufus/pull/1236,"Pete,
Here is my proposed implementation of a command line parameter to set up a preferred filesystem type. I modeled the command line handling off of the existing -l code. I believe it works the way you requested. The only thing I noticed is that even though this was intended (by me anyway) to be used with -i it stays in effect for the entire ""session"" while -i is a one-shot.  I think that is OK and the both options have the behavior that I would expect. But that may just be because I don't want to write the one extra line to make this a one-shot as well :)
Also I did not choose to mess with your existing one character command line options. I just chose -p for ""preferred file system"" and called it good. We had discussed -d for default but I think preferred is a better term anyway based on the behavior.","Pete,
Here is my proposed implementation of a command line parameter to set up a preferred filesystem type. I modeled the command line handling off of the existing -l code. I believe it works the way you requested. The only thing I noticed is that even though this was intended (by me anyway) to be used with -i it stays in effect for the entire ""session"" while -i is a one-shot.  I think that is OK and the both options have the behavior that I would expect. But that may just be because I don't want to write the one extra line to make this a one-shot as well :)
Also I did not choose to mess with your existing one character command line options. I just chose -p for ""preferred file system"" and called it good. We had discussed -d for default but I think preferred is a better term anyway based on the behavior.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1236,2018-10-23T19:31:17Z,2018-10-30T12:57:56Z,2020-01-25T23:16:31Z,CLOSED,False,57,11,1,https://github.com/chazste,Add command line handling of preferred file system.,1,[],https://github.com/pbatard/rufus/pull/1236,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1236#issuecomment-432421225,"Pete,
Here is my proposed implementation of a command line parameter to set up a preferred filesystem type. I modeled the command line handling off of the existing -l code. I believe it works the way you requested. The only thing I noticed is that even though this was intended (by me anyway) to be used with -i it stays in effect for the entire ""session"" while -i is a one-shot.  I think that is OK and the both options have the behavior that I would expect. But that may just be because I don't want to write the one extra line to make this a one-shot as well :)
Also I did not choose to mess with your existing one character command line options. I just chose -p for ""preferred file system"" and called it good. We had discussed -d for default but I think preferred is a better term anyway based on the behavior.","Thanks. It may be a few days before I get a chance to look into it (and I am still planning to switch the option to -f, as I'm pretty sure this will be a lot more intuitive for an option that effectively sets the file system than relying on people remembering that ""preferred"" qualifier...",True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
pbatard/rufus,https://github.com/pbatard/rufus,1236,2018-10-23T19:31:17Z,2018-10-30T12:57:56Z,2020-01-25T23:16:31Z,CLOSED,False,57,11,1,https://github.com/chazste,Add command line handling of preferred file system.,1,[],https://github.com/pbatard/rufus/pull/1236,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1236#issuecomment-434290652,"Pete,
Here is my proposed implementation of a command line parameter to set up a preferred filesystem type. I modeled the command line handling off of the existing -l code. I believe it works the way you requested. The only thing I noticed is that even though this was intended (by me anyway) to be used with -i it stays in effect for the entire ""session"" while -i is a one-shot.  I think that is OK and the both options have the behavior that I would expect. But that may just be because I don't want to write the one extra line to make this a one-shot as well :)
Also I did not choose to mess with your existing one character command line options. I just chose -p for ""preferred file system"" and called it good. We had discussed -d for default but I think preferred is a better term anyway based on the behavior.","Applied, with a few changes. Mostly, I set the new option to use the -f flag, as I mentioned, and moved the old -f to -x.
Many thanks.",True,"{'THUMBS_UP': ['https://github.com/Ibuprophen'], 'HOORAY': ['https://github.com/Ibuprophen']}"
pbatard/rufus,https://github.com/pbatard/rufus,1236,2018-10-23T19:31:17Z,2018-10-30T12:57:56Z,2020-01-25T23:16:31Z,CLOSED,False,57,11,1,https://github.com/chazste,Add command line handling of preferred file system.,1,[],https://github.com/pbatard/rufus/pull/1236,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1236#issuecomment-480497253,"Pete,
Here is my proposed implementation of a command line parameter to set up a preferred filesystem type. I modeled the command line handling off of the existing -l code. I believe it works the way you requested. The only thing I noticed is that even though this was intended (by me anyway) to be used with -i it stays in effect for the entire ""session"" while -i is a one-shot.  I think that is OK and the both options have the behavior that I would expect. But that may just be because I don't want to write the one extra line to make this a one-shot as well :)
Also I did not choose to mess with your existing one character command line options. I just chose -p for ""preferred file system"" and called it good. We had discussed -d for default but I think preferred is a better term anyway based on the behavior.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1244,2018-11-10T20:08:38Z,2018-11-12T13:03:51Z,2020-01-25T23:16:49Z,CLOSED,False,15,15,1,https://github.com/chazste,issue 1243,1,[],https://github.com/pbatard/rufus/pull/1244,https://github.com/chazste,1,https://github.com/pbatard/rufus/pull/1244,"Move console attach closer to the creation of the hogger, and only even attempt the attach if the user did not request a GUI program.
Peter,
This change is a little more disruptive than I had originally envisioned. However I think this is a good compromise between the size of the change and keeping the intent clear. The two operations that deal with the parent process' console are now both protected by the -g flag.","Move console attach closer to the creation of the hogger, and only even attempt the attach if the user did not request a GUI program.
Peter,
This change is a little more disruptive than I had originally envisioned. However I think this is a good compromise between the size of the change and keeping the intent clear. The two operations that deal with the parent process' console are now both protected by the -g flag.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1244,2018-11-10T20:08:38Z,2018-11-12T13:03:51Z,2020-01-25T23:16:49Z,CLOSED,False,15,15,1,https://github.com/chazste,issue 1243,1,[],https://github.com/pbatard/rufus/pull/1244,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1244#issuecomment-437870781,"Move console attach closer to the creation of the hogger, and only even attempt the attach if the user did not request a GUI program.
Peter,
This change is a little more disruptive than I had originally envisioned. However I think this is a good compromise between the size of the change and keeping the intent clear. The two operations that deal with the parent process' console are now both protected by the -g flag.",Looks good to me. Thanks for the patch.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1244,2018-11-10T20:08:38Z,2018-11-12T13:03:51Z,2020-01-25T23:16:49Z,CLOSED,False,15,15,1,https://github.com/chazste,issue 1243,1,[],https://github.com/pbatard/rufus/pull/1244,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1244#issuecomment-480497251,"Move console attach closer to the creation of the hogger, and only even attempt the attach if the user did not request a GUI program.
Peter,
This change is a little more disruptive than I had originally envisioned. However I think this is a good compromise between the size of the change and keeping the intent clear. The two operations that deal with the parent process' console are now both protected by the -g flag.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1252,2018-12-17T20:57:47Z,2018-12-17T21:18:55Z,2019-04-06T11:38:52Z,CLOSED,False,1,1,1,None,[misc] changed the copyright year in the comment,1,[],https://github.com/pbatard/rufus/pull/1252,None,1,https://github.com/pbatard/rufus/pull/1252,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1252,2018-12-17T20:57:47Z,2018-12-17T21:18:55Z,2019-04-06T11:38:52Z,CLOSED,False,1,1,1,None,[misc] changed the copyright year in the comment,1,[],https://github.com/pbatard/rufus/pull/1252,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1252#issuecomment-448002428,,"Please don't submit pull request for changing a copyright year. It brings nothing to a project and, even if it may sound harsh, makes a developer waste time on fruitless matters.
→ Rejected.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1252,2018-12-17T20:57:47Z,2018-12-17T21:18:55Z,2019-04-06T11:38:52Z,CLOSED,False,1,1,1,None,[misc] changed the copyright year in the comment,1,[],https://github.com/pbatard/rufus/pull/1252,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1252#issuecomment-480497245,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1260,2019-01-09T11:19:17Z,2019-01-09T11:40:18Z,2019-04-09T12:36:00Z,CLOSED,False,6,6,1,https://github.com/suprovsky,A few typos,1,[],https://github.com/pbatard/rufus/pull/1260,https://github.com/suprovsky,1,https://github.com/pbatard/rufus/pull/1260,"Oh yeah, it's for a polish translation.","Oh yeah, it's for a polish translation.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1260,2019-01-09T11:19:17Z,2019-01-09T11:40:18Z,2019-04-09T12:36:00Z,CLOSED,False,6,6,1,https://github.com/suprovsky,A few typos,1,[],https://github.com/pbatard/rufus/pull/1260,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1260#issuecomment-452667283,"Oh yeah, it's for a polish translation.",Applied. Thanks!,True,{'HEART': ['https://github.com/suprovsky']}
pbatard/rufus,https://github.com/pbatard/rufus,1260,2019-01-09T11:19:17Z,2019-01-09T11:40:18Z,2019-04-09T12:36:00Z,CLOSED,False,6,6,1,https://github.com/suprovsky,A few typos,1,[],https://github.com/pbatard/rufus/pull/1260,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1260#issuecomment-481232688,"Oh yeah, it's for a polish translation.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1280,2019-03-14T07:35:30Z,2019-03-14T13:07:13Z,2019-06-12T14:19:37Z,CLOSED,False,186,41,2,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1280,https://github.com/Chocobo1,1,https://github.com/pbatard/rufus/pull/1280,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1280,2019-03-14T07:35:30Z,2019-03-14T13:07:13Z,2019-06-12T14:19:37Z,CLOSED,False,186,41,2,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1280,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1280#issuecomment-472844973,,Much appreciated. Thanks! 😄,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1280,2019-03-14T07:35:30Z,2019-03-14T13:07:13Z,2019-06-12T14:19:37Z,CLOSED,False,186,41,2,https://github.com/Chocobo1,[loc] update Traditional Chinese translation to latest,1,[],https://github.com/pbatard/rufus/pull/1280,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1280#issuecomment-501295248,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1282,2019-03-15T06:49:48Z,2019-03-15T08:40:58Z,2019-06-13T09:59:37Z,CLOSED,False,1,0,1,https://github.com/neonenoneo,<SPAM>,1,[],https://github.com/pbatard/rufus/pull/1282,https://github.com/neonenoneo,1,https://github.com/pbatard/rufus/pull/1282,<SPAM>,<SPAM>,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1282,2019-03-15T06:49:48Z,2019-03-15T08:40:58Z,2019-06-13T09:59:37Z,CLOSED,False,1,0,1,https://github.com/neonenoneo,<SPAM>,1,[],https://github.com/pbatard/rufus/pull/1282,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1282#issuecomment-501636456,<SPAM>,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1293,2019-03-29T07:43:46Z,2019-03-29T16:21:25Z,2019-06-27T17:17:14Z,CLOSED,False,46,46,1,https://github.com/Tmp341,Updating Turkish localization,1,[],https://github.com/pbatard/rufus/pull/1293,https://github.com/Tmp341,1,https://github.com/pbatard/rufus/pull/1293,"Fixing typos
Adding untranslated parts
Making small changes, so they would be more understandable.

You can wait for @MehmetaliKuran 's approval.","Fixing typos
Adding untranslated parts
Making small changes, so they would be more understandable.

You can wait for @MehmetaliKuran 's approval.",True,{'HOORAY': ['https://github.com/Ibuprophen']}
pbatard/rufus,https://github.com/pbatard/rufus,1293,2019-03-29T07:43:46Z,2019-03-29T16:21:25Z,2019-06-27T17:17:14Z,CLOSED,False,46,46,1,https://github.com/Tmp341,Updating Turkish localization,1,[],https://github.com/pbatard/rufus/pull/1293,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1293#issuecomment-478060347,"Fixing typos
Adding untranslated parts
Making small changes, so they would be more understandable.

You can wait for @MehmetaliKuran 's approval.",Thanks to you both. I have applied the update.,True,{'ROCKET': ['https://github.com/Ibuprophen']}
pbatard/rufus,https://github.com/pbatard/rufus,1293,2019-03-29T07:43:46Z,2019-03-29T16:21:25Z,2019-06-27T17:17:14Z,CLOSED,False,46,46,1,https://github.com/Tmp341,Updating Turkish localization,1,[],https://github.com/pbatard/rufus/pull/1293,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1293#issuecomment-506434827,"Fixing typos
Adding untranslated parts
Making small changes, so they would be more understandable.

You can wait for @MehmetaliKuran 's approval.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1294,2019-03-31T20:54:24Z,2019-03-31T21:18:40Z,2019-06-30T00:08:20Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,Fix grammar,1,[],https://github.com/pbatard/rufus/pull/1294,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1294,,,True,{'THUMBS_UP': ['https://github.com/Ibuprophen']}
pbatard/rufus,https://github.com/pbatard/rufus,1294,2019-03-31T20:54:24Z,2019-03-31T21:18:40Z,2019-06-30T00:08:20Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,Fix grammar,1,[],https://github.com/pbatard/rufus/pull/1294,https://github.com/marcellogianola,2,https://github.com/pbatard/rufus/pull/1294#issuecomment-478383271,,"sorry, I wrote grammar but I mean orthography...",True,{'ROCKET': ['https://github.com/Ibuprophen']}
pbatard/rufus,https://github.com/pbatard/rufus,1294,2019-03-31T20:54:24Z,2019-03-31T21:18:40Z,2019-06-30T00:08:20Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,Fix grammar,1,[],https://github.com/pbatard/rufus/pull/1294,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1294#issuecomment-478385413,,Applied - Thanks!,True,{'HOORAY': ['https://github.com/Ibuprophen']}
pbatard/rufus,https://github.com/pbatard/rufus,1294,2019-03-31T20:54:24Z,2019-03-31T21:18:40Z,2019-06-30T00:08:20Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,Fix grammar,1,[],https://github.com/pbatard/rufus/pull/1294,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1294#issuecomment-506996048,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1329,2019-06-13T18:48:26Z,2019-06-14T12:08:12Z,2019-09-12T13:01:50Z,CLOSED,False,8,8,1,https://github.com/fufunelaf,latvian translation fix,1,[],https://github.com/pbatard/rufus/pull/1329,https://github.com/fufunelaf,1,https://github.com/pbatard/rufus/pull/1329,Corrected translation. Where it was too broken.,Corrected translation. Where it was too broken.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1329,2019-06-13T18:48:26Z,2019-06-14T12:08:12Z,2019-09-12T13:01:50Z,CLOSED,False,8,8,1,https://github.com/fufunelaf,latvian translation fix,1,[],https://github.com/pbatard/rufus/pull/1329,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1329#issuecomment-502084099,Corrected translation. Where it was too broken.,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1329,2019-06-13T18:48:26Z,2019-06-14T12:08:12Z,2019-09-12T13:01:50Z,CLOSED,False,8,8,1,https://github.com/fufunelaf,latvian translation fix,1,[],https://github.com/pbatard/rufus/pull/1329,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1329#issuecomment-530814644,Corrected translation. Where it was too broken.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1334,2019-06-22T20:47:28Z,2019-06-24T15:09:11Z,2019-09-22T16:02:02Z,CLOSED,False,1731,0,1,https://github.com/xray700r,Added Albanian language translation,1,[],https://github.com/pbatard/rufus/pull/1334,https://github.com/xray700r,1,https://github.com/pbatard/rufus/pull/1334,Added Albanian language translation in .po file format. Full translation with official Albanian language. No specific dialects used.,Added Albanian language translation in .po file format. Full translation with official Albanian language. No specific dialects used.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1334,2019-06-22T20:47:28Z,2019-06-24T15:09:11Z,2019-09-22T16:02:02Z,CLOSED,False,1731,0,1,https://github.com/xray700r,Added Albanian language translation,1,[],https://github.com/pbatard/rufus/pull/1334,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1334#issuecomment-505052347,Added Albanian language translation in .po file format. Full translation with official Albanian language. No specific dialects used.,"I hate to do that, but I'm afraid that I am going to have to reject that request.
As explained in the FAQ, the only languages that I accept for localization of the Rufus applications are languages for which a fully localized version of Windows exists. And if you look at the Language versions for full locations of Windows here, you'll see that, unfortunately, Albanian is not on that list.
Also, translating Rufus to a new language is not a matter of just adding a new  .po. You are supposed to follow this guide and fully validate your translation through the use of Pollock (which will convert the  .po to a local .loc  you can test). And you should always contact the developer before you perform the work.
Now, you may be wondering: ""But what harm could adding a new language do, when someone's already done all the work?"", to which I will indicate that:

Maintaining translations actually has a large hidden cost for me, as, every time there is a new translation update round (the application is far from being static, and every time I add or modify features, I tend to need a new bunch of translation updates), I end up spending A LOT of time chasing after translators and validating their updates. I quickly found out that having to do that for more than 30 languages takes a lot more time away from development than I anticipated, so I definitely want to limit the number of languages Rufus is translated into.
I did that for Azerbaijani, and this is currently creating an issue, as the original translator is now M.I.A. and despite repeated requests for help with a new translator (which you can see on the https://rufus.ie website), I'm finding that nobody is willing to take that job over, which is problematic, as the Azerbaijani translation is now trailing so far behind that I don't think it's worth proposing to Rufus users and unless someone does volunteer to help soon, I will most likely drop Azerbaijani altogether from the 3.6 release.
Adding one language simply because ""someone did the work"" would open the floodgates to people proposing localization for their own language or jockeying for preferential treatment (""Why did you accept to add Albanian but not my language?""), which I'd rather avoid especially when I really want to limit the number of languages I have to maintain for the application.

Therefore, despite your kind proposal and, no doubt, all the hard work you put in it, I see no other alternative but to refuse this pull request. I'm very sorry to have to do that, but I hope that you can understand the reasons I have for doing so. I will also advise you, next time you want to propose to help a project, to maybe try to contact its developers first, to see if they will be able to accept your proposal, as one need to be careful to see Open Source projects as places that will accept new feature after new feature. Instead, I would assert that, a well maintained Open Source project will often set limits with regards to what they are ready to accept as contributions, and what they will reject, so that the project remains manageable, and therefore, if you are planning to invest a good chunk of your time on a proposal, you may want to check that it doesn't fall into the ""will be rejected"" category.
So, once again, I'm really sorry to have to reject this pull request, and I especially hope that it won't discourage you from wanting to contribute to other Open Source projects, as we can always use some help!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1334,2019-06-22T20:47:28Z,2019-06-24T15:09:11Z,2019-09-22T16:02:02Z,CLOSED,False,1731,0,1,https://github.com/xray700r,Added Albanian language translation,1,[],https://github.com/pbatard/rufus/pull/1334,https://github.com/xray700r,3,https://github.com/pbatard/rufus/pull/1334#issuecomment-505063214,Added Albanian language translation in .po file format. Full translation with official Albanian language. No specific dialects used.,"Thank you for your clarification. I indeed read the FAQ and the rest of the documentation but did not notice only the only important note in which you define the fully supported localized languages. That is an attention issue I would say since I didn't notice it and is my problem. I'm not requesting anything particular i did my work and I liked it once I have some free time I will compile Rufus and try it on Windows 10 to see if it works in an not fully localized language.
When I commit to Open Source projects it is not because I want to, most of the time it is to give back something when you've used a great software tool so many times. I did my part, even if it is not useful to you. Good luck with the other 30+ languages!!!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1334,2019-06-22T20:47:28Z,2019-06-24T15:09:11Z,2019-09-22T16:02:02Z,CLOSED,False,1731,0,1,https://github.com/xray700r,Added Albanian language translation,1,[],https://github.com/pbatard/rufus/pull/1334,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1334#issuecomment-505068608,Added Albanian language translation in .po file format. Full translation with official Albanian language. No specific dialects used.,"Thanks for understanding. I can only commend you for being willing to give something back the Open Source projects you find useful — We definitely need more people like you!
I hope this experience won't put you off from using Rufus. I promise I'll do my best so that you continue to find Rufus useful in the future (even if its UI is not in Albanian)...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1334,2019-06-22T20:47:28Z,2019-06-24T15:09:11Z,2019-09-22T16:02:02Z,CLOSED,False,1731,0,1,https://github.com/xray700r,Added Albanian language translation,1,[],https://github.com/pbatard/rufus/pull/1334,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/1334#issuecomment-533894295,Added Albanian language translation in .po file format. Full translation with official Albanian language. No specific dialects used.,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1341,2019-07-12T11:26:06Z,2019-07-12T13:22:57Z,2019-10-10T14:02:17Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1341,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1341,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1341,2019-07-12T11:26:06Z,2019-07-12T13:22:57Z,2019-10-10T14:02:17Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1341,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1341#issuecomment-510884486,,"Rejected. Please don't edit localization files by hand, as you will introduce mistakes (which you did here as you're missing a leading ""). Instead you should follow the procedure highlighted here and, especially, validate your changes in Rufus, as, for instance, some messages may have to be kept under a certain length for the UI to look good.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1341,2019-07-12T11:26:06Z,2019-07-12T13:22:57Z,2019-10-10T14:02:17Z,CLOSED,False,1,1,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1341,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1341#issuecomment-540600768,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1355,2019-08-02T07:58:44Z,2019-08-05T19:20:46Z,2019-11-03T20:01:26Z,CLOSED,False,1,1,1,https://github.com/hyeongyukim,ASN.1 parser's sequence tag is wrong,1,[],https://github.com/pbatard/rufus/pull/1355,https://github.com/hyeongyukim,1,https://github.com/pbatard/rufus/pull/1355,"Sequence is encoded with tag byte of 0x30.
https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-sequence","Sequence is encoded with tag byte of 0x30.
https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-sequence",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1355,2019-08-02T07:58:44Z,2019-08-05T19:20:46Z,2019-11-03T20:01:26Z,CLOSED,False,1,1,1,https://github.com/hyeongyukim,ASN.1 parser's sequence tag is wrong,1,[],https://github.com/pbatard/rufus/pull/1355,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1355#issuecomment-517653973,"Sequence is encoded with tag byte of 0x30.
https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-sequence","Are you sure about this?
According to https://en.wikipedia.org/wiki/X.690#Encoding, bits 8-7 (mask 0xC0) are the tag class, bit 6 (mask 0x20, i.e. the one we are interested in here) is the toggle between Primitive and Constructed (in other words, non-sequence or sequence) and the other bits (mask 0x1F) are the tag number.
So I believe checking if bit 6 is set, by masking against 0x20, is the proper way to determine if we have a sequence or not.
On the other hand, using 0x30 for sequences means that we expect all sequences to have a tag number of 16 (0x10) or higher, and I don't see how you would patch the sequence mask to 0x30 if you don't also patch the tag mask 2 lines further down to 0x0F to be consistent.
Can you describe the actual problem you're observing that prompted you to submit this PR? How exactly does masking against 0x20 create an issue in what you are trying to accomplish?",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1355,2019-08-02T07:58:44Z,2019-08-05T19:20:46Z,2019-11-03T20:01:26Z,CLOSED,False,1,1,1,https://github.com/hyeongyukim,ASN.1 parser's sequence tag is wrong,1,[],https://github.com/pbatard/rufus/pull/1355,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1355#issuecomment-518364535,"Sequence is encoded with tag byte of 0x30.
https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-sequence","Since I haven't heard back on this pull request, I'm going to close it.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1355,2019-08-02T07:58:44Z,2019-08-05T19:20:46Z,2019-11-03T20:01:26Z,CLOSED,False,1,1,1,https://github.com/hyeongyukim,ASN.1 parser's sequence tag is wrong,1,[],https://github.com/pbatard/rufus/pull/1355,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1355#issuecomment-549172861,"Sequence is encoded with tag byte of 0x30.
https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-sequence",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1356,2019-08-09T14:56:41Z,2019-08-13T08:23:50Z,2019-11-11T09:01:48Z,CLOSED,False,13,13,1,https://github.com/LaszloEr,German translation improvements,1,[],https://github.com/pbatard/rufus/pull/1356,https://github.com/LaszloEr,1,https://github.com/pbatard/rufus/pull/1356,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1356,2019-08-09T14:56:41Z,2019-08-13T08:23:50Z,2019-11-11T09:01:48Z,CLOSED,False,13,13,1,https://github.com/LaszloEr,German translation improvements,1,[],https://github.com/pbatard/rufus/pull/1356,https://github.com/ThiloL,2,https://github.com/pbatard/rufus/pull/1356#issuecomment-520733087,,"t MSG_176 ""Deutsche Übersetzung: Thilo Langbein mailto:mail@thilo-langbein.de""",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1356,2019-08-09T14:56:41Z,2019-08-13T08:23:50Z,2019-11-11T09:01:48Z,CLOSED,False,13,13,1,https://github.com/LaszloEr,German translation improvements,1,[],https://github.com/pbatard/rufus/pull/1356,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1356#issuecomment-520733676,,Thanks for the Pull Request and the review. I'll merge this PR with Thilo's changes.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1356,2019-08-09T14:56:41Z,2019-08-13T08:23:50Z,2019-11-11T09:01:48Z,CLOSED,False,13,13,1,https://github.com/LaszloEr,German translation improvements,1,[],https://github.com/pbatard/rufus/pull/1356,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1356#issuecomment-552352957,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1371,2019-08-29T17:04:39Z,2019-08-29T17:10:02Z,2019-11-27T18:03:43Z,CLOSED,False,0,0,1,https://github.com/apps/imgbot,[ImgBot] Optimize images,1,[],https://github.com/pbatard/rufus/pull/1371,https://github.com/apps/imgbot,1,https://github.com/pbatard/rufus/pull/1371,"Beep boop. Your images are optimized!
Your image file size has been reduced!


Details




File
Before
After
Percent reduction




/res/icons/rufus-512.png
145.04kb
142.63kb
1.67%





📝docs |  repo | 🙋issues | 🏅swag | 🏪marketplace","Beep boop. Your images are optimized!
Your image file size has been reduced!


Details




File
Before
After
Percent reduction




/res/icons/rufus-512.png
145.04kb
142.63kb
1.67%





📝docs |  repo | 🙋issues | 🏅swag | 🏪marketplace",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1371,2019-08-29T17:04:39Z,2019-08-29T17:10:02Z,2019-11-27T18:03:43Z,CLOSED,False,0,0,1,https://github.com/apps/imgbot,[ImgBot] Optimize images,1,[],https://github.com/pbatard/rufus/pull/1371,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1371#issuecomment-559194840,"Beep boop. Your images are optimized!
Your image file size has been reduced!


Details




File
Before
After
Percent reduction




/res/icons/rufus-512.png
145.04kb
142.63kb
1.67%





📝docs |  repo | 🙋issues | 🏅swag | 🏪marketplace",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1383,2019-10-05T02:40:02Z,2019-10-16T22:33:06Z,2020-01-15T03:35:00Z,CLOSED,False,1,1,1,https://github.com/TotalCaesar659,Update URL to HTTPS,1,[],https://github.com/pbatard/rufus/pull/1383,https://github.com/TotalCaesar659,1,https://github.com/pbatard/rufus/pull/1383,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1383,2019-10-05T02:40:02Z,2019-10-16T22:33:06Z,2020-01-15T03:35:00Z,CLOSED,False,1,1,1,https://github.com/TotalCaesar659,Update URL to HTTPS,1,[],https://github.com/pbatard/rufus/pull/1383,https://github.com/apps/lock,2,https://github.com/pbatard/rufus/pull/1383#issuecomment-574425371,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1405,2019-11-12T22:24:34Z,2019-11-12T22:47:37Z,2020-02-10T23:03:43Z,CLOSED,False,22,22,1,https://github.com/hugok79,Update Portuguese Translation,1,[],https://github.com/pbatard/rufus/pull/1405,https://github.com/hugok79,1,https://github.com/pbatard/rufus/pull/1405,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1405,2019-11-12T22:24:34Z,2019-11-12T22:47:37Z,2020-02-10T23:03:43Z,CLOSED,False,22,22,1,https://github.com/hugok79,Update Portuguese Translation,1,[],https://github.com/pbatard/rufus/pull/1405,https://github.com/hugok79,2,https://github.com/pbatard/rufus/pull/1405#issuecomment-553145359,,Portuguese (pt_PT) translation completed,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1405,2019-11-12T22:24:34Z,2019-11-12T22:47:37Z,2020-02-10T23:03:43Z,CLOSED,False,22,22,1,https://github.com/hugok79,Update Portuguese Translation,1,[],https://github.com/pbatard/rufus/pull/1405,https://github.com/hugok79,3,https://github.com/pbatard/rufus/pull/1405#issuecomment-553152958,,Send it by email.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1405,2019-11-12T22:24:34Z,2019-11-12T22:47:37Z,2020-02-10T23:03:43Z,CLOSED,False,22,22,1,https://github.com/hugok79,Update Portuguese Translation,1,[],https://github.com/pbatard/rufus/pull/1405,https://github.com/apps/lock,4,https://github.com/pbatard/rufus/pull/1405#issuecomment-584401334,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1412,2019-11-18T22:23:12Z,2019-11-19T20:32:54Z,2020-02-17T22:05:54Z,CLOSED,False,4,2,1,https://github.com/ichikuma7,added a short line of intro in README,2,[],https://github.com/pbatard/rufus/pull/1412,https://github.com/ichikuma7,1,https://github.com/pbatard/rufus/pull/1412,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1412,2019-11-18T22:23:12Z,2019-11-19T20:32:54Z,2020-02-17T22:05:54Z,CLOSED,False,4,2,1,https://github.com/ichikuma7,added a short line of intro in README,2,[],https://github.com/pbatard/rufus/pull/1412,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1412#issuecomment-555699858,,Applied. Thanks.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1412,2019-11-18T22:23:12Z,2019-11-19T20:32:54Z,2020-02-17T22:05:54Z,CLOSED,False,4,2,1,https://github.com/ichikuma7,added a short line of intro in README,2,[],https://github.com/pbatard/rufus/pull/1412,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1412#issuecomment-587173377,,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1424,2019-12-21T09:43:49Z,2020-01-11T12:34:14Z,2020-04-15T08:07:56Z,CLOSED,False,1,1,1,https://github.com/sugoidogo,leave .efi files in efi/boot/ uncompressed on ntfs,1,[],https://github.com/pbatard/rufus/pull/1424,https://github.com/sugoidogo,1,https://github.com/pbatard/rufus/pull/1424,additional fox for #1381 on top of commit 8719412,additional fox for #1381 on top of commit 8719412,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1424,2019-12-21T09:43:49Z,2020-01-11T12:34:14Z,2020-04-15T08:07:56Z,CLOSED,False,1,1,1,https://github.com/sugoidogo,leave .efi files in efi/boot/ uncompressed on ntfs,1,[],https://github.com/pbatard/rufus/pull/1424,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1424#issuecomment-573312712,additional fox for #1381 on top of commit 8719412,"Applied, thanks.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1424,2019-12-21T09:43:49Z,2020-01-11T12:34:14Z,2020-04-15T08:07:56Z,CLOSED,False,1,1,1,https://github.com/sugoidogo,leave .efi files in efi/boot/ uncompressed on ntfs,1,[],https://github.com/pbatard/rufus/pull/1424,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1424#issuecomment-613885692,additional fox for #1381 on top of commit 8719412,This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1426,2019-12-23T18:11:16Z,2020-01-12T23:16:54Z,2021-05-26T12:05:15Z,CLOSED,False,98,96,1,https://github.com/Mr-Update,Update de-DE.po,1,[],https://github.com/pbatard/rufus/pull/1426,https://github.com/Mr-Update,1,https://github.com/pbatard/rufus/pull/1426,German translation improved,German translation improved,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1426,2019-12-23T18:11:16Z,2020-01-12T23:16:54Z,2021-05-26T12:05:15Z,CLOSED,False,98,96,1,https://github.com/Mr-Update,Update de-DE.po,1,[],https://github.com/pbatard/rufus/pull/1426,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1426#issuecomment-573468830,German translation improved,Sorry for the late reply. Your update has now been applied — Many thanks for it!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1426,2019-12-23T18:11:16Z,2020-01-12T23:16:54Z,2021-05-26T12:05:15Z,CLOSED,False,98,96,1,https://github.com/Mr-Update,Update de-DE.po,1,[],https://github.com/pbatard/rufus/pull/1426,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1426#issuecomment-596777453,German translation improved,"@Mr-Update.
Please be mindful that you introduced regressions!
For instance you changed:
t MSG_217 ""Formatieren: %s""

back to
t MSG_217 ""Formatieren: %0.1f%% erledig

This actually results in German users complaining that the percent display no longer works in Rufus 3.9!
Next time you edit a translation, do not use the .po files from the repository but use pollock.exe as documented here. Thank you.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1438,2020-01-26T00:19:49Z,2020-02-03T17:47:57Z,2020-05-05T21:53:06Z,CLOSED,False,3,2,1,https://github.com/chazste,Add User Specified default for --gui command line option,1,[],https://github.com/pbatard/rufus/pull/1438,https://github.com/chazste,1,https://github.com/pbatard/rufus/pull/1438,"@pbatard
I would like to be able to persist my desire to run with the --gui command line option enabled most of the time. Without having to run a custom version of rufus (built from source). This change should be minimally disruptive (it modifies 2 lines and adds one). It maintains the current behavior in all ""normal"" situations.
Considerations
I originally intended to use the rufus specific ReadSettingBool() function, but I didn't for two reasons: one is that this is read so early that the ini file has not been initialized yet so it would always read from the registry; two is that if the key does not exist in the registry it would be written even when running the portable version of rufus. This leaves me using a SHLWAPI function ""bare"". The good news is that it is read only. The bad news is that it will also look from the key under HKLM as well as HKCU.
Also I originally was hoping to use --no-gui and -g- to turn this feature back off. Unfortunately the C version of getopt_long does not support this feature (other language implementations like ruby and node seem to) also this does not work since -g is pre-processed anyway. Therefore I chose to make -g be a toggle. This has minimal impact on code size but may be seen as counter-intuitive.
Code size
My test of the x86 release build saw no change in size. However it does not appear that the .sln file applies UPX, and the default code alignment is 4K I think; so not too surprising.
If you are willing to except this ER but wish to have these concerns addressed in a different way I will be happy to try again.","@pbatard
I would like to be able to persist my desire to run with the --gui command line option enabled most of the time. Without having to run a custom version of rufus (built from source). This change should be minimally disruptive (it modifies 2 lines and adds one). It maintains the current behavior in all ""normal"" situations.
Considerations
I originally intended to use the rufus specific ReadSettingBool() function, but I didn't for two reasons: one is that this is read so early that the ini file has not been initialized yet so it would always read from the registry; two is that if the key does not exist in the registry it would be written even when running the portable version of rufus. This leaves me using a SHLWAPI function ""bare"". The good news is that it is read only. The bad news is that it will also look from the key under HKLM as well as HKCU.
Also I originally was hoping to use --no-gui and -g- to turn this feature back off. Unfortunately the C version of getopt_long does not support this feature (other language implementations like ruby and node seem to) also this does not work since -g is pre-processed anyway. Therefore I chose to make -g be a toggle. This has minimal impact on code size but may be seen as counter-intuitive.
Code size
My test of the x86 release build saw no change in size. However it does not appear that the .sln file applies UPX, and the default code alignment is 4K I think; so not too surprising.
If you are willing to except this ER but wish to have these concerns addressed in a different way I will be happy to try again.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1438,2020-01-26T00:19:49Z,2020-02-03T17:47:57Z,2020-05-05T21:53:06Z,CLOSED,False,3,2,1,https://github.com/chazste,Add User Specified default for --gui command line option,1,[],https://github.com/pbatard/rufus/pull/1438,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1438#issuecomment-578457800,"@pbatard
I would like to be able to persist my desire to run with the --gui command line option enabled most of the time. Without having to run a custom version of rufus (built from source). This change should be minimally disruptive (it modifies 2 lines and adds one). It maintains the current behavior in all ""normal"" situations.
Considerations
I originally intended to use the rufus specific ReadSettingBool() function, but I didn't for two reasons: one is that this is read so early that the ini file has not been initialized yet so it would always read from the registry; two is that if the key does not exist in the registry it would be written even when running the portable version of rufus. This leaves me using a SHLWAPI function ""bare"". The good news is that it is read only. The bad news is that it will also look from the key under HKLM as well as HKCU.
Also I originally was hoping to use --no-gui and -g- to turn this feature back off. Unfortunately the C version of getopt_long does not support this feature (other language implementations like ruby and node seem to) also this does not work since -g is pre-processed anyway. Therefore I chose to make -g be a toggle. This has minimal impact on code size but may be seen as counter-intuitive.
Code size
My test of the x86 release build saw no change in size. However it does not appear that the .sln file applies UPX, and the default code alignment is 4K I think; so not too surprising.
If you are willing to except this ER but wish to have these concerns addressed in a different way I will be happy to try again.","Can you please describe the nature of problem you are trying to solve with this?
Right now I fail to see why you need a setting to replace --gui when that option is meant to be used for command line usage only, and if you do have command line in the first place, then it's hard to see why you need to have something else to supersede --gui.
Please bear in mind that I am exceedingly reluctant to add features that are only going to help a very limited number of users, even if they boil down to a couple of lines in the code, because designing Rufus for super-specific scenarios that only a handful of people are going to encounter is the shortest path to maintenance hell...
I could certainly see --gui applying to various console users, which is why I had not much of an issue adding that option, but, short of having a case for it that would explain how what you propose is going to benefit a large enough number of users, this change does appear to me like something that's designed specifically for your unique usage, and therefore can't see myself applying it without a solid justification of how it will help others (because it I were to open the door here, then I'd get submerged with requests of ""But you added a feature for usage that's unique to @chazste, so why can't you add one for mine too!!!"").
So, what's your use-case for this feature? And what specific is it solving exactly?",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1438,2020-01-26T00:19:49Z,2020-02-03T17:47:57Z,2020-05-05T21:53:06Z,CLOSED,False,3,2,1,https://github.com/chazste,Add User Specified default for --gui command line option,1,[],https://github.com/pbatard/rufus/pull/1438,https://github.com/TrainsDontHunt,3,https://github.com/pbatard/rufus/pull/1438#issuecomment-579493101,"@pbatard
I would like to be able to persist my desire to run with the --gui command line option enabled most of the time. Without having to run a custom version of rufus (built from source). This change should be minimally disruptive (it modifies 2 lines and adds one). It maintains the current behavior in all ""normal"" situations.
Considerations
I originally intended to use the rufus specific ReadSettingBool() function, but I didn't for two reasons: one is that this is read so early that the ini file has not been initialized yet so it would always read from the registry; two is that if the key does not exist in the registry it would be written even when running the portable version of rufus. This leaves me using a SHLWAPI function ""bare"". The good news is that it is read only. The bad news is that it will also look from the key under HKLM as well as HKCU.
Also I originally was hoping to use --no-gui and -g- to turn this feature back off. Unfortunately the C version of getopt_long does not support this feature (other language implementations like ruby and node seem to) also this does not work since -g is pre-processed anyway. Therefore I chose to make -g be a toggle. This has minimal impact on code size but may be seen as counter-intuitive.
Code size
My test of the x86 release build saw no change in size. However it does not appear that the .sln file applies UPX, and the default code alignment is 4K I think; so not too surprising.
If you are willing to except this ER but wish to have these concerns addressed in a different way I will be happy to try again.","Not a fan of this logic:
`disable_hogger ^= TRUE;
It assumes you know the values of TRUE and FALSE, which you can't rely on. Either use zero and one so you know, or something like this:
`disable_hogger = !disable_hogger;",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1438,2020-01-26T00:19:49Z,2020-02-03T17:47:57Z,2020-05-05T21:53:06Z,CLOSED,False,3,2,1,https://github.com/chazste,Add User Specified default for --gui command line option,1,[],https://github.com/pbatard/rufus/pull/1438,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1438#issuecomment-581362617,"@pbatard
I would like to be able to persist my desire to run with the --gui command line option enabled most of the time. Without having to run a custom version of rufus (built from source). This change should be minimally disruptive (it modifies 2 lines and adds one). It maintains the current behavior in all ""normal"" situations.
Considerations
I originally intended to use the rufus specific ReadSettingBool() function, but I didn't for two reasons: one is that this is read so early that the ini file has not been initialized yet so it would always read from the registry; two is that if the key does not exist in the registry it would be written even when running the portable version of rufus. This leaves me using a SHLWAPI function ""bare"". The good news is that it is read only. The bad news is that it will also look from the key under HKLM as well as HKCU.
Also I originally was hoping to use --no-gui and -g- to turn this feature back off. Unfortunately the C version of getopt_long does not support this feature (other language implementations like ruby and node seem to) also this does not work since -g is pre-processed anyway. Therefore I chose to make -g be a toggle. This has minimal impact on code size but may be seen as counter-intuitive.
Code size
My test of the x86 release build saw no change in size. However it does not appear that the .sln file applies UPX, and the default code alignment is 4K I think; so not too surprising.
If you are willing to except this ER but wish to have these concerns addressed in a different way I will be happy to try again.","@chazste, can you please answer the question I asked? If not I will close this PR.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1438,2020-01-26T00:19:49Z,2020-02-03T17:47:57Z,2020-05-05T21:53:06Z,CLOSED,False,3,2,1,https://github.com/chazste,Add User Specified default for --gui command line option,1,[],https://github.com/pbatard/rufus/pull/1438,https://github.com/chazste,5,https://github.com/pbatard/rufus/pull/1438#issuecomment-581534087,"@pbatard
I would like to be able to persist my desire to run with the --gui command line option enabled most of the time. Without having to run a custom version of rufus (built from source). This change should be minimally disruptive (it modifies 2 lines and adds one). It maintains the current behavior in all ""normal"" situations.
Considerations
I originally intended to use the rufus specific ReadSettingBool() function, but I didn't for two reasons: one is that this is read so early that the ini file has not been initialized yet so it would always read from the registry; two is that if the key does not exist in the registry it would be written even when running the portable version of rufus. This leaves me using a SHLWAPI function ""bare"". The good news is that it is read only. The bad news is that it will also look from the key under HKLM as well as HKCU.
Also I originally was hoping to use --no-gui and -g- to turn this feature back off. Unfortunately the C version of getopt_long does not support this feature (other language implementations like ruby and node seem to) also this does not work since -g is pre-processed anyway. Therefore I chose to make -g be a toggle. This has minimal impact on code size but may be seen as counter-intuitive.
Code size
My test of the x86 release build saw no change in size. However it does not appear that the .sln file applies UPX, and the default code alignment is 4K I think; so not too surprising.
If you are willing to except this ER but wish to have these concerns addressed in a different way I will be happy to try again.","@pbatard, sorry for the delay. It's been a busy week :(
After thinking about this some more; I am going to close this PR. In addition to your concern about the number of users that would benefit from this option, I think the fact that it does not integrate nicely with the existing option processing is also a big reason not to do this.
Thanks for your consideration.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1438,2020-01-26T00:19:49Z,2020-02-03T17:47:57Z,2020-05-05T21:53:06Z,CLOSED,False,3,2,1,https://github.com/chazste,Add User Specified default for --gui command line option,1,[],https://github.com/pbatard/rufus/pull/1438,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/1438#issuecomment-624326212,"@pbatard
I would like to be able to persist my desire to run with the --gui command line option enabled most of the time. Without having to run a custom version of rufus (built from source). This change should be minimally disruptive (it modifies 2 lines and adds one). It maintains the current behavior in all ""normal"" situations.
Considerations
I originally intended to use the rufus specific ReadSettingBool() function, but I didn't for two reasons: one is that this is read so early that the ini file has not been initialized yet so it would always read from the registry; two is that if the key does not exist in the registry it would be written even when running the portable version of rufus. This leaves me using a SHLWAPI function ""bare"". The good news is that it is read only. The bad news is that it will also look from the key under HKLM as well as HKCU.
Also I originally was hoping to use --no-gui and -g- to turn this feature back off. Unfortunately the C version of getopt_long does not support this feature (other language implementations like ruby and node seem to) also this does not work since -g is pre-processed anyway. Therefore I chose to make -g be a toggle. This has minimal impact on code size but may be seen as counter-intuitive.
Code size
My test of the x86 release build saw no change in size. However it does not appear that the .sln file applies UPX, and the default code alignment is 4K I think; so not too surprising.
If you are willing to except this ER but wish to have these concerns addressed in a different way I will be happy to try again.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1445,2020-02-03T21:13:40Z,2020-02-14T23:48:15Z,2020-05-20T19:27:59Z,CLOSED,False,158,19,5,https://github.com/Mattiwatti,ISO extraction: do allocation at file creation time,1,[],https://github.com/pbatard/rufus/pull/1445,https://github.com/Mattiwatti,1,https://github.com/pbatard/rufus/pull/1445,"Some time ago a PR of mine was merged in which I added preallocate_filesize() to improve ISO extraction performance. However I overlooked a fairly simple way to achieve the same thing in a simpler and faster way: the native NtCreateFile API accepts an AllocationSize parameter which will accomplish the same thing. This saves two system calls per file, plus the trips to the filesystem that come with modifying FileEndOfFileInfo/FileAllocationInfo.
I'm aware that winternl.h tells users to use CreateFile instead, but my arguments against this are:

CreateFile does not allow specifying an allocation size.
NtCreateFile is in fact extensively documented (perhaps better than CreateFile) as ZwCreateFile on MSDN.
winternl.h is a worthless header that purposely defines incomplete types because they are 'undocumented', which is worse than not defining them. Therefore I don't hold the opinion of whoever wrote the comment regarding CreateFile in very high regard.

CreatePreallocatedFileU aims to be a fairly complete replacement for CreateFile (within reason) so that it can potentially be used in other places later, although ISO extraction is probably the place where it provides the most benefit. This means it supports all flags and attributes CreateFile does, with the exception of one: the hTemplate parameter was removed because it is not used in Rufus, and furthermore it requires querying EAs from the filesystem, which (1) takes up an obscene amount of code, and (2) is not supported by all filesystems anyway. The code was adapted from ReactOS' CreateFileW. Both ReactOS and Rufus are licensed under the GPL so I don't believe this should be a problem.
In a few rough tests I did this improves performance by 5-35% with FAT32, and 0-5% with NTFS. For FAT32, ISOs with many files (e.g. Windows XP) benefit the most, while those with most of their data in a single file (e.g. Ubuntu) only about 5%. Extracting a Windows 10 ISO is about 15% faster with FAT32.","Some time ago a PR of mine was merged in which I added preallocate_filesize() to improve ISO extraction performance. However I overlooked a fairly simple way to achieve the same thing in a simpler and faster way: the native NtCreateFile API accepts an AllocationSize parameter which will accomplish the same thing. This saves two system calls per file, plus the trips to the filesystem that come with modifying FileEndOfFileInfo/FileAllocationInfo.
I'm aware that winternl.h tells users to use CreateFile instead, but my arguments against this are:

CreateFile does not allow specifying an allocation size.
NtCreateFile is in fact extensively documented (perhaps better than CreateFile) as ZwCreateFile on MSDN.
winternl.h is a worthless header that purposely defines incomplete types because they are 'undocumented', which is worse than not defining them. Therefore I don't hold the opinion of whoever wrote the comment regarding CreateFile in very high regard.

CreatePreallocatedFileU aims to be a fairly complete replacement for CreateFile (within reason) so that it can potentially be used in other places later, although ISO extraction is probably the place where it provides the most benefit. This means it supports all flags and attributes CreateFile does, with the exception of one: the hTemplate parameter was removed because it is not used in Rufus, and furthermore it requires querying EAs from the filesystem, which (1) takes up an obscene amount of code, and (2) is not supported by all filesystems anyway. The code was adapted from ReactOS' CreateFileW. Both ReactOS and Rufus are licensed under the GPL so I don't believe this should be a problem.
In a few rough tests I did this improves performance by 5-35% with FAT32, and 0-5% with NTFS. For FAT32, ISOs with many files (e.g. Windows XP) benefit the most, while those with most of their data in a single file (e.g. Ubuntu) only about 5%. Extracting a Windows 10 ISO is about 15% faster with FAT32.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1445,2020-02-03T21:13:40Z,2020-02-14T23:48:15Z,2020-05-20T19:27:59Z,CLOSED,False,158,19,5,https://github.com/Mattiwatti,ISO extraction: do allocation at file creation time,1,[],https://github.com/pbatard/rufus/pull/1445,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1445#issuecomment-581883555,"Some time ago a PR of mine was merged in which I added preallocate_filesize() to improve ISO extraction performance. However I overlooked a fairly simple way to achieve the same thing in a simpler and faster way: the native NtCreateFile API accepts an AllocationSize parameter which will accomplish the same thing. This saves two system calls per file, plus the trips to the filesystem that come with modifying FileEndOfFileInfo/FileAllocationInfo.
I'm aware that winternl.h tells users to use CreateFile instead, but my arguments against this are:

CreateFile does not allow specifying an allocation size.
NtCreateFile is in fact extensively documented (perhaps better than CreateFile) as ZwCreateFile on MSDN.
winternl.h is a worthless header that purposely defines incomplete types because they are 'undocumented', which is worse than not defining them. Therefore I don't hold the opinion of whoever wrote the comment regarding CreateFile in very high regard.

CreatePreallocatedFileU aims to be a fairly complete replacement for CreateFile (within reason) so that it can potentially be used in other places later, although ISO extraction is probably the place where it provides the most benefit. This means it supports all flags and attributes CreateFile does, with the exception of one: the hTemplate parameter was removed because it is not used in Rufus, and furthermore it requires querying EAs from the filesystem, which (1) takes up an obscene amount of code, and (2) is not supported by all filesystems anyway. The code was adapted from ReactOS' CreateFileW. Both ReactOS and Rufus are licensed under the GPL so I don't believe this should be a problem.
In a few rough tests I did this improves performance by 5-35% with FAT32, and 0-5% with NTFS. For FAT32, ISOs with many files (e.g. Windows XP) benefit the most, while those with most of their data in a single file (e.g. Ubuntu) only about 5%. Extracting a Windows 10 ISO is about 15% faster with FAT32.","Code looks good to me at first glance (though it's of course a bit nicer when PR use the same code formatting style as the original code, such as { positioning and stuff, but I'll fix that), and I'm always happy to apply changes that can improve speed.
I'll check and test this a bit more closely when I get a chance, which may not be for another few days (or weeks, depending) and then apply it. Many thanks for the contribution.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1445,2020-02-03T21:13:40Z,2020-02-14T23:48:15Z,2020-05-20T19:27:59Z,CLOSED,False,158,19,5,https://github.com/Mattiwatti,ISO extraction: do allocation at file creation time,1,[],https://github.com/pbatard/rufus/pull/1445,https://github.com/Mattiwatti,3,https://github.com/pbatard/rufus/pull/1445#issuecomment-582086700,"Some time ago a PR of mine was merged in which I added preallocate_filesize() to improve ISO extraction performance. However I overlooked a fairly simple way to achieve the same thing in a simpler and faster way: the native NtCreateFile API accepts an AllocationSize parameter which will accomplish the same thing. This saves two system calls per file, plus the trips to the filesystem that come with modifying FileEndOfFileInfo/FileAllocationInfo.
I'm aware that winternl.h tells users to use CreateFile instead, but my arguments against this are:

CreateFile does not allow specifying an allocation size.
NtCreateFile is in fact extensively documented (perhaps better than CreateFile) as ZwCreateFile on MSDN.
winternl.h is a worthless header that purposely defines incomplete types because they are 'undocumented', which is worse than not defining them. Therefore I don't hold the opinion of whoever wrote the comment regarding CreateFile in very high regard.

CreatePreallocatedFileU aims to be a fairly complete replacement for CreateFile (within reason) so that it can potentially be used in other places later, although ISO extraction is probably the place where it provides the most benefit. This means it supports all flags and attributes CreateFile does, with the exception of one: the hTemplate parameter was removed because it is not used in Rufus, and furthermore it requires querying EAs from the filesystem, which (1) takes up an obscene amount of code, and (2) is not supported by all filesystems anyway. The code was adapted from ReactOS' CreateFileW. Both ReactOS and Rufus are licensed under the GPL so I don't believe this should be a problem.
In a few rough tests I did this improves performance by 5-35% with FAT32, and 0-5% with NTFS. For FAT32, ISOs with many files (e.g. Windows XP) benefit the most, while those with most of their data in a single file (e.g. Ubuntu) only about 5%. Extracting a Windows 10 ISO is about 15% faster with FAT32.","Sorry about that; I normally make an effort to stick to whatever formatting is already used in a project, but I overlooked the brace style on if-statements and such. I can push a fix commit to update it, but to be honest you would probably do a better job of it, seeing as code style is mostly a personal thing.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1445,2020-02-03T21:13:40Z,2020-02-14T23:48:15Z,2020-05-20T19:27:59Z,CLOSED,False,158,19,5,https://github.com/Mattiwatti,ISO extraction: do allocation at file creation time,1,[],https://github.com/pbatard/rufus/pull/1445,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1445#issuecomment-582087225,"Some time ago a PR of mine was merged in which I added preallocate_filesize() to improve ISO extraction performance. However I overlooked a fairly simple way to achieve the same thing in a simpler and faster way: the native NtCreateFile API accepts an AllocationSize parameter which will accomplish the same thing. This saves two system calls per file, plus the trips to the filesystem that come with modifying FileEndOfFileInfo/FileAllocationInfo.
I'm aware that winternl.h tells users to use CreateFile instead, but my arguments against this are:

CreateFile does not allow specifying an allocation size.
NtCreateFile is in fact extensively documented (perhaps better than CreateFile) as ZwCreateFile on MSDN.
winternl.h is a worthless header that purposely defines incomplete types because they are 'undocumented', which is worse than not defining them. Therefore I don't hold the opinion of whoever wrote the comment regarding CreateFile in very high regard.

CreatePreallocatedFileU aims to be a fairly complete replacement for CreateFile (within reason) so that it can potentially be used in other places later, although ISO extraction is probably the place where it provides the most benefit. This means it supports all flags and attributes CreateFile does, with the exception of one: the hTemplate parameter was removed because it is not used in Rufus, and furthermore it requires querying EAs from the filesystem, which (1) takes up an obscene amount of code, and (2) is not supported by all filesystems anyway. The code was adapted from ReactOS' CreateFileW. Both ReactOS and Rufus are licensed under the GPL so I don't believe this should be a problem.
In a few rough tests I did this improves performance by 5-35% with FAT32, and 0-5% with NTFS. For FAT32, ISOs with many files (e.g. Windows XP) benefit the most, while those with most of their data in a single file (e.g. Ubuntu) only about 5%. Extracting a Windows 10 ISO is about 15% faster with FAT32.","Yeah, no worry, the patch is not that long for me to modify and I may tweak a few other things anyway.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1445,2020-02-03T21:13:40Z,2020-02-14T23:48:15Z,2020-05-20T19:27:59Z,CLOSED,False,158,19,5,https://github.com/Mattiwatti,ISO extraction: do allocation at file creation time,1,[],https://github.com/pbatard/rufus/pull/1445,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1445#issuecomment-586522449,"Some time ago a PR of mine was merged in which I added preallocate_filesize() to improve ISO extraction performance. However I overlooked a fairly simple way to achieve the same thing in a simpler and faster way: the native NtCreateFile API accepts an AllocationSize parameter which will accomplish the same thing. This saves two system calls per file, plus the trips to the filesystem that come with modifying FileEndOfFileInfo/FileAllocationInfo.
I'm aware that winternl.h tells users to use CreateFile instead, but my arguments against this are:

CreateFile does not allow specifying an allocation size.
NtCreateFile is in fact extensively documented (perhaps better than CreateFile) as ZwCreateFile on MSDN.
winternl.h is a worthless header that purposely defines incomplete types because they are 'undocumented', which is worse than not defining them. Therefore I don't hold the opinion of whoever wrote the comment regarding CreateFile in very high regard.

CreatePreallocatedFileU aims to be a fairly complete replacement for CreateFile (within reason) so that it can potentially be used in other places later, although ISO extraction is probably the place where it provides the most benefit. This means it supports all flags and attributes CreateFile does, with the exception of one: the hTemplate parameter was removed because it is not used in Rufus, and furthermore it requires querying EAs from the filesystem, which (1) takes up an obscene amount of code, and (2) is not supported by all filesystems anyway. The code was adapted from ReactOS' CreateFileW. Both ReactOS and Rufus are licensed under the GPL so I don't believe this should be a problem.
In a few rough tests I did this improves performance by 5-35% with FAT32, and 0-5% with NTFS. For FAT32, ISOs with many files (e.g. Windows XP) benefit the most, while those with most of their data in a single file (e.g. Ubuntu) only about 5%. Extracting a Windows 10 ISO is about 15% faster with FAT32.","I have now applied your patch. Apart from the formatting (which got taken care of automatically from copy/pasting in VS2019) the only big difference is that I moved CreatePreallocatedFile() to stdio.c which is more suitable than msapi_utf8.h since we're not actually converting an already existing CreatePreallocatedFileW() to UTF-8 and also since this is the place where we have other custom I/O functions, such as WriteFileWithRetry().
Everything looks good to me, and I think I see a noticeable improvement in extraction speed as well, though I haven't really timed it. So thanks again for submitting this PR!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1445,2020-02-03T21:13:40Z,2020-02-14T23:48:15Z,2020-05-20T19:27:59Z,CLOSED,False,158,19,5,https://github.com/Mattiwatti,ISO extraction: do allocation at file creation time,1,[],https://github.com/pbatard/rufus/pull/1445,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/1445#issuecomment-631677014,"Some time ago a PR of mine was merged in which I added preallocate_filesize() to improve ISO extraction performance. However I overlooked a fairly simple way to achieve the same thing in a simpler and faster way: the native NtCreateFile API accepts an AllocationSize parameter which will accomplish the same thing. This saves two system calls per file, plus the trips to the filesystem that come with modifying FileEndOfFileInfo/FileAllocationInfo.
I'm aware that winternl.h tells users to use CreateFile instead, but my arguments against this are:

CreateFile does not allow specifying an allocation size.
NtCreateFile is in fact extensively documented (perhaps better than CreateFile) as ZwCreateFile on MSDN.
winternl.h is a worthless header that purposely defines incomplete types because they are 'undocumented', which is worse than not defining them. Therefore I don't hold the opinion of whoever wrote the comment regarding CreateFile in very high regard.

CreatePreallocatedFileU aims to be a fairly complete replacement for CreateFile (within reason) so that it can potentially be used in other places later, although ISO extraction is probably the place where it provides the most benefit. This means it supports all flags and attributes CreateFile does, with the exception of one: the hTemplate parameter was removed because it is not used in Rufus, and furthermore it requires querying EAs from the filesystem, which (1) takes up an obscene amount of code, and (2) is not supported by all filesystems anyway. The code was adapted from ReactOS' CreateFileW. Both ReactOS and Rufus are licensed under the GPL so I don't believe this should be a problem.
In a few rough tests I did this improves performance by 5-35% with FAT32, and 0-5% with NTFS. For FAT32, ISOs with many files (e.g. Windows XP) benefit the most, while those with most of their data in a single file (e.g. Ubuntu) only about 5%. Extracting a Windows 10 ISO is about 15% faster with FAT32.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1449,2020-02-09T23:26:48Z,2020-02-10T10:43:58Z,2020-05-20T20:52:33Z,CLOSED,False,472,300,26,https://github.com/Davester47,Bump the autotools versions and add support for an out-of-tree build.,3,[],https://github.com/pbatard/rufus/pull/1449,https://github.com/Davester47,1,https://github.com/pbatard/rufus/pull/1449,"Most open source projects support an out-of-tree build, where the src directory and the build directory aren't the same, but I had problems getting it to work with rufus. I ran into some missing header files, that I found in the source tree, but they weren't being included. I looked in the Makefile.am's and found that they were using CFLAGS like: -I. -I.. instead of -I$(srcdir) -I$(srcdir)/.. I modified those as well as the Makefile.am in res/loc for a similar purpose. I also found that I coudn't compile rufus without specific older versions of automake and aclocal, so I ran autoreconf. I wouldn't have included the updated Makefile.in's in this PR, but they were affected by my Makefile.am changes.
By the way, good job on Rufus! I wish I had found it earlier.","Most open source projects support an out-of-tree build, where the src directory and the build directory aren't the same, but I had problems getting it to work with rufus. I ran into some missing header files, that I found in the source tree, but they weren't being included. I looked in the Makefile.am's and found that they were using CFLAGS like: -I. -I.. instead of -I$(srcdir) -I$(srcdir)/.. I modified those as well as the Makefile.am in res/loc for a similar purpose. I also found that I coudn't compile rufus without specific older versions of automake and aclocal, so I ran autoreconf. I wouldn't have included the updated Makefile.in's in this PR, but they were affected by my Makefile.am changes.
By the way, good job on Rufus! I wish I had found it earlier.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1449,2020-02-09T23:26:48Z,2020-02-10T10:43:58Z,2020-05-20T20:52:33Z,CLOSED,False,472,300,26,https://github.com/Davester47,Bump the autotools versions and add support for an out-of-tree build.,3,[],https://github.com/pbatard/rufus/pull/1449,https://github.com/Davester47,2,https://github.com/pbatard/rufus/pull/1449#issuecomment-583917896,"Most open source projects support an out-of-tree build, where the src directory and the build directory aren't the same, but I had problems getting it to work with rufus. I ran into some missing header files, that I found in the source tree, but they weren't being included. I looked in the Makefile.am's and found that they were using CFLAGS like: -I. -I.. instead of -I$(srcdir) -I$(srcdir)/.. I modified those as well as the Makefile.am in res/loc for a similar purpose. I also found that I coudn't compile rufus without specific older versions of automake and aclocal, so I ran autoreconf. I wouldn't have included the updated Makefile.in's in this PR, but they were affected by my Makefile.am changes.
By the way, good job on Rufus! I wish I had found it earlier.","I just realized that there's a problem in my PR. The application can't start, since it can't find locales, and I'm working on fixing it.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1449,2020-02-09T23:26:48Z,2020-02-10T10:43:58Z,2020-05-20T20:52:33Z,CLOSED,False,472,300,26,https://github.com/Davester47,Bump the autotools versions and add support for an out-of-tree build.,3,[],https://github.com/pbatard/rufus/pull/1449,https://github.com/Davester47,3,https://github.com/pbatard/rufus/pull/1449#issuecomment-583933736,"Most open source projects support an out-of-tree build, where the src directory and the build directory aren't the same, but I had problems getting it to work with rufus. I ran into some missing header files, that I found in the source tree, but they weren't being included. I looked in the Makefile.am's and found that they were using CFLAGS like: -I. -I.. instead of -I$(srcdir) -I$(srcdir)/.. I modified those as well as the Makefile.am in res/loc for a similar purpose. I also found that I coudn't compile rufus without specific older versions of automake and aclocal, so I ran autoreconf. I wouldn't have included the updated Makefile.in's in this PR, but they were affected by my Makefile.am changes.
By the way, good job on Rufus! I wish I had found it earlier.","You probably aren't going to accept this PR now, but my issue was that windres couldn't find the included rc files without knowing where the source directory was at compile time. I made rufus.rc an output file of configure, which fills in the blanks inside of rufus.rc, and it now builds with no issues. I don't know if this breaks compatibility with Visual Studio, though, since it looked like that already generated it.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1449,2020-02-09T23:26:48Z,2020-02-10T10:43:58Z,2020-05-20T20:52:33Z,CLOSED,False,472,300,26,https://github.com/Davester47,Bump the autotools versions and add support for an out-of-tree build.,3,[],https://github.com/pbatard/rufus/pull/1449,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1449#issuecomment-584061640,"Most open source projects support an out-of-tree build, where the src directory and the build directory aren't the same, but I had problems getting it to work with rufus. I ran into some missing header files, that I found in the source tree, but they weren't being included. I looked in the Makefile.am's and found that they were using CFLAGS like: -I. -I.. instead of -I$(srcdir) -I$(srcdir)/.. I modified those as well as the Makefile.am in res/loc for a similar purpose. I also found that I coudn't compile rufus without specific older versions of automake and aclocal, so I ran autoreconf. I wouldn't have included the updated Makefile.in's in this PR, but they were affected by my Makefile.am changes.
By the way, good job on Rufus! I wish I had found it earlier.","Yeah, this looks like a lot of alterations, some of them breaking, just so a couple people can build out-of-tree, for benefits that are very hard to grasp (coz, with Rufus being a standalone app rather than something you'd use in other projects, I really fail to see why out-of-tree builds are that important to have).
I appreciate the work you did, and I may still pick the .am/.ac changes you applied, but I can't go with your .rc changes, since they completely break MSVC compilation.
As such, I will close this PR.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1449,2020-02-09T23:26:48Z,2020-02-10T10:43:58Z,2020-05-20T20:52:33Z,CLOSED,False,472,300,26,https://github.com/Davester47,Bump the autotools versions and add support for an out-of-tree build.,3,[],https://github.com/pbatard/rufus/pull/1449,https://github.com/apps/lock,5,https://github.com/pbatard/rufus/pull/1449#issuecomment-631719199,"Most open source projects support an out-of-tree build, where the src directory and the build directory aren't the same, but I had problems getting it to work with rufus. I ran into some missing header files, that I found in the source tree, but they weren't being included. I looked in the Makefile.am's and found that they were using CFLAGS like: -I. -I.. instead of -I$(srcdir) -I$(srcdir)/.. I modified those as well as the Makefile.am in res/loc for a similar purpose. I also found that I coudn't compile rufus without specific older versions of automake and aclocal, so I ran autoreconf. I wouldn't have included the updated Makefile.in's in this PR, but they were affected by my Makefile.am changes.
By the way, good job on Rufus! I wish I had found it earlier.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1454,2020-02-13T22:29:42Z,2020-02-14T03:06:19Z,2020-05-20T20:43:41Z,CLOSED,False,2,2,1,https://github.com/ManMower,[core] Only retry writes when they fail,1,[],https://github.com/pbatard/rufus/pull/1454,https://github.com/ManMower,1,https://github.com/pbatard/rufus/pull/1454,"ClearMBRGPT attempts to write WRITE_RETRIES times, even if all those
times succeed.
Instead, skip the remaining retries on success.","ClearMBRGPT attempts to write WRITE_RETRIES times, even if all those
times succeed.
Instead, skip the remaining retries on success.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1454,2020-02-13T22:29:42Z,2020-02-14T03:06:19Z,2020-05-20T20:43:41Z,CLOSED,False,2,2,1,https://github.com/ManMower,[core] Only retry writes when they fail,1,[],https://github.com/pbatard/rufus/pull/1454,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1454#issuecomment-586076023,"ClearMBRGPT attempts to write WRITE_RETRIES times, even if all those
times succeed.
Instead, skip the remaining retries on success.","Well spotted! I certainly screwed up these loops when I wrote them, so thanks for submitting a PR to fix that.
I've applied your patch, after modifying it to make the exit condition clearer as well as harmonizing the code a little bit. Thanks again.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1454,2020-02-13T22:29:42Z,2020-02-14T03:06:19Z,2020-05-20T20:43:41Z,CLOSED,False,2,2,1,https://github.com/ManMower,[core] Only retry writes when they fail,1,[],https://github.com/pbatard/rufus/pull/1454,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1454#issuecomment-631714886,"ClearMBRGPT attempts to write WRITE_RETRIES times, even if all those
times succeed.
Instead, skip the remaining retries on success.",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1456,2020-02-15T13:38:12Z,2020-02-15T14:50:05Z,2020-05-20T20:27:57Z,CLOSED,False,1,0,1,https://github.com/ZhangFengze,fix vs2019 C2001,1,[],https://github.com/pbatard/rufus/pull/1456,https://github.com/ZhangFengze,1,https://github.com/pbatard/rufus/pull/1456,"rufus.h(52,1): error C2001 while compiling “ext2fs”","rufus.h(52,1): error C2001 while compiling “ext2fs”",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1456,2020-02-15T13:38:12Z,2020-02-15T14:50:05Z,2020-05-20T20:27:57Z,CLOSED,False,1,0,1,https://github.com/ZhangFengze,fix vs2019 C2001,1,[],https://github.com/pbatard/rufus/pull/1456,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1456#issuecomment-586595070,"rufus.h(52,1): error C2001 while compiling “ext2fs”",Thanks for picking this up. I will apply this patch as soon as I get a chance.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1456,2020-02-15T13:38:12Z,2020-02-15T14:50:05Z,2020-05-20T20:27:57Z,CLOSED,False,1,0,1,https://github.com/ZhangFengze,fix vs2019 C2001,1,[],https://github.com/pbatard/rufus/pull/1456,https://github.com/ZhangFengze,3,https://github.com/pbatard/rufus/pull/1456#issuecomment-586598615,"rufus.h(52,1): error C2001 while compiling “ext2fs”","wow, the commit message is really professional.
""problem -> solution""
really learned something from my first pr :)",True,{'HEART': ['https://github.com/ParkerM']}
pbatard/rufus,https://github.com/pbatard/rufus,1456,2020-02-15T13:38:12Z,2020-02-15T14:50:05Z,2020-05-20T20:27:57Z,CLOSED,False,1,0,1,https://github.com/ZhangFengze,fix vs2019 C2001,1,[],https://github.com/pbatard/rufus/pull/1456,https://github.com/ZhangFengze,4,https://github.com/pbatard/rufus/pull/1456#issuecomment-586598935,"rufus.h(52,1): error C2001 while compiling “ext2fs”",thanks,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1456,2020-02-15T13:38:12Z,2020-02-15T14:50:05Z,2020-05-20T20:27:57Z,CLOSED,False,1,0,1,https://github.com/ZhangFengze,fix vs2019 C2001,1,[],https://github.com/pbatard/rufus/pull/1456,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1456#issuecomment-586599120,"rufus.h(52,1): error C2001 while compiling “ext2fs”","You're welcome. I should have picked this one when I added the ext2fs lib, but I forgot to do that, so thanks for submitting this PR. 😉",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1456,2020-02-15T13:38:12Z,2020-02-15T14:50:05Z,2020-05-20T20:27:57Z,CLOSED,False,1,0,1,https://github.com/ZhangFengze,fix vs2019 C2001,1,[],https://github.com/pbatard/rufus/pull/1456,https://github.com/apps/lock,6,https://github.com/pbatard/rufus/pull/1456#issuecomment-631705794,"rufus.h(52,1): error C2001 while compiling “ext2fs”",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1458,2020-02-17T23:34:38Z,2020-02-18T00:01:47Z,2020-05-20T19:33:52Z,CLOSED,False,18,22,4,https://github.com/dimhotepus,Fix some static analyzer issues. Viva PVS-Studio,3,[],https://github.com/pbatard/rufus/pull/1458,https://github.com/dimhotepus,1,https://github.com/pbatard/rufus/pull/1458,"Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/","Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1458,2020-02-17T23:34:38Z,2020-02-18T00:01:47Z,2020-05-20T19:33:52Z,CLOSED,False,18,22,4,https://github.com/dimhotepus,Fix some static analyzer issues. Viva PVS-Studio,3,[],https://github.com/pbatard/rufus/pull/1458,https://github.com/dimhotepus,2,https://github.com/pbatard/rufus/pull/1458#issuecomment-587208924,"Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/",Moved to #1459,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1458,2020-02-17T23:34:38Z,2020-02-18T00:01:47Z,2020-05-20T19:33:52Z,CLOSED,False,18,22,4,https://github.com/dimhotepus,Fix some static analyzer issues. Viva PVS-Studio,3,[],https://github.com/pbatard/rufus/pull/1458,https://github.com/apps/lock,3,https://github.com/pbatard/rufus/pull/1458#issuecomment-631680001,"Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/",This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue if you think you have a related problem or query.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1459,2020-02-18T00:01:34Z,2020-02-19T20:38:56Z,2021-05-26T12:05:16Z,CLOSED,False,1,1,1,https://github.com/dimhotepus,Fix some PVS-Studio static analyzer issues,1,[],https://github.com/pbatard/rufus/pull/1459,https://github.com/dimhotepus,1,https://github.com/pbatard/rufus/pull/1459,"Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/","Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1459,2020-02-18T00:01:34Z,2020-02-19T20:38:56Z,2021-05-26T12:05:16Z,CLOSED,False,1,1,1,https://github.com/dimhotepus,Fix some PVS-Studio static analyzer issues,1,[],https://github.com/pbatard/rufus/pull/1459,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1459#issuecomment-587249504,"Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/","Yes
Not unless you send a similar patch to the official e2fsprogs and they integrate it. I really want to avoid deviating from the e2fsprogs upstream code unless I have good reasons to do so, and keeping PVS happy is not one of them. I also expect that e2fsprogs is doing it this way for a reason...
I'm afraid you broke MinGW builds, which means I can't accept this patch. Moreover, if you want to submit patches against Bled, I would prefer if you did that against the upstream source as I'd rather see patches go downstream (Bled → Rufus) than upstream. But that is not that big a deal, as long as you fix MinGW builds.",True,{'THUMBS_UP': ['https://github.com/dimhotepus']}
pbatard/rufus,https://github.com/pbatard/rufus,1459,2020-02-18T00:01:34Z,2020-02-19T20:38:56Z,2021-05-26T12:05:16Z,CLOSED,False,1,1,1,https://github.com/dimhotepus,Fix some PVS-Studio static analyzer issues,1,[],https://github.com/pbatard/rufus/pull/1459,https://github.com/dimhotepus,3,https://github.com/pbatard/rufus/pull/1459#issuecomment-587965438,"Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/","Decided to send last two patches to related upstreams. Thanks for suggestion!
As for first one, it is already fixed in e2fsprogs upstream, so feel free either to apply it, or just upstream e2fsprogs dependency.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1459,2020-02-18T00:01:34Z,2020-02-19T20:38:56Z,2021-05-26T12:05:16Z,CLOSED,False,1,1,1,https://github.com/dimhotepus,Fix some PVS-Studio static analyzer issues,1,[],https://github.com/pbatard/rufus/pull/1459,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1459#issuecomment-588438351,"Issues (some, stay tuned) found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/",Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1464,2020-02-23T18:48:05Z,2020-02-28T17:57:13Z,2021-05-26T12:05:15Z,CLOSED,False,65,56,16,https://github.com/dimhotepus,Fix PVS-Studio static analyzer issues #2,16,[],https://github.com/pbatard/rufus/pull/1464,https://github.com/dimhotepus,1,https://github.com/pbatard/rufus/pull/1464,"Issues found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/","Issues found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1464,2020-02-23T18:48:05Z,2020-02-28T17:57:13Z,2021-05-26T12:05:15Z,CLOSED,False,65,56,16,https://github.com/dimhotepus,Fix PVS-Studio static analyzer issues #2,16,[],https://github.com/pbatard/rufus/pull/1464,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1464#issuecomment-590105201,"Issues found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/","I don't mind the warnings that are triggered by actual potential vulnerabilities or unexpected outcome. Some of these are very good finds indeed and I most certainly want to fix that.
But the micro-optimization ones line strlen(x) == 0 vs x[0] == 0 or computing token length only once are a bit too much. For instance, the duplicated token length was very deliberate for code readability, especially as one can expect the compiler to perform that kind of optimization behind the scenes, and it's not like we're in a loop that computes a SHA. So the ""performance"" gain here is completely pointless.
Likewise the duplicated (line[i] == '""') was intentional for clarity, since it matches the condition on the next line and the compiler will have the result of the previous check in a status register anyway, so whether you have if ((a == b) || ((a !=b) && (c == d))) or just if ((a == b) || (c == d)), it doesn't make much of an actual difference anyway, and I'm worried about optimization that takes away some of the code readability.
Still, this PR is great, so thanks a lot for submitting it! I will apply it when I get a chance.",True,{'THUMBS_UP': ['https://github.com/dimhotepus']}
pbatard/rufus,https://github.com/pbatard/rufus,1464,2020-02-23T18:48:05Z,2020-02-28T17:57:13Z,2021-05-26T12:05:15Z,CLOSED,False,65,56,16,https://github.com/dimhotepus,Fix PVS-Studio static analyzer issues #2,16,[],https://github.com/pbatard/rufus/pull/1464,https://github.com/dimhotepus,3,https://github.com/pbatard/rufus/pull/1464#issuecomment-590106056,"Issues found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/","Regarding performance vs readability, looks like you are right, performance gains may be negligible here.
Thank you for the great tool :)",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1464,2020-02-23T18:48:05Z,2020-02-28T17:57:13Z,2021-05-26T12:05:15Z,CLOSED,False,65,56,16,https://github.com/dimhotepus,Fix PVS-Studio static analyzer issues #2,16,[],https://github.com/pbatard/rufus/pull/1464,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1464#issuecomment-592650747,"Issues found by PVS-Studio static analyzer.
Product page: https://www.viva64.com/en/pvs-studio/
How to use for free: https://www.viva64.com/en/b/0600/",I now have applied the changes that I saw relevant. I will therefore close this PR with the pushed commit.,True,{'HEART': ['https://github.com/dimhotepus']}
pbatard/rufus,https://github.com/pbatard/rufus,1468,2020-03-03T21:25:25Z,2020-03-11T13:22:09Z,2021-05-26T12:05:15Z,CLOSED,False,2,1,1,https://github.com/perennialmind,Cope with UTF-8 codepage,1,[],https://github.com/pbatard/rufus/pull/1468,https://github.com/perennialmind,1,https://github.com/pbatard/rufus/pull/1468,"Add UTF-8 codepage 65001, sometimes referred to as ""Unicode (UTF-8 without signature)"". Recent versions of Windows allow for locale variants with UTF-8 encoding, making CP_UTF8 a valid return for GetOEMCP(). Alternatively, you could drop cp_hr_list and instead call  GetCPInfoExA.","Add UTF-8 codepage 65001, sometimes referred to as ""Unicode (UTF-8 without signature)"". Recent versions of Windows allow for locale variants with UTF-8 encoding, making CP_UTF8 a valid return for GetOEMCP(). Alternatively, you could drop cp_hr_list and instead call  GetCPInfoExA.",True,{'THUMBS_UP': ['https://github.com/j0npulsifer']}
pbatard/rufus,https://github.com/pbatard/rufus,1468,2020-03-03T21:25:25Z,2020-03-11T13:22:09Z,2021-05-26T12:05:15Z,CLOSED,False,2,1,1,https://github.com/perennialmind,Cope with UTF-8 codepage,1,[],https://github.com/pbatard/rufus/pull/1468,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1468#issuecomment-596123265,"Add UTF-8 codepage 65001, sometimes referred to as ""Unicode (UTF-8 without signature)"". Recent versions of Windows allow for locale variants with UTF-8 encoding, making CP_UTF8 a valid return for GetOEMCP(). Alternatively, you could drop cp_hr_list and instead call  GetCPInfoExA.","Good find. Please mention that this triggers an assert, coz that helps me prioritize these matters.
I don't think I wan to use GetCPInfoExA because I want to be in control of the displayed name, and I also want to have an idea of what codepages don't work, so that I can add proper support for them (hence the assert).
Besides your patch, I guess I'm going to have to add a special case for UTF-8, because the end result is that 437 rather than 850 (well, 858 since we want the € symbol) is being used on UK/IE localized platforms, which isn't ideal, so I got to think about this some more...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1468,2020-03-03T21:25:25Z,2020-03-11T13:22:09Z,2021-05-26T12:05:15Z,CLOSED,False,2,1,1,https://github.com/perennialmind,Cope with UTF-8 codepage,1,[],https://github.com/pbatard/rufus/pull/1468,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1468#issuecomment-597625916,"Add UTF-8 codepage 65001, sometimes referred to as ""Unicode (UTF-8 without signature)"". Recent versions of Windows allow for locale variants with UTF-8 encoding, making CP_UTF8 a valid return for GetOEMCP(). Alternatively, you could drop cp_hr_list and instead call  GetCPInfoExA.","I think I have a proper solution for this issue now, that doesn't rely on falling back to US codepage for all systems that use UTF-8.
But boy is it a pain in the ass to get a Windows system that defaults to UTF-8 to give you an OEM codepage. I'll just leave this for people interested in programmatically finding out the real codepage of a system with default UTF-8 locale:
UINT actual_cp;
GetLocaleInfoA(GetUserDefaultUILanguage(), LOCALE_IDEFAULTCODEPAGE | LOCALE_RETURN_NUMBER,
               (char*)&actual_cp, sizeof(actual_cp)
The above is for OEM. If you want ANSI, you should use LOCALE_IDEFAULTANSICODEPAGE.
With this, one finally gets the expected result:
Will use DOS keyboard 'uk' [UK-English]
Will use codepage 858 [Western-European (Euro)]

I will close this PR once I push the relevant commit. Once again, thanks for reporting this!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1474,2020-03-12T10:53:43Z,2020-03-18T15:55:12Z,2021-05-26T12:05:14Z,CLOSED,False,49,49,1,https://github.com/ilhamitugral,Turkish Translation,1,[],https://github.com/pbatard/rufus/pull/1474,https://github.com/ilhamitugral,1,https://github.com/pbatard/rufus/pull/1474,Turkish translation updated. Spelling errors were corrected.,Turkish translation updated. Spelling errors were corrected.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1474,2020-03-12T10:53:43Z,2020-03-18T15:55:12Z,2021-05-26T12:05:14Z,CLOSED,False,49,49,1,https://github.com/ilhamitugral,Turkish Translation,1,[],https://github.com/pbatard/rufus/pull/1474,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1474#issuecomment-600712678,Turkish translation updated. Spelling errors were corrected.,Thank you very much!,True,{'THUMBS_UP': ['https://github.com/ilhamitugral']}
pbatard/rufus,https://github.com/pbatard/rufus,1494,2020-03-28T04:24:15Z,2020-04-10T11:51:26Z,2021-05-26T12:05:14Z,CLOSED,False,275,280,1,https://github.com/MELERIX,Updated Spanish Translation,1,[],https://github.com/pbatard/rufus/pull/1494,https://github.com/MELERIX,1,https://github.com/pbatard/rufus/pull/1494,,,True,{'THUMBS_UP': ['https://github.com/LetrixZ']}
pbatard/rufus,https://github.com/pbatard/rufus,1494,2020-03-28T04:24:15Z,2020-04-10T11:51:26Z,2021-05-26T12:05:14Z,CLOSED,False,275,280,1,https://github.com/MELERIX,Updated Spanish Translation,1,[],https://github.com/pbatard/rufus/pull/1494,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1494#issuecomment-605443353,,"That's a lot of changes.
Please reach out to the current Spanish translators (you can find a link to e-mail them in the About dialog of Rufus when it runs in Spanish) and discuss those changes with them.
I'm afraid I will not apply this request unless it's been greenlighted by one of the regular Spanish translators.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1494,2020-03-28T04:24:15Z,2020-04-10T11:51:26Z,2021-05-26T12:05:14Z,CLOSED,False,275,280,1,https://github.com/MELERIX,Updated Spanish Translation,1,[],https://github.com/pbatard/rufus/pull/1494,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1494#issuecomment-611997532,,"No update → Closing.
I'm sorry to have to do this, but you have to try to get in touch with the current translator if you are going to introduce major changes to a translation.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1494,2020-03-28T04:24:15Z,2020-04-10T11:51:26Z,2021-05-26T12:05:14Z,CLOSED,False,275,280,1,https://github.com/MELERIX,Updated Spanish Translation,1,[],https://github.com/pbatard/rufus/pull/1494,https://github.com/MELERIX,4,https://github.com/pbatard/rufus/pull/1494#issuecomment-612156776,,"ok, well, there were not really big changes at all, most are just typo fixes and individual words fixes, and also some missing dots or extra spaces between words.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1525,2020-04-28T16:41:45Z,2020-04-28T16:47:55Z,2021-05-26T12:05:13Z,CLOSED,False,1,0,1,https://github.com/ManMower,Don't leak logical handle from GetDriveLabel,1,[],https://github.com/pbatard/rufus/pull/1525,https://github.com/ManMower,1,https://github.com/pbatard/rufus/pull/1525,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1525,2020-04-28T16:41:45Z,2020-04-28T16:47:55Z,2021-05-26T12:05:13Z,CLOSED,False,1,0,1,https://github.com/ManMower,Don't leak logical handle from GetDriveLabel,1,[],https://github.com/pbatard/rufus/pull/1525,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1525#issuecomment-620726463,,Good point. Applied!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1550,2020-05-30T18:42:23Z,2020-06-02T11:12:08Z,2021-06-03T00:23:04Z,CLOSED,False,19,5,2,https://github.com/dmex,"Add http2, gzip, deflate support",2,[],https://github.com/pbatard/rufus/pull/1550,https://github.com/dmex,1,https://github.com/pbatard/rufus/pull/1550,"This PR enables support for the http/2 protocol and enables automatic gzip/deflate decoding support.
These options are backwards compatible and are only used when the server supports these features.","This PR enables support for the http/2 protocol and enables automatic gzip/deflate decoding support.
These options are backwards compatible and are only used when the server supports these features.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1550,2020-05-30T18:42:23Z,2020-06-02T11:12:08Z,2021-06-03T00:23:04Z,CLOSED,False,19,5,2,https://github.com/dmex,"Add http2, gzip, deflate support",2,[],https://github.com/pbatard/rufus/pull/1550,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1550#issuecomment-636370714,"This PR enables support for the http/2 protocol and enables automatic gzip/deflate decoding support.
These options are backwards compatible and are only used when the server supports these features.","Sounds fair enough, though this request currently breaks MinGW builds as it missing a few constants that are only defined in MSVC (see here). Also, you have a typo for protocalSupport → protocolSupport and to be consistent with the rest of the code, the variable should be dwProtocolSupport.
I would also define a global string constant for ""Accept-Encoding: gzip, deflate"" so that, if we ever add more than gzip, deflate, we only have one instance to modify.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1550,2020-05-30T18:42:23Z,2020-06-02T11:12:08Z,2021-06-03T00:23:04Z,CLOSED,False,19,5,2,https://github.com/dmex,"Add http2, gzip, deflate support",2,[],https://github.com/pbatard/rufus/pull/1550,https://github.com/dmex,3,https://github.com/pbatard/rufus/pull/1550#issuecomment-636376660,"This PR enables support for the http/2 protocol and enables automatic gzip/deflate decoding support.
These options are backwards compatible and are only used when the server supports these features.","breaks MinGW builds as it missing a few constants that are only defined in MSVC

I've added the types to the missing.h header.

Also, you have a typo

Ah damn, fixed 😄

I would also define a global string constant for ""Accept-Encoding: gzip, deflate"" so that, if we ever add more than gzip, deflate, we only have one instance to modify.

This has been fixed. I also wanted to request enabling the ""Enable string pooling"" option for the project solution (C++> Code generation) ?",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1550,2020-05-30T18:42:23Z,2020-06-02T11:12:08Z,2021-06-03T00:23:04Z,CLOSED,False,19,5,2,https://github.com/dmex,"Add http2, gzip, deflate support",2,[],https://github.com/pbatard/rufus/pull/1550,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1550#issuecomment-636377479,"This PR enables support for the http/2 protocol and enables automatic gzip/deflate decoding support.
These options are backwards compatible and are only used when the server supports these features.","Looks good. Thanks a bunch for updating the PR. I'll apply it when I get a chance, but I'll probably do that after a staged commit that I currently have waiting.

I also wanted to request enabling the ""Enable string pooling"" option

Huh, VS is not doing that by default? I definitely want it, so I'll do that, though the binaries I release are MinGW ones, and I'm assuming that the current gcc optimization is taking care of string dupes (though, seeing that VS2019 doesn't, I'm going to double check this as well).
Many thanks for the PR! 😁",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1550,2020-05-30T18:42:23Z,2020-06-02T11:12:08Z,2021-06-03T00:23:04Z,CLOSED,False,19,5,2,https://github.com/dmex,"Add http2, gzip, deflate support",2,[],https://github.com/pbatard/rufus/pull/1550,https://github.com/dmex,5,https://github.com/pbatard/rufus/pull/1550#issuecomment-636379962,"This PR enables support for the http/2 protocol and enables automatic gzip/deflate decoding support.
These options are backwards compatible and are only used when the server supports these features.","VS is not doing that by default?

The default is automatic which doesn't enable depending on various options. Another option added recently is the Advanced > ""Use debug libraries"" which needs to be Yes for the debug configuration or the debug builds won't link with crt debug libraries.

current gcc optimization is taking care of string dupe

GCC does this by default last I checked 👍",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1550,2020-05-30T18:42:23Z,2020-06-02T11:12:08Z,2021-06-03T00:23:04Z,CLOSED,False,19,5,2,https://github.com/dmex,"Add http2, gzip, deflate support",2,[],https://github.com/pbatard/rufus/pull/1550,https://github.com/pbatard,6,https://github.com/pbatard/rufus/pull/1550#issuecomment-637467552,"This PR enables support for the http/2 protocol and enables automatic gzip/deflate decoding support.
These options are backwards compatible and are only used when the server supports these features.","Okay, I've enabled string pooling for Debug VS2009 builds and I've also made sure that Use debug libraries was set where needed (I only had it on some of the libraries).
I will close this as I push the your commit. Thanks again for this PR!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1555,2020-06-03T06:16:20Z,2020-06-03T17:04:46Z,2021-06-04T00:26:20Z,CLOSED,False,5,5,1,https://github.com/ilhamitugral,[loc] TR Language Updated,1,[],https://github.com/pbatard/rufus/pull/1555,https://github.com/ilhamitugral,1,https://github.com/pbatard/rufus/pull/1555,Spelling errors fixed. Translator information updated.,Spelling errors fixed. Translator information updated.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1555,2020-06-03T06:16:20Z,2020-06-03T17:04:46Z,2021-06-04T00:26:20Z,CLOSED,False,5,5,1,https://github.com/ilhamitugral,[loc] TR Language Updated,1,[],https://github.com/pbatard/rufus/pull/1555,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1555#issuecomment-638329193,Spelling errors fixed. Translator information updated.,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1557,2020-06-06T08:31:09Z,2020-06-06T21:31:14Z,2021-06-07T00:14:03Z,CLOSED,False,19,19,1,https://github.com/ilhamitugral,[loc] TR Final Version,1,[],https://github.com/pbatard/rufus/pull/1557,https://github.com/ilhamitugral,1,https://github.com/pbatard/rufus/pull/1557,Errors fixed. Spelling errors corrected. Translator information updated.,Errors fixed. Spelling errors corrected. Translator information updated.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1571,2020-07-03T17:33:38Z,2020-07-03T17:35:31Z,2021-07-04T00:06:04Z,CLOSED,False,5,0,1,https://github.com/dyeske,test,39,[],https://github.com/pbatard/rufus/pull/1571,https://github.com/dyeske,1,https://github.com/pbatard/rufus/pull/1571,test,test,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1571,2020-07-03T17:33:38Z,2020-07-03T17:35:31Z,2021-07-04T00:06:04Z,CLOSED,False,5,0,1,https://github.com/dyeske,test,39,[],https://github.com/pbatard/rufus/pull/1571,https://github.com/dyeske,2,https://github.com/pbatard/rufus/pull/1571#issuecomment-653632045,test,this is confusing,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1572,2020-07-03T18:12:32Z,2020-07-03T18:16:46Z,2021-07-04T00:06:04Z,CLOSED,False,5,0,1,https://github.com/dyeske,test,39,[],https://github.com/pbatard/rufus/pull/1572,https://github.com/dyeske,1,https://github.com/pbatard/rufus/pull/1572,"test ok this failed I did it backwards, please disregard","test ok this failed I did it backwards, please disregard",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1572,2020-07-03T18:12:32Z,2020-07-03T18:16:46Z,2021-07-04T00:06:04Z,CLOSED,False,5,0,1,https://github.com/dyeske,test,39,[],https://github.com/pbatard/rufus/pull/1572,https://github.com/dyeske,2,https://github.com/pbatard/rufus/pull/1572#issuecomment-653641418,"test ok this failed I did it backwards, please disregard","I messed this up, please disregard",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1572,2020-07-03T18:12:32Z,2020-07-03T18:16:46Z,2021-07-04T00:06:04Z,CLOSED,False,5,0,1,https://github.com/dyeske,test,39,[],https://github.com/pbatard/rufus/pull/1572,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1572#issuecomment-653642884,"test ok this failed I did it backwards, please disregard","I'd rather you justify why exactly you think you can't use an up to date MinGW.
PROCESSOR_ARCHITECTURE_ARM64 is defined in up to date MinGW, so if you have an issue with it not being defined, please contact the maintainers of your distro to ensure they update their MinGW package to have it.
Else, you are going to create pull request after pull request for all the MinGW projects you want to compile for ARM64, which is not the proper way to go.
The only way I can ever accept this is if you show proof that you have tried to get MinGW packages updated and that the maintainers of whatever distro you are using have provided a good reason not to do so.
Also, please understand that I regularly remove code that existed only for compatibility with older toolchain versions (case in point from today's commit), as I genuinely don't want to be bogged down with trying to support obsolete stuff. As such, even if a fix to support an old(ish) toolchain is a one liner, I will need good justification to add it, as I am literally fighting to remove that stuff from Rufus.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/acuteaura,1,https://github.com/pbatard/rufus/pull/1574,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1574#issuecomment-653801007,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","Can you provide a full log of SD detection with this patch and Alt-..
I'd like to see a full debug log before I apply this PR. Thanks.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/acuteaura,3,https://github.com/pbatard/rufus/pull/1574#issuecomment-653803640,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","Thanks. Could take a while since I don't have a development environment up, I'll look into it sometime next week.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/acuteaura,4,https://github.com/pbatard/rufus/pull/1574#issuecomment-653864672,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","Processing 'GLREADER' device:
  Hardware ID: 'GLREADER\GenDisk'
Found card reader device 'SDXC card'
Using autorun.inf label for drive D: 'alpine'
1 device found
Windows volumes from this device:
● \\?\Volume{f2919833-be32-11ea-9ed5-f8ac658683c2}\ @1048576
Disk type: Removable, Disk size: 64 GB, Sector size: 512 bytes
Cylinders: 7783, Tracks per cylinder: 255, Sectors per track: 63
Partition type: MBR, NB Partitions: 1
Disk ID: 0x00000000
Drive has a Zeroed Master Boot Record
Partition 1:
  Type: FAT32 LBA (0x0c)
  Size: 59.6 GB (64020807680 bytes)
  Start Sector: 2048, Boot: No
Found card reader device 'SDXC card'
Using autorun.inf label for drive D: 'alpine'
1 device found
Disk type: Removable, Disk size: 64 GB, Sector size: 512 bytes
Cylinders: 7783, Tracks per cylinder: 255, Sectors per track: 63
Partition type: MBR, NB Partitions: 1
Disk ID: 0x00000000
Drive has a Zeroed Master Boot Record
Partition 1:
  Type: FAT32 LBA (0x0c)
  Size: 59.6 GB (64020807680 bytes)
  Start Sector: 2048, Boot: No

Tested a FAT32 format from Rufus and everything seems to work fine.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1574#issuecomment-653875872,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","Please send a log with Alt-. (enumeration debug) enabled, please.
You need to press Alt and . in Rufus until you see USB debug enabled on the status bar and then send the log. You will see that it then contains a lot more information pertaining to device enumeration, which is what I am after.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/acuteaura,6,https://github.com/pbatard/rufus/pull/1574#issuecomment-653926838,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","This is with enumeration (the wording for that is Processing '%s' device, so the relevant section is at the top).
This is a PCI device and it enumerates as GLREADER/GenDisk. I've just redacted the USB hubs for brevity.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/pbatard,7,https://github.com/pbatard/rufus/pull/1574#issuecomment-653935307,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","Sorry to insist but I want to see the full log, including the non-relevant devices. I'm especially interested in the SCSI section to see if there's anything in there that we may need to be careful of.
It should look something like this:
Rufus x64 v3.12.1687
Windows version: Windows 10 64-bit (Build 19041.329)
Syslinux versions: 4.07/2013-07-25, 6.04/pre1
Grub versions: 0.4.6a, 2.04
System locale ID: 0x0809 (en-GB)
Will use default UI locale 0x0809
SetLGP: Successfully set NoDriveTypeAutorun policy to 0x0000009E
Localization set to 'en-US'
Processing Hub 1:
  Hub[1] = '\\?\usb#vid_174c&pid_3074#5&1cc0e58a&0&20#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[060]: USB\VID_0424&PID_5534\6&2C14036A&0&2
Processing Hub 2:
  Hub[2] = '\\?\usb#root_hub30#5&2b0a345&0&0#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[210]: USB\VID_05E3&PID_0612\6&A72C5FD&0&2
  Found ID[194]: USB\VID_04B3&PID_301A\6&A72C5FD&0&3
  Found ID[061]: USB\VID_05E3&PID_0610\6&A72C5FD&0&4
Processing Hub 3:
Processing Hub 4:
  Hub[3] = '\\?\usb#vid_174c&pid_2074#5&1cc0e58a&0&9#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[020]: USB\VID_0424&PID_2134\6&16396D6C&0&2
  Found ID[252]: USB\VID_1A86&PID_7523\6&16396D6C&0&3
Processing Hub 5:
  Hub[4] = '\\?\usb#root_hub20#4&35abf192&0#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[231]: USB\VID_8087&PID_8002\5&2D364466&0&1
Processing Hub 6:
  Hub[5] = '\\?\usb#vid_04b3&pid_301a#6&a72c5fd&0&3#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[224]: USB\VID_04B3&PID_301B\7&31B97E88&0&1
  Found ID[059]: USB\VID_046D&PID_C077\7&31B97E88&0&2
Processing Hub 7:
Processing Hub 8:
  Hub[6] = '\\?\usb#vid_0424&pid_2134#6&16396d6c&0&2#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[081]: USB\VID_045E&PID_028E\1F3251C
Processing Hub 9:
Processing Hub 10:
Processing Hub 11:
Processing Hub 12:
Processing Hub 13:
  Hub[7] = '\\?\usb#root_hub20#4&12773313&0#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[171]: USB\VID_8087&PID_800A\5&8DF2A5&0&1
Processing Hub 14:
  Hub[8] = '\\?\usb#root_hub30#4&34be82cc&0&0#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
  Found ID[225]: USB\VID_174C&PID_3074\5&1CC0E58A&0&20
  Found ID[245]: USB\VID_174C&PID_2074\5&1CC0E58A&0&9
  Found ID[119]: USB\VID_0B05&PID_180A\F0038C9991CB
  Found ID[017]: USB\VID_0781&PID_5580\AA011124161316440239
Processing Hub 15:
Processing IDs belonging to 'USBSTOR':
  USB\VID_0781&PID_5580\AA011124161316440239
Processing 'SCSI' device:
  Hardware ID: 'SCSI\DiskIntel______Raid_1_Volume1.0.'
Found non-USB non-removable device 'Intel Raid 1 Volume' => Eliminated
Processing 'SCSI' device:
  Hardware ID: 'SCSI\DiskWDC_____WD60EMAZ-11LW3B080.0'
Found non-USB non-removable device 'WDC WD60EMAZ-11LW3B0' => Eliminated
Processing 'SCSI' device:
  Hardware ID: 'SCSI\DiskSAMSUNG_MZHPV256HDGL-000BXW2'
Found non-USB non-removable device 'SAMSUNG MZHPV256HDGL-00000' => Eliminated
Processing 'USBSTOR' device:
  Hardware ID: 'USBSTOR\DiskSanDisk_Extreme_________0001'
  Matched with ID[017]: USB\VID_0781&PID_5580\AA011124161316440239
  Matched with Hub[8]: '\\?\usb#root_hub30#4&34be82cc&0&0#{f18a0e88-c30c-11d0-8815-00a0c906bed8}'
Found USB 3.0 device 'SanDisk Extreme USB Device' (0781:5580)
Using autorun.inf label for drive F: 'KRD'
  Score: -40
Processing 'SCSI' device:
  Hardware ID: 'SCSI\DiskAPPLE________SSD_SM0512FUXM2'
Found non-USB non-removable device 'APPLE SSD SM0512F' => Eliminated
1 device found
Windows volumes from this device:
● \\?\Volume{fb5fb690-bdee-11ea-9b99-f0038c9a2e6f}\ @1048576
Disk type: Removable, Disk size: 32 GB, Sector size: 512 bytes
Cylinders: 3818, Tracks per cylinder: 255, Sectors per track: 63
Partition type: MBR, NB Partitions: 1
Disk ID: 0x00000000
Drive has a Zeroed Master Boot Record
Partition 1:
  Type: FAT32 LBA (0x0c)
  Size: 29.2 GB (31405899776 bytes)
  Start Sector: 2048, Boot: Yes

Please don't assume about what sections of the log I am really interested with, thank you.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/pbatard,8,https://github.com/pbatard/rufus/pull/1574#issuecomment-656080364,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1","Unless you provide the full log requested, I'm afraid I'm going to have to close this PR. I want to see the full context of your proposed changes before I apply it, and I don't understand your reluctance to provide that.
If you propose a PR, you should be able to test it and therefore you should be able to provide a full log from your test. And I hope you can appreciate that, as I developer, given the opportunity, I want to see the full context of a proposed change, on the relevant hardware, before I apply it.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1574,2020-07-04T19:07:13Z,2020-07-14T10:40:38Z,2021-07-15T00:05:40Z,CLOSED,False,1,1,1,https://github.com/acuteaura,Add detection for Genesys Logic SD readers,1,[],https://github.com/pbatard/rufus/pull/1574,https://github.com/pbatard,9,https://github.com/pbatard/rufus/pull/1574#issuecomment-658108135,"ID for some Genesys Logic PCI SD card readers, as seen in recent Thinkpads (T49x/X49x).
GLREADER added as shown in rufus USB debug mode, currently ""disabled by policy"".
ref: http://www.genesyslogic.com/en/product_list.php?1st=1",Closing until OP (or somebody else with the same hardware) provides the log requested.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1579,2020-07-14T09:57:25Z,2020-07-14T10:38:35Z,2021-07-15T00:05:39Z,CLOSED,False,0,8,1,https://github.com/Stilic,Delete index.html,1,[],https://github.com/pbatard/rufus/pull/1579,https://github.com/Stilic,1,https://github.com/pbatard/rufus/pull/1579,"This folder contain the same index.html file of root folder. So, i am destroyed this folder because this is useless","This folder contain the same index.html file of root folder. So, i am destroyed this folder because this is useless",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1579,2020-07-14T09:57:25Z,2020-07-14T10:38:35Z,2021-07-15T00:05:39Z,CLOSED,False,0,8,1,https://github.com/Stilic,Delete index.html,1,[],https://github.com/pbatard/rufus/pull/1579,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1579#issuecomment-658107355,"This folder contain the same index.html file of root folder. So, i am destroyed this folder because this is useless","This is needed for the http to https redirection of the downloads, because we don't want to enforce blanket https always for various compatibility reasons.
For instance we want http://rufus.akeo.ie/downloads to redirect to https://rufus.ie/downloads while leaving other sections of the site accessible through http.
Please refrain from suggesting GitHub pages cleanup, so assuming that a file is ""useless"" unless you are very familiar with the history of this site as well as GitHub's hosting limitations.
Unless you are actually seeing an issue linked to using a specific file, you don't want to start removing them at random.
→ Rejected.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1580,2020-07-14T09:58:13Z,2020-07-14T10:39:54Z,2021-07-15T00:05:39Z,CLOSED,False,0,8,1,https://github.com/Stilic,Delete index.html,1,[],https://github.com/pbatard/rufus/pull/1580,https://github.com/Stilic,1,https://github.com/pbatard/rufus/pull/1580,"This folder contain the same index.html file of root folder. So, i am destroyed this folder because this is useless","This folder contain the same index.html file of root folder. So, i am destroyed this folder because this is useless",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1580,2020-07-14T09:58:13Z,2020-07-14T10:39:54Z,2021-07-15T00:05:39Z,CLOSED,False,0,8,1,https://github.com/Stilic,Delete index.html,1,[],https://github.com/pbatard/rufus/pull/1580,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1580#issuecomment-658107868,"This folder contain the same index.html file of root folder. So, i am destroyed this folder because this is useless",Same story as #1579,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1584,2020-07-22T10:13:58Z,2020-07-22T11:02:59Z,2021-07-23T00:06:02Z,CLOSED,False,1,0,1,https://github.com/joopjaeng,สร้างรูฟัส3.11,3,[],https://github.com/pbatard/rufus/pull/1584,https://github.com/joopjaeng,1,https://github.com/pbatard/rufus/pull/1584,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1603,2020-08-20T09:12:29Z,2020-08-20T11:12:41Z,2021-08-21T00:05:52Z,CLOSED,False,1,1,1,https://github.com/FardinA143,Update README.md,1,[],https://github.com/pbatard/rufus/pull/1603,https://github.com/FardinA143,1,https://github.com/pbatard/rufus/pull/1603,Just changed an arrow sign.,Just changed an arrow sign.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1608,2020-08-29T15:57:13Z,2020-09-10T16:58:25Z,2021-09-11T00:06:25Z,CLOSED,False,0,0,29,https://github.com/tiagofilipesilva,[ui] lossless optimization of icons,1,[],https://github.com/pbatard/rufus/pull/1608,https://github.com/tiagofilipesilva,1,https://github.com/pbatard/rufus/pull/1608,the icons were optimized in order to reduce the binary size without quality loss,the icons were optimized in order to reduce the binary size without quality loss,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1608,2020-08-29T15:57:13Z,2020-09-10T16:58:25Z,2021-09-11T00:06:25Z,CLOSED,False,0,0,29,https://github.com/tiagofilipesilva,[ui] lossless optimization of icons,1,[],https://github.com/pbatard/rufus/pull/1608,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1608#issuecomment-686484597,the icons were optimized in order to reduce the binary size without quality loss,"I'll apply this when I get a chance (I've got a few things in the way of a clean-enough repo allowing me to proceed, so this may actually take a couple of weeks).",True,{'THUMBS_UP': ['https://github.com/tiagofilipesilva']}
pbatard/rufus,https://github.com/pbatard/rufus,1608,2020-08-29T15:57:13Z,2020-09-10T16:58:25Z,2021-09-11T00:06:25Z,CLOSED,False,0,0,29,https://github.com/tiagofilipesilva,[ui] lossless optimization of icons,1,[],https://github.com/pbatard/rufus/pull/1608,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1608#issuecomment-690507394,the icons were optimized in order to reduce the binary size without quality loss,Applied. Thanks again!,True,{'THUMBS_UP': ['https://github.com/tiagofilipesilva']}
pbatard/rufus,https://github.com/pbatard/rufus,1633,2020-10-12T09:07:08Z,2020-10-12T09:14:56Z,2021-10-13T00:07:39Z,CLOSED,False,4,4,2,https://github.com/timgates42,"docs: fix simple typo, tolerence -> tolerance",1,[],https://github.com/pbatard/rufus/pull/1633,https://github.com/timgates42,1,https://github.com/pbatard/rufus/pull/1633,"There is a small typo in src/libcdio/cdio/iso9660.h, src/libcdio/iso9660/iso9660_fs.c.
Should read tolerance rather than tolerence.","There is a small typo in src/libcdio/cdio/iso9660.h, src/libcdio/iso9660/iso9660_fs.c.
Should read tolerance rather than tolerence.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1633,2020-10-12T09:07:08Z,2020-10-12T09:14:56Z,2021-10-13T00:07:39Z,CLOSED,False,4,4,2,https://github.com/timgates42,"docs: fix simple typo, tolerence -> tolerance",1,[],https://github.com/pbatard/rufus/pull/1633,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1633#issuecomment-706993256,"There is a small typo in src/libcdio/cdio/iso9660.h, src/libcdio/iso9660/iso9660_fs.c.
Should read tolerance rather than tolerence.","That's a libcdio patch, not a Rufus patch (Please be mindful that Rufus might be reusing components and therefore, since we need to have the ability to fetch newer versions without applying extra changes on top of it, we cannot accept changes for elements that should be patched upstream).
Please send that patch to libcdio-devel. Once it's been applied, it will naturally find its way into Rufus.",True,{'THUMBS_UP': ['https://github.com/timgates42']}
pbatard/rufus,https://github.com/pbatard/rufus,1635,2020-10-15T00:14:23Z,2020-10-26T15:49:26Z,2021-10-27T00:07:32Z,CLOSED,False,14,14,1,https://github.com/xingkong013,Update zh-CN.po,1,[],https://github.com/pbatard/rufus/pull/1635,https://github.com/xingkong013,1,https://github.com/pbatard/rufus/pull/1635,"The specific updates are as follows:
将megabytes翻译维m 字节
修复 请稍等...
修复 运行下载脚本...
修复 启用涵盖 USB 硬盘的显示
请谨慎使用，后果自负!!!
翻译 KB条目
翻译 MB条目
翻译 GB条目
翻译 TB条目
翻译 PB条目
翻译 Windows To Go条目","The specific updates are as follows:
将megabytes翻译维m 字节
修复 请稍等...
修复 运行下载脚本...
修复 启用涵盖 USB 硬盘的显示
请谨慎使用，后果自负!!!
翻译 KB条目
翻译 MB条目
翻译 GB条目
翻译 TB条目
翻译 PB条目
翻译 Windows To Go条目",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1665,2020-12-17T23:29:50Z,2020-12-18T00:45:11Z,2021-12-19T00:09:28Z,CLOSED,False,1,1,1,https://github.com/Doncuppjr,Update file.h,1,[],https://github.com/pbatard/rufus/pull/1665,https://github.com/Doncuppjr,1,https://github.com/pbatard/rufus/pull/1665,Increase MAX_DATA_LEN to accommodate larger boot loaders.,Increase MAX_DATA_LEN to accommodate larger boot loaders.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1665,2020-12-17T23:29:50Z,2020-12-18T00:45:11Z,2021-12-19T00:09:28Z,CLOSED,False,1,1,1,https://github.com/Doncuppjr,Update file.h,1,[],https://github.com/pbatard/rufus/pull/1665,https://github.com/Doncuppjr,2,https://github.com/pbatard/rufus/pull/1665#issuecomment-747777560,Increase MAX_DATA_LEN to accommodate larger boot loaders.,Why so small? Can we let it be the whole size of the MBR gap?,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1665,2020-12-17T23:29:50Z,2020-12-18T00:45:11Z,2021-12-19T00:09:28Z,CLOSED,False,1,1,1,https://github.com/Doncuppjr,Update file.h,1,[],https://github.com/pbatard/rufus/pull/1665,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1665#issuecomment-747796212,Increase MAX_DATA_LEN to accommodate larger boot loaders.,"Why so small? Can we let it be the whole size of the MBR gap?

Because this is tailored for my actual needs in terms of boot loader size, and now what other people might do.
Sorry but unless I happen to need to increase this size for the bootloaders used with the standard version of Rufus, I'm going to reject this request and expect people who want to use the Rufus codebase with custom bootloaders to modify the required elements of code on their own.
Please bear in mind that any application is developed for its current expectations, and not the way people may stretch it to do things that are out of scope, such as embedding large boot loaders.
In other words, as long as I see no case for the embedding of a bootloader larger than 64k, in the vanilla version of Rufus, I'm not going to change this limit (precisely because it's going to tell me if the embedded files start getting too large).
And if you are unhappy about this, please bear in mind that, when I needed more than 10 KB here, rather than ask the ms-sys author to increase the constant in their codebase (see https://sourceforge.net/p/ms-sys/code2/HEAD/tree/trunk/inc/file.h#l5), I just accepted that, as someone who was creating a derivative work, it was my own responsibility to alter the constants, in my own work, as required.
→ Rejected.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1665,2020-12-17T23:29:50Z,2020-12-18T00:45:11Z,2021-12-19T00:09:28Z,CLOSED,False,1,1,1,https://github.com/Doncuppjr,Update file.h,1,[],https://github.com/pbatard/rufus/pull/1665,https://github.com/Doncuppjr,4,https://github.com/pbatard/rufus/pull/1665#issuecomment-747798903,Increase MAX_DATA_LEN to accommodate larger boot loaders.,No worries. I got to a point that I can work with. It just seemed like an arbitrary constraint vs a real limitation of the 1st partition start byte - 512. Thank you again for all of your hard work.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/BlueLovin,1,https://github.com/pbatard/rufus/pull/1689,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1689#issuecomment-773240275,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","I appreciate the effort.
But I'm afraid it's not that simple.
First, Rufus is translated in more than 35 languages, and I don't want only English users to be able to guess the right combination of letter (Since, for instance, French will display DEMARRER for START button, and you can't underline an S in there to let the user know that they can use Alt-S to trigger the START action).
Second, Rufus is already pretty much using the whole gammut of Alt-key combinations for cheat modes. For instance Alt-S is mapped to the cheat mode that disables the size limit check. So you can't just go around and replace that. And yes, we can talk about the design decision to use Alt and not Ctrl for cheat modes, but that's not something I am planning to change until the next major redesign.
A proper implementation of #1688 will require some application redesign as well as translator involvement, which is the reason why I have deferred it.
So while I genuinely appreciate the effort you put into this Pull Request, I'm afraid I have to reject it.",True,{'THUMBS_UP': ['https://github.com/BlueLovin']}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/fretje,3,https://github.com/pbatard/rufus/pull/1689#issuecomment-821830523,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","I remember from my MFC days that the mnemonics could easily be set on any letter of the text on a button by simply adding an ampersand (&) in front of it. All the rest was handled through the framework. Something similar could be used to make this ""translation-friendly""...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1689#issuecomment-821837808,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","Adding an ampersand, a la MFC, is precisely what this pull request attempted to do, but it was rejected because it is far from being that simple. You can't just add ampersand in rufus.rc or rufus.loc and expect that to work, even with some limited rework of the code, because there is a lot more that's needed than just mapping an & sequence to an action. For instance, we are already using pretty much all of the Alt-KEY combinations for cheat modes and some of the Ctrl-KEY too, so there has first to be some translator involved redesigned into choosing key combinations that can work in all languages (because you want to be able to display the character that should be used as mnemonic in the UI) and that aren't going to conflict with cheat modes.
I can therefore only reiterate that: a proper implementation of #1688 will require some application redesign as well as translator involvement, which is the reason it's being deferred.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/dancojocaru2000,5,https://github.com/pbatard/rufus/pull/1689#issuecomment-845542843,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","It is understandable but at the same time regrettable that status quo is chosen over accessibility.

And yes, we can talk about the design decision to use Alt and not Ctrl for cheat modes

While it serves no big purpose discussing thing after the fact (aside from someone who wants to make this design decision in the future seeing this and double thinking it), the power of hindsight does show that using Alt for cheat modes wasn't exactly the best decision. I'm not aware of any application off the top of my head that uses Alt alone for keyboard shortcuts, and Controlling something does make a bit more sense in the context of cheat codes. As far as I'm aware, Alt is used either for navigation (mnemonics or Alt alone to focus menubar) or to use the Alternative behaviour of a Ctrl shortcut.

but that's not something I am planning to change until the next major redesign.

Above pedantry aside, I don't see why this couldn't be done. Unless the process of actually changing the shortcuts would be difficult, the cheat modes are displayed in the FAQ (as opposed to in the app), so it is reasonable to expect someone to check the FAQ (or changelog) to see why they no longer work once the change happens (especially considering that most cheat modes are offered on a ""you're on your own"" basis).",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/pbatard,6,https://github.com/pbatard/rufus/pull/1689#issuecomment-845567093,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","Switching from Alt to Ctrl is not the main holdback or even a major holdback.
What is the holdback is that there is a combination of issues that need to get sorted, the major one being that the shortcuts should try to make sense in most languages.
Using Alt-S for Start when the translation of the word in French does not contain the letter S, meaning that it's not possible to display an indication of the mnemonic in the language is less than ideal. And if you are tempted to say ""screw other languages"", let me ask how you'd feel if I were to pick Alt-D as the mnemonic for Start always, and you were required to figure it out on your own.
And then there's trying to handle conflicting mnemonics and so on.
When you're only dealing with an application in one language, mnemonics are easy. When you're dealing with 35 languages, and you don't want to make one language more ""equal"" than the others, not so much...
So, and this has to be the 3rd time I have to reiterate this: ""a proper implementation of #1688 will require some application redesign as well as translator involvement, which is the reason it's being deferred"".
Trying to simplify the issue as a mere redesign or even a mere switch of Alt to Ctrl for cheat mode is doing a major disservice to what it actually entails at the programming level, and why it's not gonna happen that fast.
Then again, and especially since I've started to release Open Source software, I have long come to terms with the old adage that ""Anything that you don't have to do yourself always looks deceptively easy""...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/dancojocaru2000,7,https://github.com/pbatard/rufus/pull/1689#issuecomment-845572017,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","the major one being that the shortcuts should try to make sense in most languages

I don't really see why that's a major issue. I don't know the intricacies of what Rufus uses for GUI, so I don't know how it'll work for that, but for something like Windows Forms (yeah, not the greatest example, I know) the way to make this shortcut is to add & before the letter to be used as shortcut.
I really don't see why there is such a big point made out of ""Pornire doesn't contain S so Alt+S won't make sense in Romanian"" when nobody asked these shortcuts to be hardcoded. In the same way that Rufus isn't hardcoded in a single language, I don't see why these shortcuts would have to be.
Whoever writes translations could be asked to decide what letter makes most sense for a certain action and maybe even mark it like in WinForms with an ampersand. After that, yes, it's always easier when describing it theoretically and not actually doing the work, but what I'd do if I would have to manually implement this is look through the translated strings of actionable controls like buttons and, if those strings contain an ampersand, set up the keyboard shortcut.

And then there's trying to handle conflicting mnemonics and so on.

As for conflicting mnemonics, it would probably be a translating error if they exist? If I were to manually implement handling of that instead of trusting the translations, I'd have a boolean array corresponding to each letter and not make the shortcut binding if it was bound already (perhaps with some logging in order to observe that this happens and correct it).

So, and this has to be the 3rd time I have to reiterate this: ""a proper implementation of #1688 will require some application redesign as well as translator involvement, which is the reason it's being deferred"".

It is constantly mentioned that a redesign would be needed, but when reasons for that need are brought up, solutions seem to be found. Maybe the solutions proposed are inadequate, but (and it may be my fault here) I haven't seen them criticized as such.
As for translator involvement, that's a given. But would adding support for a new langauge involve a redesign? If not, why would adding support for this would from that point of view?",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/pbatard,8,https://github.com/pbatard/rufus/pull/1689#issuecomment-845577489,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","I don't really see why that's a major issue.

Exactly as I said: ""Anything that you don't have to do yourself always looks deceptively easy""...
Rufus is not using Windows Forms. It's actually not using any UI framework (so much so that we're doing our control positioning manually, in order for it to work at all scales, per https://github.com/pbatard/rufus/blob/master/src/ui.c#L233-L249), and the simplistic solution proposed above (of modfying the .rc) also completely ignores our custom translation framework (not .mui's either if that's what you think we might be using, because, without a lot of trouble, that only works for applications that come with an installer, which we don't).

It is constantly mentioned that a redesign would be needed

Yes, a redesign will happen, so that I can solve multiple issues at once, including this one, and thus make a MUCH better use of my time than trying to solve them individually. The plan is to switch to XAML eventually, and whatever Microsoft will decide to provide as an XAML compatible platform for win32, so it makes little sense at this stage not to use that redesign to solve memonic, dark theme, commandline support and other issues that revolve around UI.
Please bear in mind that with my time not being unlimited (or free) I will always be looking for ways to minimize the amount I need to invest on a solution, when by the simple act of waiting for some more favourable conditions to happen, I can achieve a better solution at a lesser cost.
But please feel free to tell me again how stuff that you don't have the full insight into and won't have to implement yourself should actually be simple to add, and not be considered a waste of time if a planned UI redesign, not that far down the line, is expected to render much of that effort obsolete.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/dancojocaru2000,9,https://github.com/pbatard/rufus/pull/1689#issuecomment-845583435,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","Rufus is not using Windows Forms.

That I could tell, especially since it's written in C, not C#. I merely gave an example of an approach and how I would manually do it myself, given that I was unaware of the constraints imposed by the custom translation framework.

[the entire part after the 2nd quote essentially]

The tone feels rather condescending, especially at the end where it probably is so on purpose.
Switching to an entirely new architecture for the GUI will certainly provide a fresh canvas to better and more easily and efficiently implement planned new features on. Had I been aware that that's what the planned redesign entails, I would have agreed that it's best to wait from the beginning.
Redesign can also mean still keeping what there is, shuffling UI around and refactoring some code while keeping the same base.

not that far down the line

Given that a couple of months ago you've told me in #1688 that the redesign ""may be years away"", excuse me for looking for potential ways to implement this sooner than in a couple of years.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/pbatard,10,https://github.com/pbatard/rufus/pull/1689#issuecomment-845587443,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","excuse me for looking for potential ways to implement this sooner than in a couple of years.

Why? What's the urgency here? Can you explain how not having mnemonics is greatly impairing the ability of the vast majority of users to carry out the expected operations in Rufus?
I am treating this, like dark theme, as a ""nice to have but low priority feature"", because, the way I see it, outside of a few people who are adamant that this should happen tomorrow because they would like Rufus to be something it was never designed to be (a sysadmin/power-user friendly tool), my time is still better invested in features and bugfixes that will help the majority of users. And I am far from being done with what I have lined up there in that respect.
And yes, at this stage, I do anticipate the redesign (and therefore my adding the mnemonic feature) to be years away, which is a timeframe I am absolutely happy with, because it should give me enough time to work through more important stuff and planify this feature (so that I can combine it with a translation update for instance).
If you are unhappy with that, I will kindly ask that you fork your own version and perform the work that you are expecting to happen on short/medium notice there. Or should I remind you that you got the application entirely for free and that, no matter how much you would like me to drop everything else I have planned, I still do not owe you any feature within a timeframe that you may consider agreeable.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/dancojocaru2000,11,https://github.com/pbatard/rufus/pull/1689#issuecomment-845595543,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","Can you explain how not having mnemonics is greatly impairing the ability of the vast majority of users to carry out the expected operations in Rufus?

If we develop features that will only help the vast majority of users, accessibility wouldn't be a thing because people with disabilities aren't the vast majority of people. I can understand if that's the focus that you take with your own time, but I will also express the potential flaws I see in this focus if I am allowed to (potential flaws which you can rightfully ignore).

a sysadmin/power-user friendly tool

I don't really see how this is a sysadmin/power-user feature. A sysadmin/power-user would rather have command line rather than mnemonics, as mnemonic provide comparatively little improvement over moving the mouse.
As I mentioned in #1688, mnemonics will provide a big improvement for people navigating the UI using Narrator, as they will have a quick way to invoke the main actions rather than listen to the Narrator describing the entire program until they can tell they focused the right button.

Or should I remind you that you got the application entirely for free and that, no matter how much you would like me to drop everything else I have planned, I still do not owe you any feature within a timeframe that you may consider agreeable.

If you're getting this annoyed at people making requests when the application is free, you can make Rufus a paid application and/or turn off issues on GitHub.
Leaving aside a little of the same aggressiveness you direct at me, I really don't understand why you get this offended.  What audacity I have to suggest a feature and potential ways to obtain it early. Do you expect me instead to instead say ""Here's something that would be nice, please don't add it for the next 10 years""?
You've left open a forum for users to send you feedback. Why do you get so passive aggressive when users make use of it? If you don't want to hear from people regarding a certain topic, just lock it. But you're really treating this as if I'm about to hold you at gunpoint to do what I want, when I merely make the case of why it would be nice to have it and even (naively) try to provide my (basic and primitive) insight on how this could be achieved.
You've only mentioned stuff like ""a redesign is needed"". I came and said why I don't think that might be the case. Because after all, it's not needed. It would be way harder to implement the feature now and it would be misguided allocation of personal time considering the future redesign, but it would certainly be possible.
You never said ""this will take a long, I am working on other stuff now, once a redesign is here it'll be easier to do and I'll handle it then"", which would have clarified everything up. You just said ""it's not possible before redesign"".
This message is going on for too long and it will probably be another waste of your oh, so precious time. But I still recommend to not view everyone as ""I want you to do free work for me"" when they're suggesting (not demanding) stuff, and, essentially, I recommend not being a passive aggressive mean spirited person, which is what it feels like you are given the way you respond.

Ultimately, I suggest features hoping you will want to add them. If you say ""it can't be done"", I'll try to look into why. If you say ""it needs this"", I'll try to convince myself and ask ""does it really?"". If you say ""I don't want to do it for now"", I'll accept it since it's your time and work that you're putting in, not mine. If you even say ""I want to do this, but it'll be much easier after the redesign"", I'll even be happy that you agree with me on the feature instead of writing long messages and arguing. Please try and consider that.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1689,2021-02-04T03:01:22Z,2021-02-04T11:32:29Z,2021-05-21T13:04:11Z,CLOSED,False,42,42,40,https://github.com/BlueLovin,Added Mnemonic Support,2,[],https://github.com/pbatard/rufus/pull/1689,https://github.com/pbatard,12,https://github.com/pbatard/rufus/pull/1689#issuecomment-845935547,"Optimized application for mnemonics. Users can now press ALT followed by the first letter of the button they wish to press. WinAPI automatically adds an underline under the first letter of all buttons when you press ALT.


Changed IDC_SELECT from ""SELECT"" to ""BROWSE"", for better clarity and also so that all the buttons are accessible through mnemonics.



Inspired by issue #1688","I really don't understand why you get this offended.

Because you are implicitly suggesting that I am doing a bad job and didn't think this through. Half your messages are ""It shouldn't take that long to do it"", so, yeah, you shouldn't really be coloured surprised if I'm getting annoyed at your repeated poking into this. You think I am aggressive? Please try to read your comments from my perspective, thank you.
Especially, every time I try to explain why it's going to take longer than you think it will, you're seem to be getting angry and reply ""well you should have said that first"", which really leaves me with no choice but to assume that you clearly did not believe my statement that this isn't that quick a job.
You started questioning the Alt vs Ctrl thing, promoting it as if it was the major hold up. Then you started questioning the amount of work that would be needed to make translated mnemonic work. Then you started questioning the need for the UI redesign. In short, you are rejecting every single point I am providing you on why I want to delay this feature as if I was spewing bullshit, and now you are getting ""offended"" that I am reacting negatively to your implicitly calling me a liar?
This issue tracker is open for feedback yes. But it does not exist for me to get berated by individuals who are not ready to accept that my developer's time is not infinite, or that I can't drop what I'm doing on a whim to grant their wishes, or that I can't waste said time going through a bullet point list of which elements a requested feature requires to be completed and how much time each of these point is expected to take, especially when most users, such as the 2 I replied to before you you jumped in and started to question my statement as well as the time it should ultimately take to add this feature, are not trying to imply that the developer of an application is just lying...
And you are still going on implicitly suggesting that I am not being truthful on the reasons why this will take time to add, with your ""If you say ""I don't want to do it for now"", I'll accept it"", as if it was just a matter of me not wanting to do it, rather than, as I explained, a matter of not making sense to invest work that will be rendered mostly obsolete the minute we switch UI framework (which is the exact same reason why I have stopped spending time working on dark mode, even though I was already half way there and sunk quite a bit of work into it already).
If you want to convince yourself that I'm just dismissing or delaying features just because I don't want to do them, and that there's also no reason why I should be annoyed by your continuing questioning (dismissing) of the way I have logically decided to approach how and when a feature should be added, feel free to proceed.
But at this stage, I'm going to have to ask you to please do that on your own, as I am both banning you and locking this thread, as there's only so much patience I have with people who are trying to pretend it is their right to sling thinly concealed abuse at a developer.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1712,2021-04-03T10:48:37Z,2021-04-03T19:39:41Z,2022-04-05T00:12:11Z,CLOSED,False,114,30,2,https://github.com/Chocobo1,Update Chinese Traditional translation to latest,1,[],https://github.com/pbatard/rufus/pull/1712,https://github.com/Chocobo1,1,https://github.com/pbatard/rufus/pull/1712,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1712,2021-04-03T10:48:37Z,2021-04-03T19:39:41Z,2022-04-05T00:12:11Z,CLOSED,False,114,30,2,https://github.com/Chocobo1,Update Chinese Traditional translation to latest,1,[],https://github.com/pbatard/rufus/pull/1712,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1712#issuecomment-812915578,,"Applied, thanks!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1715,2021-04-08T20:23:47Z,2021-04-09T11:57:33Z,2022-04-10T00:13:12Z,CLOSED,False,2,1,2,https://github.com/wesinator,Windows PE resource info - add Rufus description,2,[],https://github.com/pbatard/rufus/pull/1715,https://github.com/wesinator,1,https://github.com/pbatard/rufus/pull/1715,"Use ""The Reliable USB Formatting Utility"" for description in Windows PE
binary builds
p.s. thanks for all the work you've put into this great tool !
I still haven't found anything else like it that writes non-destructive ISO images, even on Linux.
Cheers,","Use ""The Reliable USB Formatting Utility"" for description in Windows PE
binary builds
p.s. thanks for all the work you've put into this great tool !
I still haven't found anything else like it that writes non-destructive ISO images, even on Linux.
Cheers,",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1715,2021-04-08T20:23:47Z,2021-04-09T11:57:33Z,2022-04-10T00:13:12Z,CLOSED,False,2,1,2,https://github.com/wesinator,Windows PE resource info - add Rufus description,2,[],https://github.com/pbatard/rufus/pull/1715,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1715#issuecomment-816631532,"Use ""The Reliable USB Formatting Utility"" for description in Windows PE
binary builds
p.s. thanks for all the work you've put into this great tool !
I still haven't found anything else like it that writes non-destructive ISO images, even on Linux.
Cheers,","I'm going to have to reject this, on account that the description only makes sense for English speakers, and Rufus may be used by people who don't speak English at all.
Especially, the .appxmanifest description may end up being displayed in the start menu, so I'd rather have the application name than a description that non-English speaker may not understand...
I appreciate your willingness to try to improve Rufus though. If Rufus was English-only, I would definitely have applied your request!",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1716,2021-04-10T02:11:34Z,2021-04-10T02:23:23Z,2022-04-11T00:12:41Z,CLOSED,False,1,4,1,https://github.com/GardeningTool,Update badblocks.c,1,[],https://github.com/pbatard/rufus/pull/1716,https://github.com/GardeningTool,1,https://github.com/pbatard/rufus/pull/1716,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1716,2021-04-10T02:11:34Z,2021-04-10T02:23:23Z,2022-04-11T00:12:41Z,CLOSED,False,1,4,1,https://github.com/GardeningTool,Update badblocks.c,1,[],https://github.com/pbatard/rufus/pull/1716,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1716#issuecomment-817064207,,"Unless the source this code is derived from is updated, I'm not planning to pick these kind of improvements, as the less a derivative source deviates from the original, the easier it is to integrate updates.
Please be very mindful when you propose a source change that the code may not be something we wrote, but something we picked from an upstream project, and therefore that needs to be patched there for us to integrate it.
Note that it doesn't mean that I wouldn't prefer the code to be improved in the manner you suggest, just that, sometime, it makes more sense to go with whatever idiosyncrasies exist in the imported code, especially if altering that code won't bring any functional change to the table.
→ Rejected",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1721,2021-04-25T06:56:34Z,2021-04-25T11:21:24Z,2022-04-26T00:14:27Z,CLOSED,False,14680,14507,2,https://github.com/kayazeren,Turkish translation update,3,[],https://github.com/pbatard/rufus/pull/1721,https://github.com/kayazeren,1,https://github.com/pbatard/rufus/pull/1721,"Turkish translation completely reviewed and refined
As a translator reference you can check my Transifex profile: https://www.transifex.com/user/profile/kayazeren/","Turkish translation completely reviewed and refined
As a translator reference you can check my Transifex profile: https://www.transifex.com/user/profile/kayazeren/",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1721,2021-04-25T06:56:34Z,2021-04-25T11:21:24Z,2022-04-26T00:14:27Z,CLOSED,False,14680,14507,2,https://github.com/kayazeren,Turkish translation update,3,[],https://github.com/pbatard/rufus/pull/1721,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1721#issuecomment-826307504,"Turkish translation completely reviewed and refined
As a translator reference you can check my Transifex profile: https://www.transifex.com/user/profile/kayazeren/","I'm afraid that I don't accept translation updates unless they have been vetted by the active translator, and there is an active translator for Turkish (Mehmetali), whose contact details you can find out in the About dialog when Rufus is running in Turkish.
This may sound counter intuitive (After all, why would a developer refuse improvements?), but we've had issue in the past where translation updates were designed around a political agenda, where a translator was trying to favour a specific dialect or promote ""revised"" grammatical views that were far from being agreed by the mainstream language speakers, and as such, since I cannot judge the impartiality of a translation update, I have to request that changes, that aren't limited to obvious typos, are done in consultation with the active translator.
That's actually the reason why I'm trying to make sure that you can find the contact details on a translator in the About dialog, so that, if you believe that a translation needs improvement, you do discuss those with that person. Otherwise, you are mostly trying to carry out changes to their work behind their back, which, I hope, you can understand is something we want to avoid.
As a result, I will close this PR. The Turkish translator is still active (he very recently sent a translation for the 3.14 release), so if you feel that the translation needs improvement, I will kindly request that you liaise with them first.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1721,2021-04-25T06:56:34Z,2021-04-25T11:21:24Z,2022-04-26T00:14:27Z,CLOSED,False,14680,14507,2,https://github.com/kayazeren,Turkish translation update,3,[],https://github.com/pbatard/rufus/pull/1721,https://github.com/kayazeren,3,https://github.com/pbatard/rufus/pull/1721#issuecomment-826314702,"Turkish translation completely reviewed and refined
As a translator reference you can check my Transifex profile: https://www.transifex.com/user/profile/kayazeren/","Thank you for your email.
I understand very well that the translation/translator issues seem easy but
could be very complicated.
After I checked translation quality, I was not sure that
previous translators were still active.
I will contact the active maintainer as you suggested.

Regards
Kaya

Pete Batard ***@***.***>, 25 Nis 2021 Paz, 14:21 tarihinde
şunu yazdı:
…
 I'm afraid that I don't accept translation updates unless they have been
 vetted by the active translator, and there is an active translator for
 Turkish (Mehmetali), whose contact details you can find out in the About
 dialog when Rufus is running in Turkish.

 This may sound counter intuitive (After all, why would a developer refuse
 improvements?), but we've had issue in the past where translation updates
 were designed around a political agenda, where a translator was trying to
 favour a specific dialect or promote ""revised"" grammatical views that were
 far from being agreed by the mainstream language speakers, and as such,
 since I cannot judge the impartiality of a translation update, I have to
 request that changes, that aren't limited to obvious typos, are done in
 consultation with the active translator.

 That's actually the reason why I'm trying to make sure that you can find
 the contact details on a translator in the About dialog, so that, if you
 believe that a translation needs improvement, you do discuss those with
 that person. Otherwise, you are mostly trying to carry out changes to their
 work behind their back, which, I hope, you can understand is something we
 want to avoid.

 As a result, I will close this PR. The Turkish translator is still active
 (he very recently sent a translation for the 3.14 release), so if you feel
 that the translation needs improvement, I will kindly request that you
 liaise with them first.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1721 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABCFSZ5XMH4HZVDXYJ3S7L3TKP3MFANCNFSM43Q6YEVA>
 .",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/LLyaudet,1,https://github.com/pbatard/rufus/pull/1729,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1729#issuecomment-834517777,,"I'm not seeing much of a typo to correct there.
""twice as fast as"" seems to be good enough for BBC reporters, which is also good enough for me. ;)
→ Rejected.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/LLyaudet,3,https://github.com/pbatard/rufus/pull/1729#issuecomment-834522678,,"Hi,
I'm not a native English speaker but in France we do not trust journalists (moreover TV journalists) when it comes to grammar ;)
Best regards,
Laurent Lyaudet",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1729#issuecomment-834539043,,"Don't take it personally but, between a random non-native English speaker that I've never met, and a BBC article that I expect to have been reviewed before publishing (because that's how web publishing from professional sources like the BBC goes), I'll trust the BBC article by a long mile when it comes to grammatical correctness...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/LLyaudet,5,https://github.com/pbatard/rufus/pull/1729#issuecomment-835268755,,"No problem. I clearly understand your point of view. My answer was just to point out that as a native French-speaker, I know from experience that even French professional sources reference journals like ""Le Monde"" that are also reviewed before publishing have frequently grammar or orthographic errors. The number of errors, wrote or spoken, being clearly more important with TV journalists. I expect the language level of journalists to be the same whatever the language/country.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/pbatard,6,https://github.com/pbatard/rufus/pull/1729#issuecomment-835390261,,"What you fail to understand is that I used the BBC article as one of the numerous examples I could find of usage of ""twice as fast as"". If you had done your research, you would have found that using ""twice as fast as"" does not qualify as a typo at all, and Google clearly indicates that the usage of ""twice as fast as"" is exceedingly common, compared to ""twice faster than"" (with, actually, most of the search results I see for ""twice faster than"" being from people discouraging its use as something that doesn't sound natural to a native English speaker).
The thing is, your phrasing of ""twice faster than"" did feel very unnatural to me, but (unlike what seems to be your case if you're still trying to ""demonstrate"" that you are somehow more trustworthy than a public BBC article) I considered that I could be wrong, and therefore ran a quick search to validate that ""twice as fast as"" is clearly not grammatically incorrect and also something that is widely used by native English speakers. And since the BBC article had the construct in its title, I picked that one as an example to prove my point.
Please just accept that you were wrong and move on instead of grasping at straws as to how you may still somehow have been right. It's not the end of the world.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/LLyaudet,7,https://github.com/pbatard/rufus/pull/1729#issuecomment-835512320,,"I have no problem admitting I am wrong. My first answer had a ';)' smiley. My second answer started with ""No problem. I clearly understand your point of view.""...
What I mean by ""your point of view"" is not the fact that it is not a typo. I believe you for this.
I mean your point of view that a random non-native English speaker should not be trusted against a BBC article.
I was just joking on the fact that many persons/journalists native speakers of @insert_some_random_language_here@ are just plain wrong when it comes to grammar and other languages skills. So the BBC or Google argument of authority is quite funny, even if I trust you that it yields a correct answer in this case. Let me illustrate with a common error I hear on the French TV quite frequently :
Error of the journalists :

""Le premier ministre a donné une allocation ce matin.""
Translation : ""The prime minister gave a benefit this morning.""
""allocation chômage"" = ""unemployment benefit"", etc.
The word ""allocation"" is common.
Correct sentence :
""Le premier ministre a donné une allocution ce matin.""
Translation : ""The prime minister gave a speech this morning.""
The word ""allocution"" is more literate.
There is just one letter between ""allocation"" and ""allocution"" but the meaning is totally different.
Some errors become so common that they may become the correct use in a few centuries.

I apologize if I sounded arrogant or unfriendly. At first, when I submitted the PR I thought I was right and the messages after were just because my parents educated me with word play and joking about the misuse of words and a lot of journalists misuse words (most of the time unintentionally). So I somewhat clumsily tried to communicate this kind of joking on misuse of words and joking on journalists in general (I repeat that I admit my error on this particular case.) I admit it is not very clever of making fun of unintentional misuse of words by some people. This is just a mindset I inherited from my parents. At least, if you learn French some day, I can advise you to look in a dictionary or in Grevisse ""Le bon usage"" and trust these references more than TV, journals or even the majority of French people.
Best regards and sorry for the trouble,
Laurent Lyaudet",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/pbatard,8,https://github.com/pbatard/rufus/pull/1729#issuecomment-835539150,,"I mean your point of view that a random non-native English speaker should not be trusted against a BBC article.

C'est une vision tres reduite du probleme. Mon probleme est que ma connaissance de l'Anglais (qui n'est pas ma langue maternelle, car c'est en fait... le Francais) m'indiquait que votre suggestion etait erronnee, et l'article de la BBC servait juste a corroborer mon impression. Et j'ai clairement aussi indique le fait que les articles de la BBC (mais vous pouvez aussi essayer de disputer ca si vous le voulez) etaient revus par une tierce personne avant publication, conformement a la pratique journalistique courante. Et, contrairement a ce que vous sembler pensez, je ne peux que disputer votre hypothese douteuse qui stipule que, parce que la BBC est a l'origine une chaine de television, leur professionnalisme journalistique ecrit doit etre considere comme n'appliquant pas l'un des principes de bases de la matiere, a savoir la revision des copies par une tierce personne (en general un editeur dedie a cette tache) avant publication.
Donc, a moins que vous ne puissiez demontrer le contraire, on ne peut que considerer que, statistiquement, les articles publies sur le site de la BBC ont ete revus par au moins deux personnes, dont, la encore statistiquement, l'Anglais est vraisemblablement la langue natale. Ce qui me donne logiquement le droit de considerer n'importe quel article publie par le BBC comme beaucoup plus fiable, en terme de tournures grammaticales, qu'une tierce personne dont l'Anglais n'est pas la langue maternelle. C'est une simple question de logique.
Maintenant, vous pouvez continuer a donner des anecdotes comme quoi, dans un nombre de cas limites, certains articles publies par des journalistes, autrement reputes, contiennent des coquilles ou fautes de Francais ou d'Anglais, mais cela restera toujours anecdotal, auquel cas la logique de persomption qu'un article de la BBC vaut mieux en terme d'autorite sur les tournures de phrases anglaises que l'avis d'une tierce personne dont l'Anglais n'est pas la langue natale.
En resume, votre raisonnement part du principe que tout individu doit exhiber un manque de confiance implicite vis a vis de la capacite d'une certaine categorie de journalistes (par simple mesure de leur association avec une chaine de television, et independamment de leur parcours probable de journalistes d'expression ecrite plutot qu'audiovisuelle) a produire des articles dont l'ortographe et la grammaire refletent le bon usage de la langue courante.
Malheureusement pour vous, ce n'est pas un raisonement dans lequel je peux vous suivre. Dans l'absence d'indications contraires (et j'espere que vous avez l'esprit suffisamment ouvert pour comprendre que quelques exemples anecdotaux ne se substituent pas a une tendance generale), je continuerai toujours a estimer que les articles de la BBC sont beaucoup fiable, au point de vue grammatical, qu'un tiers commentateur sur internet.
Et pour la petite info, ayant passe une bonne partie de ma vie en France, je ne me souviens pas avoir entendu ou lu des journalistes utiliser ""allocation"" au lieu d' ""allocution"". Il est evidemment possible que le niveau des journalistes ait change depuis que j'ai quitte la France, mais j'ai quand meme de serieux doutes a ce sujet, specialement quand une recherche Google rapide ne semble pas me pointer sur des articles ecrits ou ""allocation"" est utilise au lieu d' ""allocution (ce qui, une fois de plus, semble confirmer mon assertion que les articles ecrits par des organismes reputes tels que la BBC, sont revises par plusieurs personnes afin d'eviter ce genre d'erreurs faciles a detecter).
Mon ""bon usage"" a moi reste donc avec les references que je vois de la BBC ou d'ailleurs, specialement quand elles apparaissent corroborer ma connaissance deja existante de certaines tournures anglaises...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/LLyaudet,9,https://github.com/pbatard/rufus/pull/1729#issuecomment-838185975,,"Bonjour,
Je ne pensais pas que mes excuses allaient vous énerver davantage.
Vos réponses sont nettement plus agressives que les miennes.
Je peux vous assurer que mes deux parents et moi entendons fréquemment des erreurs de français dans la bouche de journalistes dont le lapsus allocation-allocution qui ne vous a pas amusé... dommage !
Les erreurs de langage ne sont pas bien graves et, je le répète, un sujet d'amusement futile pour moi.
Pour moi au même titre que les informaticiens font parfois des bugs,
les journalistes font aussi parfois des fautes de langage.
J'ai un doctorat en informatique de l'École Normale Supérieure de Lyon et j'ai publié plusieurs articles en anglais.
J'ai lu un bien plus grand nombre d'articles.
Les typos ou erreurs de raisonnement dans les articles publiés avec revue éditoriale du journal existent malheureusement de manière assez fréquente.
Dans la plupart des cas, il n'est pas bien difficile de corriger les preuves mais je peux vous assurer qu'un solide esprit critique est nécessaire pour lire un article qu'il y ait un processus de revue éditoriale ou non.
Le processus éditorial est très loin d'être infaillible.
Cordialement,
Laurent Lyaudet",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/pbatard,10,https://github.com/pbatard/rufus/pull/1729#issuecomment-838309550,,"Encore une fois, vous essayez de me faire dire ce que je n'ai pas dit.
Je ne dis pas que les articles sur les sites d'information doivent etre consideres comme denues de fautes.
Je dis simplement que je doute que vous ayez une personne qui revise ce que vous ecrivez afin de detecter des possibles fautes d'ortographe our de grammaire, ce qui est la raison pour laquelle vous avez essayer de ""corriger"" une typo qui n'existait pas. Donc, en depit de votre parcours, a moins que vous ayez des informations specifiques sur un manque de professionalisme du site d'information de la BBC, je considererai toujours que les articles publies sur ce site doivent etre consideres comme faisant preuve d'une meilleure maitrise de l'anglais que la votre (ou que n'importe quel autre commentateur tiers sur internet), car ils sont logiquement soumis a un standard de publication plus pousse que celui du commentaire individuel sur un sites social.
De surcroit, et cela ne semble helas pas vous avoir tape a l'oeil, il me semble pouvoir clairement demontrer l'application d'un esprit critique lors de l'analyse de votre suggestion, puisque ma demarche, bien que votre tournure me semblait non courante, a ete de valider ma supposition en la corroborant par la recherche d'articles qui demontraient l'usage grandement repandu de ""twice as fast as"", dans le cas ou, puisque je ne suis pas aussi une personne dont l'anglais est la langue maternelle, mon impression initiale se serait avere erronee.
Donc, que le processus editorial soit infaillible ou non, quand 3 personnes (minimum) semblent s'accorder sur tel ou tel usage de la langue (sachant que, puisque que je ne pensais certainement pas que cela allait devenir un point contentieux et que vous auriez une aversion innee pour des sources envers lesquelles, a moins d'informations specifiques contraires et en depit d'anecdotes qui sont loin de refleter une tendance, on ne peut que donner le benefice de fiabilite au point de vue de l'usage de la langue), l'esprit critique me dit que j'ai logiquement effectue assez de recherches pour pouvoir trancher. Et, je me dois de reiterer, puisque je ne pensais que vous offrirez une telle reticence a la capacite des journalistes de la BBC de produire des articles ou l'usage de la langue anglaise peut en general etre considere comme une reference, je n'ai fourni qu'un seul des liens vers tous les articles que j'aurais pu produire.
A ce stade, je ne peux que constater que, malgre votre parcours, vous semblez manifestement irrite d'avoir vu votre autorite contestee. Je ne doute pas que sur certains sujets elle soit competente, mais, helas, si je m'en refere a votre suggestion et au fait qu'une expression aussi courante que ""twice as fast as"" (qui, je ne peux qu'assumer, apparait frequemment dans les articles scientifiques anglais) vous semble incorrecte, je ne peux que continuer a rester confiant dans un raisonnement qui accorde de facto plus de credit a n'importe quel article de la BBC qu'a un commentateur isole sur internet, y compris un commentateur ayant votre niveau d'etude. Que l'on puisse bien evidemment trouver des exemples ponctuels contraires ici ou la ne diminue pas le sens de mon propos .
En l'occurence, puisqu'il devrait etre manifeste que j'ai du effectuer une recherche afin de trouver le lien que j'ai fourni, je ne peux qu'avoir un probleme avec le fait que vous semblez assumer que cet esprit critique qui vous est cher ne doit pas exister chez les autres, et que je me suis arrete au premier article que j'ai trouve, puisqu'autrement, je ne pense pas que vous seriez parti sur une tirade dans laquelle les articles de news seraient loin d'etre une reference du point de vue linguistique. Donc je de dois de reiterer, pour la petite info, que le fait que la formule en question apparaisse dans le titre de l'article n'est pas un hasard, et que, si votre esprit d'analyse est aussi aguerri que votre esprit critique, vous devriez vous douter que j'ai valide l'usage de cette tournure dans plus que la source de la BBC, avant de la selectionner comme exemple non exhaustif.
Tout cela pour dire que votre critique ne tient tout simplement pas la route. Vous assumez une demarche qui n'a clairement pas ete la mienne (par exemple en forcant l'interpretation de mes propos en une sorte d'acceptance aveugle qu'une publication sur tel ou tel medium puisse etre denuee de fautes) pour ensuite venir faire une critique generale qui n'a qu'un lien tenu avec le probleme de base, a savoir qu'en depit d'incidents ponctuels facilement identifiables, les articles de la BBC sont une bien meilleure autorite sur l'usage de l'anglais que vous et moi ne le seront jamais, et donc que vos recrimminations issues du lien que j'avais utilise pour corroborrer mes propos, sont sans fondement.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/JonnyTech,11,https://github.com/pbatard/rufus/pull/1729#issuecomment-838573247,,"As a native English speaker, I confirm that ""twice as fast as..."" is a commonly used term and easier understood, although ""twice faster than..."" does technically sound correct it is not commonplace and does seem rather unnatural.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/LLyaudet,12,https://github.com/pbatard/rufus/pull/1729#issuecomment-839078103,,"Encore une fois, vous essayez de me faire dire ce que je n'ai pas dit.

Oui c'est exactement ce que vous faîtes avec moi. Je n'ai pas d'aversion pour la BBC comme vous le prétendez. J'ai parlé de joke, d'amusement mais vous ne voulez pas qu'il y ait de nuance. Je n'ai même pas cherché à dire que votre point de vue n'avait que peu de valeur puisque j'ai écrit:

I clearly understand your point of view.

J'ai essayé d'introduire une nuance dans la foi aveugle dans les sources journalistiques, comme dans toute foi aveugle.
Si vous préférez les sources d'authorité que vous m'avez donné à savoir article de la BBC et recherche Google, c'est fiable dans 99% des cas (plus ou moins selon les domaines) mais pour le % restant ça ne suffit pas. Vous comprenez ? 99% versus 1% : une nuance. Pas besoin d'écrire 2000 mots à chaque fois comme si je connaissais rien.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/pbatard,13,https://github.com/pbatard/rufus/pull/1729#issuecomment-839351527,,"dans la foi aveugle dans les sources journalistiques

La foi de qui ? Je suppose, puisque vous insistez pour en faire part sur une discussion qui ne se pretait pas a ce propos, que vous etes en train d'assumer que quelqu'un ici est en train de manifester cette foi aveugle, auquel cas je ne peux que continuer a declarer que, soit vous avez du mal a comprendre la signification de mes propos, soit vous les detournez sciemment pour essayer de me faire dire ce que je n'ai pas dit, ce que je ne peux qu'extrapoler en une tentative d'essayer de minimiser votre erreur originelle en detournant le propos.
Votre ""in France we do not trust journalists (moreover TV journalists) when it comes to grammar ;)"" n'etait ni bienvenu, ni avise quand il etait facile d'admettre simplement votre erreur, comme je vous l'ai suggere et, meme s'il comporte un smiley, je ne peux que l'interpreter, en considerant la maniere dont vous vous efforcer encore a essayer de promouvoir l'evidence d'une faillabilite anecdotique de n'importe quelle source en tant que point crucial (ce qui implique une fois de plus que vous considerez que quelqu'un ici est en train de soutenir une hypothese contraire, et ce qui, si vous relisez soigneusement mes propos, vous verrez n'est pas du tout le cas), comme de la poudre aux yeux.
Il n'y avait aucune raison, quand il etait clair que vous etiez dans l'erreur et que l'on essayait de demontrer que vous aviez fait une erreur, d'essayer d'amener le sujet sur le credit que l'on est en passe d'accorder ou pas aux journalistes (avec une assertion comme quoi les journalistes lies a un service audiovisuel seraient moins competents que les journalistes de presse purement ecrite — desole mais votre ""Je n'ai pas d'aversion pour la BBC comme vous le prétendez"" est en conflit direct avec votre ""we do not trust journalists (moreover TV journalists) when it comes to grammar"" originel), comme si cela pouvait d'une maniere ou d'une minimiser le fait que vous vous soyez trompe.
En gros, j'ai beaucoup de mal a croire, comme vous l'avez ecrit, que vous n'avez pas de probleme a admettre que vous etiez dans l'erreur, quand vous etes une fois de plus a essayer de mettre l'accent sur le fait que les sources qui ont ete utilisees pour montrer que vous etiez dans l'erreur ne peuvent pas etre considerees comme fiables a 100%, avec le sous entendu implicite que, si tel est la cas, mon utilisation de plusieurs de ces sources pour corriger publiquement votre erreur puisse en fait elle meme etre sujet au doute. Ou, plus simplement, vous essayez encore manifestement de laisser planner le soupcon sur les sources que j'ai utilisees pour corriger votre assertion que ma tournure de phrase etait incorrecte, comme si cela aidait a rendre votre erreur moins flagrante. Et aucune des ""nuances"" que je lis dans vos propos n'ont pour l'instant permis d'invalider cette assertion, en particulier quand je ne peux m'empecher de relever des contradictions (comme celle liee a votre quolibet initial sur les ""journalistes TV""), des ""preuves"" douteuses (""allocation"" contre ""allocution"", dont je ne me souviens pas avoir jamais va la moindre manifestation en France, que ce soit dans la presse ecrite ou dans les JTs des chaines generales) ainsi que l'exposition soudaine et non solicitee de votre parcours d'etude, comme s'il vous donnait une sorte d'ayant droit dans une discussion ou, parallelement, vous voulez mettre en exergue le fait que le pedigree n'est bien evidemment pas une guarantie contre les fautes ponctuelles...
Maitenant, s'il faut ecrire a nouveau 2000 mots pour essayer de vous faire comprendre a quel point, pour moi, ce surencherissement ne tient pas vraiment la route, cela ne me pose pas specialement de probleme...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/LLyaudet,14,https://github.com/pbatard/rufus/pull/1729#issuecomment-839734100,,"Une fois de plus vous prétendez savoir mieux que moi mes intentions. En gros, vous me traitez de menteur et je pense exactement la même chose de vos insinuations. Vous faîtes exprès d'ignorer un smiley clin d'oeil qui dénote de manière factuelle une ironie dans mon propos. Vous prétendez que mon expérience des erreurs journalistiques, dont mes propres parents sont témoins, n'existe pas, ce qui me fait penser à du gaslighting. Ma mère a lu quotidiennement le journal Le Monde pendant des années. Elle a arrêté ces dernières années non sans avoir eu l'occasion avant de me montrer des fautes : de français, ou factuelles ou même de vulgaire copier-coller avec une phrase répétée (et je ne parle pas de mise en exergue stylistique), ou bien des morceaux de phrase sans verbe et sans point à la fin qui suggérait une erreur de copier-coller avec une partie du texte déplacé perdue. Ce sont des preuves papier. La politique de publication des journaux en ligne la plus courante ne présente pas l'historique des corrections faites sur un article après la première publication sauf dans le cas d'erreurs factuelles graves (en théorie). Achetez des journaux papiers et vous n'aurez aucun mal à trouver des typos ou pires car aucun lecteur attentif n'aura pu faire corriger votre copie propre contrairement à ce qui se passe pour une édition électronique. J'ai mentionné mon parcours car j'ai aussi relu des articles dans ce cadre et je connais donc le processus éditorial de l'intérieur en tant qu'auteur et aussi en tant que referee. Si vous acceptez de prendre en compte certains autorités mais pas mon expérience, je maintiens que c'est un problème de sens critique. Les relecteurs sont des humains qui manquent souvent de temps. Sur des articles avec 2 ou 3 referees dont moi, il m'est arrivé d'être le seul à découvrir une erreur dans l'article soumis à publication. C'est factuel.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1729,2021-05-07T14:38:10Z,2021-05-07T15:22:30Z,2022-05-13T00:17:03Z,CLOSED,False,1,1,1,https://github.com/LLyaudet,typo twice faster than,1,[],https://github.com/pbatard/rufus/pull/1729,https://github.com/pbatard,15,https://github.com/pbatard/rufus/pull/1729#issuecomment-839756142,,"Si vous acceptez de prendre en compte certains autorités mais pas mon expérience, je maintiens que c'est un problème de sens critique.

Non. C'est une simple histoire de logique. Je n'ai toujours rien qui me laisse a penser, en dehors de vos propre dires, et en depit d'un aplomb qui vous a laisse penser qu'une tournure anglaise tout a fait courante etait une typo necessitant une correction, que vous puissiez etre une meilleure autorite au point de vue grammaire et orhographe qu'une source journalistique courante.
Et apparemment, le fait de voir votre autorite mise ouvertement en question vous horripile.
Toutefois, le fait que vous n'ayez meme pas pris le peine, avant de declamer publiquement qu'il existait une typo, de verifier si:

Le texte que vous souhaitiez corriger etait reellement une typo
La correction que vous vouliez y apporter etait d'un usage courant

indique que votre autorite sur la matiere est en passe d'etre questionnee.
Et pour votre information, vous generalisez encore un propos que je n'ai pas dit. J'ai juste indique que je ne me souvenais pas avoir jamais lu ou vu ecrit l'utilisation de ""allocation"" au lieu de ""allocution"". Je ne dis absolument pas, comme vous cherchez a l'insinuer, que les erreurs journalistiques n'existent pas.
En gros, je dispute a la fois l'exemple que vous avez fourni comme cas concret d'erreur journalistique (d'autant plus que j'ai cherche a en trouver des exemples avant de disputer cela) ainsi que votre professionalisme en matiere de donneur de lecon d'orthographe ou de grammaire, en me basant sur les 2 points elabores ci dessus.
Et je contraste ce clair exemple de manque de professionalisme avec celui que l'on est en droit d'attendre de sources dont modus operandi est la publication d'articles, pour indiquer que, meme si l'on peut y trouver des coquilles, je suis en droit de preferer ces sources a des commentateurs tiers. Et je tiens a souligner que, pour l'instant, je ne vous ai pas encore vu faire la preuve que, quel qu'en soit votre parcours ou votre connaissance du processus editorial, votre autorite puisse avoir plus de valeur que celles des sources journalistiques. Si vous connaissez le processus editorial, la demarche que vous avez applique lors de la creation de cette Pull Request laisse quand meme a desirer...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1730,2021-05-07T18:46:03Z,2021-05-09T12:21:03Z,2022-05-10T00:14:28Z,CLOSED,False,1,1,1,https://github.com/Oreeeee,Fixed a typo in Polish locale.,1,[],https://github.com/pbatard/rufus/pull/1730,https://github.com/Oreeeee,1,https://github.com/pbatard/rufus/pull/1730,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1730,2021-05-07T18:46:03Z,2021-05-09T12:21:03Z,2022-05-10T00:14:28Z,CLOSED,False,1,1,1,https://github.com/Oreeeee,Fixed a typo in Polish locale.,1,[],https://github.com/pbatard/rufus/pull/1730,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1730#issuecomment-835795958,,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1739,2021-05-27T15:52:38Z,2021-05-28T11:02:58Z,2022-05-29T00:15:36Z,CLOSED,False,0,0,32,https://github.com/apps/imgbot,[ImgBot] Optimize images,1,[],https://github.com/pbatard/rufus/pull/1739,https://github.com/apps/imgbot,1,https://github.com/pbatard/rufus/pull/1739,"Beep boop. Your images are optimized!
Your image file size has been reduced by 10% 🎉


Details




File
Before
After
Percent reduction




/res/appstore/listing/Rufus-en.png
48.03kb
33.50kb
30.25%


/res/appstore/listing/Rufus-fr.png
51.00kb
36.44kb
28.55%


/res/appstore/Images/Wide310x150Logo.scale-100.png
4.19kb
3.78kb
9.81%


/res/appstore/Images/LargeTile.scale-200.png
39.14kb
35.37kb
9.62%


/res/appstore/Images/Square150x150Logo.scale-100.png
3.96kb
3.59kb
9.35%


/res/appstore/Images/Square150x150Logo.scale-400.png
37.16kb
33.76kb
9.16%


/res/appstore/Images/Wide310x150Logo.scale-200.png
12.43kb
11.46kb
7.82%


/res/appstore/Images/LargeTile.scale-400.png
127.56kb
117.83kb
7.63%


/res/appstore/Images/Wide310x150Logo.scale-150.png
7.78kb
7.20kb
7.55%


/res/appstore/Images/LargeTile.scale-125.png
17.30kb
15.99kb
7.54%


/res/appstore/Images/Square150x150Logo.scale-200.png
11.46kb
10.60kb
7.46%


/res/appstore/Images/LargeTile.scale-100.png
11.87kb
11.01kb
7.25%


/res/appstore/Images/Square44x44Logo.altform-unplated_targetsize-256.png
48.04kb
44.57kb
7.21%


/res/appstore/Images/Square44x44Logo.altform-lightunplated_targetsize-256.png
48.04kb
44.57kb
7.21%


/res/appstore/Images/Wide310x150Logo.scale-400.png
40.18kb
37.34kb
7.07%


/res/appstore/Images/Square150x150Logo.scale-150.png
7.19kb
6.71kb
6.59%


/res/appstore/Images/SmallTile.scale-100.png
2.18kb
2.04kb
6.49%


/res/appstore/Images/Square150x150Logo.scale-125.png
5.44kb
5.08kb
6.48%


/res/appstore/Images/Wide310x150Logo.scale-125.png
5.79kb
5.42kb
6.36%


/res/appstore/Images/LargeTile.scale-150.png
23.19kb
21.73kb
6.29%


/res/appstore/Images/SmallTile.scale-400.png
19.13kb
17.95kb
6.14%


/res/appstore/Images/Square44x44Logo.targetsize-256.png
30.12kb
28.47kb
5.50%


/res/appstore/Images/StoreLogo.scale-400.png
31.23kb
29.66kb
5.04%


/res/appstore/Images/SmallTile.scale-200.png
6.10kb
5.81kb
4.69%


/res/appstore/Images/Square44x44Logo.scale-400.png
15.77kb
15.12kb
4.13%


/res/appstore/Images/SmallTile.scale-125.png
3.04kb
2.94kb
3.41%


/res/appstore/Images/SmallTile.scale-150.png
3.98kb
3.85kb
3.26%


/res/appstore/Images/Square44x44Logo.scale-150.png
3.46kb
3.36kb
3.10%


/res/appstore/Images/Square44x44Logo.scale-200.png
5.22kb
5.17kb
0.97%


/res/appstore/Images/Square44x44Logo.scale-100.png
1.79kb
1.77kb
0.82%


/res/appstore/Images/StoreLogo.scale-200.png
9.57kb
9.51kb
0.59%


/res/appstore/Images/Square44x44Logo.scale-125.png
2.52kb
2.51kb
0.08%








Total :
683.84kb
614.12kb
10.20%





Black Lives Matter | 💰 donate | 🎓 learn | ✍🏾 sign
📝 docs |  repo | 🙋🏾 issues | 🏅 swag | 🏪 marketplace","Beep boop. Your images are optimized!
Your image file size has been reduced by 10% 🎉


Details




File
Before
After
Percent reduction




/res/appstore/listing/Rufus-en.png
48.03kb
33.50kb
30.25%


/res/appstore/listing/Rufus-fr.png
51.00kb
36.44kb
28.55%


/res/appstore/Images/Wide310x150Logo.scale-100.png
4.19kb
3.78kb
9.81%


/res/appstore/Images/LargeTile.scale-200.png
39.14kb
35.37kb
9.62%


/res/appstore/Images/Square150x150Logo.scale-100.png
3.96kb
3.59kb
9.35%


/res/appstore/Images/Square150x150Logo.scale-400.png
37.16kb
33.76kb
9.16%


/res/appstore/Images/Wide310x150Logo.scale-200.png
12.43kb
11.46kb
7.82%


/res/appstore/Images/LargeTile.scale-400.png
127.56kb
117.83kb
7.63%


/res/appstore/Images/Wide310x150Logo.scale-150.png
7.78kb
7.20kb
7.55%


/res/appstore/Images/LargeTile.scale-125.png
17.30kb
15.99kb
7.54%


/res/appstore/Images/Square150x150Logo.scale-200.png
11.46kb
10.60kb
7.46%


/res/appstore/Images/LargeTile.scale-100.png
11.87kb
11.01kb
7.25%


/res/appstore/Images/Square44x44Logo.altform-unplated_targetsize-256.png
48.04kb
44.57kb
7.21%


/res/appstore/Images/Square44x44Logo.altform-lightunplated_targetsize-256.png
48.04kb
44.57kb
7.21%


/res/appstore/Images/Wide310x150Logo.scale-400.png
40.18kb
37.34kb
7.07%


/res/appstore/Images/Square150x150Logo.scale-150.png
7.19kb
6.71kb
6.59%


/res/appstore/Images/SmallTile.scale-100.png
2.18kb
2.04kb
6.49%


/res/appstore/Images/Square150x150Logo.scale-125.png
5.44kb
5.08kb
6.48%


/res/appstore/Images/Wide310x150Logo.scale-125.png
5.79kb
5.42kb
6.36%


/res/appstore/Images/LargeTile.scale-150.png
23.19kb
21.73kb
6.29%


/res/appstore/Images/SmallTile.scale-400.png
19.13kb
17.95kb
6.14%


/res/appstore/Images/Square44x44Logo.targetsize-256.png
30.12kb
28.47kb
5.50%


/res/appstore/Images/StoreLogo.scale-400.png
31.23kb
29.66kb
5.04%


/res/appstore/Images/SmallTile.scale-200.png
6.10kb
5.81kb
4.69%


/res/appstore/Images/Square44x44Logo.scale-400.png
15.77kb
15.12kb
4.13%


/res/appstore/Images/SmallTile.scale-125.png
3.04kb
2.94kb
3.41%


/res/appstore/Images/SmallTile.scale-150.png
3.98kb
3.85kb
3.26%


/res/appstore/Images/Square44x44Logo.scale-150.png
3.46kb
3.36kb
3.10%


/res/appstore/Images/Square44x44Logo.scale-200.png
5.22kb
5.17kb
0.97%


/res/appstore/Images/Square44x44Logo.scale-100.png
1.79kb
1.77kb
0.82%


/res/appstore/Images/StoreLogo.scale-200.png
9.57kb
9.51kb
0.59%


/res/appstore/Images/Square44x44Logo.scale-125.png
2.52kb
2.51kb
0.08%








Total :
683.84kb
614.12kb
10.20%





Black Lives Matter | 💰 donate | 🎓 learn | ✍🏾 sign
📝 docs |  repo | 🙋🏾 issues | 🏅 swag | 🏪 marketplace",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1739,2021-05-27T15:52:38Z,2021-05-28T11:02:58Z,2022-05-29T00:15:36Z,CLOSED,False,0,0,32,https://github.com/apps/imgbot,[ImgBot] Optimize images,1,[],https://github.com/pbatard/rufus/pull/1739,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1739#issuecomment-850338370,"Beep boop. Your images are optimized!
Your image file size has been reduced by 10% 🎉


Details




File
Before
After
Percent reduction




/res/appstore/listing/Rufus-en.png
48.03kb
33.50kb
30.25%


/res/appstore/listing/Rufus-fr.png
51.00kb
36.44kb
28.55%


/res/appstore/Images/Wide310x150Logo.scale-100.png
4.19kb
3.78kb
9.81%


/res/appstore/Images/LargeTile.scale-200.png
39.14kb
35.37kb
9.62%


/res/appstore/Images/Square150x150Logo.scale-100.png
3.96kb
3.59kb
9.35%


/res/appstore/Images/Square150x150Logo.scale-400.png
37.16kb
33.76kb
9.16%


/res/appstore/Images/Wide310x150Logo.scale-200.png
12.43kb
11.46kb
7.82%


/res/appstore/Images/LargeTile.scale-400.png
127.56kb
117.83kb
7.63%


/res/appstore/Images/Wide310x150Logo.scale-150.png
7.78kb
7.20kb
7.55%


/res/appstore/Images/LargeTile.scale-125.png
17.30kb
15.99kb
7.54%


/res/appstore/Images/Square150x150Logo.scale-200.png
11.46kb
10.60kb
7.46%


/res/appstore/Images/LargeTile.scale-100.png
11.87kb
11.01kb
7.25%


/res/appstore/Images/Square44x44Logo.altform-unplated_targetsize-256.png
48.04kb
44.57kb
7.21%


/res/appstore/Images/Square44x44Logo.altform-lightunplated_targetsize-256.png
48.04kb
44.57kb
7.21%


/res/appstore/Images/Wide310x150Logo.scale-400.png
40.18kb
37.34kb
7.07%


/res/appstore/Images/Square150x150Logo.scale-150.png
7.19kb
6.71kb
6.59%


/res/appstore/Images/SmallTile.scale-100.png
2.18kb
2.04kb
6.49%


/res/appstore/Images/Square150x150Logo.scale-125.png
5.44kb
5.08kb
6.48%


/res/appstore/Images/Wide310x150Logo.scale-125.png
5.79kb
5.42kb
6.36%


/res/appstore/Images/LargeTile.scale-150.png
23.19kb
21.73kb
6.29%


/res/appstore/Images/SmallTile.scale-400.png
19.13kb
17.95kb
6.14%


/res/appstore/Images/Square44x44Logo.targetsize-256.png
30.12kb
28.47kb
5.50%


/res/appstore/Images/StoreLogo.scale-400.png
31.23kb
29.66kb
5.04%


/res/appstore/Images/SmallTile.scale-200.png
6.10kb
5.81kb
4.69%


/res/appstore/Images/Square44x44Logo.scale-400.png
15.77kb
15.12kb
4.13%


/res/appstore/Images/SmallTile.scale-125.png
3.04kb
2.94kb
3.41%


/res/appstore/Images/SmallTile.scale-150.png
3.98kb
3.85kb
3.26%


/res/appstore/Images/Square44x44Logo.scale-150.png
3.46kb
3.36kb
3.10%


/res/appstore/Images/Square44x44Logo.scale-200.png
5.22kb
5.17kb
0.97%


/res/appstore/Images/Square44x44Logo.scale-100.png
1.79kb
1.77kb
0.82%


/res/appstore/Images/StoreLogo.scale-200.png
9.57kb
9.51kb
0.59%


/res/appstore/Images/Square44x44Logo.scale-125.png
2.52kb
2.51kb
0.08%








Total :
683.84kb
614.12kb
10.20%





Black Lives Matter | 💰 donate | 🎓 learn | ✍🏾 sign
📝 docs |  repo | 🙋🏾 issues | 🏅 swag | 🏪 marketplace","ImgBot is fine, but these PRs are annoying and I no longer need to squeeze every last byte out of images. → Dropped.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1740,2021-05-28T00:20:28Z,2022-02-21T20:03:40Z,2022-02-21T20:03:40Z,CLOSED,False,2,2,2,https://github.com/PerditionC,update FreeDOS kernel to 2043,1,['deferred'],https://github.com/pbatard/rufus/pull/1740,https://github.com/PerditionC,1,https://github.com/pbatard/rufus/pull/1740,"FreeDOS kernel 2043 has been released, this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.  Full source is the ke2043 tagged branch on GitHub FDOS\kernel   Rufus is what I usually use to make my bootable USB drives :-)   (If you are interested I will send you a PR in a week or so after FreeCom 0.85 is released).","FreeDOS kernel 2043 has been released, this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.  Full source is the ke2043 tagged branch on GitHub FDOS\kernel   Rufus is what I usually use to make my bootable USB drives :-)   (If you are interested I will send you a PR in a week or so after FreeCom 0.85 is released).",True,"{'THUMBS_UP': ['https://github.com/CDevelopEF', 'https://github.com/Daasin']}"
pbatard/rufus,https://github.com/pbatard/rufus,1740,2021-05-28T00:20:28Z,2022-02-21T20:03:40Z,2022-02-21T20:03:40Z,CLOSED,False,2,2,2,https://github.com/PerditionC,update FreeDOS kernel to 2043,1,['deferred'],https://github.com/pbatard/rufus/pull/1740,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1740#issuecomment-850379228,"FreeDOS kernel 2043 has been released, this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.  Full source is the ke2043 tagged branch on GitHub FDOS\kernel   Rufus is what I usually use to make my bootable USB drives :-)   (If you are interested I will send you a PR in a week or so after FreeCom 0.85 is released).","FreeDOS kernel 2043 has been released

Great!
Could you please also announce this on the FreeDOS mailing list? The last message I see from you on that topic (dated 2021.05.03) is:

I will be making a new kernel release as soon as I can. (...) I'm aware it's late in release, so these may just be post release updates.

Or was that message akin to a release announcement, since you effectively published your kernel binaries about 10 days later?
Also, does the last part imply that this kernel may not be part of upcoming FreeDOS 1.3 release?
My plan with Rufus has currently been to stick with the kernel used in formal FreeDOS releases, in order to avoid any potential ""When I run DOS application X with Rufus it behaves this way, but when I run it with the last FreeDOS release, it behaves that way"" issues, and I've been kind of waiting to see what 1.3 actually includes to make a move on updating my kernel... which of course depends on FreeDOS 1.3 reaching release stage.

this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.

Thanks for doing this. But I think I'll still prefer to pick the standard kernel release binary and flip the FORCELBA bit myself, so that people can validate that what we provide as a binary in Rufus is exactly the same as formal FreeDOS', except for that bit. Else, I expect the recompilation to alter more than the CONFIG section, which always leads to people having doubts on whether they can actually trust our binary...
In other words, provided FreeDOS 1.3 is based on the kernel.zip package from your ke2043 release, I'm still planning to pick KERNL386.SYS from that archive and alter byte 0x000D, instead of using the one from your ke2043_rufus.zip (which I appreciate, but which, unless there's more than editing byte 0x000D to enable LBA, you can actually remove from your release).
Also, at this stage, I expect Rufus 3.15 to be released after FreeDOS 1.3. So I am planning to only update kernel/FreeCOM once that has happened, and also so that I can update other stuff like KEYB.EXE or MODE.COM if needed.
So I will keep this PR opened for now, and address is when I'm nearing Rufus 3.15 release.
And please do post release announcements for kernel and FreeCOM on the mailing list (no need to send me another PR), as these are rather critical pieces that I think deserve their own notifications when updated. Especially, I don't expect to be the only one from the mailing list who would like to see these kind of milestones publicized...",True,"{'THUMBS_UP': ['https://github.com/woa7', 'https://github.com/fazridep']}"
pbatard/rufus,https://github.com/pbatard/rufus,1740,2021-05-28T00:20:28Z,2022-02-21T20:03:40Z,2022-02-21T20:03:40Z,CLOSED,False,2,2,2,https://github.com/PerditionC,update FreeDOS kernel to 2043,1,['deferred'],https://github.com/pbatard/rufus/pull/1740,https://github.com/marcosfrm,3,https://github.com/pbatard/rufus/pull/1740#issuecomment-959005307,"FreeDOS kernel 2043 has been released, this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.  Full source is the ke2043 tagged branch on GitHub FDOS\kernel   Rufus is what I usually use to make my bootable USB drives :-)   (If you are interested I will send you a PR in a week or so after FreeCom 0.85 is released).","Binary boot records are not distributed anymore? For example, the old kernels.zip from FreeDOS 1.0 has source/ukernel/boot/fat32lba.bin. Compared to the ke2043s.zip version (nasm SOURCE/ke2043/boot/boot32lb.asm -ofat32lba.bin) it differs:
--- fat32lba_bin_old    2021-11-03 12:39:56.670006471 +0000
+++ fat32lba_bin_new    2021-11-03 12:43:33.860006831 +0000
@@ -5,8 +5,8 @@
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfa, 0x29, 0xc0, 0x8e, 0xd8,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x41,
+  0x54, 0x33, 0x32, 0x20, 0x20, 0x20, 0xfc, 0xfa, 0x29, 0xc0, 0x8e, 0xd8,
   0xbd, 0x00, 0x7c, 0xb8, 0xe0, 0x1f, 0x8e, 0xc0, 0x89, 0xee, 0x89, 0xef,
   0xb9, 0x00, 0x01, 0xf3, 0xa5, 0xea, 0x7a, 0x7c, 0xe0, 0x1f, 0x00, 0x00,
   0x60, 0x00, 0x8e, 0xd8, 0x8e, 0xd0, 0x8d, 0x66, 0xe0, 0xfb, 0x88, 0x56,

Should ms-sys (used by Rufus) get these changes?",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1740,2021-05-28T00:20:28Z,2022-02-21T20:03:40Z,2022-02-21T20:03:40Z,CLOSED,False,2,2,2,https://github.com/PerditionC,update FreeDOS kernel to 2043,1,['deferred'],https://github.com/pbatard/rufus/pull/1740,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1740#issuecomment-959025091,"FreeDOS kernel 2043 has been released, this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.  Full source is the ke2043 tagged branch on GitHub FDOS\kernel   Rufus is what I usually use to make my bootable USB drives :-)   (If you are interested I will send you a PR in a week or so after FreeCom 0.85 is released).","Again, I am not planning to update any of the FreeDOS binaries from Rufus unless there is a formal release of FreeDOS that uses these binaries. Thus, I am still waiting to see FreeDOS 1.3 being officially released before I touch anything.
Unless there is a major bug to fix, working with pre-release software is just not worth the trouble...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1740,2021-05-28T00:20:28Z,2022-02-21T20:03:40Z,2022-02-21T20:03:40Z,CLOSED,False,2,2,2,https://github.com/PerditionC,update FreeDOS kernel to 2043,1,['deferred'],https://github.com/pbatard/rufus/pull/1740,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1740#issuecomment-1007549941,"FreeDOS kernel 2043 has been released, this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.  Full source is the ke2043 tagged branch on GitHub FDOS\kernel   Rufus is what I usually use to make my bootable USB drives :-)   (If you are interested I will send you a PR in a week or so after FreeCom 0.85 is released).","Well, seeing that there is still no formal release of FreeDOS happening on the horizon (note: this is not a complaint — I know these things take time), and considering that I am subscribed to the FreeDOS mailing list, so I will know when I can update the kernel used by Rufus with the one from the latest official release, I'm just going to close this PR.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1740,2021-05-28T00:20:28Z,2022-02-21T20:03:40Z,2022-02-21T20:03:40Z,CLOSED,False,2,2,2,https://github.com/PerditionC,update FreeDOS kernel to 2043,1,['deferred'],https://github.com/pbatard/rufus/pull/1740,https://github.com/pbatard,6,https://github.com/pbatard/rufus/pull/1740#issuecomment-1047190458,"FreeDOS kernel 2043 has been released, this one was compiled today and added to kernel release as ke2043_rufus.zip - it is compiled for 386 with FAT32 support and FORCELBA set to enabled.  Full source is the ke2043 tagged branch on GitHub FDOS\kernel   Rufus is what I usually use to make my bootable USB drives :-)   (If you are interested I will send you a PR in a week or so after FreeCom 0.85 is released).","Reopening this PR on account that FreeDOS 1.3 has just been released (congrats on all the good work that led to the release by the way! 😄) and I will therefore update the Kernel used by Rufus to version 2043 through, a commit that will close and reference this.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1791,2021-10-12T18:16:22Z,2021-10-13T11:09:36Z,2021-10-13T13:13:58Z,CLOSED,False,1,1,1,https://github.com/Devnol,Added bypass for cpu model and storage space check,1,[],https://github.com/pbatard/rufus/pull/1791,https://github.com/Devnol,1,https://github.com/pbatard/rufus/pull/1791,"This allows older unsupported machines with less than 64GB of storage (Windows 11 takes around 15 stock) and a CPU before 6th gen intel/2nd gen Ryzen to be able to run Windows 11.
I'm assuming there are more changes that need to be made, but there were no clear contribution guidelines I could find so feel free to add what's missing or tell me what I have to add.","This allows older unsupported machines with less than 64GB of storage (Windows 11 takes around 15 stock) and a CPU before 6th gen intel/2nd gen Ryzen to be able to run Windows 11.
I'm assuming there are more changes that need to be made, but there were no clear contribution guidelines I could find so feel free to add what's missing or tell me what I have to add.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1791,2021-10-12T18:16:22Z,2021-10-13T11:09:36Z,2021-10-13T13:13:58Z,CLOSED,False,1,1,1,https://github.com/Devnol,Added bypass for cpu model and storage space check,1,[],https://github.com/pbatard/rufus/pull/1791,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1791#issuecomment-942188943,"This allows older unsupported machines with less than 64GB of storage (Windows 11 takes around 15 stock) and a CPU before 6th gen intel/2nd gen Ryzen to be able to run Windows 11.
I'm assuming there are more changes that need to be made, but there were no clear contribution guidelines I could find so feel free to add what's missing or tell me what I have to add.","Thanks for the pull request, but I am not planning to apply it for the time being.
For one thing, I have seen no evidence that BypassCPUCheck is a valid key. For all I can see it is something that people have been suggested ""might"" exist and that others have applied in the hope that it did something, without actually validating that it actually changes the default Windows installation behaviour.
Instead, evidence suggests that it does not do anything to help with CPU compatibility, and that there is no actual enforcement of the CPU recommendations of Windows 11 in the Windows installer.
Furthermore, even if it did something, I don't think I want to enable it, because then it would only apply to very old CPUs, and I don't see it helpful to users to actually enable CPUs that are too old and that they are likely to experience issues with in the long run, be it with Windows or with applications that expect the presence of well established CPU extensions.
But again, from what I can see, my understanding is that:

BypassCPUCheck does absolutely nothing
Once you have bypassed the TPM check, the Windows 11 installer defaults to the same CPU requirements as the last feature release of Windows 10, and, since Rufus does not attempt to bypass CPU requirements for Windows 10, it makes little sense to bypass them for Windows 11, if they are internally the same.

Also, I have deliberately chosen not to bypass the disk requirements, which I understand are pretty much the same as for Windows 10, because doing so may leave users stranded when they attempt to apply a Feature update due to lack of disk space.
So my reasoning is as follows:

TPM bypass has no impact on performance for the user and no major consequence for users in the long run, so it can be applied.
Secure Boot bypass has no impact on performance for the user and no real consequence in the long run, so it can be applied, especially as most users should be able to enable Secure Boot on their platform if they wish to do so.
RAM bypass does have an impact on performance, but it is easy for a user to upgrade their RAM to meet the 8 GB+ requirement, without having to change their whole system, so I see not issue enabling it.
CPU bypass does have an impact on the ability of users to run applications, and I am seeing no evidence of the default CPU requirements of the Windows 11 installer being more stringent than the Windows 10 installer. Therefore I see little point on enabling it, especially as there is no evidence that BypassCPUCheck has anything but wishful thinking from some forum users. Plus, unlike RAM, users can usually not ""upgrade"" a CPU to fulfil a generational requirement without changing their system, so bypassing the CPU requirements only to let users run into issues that they will not be able to address without changing their system doesn't seem like a good idea.
Disk bypass is expected to have an impact on the ability for users to perform feature updates, and the disk requirements should be pretty much the same as the ones for Windows 10, which we don't bypass. Plus it is very problematic to upgrade a disk that is running out of space (yeah cloning exist, but it's a prohibitive operations for a lot of regular Windows users), therefore, rather that have people complain that ""Rufus let me install Windows on my disk, but now I find that I cannot keep Windows up to date!"", I prefer keeping the disk space restriction.

Of course, I may alter this view according to the reports I get, but, for the time being, I am not planning to add any additional bypasses to the existing ones.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1791,2021-10-12T18:16:22Z,2021-10-13T11:09:36Z,2021-10-13T13:13:58Z,CLOSED,False,1,1,1,https://github.com/Devnol,Added bypass for cpu model and storage space check,1,[],https://github.com/pbatard/rufus/pull/1791,https://github.com/Devnol,3,https://github.com/pbatard/rufus/pull/1791#issuecomment-942248103,"This allows older unsupported machines with less than 64GB of storage (Windows 11 takes around 15 stock) and a CPU before 6th gen intel/2nd gen Ryzen to be able to run Windows 11.
I'm assuming there are more changes that need to be made, but there were no clear contribution guidelines I could find so feel free to add what's missing or tell me what I have to add.","I really appreciate your spending time into a thorough reply and thank you for being clear in your intentions. I understand your reasoning and agree with your choice.
First of all, I would like to add that I am running windows 11 on a 2008 dual core Pentium E5300 with 4gb of ram (which is the minimum requirement according to microsoft, not 8 as you mentioned) and admittedly it appears to run even better than windows 10 for me. I do not have proof that the bypasscpu flag works and you put me into skepticism about it, so I will test it and if you want I can report back to you. In addition, the requirements for storage are doubled from windows 10 and gone from 32 to 64gb which is however not used anywhere near fully but I definitely would not recommend using less than that anyway unless someone is doing it for testing purposes like myself. I don't see how that would hurt being there other than someone choosing too little storage but I doubt anyone would do that for the aforementioned reason, unless it's out of sheer ignorance in which case sure I get that.
Thanks again,
Devnol",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1791,2021-10-12T18:16:22Z,2021-10-13T11:09:36Z,2021-10-13T13:13:58Z,CLOSED,False,1,1,1,https://github.com/Devnol,Added bypass for cpu model and storage space check,1,[],https://github.com/pbatard/rufus/pull/1791,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1791#issuecomment-942264024,"This allows older unsupported machines with less than 64GB of storage (Windows 11 takes around 15 stock) and a CPU before 6th gen intel/2nd gen Ryzen to be able to run Windows 11.
I'm assuming there are more changes that need to be made, but there were no clear contribution guidelines I could find so feel free to add what's missing or tell me what I have to add.","which is the minimum requirement according to microsoft, not 8 as you mentioned

Interesting. I could have sworn that Windows 11 had bumped the requirements to 8 GB at one stage, but I stand corrected.
In that case, I think I will remove the BypassRAMCheck in the next Rufus version, because quite frankly, if you're running with less than 4 GB, you are asking for trouble (though I can envision people trying to run Windows on Raspberry Pi, though you would usually just apply the image yourself then, and bypass all the pre-installation requirements anyway).

In addition, the requirements for storage are doubled from windows 10 and gone from 32 to 64gb

I thought these hadn't really changed from Windows 10, but I should indeed have spent some time checking.
I may add a cheat mode to disable the disk check then, if people complain about this...",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1791,2021-10-12T18:16:22Z,2021-10-13T11:09:36Z,2021-10-13T13:13:58Z,CLOSED,False,1,1,1,https://github.com/Devnol,Added bypass for cpu model and storage space check,1,[],https://github.com/pbatard/rufus/pull/1791,https://github.com/Devnol,5,https://github.com/pbatard/rufus/pull/1791#issuecomment-942294168,"This allows older unsupported machines with less than 64GB of storage (Windows 11 takes around 15 stock) and a CPU before 6th gen intel/2nd gen Ryzen to be able to run Windows 11.
I'm assuming there are more changes that need to be made, but there were no clear contribution guidelines I could find so feel free to add what's missing or tell me what I have to add.","Windows 11 on a raspberry pi is already possible with wor-flasher, also a friend tried windows 11 on 2 gigs of ram and a core 2 duo and yes it is indeed barely usable but nonetheless possible if some madman like me wants to do it so I guess it's up to you.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1800,2021-10-18T16:15:47Z,2021-10-23T12:11:39Z,2021-10-23T12:11:39Z,CLOSED,False,2,2,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1800,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1800,fix typo and upper case to lower case,fix typo and upper case to lower case,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1800,2021-10-18T16:15:47Z,2021-10-23T12:11:39Z,2021-10-23T12:11:39Z,CLOSED,False,2,2,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1800,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1800#issuecomment-950143328,fix typo and upper case to lower case,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1813,2021-10-28T16:03:19Z,2021-11-16T18:54:49Z,2021-11-16T18:54:49Z,CLOSED,False,9,9,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1813,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1813,fix typos,fix typos,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1813,2021-10-28T16:03:19Z,2021-11-16T18:54:49Z,2021-11-16T18:54:49Z,CLOSED,False,9,9,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1813,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1813#issuecomment-970573427,fix typos,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1815,2021-10-30T10:45:16Z,2021-10-30T11:15:19Z,2021-10-30T11:15:19Z,CLOSED,False,1,1,1,https://github.com/mjunix,Off-by-one error,1,[],https://github.com/pbatard/rufus/pull/1815,https://github.com/mjunix,1,https://github.com/pbatard/rufus/pull/1815,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1815,2021-10-30T10:45:16Z,2021-10-30T11:15:19Z,2021-10-30T11:15:19Z,CLOSED,False,1,1,1,https://github.com/mjunix,Off-by-one error,1,[],https://github.com/pbatard/rufus/pull/1815,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1815#issuecomment-955192775,,"I'm going to have to reject this Pull Request because this code does not originate from Rufus but from libcdio.
Therefore, if you want a potential bugfix to be applied there, it should be sent to the libcdio project (development mailing list here), so that it can be reviewed and integrated.
It's only if this change is applied upstream that it will naturally find its way into Rufus. But not the other way around.
The reason why I am asking you to do that is because it is much more beneficial for users to have bugs actually fixed in the original upstream project rather than in any downstream project.
Also, whereas you may think that a developer like myself should have the time to just apply a fix like this in their code, and then send a patch upstream, you would be wrong. I'm afraid that my time is limited and it's always better to have the person who found a bug and proposes a fix to champion then with the upstream project.
So please send this fix to libcdio, thank you.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1817,2021-11-01T16:04:29Z,2021-11-16T18:54:49Z,2021-11-16T21:27:17Z,CLOSED,False,23,23,15,https://github.com/DimitriPapadopoulos,Typos found by codespell,1,[],https://github.com/pbatard/rufus/pull/1817,https://github.com/DimitriPapadopoulos,1,https://github.com/pbatard/rufus/pull/1817,"I have left out 3rd party software.
Most changes are in code comments, but at least a user-visible string has been fixed.","I have left out 3rd party software.
Most changes are in code comments, but at least a user-visible string has been fixed.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1817,2021-11-01T16:04:29Z,2021-11-16T18:54:49Z,2021-11-16T21:27:17Z,CLOSED,False,23,23,15,https://github.com/DimitriPapadopoulos,Typos found by codespell,1,[],https://github.com/pbatard/rufus/pull/1817,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1817#issuecomment-956443667,"I have left out 3rd party software.
Most changes are in code comments, but at least a user-visible string has been fixed.",Thanks. I'll apply those when I get a chance.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1817,2021-11-01T16:04:29Z,2021-11-16T18:54:49Z,2021-11-16T21:27:17Z,CLOSED,False,23,23,15,https://github.com/DimitriPapadopoulos,Typos found by codespell,1,[],https://github.com/pbatard/rufus/pull/1817,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1817#issuecomment-970573297,"I have left out 3rd party software.
Most changes are in code comments, but at least a user-visible string has been fixed.",Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1818,2021-11-01T16:10:35Z,2021-11-01T17:43:05Z,2021-11-16T21:31:15Z,CLOSED,False,0,1,1,https://github.com/DimitriPapadopoulos,Fix LGTM.com warning: Unnecessary pass,1,[],https://github.com/pbatard/rufus/pull/1818,https://github.com/DimitriPapadopoulos,1,https://github.com/pbatard/rufus/pull/1818,https://lgtm.com/projects/g/pbatard/rufus/?severity=warning,https://lgtm.com/projects/g/pbatard/rufus/?severity=warning,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1818,2021-11-01T16:10:35Z,2021-11-01T17:43:05Z,2021-11-16T21:31:15Z,CLOSED,False,0,1,1,https://github.com/DimitriPapadopoulos,Fix LGTM.com warning: Unnecessary pass,1,[],https://github.com/pbatard/rufus/pull/1818,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1818#issuecomment-956443181,https://lgtm.com/projects/g/pbatard/rufus/?severity=warning,"Not gonna bother with this, as this python script is no longer useful no that we have switched to using .po files and I am planning to remove it eventually.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/AustinWise,1,https://github.com/pbatard/rufus/pull/1838,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article","Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article",True,"{'THUMBS_UP': ['https://github.com/assarbad', 'https://github.com/nimaarek', 'https://github.com/e24zv55drn5og32gl3zdi4']}"
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/AustinWise,2,https://github.com/pbatard/rufus/pull/1838#issuecomment-991813863,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article",This implementation was inspire by dotnet/coreclr@c64a137,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/pbatard,3,https://github.com/pbatard/rufus/pull/1838#issuecomment-991947563,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article","Thanks for the PR.
As you've seen, I've been trying to mitigate these sideloading vulnerabilities, but Microsoft makes it quite difficult to plug them all, especially when linking libraries during compilation (a process which you'd think Microsoft would have hardened by default against side-loading but which they don't).
And as you can also see, trying to service both MSVC and MinGW compilation is tricky, because things that apply to MSVC, such as <DelayLoadDLLs> don't port too well for MinGW (and you should bear in mind that the main executable I release is the MinGW built one rather than the MSVC built one). So far, I'm not seeing a working equivalent of <DelayLoadDLLs> for MinGW, so I fear that the solution will be not not link with version.lib at all, but hook into the DLL at runtime... But if you have other suggestions, I'll take them.",True,{'THUMBS_UP': ['https://github.com/e24zv55drn5og32gl3zdi4']}
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/AustinWise,4,https://github.com/pbatard/rufus/pull/1838#issuecomment-993176853,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article","Oh, that's too bad. A 10 year old stack overflow post says there is no GCC equivalent, but I'll spend some time next weekend digging into GCC and ld to see if it has grown support in the intervening years.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1838#issuecomment-993608780,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article","Yeah, I saw the same stackoverflow entry, which is why I fear the only solution that'll apply to both compilers is not to link with version.lib, but hook into the relevant version.dll calls at runtime, after we have set the DLL lookup directories and removed current dir.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/AustinWise,6,https://github.com/pbatard/rufus/pull/1838#issuecomment-997541145,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article","I did figure out a way in MinGW to create a delay-load import library for an existing DLL. See this repo for the complete example:
https://github.com/AustinWise/delay-load-mingw
I'm thinking that the effort involved in maintaining the MSVC compiler flags and generating a custom import library for GCC is more effort than it is worth. I think it is simpler to just LoadLibrary version.dll to call the three functions that Rufus uses from it.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/pbatard,7,https://github.com/pbatard/rufus/pull/1838#issuecomment-1001053048,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article","I'm thinking that the effort involved in maintaining the MSVC compiler flags and generating a custom import library for GCC is more effort than it is worth. I think it is simpler to just LoadLibrary version.dll to call the three functions that Rufus uses from it.

Yes, I agree. I'm planning to take care of that when I have some time. But I'm also still planning to apply your delayed loading proposal for MSVC, as it's definitely something worth to have there.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1838,2021-12-12T01:01:15Z,2022-01-05T18:34:24Z,2022-01-05T18:34:24Z,CLOSED,False,35,13,2,https://github.com/AustinWise,Fix vunerablity to DLL Search Order Hijacking by delay loading version.dll,2,[],https://github.com/pbatard/rufus/pull/1838,https://github.com/pbatard,8,https://github.com/pbatard/rufus/pull/1838#issuecomment-1005978754,"Hypothetically if the user's current directory contains a malicious DLL
named version.dll, this DLL will be loaded instead of the one in System32.
I checked the list of DLLs referenced by rufus.exe against the KnownDLLs
list visible in Sysinternal's winobj.exe. On both Windows 7 and Windows 11,
version.dll was the only DLL not on the KnownDLLs list and thus vunerable
to this attack.
To confirm that this work, I used dumpbin.exe /IMPORTS to make sure
version.dll is delay loaded. I then put a breakpoint in the delay load hook
and confirmed that the hook is used. This can be triggered by loading a
Windows installation ISO file.
I also removed kernel32_path, since kernel32.dll is on the KnownDLLs
list and is not vulnerable to this attack.
For information about KnownDLLs, see this article.
For information about delay-load DLL hooks, see this article","Sorry for the delay. I have now altered Rufus so that we manually load the calls we need from version.dll, which should take care of the issue for both MinGW and MSVC. And I have also applied your patch and made sure we set all the libraries we reference as delay loaded in the MSVC project settings. This is most likely and overkill, but since your patch allows us to delay-load, and it shouldn't hurt, we might as well use that feature where we can.
Thanks again for your contribution!",True,"{'THUMBS_UP': ['https://github.com/Hrxn', 'https://github.com/assarbad', 'https://github.com/e24zv55drn5og32gl3zdi4']}"
pbatard/rufus,https://github.com/pbatard/rufus,1841,2021-12-17T15:13:08Z,2022-01-05T18:55:14Z,2022-01-05T18:55:14Z,CLOSED,False,4,4,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1841,https://github.com/marcellogianola,1,https://github.com/pbatard/rufus/pull/1841,typos fixed,typos fixed,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1841,2021-12-17T15:13:08Z,2022-01-05T18:55:14Z,2022-01-05T18:55:14Z,CLOSED,False,4,4,1,https://github.com/marcellogianola,Update it-IT.po,1,[],https://github.com/pbatard/rufus/pull/1841,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1841#issuecomment-1005992433,typos fixed,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1845,2021-12-25T17:39:38Z,2021-12-25T17:55:36Z,2021-12-26T00:44:10Z,CLOSED,False,6,3,1,https://github.com/concatime,[efi] use names as defined in spec,1,[],https://github.com/pbatard/rufus/pull/1845,https://github.com/concatime,1,https://github.com/pbatard/rufus/pull/1845,"Hi.
I renamed the entries as defined in the latest spec (3.5.1.1 Removable Media Boot Behavior) to stay consistent. This change should alter nothing because FAT is case insensitive.
This change has been been tested yet. I would like your opinion first.
Thank you.","Hi.
I renamed the entries as defined in the latest spec (3.5.1.1 Removable Media Boot Behavior) to stay consistent. This change should alter nothing because FAT is case insensitive.
This change has been been tested yet. I would like your opinion first.
Thank you.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1845,2021-12-25T17:39:38Z,2021-12-25T17:55:36Z,2021-12-26T00:44:10Z,CLOSED,False,6,3,1,https://github.com/concatime,[efi] use names as defined in spec,1,[],https://github.com/pbatard/rufus/pull/1845,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1845#issuecomment-1001052671,"Hi.
I renamed the entries as defined in the latest spec (3.5.1.1 Removable Media Boot Behavior) to stay consistent. This change should alter nothing because FAT is case insensitive.
This change has been been tested yet. I would like your opinion first.
Thank you.","I appreciate that but we take care of care sensitivity within the code (you should see that we use stricmp() and toupper() where needed) and, considering that the code that uses these definitions is not targeted at FAT, but at other file systems where case sensitivity applies (e.g. EFI bootloaders lookup on ISO9660 with Joliet, UDF, etc.), there isn't much point in following the specs, since we very much want to be able to handle the many existing cases where the casing of the bootloaders isn't going to match the specs.
So it's actually more advantageous to deliberately deviate from the specs in terms of casing, when we declare the bootloader names, so that, if there's any issue with the code we explicitly designed for handling of bootloader names regardless of casing, we'll pick on that before someone complains that their potentially non specs-compliant bootable image isn't detected as EFI bootable...
As such, I don't think applying this change is worth it. But I hope that won't dissuade you from proposing other Pull Requests, if you think there are other improvements that could be made.",True,{'THUMBS_UP': ['https://github.com/concatime']}
pbatard/rufus,https://github.com/pbatard/rufus,1849,2022-01-10T12:13:24Z,2022-01-20T15:10:27Z,2022-01-20T15:10:27Z,CLOSED,False,44,24,1,https://github.com/SiderealArt,Update zh-TW.po,2,[],https://github.com/pbatard/rufus/pull/1849,https://github.com/SiderealArt,1,https://github.com/pbatard/rufus/pull/1849,,,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1849,2022-01-10T12:13:24Z,2022-01-20T15:10:27Z,2022-01-20T15:10:27Z,CLOSED,False,44,24,1,https://github.com/SiderealArt,Update zh-TW.po,2,[],https://github.com/pbatard/rufus/pull/1849,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1849#issuecomment-1017606065,,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1863,2022-01-30T08:17:23Z,2022-02-11T18:48:52Z,2022-02-11T18:48:52Z,CLOSED,False,3,3,1,https://github.com/stabacov,"[loc] update MSG_235, MSG_191 & MSG_192",1,[],https://github.com/pbatard/rufus/pull/1863,https://github.com/stabacov,1,https://github.com/pbatard/rufus/pull/1863,"Japanese translation update.
It was looks like ""Bad blocks: The write passed. 1/1 - ..."".
My suggestion is like ""Bad blocks: Writing 1/1 pass - ..."".","Japanese translation update.
It was looks like ""Bad blocks: The write passed. 1/1 - ..."".
My suggestion is like ""Bad blocks: Writing 1/1 pass - ..."".",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1863,2022-01-30T08:17:23Z,2022-02-11T18:48:52Z,2022-02-11T18:48:52Z,CLOSED,False,3,3,1,https://github.com/stabacov,"[loc] update MSG_235, MSG_191 & MSG_192",1,[],https://github.com/pbatard/rufus/pull/1863,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1863#issuecomment-1036513268,"Japanese translation update.
It was looks like ""Bad blocks: The write passed. 1/1 - ..."".
My suggestion is like ""Bad blocks: Writing 1/1 pass - ..."".",Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1866,2022-02-09T04:36:00Z,2022-02-11T18:48:52Z,2022-02-11T18:48:52Z,CLOSED,False,1,0,1,https://github.com/m10k,Add MIRACLE LINUX 8 to the list of RHEL8 derivatives,1,[],https://github.com/pbatard/rufus/pull/1866,https://github.com/m10k,1,https://github.com/pbatard/rufus/pull/1866,"MIRACLE LINUX is a Red Hat derivative, so it needs the same special
treatment as Red Hat, CentOS, etc to work around issues in anaconda.
This commit adds MIRACLE LINUX to the list of Red Hat derivatives.
I have verified that rufus compiles correctly and that the generated USB
drive can be installed from. The compilation log and rufus's log are attached.
buildlog.txt
rufus.log
Below is the primary volume descriptor from the ML8.4 ISO image.
===== BEGIN ML8.4 primary volume descriptor =====
CD-ROM is in ISO 9660 format
System id: LINUX
Volume id: MIRACLE-LINUX-8-4-x86_64
Volume set id:
Publisher id:
Data preparer id:
Application id: GENISOIMAGE ISO 9660/HFS FILESYSTEM CREATOR (C) 1993 E.YOUNGDALE (C) 1997-2006 J.PEARSON/J.SCHILLING (C) 2006-2007 CDRKIT TEAM
Copyright File id:
Abstract File id:
Bibliographic File id:
Volume set size is: 1
Volume set sequence number is: 1
Logical block size is: 2048
Volume size is: 4900572
El Torito VD version 1 found, boot catalog is in sector 1155
Joliet with UCS level 3 found
Rock Ridge signatures version 1 found
Eltorito validation header:
Hid 1
Arch 0 (x86)
ID ''
Key 55 AA
Eltorito defaultboot header:
Bootid 88 (bootable)
Boot media 0 (No Emulation Boot)
Load segment 0
Sys type 0
Nsect 4
Bootoff 54D67 347495
===== END ML8.4 primary volume descriptor =====","MIRACLE LINUX is a Red Hat derivative, so it needs the same special
treatment as Red Hat, CentOS, etc to work around issues in anaconda.
This commit adds MIRACLE LINUX to the list of Red Hat derivatives.
I have verified that rufus compiles correctly and that the generated USB
drive can be installed from. The compilation log and rufus's log are attached.
buildlog.txt
rufus.log
Below is the primary volume descriptor from the ML8.4 ISO image.
===== BEGIN ML8.4 primary volume descriptor =====
CD-ROM is in ISO 9660 format
System id: LINUX
Volume id: MIRACLE-LINUX-8-4-x86_64
Volume set id:
Publisher id:
Data preparer id:
Application id: GENISOIMAGE ISO 9660/HFS FILESYSTEM CREATOR (C) 1993 E.YOUNGDALE (C) 1997-2006 J.PEARSON/J.SCHILLING (C) 2006-2007 CDRKIT TEAM
Copyright File id:
Abstract File id:
Bibliographic File id:
Volume set size is: 1
Volume set sequence number is: 1
Logical block size is: 2048
Volume size is: 4900572
El Torito VD version 1 found, boot catalog is in sector 1155
Joliet with UCS level 3 found
Rock Ridge signatures version 1 found
Eltorito validation header:
Hid 1
Arch 0 (x86)
ID ''
Key 55 AA
Eltorito defaultboot header:
Bootid 88 (bootable)
Boot media 0 (No Emulation Boot)
Load segment 0
Sys type 0
Nsect 4
Bootoff 54D67 347495
===== END ML8.4 primary volume descriptor =====",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1866,2022-02-09T04:36:00Z,2022-02-11T18:48:52Z,2022-02-11T18:48:52Z,CLOSED,False,1,0,1,https://github.com/m10k,Add MIRACLE LINUX 8 to the list of RHEL8 derivatives,1,[],https://github.com/pbatard/rufus/pull/1866,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1866#issuecomment-1036513366,"MIRACLE LINUX is a Red Hat derivative, so it needs the same special
treatment as Red Hat, CentOS, etc to work around issues in anaconda.
This commit adds MIRACLE LINUX to the list of Red Hat derivatives.
I have verified that rufus compiles correctly and that the generated USB
drive can be installed from. The compilation log and rufus's log are attached.
buildlog.txt
rufus.log
Below is the primary volume descriptor from the ML8.4 ISO image.
===== BEGIN ML8.4 primary volume descriptor =====
CD-ROM is in ISO 9660 format
System id: LINUX
Volume id: MIRACLE-LINUX-8-4-x86_64
Volume set id:
Publisher id:
Data preparer id:
Application id: GENISOIMAGE ISO 9660/HFS FILESYSTEM CREATOR (C) 1993 E.YOUNGDALE (C) 1997-2006 J.PEARSON/J.SCHILLING (C) 2006-2007 CDRKIT TEAM
Copyright File id:
Abstract File id:
Bibliographic File id:
Volume set size is: 1
Volume set sequence number is: 1
Logical block size is: 2048
Volume size is: 4900572
El Torito VD version 1 found, boot catalog is in sector 1155
Joliet with UCS level 3 found
Rock Ridge signatures version 1 found
Eltorito validation header:
Hid 1
Arch 0 (x86)
ID ''
Key 55 AA
Eltorito defaultboot header:
Bootid 88 (bootable)
Boot media 0 (No Emulation Boot)
Load segment 0
Sys type 0
Nsect 4
Bootoff 54D67 347495
===== END ML8.4 primary volume descriptor =====",Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1886,2022-03-12T16:11:54Z,2022-04-01T12:04:58Z,2022-04-01T12:04:58Z,CLOSED,False,12,0,1,https://github.com/dinism,Update pt-PT.po,2,[],https://github.com/pbatard/rufus/pull/1886,https://github.com/dinism,1,https://github.com/pbatard/rufus/pull/1886,"Added MSG_322, 323, 324","Added MSG_322, 323, 324",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1886,2022-03-12T16:11:54Z,2022-04-01T12:04:58Z,2022-04-01T12:04:58Z,CLOSED,False,12,0,1,https://github.com/dinism,Update pt-PT.po,2,[],https://github.com/pbatard/rufus/pull/1886,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1886#issuecomment-1085815443,"Added MSG_322, 323, 324",Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1888,2022-03-18T13:24:30Z,2022-05-10T13:27:22Z,2022-05-10T13:27:22Z,CLOSED,False,136,10,14,https://github.com/GermanAizek,Fixed minor bugs and added CRT support for multithreaded app in MSVC,2,[],https://github.com/pbatard/rufus/pull/1888,https://github.com/GermanAizek,1,https://github.com/pbatard/rufus/pull/1888,@pbatard check this commit and write feedback please.,@pbatard check this commit and write feedback please.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1888,2022-03-18T13:24:30Z,2022-05-10T13:27:22Z,2022-05-10T13:27:22Z,CLOSED,False,136,10,14,https://github.com/GermanAizek,Fixed minor bugs and added CRT support for multithreaded app in MSVC,2,[],https://github.com/pbatard/rufus/pull/1888,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1888#issuecomment-1072999245,@pbatard check this commit and write feedback please.,"Thanks. Please see my remarks inline. I don't have an objection for the thread stuff (but can you please describe the issue you ran into with threading in more details?), but some of the libcdio stuff needs to be patched in the upstream project, so you may want to break this into 2 PRs, so that we can apply the threading stuff sooner.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1888,2022-03-18T13:24:30Z,2022-05-10T13:27:22Z,2022-05-10T13:27:22Z,CLOSED,False,136,10,14,https://github.com/GermanAizek,Fixed minor bugs and added CRT support for multithreaded app in MSVC,2,[],https://github.com/pbatard/rufus/pull/1888,https://github.com/GermanAizek,3,https://github.com/pbatard/rufus/pull/1888#issuecomment-1076195509,@pbatard check this commit and write feedback please.,"@pbatard,
Hi, I will then leave in this PR only the commit with the replacement strlen and I will make a new PR to replace thread funcs for MSVC compiler.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1888,2022-03-18T13:24:30Z,2022-05-10T13:27:22Z,2022-05-10T13:27:22Z,CLOSED,False,136,10,14,https://github.com/GermanAizek,Fixed minor bugs and added CRT support for multithreaded app in MSVC,2,[],https://github.com/pbatard/rufus/pull/1888,https://github.com/pbatard,4,https://github.com/pbatard/rufus/pull/1888#issuecomment-1113071187,@pbatard check this commit and write feedback please.,Do you still plan to update this PR?,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1888,2022-03-18T13:24:30Z,2022-05-10T13:27:22Z,2022-05-10T13:27:22Z,CLOSED,False,136,10,14,https://github.com/GermanAizek,Fixed minor bugs and added CRT support for multithreaded app in MSVC,2,[],https://github.com/pbatard/rufus/pull/1888,https://github.com/pbatard,5,https://github.com/pbatard/rufus/pull/1888#issuecomment-1122393557,@pbatard check this commit and write feedback please.,"I'm going to close this PR on account that using _beginthreadex only works when compiling a multi-threaded DLL app (/MD), whereas we are purposefully compiling as multi-threaded (/MT) in order not have a CRT dependency.
Unless OP can explain why they believe we should use /MD rather than /MT, I'm not seeing anything in this PR that I want to integrate into the current Rufus codebase, therefore I will simply close it.",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1908,2022-04-16T09:30:06Z,2022-04-25T23:01:00Z,2022-04-25T23:01:00Z,CLOSED,False,5,5,1,https://github.com/uniss2209,Update uk-UA.po,1,[],https://github.com/pbatard/rufus/pull/1908,https://github.com/uniss2209,1,https://github.com/pbatard/rufus/pull/1908,Fixing multibyte indexes,Fixing multibyte indexes,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1908,2022-04-16T09:30:06Z,2022-04-25T23:01:00Z,2022-04-25T23:01:00Z,CLOSED,False,5,5,1,https://github.com/uniss2209,Update uk-UA.po,1,[],https://github.com/pbatard/rufus/pull/1908,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1908#issuecomment-1109120040,Fixing multibyte indexes,Applied. Thanks!,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1917,2022-04-30T07:25:16Z,2022-05-01T07:30:10Z,2022-05-01T07:30:10Z,CLOSED,False,1,1,1,None,"Change pl translation of ""Disk or ISO image""",1,[],https://github.com/pbatard/rufus/pull/1917,None,1,https://github.com/pbatard/rufus/pull/1917,"From:  ""Disk or ISO image""
To: ""Obraz dysku lub ISO płyty""","From:  ""Disk or ISO image""
To: ""Obraz dysku lub ISO płyty""",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1929,2022-05-16T17:53:52Z,2022-05-16T19:28:30Z,2022-05-17T03:11:54Z,CLOSED,False,2,0,1,https://github.com/itsmeshibintmz,Visitors Badge,2,[],https://github.com/pbatard/rufus/pull/1929,https://github.com/itsmeshibintmz,1,https://github.com/pbatard/rufus/pull/1929,Added visitors badge to repository readme.,Added visitors badge to repository readme.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1929,2022-05-16T17:53:52Z,2022-05-16T19:28:30Z,2022-05-17T03:11:54Z,CLOSED,False,2,0,1,https://github.com/itsmeshibintmz,Visitors Badge,2,[],https://github.com/pbatard/rufus/pull/1929,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1929#issuecomment-1128052929,Added visitors badge to repository readme.,"I'm sorry but whereas I trust https://shields.io because its inception & mandate are pretty clear (and they were clearly designed in the spirit of Open Source and not for profit), I have a hard time doing the same for a subdomain of https://vercel.app, because I'm going to assume that, whereas https://shields.io makes clear that they aren't in it for tracking, your visitor counter may log the IP of every visitor that accesses the project, and do whatever it wants with that data.
If I were to add a counter for stats that (unlike the downloads) cannot be publicly accessed from GitHub, then I want to be the one who controls how the data is collected and what is done with it, so that I can reassure visitors (who choose to trust the developer of the software) that they are not being tracked beyond the obvious and only goal of incrementing a counter.
As such, I'm afraid I'm going to have to reject this Pull Request because I simply can't trust a random user who wants to incorporate remote content from a server that seems a bit too obscure (to me) to be able to vet as trustworthy. There are just too many ways in which blindly trusting someone with remote content may result in nefarious behaviour for visitors of this project...
→ Rejected",True,{'THUMBS_UP': ['https://github.com/itsmeshibintmz']}
pbatard/rufus,https://github.com/pbatard/rufus,1929,2022-05-16T17:53:52Z,2022-05-16T19:28:30Z,2022-05-17T03:11:54Z,CLOSED,False,2,0,1,https://github.com/itsmeshibintmz,Visitors Badge,2,[],https://github.com/pbatard/rufus/pull/1929,https://github.com/itsmeshibintmz,3,https://github.com/pbatard/rufus/pull/1929#issuecomment-1128359770,Added visitors badge to repository readme.,Okay understood.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1930,2022-05-17T03:29:59Z,2022-05-17T05:49:44Z,2022-05-17T05:49:45Z,CLOSED,False,2,0,1,https://github.com/itsmeshibintmz,Updated visitors count badge,3,[],https://github.com/pbatard/rufus/pull/1930,https://github.com/itsmeshibintmz,1,https://github.com/pbatard/rufus/pull/1930,used shields io visitor counter.,used shields io visitor counter.,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1930,2022-05-17T03:29:59Z,2022-05-17T05:49:44Z,2022-05-17T05:49:45Z,CLOSED,False,2,0,1,https://github.com/itsmeshibintmz,Updated visitors count badge,3,[],https://github.com/pbatard/rufus/pull/1930,https://github.com/pbatard,2,https://github.com/pbatard/rufus/pull/1930#issuecomment-1128439845,used shields io visitor counter.,"Sorry but https://shields-io-visitor-counter.herokuapp.com is not a shields.io URL. It's a herokuapp.com URL, so the same issue of trust as #1929 applies.
But, to cut this whole thing short, even if it was provided by shields.io, I don't feel like the README for the project needs a visitor badge, so I'm not going to accept a Pull Request to add a visitor badge anyway.",True,{'THUMBS_UP': ['https://github.com/itsmeshibintmz']}
pbatard/rufus,https://github.com/pbatard/rufus,1940,2022-05-28T13:20:21Z,,2022-05-29T17:07:47Z,OPEN,False,85,3,1,https://github.com/maisondasilva,Update pt-BR.po,2,[],https://github.com/pbatard/rufus/pull/1940,https://github.com/maisondasilva,1,https://github.com/pbatard/rufus/pull/1940,Added from line 307 to 324,Added from line 307 to 324,True,{'HEART': ['https://github.com/marcosfrm']}
pbatard/rufus,https://github.com/pbatard/rufus,1940,2022-05-28T13:20:21Z,,2022-05-29T17:07:47Z,OPEN,False,85,3,1,https://github.com/maisondasilva,Update pt-BR.po,2,[],https://github.com/pbatard/rufus/pull/1940,https://github.com/maisondasilva,2,https://github.com/pbatard/rufus/pull/1940#issuecomment-1140264541,Added from line 307 to 324,"Could you tell me where is the original rufus translation file? @pbatard
Update Finding Here https://github.com/pbatard/rufus/wiki/Localization#Editing_an_existing_translation",True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1940,2022-05-28T13:20:21Z,,2022-05-29T17:07:47Z,OPEN,False,85,3,1,https://github.com/maisondasilva,Update pt-BR.po,2,[],https://github.com/pbatard/rufus/pull/1940,https://github.com/marcosfrm,3,https://github.com/pbatard/rufus/pull/1940#issuecomment-1140423556,Added from line 307 to 324,You can force-push a new version...,True,{}
pbatard/rufus,https://github.com/pbatard/rufus,1940,2022-05-28T13:20:21Z,,2022-05-29T17:07:47Z,OPEN,False,85,3,1,https://github.com/maisondasilva,Update pt-BR.po,2,[],https://github.com/pbatard/rufus/pull/1940,https://github.com/maisondasilva,4,https://github.com/pbatard/rufus/pull/1940#issuecomment-1140449108,Added from line 307 to 324,Tenho feito agora.,True,{}
