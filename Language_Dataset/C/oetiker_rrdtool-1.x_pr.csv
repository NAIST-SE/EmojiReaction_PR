oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,699,2016-01-20T01:29:10Z,2016-02-23T02:12:49Z,2016-02-23T07:01:38Z,CLOSED,False,460,17,6,https://github.com/az143,new feature for getting a graph's data (instead of the image),5,[],https://github.com/oetiker/rrdtool-1.x/pull/699,https://github.com/az143,1,https://github.com/oetiker/rrdtool-1.x/pull/699,"dear tobi, thanks for rrdtool! here at opmantek.com we really like it and it is serving our (open-source and commercial) needs very well.
however, for one of our commercial products we needed to combine the greatness of rrdtool's data handling with a somewhat more interactive graph display mechanism (ie. highcharts).
so we've added a function to the shared lib perl interface, RRDs::fetch_graph_pdata, which
does pretty much everything that RRDs::graph does - except, at the end, you don't receive an image but the data underlying the image: the pixel y coordinates, colors, the legends etc.
why did we not just use fetch or xport? the answer is that we need things like CVARs, and we do like the axis autoscaling and all the other graph goodness in rrdtool - we just don't want pngs or gifs.
fetch_graph_pdata provides that whereas with raw fetch or xport we'd have had to duplicate all the code for scaling, legend, GPRINT etc.
as you and your contributors have been adding improved functionality for external accesses and exportability of rrdtool data in recent releases,  we hope that our fetch_graph_pdata extension fits your plans and makes it into the  official rrdtool code base.
regards
az","dear tobi, thanks for rrdtool! here at opmantek.com we really like it and it is serving our (open-source and commercial) needs very well.
however, for one of our commercial products we needed to combine the greatness of rrdtool's data handling with a somewhat more interactive graph display mechanism (ie. highcharts).
so we've added a function to the shared lib perl interface, RRDs::fetch_graph_pdata, which
does pretty much everything that RRDs::graph does - except, at the end, you don't receive an image but the data underlying the image: the pixel y coordinates, colors, the legends etc.
why did we not just use fetch or xport? the answer is that we need things like CVARs, and we do like the axis autoscaling and all the other graph goodness in rrdtool - we just don't want pngs or gifs.
fetch_graph_pdata provides that whereas with raw fetch or xport we'd have had to duplicate all the code for scaling, legend, GPRINT etc.
as you and your contributors have been adding improved functionality for external accesses and exportability of rrdtool data in recent releases,  we hope that our fetch_graph_pdata extension fits your plans and makes it into the  official rrdtool code base.
regards
az",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,699,2016-01-20T01:29:10Z,2016-02-23T02:12:49Z,2016-02-23T07:01:38Z,CLOSED,False,460,17,6,https://github.com/az143,new feature for getting a graph's data (instead of the image),5,[],https://github.com/oetiker/rrdtool-1.x/pull/699,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/699#issuecomment-173128633,"dear tobi, thanks for rrdtool! here at opmantek.com we really like it and it is serving our (open-source and commercial) needs very well.
however, for one of our commercial products we needed to combine the greatness of rrdtool's data handling with a somewhat more interactive graph display mechanism (ie. highcharts).
so we've added a function to the shared lib perl interface, RRDs::fetch_graph_pdata, which
does pretty much everything that RRDs::graph does - except, at the end, you don't receive an image but the data underlying the image: the pixel y coordinates, colors, the legends etc.
why did we not just use fetch or xport? the answer is that we need things like CVARs, and we do like the axis autoscaling and all the other graph goodness in rrdtool - we just don't want pngs or gifs.
fetch_graph_pdata provides that whereas with raw fetch or xport we'd have had to duplicate all the code for scaling, legend, GPRINT etc.
as you and your contributors have been adding improved functionality for external accesses and exportability of rrdtool data in recent releases,  we hope that our fetch_graph_pdata extension fits your plans and makes it into the  official rrdtool code base.
regards
az","neat :) that problem has been on my mind for some time ...
I don't particularly like the new interface though ... how about just adding a new graphics format to rrdtool graph the format which would manifest in additional output being generated through the graphv interface ... having another command in the api does not sit all that well with me ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,699,2016-01-20T01:29:10Z,2016-02-23T02:12:49Z,2016-02-23T07:01:38Z,CLOSED,False,460,17,6,https://github.com/az143,new feature for getting a graph's data (instead of the image),5,[],https://github.com/oetiker/rrdtool-1.x/pull/699,https://github.com/az143,3,https://github.com/oetiker/rrdtool-1.x/pull/699#issuecomment-173899926,"dear tobi, thanks for rrdtool! here at opmantek.com we really like it and it is serving our (open-source and commercial) needs very well.
however, for one of our commercial products we needed to combine the greatness of rrdtool's data handling with a somewhat more interactive graph display mechanism (ie. highcharts).
so we've added a function to the shared lib perl interface, RRDs::fetch_graph_pdata, which
does pretty much everything that RRDs::graph does - except, at the end, you don't receive an image but the data underlying the image: the pixel y coordinates, colors, the legends etc.
why did we not just use fetch or xport? the answer is that we need things like CVARs, and we do like the axis autoscaling and all the other graph goodness in rrdtool - we just don't want pngs or gifs.
fetch_graph_pdata provides that whereas with raw fetch or xport we'd have had to duplicate all the code for scaling, legend, GPRINT etc.
as you and your contributors have been adding improved functionality for external accesses and exportability of rrdtool data in recent releases,  we hope that our fetch_graph_pdata extension fits your plans and makes it into the  official rrdtool code base.
regards
az","agreed; doing this via a new 'raw' graphics format sounds like a better idea. we're not 'married' to this interface at all - this was a relatively quick addon by one of my colleagues when we needed /something/ and /soon/...
i'm not sure how soon we'll find any time to (re)do this more along your preferences; maybe take this to email to discuss more precisely what you'd want the extension to be like?
cheers,
az",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,699,2016-01-20T01:29:10Z,2016-02-23T02:12:49Z,2016-02-23T07:01:38Z,CLOSED,False,460,17,6,https://github.com/az143,new feature for getting a graph's data (instead of the image),5,[],https://github.com/oetiker/rrdtool-1.x/pull/699,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/699#issuecomment-173917927,"dear tobi, thanks for rrdtool! here at opmantek.com we really like it and it is serving our (open-source and commercial) needs very well.
however, for one of our commercial products we needed to combine the greatness of rrdtool's data handling with a somewhat more interactive graph display mechanism (ie. highcharts).
so we've added a function to the shared lib perl interface, RRDs::fetch_graph_pdata, which
does pretty much everything that RRDs::graph does - except, at the end, you don't receive an image but the data underlying the image: the pixel y coordinates, colors, the legends etc.
why did we not just use fetch or xport? the answer is that we need things like CVARs, and we do like the axis autoscaling and all the other graph goodness in rrdtool - we just don't want pngs or gifs.
fetch_graph_pdata provides that whereas with raw fetch or xport we'd have had to duplicate all the code for scaling, legend, GPRINT etc.
as you and your contributors have been adding improved functionality for external accesses and exportability of rrdtool data in recent releases,  we hope that our fetch_graph_pdata extension fits your plans and makes it into the  official rrdtool code base.
regards
az","you are already using the info protocol to transfer the data if I got this correctly ... so the changes would be pretty straight forward I guess ... I have not studied your code in any detail yet ...
I am not looking for any standartised graph description format, just less api pollution ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,699,2016-01-20T01:29:10Z,2016-02-23T02:12:49Z,2016-02-23T07:01:38Z,CLOSED,False,460,17,6,https://github.com/az143,new feature for getting a graph's data (instead of the image),5,[],https://github.com/oetiker/rrdtool-1.x/pull/699,https://github.com/az143,5,https://github.com/oetiker/rrdtool-1.x/pull/699#issuecomment-187484063,"dear tobi, thanks for rrdtool! here at opmantek.com we really like it and it is serving our (open-source and commercial) needs very well.
however, for one of our commercial products we needed to combine the greatness of rrdtool's data handling with a somewhat more interactive graph display mechanism (ie. highcharts).
so we've added a function to the shared lib perl interface, RRDs::fetch_graph_pdata, which
does pretty much everything that RRDs::graph does - except, at the end, you don't receive an image but the data underlying the image: the pixel y coordinates, colors, the legends etc.
why did we not just use fetch or xport? the answer is that we need things like CVARs, and we do like the axis autoscaling and all the other graph goodness in rrdtool - we just don't want pngs or gifs.
fetch_graph_pdata provides that whereas with raw fetch or xport we'd have had to duplicate all the code for scaling, legend, GPRINT etc.
as you and your contributors have been adding improved functionality for external accesses and exportability of rrdtool data in recent releases,  we hope that our fetch_graph_pdata extension fits your plans and makes it into the  official rrdtool code base.
regards
az","tobi, i'm closing this pull request for now - we've realized (finally and somewhat late) that in 1.5.x  graphv with ""-a JSON"" does about 90% of what our custom code does (as that was originally developed for 1.4.7), and i'll have a look at adding the remaining 10% as optional information to the JSON output.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,699,2016-01-20T01:29:10Z,2016-02-23T02:12:49Z,2016-02-23T07:01:38Z,CLOSED,False,460,17,6,https://github.com/az143,new feature for getting a graph's data (instead of the image),5,[],https://github.com/oetiker/rrdtool-1.x/pull/699,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/699#issuecomment-187576089,"dear tobi, thanks for rrdtool! here at opmantek.com we really like it and it is serving our (open-source and commercial) needs very well.
however, for one of our commercial products we needed to combine the greatness of rrdtool's data handling with a somewhat more interactive graph display mechanism (ie. highcharts).
so we've added a function to the shared lib perl interface, RRDs::fetch_graph_pdata, which
does pretty much everything that RRDs::graph does - except, at the end, you don't receive an image but the data underlying the image: the pixel y coordinates, colors, the legends etc.
why did we not just use fetch or xport? the answer is that we need things like CVARs, and we do like the axis autoscaling and all the other graph goodness in rrdtool - we just don't want pngs or gifs.
fetch_graph_pdata provides that whereas with raw fetch or xport we'd have had to duplicate all the code for scaling, legend, GPRINT etc.
as you and your contributors have been adding improved functionality for external accesses and exportability of rrdtool data in recent releases,  we hope that our fetch_graph_pdata extension fits your plans and makes it into the  official rrdtool code base.
regards
az",ok :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,703,2016-03-24T05:21:09Z,2016-03-24T07:07:55Z,2016-03-24T07:07:55Z,MERGED,True,6,6,1,https://github.com/nirgal,Fixed tests when VERBOSE is on,1,[],https://github.com/oetiker/rrdtool-1.x/pull/703,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/703,"Define RRDTOOL_V from RRDTOOL, but only after RRDTOOL is defined.
Output the header showing witch command is run on stderr, not stdout.","Define RRDTOOL_V from RRDTOOL, but only after RRDTOOL is defined.
Output the header showing witch command is run on stderr, not stdout.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,703,2016-03-24T05:21:09Z,2016-03-24T07:07:55Z,2016-03-24T07:07:55Z,MERGED,True,6,6,1,https://github.com/nirgal,Fixed tests when VERBOSE is on,1,[],https://github.com/oetiker/rrdtool-1.x/pull/703,https://github.com/nirgal,2,https://github.com/oetiker/rrdtool-1.x/pull/703#issuecomment-200672384,"Define RRDTOOL_V from RRDTOOL, but only after RRDTOOL is defined.
Output the header showing witch command is run on stderr, not stdout.","This is a fix for #702
I'm not sure it's a good idea to have the headers to stderr, but I don""t have a better one right now.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,703,2016-03-24T05:21:09Z,2016-03-24T07:07:55Z,2016-03-24T07:07:55Z,MERGED,True,6,6,1,https://github.com/nirgal,Fixed tests when VERBOSE is on,1,[],https://github.com/oetiker/rrdtool-1.x/pull/703,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/703#issuecomment-200700993,"Define RRDTOOL_V from RRDTOOL, but only after RRDTOOL is defined.
Output the header showing witch command is run on stderr, not stdout.",better than break tests. thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,704,2016-03-26T16:05:21Z,2016-04-19T07:08:39Z,2016-04-19T07:08:39Z,CLOSED,False,1,1,1,https://github.com/nirgal,Update tcl gitignore for version 1.5,1,[],https://github.com/oetiker/rrdtool-1.x/pull/704,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/704,"I get this warning when I do a git status:
Untracked files:
  (use ""git add <file>..."" to include in what will be committed)

    bindings/tcl/tclrrd1.5.999.so","I get this warning when I do a git status:
Untracked files:
  (use ""git add <file>..."" to include in what will be committed)

    bindings/tcl/tclrrd1.5.999.so",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,704,2016-03-26T16:05:21Z,2016-04-19T07:08:39Z,2016-04-19T07:08:39Z,CLOSED,False,1,1,1,https://github.com/nirgal,Update tcl gitignore for version 1.5,1,[],https://github.com/oetiker/rrdtool-1.x/pull/704,https://github.com/nirgal,2,https://github.com/oetiker/rrdtool-1.x/pull/704#issuecomment-201872316,"I get this warning when I do a git status:
Untracked files:
  (use ""git add <file>..."" to include in what will be committed)

    bindings/tcl/tclrrd1.5.999.so","Something similar need to be done in master, maybe 1.6 or maybe something more generic...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,704,2016-03-26T16:05:21Z,2016-04-19T07:08:39Z,2016-04-19T07:08:39Z,CLOSED,False,1,1,1,https://github.com/nirgal,Update tcl gitignore for version 1.5,1,[],https://github.com/oetiker/rrdtool-1.x/pull/704,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/704#issuecomment-202754056,"I get this warning when I do a git status:
Untracked files:
  (use ""git add <file>..."" to include in what will be committed)

    bindings/tcl/tclrrd1.5.999.so","how about ignoring
tclrrd*.so",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,704,2016-03-26T16:05:21Z,2016-04-19T07:08:39Z,2016-04-19T07:08:39Z,CLOSED,False,1,1,1,https://github.com/nirgal,Update tcl gitignore for version 1.5,1,[],https://github.com/oetiker/rrdtool-1.x/pull/704,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/704#issuecomment-211763848,"I get this warning when I do a git status:
Untracked files:
  (use ""git add <file>..."" to include in what will be committed)

    bindings/tcl/tclrrd1.5.999.so",3b6f1c7,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,706,2016-04-10T01:40:45Z,2016-04-10T08:33:58Z,2016-04-10T11:06:18Z,MERGED,True,22,2,1,https://github.com/stevenh,Disable nagel algorithm,1,[],https://github.com/oetiker/rrdtool-1.x/pull/706,https://github.com/stevenh,1,https://github.com/oetiker/rrdtool-1.x/pull/706,"Disable TCP's nagal algorithm which was causing massive slowdown in processing rrdcached requests.
Also check for other setsockopt call errors.","Disable TCP's nagal algorithm which was causing massive slowdown in processing rrdcached requests.
Also check for other setsockopt call errors.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,706,2016-04-10T01:40:45Z,2016-04-10T08:33:58Z,2016-04-10T11:06:18Z,MERGED,True,22,2,1,https://github.com/stevenh,Disable nagel algorithm,1,[],https://github.com/oetiker/rrdtool-1.x/pull/706,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/706#issuecomment-207943865,"Disable TCP's nagal algorithm which was causing massive slowdown in processing rrdcached requests.
Also check for other setsockopt call errors.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,708,2016-04-18T16:20:53Z,2016-04-18T16:21:06Z,2016-04-18T16:21:06Z,MERGED,True,191,32,5,https://github.com/oetiker,a bunch of new RPN functions coming up for 1.6,2,[],https://github.com/oetiker/rrdtool-1.x/pull/708,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/708,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,709,2016-04-22T15:13:30Z,2016-04-22T15:15:34Z,2016-04-22T15:15:34Z,MERGED,True,1,1,1,https://github.com/nirgal,Fixed CHANGES about supported lua version,1,[],https://github.com/oetiker/rrdtool-1.x/pull/709,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/709,"lua 5.1 already was supported.
What version 1.6.0 brings is lua 5.2 and lua 5.3 support.","lua 5.1 already was supported.
What version 1.6.0 brings is lua 5.2 and lua 5.3 support.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,709,2016-04-22T15:13:30Z,2016-04-22T15:15:34Z,2016-04-22T15:15:34Z,MERGED,True,1,1,1,https://github.com/nirgal,Fixed CHANGES about supported lua version,1,[],https://github.com/oetiker/rrdtool-1.x/pull/709,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/709#issuecomment-213468841,"lua 5.1 already was supported.
What version 1.6.0 brings is lua 5.2 and lua 5.3 support.",:-) thanks ... being a luo noob,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,710,2016-04-22T15:14:52Z,2016-06-21T12:18:23Z,2016-06-21T12:18:23Z,MERGED,True,6,6,1,https://github.com/nirgal, CHANGES about supported lua versions,1,[],https://github.com/oetiker/rrdtool-1.x/pull/710,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/710,"lua 5.1 already was supported.
What version 1.6.0 brings is lua 5.2 and lua 5.3 support.","lua 5.1 already was supported.
What version 1.6.0 brings is lua 5.2 and lua 5.3 support.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,711,2016-04-22T15:15:56Z,2016-06-21T12:19:04Z,2016-06-21T12:19:04Z,CLOSED,False,2,0,1,https://github.com/gitter-badger,Add a Gitter chat badge to README.md,1,[],https://github.com/oetiker/rrdtool-1.x/pull/711,https://github.com/gitter-badger,1,https://github.com/oetiker/rrdtool-1.x/pull/711,"oetiker/rrdtool-1.x now has a Chat Room on Gitter
@oetiker has just created a chat room. You can visit it here: https://gitter.im/oetiker/rrdtool-1.x.
This pull-request adds this badge to your README.md:

If my aim is a little off, please let me know.
Happy chatting.
PS: Click here if you would prefer not to receive automatic pull-requests from Gitter in future.","oetiker/rrdtool-1.x now has a Chat Room on Gitter
@oetiker has just created a chat room. You can visit it here: https://gitter.im/oetiker/rrdtool-1.x.
This pull-request adds this badge to your README.md:

If my aim is a little off, please let me know.
Happy chatting.
PS: Click here if you would prefer not to receive automatic pull-requests from Gitter in future.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,712,2016-04-22T15:18:29Z,2016-04-22T15:19:14Z,2016-04-22T15:19:14Z,MERGED,True,2,0,1,https://github.com/gitter-badger,Add a Gitter chat badge to README.md,1,[],https://github.com/oetiker/rrdtool-1.x/pull/712,https://github.com/gitter-badger,1,https://github.com/oetiker/rrdtool-1.x/pull/712,"oetiker/rrdtool-1.x now has a Chat Room on Gitter
@oetiker has just created a chat room. You can visit it here: https://gitter.im/oetiker/rrdtool-1.x.
This pull-request adds this badge to your README.md:

If my aim is a little off, please let me know.
Happy chatting.
PS: Click here if you would prefer not to receive automatic pull-requests from Gitter in future.","oetiker/rrdtool-1.x now has a Chat Room on Gitter
@oetiker has just created a chat room. You can visit it here: https://gitter.im/oetiker/rrdtool-1.x.
This pull-request adds this badge to your README.md:

If my aim is a little off, please let me know.
Happy chatting.
PS: Click here if you would prefer not to receive automatic pull-requests from Gitter in future.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,1,https://github.com/oetiker/rrdtool-1.x/pull/715,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228038141,,"hmmm there is the graphv api ...  which would be ideally suited to output extra information ... if you would adapt your patch to work with graphv, I would be glad to merge it",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,3,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228050207,,"Ah, right. Maybe it will need some keyword (like ""legend""), to stand out from the other information ?
Or how you can best convert it to a key = value format, when the keys can be pretty much anything.
graphv
graph_left = 67
graph_top = 33
graph_width = 650
graph_height = 300
image_width = 747
image_height = 415
graph_start = 1466268240
graph_end = 1466269260
value_min = 0,0000000000e+00
value_max = 4,0000000000e+00

coords
  1-min 16,352,65,366
Now: 48,0m  81,352,151,366
Min: 48,0m  167,352,237,366
Avg:236,4m  253,352,323,366
Max:532,0m  339,352,409,366
  CPUs  16,366,65,380
Now:  4,0   81,366,151,380
Min:  4,0   167,366,237,380
Avg:  4,0   253,366,323,380
Max:  4,0   339,366,409,380
  Procs 16,380,65,394
Now:  0,0   81,380,151,394
Min:  0,0   167,380,237,394
Avg:355,6m  253,380,323,394
Max:  3,1   339,380,409,394
  test  16,394,58,408",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,4,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228050662,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228051298,,"yes convert it to key value and add as many as you need ...maybe:
label_0 = {""x"": 81, ""y"": 380, ""w"":151, ""h"":394,""text"": ""Now:  0,0""}
label_1 = ...",True,{'THUMBS_UP': ['https://github.com/afbjorklund']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228051835,,OR just have labes = {big json blob},True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,7,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228055520,,"Is it ""label"" or ""legend"" ? Oh well, easy to change afterwards. Will change to use graphv output first.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,8,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228064539,,legend makes more sense,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,9,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228597054,,"Hmm, having to write and then parse JSON sounds like it could get complicated for key=value ?
Found out that you have to type the output, so it will probably be string to look like rect coords:
https://www.w3.org/TR/html-markup/area.html#area.attrs.coords.rect
<area shape=""rect"" coords=""16,394,58,408"" href=""test.html"" alt=""test"">",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,10,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228597680,,"I thought the format used by print was pretty nice, so went with that:
legend[""  1-min""] = ""16,352,65,366""
legend[""Now: -nan ""] = ""81,352,151,366""
legend[""Min: -nan ""] = ""167,352,237,366""
legend[""Avg: -nan ""] = ""253,352,323,366""
legend[""Max: -nan ""] = ""339,352,409,366""
legend[""  CPUs ""] = ""16,366,65,380""
legend[""Now: -nan ""] = ""81,366,151,380""
legend[""Min: -nan ""] = ""167,366,237,380""
legend[""Avg: -nan ""] = ""253,366,323,380""
legend[""Max: -nan ""] = ""339,366,409,380""
legend[""  Procs""] = ""16,380,65,394""
legend[""Now: -nan ""] = ""81,380,151,394""
legend[""Min: -nan ""] = ""167,380,237,394""
legend[""Avg: -nan ""] = ""253,380,323,394""
legend[""Max: -nan ""] = ""339,380,409,394""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,11,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228598033,,"the problem with that format is that scripting interfaces are implementing graphv returns as hashes/maps ... if you output data like this, there will be duplicate keys
please add tests to verify that the new feature actually works ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,12,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228600220,,"Right. Basically I am not interested in those keys (now/min/avg/max) anyway - but it's a problem if it breaks the bindings, like if multiple keys in a map is not allowed. Will do a counter then, but it still remains to find an output format that would work. I want to keep the coords (in usemap format), and need the text in order to find the original key (to find the URL to use)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,13,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228600823,,"Split it up into two. Maybe it is too chatty now, and needs some kind of opt-in ?
legend[0] = ""  1-min""
coords[0] = ""16,352,65,366""
legend[1] = ""Now: -nan ""
coords[1] = ""81,352,151,366""
legend[2] = ""Min: -nan ""
coords[2] = ""167,352,237,366""
legend[3] = ""Avg: -nan ""
coords[3] = ""253,352,323,366""
legend[4] = ""Max: -nan ""
coords[4] = ""339,352,409,366""
legend[5] = ""  CPUs ""
coords[5] = ""16,366,65,380""
legend[6] = ""Now: -nan ""
coords[6] = ""81,366,151,380""
legend[7] = ""Min: -nan ""
coords[7] = ""167,366,237,380""
legend[8] = ""Avg: -nan ""
coords[8] = ""253,366,323,380""
legend[9] = ""Max: -nan ""
coords[9] = ""339,366,409,380""
legend[10] = ""  Procs""
coords[10] = ""16,380,65,394""
legend[11] = ""Now: -nan ""
coords[11] = ""81,380,151,394""
legend[12] = ""Min: -nan ""
coords[12] = ""167,380,237,394""
legend[13] = ""Avg: -nan ""
coords[13] = ""253,380,323,394""
legend[14] = ""Max: -nan ""
coords[14] = ""339,380,409,394""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,14,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228958093,,that does look much nicer :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,15,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-228958172,,now if you can add a test (see the test sub directory) we are good to go I'd say,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,16,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-229115984,,"@oetiker : seems like there was no graph/output in the existing test, so had to add that first...
Also it seems that the tests always fail for me (due to locale), unless I run them with LANG=C ?
i.e. it differs between periods and commas, as the decimal sign, between sv_SE.UTF-8 and C",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,17,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-229143179,,"Hmm, it seems like it could be difficult to make the test line up with all different library versions etc...
-coords[0] = ""16,134,51,148""
+coords[0] = ""16,135,51,148""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,18,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-229148476,,Victim to things like https://bugzilla.gnome.org/show_bug.cgi?id=329547 and font-related issues.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,19,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-229200038,,"yes, adding LANG=en_US.utf8 might be a good thing in the test runner ...
regarding system differences, you may want to 'filter the coordinates' passing the output through a filter that removes the coords numbers from the output prior to comparison. there is also code in the test suite that limits the precision of numeric output to get consistent output between different systems ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,20,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-230155953,,"@oetiker : test now blanks out all coords, replacing the numbers with '#'
Did it needs some kind of toggle parameter too, or is it good to go now ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/oetiker,21,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-230504158,,no there is no need for a toggle .... thank you very much for the PR,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,715,2016-06-21T18:51:49Z,2016-07-05T15:00:38Z,2017-03-10T19:02:50Z,MERGED,True,76,2,6,https://github.com/afbjorklund,"Output legend coords, for making img map",2,[],https://github.com/oetiker/rrdtool-1.x/pull/715,https://github.com/afbjorklund,22,https://github.com/oetiker/rrdtool-1.x/pull/715#issuecomment-230578237,,"Excellent! Now all that is left is to parse the thing back in again (using PHP), and then add the URLs...
I suppose it would be fair to say that using this feature (legend/coords) requires rrdtool 1.6 or later ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,716,2016-06-24T09:25:47Z,2016-07-14T11:26:58Z,2016-08-24T09:43:44Z,MERGED,True,346,97,23,https://github.com/Marek77,Master coverity,65,[],https://github.com/oetiker/rrdtool-1.x/pull/716,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/716,"Hello Tobi,
we are using rrdtool at work and as we have Coverity for static code analysis we want to contribute back :-)
Please don't hesitate to contact me if you have doubts with some of the commits, the log messages could be more verbose especially for the less-than obvious fixes.
regards
Marek","Hello Tobi,
we are using rrdtool at work and as we have Coverity for static code analysis we want to contribute back :-)
Please don't hesitate to contact me if you have doubts with some of the commits, the log messages could be more verbose especially for the less-than obvious fixes.
regards
Marek",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,716,2016-06-24T09:25:47Z,2016-07-14T11:26:58Z,2016-08-24T09:43:44Z,MERGED,True,346,97,23,https://github.com/Marek77,Master coverity,65,[],https://github.com/oetiker/rrdtool-1.x/pull/716,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/716#issuecomment-228307568,"Hello Tobi,
we are using rrdtool at work and as we have Coverity for static code analysis we want to contribute back :-)
Please don't hesitate to contact me if you have doubts with some of the commits, the log messages could be more verbose especially for the less-than obvious fixes.
regards
Marek",cool! thank you very much ... while on the subject ... isn't there some way to integrate coverty on travis and they hand out free licenses to oss projects ... do you have any experience with that ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,716,2016-06-24T09:25:47Z,2016-07-14T11:26:58Z,2016-08-24T09:43:44Z,MERGED,True,346,97,23,https://github.com/Marek77,Master coverity,65,[],https://github.com/oetiker/rrdtool-1.x/pull/716,https://github.com/Marek77,3,https://github.com/oetiker/rrdtool-1.x/pull/716#issuecomment-228308106,"Hello Tobi,
we are using rrdtool at work and as we have Coverity for static code analysis we want to contribute back :-)
Please don't hesitate to contact me if you have doubts with some of the commits, the log messages could be more verbose especially for the less-than obvious fixes.
regards
Marek",Sorry no idea how Github + Travis + Coverity works...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,716,2016-06-24T09:25:47Z,2016-07-14T11:26:58Z,2016-08-24T09:43:44Z,MERGED,True,346,97,23,https://github.com/Marek77,Master coverity,65,[],https://github.com/oetiker/rrdtool-1.x/pull/716,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/716#issuecomment-228324606,"Hello Tobi,
we are using rrdtool at work and as we have Coverity for static code analysis we want to contribute back :-)
Please don't hesitate to contact me if you have doubts with some of the commits, the log messages could be more verbose especially for the less-than obvious fixes.
regards
Marek",is there a coverty configuration file ? or something like that ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,716,2016-06-24T09:25:47Z,2016-07-14T11:26:58Z,2016-08-24T09:43:44Z,MERGED,True,346,97,23,https://github.com/Marek77,Master coverity,65,[],https://github.com/oetiker/rrdtool-1.x/pull/716,https://github.com/Marek77,5,https://github.com/oetiker/rrdtool-1.x/pull/716#issuecomment-228344157,"Hello Tobi,
we are using rrdtool at work and as we have Coverity for static code analysis we want to contribute back :-)
Please don't hesitate to contact me if you have doubts with some of the commits, the log messages could be more verbose especially for the less-than obvious fixes.
regards
Marek","I don't know about the configuration files; we have a coverity installation and ""just use it"" :-) (but I need to have a product / rrdtool,... / configured in coverity) but it's the admin team who manages it. Then I send my ""make install"" via cov-build wrapper.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,716,2016-06-24T09:25:47Z,2016-07-14T11:26:58Z,2016-08-24T09:43:44Z,MERGED,True,346,97,23,https://github.com/Marek77,Master coverity,65,[],https://github.com/oetiker/rrdtool-1.x/pull/716,https://github.com/Marek77,6,https://github.com/oetiker/rrdtool-1.x/pull/716#issuecomment-228738838,"Hello Tobi,
we are using rrdtool at work and as we have Coverity for static code analysis we want to contribute back :-)
Please don't hesitate to contact me if you have doubts with some of the commits, the log messages could be more verbose especially for the less-than obvious fixes.
regards
Marek",I have added curly braces ;-) and fixed the indent as per stevenh's comments.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,721,2016-07-12T17:52:06Z,2016-07-14T11:26:07Z,2016-07-14T11:26:07Z,MERGED,True,2,2,1,https://github.com/N3WWN,FIX for Issue 695 - rrdtool 1.6,1,[],https://github.com/oetiker/rrdtool-1.x/pull/721,https://github.com/N3WWN,1,https://github.com/oetiker/rrdtool-1.x/pull/721,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,721,2016-07-12T17:52:06Z,2016-07-14T11:26:07Z,2016-07-14T11:26:07Z,MERGED,True,2,2,1,https://github.com/N3WWN,FIX for Issue 695 - rrdtool 1.6,1,[],https://github.com/oetiker/rrdtool-1.x/pull/721,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/721#issuecomment-232638593,,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,722,2016-07-12T17:53:32Z,2016-07-14T11:26:23Z,2016-07-14T11:26:23Z,MERGED,True,2,2,1,https://github.com/N3WWN,FIX for Issue 695 - rrdtool 1.5,1,[],https://github.com/oetiker/rrdtool-1.x/pull/722,https://github.com/N3WWN,1,https://github.com/oetiker/rrdtool-1.x/pull/722,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,722,2016-07-12T17:53:32Z,2016-07-14T11:26:23Z,2016-07-14T11:26:23Z,MERGED,True,2,2,1,https://github.com/N3WWN,FIX for Issue 695 - rrdtool 1.5,1,[],https://github.com/oetiker/rrdtool-1.x/pull/722,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/722#issuecomment-232638641,,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,723,2016-07-13T12:51:52Z,2016-07-14T11:26:42Z,2016-07-14T11:26:42Z,MERGED,True,2,2,1,https://github.com/N3WWN,FIX for Issue 695 - master branch,1,[],https://github.com/oetiker/rrdtool-1.x/pull/723,https://github.com/N3WWN,1,https://github.com/oetiker/rrdtool-1.x/pull/723,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,723,2016-07-13T12:51:52Z,2016-07-14T11:26:42Z,2016-07-14T11:26:42Z,MERGED,True,2,2,1,https://github.com/N3WWN,FIX for Issue 695 - master branch,1,[],https://github.com/oetiker/rrdtool-1.x/pull/723,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/723#issuecomment-232638705,,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,729,2016-08-23T13:07:04Z,2016-08-23T14:19:21Z,2016-08-24T07:12:00Z,MERGED,True,9,2,1,https://github.com/Marek77,src/rrd_open.c: fix crash (SIGBUS) trying to CREATE a rrd on a full fs,1,[],https://github.com/oetiker/rrdtool-1.x/pull/729,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/729,This patch fixes a SIGBUS observed in testing. Jump to cleanup (goto out_close) on error instead of using the invalid file descriptor for lseek etc.,This patch fixes a SIGBUS observed in testing. Jump to cleanup (goto out_close) on error instead of using the invalid file descriptor for lseek etc.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,729,2016-08-23T13:07:04Z,2016-08-23T14:19:21Z,2016-08-24T07:12:00Z,MERGED,True,9,2,1,https://github.com/Marek77,src/rrd_open.c: fix crash (SIGBUS) trying to CREATE a rrd on a full fs,1,[],https://github.com/oetiker/rrdtool-1.x/pull/729,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/729#issuecomment-241746176,This patch fixes a SIGBUS observed in testing. Jump to cleanup (goto out_close) on error instead of using the invalid file descriptor for lseek etc.,thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,730,2016-08-24T07:13:38Z,2016-08-24T07:28:27Z,2016-08-24T07:35:25Z,MERGED,True,9,0,1,https://github.com/Marek77,m4/acinclude.m4: fix for build error 'possibly undefined macro: AS_VAR_COPY,1,[],https://github.com/oetiker/rrdtool-1.x/pull/730,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/730,Fix build on RHEL6 / autoconf 2.63 or older.,Fix build on RHEL6 / autoconf 2.63 or older.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,730,2016-08-24T07:13:38Z,2016-08-24T07:28:27Z,2016-08-24T07:35:25Z,MERGED,True,9,0,1,https://github.com/Marek77,m4/acinclude.m4: fix for build error 'possibly undefined macro: AS_VAR_COPY,1,[],https://github.com/oetiker/rrdtool-1.x/pull/730,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/730#issuecomment-241979947,Fix build on RHEL6 / autoconf 2.63 or older.,thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,731,2016-08-24T08:15:08Z,2016-08-24T08:41:24Z,2016-08-24T08:56:37Z,MERGED,True,73,4,2,https://github.com/Marek77,rrdcached: Adds CLI option '-V log_level',2,[],https://github.com/oetiker/rrdtool-1.x/pull/731,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/731,"rrdcached under load can severely flood the logs. This PR adds a command line option to specify the maximum log_level to be used, meaning that a message with verbosity higher than log_level is muted (LOG_EMERG being the lowest and LOG_DEBUG highest).
syslog.h:
#define LOG_EMERG       0       /* system is unusable */
#define LOG_ALERT       1       /* action must be taken immediately */
#define LOG_CRIT        2       /* critical conditions */
#define LOG_ERR         3       /* error conditions */
#define LOG_WARNING     4       /* warning conditions */
#define LOG_NOTICE      5       /* normal but significant condition */
#define LOG_INFO        6       /* informational */
#define LOG_DEBUG       7       /* debug-level messages */

Option: ""-V [log_level]""
Accepted values for ""log_level"": LOG_EMERG, LOG_ALERT, ... , LOG_DEBUG
Default log level when this flag is NOT present: LOG_ERR","rrdcached under load can severely flood the logs. This PR adds a command line option to specify the maximum log_level to be used, meaning that a message with verbosity higher than log_level is muted (LOG_EMERG being the lowest and LOG_DEBUG highest).
syslog.h:
#define LOG_EMERG       0       /* system is unusable */
#define LOG_ALERT       1       /* action must be taken immediately */
#define LOG_CRIT        2       /* critical conditions */
#define LOG_ERR         3       /* error conditions */
#define LOG_WARNING     4       /* warning conditions */
#define LOG_NOTICE      5       /* normal but significant condition */
#define LOG_INFO        6       /* informational */
#define LOG_DEBUG       7       /* debug-level messages */

Option: ""-V [log_level]""
Accepted values for ""log_level"": LOG_EMERG, LOG_ALERT, ... , LOG_DEBUG
Default log level when this flag is NOT present: LOG_ERR",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,731,2016-08-24T08:15:08Z,2016-08-24T08:41:24Z,2016-08-24T08:56:37Z,MERGED,True,73,4,2,https://github.com/Marek77,rrdcached: Adds CLI option '-V log_level',2,[],https://github.com/oetiker/rrdtool-1.x/pull/731,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/731#issuecomment-241996176,"rrdcached under load can severely flood the logs. This PR adds a command line option to specify the maximum log_level to be used, meaning that a message with verbosity higher than log_level is muted (LOG_EMERG being the lowest and LOG_DEBUG highest).
syslog.h:
#define LOG_EMERG       0       /* system is unusable */
#define LOG_ALERT       1       /* action must be taken immediately */
#define LOG_CRIT        2       /* critical conditions */
#define LOG_ERR         3       /* error conditions */
#define LOG_WARNING     4       /* warning conditions */
#define LOG_NOTICE      5       /* normal but significant condition */
#define LOG_INFO        6       /* informational */
#define LOG_DEBUG       7       /* debug-level messages */

Option: ""-V [log_level]""
Accepted values for ""log_level"": LOG_EMERG, LOG_ALERT, ... , LOG_DEBUG
Default log level when this flag is NOT present: LOG_ERR",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,732,2016-08-24T09:02:18Z,2016-08-24T09:34:23Z,2016-08-24T09:34:54Z,MERGED,True,3,2,2,https://github.com/Marek77,"Fix ""mkdir -p""",2,[],https://github.com/oetiker/rrdtool-1.x/pull/732,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/732,"This PR fixes a race condition when using rrdcached with ""-R"" option with several threads trying to mkdir the same directory (or simply if the directory already exists), and improves the log message in case of mkdir failure.","This PR fixes a race condition when using rrdcached with ""-R"" option with several threads trying to mkdir the same directory (or simply if the directory already exists), and improves the log message in case of mkdir failure.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,732,2016-08-24T09:02:18Z,2016-08-24T09:34:23Z,2016-08-24T09:34:54Z,MERGED,True,3,2,2,https://github.com/Marek77,"Fix ""mkdir -p""",2,[],https://github.com/oetiker/rrdtool-1.x/pull/732,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/732#issuecomment-242008328,"This PR fixes a race condition when using rrdcached with ""-R"" option with several threads trying to mkdir the same directory (or simply if the directory already exists), and improves the log message in case of mkdir failure.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/733,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242093529,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","this does change the security behavior in the way that if someone had a 'hidden' rrdfile on their server, now it can be found, right ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242096440,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",how do you handle symlinks in the path ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,4,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242096743,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","Yes, but I have difficulty seeing that as a security issue...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242097309,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",implementing the functionality in rrd_daemon while creating rrd_list seems a bit unexpected ... any reason for not actually implementing the logic in rrd_list,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242098096,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",I guess it can be limited with -P ... right ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,7,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242099206,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","symlink handling:
in / I created a symlink ""toto"" pointing to ""sid"":
$ rrdtool list -d 127.0.0.1:42219 /        
toto
sid
$ rrdtool list -d 127.0.0.1:42219 /toto
switch
node
$ rrdtool list -d 127.0.0.1:42219 /sid
switch
node

Does this answer the question?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,8,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242100499,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",symlink handling ... the point is that if you have specified -b to change the root and then there is a symlink pointing to somewhere outside of that root directory ...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,9,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242100749,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","implementing the functionality in rrd_daemon while creating rrd_list seems a bit unexpected:
There is client code in rrd_list and corresponding daemon code in rrd_daemon. Daemon needs to be able to answer, as rrdtool and rrdcached binaries are not necessarily on the same machine.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,10,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242102276,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",symlink handling: there is a gaping security hole :-) But.. what is a use-case for the symlink pointing outside of the base_dir? Who (or what) would create this symlink? Surely not rrdcached via a CREATE? If the machine is already compromised it's already too late...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,11,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242103864,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","limiting via '-P':
$ rrdtool list -d 127.0.0.1:42219 /    
ERROR: rrdcached: Permission denied.

Yes this is supported.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,12,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242397704,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",so the only problem is that the functionality sits in the daemon and not in rrd_list.c,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,13,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242424574,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","symlink handling: I committed a fix for this, please review
(commit 1e55210: adds symlink check for the 'LIST' command)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,14,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242425615,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","functionality in rrd_daemon: I don't understand. When the client is asking the daemon about its ""filesystem"", why should the functionality be in rrd_list.c? Then why having all these in rrd_daemon.c: ?
    handle_request_stats
    handle_request_flush
    handle_request_flushall
    handle_request_pending
    handle_request_forget
    handle_request_queue
    handle_request_update
    handle_request_fetch_parse
    handle_request_fetch
    handle_request_fetchbin
    handle_request_wrote
    handle_request_info
    handle_request_first
    handle_request_last
    handle_request_create",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,15,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-242725147,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",the actual functionality called by handle_request_info for example comes from rrd_info.c list could work in a similar way,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,16,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-243480510,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",I moved LIST code into rrd_list_r (src/rrd_list.c).,True,{'THUMBS_UP': ['https://github.com/oetiker']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,17,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-243481420,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",now we just lack a test ... and then its good to go ... now that we have rrdtool list you can do a test easily,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,18,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-243783690,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","strange... travis build is failing on the new tests which work when run explicitly :-(
$ make test-suite.log 
PASS: modify1
PASS: modify2
PASS: modify3
PASS: modify4
PASS: modify5
PASS: tune1
PASS: tune2
PASS: rpn1
PASS: rpn2
PASS: rrdcreate
PASS: dump-restore
PASS: create-with-source-1
PASS: create-with-source-2
PASS: create-with-source-3
PASS: create-with-source-4
PASS: create-with-source-and-mapping-1
PASS: create-from-template-1
PASS: dcounter1
PASS: vformatter1
PASS: xport1
PASS: list1
============================================================================
Testsuite summary for bxrrdtool 1.5.999
============================================================================
# TOTAL: 21
# PASS:  21
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================

$ ./list1 
OK: create
OK: list without parameters displays Usage
OK: empty directory /home/schimaram/ofed/rrdtool-1.x/tests/list1_dir returns nothing
OK: single file /home/schimaram/ofed/rrdtool-1.x/tests/list1.rrd 
OK: directory with several RRDs
OK: only lists files with .rrd suffix
OK: only lists RRDs and directories

Starting rrdcached...
OK: empty directory ./list1_dir returns nothing
OK: single file /list1.rrd 
OK: directory with several RRDs
OK: only lists files with .rrd suffix
OK: only lists RRDs and directories
OK: escape from cached basedir via symlink denied
OK: tests with rrdcached",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,19,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-243790841,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","note travis does not start ./list but it runs
  - make
  - make check
  - make check TESTS_STYLE=""rrdcached""
  - make check TESTS_STYLE=""valgrind-logfile""

https://travis-ci.org/oetiker/rrdtool-1.x/builds/156530239#L2114",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,20,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-243793656,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","Very strange.. (I have changed is_cached() so it actually returns non-0 if rrdcached is not running, instead of just checking $RRDCACHED_ADDRESS):
$ make check TESTS_STYLE=""rrdcached""
/usr/bin/make  check-TESTS
...
...
PASS: xport1
PASS: list1
============================================================================
Testsuite summary for bxrrdtool 1.5.999
============================================================================
# TOTAL: 21
# PASS:  21
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================

$ cat list1.log 
OK: create
OK: list without parameters displays Usage
OK: empty directory /home/schimaram/ofed/rrdtool-1.x/tests/list1_dir returns nothing
OK: single file /home/schimaram/ofed/rrdtool-1.x/tests/list1.rrd 
OK: directory with several RRDs
OK: only lists files with .rrd suffix
OK: only lists RRDs and directories

Starting rrdcached...
rrdcached not started - skipping
OK: tests with rrdcached
cat: /home/schimaram/ofed/rrdtool-1.x/tests/list1-rrdcached.pid: No such file or directory
kill: usage: kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [sigspec]
PASS list1 (exit status: 0)

So 'make check TESTS_STYLE=""rrdcached""' doesn't start rrdcached (or I'm using it wrong).",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/Marek77,21,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-243795412,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd","change I made:
$ git diff functions
diff --git a/tests/functions b/tests/functions
index 6b9f906..789ad4e 100644
--- a/tests/functions
+++ b/tests/functions
@@ -121,6 +121,7 @@ function run_cached {

         RRDCACHED_ADDRESS=$ADDR
         export RRDCACHED_ADDRESS
+        export CACHED_PID_FILE

         sleep 1
         trap 'stop_cached' EXIT
@@ -136,7 +137,17 @@ function stop_cached {
 }

 function is_cached {
-        [ -n ""$RRDCACHED_ADDRESS"" ]
+        local D=""$1""
+        local CACHED=""${D:-$RRDCACHED}""
+        CACHED=`basename $CACHED`
+
+        [ -n ""$RRDCACHED_ADDRESS"" ] || return 1
+        [ -n ""$CACHED_PID_FILE"" ] || return 1
+        [ -f ""$CACHED_PID_FILE"" ] || return 1
+        [ -d /proc/$(cat ""$CACHED_PID_FILE"") ] || return 1
+        [ `grep -c ""$CACHED"" /proc/$(cat $CACHED_PID_FILE)/cmdline` -eq 0 ] && return 1
+
+        return 0
 }

 function exit_if_cached_running {",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,733,2016-08-24T14:48:39Z,2016-09-01T06:48:59Z,2016-09-01T07:12:47Z,MERGED,True,879,8,17,https://github.com/Marek77,adds command 'LIST',8,[],https://github.com/oetiker/rrdtool-1.x/pull/733,https://github.com/oetiker,22,https://github.com/oetiker/rrdtool-1.x/pull/733#issuecomment-243991193,"This PR adds a new command 'LIST' which allows traversal of the ""remote filesystem"" of an rrdcached instance. This permits to perform a ""discovery"" of the directory tree (with '/' being the rrdcached base_dir as specified by '-b' option). We use this (via Python bindings) to add rrdtool as backend into graphite-web; the LIST allows to have the element tree on the left as seen for example here:

Example of the traversal:
export RRDCACHED_ADDRESS=sid0:42219
$ rrdtool list /
sid
$ rrdtool list /sid          
switch
node
$ rrdtool list /sid/node/sid0
hca1
$ rrdtool list /sid/node/sid0/hca1
chip1
$ rrdtool list /sid/node/sid0/hca1/chip1
port1
$ rrdtool list /sid/node/sid0/hca1/chip1/port1
transport.rrd
error.rrd
data.rrd",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,734,2016-08-24T18:45:46Z,2016-08-25T05:56:11Z,2016-08-25T05:56:11Z,MERGED,True,1,1,1,https://github.com/biell,fix segfault on non-existent RRD file when using rrdcached,1,[],https://github.com/oetiker/rrdtool-1.x/pull/734,https://github.com/biell,1,https://github.com/oetiker/rrdtool-1.x/pull/734,"""rrdtool graph"" fails (segmentation violation) when used in combination of rrdcached and requesting data from a non-existent round-robin database file.  We have fixed the upstream code to ensure these requests no longer make it to rrdtool, but rrdtool shouldn't segfault.
All this pull request does is to change ""data_fetch(im) == -1"" to ""data_fetch(im) != 0"" in rrd_graph.c:graph_paint.  The specific return value I need to fix the segfault is EINVAL, but I beleive all other non-zero return values should short circuit graph_paint.  I checked rrd_client.c:1420,1427(the one at issue),1435,1441,1452,1462,621,639(only negatives values make it through, i.e. the DIE's and ""parsed.field_cnt+5""? from rrd_daemon.c).  rrdc_fetch's return value isn't used when ALLOW_MISSING_DS is in effect.  So, I am confident 0 is the only return value for data_fetch whereby execution of graph_paint should continue.
Before the change, this is the segfault:
$ rrdtool graph /dev/null --daemon /var/run/rrdcached/rrdcached.sock --start -3600s --end now DEF:avg=/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd:sum:AVERAGE PRINT:avg:AVERAGE:%.2lf
Segmentation fault (core dumped)
After:
$ rrdtool graph /dev/null --daemon /var/run/rrdcached/rrdcached.sock --start -3600s --end now DEF:avg=/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd:sum:AVERAGE PRINT:avg:AVERAGE:%.2lf
ERROR: realpath(/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd): No such file or directory","""rrdtool graph"" fails (segmentation violation) when used in combination of rrdcached and requesting data from a non-existent round-robin database file.  We have fixed the upstream code to ensure these requests no longer make it to rrdtool, but rrdtool shouldn't segfault.
All this pull request does is to change ""data_fetch(im) == -1"" to ""data_fetch(im) != 0"" in rrd_graph.c:graph_paint.  The specific return value I need to fix the segfault is EINVAL, but I beleive all other non-zero return values should short circuit graph_paint.  I checked rrd_client.c:1420,1427(the one at issue),1435,1441,1452,1462,621,639(only negatives values make it through, i.e. the DIE's and ""parsed.field_cnt+5""? from rrd_daemon.c).  rrdc_fetch's return value isn't used when ALLOW_MISSING_DS is in effect.  So, I am confident 0 is the only return value for data_fetch whereby execution of graph_paint should continue.
Before the change, this is the segfault:
$ rrdtool graph /dev/null --daemon /var/run/rrdcached/rrdcached.sock --start -3600s --end now DEF:avg=/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd:sum:AVERAGE PRINT:avg:AVERAGE:%.2lf
Segmentation fault (core dumped)
After:
$ rrdtool graph /dev/null --daemon /var/run/rrdcached/rrdcached.sock --start -3600s --end now DEF:avg=/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd:sum:AVERAGE PRINT:avg:AVERAGE:%.2lf
ERROR: realpath(/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd): No such file or directory",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,734,2016-08-24T18:45:46Z,2016-08-25T05:56:11Z,2016-08-25T05:56:11Z,MERGED,True,1,1,1,https://github.com/biell,fix segfault on non-existent RRD file when using rrdcached,1,[],https://github.com/oetiker/rrdtool-1.x/pull/734,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/734#issuecomment-242287972,"""rrdtool graph"" fails (segmentation violation) when used in combination of rrdcached and requesting data from a non-existent round-robin database file.  We have fixed the upstream code to ensure these requests no longer make it to rrdtool, but rrdtool shouldn't segfault.
All this pull request does is to change ""data_fetch(im) == -1"" to ""data_fetch(im) != 0"" in rrd_graph.c:graph_paint.  The specific return value I need to fix the segfault is EINVAL, but I beleive all other non-zero return values should short circuit graph_paint.  I checked rrd_client.c:1420,1427(the one at issue),1435,1441,1452,1462,621,639(only negatives values make it through, i.e. the DIE's and ""parsed.field_cnt+5""? from rrd_daemon.c).  rrdc_fetch's return value isn't used when ALLOW_MISSING_DS is in effect.  So, I am confident 0 is the only return value for data_fetch whereby execution of graph_paint should continue.
Before the change, this is the segfault:
$ rrdtool graph /dev/null --daemon /var/run/rrdcached/rrdcached.sock --start -3600s --end now DEF:avg=/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd:sum:AVERAGE PRINT:avg:AVERAGE:%.2lf
Segmentation fault (core dumped)
After:
$ rrdtool graph /dev/null --daemon /var/run/rrdcached/rrdcached.sock --start -3600s --end now DEF:avg=/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd:sum:AVERAGE PRINT:avg:AVERAGE:%.2lf
ERROR: realpath(/var/lib/ganglia/rrds/DOESNT_EXIST/SummaryInfo/cpu_num.rrd): No such file or directory",thank you,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,735,2016-09-02T13:38:13Z,2016-09-05T10:16:20Z,2016-09-07T13:15:25Z,MERGED,True,136,259,14,https://github.com/Marek77,Pr compiler warnings,23,[],https://github.com/oetiker/rrdtool-1.x/pull/735,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/735,This PR is to reduce the build noise by removing compiler warnings.,This PR is to reduce the build noise by removing compiler warnings.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,735,2016-09-02T13:38:13Z,2016-09-05T10:16:20Z,2016-09-07T13:15:25Z,MERGED,True,136,259,14,https://github.com/Marek77,Pr compiler warnings,23,[],https://github.com/oetiker/rrdtool-1.x/pull/735,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/735#issuecomment-244711967,This PR is to reduce the build noise by removing compiler warnings.,thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,737,2016-09-07T12:37:36Z,2016-09-07T13:09:00Z,2016-09-07T13:15:21Z,MERGED,True,3,0,1,https://github.com/Marek77,src/rrd_list.c: fix local directory listing when connection to rrdcached fails,1,[],https://github.com/oetiker/rrdtool-1.x/pull/737,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/737,"Without this fix, when the remote rrdcached cannot be reached and a path that exists on the local machine (such as '/') is asked for,  'list' returns 'ls' of the local path.
Example of erroneous output:
    $ rrdtool list -d rrdcached-host:42222 /
        Error connecting to rrdcached: Unable to connect to rrdcached: Connection refused
        var
        storage
        lib
        sysroot
        rules.d
        lib64
        backup
        opt
        bin
        sbin
        boot
        proc
        usr
        dev
        sys
        srv
        mnt
        run
        etc
        media
        tmp
        home
        root
        ERROR: Unable to connect to rrdcached: Connection refused","Without this fix, when the remote rrdcached cannot be reached and a path that exists on the local machine (such as '/') is asked for,  'list' returns 'ls' of the local path.
Example of erroneous output:
    $ rrdtool list -d rrdcached-host:42222 /
        Error connecting to rrdcached: Unable to connect to rrdcached: Connection refused
        var
        storage
        lib
        sysroot
        rules.d
        lib64
        backup
        opt
        bin
        sbin
        boot
        proc
        usr
        dev
        sys
        srv
        mnt
        run
        etc
        media
        tmp
        home
        root
        ERROR: Unable to connect to rrdcached: Connection refused",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,737,2016-09-07T12:37:36Z,2016-09-07T13:09:00Z,2016-09-07T13:15:21Z,MERGED,True,3,0,1,https://github.com/Marek77,src/rrd_list.c: fix local directory listing when connection to rrdcached fails,1,[],https://github.com/oetiker/rrdtool-1.x/pull/737,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/737#issuecomment-245274816,"Without this fix, when the remote rrdcached cannot be reached and a path that exists on the local machine (such as '/') is asked for,  'list' returns 'ls' of the local path.
Example of erroneous output:
    $ rrdtool list -d rrdcached-host:42222 /
        Error connecting to rrdcached: Unable to connect to rrdcached: Connection refused
        var
        storage
        lib
        sysroot
        rules.d
        lib64
        backup
        opt
        bin
        sbin
        boot
        proc
        usr
        dev
        sys
        srv
        mnt
        run
        etc
        media
        tmp
        home
        root
        ERROR: Unable to connect to rrdcached: Connection refused",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,739,2016-09-08T08:02:15Z,2016-09-08T12:33:20Z,2019-02-04T15:26:44Z,MERGED,True,71,1,3,https://github.com/oetiker,detect overlong keys in callbacks ... fix for #738,1,[],https://github.com/oetiker/rrdtool-1.x/pull/739,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/739,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,741,2016-09-22T11:13:46Z,2016-09-23T09:36:13Z,2016-09-23T13:04:46Z,MERGED,True,1,1,1,https://github.com/sharuzzaman,"fixed typo for 100,000 second in example1",1,[],https://github.com/oetiker/rrdtool-1.x/pull/741,https://github.com/sharuzzaman,1,https://github.com/oetiker/rrdtool-1.x/pull/741,"the example show heartbeat of 100,000 but the explanation show 10,000","the example show heartbeat of 100,000 but the explanation show 10,000",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,741,2016-09-22T11:13:46Z,2016-09-23T09:36:13Z,2016-09-23T13:04:46Z,MERGED,True,1,1,1,https://github.com/sharuzzaman,"fixed typo for 100,000 second in example1",1,[],https://github.com/oetiker/rrdtool-1.x/pull/741,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/741#issuecomment-249147011,"the example show heartbeat of 100,000 but the explanation show 10,000",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,742,2016-09-24T20:16:42Z,2016-10-17T07:40:22Z,2016-10-17T16:05:10Z,MERGED,True,538,234,3,https://github.com/tokkee,Improve the RRD client API,7,[],https://github.com/oetiker/rrdtool-1.x/pull/742,https://github.com/tokkee,1,https://github.com/oetiker/rrdtool-1.x/pull/742,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,742,2016-09-24T20:16:42Z,2016-10-17T07:40:22Z,2016-10-17T16:05:10Z,MERGED,True,538,234,3,https://github.com/tokkee,Improve the RRD client API,7,[],https://github.com/oetiker/rrdtool-1.x/pull/742,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/742#issuecomment-249420609,,could you update librrd.pod too,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,742,2016-09-24T20:16:42Z,2016-10-17T07:40:22Z,2016-10-17T16:05:10Z,MERGED,True,538,234,3,https://github.com/tokkee,Improve the RRD client API,7,[],https://github.com/oetiker/rrdtool-1.x/pull/742,https://github.com/tokkee,3,https://github.com/oetiker/rrdtool-1.x/pull/742#issuecomment-249487066,,"I updated librrd(3).
While doing that I wondered if the rrd_client_*_if_daemon functions actually make sense. I don't actually think so because the rrd_client_ functions don't make any sense if not connected to a daemon in the first place, hence, they will be used differently.
Also, the addr parameter to rrd_client_is_connected does not make overly sense. Hence, I suggest dropping it and removing rrd_client_is_any_connected. That'll be a little inconsistent with the rrdc_ interface but I think that's fine and makes more sense that way (the two interfaces are different after all which is why we have them ;-)).
Thoughts?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,742,2016-09-24T20:16:42Z,2016-10-17T07:40:22Z,2016-10-17T16:05:10Z,MERGED,True,538,234,3,https://github.com/tokkee,Improve the RRD client API,7,[],https://github.com/oetiker/rrdtool-1.x/pull/742,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/742#issuecomment-249562458,,sure ... the nicer the new set of functions the better :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,742,2016-09-24T20:16:42Z,2016-10-17T07:40:22Z,2016-10-17T16:05:10Z,MERGED,True,538,234,3,https://github.com/tokkee,Improve the RRD client API,7,[],https://github.com/oetiker/rrdtool-1.x/pull/742,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/742#issuecomment-251736146,,I would be ready to merge this ... ok ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,742,2016-09-24T20:16:42Z,2016-10-17T07:40:22Z,2016-10-17T16:05:10Z,MERGED,True,538,234,3,https://github.com/tokkee,Improve the RRD client API,7,[],https://github.com/oetiker/rrdtool-1.x/pull/742,https://github.com/tokkee,6,https://github.com/oetiker/rrdtool-1.x/pull/742#issuecomment-253894890,,"Okay, I think this is good to go now :-) Sorry for the delay.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,742,2016-09-24T20:16:42Z,2016-10-17T07:40:22Z,2016-10-17T16:05:10Z,MERGED,True,538,234,3,https://github.com/tokkee,Improve the RRD client API,7,[],https://github.com/oetiker/rrdtool-1.x/pull/742,https://github.com/oetiker,7,https://github.com/oetiker/rrdtool-1.x/pull/742#issuecomment-254134282,,thanks for the contrib!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,743,2016-09-28T10:07:58Z,2016-09-28T16:29:12Z,2016-09-28T16:29:12Z,MERGED,True,6,1,1,https://github.com/Manoj-red-hat, Improve messages for rrdcached daemon failed due to PID Exist,2,[],https://github.com/oetiker/rrdtool-1.x/pull/743,https://github.com/Manoj-red-hat,1,https://github.com/oetiker/rrdtool-1.x/pull/743,New messages added in order to get clarity about the nature of problem,New messages added in order to get clarity about the nature of problem,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,743,2016-09-28T10:07:58Z,2016-09-28T16:29:12Z,2016-09-28T16:29:12Z,MERGED,True,6,1,1,https://github.com/Manoj-red-hat, Improve messages for rrdcached daemon failed due to PID Exist,2,[],https://github.com/oetiker/rrdtool-1.x/pull/743,https://github.com/Manoj-red-hat,2,https://github.com/oetiker/rrdtool-1.x/pull/743#issuecomment-250126393,New messages added in order to get clarity about the nature of problem,"Thanks a lot @oetiker Sir,
For teaching me how to contribute in OSS  :)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,743,2016-09-28T10:07:58Z,2016-09-28T16:29:12Z,2016-09-28T16:29:12Z,MERGED,True,6,1,1,https://github.com/Manoj-red-hat, Improve messages for rrdcached daemon failed due to PID Exist,2,[],https://github.com/oetiker/rrdtool-1.x/pull/743,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/743#issuecomment-250220776,New messages added in order to get clarity about the nature of problem,thanks for your patch,True,{'HOORAY': ['https://github.com/Manoj-red-hat']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,744,2016-10-04T14:24:34Z,2016-10-04T23:33:50Z,2016-10-05T19:56:04Z,MERGED,True,31,0,1,https://github.com/bangert,"Read the last timestamp from the RRD file, instead of setting it to z…",1,[],https://github.com/oetiker/rrdtool-1.x/pull/744,https://github.com/bangert,1,https://github.com/oetiker/rrdtool-1.x/pull/744,"…ero.
This fixes a dataloss problem when trying to insert old data. rrdcached
will accept the data at first, but then fail a whole batch when trying
to flush the data to disk.
The last timestamp is initially set to 0, and later updated to the
timestamp of the first update. However, if the RRD file already contains
newer data, the flush will fail later on. And since RRD cache writes all updates
in one go, the whole batch of samples fails and is discarded (even though,
just the first few updates are too old).
By reading in the last timestamp from the RRD file, we already fail
correctly on the individual update commands (ie. on the protocol layer).
RRD  ----------------------|
RRDcached         |------------------| <- Flush
                           |---------| <- Dataloss

With this patch, the initial updates, that overlap with data in the RRD
file will fail individually (at submission time).
RRD  ----------------------|
RRDcached         |xxxxxxxx----------| <- Flush

Thanks","…ero.
This fixes a dataloss problem when trying to insert old data. rrdcached
will accept the data at first, but then fail a whole batch when trying
to flush the data to disk.
The last timestamp is initially set to 0, and later updated to the
timestamp of the first update. However, if the RRD file already contains
newer data, the flush will fail later on. And since RRD cache writes all updates
in one go, the whole batch of samples fails and is discarded (even though,
just the first few updates are too old).
By reading in the last timestamp from the RRD file, we already fail
correctly on the individual update commands (ie. on the protocol layer).
RRD  ----------------------|
RRDcached         |------------------| <- Flush
                           |---------| <- Dataloss

With this patch, the initial updates, that overlap with data in the RRD
file will fail individually (at submission time).
RRD  ----------------------|
RRDcached         |xxxxxxxx----------| <- Flush

Thanks",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,744,2016-10-04T14:24:34Z,2016-10-04T23:33:50Z,2016-10-05T19:56:04Z,MERGED,True,31,0,1,https://github.com/bangert,"Read the last timestamp from the RRD file, instead of setting it to z…",1,[],https://github.com/oetiker/rrdtool-1.x/pull/744,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/744#issuecomment-251438899,"…ero.
This fixes a dataloss problem when trying to insert old data. rrdcached
will accept the data at first, but then fail a whole batch when trying
to flush the data to disk.
The last timestamp is initially set to 0, and later updated to the
timestamp of the first update. However, if the RRD file already contains
newer data, the flush will fail later on. And since RRD cache writes all updates
in one go, the whole batch of samples fails and is discarded (even though,
just the first few updates are too old).
By reading in the last timestamp from the RRD file, we already fail
correctly on the individual update commands (ie. on the protocol layer).
RRD  ----------------------|
RRDcached         |------------------| <- Flush
                           |---------| <- Dataloss

With this patch, the initial updates, that overlap with data in the RRD
file will fail individually (at submission time).
RRD  ----------------------|
RRDcached         |xxxxxxxx----------| <- Flush

Thanks","have you looked at the performance impact of your change ? looking at your code I get the impression that the daemon will read the rrd file on every update to do it's checks ...
it is important to design the code such that the performance in the non-error case is impacted as little as possible ... it is great to handle errors gracefully, but the normal use case should not suffer a performance penalty for recovering errors that should not happen in the first place.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,744,2016-10-04T14:24:34Z,2016-10-04T23:33:50Z,2016-10-05T19:56:04Z,MERGED,True,31,0,1,https://github.com/bangert,"Read the last timestamp from the RRD file, instead of setting it to z…",1,[],https://github.com/oetiker/rrdtool-1.x/pull/744,https://github.com/bangert,3,https://github.com/oetiker/rrdtool-1.x/pull/744#issuecomment-251451446,"…ero.
This fixes a dataloss problem when trying to insert old data. rrdcached
will accept the data at first, but then fail a whole batch when trying
to flush the data to disk.
The last timestamp is initially set to 0, and later updated to the
timestamp of the first update. However, if the RRD file already contains
newer data, the flush will fail later on. And since RRD cache writes all updates
in one go, the whole batch of samples fails and is discarded (even though,
just the first few updates are too old).
By reading in the last timestamp from the RRD file, we already fail
correctly on the individual update commands (ie. on the protocol layer).
RRD  ----------------------|
RRDcached         |------------------| <- Flush
                           |---------| <- Dataloss

With this patch, the initial updates, that overlap with data in the RRD
file will fail individually (at submission time).
RRD  ----------------------|
RRDcached         |xxxxxxxx----------| <- Flush

Thanks","we have not conducted any performance tests. nevertheless, it is not as you suspect an rrd_open on every update. the additional code is in the if (ci == NULL) block, so it is only executed if we have no information about the rrd at hand, so only once.
i must confess, i dont know how expensive rrd_open is, but my optimistic guess is that we only need to read one addional block. the rrd file is stat'ed a couple of lines earlier, so most of the fs layer info has already been loaded.
however, one could possibly optimize this section, in areas not touched upon by this pull request: by only stat'ing the rrd file, if there is no ci object and not on every update. haven't given this much thought, though...",True,{'THUMBS_UP': ['https://github.com/oetiker']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,746,2016-10-05T11:06:38Z,2016-10-05T17:04:58Z,2016-10-05T19:55:33Z,MERGED,True,1,0,1,https://github.com/bangert,Make sure all listen_fds have their own copy of the addr string.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/746,https://github.com/bangert,1,https://github.com/oetiker/rrdtool-1.x/pull/746,Fixes double free on shutdown #745.,Fixes double free on shutdown #745.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,746,2016-10-05T11:06:38Z,2016-10-05T17:04:58Z,2016-10-05T19:55:33Z,MERGED,True,1,0,1,https://github.com/bangert,Make sure all listen_fds have their own copy of the addr string.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/746,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/746#issuecomment-251735850,Fixes double free on shutdown #745.,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,748,2016-10-11T08:48:50Z,2016-10-11T09:03:44Z,2016-10-11T09:55:14Z,MERGED,True,11,0,1,https://github.com/bangert,also parse the daemon parameter in DEF as specified in the documentation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/748,https://github.com/bangert,1,https://github.com/oetiker/rrdtool-1.x/pull/748,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,748,2016-10-11T08:48:50Z,2016-10-11T09:03:44Z,2016-10-11T09:55:14Z,MERGED,True,11,0,1,https://github.com/bangert,also parse the daemon parameter in DEF as specified in the documentation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/748,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/748#issuecomment-252853805,,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,750,2016-10-18T21:16:06Z,2016-10-18T22:15:31Z,2016-10-18T22:15:31Z,MERGED,True,1,1,1,https://github.com/he32,Fix a signedness/unsignedness conversion bug in the expression,1,[],https://github.com/oetiker/rrdtool-1.x/pull/750,https://github.com/he32,1,https://github.com/oetiker/rrdtool-1.x/pull/750,"calculating ""now"" before printout of the timestamp.  Negative values
are first cast to unsigned, it seems, causing overflow.
This is the fix belonging to issue #749, where the title is actually
misleading.","calculating ""now"" before printout of the timestamp.  Negative values
are first cast to unsigned, it seems, causing overflow.
This is the fix belonging to issue #749, where the title is actually
misleading.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,750,2016-10-18T21:16:06Z,2016-10-18T22:15:31Z,2016-10-18T22:15:31Z,MERGED,True,1,1,1,https://github.com/he32,Fix a signedness/unsignedness conversion bug in the expression,1,[],https://github.com/oetiker/rrdtool-1.x/pull/750,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/750#issuecomment-254655329,"calculating ""now"" before printout of the timestamp.  Negative values
are first cast to unsigned, it seems, causing overflow.
This is the fix belonging to issue #749, where the title is actually
misleading.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,751,2016-10-20T09:13:41Z,,2017-02-16T16:55:15Z,OPEN,False,1420,603,23,https://github.com/spartawhy117,1.6 windows x64,7,[],https://github.com/oetiker/rrdtool-1.x/pull/751,https://github.com/spartawhy117,1,https://github.com/oetiker/rrdtool-1.x/pull/751,"modify and add some files to compile v1.6 with vs2015 on x64.
some explain has been add to win32-build-tips.txt. because some modify has big changes that effect linux,so this branch really need a new branch rather than merge.","modify and add some files to compile v1.6 with vs2015 on x64.
some explain has been add to win32-build-tips.txt. because some modify has big changes that effect linux,so this branch really need a new branch rather than merge.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,751,2016-10-20T09:13:41Z,,2017-02-16T16:55:15Z,OPEN,False,1420,603,23,https://github.com/spartawhy117,1.6 windows x64,7,[],https://github.com/oetiker/rrdtool-1.x/pull/751,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/751#issuecomment-280374605,"modify and add some files to compile v1.6 with vs2015 on x64.
some explain has been add to win32-build-tips.txt. because some modify has big changes that effect linux,so this branch really need a new branch rather than merge.",ping,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,751,2016-10-20T09:13:41Z,,2017-02-16T16:55:15Z,OPEN,False,1420,603,23,https://github.com/spartawhy117,1.6 windows x64,7,[],https://github.com/oetiker/rrdtool-1.x/pull/751,https://github.com/spartawhy117,3,https://github.com/oetiker/rrdtool-1.x/pull/751#issuecomment-280387437,"modify and add some files to compile v1.6 with vs2015 on x64.
some explain has been add to win32-build-tips.txt. because some modify has big changes that effect linux,so this branch really need a new branch rather than merge.","however i found one exception when run exe. that maybe the dll problem of libxml2-2.after change with the my self compiled libxml2-2.dll, the exe works well.
however, i finally compiled 1.4 version on windows-64 with vs2015.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,752,2016-10-24T12:00:07Z,2016-10-24T13:09:04Z,2016-10-24T13:23:36Z,MERGED,True,3,1,1,https://github.com/Marek77,src/rrd_daemon.c: fix incorrect line number reporting by rrdcached in fetch,1,[],https://github.com/oetiker/rrdtool-1.x/pull/752,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/752,"Example of error:
rrdtool fetch --daemon 127.0.0.1:42218 <path_to>.rrd --start -5min LAST
ERROR: rrdc_fetch: Got 34 lines, expected 37

While the same, without --daemon <address> works fine.
The bug manifests itself when the last element of line to write falls
within the last 10% of the length of 'char linebuf[1024]', ie between
922 and 1023 bytes; in that case the '\n' at the end of the line is
not written, and so not seen by count_lines(), wrong number of lines
given in the daemon's response -> 'rrdtool fetch' errors out.
src/rrd_daemon.c:1978
  if (linebuf_fill>sizeof(linebuf)*9/10) {
    add_response_info (sock, linebuf);
    memset (linebuf, 0, sizeof (linebuf));
    linebuf_fill = 0;
  }
}
if (linebuf_fill>0) {
  add_response_info (sock, ""%s\n"", linebuf);
}

If this condition is TRUE, and in case of i == parsed.field_cnt (line 1972), linebuf_fill is reset to 0, the for-loop ends, with the condition linebuf_fill>0 the end of line marker '\n' is NOT written and a new line starts.
At the end the daemon sends response with XX Success where XX is calculated by counting '\n' and doesn't match the number of lines expected by rrdtool fetch.","Example of error:
rrdtool fetch --daemon 127.0.0.1:42218 <path_to>.rrd --start -5min LAST
ERROR: rrdc_fetch: Got 34 lines, expected 37

While the same, without --daemon <address> works fine.
The bug manifests itself when the last element of line to write falls
within the last 10% of the length of 'char linebuf[1024]', ie between
922 and 1023 bytes; in that case the '\n' at the end of the line is
not written, and so not seen by count_lines(), wrong number of lines
given in the daemon's response -> 'rrdtool fetch' errors out.
src/rrd_daemon.c:1978
  if (linebuf_fill>sizeof(linebuf)*9/10) {
    add_response_info (sock, linebuf);
    memset (linebuf, 0, sizeof (linebuf));
    linebuf_fill = 0;
  }
}
if (linebuf_fill>0) {
  add_response_info (sock, ""%s\n"", linebuf);
}

If this condition is TRUE, and in case of i == parsed.field_cnt (line 1972), linebuf_fill is reset to 0, the for-loop ends, with the condition linebuf_fill>0 the end of line marker '\n' is NOT written and a new line starts.
At the end the daemon sends response with XX Success where XX is calculated by counting '\n' and doesn't match the number of lines expected by rrdtool fetch.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,752,2016-10-24T12:00:07Z,2016-10-24T13:09:04Z,2016-10-24T13:23:36Z,MERGED,True,3,1,1,https://github.com/Marek77,src/rrd_daemon.c: fix incorrect line number reporting by rrdcached in fetch,1,[],https://github.com/oetiker/rrdtool-1.x/pull/752,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/752#issuecomment-255735489,"Example of error:
rrdtool fetch --daemon 127.0.0.1:42218 <path_to>.rrd --start -5min LAST
ERROR: rrdc_fetch: Got 34 lines, expected 37

While the same, without --daemon <address> works fine.
The bug manifests itself when the last element of line to write falls
within the last 10% of the length of 'char linebuf[1024]', ie between
922 and 1023 bytes; in that case the '\n' at the end of the line is
not written, and so not seen by count_lines(), wrong number of lines
given in the daemon's response -> 'rrdtool fetch' errors out.
src/rrd_daemon.c:1978
  if (linebuf_fill>sizeof(linebuf)*9/10) {
    add_response_info (sock, linebuf);
    memset (linebuf, 0, sizeof (linebuf));
    linebuf_fill = 0;
  }
}
if (linebuf_fill>0) {
  add_response_info (sock, ""%s\n"", linebuf);
}

If this condition is TRUE, and in case of i == parsed.field_cnt (line 1972), linebuf_fill is reset to 0, the for-loop ends, with the condition linebuf_fill>0 the end of line marker '\n' is NOT written and a new line starts.
At the end the daemon sends response with XX Success where XX is calculated by counting '\n' and doesn't match the number of lines expected by rrdtool fetch.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,755,2016-11-07T13:50:50Z,2017-02-16T16:06:38Z,2017-02-16T16:06:43Z,MERGED,True,1322,666,13,https://github.com/commx,python-rrdtool as replacement for the upstream Python bindings,13,[],https://github.com/oetiker/rrdtool-1.x/pull/755,https://github.com/commx,1,https://github.com/oetiker/rrdtool-1.x/pull/755,"As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.","As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,755,2016-11-07T13:50:50Z,2017-02-16T16:06:38Z,2017-02-16T16:06:43Z,MERGED,True,1322,666,13,https://github.com/commx,python-rrdtool as replacement for the upstream Python bindings,13,[],https://github.com/oetiker/rrdtool-1.x/pull/755,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/755#issuecomment-258906284,"As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.","cool ... will be glad to merge ... but before I do, I question. Have you looked into supporting the new callback interface ? there is only an implementation in perl yet, but I guess python users might find this cool too ... look at the callback.t file in the perl binding directory",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,755,2016-11-07T13:50:50Z,2017-02-16T16:06:38Z,2017-02-16T16:06:43Z,MERGED,True,1322,666,13,https://github.com/commx,python-rrdtool as replacement for the upstream Python bindings,13,[],https://github.com/oetiker/rrdtool-1.x/pull/755,https://github.com/commx,3,https://github.com/oetiker/rrdtool-1.x/pull/755#issuecomment-259811966,"As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.","I've added the code for the callback interface and also added it to python-rrdtool 0.1.7. A small example on how to use it can be found in the documentation for the python-rrdtool docs: http://pythonhosted.org/rrdtool/usage.html#register_fetch_cb
I also added a method called clear_fetch_cb which can be used to free the callback function and ""unregister"" the fetch callback.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,755,2016-11-07T13:50:50Z,2017-02-16T16:06:38Z,2017-02-16T16:06:43Z,MERGED,True,1322,666,13,https://github.com/commx,python-rrdtool as replacement for the upstream Python bindings,13,[],https://github.com/oetiker/rrdtool-1.x/pull/755,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/755#issuecomment-259902600,"As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.",cool! ... so while you are 'in the flow' how about throwing a test into the mix? so that we will know the bindings keep working whenever changes are made to rrdtool ? see the test directory,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,755,2016-11-07T13:50:50Z,2017-02-16T16:06:38Z,2017-02-16T16:06:43Z,MERGED,True,1322,666,13,https://github.com/commx,python-rrdtool as replacement for the upstream Python bindings,13,[],https://github.com/oetiker/rrdtool-1.x/pull/755,https://github.com/commx,5,https://github.com/oetiker/rrdtool-1.x/pull/755#issuecomment-261243142,"As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.","Modified some bits to get the initial tests added.
The minimum required Python version for the bindings shall be 2.7, as Python 2.6 has reached it's End-of-life in October 2013 already. New builds shall always have at least Python 2.7 available.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,755,2016-11-07T13:50:50Z,2017-02-16T16:06:38Z,2017-02-16T16:06:43Z,MERGED,True,1322,666,13,https://github.com/commx,python-rrdtool as replacement for the upstream Python bindings,13,[],https://github.com/oetiker/rrdtool-1.x/pull/755,https://github.com/nwf,6,https://github.com/oetiker/rrdtool-1.x/pull/755#issuecomment-280371893,"As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.",Debian is citing this PR for their packaging of the rrdtool python interface (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=780543) and I'd very much like that package to be python3-compatible.  What's the status of this PR?  Could another pair of eyes and hands help?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,755,2016-11-07T13:50:50Z,2017-02-16T16:06:38Z,2017-02-16T16:06:43Z,MERGED,True,1322,666,13,https://github.com/commx,python-rrdtool as replacement for the upstream Python bindings,13,[],https://github.com/oetiker/rrdtool-1.x/pull/755,https://github.com/oetiker,7,https://github.com/oetiker/rrdtool-1.x/pull/755#issuecomment-280374310,"As already mentioned in #698, various Python bindings for rrdtool exist. I've been maintaining python-rrdtool for some time now and it got appropriate Python 2.x and 3.x support, and I have synchronised code changes with upstream for most things.
I've made some changes to the m4 files to enable Python 3 support and the bindings successfully build for Python 2 and 3 now (make sure to set the desired interpreter version as default, symlinking /usr/bin/python to /usr/bin/python3.5 on Ubuntu 16.04 for example).
Aside from this, I'll continue to maintain python-rrdtool as-is, because it allows users to install it over PyPI which is the preferred way to install Python packages and it makes things much easier especially when using virtualenvs.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,756,2016-11-09T12:17:48Z,2016-11-09T13:54:10Z,2016-11-09T13:54:18Z,MERGED,True,1,1,1,https://github.com/bangert,Add deamon variable to cache key,1,[],https://github.com/oetiker/rrdtool-1.x/pull/756,https://github.com/bangert,1,https://github.com/oetiker/rrdtool-1.x/pull/756,"This allows for two identically named rrd's on two different rrdcache daemons
to be graphed on the same graph. Without this patch the following
rrdtool graph - --start=1478559600 --end=1478685600 --width=1000 --step=300 --imgformat=JSONTIME 
DEF:rrd1=aname.rrd:ds_name:AVERAGE:daemon=rrdcache1 
DEF:rrd2=aname.rrd:ds_name:AVERAGE:daemon=rrdcache2
would not actually fetch any data from rrdcache2, but rrd2 would reuse the data from rrd1,
since the current logic determines them to be equal.
With this patch rrd2 data is actually fetched from rrdcache2.","This allows for two identically named rrd's on two different rrdcache daemons
to be graphed on the same graph. Without this patch the following
rrdtool graph - --start=1478559600 --end=1478685600 --width=1000 --step=300 --imgformat=JSONTIME 
DEF:rrd1=aname.rrd:ds_name:AVERAGE:daemon=rrdcache1 
DEF:rrd2=aname.rrd:ds_name:AVERAGE:daemon=rrdcache2
would not actually fetch any data from rrdcache2, but rrd2 would reuse the data from rrd1,
since the current logic determines them to be equal.
With this patch rrd2 data is actually fetched from rrdcache2.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,756,2016-11-09T12:17:48Z,2016-11-09T13:54:10Z,2016-11-09T13:54:18Z,MERGED,True,1,1,1,https://github.com/bangert,Add deamon variable to cache key,1,[],https://github.com/oetiker/rrdtool-1.x/pull/756,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/756#issuecomment-259419710,"This allows for two identically named rrd's on two different rrdcache daemons
to be graphed on the same graph. Without this patch the following
rrdtool graph - --start=1478559600 --end=1478685600 --width=1000 --step=300 --imgformat=JSONTIME 
DEF:rrd1=aname.rrd:ds_name:AVERAGE:daemon=rrdcache1 
DEF:rrd2=aname.rrd:ds_name:AVERAGE:daemon=rrdcache2
would not actually fetch any data from rrdcache2, but rrd2 would reuse the data from rrd1,
since the current logic determines them to be equal.
With this patch rrd2 data is actually fetched from rrdcache2.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,757,2016-12-03T19:55:47Z,,2017-11-17T08:46:57Z,OPEN,False,37,31,1,https://github.com/mmitch,add support for negative logarithms,1,[],https://github.com/oetiker/rrdtool-1.x/pull/757,https://github.com/mmitch,1,https://github.com/oetiker/rrdtool-1.x/pull/757,"Define a signed logarithm function that works like this:
   x >= 0 : slog10(x) =   log10(  x )
   x  < 0 : slog10(x) = - log10( -x )

This will allow drawing both above und below the X axis when using logarithmic scale.
Current limitations:

Y autoscale does not detect negative values, --lower-limit has to be used
Y axis labeling is missing

Can anybody help me to solve these problems?","Define a signed logarithm function that works like this:
   x >= 0 : slog10(x) =   log10(  x )
   x  < 0 : slog10(x) = - log10( -x )

This will allow drawing both above und below the X axis when using logarithmic scale.
Current limitations:

Y autoscale does not detect negative values, --lower-limit has to be used
Y axis labeling is missing

Can anybody help me to solve these problems?",True,{'THUMBS_UP': ['https://github.com/oetiker']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,757,2016-12-03T19:55:47Z,,2017-11-17T08:46:57Z,OPEN,False,37,31,1,https://github.com/mmitch,add support for negative logarithms,1,[],https://github.com/oetiker/rrdtool-1.x/pull/757,https://github.com/mmitch,2,https://github.com/oetiker/rrdtool-1.x/pull/757#issuecomment-264663363,"Define a signed logarithm function that works like this:
   x >= 0 : slog10(x) =   log10(  x )
   x  < 0 : slog10(x) = - log10( -x )

This will allow drawing both above und below the X axis when using logarithmic scale.
Current limitations:

Y autoscale does not detect negative values, --lower-limit has to be used
Y axis labeling is missing

Can anybody help me to solve these problems?","see this script for a working demonstration:
https://gist.github.com/mmitch/6a7e4bda057d0b4ae2d46515f5a30f7a",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,757,2016-12-03T19:55:47Z,,2017-11-17T08:46:57Z,OPEN,False,37,31,1,https://github.com/mmitch,add support for negative logarithms,1,[],https://github.com/oetiker/rrdtool-1.x/pull/757,https://github.com/dword1511,3,https://github.com/oetiker/rrdtool-1.x/pull/757#issuecomment-344802319,"Define a signed logarithm function that works like this:
   x >= 0 : slog10(x) =   log10(  x )
   x  < 0 : slog10(x) = - log10( -x )

This will allow drawing both above und below the X axis when using logarithmic scale.
Current limitations:

Y autoscale does not detect negative values, --lower-limit has to be used
Y axis labeling is missing

Can anybody help me to solve these problems?",Doesn't slog10(0.1) and slog(-10) get the same value?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,757,2016-12-03T19:55:47Z,,2017-11-17T08:46:57Z,OPEN,False,37,31,1,https://github.com/mmitch,add support for negative logarithms,1,[],https://github.com/oetiker/rrdtool-1.x/pull/757,https://github.com/mmitch,4,https://github.com/oetiker/rrdtool-1.x/pull/757#issuecomment-345060371,"Define a signed logarithm function that works like this:
   x >= 0 : slog10(x) =   log10(  x )
   x  < 0 : slog10(x) = - log10( -x )

This will allow drawing both above und below the X axis when using logarithmic scale.
Current limitations:

Y autoscale does not detect negative values, --lower-limit has to be used
Y axis labeling is missing

Can anybody help me to solve these problems?","Strictly mathematically speaking: yes.
But I have not yet seen an rrdgraph logarithmic diagram with negative values. I think the values are autoscaled in such a way that x never is less than 1 (at least the numeric value of x - the axis legend will happily show a scale of 1/10 or 1/1000 using prefixes like m or u).",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,757,2016-12-03T19:55:47Z,,2017-11-17T08:46:57Z,OPEN,False,37,31,1,https://github.com/mmitch,add support for negative logarithms,1,[],https://github.com/oetiker/rrdtool-1.x/pull/757,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/757#issuecomment-345181436,"Define a signed logarithm function that works like this:
   x >= 0 : slog10(x) =   log10(  x )
   x  < 0 : slog10(x) = - log10( -x )

This will allow drawing both above und below the X axis when using logarithmic scale.
Current limitations:

Y autoscale does not detect negative values, --lower-limit has to be used
Y axis labeling is missing

Can anybody help me to solve these problems?",if memory serves I am cutting values <=1 since there is a discontinuity,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,764,2017-01-25T13:32:15Z,2017-01-25T17:30:27Z,2017-03-01T15:11:52Z,MERGED,True,20,6,1,https://github.com/tvestelind,"restart rrdcached on upgrade, start and stop in install/uninstall",2,[],https://github.com/oetiker/rrdtool-1.x/pull/764,https://github.com/tvestelind,1,https://github.com/oetiker/rrdtool-1.x/pull/764,"While using this spec file we had problems when upgrading rrdtool-cached. The package had disabled autostarting rrdcached due to the order of which the RPM scriptlets are run (pre, post new package then preun, postun old package) when doing an upgrade.
To mitigate the problem where the old pre- and postun scriplets are executed during and upgrade I added the %posttrans scriptlet which is run absolute last.
Values and recommendation taken from: https://fedoraproject.org/wiki/Packaging:Scriptlets
Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com","While using this spec file we had problems when upgrading rrdtool-cached. The package had disabled autostarting rrdcached due to the order of which the RPM scriptlets are run (pre, post new package then preun, postun old package) when doing an upgrade.
To mitigate the problem where the old pre- and postun scriplets are executed during and upgrade I added the %posttrans scriptlet which is run absolute last.
Values and recommendation taken from: https://fedoraproject.org/wiki/Packaging:Scriptlets
Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,764,2017-01-25T13:32:15Z,2017-01-25T17:30:27Z,2017-03-01T15:11:52Z,MERGED,True,20,6,1,https://github.com/tvestelind,"restart rrdcached on upgrade, start and stop in install/uninstall",2,[],https://github.com/oetiker/rrdtool-1.x/pull/764,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/764#issuecomment-275174889,"While using this spec file we had problems when upgrading rrdtool-cached. The package had disabled autostarting rrdcached due to the order of which the RPM scriptlets are run (pre, post new package then preun, postun old package) when doing an upgrade.
To mitigate the problem where the old pre- and postun scriplets are executed during and upgrade I added the %posttrans scriptlet which is run absolute last.
Values and recommendation taken from: https://fedoraproject.org/wiki/Packaging:Scriptlets
Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,767,2017-02-07T13:22:28Z,2017-02-17T15:33:17Z,2017-02-17T15:33:24Z,MERGED,True,193,80,8,https://github.com/Marek77,rrd_list: adds --recursive option (daemon: LIST [RECURSIVE] /<path..>),2,[],https://github.com/oetiker/rrdtool-1.x/pull/767,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/767,"This behaves similarly to 'ls -R' but limited to rrd files (listing all the rrd bases in the subtree of <path>, skipping empty directories).
Example:
(this is the daemon's filesystem; ""/"" is at storage/data/, anything without a suffix is a directory)
$ tree storage/data/
storage/data/
|-- a
|   `-- b
|       |-- file.rrd
|       `-- g
|-- c
|   |-- d
|   |-- e
|   `-- f.rrd
|-- file.h
`-- i

A non-recursive ""list"" gives the rrd files (none) and directories in the ""/"" (both with --daemon, directly, and via the telnet interface):
$ rrdtool list --daemon 127.0.0.1:42218  /
i
c
a

$ rrdtool list storage/data/
i
c
a

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST /
3 RRDs
i
c
a

The recursive ""list"" finds all the rrd files under ""/"":
$ rrdtool list --daemon 127.0.0.1:42218 --recursive /
c/f.rrd
a/b/file.rrd

$ rrdtool list -r storage/data/
c/f.rrd
a/b/file.rrd

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST RECURSIVE /
2 RRDs
c/f.rrd
a/b/file.rrd","This behaves similarly to 'ls -R' but limited to rrd files (listing all the rrd bases in the subtree of <path>, skipping empty directories).
Example:
(this is the daemon's filesystem; ""/"" is at storage/data/, anything without a suffix is a directory)
$ tree storage/data/
storage/data/
|-- a
|   `-- b
|       |-- file.rrd
|       `-- g
|-- c
|   |-- d
|   |-- e
|   `-- f.rrd
|-- file.h
`-- i

A non-recursive ""list"" gives the rrd files (none) and directories in the ""/"" (both with --daemon, directly, and via the telnet interface):
$ rrdtool list --daemon 127.0.0.1:42218  /
i
c
a

$ rrdtool list storage/data/
i
c
a

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST /
3 RRDs
i
c
a

The recursive ""list"" finds all the rrd files under ""/"":
$ rrdtool list --daemon 127.0.0.1:42218 --recursive /
c/f.rrd
a/b/file.rrd

$ rrdtool list -r storage/data/
c/f.rrd
a/b/file.rrd

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST RECURSIVE /
2 RRDs
c/f.rrd
a/b/file.rrd",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,767,2017-02-07T13:22:28Z,2017-02-17T15:33:17Z,2017-02-17T15:33:24Z,MERGED,True,193,80,8,https://github.com/Marek77,rrd_list: adds --recursive option (daemon: LIST [RECURSIVE] /<path..>),2,[],https://github.com/oetiker/rrdtool-1.x/pull/767,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/767#issuecomment-280374871,"This behaves similarly to 'ls -R' but limited to rrd files (listing all the rrd bases in the subtree of <path>, skipping empty directories).
Example:
(this is the daemon's filesystem; ""/"" is at storage/data/, anything without a suffix is a directory)
$ tree storage/data/
storage/data/
|-- a
|   `-- b
|       |-- file.rrd
|       `-- g
|-- c
|   |-- d
|   |-- e
|   `-- f.rrd
|-- file.h
`-- i

A non-recursive ""list"" gives the rrd files (none) and directories in the ""/"" (both with --daemon, directly, and via the telnet interface):
$ rrdtool list --daemon 127.0.0.1:42218  /
i
c
a

$ rrdtool list storage/data/
i
c
a

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST /
3 RRDs
i
c
a

The recursive ""list"" finds all the rrd files under ""/"":
$ rrdtool list --daemon 127.0.0.1:42218 --recursive /
c/f.rrd
a/b/file.rrd

$ rrdtool list -r storage/data/
c/f.rrd
a/b/file.rrd

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST RECURSIVE /
2 RRDs
c/f.rrd
a/b/file.rrd",oops ... the python merge broke the patch ... could you please rebase,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,767,2017-02-07T13:22:28Z,2017-02-17T15:33:17Z,2017-02-17T15:33:24Z,MERGED,True,193,80,8,https://github.com/Marek77,rrd_list: adds --recursive option (daemon: LIST [RECURSIVE] /<path..>),2,[],https://github.com/oetiker/rrdtool-1.x/pull/767,https://github.com/Marek77,3,https://github.com/oetiker/rrdtool-1.x/pull/767#issuecomment-280591679,"This behaves similarly to 'ls -R' but limited to rrd files (listing all the rrd bases in the subtree of <path>, skipping empty directories).
Example:
(this is the daemon's filesystem; ""/"" is at storage/data/, anything without a suffix is a directory)
$ tree storage/data/
storage/data/
|-- a
|   `-- b
|       |-- file.rrd
|       `-- g
|-- c
|   |-- d
|   |-- e
|   `-- f.rrd
|-- file.h
`-- i

A non-recursive ""list"" gives the rrd files (none) and directories in the ""/"" (both with --daemon, directly, and via the telnet interface):
$ rrdtool list --daemon 127.0.0.1:42218  /
i
c
a

$ rrdtool list storage/data/
i
c
a

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST /
3 RRDs
i
c
a

The recursive ""list"" finds all the rrd files under ""/"":
$ rrdtool list --daemon 127.0.0.1:42218 --recursive /
c/f.rrd
a/b/file.rrd

$ rrdtool list -r storage/data/
c/f.rrd
a/b/file.rrd

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST RECURSIVE /
2 RRDs
c/f.rrd
a/b/file.rrd",I have rebased on top of 6863af5.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,767,2017-02-07T13:22:28Z,2017-02-17T15:33:17Z,2017-02-17T15:33:24Z,MERGED,True,193,80,8,https://github.com/Marek77,rrd_list: adds --recursive option (daemon: LIST [RECURSIVE] /<path..>),2,[],https://github.com/oetiker/rrdtool-1.x/pull/767,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/767#issuecomment-280681543,"This behaves similarly to 'ls -R' but limited to rrd files (listing all the rrd bases in the subtree of <path>, skipping empty directories).
Example:
(this is the daemon's filesystem; ""/"" is at storage/data/, anything without a suffix is a directory)
$ tree storage/data/
storage/data/
|-- a
|   `-- b
|       |-- file.rrd
|       `-- g
|-- c
|   |-- d
|   |-- e
|   `-- f.rrd
|-- file.h
`-- i

A non-recursive ""list"" gives the rrd files (none) and directories in the ""/"" (both with --daemon, directly, and via the telnet interface):
$ rrdtool list --daemon 127.0.0.1:42218  /
i
c
a

$ rrdtool list storage/data/
i
c
a

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST /
3 RRDs
i
c
a

The recursive ""list"" finds all the rrd files under ""/"":
$ rrdtool list --daemon 127.0.0.1:42218 --recursive /
c/f.rrd
a/b/file.rrd

$ rrdtool list -r storage/data/
c/f.rrd
a/b/file.rrd

$ telnet 127.0.0.1 42218
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
LIST RECURSIVE /
2 RRDs
c/f.rrd
a/b/file.rrd",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,771,2017-03-02T13:07:48Z,2017-03-02T13:10:55Z,2017-03-02T13:18:50Z,MERGED,True,47,19,1,https://github.com/tvestelind,use systemd macros for rrdcached in rpm spec file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/771,https://github.com/tvestelind,1,https://github.com/oetiker/rrdtool-1.x/pull/771,"I've added:

a variable to control whether or not to build for systemd
systemd-provided macros in the RPM spec-file according what Fedora
recommends here:

https://fedoraproject.org/wiki/Packaging:Scriptlets?rd=Packaging:ScriptletSnippets#Systemd and
https://fedoraproject.org/wiki/Packaging:Systemd#Packaging



Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com","I've added:

a variable to control whether or not to build for systemd
systemd-provided macros in the RPM spec-file according what Fedora
recommends here:

https://fedoraproject.org/wiki/Packaging:Scriptlets?rd=Packaging:ScriptletSnippets#Systemd and
https://fedoraproject.org/wiki/Packaging:Systemd#Packaging



Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,771,2017-03-02T13:07:48Z,2017-03-02T13:10:55Z,2017-03-02T13:18:50Z,MERGED,True,47,19,1,https://github.com/tvestelind,use systemd macros for rrdcached in rpm spec file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/771,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/771#issuecomment-283649377,"I've added:

a variable to control whether or not to build for systemd
systemd-provided macros in the RPM spec-file according what Fedora
recommends here:

https://fedoraproject.org/wiki/Packaging:Scriptlets?rd=Packaging:ScriptletSnippets#Systemd and
https://fedoraproject.org/wiki/Packaging:Systemd#Packaging



Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,771,2017-03-02T13:07:48Z,2017-03-02T13:10:55Z,2017-03-02T13:18:50Z,MERGED,True,47,19,1,https://github.com/tvestelind,use systemd macros for rrdcached in rpm spec file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/771,https://github.com/tvestelind,3,https://github.com/oetiker/rrdtool-1.x/pull/771#issuecomment-283649689,"I've added:

a variable to control whether or not to build for systemd
systemd-provided macros in the RPM spec-file according what Fedora
recommends here:

https://fedoraproject.org/wiki/Packaging:Scriptlets?rd=Packaging:ScriptletSnippets#Systemd and
https://fedoraproject.org/wiki/Packaging:Systemd#Packaging



Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com","No problem :)
I just want to add that I haven't really tried that systemd macro. We define that macro differently in our version of this spec file so if you could look closely at that part it would be great :)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,771,2017-03-02T13:07:48Z,2017-03-02T13:10:55Z,2017-03-02T13:18:50Z,MERGED,True,47,19,1,https://github.com/tvestelind,use systemd macros for rrdcached in rpm spec file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/771,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/771#issuecomment-283650772,"I've added:

a variable to control whether or not to build for systemd
systemd-provided macros in the RPM spec-file according what Fedora
recommends here:

https://fedoraproject.org/wiki/Packaging:Scriptlets?rd=Packaging:ScriptletSnippets#Systemd and
https://fedoraproject.org/wiki/Packaging:Systemd#Packaging



Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com",well others willl I am not building RPMs myself,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,771,2017-03-02T13:07:48Z,2017-03-02T13:10:55Z,2017-03-02T13:18:50Z,MERGED,True,47,19,1,https://github.com/tvestelind,use systemd macros for rrdcached in rpm spec file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/771,https://github.com/tvestelind,5,https://github.com/oetiker/rrdtool-1.x/pull/771#issuecomment-283651013,"I've added:

a variable to control whether or not to build for systemd
systemd-provided macros in the RPM spec-file according what Fedora
recommends here:

https://fedoraproject.org/wiki/Packaging:Scriptlets?rd=Packaging:ScriptletSnippets#Systemd and
https://fedoraproject.org/wiki/Packaging:Systemd#Packaging



Signed-off-by: Tomas Vestelind tomas.vestelind@gmail.com","Ok, good. Thank :)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,772,2017-03-08T10:33:41Z,2017-03-10T18:05:33Z,2017-03-10T18:05:33Z,MERGED,True,1,1,1,https://github.com/Marek77,Makefile.am: Fix broken build on Fedora,1,[],https://github.com/oetiker/rrdtool-1.x/pull/772,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/772,"Fix the following build error:
make top_distdir=""bxrrdtool-1.6.1"" distdir=""bxrrdtool-1.6.1"" dist-hook
make[2]: Entering directory '/home/vficet/src/rrdtool-1.x'
cd bxrrdtool-1.6.1 && /usr/bin/perl -i -p -e 's/^\1ERSION.+/\1ERSION='1.6002';/' bindings/perl-*/*.pm
Reference to nonexistent group in regex; marked by <-- HERE in m/^\1 <-- HERE ERSION.+/ at -e line 1.
Makefile:933: recipe for target 'dist-hook' failed

Attempt at replacing $VERSION by $NUM_VERS was introduced in 6f1c862 but it seems that this code never did anything (make needs $$ in order to have a literal $). In the perl bindings RPM in /usr/lib64/perl5/vendor_perl/RRDs.pm I have:
$VERSION=1.4003;

and it does seem that NUM_VERS is a typo and it should have been NUMVERS:
$ grep -r NUM_VERS *   
Makefile.am:    $(AM_V_GEN)cd $(distdir) && $(PERL) -i -p -e 's/^\$VERSION.+/\$VERSION='$(NUM_VERS)';/' bindings/perl-*/*.pm
Makefile.in:    $(AM_V_GEN)cd $(distdir) && $(PERL) -i -p -e 's/^\$VERSION.+/\$VERSION='$(NUM_VERS)';/' bindings/perl-*/*.pm

$ grep -r NUMVERS * 
Makefile.in:NUMVERS = @NUMVERS@
bindings/lua/Makefile.in:NUMVERS = @NUMVERS@
bindings/tcl/Makefile.in:NUMVERS = @NUMVERS@
bindings/Makefile.in:NUMVERS = @NUMVERS@
configure:NUMVERS
configure:NUMVERS=1.6999
configure.ac:NUMVERS=1.6999
configure.ac:AC_SUBST(NUMVERS)
doc/Makefile.in:NUMVERS = @NUMVERS@
examples/Makefile.in:NUMVERS = @NUMVERS@
examples/rrdcached/Makefile.in:NUMVERS = @NUMVERS@
rrdtool-1.2-release:PERLVERS=`perl -n -e 'm/NUMVERS=(\d+\.\d+)/ && print $1' configure.ac`
rrdtool-release:PERLVERS=`perl -n -e 'm/NUMVERS=(\d+\.\d+)/ && print $1' configure.ac`
src/rrd_version.c:    return NUMVERS;
src/get_ver.awk:    if (match ($0, /^NUMVERS=/)) {
src/get_ver.awk:      if (match ($0, /@@NUMVERS@@/)) {
src/get_ver.awk:        gsub(""@@NUMVERS@@"", my_ver_num, $0);
src/get_ver.awk:    print ""RRD_NUMVERS = "" my_ver_num """";
src/Makefile.am:        -DNUMVERS=@NUMVERS@
src/Makefile.in:NUMVERS = @NUMVERS@
src/Makefile.in:        -DNUMVERS=@NUMVERS@
tests/Makefile.in:NUMVERS = @NUMVERS@
win32/rrd_config.h:#define NUMVERS             1.4999

By the way, this looks suspicious too...: win32/rrd_config.h:#define NUMVERS             1.4999","Fix the following build error:
make top_distdir=""bxrrdtool-1.6.1"" distdir=""bxrrdtool-1.6.1"" dist-hook
make[2]: Entering directory '/home/vficet/src/rrdtool-1.x'
cd bxrrdtool-1.6.1 && /usr/bin/perl -i -p -e 's/^\1ERSION.+/\1ERSION='1.6002';/' bindings/perl-*/*.pm
Reference to nonexistent group in regex; marked by <-- HERE in m/^\1 <-- HERE ERSION.+/ at -e line 1.
Makefile:933: recipe for target 'dist-hook' failed

Attempt at replacing $VERSION by $NUM_VERS was introduced in 6f1c862 but it seems that this code never did anything (make needs $$ in order to have a literal $). In the perl bindings RPM in /usr/lib64/perl5/vendor_perl/RRDs.pm I have:
$VERSION=1.4003;

and it does seem that NUM_VERS is a typo and it should have been NUMVERS:
$ grep -r NUM_VERS *   
Makefile.am:    $(AM_V_GEN)cd $(distdir) && $(PERL) -i -p -e 's/^\$VERSION.+/\$VERSION='$(NUM_VERS)';/' bindings/perl-*/*.pm
Makefile.in:    $(AM_V_GEN)cd $(distdir) && $(PERL) -i -p -e 's/^\$VERSION.+/\$VERSION='$(NUM_VERS)';/' bindings/perl-*/*.pm

$ grep -r NUMVERS * 
Makefile.in:NUMVERS = @NUMVERS@
bindings/lua/Makefile.in:NUMVERS = @NUMVERS@
bindings/tcl/Makefile.in:NUMVERS = @NUMVERS@
bindings/Makefile.in:NUMVERS = @NUMVERS@
configure:NUMVERS
configure:NUMVERS=1.6999
configure.ac:NUMVERS=1.6999
configure.ac:AC_SUBST(NUMVERS)
doc/Makefile.in:NUMVERS = @NUMVERS@
examples/Makefile.in:NUMVERS = @NUMVERS@
examples/rrdcached/Makefile.in:NUMVERS = @NUMVERS@
rrdtool-1.2-release:PERLVERS=`perl -n -e 'm/NUMVERS=(\d+\.\d+)/ && print $1' configure.ac`
rrdtool-release:PERLVERS=`perl -n -e 'm/NUMVERS=(\d+\.\d+)/ && print $1' configure.ac`
src/rrd_version.c:    return NUMVERS;
src/get_ver.awk:    if (match ($0, /^NUMVERS=/)) {
src/get_ver.awk:      if (match ($0, /@@NUMVERS@@/)) {
src/get_ver.awk:        gsub(""@@NUMVERS@@"", my_ver_num, $0);
src/get_ver.awk:    print ""RRD_NUMVERS = "" my_ver_num """";
src/Makefile.am:        -DNUMVERS=@NUMVERS@
src/Makefile.in:NUMVERS = @NUMVERS@
src/Makefile.in:        -DNUMVERS=@NUMVERS@
tests/Makefile.in:NUMVERS = @NUMVERS@
win32/rrd_config.h:#define NUMVERS             1.4999

By the way, this looks suspicious too...: win32/rrd_config.h:#define NUMVERS             1.4999",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,772,2017-03-08T10:33:41Z,2017-03-10T18:05:33Z,2017-03-10T18:05:33Z,MERGED,True,1,1,1,https://github.com/Marek77,Makefile.am: Fix broken build on Fedora,1,[],https://github.com/oetiker/rrdtool-1.x/pull/772,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/772#issuecomment-285741157,"Fix the following build error:
make top_distdir=""bxrrdtool-1.6.1"" distdir=""bxrrdtool-1.6.1"" dist-hook
make[2]: Entering directory '/home/vficet/src/rrdtool-1.x'
cd bxrrdtool-1.6.1 && /usr/bin/perl -i -p -e 's/^\1ERSION.+/\1ERSION='1.6002';/' bindings/perl-*/*.pm
Reference to nonexistent group in regex; marked by <-- HERE in m/^\1 <-- HERE ERSION.+/ at -e line 1.
Makefile:933: recipe for target 'dist-hook' failed

Attempt at replacing $VERSION by $NUM_VERS was introduced in 6f1c862 but it seems that this code never did anything (make needs $$ in order to have a literal $). In the perl bindings RPM in /usr/lib64/perl5/vendor_perl/RRDs.pm I have:
$VERSION=1.4003;

and it does seem that NUM_VERS is a typo and it should have been NUMVERS:
$ grep -r NUM_VERS *   
Makefile.am:    $(AM_V_GEN)cd $(distdir) && $(PERL) -i -p -e 's/^\$VERSION.+/\$VERSION='$(NUM_VERS)';/' bindings/perl-*/*.pm
Makefile.in:    $(AM_V_GEN)cd $(distdir) && $(PERL) -i -p -e 's/^\$VERSION.+/\$VERSION='$(NUM_VERS)';/' bindings/perl-*/*.pm

$ grep -r NUMVERS * 
Makefile.in:NUMVERS = @NUMVERS@
bindings/lua/Makefile.in:NUMVERS = @NUMVERS@
bindings/tcl/Makefile.in:NUMVERS = @NUMVERS@
bindings/Makefile.in:NUMVERS = @NUMVERS@
configure:NUMVERS
configure:NUMVERS=1.6999
configure.ac:NUMVERS=1.6999
configure.ac:AC_SUBST(NUMVERS)
doc/Makefile.in:NUMVERS = @NUMVERS@
examples/Makefile.in:NUMVERS = @NUMVERS@
examples/rrdcached/Makefile.in:NUMVERS = @NUMVERS@
rrdtool-1.2-release:PERLVERS=`perl -n -e 'm/NUMVERS=(\d+\.\d+)/ && print $1' configure.ac`
rrdtool-release:PERLVERS=`perl -n -e 'm/NUMVERS=(\d+\.\d+)/ && print $1' configure.ac`
src/rrd_version.c:    return NUMVERS;
src/get_ver.awk:    if (match ($0, /^NUMVERS=/)) {
src/get_ver.awk:      if (match ($0, /@@NUMVERS@@/)) {
src/get_ver.awk:        gsub(""@@NUMVERS@@"", my_ver_num, $0);
src/get_ver.awk:    print ""RRD_NUMVERS = "" my_ver_num """";
src/Makefile.am:        -DNUMVERS=@NUMVERS@
src/Makefile.in:NUMVERS = @NUMVERS@
src/Makefile.in:        -DNUMVERS=@NUMVERS@
tests/Makefile.in:NUMVERS = @NUMVERS@
win32/rrd_config.h:#define NUMVERS             1.4999

By the way, this looks suspicious too...: win32/rrd_config.h:#define NUMVERS             1.4999",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,775,2017-03-18T21:08:50Z,2017-03-21T16:08:39Z,2017-03-21T21:45:24Z,MERGED,True,1,1,1,https://github.com/sonertari,Fix oetiker/rrdtool-1.x#774,1,[],https://github.com/oetiker/rrdtool-1.x/pull/775,https://github.com/sonertari,1,https://github.com/oetiker/rrdtool-1.x/pull/775,A simple one liner,A simple one liner,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,775,2017-03-18T21:08:50Z,2017-03-21T16:08:39Z,2017-03-21T21:45:24Z,MERGED,True,1,1,1,https://github.com/sonertari,Fix oetiker/rrdtool-1.x#774,1,[],https://github.com/oetiker/rrdtool-1.x/pull/775,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/775#issuecomment-288129262,A simple one liner,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,777,2017-04-12T21:18:32Z,2017-04-13T06:51:05Z,2017-04-13T06:51:05Z,MERGED,True,521,0,2,https://github.com/urbalazs,Added Hungarian translation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/777,https://github.com/urbalazs,1,https://github.com/oetiker/rrdtool-1.x/pull/777,"Hi @oetiker
Here is the Hungarian translation for rrdtool.","Hi @oetiker
Here is the Hungarian translation for rrdtool.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,777,2017-04-12T21:18:32Z,2017-04-13T06:51:05Z,2017-04-13T06:51:05Z,MERGED,True,521,0,2,https://github.com/urbalazs,Added Hungarian translation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/777,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/777#issuecomment-293806162,"Hi @oetiker
Here is the Hungarian translation for rrdtool.",congrats :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,781,2017-05-04T10:02:27Z,2017-05-04T13:32:42Z,2017-05-04T13:34:33Z,MERGED,True,15,7,4,https://github.com/Marek77,Pr coverity,7,[],https://github.com/oetiker/rrdtool-1.x/pull/781,https://github.com/Marek77,1,https://github.com/oetiker/rrdtool-1.x/pull/781,A new Coverity run.,A new Coverity run.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,781,2017-05-04T10:02:27Z,2017-05-04T13:32:42Z,2017-05-04T13:34:33Z,MERGED,True,15,7,4,https://github.com/Marek77,Pr coverity,7,[],https://github.com/oetiker/rrdtool-1.x/pull/781,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/781#issuecomment-299185917,A new Coverity run.,thank you!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,787,2017-05-24T13:26:59Z,2017-05-26T05:56:57Z,2017-05-26T05:56:57Z,MERGED,True,16,0,8,https://github.com/svenpanne,Added missing GLib thread initialization.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/787,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/787,"Older GLib versions (< 2.32, e.g. the ones shipped with CentOS 5 and 6,
SLES11, Debian 6) need an explicit initialization to make things
thread-safe, see:
https://developer.gnome.org/glib/stable/glib-Deprecated-Thread-APIs.html#g-thread-init
RRDtools didn't do that, so you get random crashes in clients and the
rrdcached on those systems.  Now we make sure that GLib is properly
initialized before calling into it.","Older GLib versions (< 2.32, e.g. the ones shipped with CentOS 5 and 6,
SLES11, Debian 6) need an explicit initialization to make things
thread-safe, see:
https://developer.gnome.org/glib/stable/glib-Deprecated-Thread-APIs.html#g-thread-init
RRDtools didn't do that, so you get random crashes in clients and the
rrdcached on those systems.  Now we make sure that GLib is properly
initialized before calling into it.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,787,2017-05-24T13:26:59Z,2017-05-26T05:56:57Z,2017-05-26T05:56:57Z,MERGED,True,16,0,8,https://github.com/svenpanne,Added missing GLib thread initialization.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/787,https://github.com/svenpanne,2,https://github.com/oetiker/rrdtool-1.x/pull/787#issuecomment-303731787,"Older GLib versions (< 2.32, e.g. the ones shipped with CentOS 5 and 6,
SLES11, Debian 6) need an explicit initialization to make things
thread-safe, see:
https://developer.gnome.org/glib/stable/glib-Deprecated-Thread-APIs.html#g-thread-init
RRDtools didn't do that, so you get random crashes in clients and the
rrdcached on those systems.  Now we make sure that GLib is properly
initialized before calling into it.","OK, I've removed it from the export list, I wasn't sure about it, anyway.
BTW: This pull request is basically a patch for 1.5.4 we use in Check_MK for about a year now, ported to master. Alas, quite a few customers actually use such old distros with an ancient GLib, and we had quite a few bug reports for a crashing rrdcached on them. The crash itself was always deep within GLib, most of the time in its memory manager.
Let's see if I can make a few more pull requests out of our local patches, bringing them down to zero, so we can finally update our RRDtool version to the upcoming 1.7.0. :-)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,787,2017-05-24T13:26:59Z,2017-05-26T05:56:57Z,2017-05-26T05:56:57Z,MERGED,True,16,0,8,https://github.com/svenpanne,Added missing GLib thread initialization.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/787,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/787#issuecomment-303742776,"Older GLib versions (< 2.32, e.g. the ones shipped with CentOS 5 and 6,
SLES11, Debian 6) need an explicit initialization to make things
thread-safe, see:
https://developer.gnome.org/glib/stable/glib-Deprecated-Thread-APIs.html#g-thread-init
RRDtools didn't do that, so you get random crashes in clients and the
rrdcached on those systems.  Now we make sure that GLib is properly
initialized before calling into it.","Hi Sven

1.7.0 is out! I have just not announced it ... but if you send bugfixes I will do 1.7.1 quickly ...

1.7.0 has few features but mainly bugfixes

cheers
tobi
…
----- On May 24, 2017, at 3:57 PM, Sven Panne <notifications@github.com> wrote:
 OK, I've removed it from the export list, I wasn't sure about it, anyway.
 BTW: This pull request is basically a patch for 1.5.4 we use in Check_MK for
 about a year now, ported to master. Alas, quite a few customers actually use
 such old distros with an ancient GLib, and we had quite a few bug reports for a
 crashing rrdcached on them. The crash itself was always deep within GLib, most
 of the time in its memory manager.
 Let's see if I can make a few more pull requests out of our local patches,
 bringing them down to zero, so we can finally update our RRDtool version to the
 upcoming 1.7.0. :-)
 —
 You are receiving this because you commented.
 Reply to this email directly, [
 #787 (comment) | view
 it on GitHub ] , or [
 https://github.com/notifications/unsubscribe-auth/AAaM31QIovKFbEBhR4JIgsEbBRpp_2B3ks5r9DdZgaJpZM4NlGrb
 | mute the thread ] .

-- 
Tobi Oetiker, OETIKER+PARTNER AG, Aarweg 15 CH-4600 Olten, Switzerland
www.oetiker.ch tobi@oetiker.ch +41 62 775 9902",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,787,2017-05-24T13:26:59Z,2017-05-26T05:56:57Z,2017-05-26T05:56:57Z,MERGED,True,16,0,8,https://github.com/svenpanne,Added missing GLib thread initialization.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/787,https://github.com/svenpanne,4,https://github.com/oetiker/rrdtool-1.x/pull/787#issuecomment-303792104,"Older GLib versions (< 2.32, e.g. the ones shipped with CentOS 5 and 6,
SLES11, Debian 6) need an explicit initialization to make things
thread-safe, see:
https://developer.gnome.org/glib/stable/glib-Deprecated-Thread-APIs.html#g-thread-init
RRDtools didn't do that, so you get random crashes in clients and the
rrdcached on those systems.  Now we make sure that GLib is properly
initialized before calling into it.","No problem, the exact version doesn't really matter, even some recent daily snapshot will do. Our main concern is being closer to HEAD to reduce our patches and get the fixes from upstream. :-)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,788,2017-05-29T10:01:24Z,2017-05-29T11:43:49Z,2017-05-29T11:43:51Z,MERGED,True,61,6,2,https://github.com/svenpanne,Added -o option for logging into a file instead of using syslog.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/788,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/788,"For some use cases it is better to keep log output separated from the normal
syslog. To handle such scenarios, a new -o option has been added.
Fixed foreground logging on the way, too: There was a missing mutex for
avoiding intermingled output.","For some use cases it is better to keep log output separated from the normal
syslog. To handle such scenarios, a new -o option has been added.
Fixed foreground logging on the way, too: There was a missing mutex for
avoiding intermingled output.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,788,2017-05-29T10:01:24Z,2017-05-29T11:43:49Z,2017-05-29T11:43:51Z,MERGED,True,61,6,2,https://github.com/svenpanne,Added -o option for logging into a file instead of using syslog.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/788,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/788#issuecomment-304641525,"For some use cases it is better to keep log output separated from the normal
syslog. To handle such scenarios, a new -o option has been added.
Fixed foreground logging on the way, too: There was a missing mutex for
avoiding intermingled output.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/789,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.","On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/svenpanne,2,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-304667956,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.","FYI: The actual change without whitespace changes is quite small, just add ?w=1 to the GitHub URL...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-304685795,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.",could you please push again without whitespace change and to the reformatting in a separate PR,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/svenpanne,4,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-304786067,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.","OK, I've changed this PR to include only the non-whitespace changes. The change could even be smaller:


One can get away without using a new enum by using an int, but that is a bad idea in general because it makes the call sites quite obscure (What does a 0 mean? What is 1?). Boolean arguments are widely considered an antipattern already, so let's not make it worse... ;-)


If I see it correctly, one could avoid a new field in image_desc_t by checking e.g. its font_options member against NULL instead, but this is quite implicit. Making intentions explicit is always better, and the structure is already huge, so size doesn't really matter here.


But if you would like a minimal change, I'll be happy to upload a new version of this PR.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/bangert,5,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-304805507,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.",Nice. Whats the performance improvement (in rough numbers) you get from this change?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/svenpanne,6,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-304824639,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.","I don't have any concrete numbers at hand, but we ship a patched rrdcached with our software and use it heavily via our graphical frontend (https://mathias-kettner.de/cms_graphing.html). For larger installations at our customers we know that writing/retrieving RRD data is a kind of bottleneck, seeing substantial I/O and CPU load from the rrdcached. So every little improvement helps us.
In addition, this PR has only a tiny impact compared to an improvement in rrdcached's socket buffering scheme, which has quadratic(!) complexity at the moment. PR upcoming, stay tuned...
Furthermore, if I read our own Git logs correctly, the initial patch upon which this PR is based is from Tobi himself, somewhere in 2015. :-)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/oetiker,7,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-304911577,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.",@svenpanne ah ... the real authors got lost in the move to github ... so ... I actually can only claim authorship for 1 or 2 lines of rrdcached :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/svenpanne,8,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-306035923,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.","Just out of curiosity: Is something still missing to get this PR merged? Having this patch in upstream would be great, because it would bring our local patches down to zero.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,789,2017-05-29T13:58:59Z,2017-06-04T13:14:19Z,2017-06-04T13:14:19Z,MERGED,True,15,6,3,https://github.com/svenpanne,Do not initialize Cairo/Pango on export.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/789,https://github.com/oetiker,9,https://github.com/oetiker/rrdtool-1.x/pull/789#issuecomment-306039332,"On a heavily loaded rrdcached, initializing lots of unnecessary Cairo/Pango
data structures (surfaces, font-related structures, etc.) is not a good
idea. Do this only when we really want to draw something.",nothing is missing ... I just kept getting distracted while reviewing ... :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,790,2017-05-30T07:26:01Z,2017-05-31T12:15:53Z,2017-05-31T12:15:53Z,MERGED,True,4,0,2,https://github.com/svenpanne,Fixed declaration and export of rrd_dump_opt_r.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/790,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/790,"The previous state of affairs regarding rrd_dump_opt_r was a bit
inconsistent: The dynamic library didn't export it, while the static one
did.  So the right way to fix it will be exporting it in both variants,
because removing it from the static library would require a major version
change.  Furthermore, rrd_dump_opt_r is mentioned in the documentation at
librrd.pod, so this is another hint for the fix.
In addition, a C prototype was wmissing, so GCC complained about it.","The previous state of affairs regarding rrd_dump_opt_r was a bit
inconsistent: The dynamic library didn't export it, while the static one
did.  So the right way to fix it will be exporting it in both variants,
because removing it from the static library would require a major version
change.  Furthermore, rrd_dump_opt_r is mentioned in the documentation at
librrd.pod, so this is another hint for the fix.
In addition, a C prototype was wmissing, so GCC complained about it.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,790,2017-05-30T07:26:01Z,2017-05-31T12:15:53Z,2017-05-31T12:15:53Z,MERGED,True,4,0,2,https://github.com/svenpanne,Fixed declaration and export of rrd_dump_opt_r.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/790,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/790#issuecomment-305172370,"The previous state of affairs regarding rrd_dump_opt_r was a bit
inconsistent: The dynamic library didn't export it, while the static one
did.  So the right way to fix it will be exporting it in both variants,
because removing it from the static library would require a major version
change.  Furthermore, rrd_dump_opt_r is mentioned in the documentation at
librrd.pod, so this is another hint for the fix.
In addition, a C prototype was wmissing, so GCC complained about it.",sigh ...  ok,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,791,2017-05-30T07:54:58Z,2017-05-30T08:05:55Z,2017-05-30T08:05:55Z,MERGED,True,2,2,2,https://github.com/svenpanne,Do not specify -version-info for convenience libraries.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/791,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/791,"libtool warns about a useless -version-info flag for convenience libraries,
see:
http://git.savannah.gnu.org/cgit/libtool.git/tree/build-aux/ltmain.in#n6882
Let's just remove it, it doesn't serve a purpose.","libtool warns about a useless -version-info flag for convenience libraries,
see:
http://git.savannah.gnu.org/cgit/libtool.git/tree/build-aux/ltmain.in#n6882
Let's just remove it, it doesn't serve a purpose.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,791,2017-05-30T07:54:58Z,2017-05-30T08:05:55Z,2017-05-30T08:05:55Z,MERGED,True,2,2,2,https://github.com/svenpanne,Do not specify -version-info for convenience libraries.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/791,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/791#issuecomment-304805231,"libtool warns about a useless -version-info flag for convenience libraries,
see:
http://git.savannah.gnu.org/cgit/libtool.git/tree/build-aux/ltmain.in#n6882
Let's just remove it, it doesn't serve a purpose.",yep,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,792,2017-05-30T10:09:26Z,2017-05-31T12:14:43Z,2017-05-31T12:14:43Z,MERGED,True,66,77,1,https://github.com/svenpanne,Improved buffering,3,[],https://github.com/oetiker/rrdtool-1.x/pull/792,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/792,"This is an essential performance patch for rrdcached: Its internal socket buffering scheme had quadratic complexity, basically bringing down rrdcached to its knees for some FETCH commands. We had some use cases where rrdcached shuffled around 130GB(!) internally, although only a few hundred kB were ultimately written out to the socket.
To make the review a bit easier, I made 3 separate commits:

One purely mechanical change, encapsulating the acces to the write buffer, preparing the way for the next commit.
The crucial change: Distinguish between size and capacity, and grow the latter geometrically.
Reap the benefits.

I can squash the changes into a single commit if this is wanted.","This is an essential performance patch for rrdcached: Its internal socket buffering scheme had quadratic complexity, basically bringing down rrdcached to its knees for some FETCH commands. We had some use cases where rrdcached shuffled around 130GB(!) internally, although only a few hundred kB were ultimately written out to the socket.
To make the review a bit easier, I made 3 separate commits:

One purely mechanical change, encapsulating the acces to the write buffer, preparing the way for the next commit.
The crucial change: Distinguish between size and capacity, and grow the latter geometrically.
Reap the benefits.

I can squash the changes into a single commit if this is wanted.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,792,2017-05-30T10:09:26Z,2017-05-31T12:14:43Z,2017-05-31T12:14:43Z,MERGED,True,66,77,1,https://github.com/svenpanne,Improved buffering,3,[],https://github.com/oetiker/rrdtool-1.x/pull/792,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/792#issuecomment-305171736,"This is an essential performance patch for rrdcached: Its internal socket buffering scheme had quadratic complexity, basically bringing down rrdcached to its knees for some FETCH commands. We had some use cases where rrdcached shuffled around 130GB(!) internally, although only a few hundred kB were ultimately written out to the socket.
To make the review a bit easier, I made 3 separate commits:

One purely mechanical change, encapsulating the acces to the write buffer, preparing the way for the next commit.
The crucial change: Distinguish between size and capacity, and grow the latter geometrically.
Reap the benefits.

I can squash the changes into a single commit if this is wanted.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,793,2017-05-30T13:13:04Z,2017-05-31T12:10:42Z,2017-05-31T12:10:47Z,MERGED,True,164,2,2,https://github.com/svenpanne,Added SUSPEND/RESUME/SUSPENDALL/RESUMEALL commands.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/793,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/793,Suspending/resuming is essential to make e.g. backups of RRDs while rrdcached is running.,Suspending/resuming is essential to make e.g. backups of RRDs while rrdcached is running.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,793,2017-05-30T13:13:04Z,2017-05-31T12:10:42Z,2017-05-31T12:10:47Z,MERGED,True,164,2,2,https://github.com/svenpanne,Added SUSPEND/RESUME/SUSPENDALL/RESUMEALL commands.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/793,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/793#issuecomment-305171385,Suspending/resuming is essential to make e.g. backups of RRDs while rrdcached is running.,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,795,2017-06-11T11:47:26Z,2017-06-11T13:13:08Z,2017-06-11T14:58:10Z,MERGED,True,1,3,1,https://github.com/rubenk,Unconditionally include <stdint.h>,1,[],https://github.com/oetiker/rrdtool-1.x/pull/795,https://github.com/rubenk,1,https://github.com/oetiker/rrdtool-1.x/pull/795,"Code including rrd_client.h should not have to define HAVE_STDINT_H.
I accidentally bumped into this while porting Collectd's build system
from autotools to meson.","Code including rrd_client.h should not have to define HAVE_STDINT_H.
I accidentally bumped into this while porting Collectd's build system
from autotools to meson.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,795,2017-06-11T11:47:26Z,2017-06-11T13:13:08Z,2017-06-11T14:58:10Z,MERGED,True,1,3,1,https://github.com/rubenk,Unconditionally include <stdint.h>,1,[],https://github.com/oetiker/rrdtool-1.x/pull/795,https://github.com/rubenk,2,https://github.com/oetiker/rrdtool-1.x/pull/795#issuecomment-307634100,"Code including rrd_client.h should not have to define HAVE_STDINT_H.
I accidentally bumped into this while porting Collectd's build system
from autotools to meson.",Thank you Tobias!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,797,2017-06-26T11:33:13Z,2017-06-27T05:30:28Z,2017-06-27T05:30:28Z,MERGED,True,7,7,1,https://github.com/bangert,include the daemon name in the error message,1,[],https://github.com/oetiker/rrdtool-1.x/pull/797,https://github.com/bangert,1,https://github.com/oetiker/rrdtool-1.x/pull/797,"In our setup we have the same rrd file on two rrdcaches containing almost redundant data. (The data is collected at slightly different times and from a different location).
We then query this one file on both of those rrdcaches in order to have the redundant cache fill holes of the primary one. This works great.
rrdtool graph - --start=1497867373 --end=1498472173 --width=1000 --imgformat=JSONTIME \
DEF:rrd1=myrrd.rrd:OutUcastPkts:AVERAGE:daemon=rrd01 \
DEF:rrd2=myrrd.rrd:OutUcastPkts:AVERAGE:daemon=rrd02 \
CDEF:data=rrd1,UN,rrd2,rrd1,IF CDEF:result=data XPORT:result:result

Sometimes however the RRD file may not have been created yet on just one of the two caches. Then the query fails with an error like so:
ERROR: rrdcached: rrd_fetch_r failed: opening '/myrrd.rrd': No such file or directory

The problem is, that from the error alone it cannot be deducede, which rrdcache the error pertains to. Hence this patch which adds the daemon arg to the error message
ERROR: rrdcached@rrd01: rrd_fetch_r failed: opening 'myrrd.rrd': No such file or directory","In our setup we have the same rrd file on two rrdcaches containing almost redundant data. (The data is collected at slightly different times and from a different location).
We then query this one file on both of those rrdcaches in order to have the redundant cache fill holes of the primary one. This works great.
rrdtool graph - --start=1497867373 --end=1498472173 --width=1000 --imgformat=JSONTIME \
DEF:rrd1=myrrd.rrd:OutUcastPkts:AVERAGE:daemon=rrd01 \
DEF:rrd2=myrrd.rrd:OutUcastPkts:AVERAGE:daemon=rrd02 \
CDEF:data=rrd1,UN,rrd2,rrd1,IF CDEF:result=data XPORT:result:result

Sometimes however the RRD file may not have been created yet on just one of the two caches. Then the query fails with an error like so:
ERROR: rrdcached: rrd_fetch_r failed: opening '/myrrd.rrd': No such file or directory

The problem is, that from the error alone it cannot be deducede, which rrdcache the error pertains to. Hence this patch which adds the daemon arg to the error message
ERROR: rrdcached@rrd01: rrd_fetch_r failed: opening 'myrrd.rrd': No such file or directory",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,797,2017-06-26T11:33:13Z,2017-06-27T05:30:28Z,2017-06-27T05:30:28Z,MERGED,True,7,7,1,https://github.com/bangert,include the daemon name in the error message,1,[],https://github.com/oetiker/rrdtool-1.x/pull/797,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/797#issuecomment-311257130,"In our setup we have the same rrd file on two rrdcaches containing almost redundant data. (The data is collected at slightly different times and from a different location).
We then query this one file on both of those rrdcaches in order to have the redundant cache fill holes of the primary one. This works great.
rrdtool graph - --start=1497867373 --end=1498472173 --width=1000 --imgformat=JSONTIME \
DEF:rrd1=myrrd.rrd:OutUcastPkts:AVERAGE:daemon=rrd01 \
DEF:rrd2=myrrd.rrd:OutUcastPkts:AVERAGE:daemon=rrd02 \
CDEF:data=rrd1,UN,rrd2,rrd1,IF CDEF:result=data XPORT:result:result

Sometimes however the RRD file may not have been created yet on just one of the two caches. Then the query fails with an error like so:
ERROR: rrdcached: rrd_fetch_r failed: opening '/myrrd.rrd': No such file or directory

The problem is, that from the error alone it cannot be deducede, which rrdcache the error pertains to. Hence this patch which adds the daemon arg to the error message
ERROR: rrdcached@rrd01: rrd_fetch_r failed: opening 'myrrd.rrd': No such file or directory",makes sense ... thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,1,https://github.com/oetiker/rrdtool-1.x/pull/800,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-312784641,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",loking good to me ... and the testsuit seems happy too ! ... thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-312784692,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",have you done any performance measurements ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,4,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-312813121,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","No...
It would be interesting to check

the fix for READAHEAD to not use MADV_RANDOM has an effect
the fix to make READAHEAD work does not regress from 1)
the new madvise() on the RRD header page does not regress IO performance either.

Linux does not implement the drop-behind that I'm worrying about with the RRD header, so my test 3) should not show any improvement.
Regarding lock contention:
I don't have a big setup, I just installed cacti and smokeping on a home server. I'm not sure how to model a real-world heavily-loaded server.  In the first plan I was concerned about holding locks while drawing graphs, but then I learnt the grapher uses rrd_fetch, and so the lock only covers reading the data.
I notice something interesting about rrdcached.  Since readers first request a flush, it seems like readers will always be blocked by writes (which I think is fine), but writes will not tend to be blocked by readers.
There will be some small cpu overhead from additional syscalls (lock, and my extra madvise).
On Windows contended locks will cost extra cpu, from rrdtool waking up 100 times per second to check the lock.  Because I was too lazy to deal with this abomination and acquire a Windows build environment to compile-test the result.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,5,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-312814766,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","FIXME: _locking() on Windows says to make sure to unlock before close, because ""If a process terminates with a portion of a file locked or closes a file that has outstanding locks, the locks are unlocked by the operating system. However, the time it takes for the operating system to unlock these locks depends upon available system resources. Therefore, it is recommended that your process explicitly unlock all files it has locked when it terminates. If this is not done, access to these files may be denied if the operating system has not yet unlocked them.""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-312823687,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",@sourcejedi about the fixme  ... are you going to look into this ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,7,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-312859442,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","Sorry, yes.  I meant I need to fix it, so it shouldn't be merged yet.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,8,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313160519,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","Do you mind if I rebase this?  The ""Fix my Windows locking code"" commits being separate would be a pain for anyone who has to bisect this.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,9,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313165955,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",sure ... rebase and push --force,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,10,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313166202,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",I would actually sqash the whole thing ... github lets me do this when merging :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,11,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313166322,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",although at the moment CI is failing so there is another problem with the PR,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,12,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313218076,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","ERROR: rrdcached@������������������������������������������������������������������������������������������������������正1: Usage: LIST [RECURSIVE] /[]

haha this part isn't even new, but I'm probably going to look at it first :).",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,13,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313492781,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","I noticed this ret needs initializing.

Yup, that was the test failure.  And I noticed yet another oversight in my Windows locking.
I've squashed this down, and stripped out the non-interfering fixes for later.
My next task is a PR for the READAHEAD/madvise() fix.  I have a performance test that clearly shows READAHEAD was broken.  However, I need to look into this more.  Because It also showed that my commit which targeted READAHEAD actually regressed a bit - the best performance was caused by a different commit.  The times are slightly non-deterministic, but i can also see an exact difference in the number of ""major"" page faults.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,14,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313638655,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",are you happy with this one too ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/sourcejedi,15,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313642094,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.","Yep, I'd be happy for this to merge now.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,800,2017-07-03T17:15:00Z,2017-07-07T10:16:07Z,2017-07-07T10:16:12Z,MERGED,True,216,87,13,https://github.com/sourcejedi,add read locking through rrd_open(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/800,https://github.com/oetiker,16,https://github.com/oetiker/rrdtool-1.x/pull/800#issuecomment-313643903,"I guess since writes and reads may not be atomic in any event a
sensible locking for fetch might make sense in any way ...
your patches are welcome ...
cheers
tobi

The implementation is shaped slightly differently to the first plan in #799.  Please disregard the first plan, you can just read the messages for the commits with RRD_LOCK in the title.
I have not addressed the 2 already existing issues at the end of the #799 description.
This series is affected by numerous #ifdefs.  I have not tested it beyond make on my machine.  If you want to look at the preparatory commits first, that's cool (it should be trivial to rebase though, so I'm presenting this together for initial review).

Highlighted excerpt:
So RRD_LOCK|RRD_READONLY is intended to take a read lock, however I must
admit to limitations of this new code:


On the Windows _locking() function, read locks are treated the same as
write locks.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/locking


On rados, our write lock expires after 2 seconds.  This write-lock is
probably useful as a way to detect conflicts.  However I would not want
to rely on a lock that works like this to guarantee consistent reads for
a backup.  Fortunately rados implements snapshots, and when we write to
RRDs, we use a single atomic operation.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,801,2017-07-05T23:12:41Z,2017-07-06T21:35:06Z,2017-07-06T21:35:12Z,MERGED,True,2,2,2,https://github.com/sourcejedi,Fix noise encountered in testing,2,[],https://github.com/oetiker/rrdtool-1.x/pull/801,https://github.com/sourcejedi,1,https://github.com/oetiker/rrdtool-1.x/pull/801,"Fix noise encountered in testing #800.

OK: recursive list only lists rrd files
ERROR: rrdcached@������������������������������������������������������������������������������������������������������正1: Usage: LIST [RECURSIVE] /[<path>]
OK: escape from cached basedir via symlink denied","Fix noise encountered in testing #800.

OK: recursive list only lists rrd files
ERROR: rrdcached@������������������������������������������������������������������������������������������������������正1: Usage: LIST [RECURSIVE] /[<path>]
OK: escape from cached basedir via symlink denied",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,801,2017-07-05T23:12:41Z,2017-07-06T21:35:06Z,2017-07-06T21:35:12Z,MERGED,True,2,2,2,https://github.com/sourcejedi,Fix noise encountered in testing,2,[],https://github.com/oetiker/rrdtool-1.x/pull/801,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/801#issuecomment-313525976,"Fix noise encountered in testing #800.

OK: recursive list only lists rrd files
ERROR: rrdcached@������������������������������������������������������������������������������������������������������正1: Usage: LIST [RECURSIVE] /[<path>]
OK: escape from cached basedir via symlink denied",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,802,2017-07-07T09:31:47Z,2017-07-07T09:48:28Z,2017-07-07T09:48:28Z,MERGED,True,33,18,1,https://github.com/sourcejedi,Fix madvise (and fadvise),4,[],https://github.com/oetiker/rrdtool-1.x/pull/802,https://github.com/sourcejedi,1,https://github.com/oetiker/rrdtool-1.x/pull/802,"Excerpt:
Passing RRD_READAHEAD to rrd_open() had no effect on current linux.
Test:
for i in $(seq 50); do
  dd if=dns.rrd of=x/$i.rrd bs=1M oflag=direct 2>/dev/null
done
/usr/bin/time sh -c 'for i in x/*.rrd; do
  rrdtool dump $i >/dev/null
done'

Before:
6.52user 0.74system 0:09.46elapsed 76%CPU
(0avgtext+0avgdata 9796maxresident)k
204800inputs+0outputs (25600major+25112minor)pagefaults 0swaps

After:
5.82user 0.27system 0:06.57elapsed 92%CPU
(0avgtext+0avgdata 9740maxresident)k
204800inputs+0outputs (600major+27020minor)pagefaults 0swaps","Excerpt:
Passing RRD_READAHEAD to rrd_open() had no effect on current linux.
Test:
for i in $(seq 50); do
  dd if=dns.rrd of=x/$i.rrd bs=1M oflag=direct 2>/dev/null
done
/usr/bin/time sh -c 'for i in x/*.rrd; do
  rrdtool dump $i >/dev/null
done'

Before:
6.52user 0.74system 0:09.46elapsed 76%CPU
(0avgtext+0avgdata 9796maxresident)k
204800inputs+0outputs (25600major+25112minor)pagefaults 0swaps

After:
5.82user 0.27system 0:06.57elapsed 92%CPU
(0avgtext+0avgdata 9740maxresident)k
204800inputs+0outputs (600major+27020minor)pagefaults 0swaps",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,802,2017-07-07T09:31:47Z,2017-07-07T09:48:28Z,2017-07-07T09:48:28Z,MERGED,True,33,18,1,https://github.com/sourcejedi,Fix madvise (and fadvise),4,[],https://github.com/oetiker/rrdtool-1.x/pull/802,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/802#issuecomment-313638020,"Excerpt:
Passing RRD_READAHEAD to rrd_open() had no effect on current linux.
Test:
for i in $(seq 50); do
  dd if=dns.rrd of=x/$i.rrd bs=1M oflag=direct 2>/dev/null
done
/usr/bin/time sh -c 'for i in x/*.rrd; do
  rrdtool dump $i >/dev/null
done'

Before:
6.52user 0.74system 0:09.46elapsed 76%CPU
(0avgtext+0avgdata 9796maxresident)k
204800inputs+0outputs (25600major+25112minor)pagefaults 0swaps

After:
5.82user 0.27system 0:06.57elapsed 92%CPU
(0avgtext+0avgdata 9740maxresident)k
204800inputs+0outputs (600major+27020minor)pagefaults 0swaps",wow!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,803,2017-07-07T09:49:41Z,2017-07-08T10:53:46Z,2017-07-08T10:53:46Z,MERGED,True,52,58,7,https://github.com/sourcejedi,Recently discovered fixes,9,[],https://github.com/oetiker/rrdtool-1.x/pull/803,https://github.com/sourcejedi,1,https://github.com/oetiker/rrdtool-1.x/pull/803,"Fixes discovered during PR #800, #801, #802.  (Non-conflicting).
Ideally these would have been included as prep work... but #800 got out of control a bit :).","Fixes discovered during PR #800, #801, #802.  (Non-conflicting).
Ideally these would have been included as prep work... but #800 got out of control a bit :).",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,804,2017-07-07T13:06:16Z,2017-09-12T12:17:55Z,2017-09-12T20:08:17Z,MERGED,True,47,10,3,https://github.com/sourcejedi,Fix valgrind usage in tests,3,[],https://github.com/oetiker/rrdtool-1.x/pull/804,https://github.com/sourcejedi,1,https://github.com/oetiker/rrdtool-1.x/pull/804,"The memory error shown in #801 sneaked past the tests (and hence Travis CI didn't notice it).  Fix the test suite so it actually catches valgrind errors :).
This also caught one memory leak.","The memory error shown in #801 sneaked past the tests (and hence Travis CI didn't notice it).  Fix the test suite so it actually catches valgrind errors :).
This also caught one memory leak.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,804,2017-07-07T13:06:16Z,2017-09-12T12:17:55Z,2017-09-12T20:08:17Z,MERGED,True,47,10,3,https://github.com/sourcejedi,Fix valgrind usage in tests,3,[],https://github.com/oetiker/rrdtool-1.x/pull/804,https://github.com/sourcejedi,2,https://github.com/oetiker/rrdtool-1.x/pull/804#issuecomment-313732284,"The memory error shown in #801 sneaked past the tests (and hence Travis CI didn't notice it).  Fix the test suite so it actually catches valgrind errors :).
This also caught one memory leak.","Right.  The corrected version shows the grapher is leaky - Travis should fail.
I'm not going to touch the grapher, I think I've finished what I was interested in.
Thanks for the software!  Cacti (which uses RRD) is pretty useful to me.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,804,2017-07-07T13:06:16Z,2017-09-12T12:17:55Z,2017-09-12T20:08:17Z,MERGED,True,47,10,3,https://github.com/sourcejedi,Fix valgrind usage in tests,3,[],https://github.com/oetiker/rrdtool-1.x/pull/804,https://github.com/sourcejedi,3,https://github.com/oetiker/rrdtool-1.x/pull/804#issuecomment-328898707,"The memory error shown in #801 sneaked past the tests (and hence Travis CI didn't notice it).  Fix the test suite so it actually catches valgrind errors :).
This also caught one memory leak.","In case you ignored Travis due to more recent failures - allow me to te-iterate that this PR breaks CI, as there are unfixed leaks in the grapher.  And maybe more I was glossing over - one leak in xport and one memory error related to list?
I'm not sure you really wanted to merge this PR, unless someone is going to fix or skip the failing tests.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,804,2017-07-07T13:06:16Z,2017-09-12T12:17:55Z,2017-09-12T20:08:17Z,MERGED,True,47,10,3,https://github.com/sourcejedi,Fix valgrind usage in tests,3,[],https://github.com/oetiker/rrdtool-1.x/pull/804,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/804#issuecomment-328969256,"The memory error shown in #801 sneaked past the tests (and hence Travis CI didn't notice it).  Fix the test suite so it actually catches valgrind errors :).
This also caught one memory leak.","the problem was that valgrind tests started all to fail, so I have to look into this anyway, so I added your patch to at least have them fail sensibly :)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,804,2017-07-07T13:06:16Z,2017-09-12T12:17:55Z,2017-09-12T20:08:17Z,MERGED,True,47,10,3,https://github.com/sourcejedi,Fix valgrind usage in tests,3,[],https://github.com/oetiker/rrdtool-1.x/pull/804,https://github.com/sourcejedi,5,https://github.com/oetiker/rrdtool-1.x/pull/804#issuecomment-328969679,"The memory error shown in #801 sneaked past the tests (and hence Travis CI didn't notice it).  Fix the test suite so it actually catches valgrind errors :).
This also caught one memory leak.",Haha :).  Thanks for the update.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,809,2017-07-14T17:39:18Z,2017-07-21T06:20:59Z,2017-07-21T06:20:59Z,MERGED,True,7,16,1,https://github.com/stevenh,Return success for rrdcached pending on empty,1,[],https://github.com/oetiker/rrdtool-1.x/pull/809,https://github.com/stevenh,1,https://github.com/oetiker/rrdtool-1.x/pull/809,If we have no pending entries for a file return success with no entries instead of returning an error.,If we have no pending entries for a file return success with no entries instead of returning an error.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,809,2017-07-14T17:39:18Z,2017-07-21T06:20:59Z,2017-07-21T06:20:59Z,MERGED,True,7,16,1,https://github.com/stevenh,Return success for rrdcached pending on empty,1,[],https://github.com/oetiker/rrdtool-1.x/pull/809,https://github.com/stevenh,2,https://github.com/oetiker/rrdtool-1.x/pull/809#issuecomment-315420717,If we have no pending entries for a file return success with no entries instead of returning an error.,This fixes #808,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,810,2017-07-17T12:54:08Z,2017-07-18T11:44:54Z,2017-07-18T11:44:54Z,MERGED,True,1,1,1,https://github.com/stevenh,Added missing rrdcached CREATE options to docs,1,[],https://github.com/oetiker/rrdtool-1.x/pull/810,https://github.com/stevenh,1,https://github.com/oetiker/rrdtool-1.x/pull/810,Added -s  and -t  to the docs for rrdcached CREATE.,Added -s  and -t  to the docs for rrdcached CREATE.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,813,2017-07-20T06:33:39Z,2017-07-20T06:57:24Z,2017-07-20T06:57:24Z,MERGED,True,4,0,1,https://github.com/kinote,src/rrd_client.c: fix memory leak in rrd_client_info,1,[],https://github.com/oetiker/rrdtool-1.x/pull/813,https://github.com/kinote,1,https://github.com/oetiker/rrdtool-1.x/pull/813,"A string is being duplicated with strdup and the copy was not being
freed.","A string is being duplicated with strdup and the copy was not being
freed.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,815,2017-08-08T12:59:33Z,2017-08-08T13:02:10Z,2017-08-08T13:02:10Z,MERGED,True,1,1,1,https://github.com/flumm,correct the note in the perl binding about the empty filename,1,[],https://github.com/oetiker/rrdtool-1.x/pull/815,https://github.com/flumm,1,https://github.com/oetiker/rrdtool-1.x/pull/815,"passing an empty filename to graphv does not work anymore, but the
documentation of the perl-shared binding still said so
correctly note that you have to pass '-'
Signed-off-by: Dominik Csapak d.csapak@proxmox.com","passing an empty filename to graphv does not work anymore, but the
documentation of the perl-shared binding still said so
correctly note that you have to pass '-'
Signed-off-by: Dominik Csapak d.csapak@proxmox.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,815,2017-08-08T12:59:33Z,2017-08-08T13:02:10Z,2017-08-08T13:02:10Z,MERGED,True,1,1,1,https://github.com/flumm,correct the note in the perl binding about the empty filename,1,[],https://github.com/oetiker/rrdtool-1.x/pull/815,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/815#issuecomment-320949014,"passing an empty filename to graphv does not work anymore, but the
documentation of the perl-shared binding still said so
correctly note that you have to pass '-'
Signed-off-by: Dominik Csapak d.csapak@proxmox.com",correct :) thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,817,2017-09-12T11:25:02Z,2017-09-12T12:00:21Z,2017-09-12T14:11:09Z,MERGED,True,140,5,4,https://github.com/medranocalvo,Build fixes tcl commands,6,[],https://github.com/oetiker/rrdtool-1.x/pull/817,https://github.com/medranocalvo,1,https://github.com/oetiker/rrdtool-1.x/pull/817,"Fixed build system for separate build directory.
Improved Tcl package description.
Added Rrd::info and Rrd::first Tcl bindings.
Fixed memory leak in Rrd::lastupdate.

Best regards,
Adrián.","Fixed build system for separate build directory.
Improved Tcl package description.
Added Rrd::info and Rrd::first Tcl bindings.
Fixed memory leak in Rrd::lastupdate.

Best regards,
Adrián.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,817,2017-09-12T11:25:02Z,2017-09-12T12:00:21Z,2017-09-12T14:11:09Z,MERGED,True,140,5,4,https://github.com/medranocalvo,Build fixes tcl commands,6,[],https://github.com/oetiker/rrdtool-1.x/pull/817,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/817#issuecomment-328826180,"Fixed build system for separate build directory.
Improved Tcl package description.
Added Rrd::info and Rrd::first Tcl bindings.
Fixed memory leak in Rrd::lastupdate.

Best regards,
Adrián.","thanks for you contrib ... can you please check that your code passes the travis checks, AND make sure to NOT patch any of the generated files like Makefile.in or configure.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,817,2017-09-12T11:25:02Z,2017-09-12T12:00:21Z,2017-09-12T14:11:09Z,MERGED,True,140,5,4,https://github.com/medranocalvo,Build fixes tcl commands,6,[],https://github.com/oetiker/rrdtool-1.x/pull/817,https://github.com/medranocalvo,3,https://github.com/oetiker/rrdtool-1.x/pull/817#issuecomment-328828498,"Fixed build system for separate build directory.
Improved Tcl package description.
Added Rrd::info and Rrd::first Tcl bindings.
Fixed memory leak in Rrd::lastupdate.

Best regards,
Adrián.","Removed the generated file's changes.  Please, regenerate them after merging.
The CI issue is related to pangocairo and NOT to these changes (see below).
Thank you,
Adrián.

checking for pango_cairo_context_set_font_options in -lpangocairo-1.0... no
checking for pkg-config... (cached) pkg-config
configure: WARNING:
----------------------------------------------------------------------------

I found a copy of pkgconfig, but there is no pangocairo.pc file around.
You may want to set the PKG_CONFIG_PATH variable to point to its
location.
----------------------------------------------------------------------------

configure: WARNING:
----------------------------------------------------------------------------

I could not find a working copy of pangocairo. Check config.log for hints on why
this is the case. Maybe you need to set LDFLAGS and CPPFLAGS appropriately
so that compiler and the linker can find libpangocairo-1.0 and its header files. If
you have not installed pangocairo, you can get it either from its original home on
http://ftp.gnome.org/pub/GNOME/sources/pango/1.28
You can find also find an archive copy on
http://oss.oetiker.ch/rrdtool/pub/libs
The last tested version of pangocairo is 1.28.4.
LIBS=-lpng -lm  -ldbi -lglib-2.0
LDFLAGS=
CPPFLAGS= -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
----------------------------------------------------------------------------

checking for pango_font_map_create_context... no",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,817,2017-09-12T11:25:02Z,2017-09-12T12:00:21Z,2017-09-12T14:11:09Z,MERGED,True,140,5,4,https://github.com/medranocalvo,Build fixes tcl commands,6,[],https://github.com/oetiker/rrdtool-1.x/pull/817,https://github.com/medranocalvo,4,https://github.com/oetiker/rrdtool-1.x/pull/817#issuecomment-328865046,"Fixed build system for separate build directory.
Improved Tcl package description.
Added Rrd::info and Rrd::first Tcl bindings.
Fixed memory leak in Rrd::lastupdate.

Best regards,
Adrián.","Thank you.

Am 12.09.2017 um 13:56 schrieb Tobias Oetiker <notifications@github.com<mailto:notifications@github.com>>:


Merged #817<#817>.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#817 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AKcy0WlXz0OF9IlxPHkI47wcArHBQwEqks5shnJYgaJpZM4PUfue>.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,818,2017-09-12T15:42:38Z,2017-09-12T20:04:59Z,2017-09-12T20:04:59Z,MERGED,True,4,8,1,https://github.com/sourcejedi,Clean up 2 compiler warnings,2,[],https://github.com/oetiker/rrdtool-1.x/pull/818,https://github.com/sourcejedi,1,https://github.com/oetiker/rrdtool-1.x/pull/818,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,819,2017-09-12T15:43:07Z,2017-09-12T20:04:09Z,2017-09-12T20:04:09Z,MERGED,True,20,6,2,https://github.com/sourcejedi,2 fixes for rrdtool list,2,[],https://github.com/oetiker/rrdtool-1.x/pull/819,https://github.com/sourcejedi,1,https://github.com/oetiker/rrdtool-1.x/pull/819,"src/rrd_list.c: fix errno

rrd_daemon expected zero errno iff there was not an error
(but we forgot to provide it).
list = rrd_list_r(recursive, fullpath);
if (list == NULL) {
/* Empty directory listing */
if (errno == 0) {
goto out_send_response;
}

src/rrd_daemon.c: never compare uninitialized bytes

I don't think this caused the valgrind error in CI either.  It looks wrong
though.","src/rrd_list.c: fix errno

rrd_daemon expected zero errno iff there was not an error
(but we forgot to provide it).
list = rrd_list_r(recursive, fullpath);
if (list == NULL) {
/* Empty directory listing */
if (errno == 0) {
goto out_send_response;
}

src/rrd_daemon.c: never compare uninitialized bytes

I don't think this caused the valgrind error in CI either.  It looks wrong
though.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,820,2017-09-14T09:11:14Z,2017-09-14T13:46:23Z,2017-09-14T13:46:31Z,MERGED,True,7,3,1,https://github.com/c72578,Add missing files from win32 to Makefile.am,1,[],https://github.com/oetiker/rrdtool-1.x/pull/820,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/820,"Missing files were added in the Makefile.am to EXTRA_DIST
The extra files will be included in the tarball
See [rrd-users] message:
https://lists.oetiker.ch/pipermail/rrd-users/2016-August/020443.html","Missing files were added in the Makefile.am to EXTRA_DIST
The extra files will be included in the tarball
See [rrd-users] message:
https://lists.oetiker.ch/pipermail/rrd-users/2016-August/020443.html",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,820,2017-09-14T09:11:14Z,2017-09-14T13:46:23Z,2017-09-14T13:46:31Z,MERGED,True,7,3,1,https://github.com/c72578,Add missing files from win32 to Makefile.am,1,[],https://github.com/oetiker/rrdtool-1.x/pull/820,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/820#issuecomment-329486788,"Missing files were added in the Makefile.am to EXTRA_DIST
The extra files will be included in the tarball
See [rrd-users] message:
https://lists.oetiker.ch/pipermail/rrd-users/2016-August/020443.html",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,821,2017-09-18T11:11:41Z,2017-09-18T11:20:32Z,2017-09-18T11:20:32Z,MERGED,True,1,1,1,https://github.com/c72578,Fix error 'optind': undeclared identifier,1,[],https://github.com/oetiker/rrdtool-1.x/pull/821,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/821,"Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_tune.c(410): error C2065: 'optind': undeclared identifier
Use options.optind instead of optind
optind is a member of the struct options","Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_tune.c(410): error C2065: 'optind': undeclared identifier
Use options.optind instead of optind
optind is a member of the struct options",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,821,2017-09-18T11:11:41Z,2017-09-18T11:20:32Z,2017-09-18T11:20:32Z,MERGED,True,1,1,1,https://github.com/c72578,Fix error 'optind': undeclared identifier,1,[],https://github.com/oetiker/rrdtool-1.x/pull/821,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/821#issuecomment-330191254,"Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_tune.c(410): error C2065: 'optind': undeclared identifier
Use options.optind instead of optind
optind is a member of the struct options",excellent!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,822,2017-09-19T14:53:51Z,2017-09-19T15:35:47Z,2017-09-19T15:35:51Z,MERGED,True,11,0,1,https://github.com/c72578,Avoid using VLA in optparse.c under Windows (MSC),1,[],https://github.com/oetiker/rrdtool-1.x/pull/822,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/822,"Fixes compilation errors, when building under Windows (e.g. VS2015):
..\src\optparse.c(195): error C2057: expected constant expression
..\src\optparse.c(195): error C2466: cannot allocate an array of
constant size 0
..\src\optparse.c(195): error C2133: 'optstring': unknown size
Variable length arrays are not currently supported in Visual Studio
Use malloc() instead of variable length array in case of MSC","Fixes compilation errors, when building under Windows (e.g. VS2015):
..\src\optparse.c(195): error C2057: expected constant expression
..\src\optparse.c(195): error C2466: cannot allocate an array of
constant size 0
..\src\optparse.c(195): error C2133: 'optstring': unknown size
Variable length arrays are not currently supported in Visual Studio
Use malloc() instead of variable length array in case of MSC",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,822,2017-09-19T14:53:51Z,2017-09-19T15:35:47Z,2017-09-19T15:35:51Z,MERGED,True,11,0,1,https://github.com/c72578,Avoid using VLA in optparse.c under Windows (MSC),1,[],https://github.com/oetiker/rrdtool-1.x/pull/822,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/822#issuecomment-330579350,"Fixes compilation errors, when building under Windows (e.g. VS2015):
..\src\optparse.c(195): error C2057: expected constant expression
..\src\optparse.c(195): error C2466: cannot allocate an array of
constant size 0
..\src\optparse.c(195): error C2133: 'optstring': unknown size
Variable length arrays are not currently supported in Visual Studio
Use malloc() instead of variable length array in case of MSC",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,823,2017-09-20T08:42:18Z,2017-09-20T08:58:09Z,2017-09-20T09:43:13Z,MERGED,True,2,0,1,https://github.com/c72578,Include unistd.h only if HAVE_UNISTD_H is defined,1,[],https://github.com/oetiker/rrdtool-1.x/pull/823,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/823,"Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_create.c(18): fatal error C1083: Cannot open include file:
'unistd.h': No such file or directory","Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_create.c(18): fatal error C1083: Cannot open include file:
'unistd.h': No such file or directory",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,823,2017-09-20T08:42:18Z,2017-09-20T08:58:09Z,2017-09-20T09:43:13Z,MERGED,True,2,0,1,https://github.com/c72578,Include unistd.h only if HAVE_UNISTD_H is defined,1,[],https://github.com/oetiker/rrdtool-1.x/pull/823,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/823#issuecomment-330790082,"Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_create.c(18): fatal error C1083: Cannot open include file:
'unistd.h': No such file or directory","Hi Wolfgang, once you are through, will you publish new windows rrd binaries ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,823,2017-09-20T08:42:18Z,2017-09-20T08:58:09Z,2017-09-20T09:43:13Z,MERGED,True,2,0,1,https://github.com/c72578,Include unistd.h only if HAVE_UNISTD_H is defined,1,[],https://github.com/oetiker/rrdtool-1.x/pull/823,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/823#issuecomment-330801384,"Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_create.c(18): fatal error C1083: Cannot open include file:
'unistd.h': No such file or directory",Getting closer 😄,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,824,2017-09-23T15:30:21Z,2017-09-23T18:23:09Z,2017-09-23T18:23:09Z,MERGED,True,181,0,1,https://github.com/diphuaji,Add detailed PDP calculation logics explanation,10,[],https://github.com/oetiker/rrdtool-1.x/pull/824,https://github.com/diphuaji,1,https://github.com/oetiker/rrdtool-1.x/pull/824,"Detailed PDP calculation logics explanation with an example.
It provides an easy-to-understand explanation of how PDPs are produced, so new users can easily justify calculation results themselves.","Detailed PDP calculation logics explanation with an example.
It provides an easy-to-understand explanation of how PDPs are produced, so new users can easily justify calculation results themselves.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,824,2017-09-23T15:30:21Z,2017-09-23T18:23:09Z,2017-09-23T18:23:09Z,MERGED,True,181,0,1,https://github.com/diphuaji,Add detailed PDP calculation logics explanation,10,[],https://github.com/oetiker/rrdtool-1.x/pull/824,https://github.com/diphuaji,2,https://github.com/oetiker/rrdtool-1.x/pull/824#issuecomment-331646756,"Detailed PDP calculation logics explanation with an example.
It provides an easy-to-understand explanation of how PDPs are produced, so new users can easily justify calculation results themselves.","What's wrong with the travis...
I only edited a pod file.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,824,2017-09-23T15:30:21Z,2017-09-23T18:23:09Z,2017-09-23T18:23:09Z,MERGED,True,181,0,1,https://github.com/diphuaji,Add detailed PDP calculation logics explanation,10,[],https://github.com/oetiker/rrdtool-1.x/pull/824,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/824#issuecomment-331655684,"Detailed PDP calculation logics explanation with an example.
It provides an easy-to-understand explanation of how PDPs are produced, so new users can easily justify calculation results themselves.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,825,2017-09-25T04:35:17Z,2017-10-29T10:45:27Z,2017-10-29T10:45:36Z,MERGED,True,6,6,1,https://github.com/diphuaji,fix some grammar errors and typos,13,[],https://github.com/oetiker/rrdtool-1.x/pull/825,https://github.com/diphuaji,1,https://github.com/oetiker/rrdtool-1.x/pull/825,fix some grammar errors and typos,fix some grammar errors and typos,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,825,2017-09-25T04:35:17Z,2017-10-29T10:45:27Z,2017-10-29T10:45:36Z,MERGED,True,6,6,1,https://github.com/diphuaji,fix some grammar errors and typos,13,[],https://github.com/oetiker/rrdtool-1.x/pull/825,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/825#issuecomment-332423649,fix some grammar errors and typos,your patch does not apply to master ...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,825,2017-09-25T04:35:17Z,2017-10-29T10:45:27Z,2017-10-29T10:45:36Z,MERGED,True,6,6,1,https://github.com/diphuaji,fix some grammar errors and typos,13,[],https://github.com/oetiker/rrdtool-1.x/pull/825,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/825#issuecomment-333797184,fix some grammar errors and typos,@diphuaji can you please remove the conflicts from your patch ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,825,2017-09-25T04:35:17Z,2017-10-29T10:45:27Z,2017-10-29T10:45:36Z,MERGED,True,6,6,1,https://github.com/diphuaji,fix some grammar errors and typos,13,[],https://github.com/oetiker/rrdtool-1.x/pull/825,https://github.com/diphuaji,4,https://github.com/oetiker/rrdtool-1.x/pull/825#issuecomment-340252056,fix some grammar errors and typos,"@oetiker I have merged the conflicts. If there is anything I still need to do, please tell me.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,825,2017-09-25T04:35:17Z,2017-10-29T10:45:27Z,2017-10-29T10:45:36Z,MERGED,True,6,6,1,https://github.com/diphuaji,fix some grammar errors and typos,13,[],https://github.com/oetiker/rrdtool-1.x/pull/825,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/825#issuecomment-340252835,fix some grammar errors and typos,perfect ... thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,826,2017-09-26T13:07:08Z,2017-09-26T16:22:22Z,2017-09-26T16:22:26Z,MERGED,True,11,1,3,https://github.com/c72578,Fix further build errors under Windows,3,[],https://github.com/oetiker/rrdtool-1.x/pull/826,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/826,"src/strftime.c
Define tzname_ for Windows builds (MSC)

Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\strftime.c(248): error C2065: 'tzname': undeclared identifier
VS defines these variables with a leading underscore: _tzname

src/rrd_strtod.c
Include win32/rrd_config.h for def of strncasecmp

Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _strncasecmp

win32/rrd_config.h
Update win32/rrd_config.h, fix VS build errors

Fix typo: strcasencmp -> strncasecmp
Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _strncasecmp
Define S_ISREG(m)
Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _S_ISREG
Define HAVE_PCRE_COMPILE for Windows builds
Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_create.c(30): fatal error C1189: #error:
""you must have either glib with regexp support or libpcre""","src/strftime.c
Define tzname_ for Windows builds (MSC)

Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\strftime.c(248): error C2065: 'tzname': undeclared identifier
VS defines these variables with a leading underscore: _tzname

src/rrd_strtod.c
Include win32/rrd_config.h for def of strncasecmp

Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _strncasecmp

win32/rrd_config.h
Update win32/rrd_config.h, fix VS build errors

Fix typo: strcasencmp -> strncasecmp
Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _strncasecmp
Define S_ISREG(m)
Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _S_ISREG
Define HAVE_PCRE_COMPILE for Windows builds
Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_create.c(30): fatal error C1189: #error:
""you must have either glib with regexp support or libpcre""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,826,2017-09-26T13:07:08Z,2017-09-26T16:22:22Z,2017-09-26T16:22:26Z,MERGED,True,11,1,3,https://github.com/c72578,Fix further build errors under Windows,3,[],https://github.com/oetiker/rrdtool-1.x/pull/826,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/826#issuecomment-332254415,"src/strftime.c
Define tzname_ for Windows builds (MSC)

Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\strftime.c(248): error C2065: 'tzname': undeclared identifier
VS defines these variables with a leading underscore: _tzname

src/rrd_strtod.c
Include win32/rrd_config.h for def of strncasecmp

Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _strncasecmp

win32/rrd_config.h
Update win32/rrd_config.h, fix VS build errors

Fix typo: strcasencmp -> strncasecmp
Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _strncasecmp
Define S_ISREG(m)
Fixes error, when building under Windows (e.g. VS2015):
error LNK2001: unresolved external symbol _S_ISREG
Define HAVE_PCRE_COMPILE for Windows builds
Fixes compilation error, when building under Windows (e.g. VS2015):
..\src\rrd_create.c(30): fatal error C1189: #error:
""you must have either glib with regexp support or libpcre""",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,828,2017-10-02T16:10:47Z,2017-10-03T10:03:54Z,2017-10-03T10:03:54Z,MERGED,True,1645,64,13,https://github.com/c72578,"Fix further build errors under Windows, updates",8,[],https://github.com/oetiker/rrdtool-1.x/pull/828,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/828,"WIN32-BUILD-TIPS.txt
Update WIN32-BUILD-TIPS.txt

Modified links to newer versions of libraries
Added links for pcre

win32/librrd-4.def
Update librrd-4.def

rrd_flushall -> rrdc_flushall
Added further exports
Sorted alphabetically

win32/librrd-4.vcxproj
Update librrd-4.vcxproj

Changed CompileAsCpp to CompileAsC
Updated PlatformToolset from v120 to v140
Added gthread-2.0.lib;pcre.lib to AdditionalDependencies
Removed strftime=strftime_ from PreprocessorDefinitions
Added /FORCE:MULTIPLE to AdditionalOptions for now
Fixes win32comp.obj :
error LNK2005: _localtime_r, _gmtime_r, _ctime_r, _strtok_r
already defined in rrd_thread_safe_nt.obj
Removed rrd_getopt.c and rrd_getopt1.c, added optparse.c
Added further .c files to ClCompile, sorted alphabetically
Removed rrd_getopt.h
Added further .h files to ClInclude, sorted alphabetically

win32/rrdtool.vcxproj
Update rrdtool.vcxproj

Updated PlatformToolset from v120 to v140
Added intl.dll and pcre3.dll to copy PostBuildEvent

win32/rrdupdate.vcxproj
Update rrdupdate.vcxproj

Updated PlatformToolset from v120 to v140
Added intl.dll and pcre3.dll to copy PostBuildEvent
Added . to AdditionalIncludeDirectories for Debug|Win32

src/rrd_list.c
Include win32-glob.h, dirent.h, asprintf.h (MSC)

Fixes compilation errors, when building under Windows (e.g. VS2015):
..\src\rrd_list.c(4): fatal error C1083: Cannot open include file:
'glob.h': No such file or directory
..\src\rrd_list.c(9): fatal error C1083: Cannot open include file:
'dirent.h': No such file or directory
librrd-4.lib(rrd_list.obj) : error LNK2001:
unresolved external symbol _asprintf
Added includes for Windows builds (MSC):
""win32-glob.h"" from https://sourceforge.net/projects/sox/
""dirent.h""     from https://github.com/tronkko/dirent
""asprintf.h""   from http://asprintf.insanecoding.org

Add files required to build rrd_list.c (MSC)
The following files are added to the win32 directory
for building under Windows (e.g. VS2015):

asprintf.c, asprintf.h, vasprintf-msvc.c
from http://asprintf.insanecoding.org
dirent.h
from https://github.com/tronkko/dirent
win32-glob.c, win32-glob.h
from https://sourceforge.net/projects/sox/

win32/README
Remove spurious executable permission from README","WIN32-BUILD-TIPS.txt
Update WIN32-BUILD-TIPS.txt

Modified links to newer versions of libraries
Added links for pcre

win32/librrd-4.def
Update librrd-4.def

rrd_flushall -> rrdc_flushall
Added further exports
Sorted alphabetically

win32/librrd-4.vcxproj
Update librrd-4.vcxproj

Changed CompileAsCpp to CompileAsC
Updated PlatformToolset from v120 to v140
Added gthread-2.0.lib;pcre.lib to AdditionalDependencies
Removed strftime=strftime_ from PreprocessorDefinitions
Added /FORCE:MULTIPLE to AdditionalOptions for now
Fixes win32comp.obj :
error LNK2005: _localtime_r, _gmtime_r, _ctime_r, _strtok_r
already defined in rrd_thread_safe_nt.obj
Removed rrd_getopt.c and rrd_getopt1.c, added optparse.c
Added further .c files to ClCompile, sorted alphabetically
Removed rrd_getopt.h
Added further .h files to ClInclude, sorted alphabetically

win32/rrdtool.vcxproj
Update rrdtool.vcxproj

Updated PlatformToolset from v120 to v140
Added intl.dll and pcre3.dll to copy PostBuildEvent

win32/rrdupdate.vcxproj
Update rrdupdate.vcxproj

Updated PlatformToolset from v120 to v140
Added intl.dll and pcre3.dll to copy PostBuildEvent
Added . to AdditionalIncludeDirectories for Debug|Win32

src/rrd_list.c
Include win32-glob.h, dirent.h, asprintf.h (MSC)

Fixes compilation errors, when building under Windows (e.g. VS2015):
..\src\rrd_list.c(4): fatal error C1083: Cannot open include file:
'glob.h': No such file or directory
..\src\rrd_list.c(9): fatal error C1083: Cannot open include file:
'dirent.h': No such file or directory
librrd-4.lib(rrd_list.obj) : error LNK2001:
unresolved external symbol _asprintf
Added includes for Windows builds (MSC):
""win32-glob.h"" from https://sourceforge.net/projects/sox/
""dirent.h""     from https://github.com/tronkko/dirent
""asprintf.h""   from http://asprintf.insanecoding.org

Add files required to build rrd_list.c (MSC)
The following files are added to the win32 directory
for building under Windows (e.g. VS2015):

asprintf.c, asprintf.h, vasprintf-msvc.c
from http://asprintf.insanecoding.org
dirent.h
from https://github.com/tronkko/dirent
win32-glob.c, win32-glob.h
from https://sourceforge.net/projects/sox/

win32/README
Remove spurious executable permission from README",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,828,2017-10-02T16:10:47Z,2017-10-03T10:03:54Z,2017-10-03T10:03:54Z,MERGED,True,1645,64,13,https://github.com/c72578,"Fix further build errors under Windows, updates",8,[],https://github.com/oetiker/rrdtool-1.x/pull/828,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/828#issuecomment-333796974,"WIN32-BUILD-TIPS.txt
Update WIN32-BUILD-TIPS.txt

Modified links to newer versions of libraries
Added links for pcre

win32/librrd-4.def
Update librrd-4.def

rrd_flushall -> rrdc_flushall
Added further exports
Sorted alphabetically

win32/librrd-4.vcxproj
Update librrd-4.vcxproj

Changed CompileAsCpp to CompileAsC
Updated PlatformToolset from v120 to v140
Added gthread-2.0.lib;pcre.lib to AdditionalDependencies
Removed strftime=strftime_ from PreprocessorDefinitions
Added /FORCE:MULTIPLE to AdditionalOptions for now
Fixes win32comp.obj :
error LNK2005: _localtime_r, _gmtime_r, _ctime_r, _strtok_r
already defined in rrd_thread_safe_nt.obj
Removed rrd_getopt.c and rrd_getopt1.c, added optparse.c
Added further .c files to ClCompile, sorted alphabetically
Removed rrd_getopt.h
Added further .h files to ClInclude, sorted alphabetically

win32/rrdtool.vcxproj
Update rrdtool.vcxproj

Updated PlatformToolset from v120 to v140
Added intl.dll and pcre3.dll to copy PostBuildEvent

win32/rrdupdate.vcxproj
Update rrdupdate.vcxproj

Updated PlatformToolset from v120 to v140
Added intl.dll and pcre3.dll to copy PostBuildEvent
Added . to AdditionalIncludeDirectories for Debug|Win32

src/rrd_list.c
Include win32-glob.h, dirent.h, asprintf.h (MSC)

Fixes compilation errors, when building under Windows (e.g. VS2015):
..\src\rrd_list.c(4): fatal error C1083: Cannot open include file:
'glob.h': No such file or directory
..\src\rrd_list.c(9): fatal error C1083: Cannot open include file:
'dirent.h': No such file or directory
librrd-4.lib(rrd_list.obj) : error LNK2001:
unresolved external symbol _asprintf
Added includes for Windows builds (MSC):
""win32-glob.h"" from https://sourceforge.net/projects/sox/
""dirent.h""     from https://github.com/tronkko/dirent
""asprintf.h""   from http://asprintf.insanecoding.org

Add files required to build rrd_list.c (MSC)
The following files are added to the win32 directory
for building under Windows (e.g. VS2015):

asprintf.c, asprintf.h, vasprintf-msvc.c
from http://asprintf.insanecoding.org
dirent.h
from https://github.com/tronkko/dirent
win32-glob.c, win32-glob.h
from https://sourceforge.net/projects/sox/

win32/README
Remove spurious executable permission from README",wow! thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,829,2017-10-03T16:42:10Z,2017-10-03T19:05:49Z,2017-10-03T19:05:49Z,MERGED,True,79,53,5,https://github.com/c72578,"Update Makefile.msc, Windows build updates",5,[],https://github.com/oetiker/rrdtool-1.x/pull/829,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/829,"Add further Windows build files to .gitignore

Added the following lines, sorted alphabetically:

  /win32/*.VC.db
  /win32/*.VC.opendb
  /win32/.vs
  /win32/DebugDLL
  /win32/Static\ Debug

win32/Makefile.msc
Update Makefile.msc for Windows builds with nmake

Added comment with usage information on top of the file
Fixed typo CCPFlags -> CPPFLAGS
Changed from /TP (specifies C++ source files)
to /TC (specifies C source files)
Added zdll.lib gthread-2.0.lib pcre.lib to THIRD_PARTY_LIB
Removed rrd_getopt.obj and rrd_getopt1.obj from RRD_LIB_OBJ_LIST
added optparse.obj instead
Added further required .obj files to RRD_LIB_OBJ_LIST
Added deletion of win32*.obj to the clean section
Building of rrdcgi.exe: changed from rrd_getopt.obj
and rrd_getopt1.obj to optparse.obj
rc: include ./src, fixes:
./win32\rrd_config.h(119) : fatal error RC1015:
cannot open include file 'mkstemp.h'.
Added compilation of .c files in ./win32 folder

win32/librrd-4.vcxproj
Update librrd-4.vcxproj

Removed ../contrib/include/libpng12 from AdditionalIncludeDirectories
libpng12 has been updated to libpng14, but the include is not
necessary, because png.h is found in ../contrib/include too
Removed 
definitions are already in rrd_thread_safe_nt.c
Fixes win32comp.obj :
error LNK2005: _localtime_r, _gmtime_r, _ctime_r, _strtok_r
already defined in rrd_thread_safe_nt.obj
Removed /FORCE:MULTIPLE, which is not required any more after removal
of win32comp.c from compilation

win32/rrdtool.vcxproj
Update rrdtool.vcxproj

Removed: IgnoreSpecificDefaultLibraries LIBCMTD.lib;LIBCMT.lib
Fixes failing build in case of 'Debug|Win32'

win32/rrdupdate.vcxproj
Update rrdupdate.vcxproj

Added . to AdditionalIncludeDirectories for 'Static Debug|Win32'","Add further Windows build files to .gitignore

Added the following lines, sorted alphabetically:

  /win32/*.VC.db
  /win32/*.VC.opendb
  /win32/.vs
  /win32/DebugDLL
  /win32/Static\ Debug

win32/Makefile.msc
Update Makefile.msc for Windows builds with nmake

Added comment with usage information on top of the file
Fixed typo CCPFlags -> CPPFLAGS
Changed from /TP (specifies C++ source files)
to /TC (specifies C source files)
Added zdll.lib gthread-2.0.lib pcre.lib to THIRD_PARTY_LIB
Removed rrd_getopt.obj and rrd_getopt1.obj from RRD_LIB_OBJ_LIST
added optparse.obj instead
Added further required .obj files to RRD_LIB_OBJ_LIST
Added deletion of win32*.obj to the clean section
Building of rrdcgi.exe: changed from rrd_getopt.obj
and rrd_getopt1.obj to optparse.obj
rc: include ./src, fixes:
./win32\rrd_config.h(119) : fatal error RC1015:
cannot open include file 'mkstemp.h'.
Added compilation of .c files in ./win32 folder

win32/librrd-4.vcxproj
Update librrd-4.vcxproj

Removed ../contrib/include/libpng12 from AdditionalIncludeDirectories
libpng12 has been updated to libpng14, but the include is not
necessary, because png.h is found in ../contrib/include too
Removed 
definitions are already in rrd_thread_safe_nt.c
Fixes win32comp.obj :
error LNK2005: _localtime_r, _gmtime_r, _ctime_r, _strtok_r
already defined in rrd_thread_safe_nt.obj
Removed /FORCE:MULTIPLE, which is not required any more after removal
of win32comp.c from compilation

win32/rrdtool.vcxproj
Update rrdtool.vcxproj

Removed: IgnoreSpecificDefaultLibraries LIBCMTD.lib;LIBCMT.lib
Fixes failing build in case of 'Debug|Win32'

win32/rrdupdate.vcxproj
Update rrdupdate.vcxproj

Added . to AdditionalIncludeDirectories for 'Static Debug|Win32'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,829,2017-10-03T16:42:10Z,2017-10-03T19:05:49Z,2017-10-03T19:05:49Z,MERGED,True,79,53,5,https://github.com/c72578,"Update Makefile.msc, Windows build updates",5,[],https://github.com/oetiker/rrdtool-1.x/pull/829,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/829#issuecomment-333946185,"Add further Windows build files to .gitignore

Added the following lines, sorted alphabetically:

  /win32/*.VC.db
  /win32/*.VC.opendb
  /win32/.vs
  /win32/DebugDLL
  /win32/Static\ Debug

win32/Makefile.msc
Update Makefile.msc for Windows builds with nmake

Added comment with usage information on top of the file
Fixed typo CCPFlags -> CPPFLAGS
Changed from /TP (specifies C++ source files)
to /TC (specifies C source files)
Added zdll.lib gthread-2.0.lib pcre.lib to THIRD_PARTY_LIB
Removed rrd_getopt.obj and rrd_getopt1.obj from RRD_LIB_OBJ_LIST
added optparse.obj instead
Added further required .obj files to RRD_LIB_OBJ_LIST
Added deletion of win32*.obj to the clean section
Building of rrdcgi.exe: changed from rrd_getopt.obj
and rrd_getopt1.obj to optparse.obj
rc: include ./src, fixes:
./win32\rrd_config.h(119) : fatal error RC1015:
cannot open include file 'mkstemp.h'.
Added compilation of .c files in ./win32 folder

win32/librrd-4.vcxproj
Update librrd-4.vcxproj

Removed ../contrib/include/libpng12 from AdditionalIncludeDirectories
libpng12 has been updated to libpng14, but the include is not
necessary, because png.h is found in ../contrib/include too
Removed 
definitions are already in rrd_thread_safe_nt.c
Fixes win32comp.obj :
error LNK2005: _localtime_r, _gmtime_r, _ctime_r, _strtok_r
already defined in rrd_thread_safe_nt.obj
Removed /FORCE:MULTIPLE, which is not required any more after removal
of win32comp.c from compilation

win32/rrdtool.vcxproj
Update rrdtool.vcxproj

Removed: IgnoreSpecificDefaultLibraries LIBCMTD.lib;LIBCMT.lib
Fixes failing build in case of 'Debug|Win32'

win32/rrdupdate.vcxproj
Update rrdupdate.vcxproj

Added . to AdditionalIncludeDirectories for 'Static Debug|Win32'",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,830,2017-10-04T09:40:58Z,2017-10-04T09:49:16Z,2017-10-04T09:49:23Z,MERGED,True,16,14,6,https://github.com/c72578,"Update version, year for Windows builds, etc.",3,[],https://github.com/oetiker/rrdtool-1.x/pull/830,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/830,"Makefile.am
Add new files from win32 to Makefile.am

New files were added in the Makefile.am to EXTRA_DIST

win32/rrd_config.h
Update version for Windows builds to 1.7.0

Changed version from 1.4.999 to 1.7.0

win32/*.rc
Update Copyright year and ProductName in rc files

Change year from 2013 to 2017
Change ""ProductName"" from
""time-series data storage and display system"" to ""RRDtool""","Makefile.am
Add new files from win32 to Makefile.am

New files were added in the Makefile.am to EXTRA_DIST

win32/rrd_config.h
Update version for Windows builds to 1.7.0

Changed version from 1.4.999 to 1.7.0

win32/*.rc
Update Copyright year and ProductName in rc files

Change year from 2013 to 2017
Change ""ProductName"" from
""time-series data storage and display system"" to ""RRDtool""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,830,2017-10-04T09:40:58Z,2017-10-04T09:49:16Z,2017-10-04T09:49:23Z,MERGED,True,16,14,6,https://github.com/c72578,"Update version, year for Windows builds, etc.",3,[],https://github.com/oetiker/rrdtool-1.x/pull/830,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/830#issuecomment-334105317,"Makefile.am
Add new files from win32 to Makefile.am

New files were added in the Makefile.am to EXTRA_DIST

win32/rrd_config.h
Update version for Windows builds to 1.7.0

Changed version from 1.4.999 to 1.7.0

win32/*.rc
Update Copyright year and ProductName in rc files

Change year from 2013 to 2017
Change ""ProductName"" from
""time-series data storage and display system"" to ""RRDtool""",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,831,2017-10-09T07:33:17Z,2017-10-09T18:55:56Z,2017-10-09T18:55:56Z,MERGED,True,23,15,4,https://github.com/c72578,"Fix macro redefinition warnings, update win32 build tips, .gitignore",4,[],https://github.com/oetiker/rrdtool-1.x/pull/831,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/831,".gitignore
Add /contrib-x64 to .gitignore
WIN32-BUILD-TIPS.txt
Add gettext dependency to WIN32-BUILD-TIPS.txt

Provides intl.dll

win32/Makefile.msc
Use /MD instead of /MT for Windows builds

Change ""Use Run-Time Library"" to /MD like in the .vcxproj files
This fixes png display issues of ""rrdtool.exe graph"" within Cacti

win32/rrd_config.h
Fix macro redefinition warnings (MSVC)

Move inclusion of errno.h before the redefinition of ENOBUFS and ENOTCONN
undef ENOBUFS and ENOTCONN before redefinition
undef PATH_MAX before definition or redefinition
Make definition of isinf, isnan and snprintf conditional
if _MSC_VER < 1900
These are supported since Visual Studio 2015
Add comments and Visual Studio version details",".gitignore
Add /contrib-x64 to .gitignore
WIN32-BUILD-TIPS.txt
Add gettext dependency to WIN32-BUILD-TIPS.txt

Provides intl.dll

win32/Makefile.msc
Use /MD instead of /MT for Windows builds

Change ""Use Run-Time Library"" to /MD like in the .vcxproj files
This fixes png display issues of ""rrdtool.exe graph"" within Cacti

win32/rrd_config.h
Fix macro redefinition warnings (MSVC)

Move inclusion of errno.h before the redefinition of ENOBUFS and ENOTCONN
undef ENOBUFS and ENOTCONN before redefinition
undef PATH_MAX before definition or redefinition
Make definition of isinf, isnan and snprintf conditional
if _MSC_VER < 1900
These are supported since Visual Studio 2015
Add comments and Visual Studio version details",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,831,2017-10-09T07:33:17Z,2017-10-09T18:55:56Z,2017-10-09T18:55:56Z,MERGED,True,23,15,4,https://github.com/c72578,"Fix macro redefinition warnings, update win32 build tips, .gitignore",4,[],https://github.com/oetiker/rrdtool-1.x/pull/831,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/831#issuecomment-335254765,".gitignore
Add /contrib-x64 to .gitignore
WIN32-BUILD-TIPS.txt
Add gettext dependency to WIN32-BUILD-TIPS.txt

Provides intl.dll

win32/Makefile.msc
Use /MD instead of /MT for Windows builds

Change ""Use Run-Time Library"" to /MD like in the .vcxproj files
This fixes png display issues of ""rrdtool.exe graph"" within Cacti

win32/rrd_config.h
Fix macro redefinition warnings (MSVC)

Move inclusion of errno.h before the redefinition of ENOBUFS and ENOTCONN
undef ENOBUFS and ENOTCONN before redefinition
undef PATH_MAX before definition or redefinition
Make definition of isinf, isnan and snprintf conditional
if _MSC_VER < 1900
These are supported since Visual Studio 2015
Add comments and Visual Studio version details",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,832,2017-10-09T16:05:24Z,2017-10-09T18:56:37Z,2017-10-09T18:56:39Z,MERGED,True,3,3,3,https://github.com/c72578,Fix formal parameter different from declaration,1,[],https://github.com/oetiker/rrdtool-1.x/pull/832,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/832,"Fixes compiler warnings C4028 (MSVC):
formal parameter 2 different from declaration src\rrd_first.c 87
formal parameter 3 different from declaration src\rrd_graph_helper.c 1500
formal parameter 5 different from declaration src\rrd_modify.c 90","Fixes compiler warnings C4028 (MSVC):
formal parameter 2 different from declaration src\rrd_first.c 87
formal parameter 3 different from declaration src\rrd_graph_helper.c 1500
formal parameter 5 different from declaration src\rrd_modify.c 90",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,832,2017-10-09T16:05:24Z,2017-10-09T18:56:37Z,2017-10-09T18:56:39Z,MERGED,True,3,3,3,https://github.com/c72578,Fix formal parameter different from declaration,1,[],https://github.com/oetiker/rrdtool-1.x/pull/832,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/832#issuecomment-335254978,"Fixes compiler warnings C4028 (MSVC):
formal parameter 2 different from declaration src\rrd_first.c 87
formal parameter 3 different from declaration src\rrd_graph_helper.c 1500
formal parameter 5 different from declaration src\rrd_modify.c 90",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,833,2017-10-10T20:06:37Z,2017-10-10T20:58:13Z,2017-10-10T20:58:13Z,MERGED,True,13,14,5,https://github.com/c72578,"Use pcre from Win-builds, enables x64 builds",1,[],https://github.com/oetiker/rrdtool-1.x/pull/833,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/833,"Switch to newer version of pcre from Win-builds
http://win-builds.org/next/packages/windows_32/
http://win-builds.org/next/packages/windows_64/
Changed:
pcre3.dll -> libpcre-1.dll
pcre.lib -> libpcre-1.lib","Switch to newer version of pcre from Win-builds
http://win-builds.org/next/packages/windows_32/
http://win-builds.org/next/packages/windows_64/
Changed:
pcre3.dll -> libpcre-1.dll
pcre.lib -> libpcre-1.lib",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,834,2017-10-11T19:50:59Z,2017-10-11T20:58:24Z,2017-10-11T20:58:24Z,MERGED,True,3,0,1,https://github.com/c72578,Define HAVE_UINTPTR_T in rrd_config.h for Windows,1,[],https://github.com/oetiker/rrdtool-1.x/pull/834,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/834,"Fixes compilation error, when building for x64 under Windows (MSVC):
./src\rrd_snprintf.c(901): warning C4311: 'type cast':
pointer truncation from 'const char *' to 'unsigned long'
uintptr_t is a defined standard type in Visual Studio:
https://msdn.microsoft.com/en-us/library/323b6b3k.aspx","Fixes compilation error, when building for x64 under Windows (MSVC):
./src\rrd_snprintf.c(901): warning C4311: 'type cast':
pointer truncation from 'const char *' to 'unsigned long'
uintptr_t is a defined standard type in Visual Studio:
https://msdn.microsoft.com/en-us/library/323b6b3k.aspx",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,835,2017-10-13T12:57:39Z,2017-10-13T16:21:57Z,2017-10-13T16:21:57Z,MERGED,True,50,50,31,https://github.com/c72578,Fix some typos in comments,1,[],https://github.com/oetiker/rrdtool-1.x/pull/835,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/835,"Corrected observed typos in code comments and strings
Harmonize spelling of RRDtool:
RRDTool -> RRDtool","Corrected observed typos in code comments and strings
Harmonize spelling of RRDtool:
RRDTool -> RRDtool",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,838,2017-11-17T14:13:59Z,2017-11-18T11:06:28Z,2017-11-18T11:06:28Z,MERGED,True,2,2,1,https://github.com/c72578,Update rrdgraph_examples.pod,1,[],https://github.com/oetiker/rrdtool-1.x/pull/838,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/838,"Fix --img-format -> --imgformat
Remove duplicate word aberrant","Fix --img-format -> --imgformat
Remove duplicate word aberrant",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,838,2017-11-17T14:13:59Z,2017-11-18T11:06:28Z,2017-11-18T11:06:28Z,MERGED,True,2,2,1,https://github.com/c72578,Update rrdgraph_examples.pod,1,[],https://github.com/oetiker/rrdtool-1.x/pull/838,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/838#issuecomment-345435024,"Fix --img-format -> --imgformat
Remove duplicate word aberrant",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,839,2017-11-17T20:21:51Z,2017-11-18T10:51:53Z,2017-11-18T10:52:01Z,MERGED,True,8,16,6,https://github.com/c72578,"Define HAVE_G_REGEX_NEW, remove PCRE deps (MSVC)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/839,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/839,"Define HAVE_G_REGEX_NEW 1 in rrd_config.h
glib has g_regex_new since 2.14
Remove dependency on PCRE, which is not required any more","Define HAVE_G_REGEX_NEW 1 in rrd_config.h
glib has g_regex_new since 2.14
Remove dependency on PCRE, which is not required any more",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,839,2017-11-17T20:21:51Z,2017-11-18T10:51:53Z,2017-11-18T10:52:01Z,MERGED,True,8,16,6,https://github.com/c72578,"Define HAVE_G_REGEX_NEW, remove PCRE deps (MSVC)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/839,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/839#issuecomment-345434293,"Define HAVE_G_REGEX_NEW 1 in rrd_config.h
glib has g_regex_new since 2.14
Remove dependency on PCRE, which is not required any more",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,840,2017-11-21T13:16:52Z,2017-11-21T13:28:52Z,2017-11-21T13:28:52Z,MERGED,True,18,18,1,https://github.com/c72578,Sort librrd.sym alphabetically,1,[],https://github.com/oetiker/rrdtool-1.x/pull/840,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/840,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,841,2017-11-22T08:18:14Z,2017-11-22T12:29:36Z,2017-11-22T12:29:36Z,MERGED,True,34,34,2,https://github.com/c72578,"Update vcxproj files, fix debug builds (MSVC)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/841,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/841,"Solution configuration Debug|Win32: Changed MultiThreadedDebug to
MultiThreadedDebugDLL in rrdtool.vcxproj and rrdupdate.vcxproj.
Now the RuntimeLibrary setting is the same as in librrd-4.vcxproj.
Solution configuration Static Debug|Win32: Added double quotes around
$(TargetDir), because there is a space in ""Static Debug"". Fixes
failing copy commands of dlls by using ""$(TargetDir)"" now.","Solution configuration Debug|Win32: Changed MultiThreadedDebug to
MultiThreadedDebugDLL in rrdtool.vcxproj and rrdupdate.vcxproj.
Now the RuntimeLibrary setting is the same as in librrd-4.vcxproj.
Solution configuration Static Debug|Win32: Added double quotes around
$(TargetDir), because there is a space in ""Static Debug"". Fixes
failing copy commands of dlls by using ""$(TargetDir)"" now.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,842,2017-11-22T16:20:25Z,2017-11-22T19:29:38Z,2017-11-22T19:29:38Z,MERGED,True,3,1,1,https://github.com/commx,Don't decref Py_None in case,1,[],https://github.com/oetiker/rrdtool-1.x/pull/842,https://github.com/commx,1,https://github.com/oetiker/rrdtool-1.x/pull/842,"Don't decrease reference on Py_None, otherwise fatal Python errors may occur. This fixes a problem reported by an user on the upstream project.","Don't decrease reference on Py_None, otherwise fatal Python errors may occur. This fixes a problem reported by an user on the upstream project.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,843,2017-11-27T13:41:04Z,2017-11-27T14:31:39Z,2017-11-27T14:39:33Z,MERGED,True,34,6,3,https://github.com/mdujava,Added support for --allow-shrink with --rigid flag,2,[],https://github.com/oetiker/rrdtool-1.x/pull/843,https://github.com/mdujava,1,https://github.com/oetiker/rrdtool-1.x/pull/843,This is implementation of #48.,This is implementation of #48.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,843,2017-11-27T13:41:04Z,2017-11-27T14:31:39Z,2017-11-27T14:39:33Z,MERGED,True,34,6,3,https://github.com/mdujava,Added support for --allow-shrink with --rigid flag,2,[],https://github.com/oetiker/rrdtool-1.x/pull/843,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/843#issuecomment-347198489,This is implementation of #48.,much better ... thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,844,2017-11-27T14:11:12Z,2017-11-27T14:14:33Z,2017-12-25T13:12:31Z,MERGED,True,7,3,3,https://github.com/c72578,Fix build errors (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/844,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/844,"rrd.h, fixed build error:
rrd.h:66:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
Remark: MinGW-w64 has ssize_t and off_t
rrd_restore.c, fixed build error:
rrd_restore.c:29:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
rrd_utils.c, fixed build error:
rrd_utils.c:226:10: error: too many arguments to function 'mkdir'
if ((mkdir(pathname, mode) != 0) && (errno != EEXIST)) {","rrd.h, fixed build error:
rrd.h:66:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
Remark: MinGW-w64 has ssize_t and off_t
rrd_restore.c, fixed build error:
rrd_restore.c:29:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
rrd_utils.c, fixed build error:
rrd_utils.c:226:10: error: too many arguments to function 'mkdir'
if ((mkdir(pathname, mode) != 0) && (errno != EEXIST)) {",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,844,2017-11-27T14:11:12Z,2017-11-27T14:14:33Z,2017-12-25T13:12:31Z,MERGED,True,7,3,3,https://github.com/c72578,Fix build errors (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/844,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/844#issuecomment-353078275,"rrd.h, fixed build error:
rrd.h:66:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
Remark: MinGW-w64 has ssize_t and off_t
rrd_restore.c, fixed build error:
rrd_restore.c:29:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
rrd_utils.c, fixed build error:
rrd_utils.c:226:10: error: too many arguments to function 'mkdir'
if ((mkdir(pathname, mode) != 0) && (errno != EEXIST)) {","In the meantime I have prepared binaries using MinGW-w64 under Fedora 27, MSYS2 and MXE and uploaded here:
https://github.com/c72578/rrdtool-1.x/releases/tag/v1.7.0-MinGW-w64",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,844,2017-11-27T14:11:12Z,2017-11-27T14:14:33Z,2017-12-25T13:12:31Z,MERGED,True,7,3,3,https://github.com/c72578,Fix build errors (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/844,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/844#issuecomment-353092575,"rrd.h, fixed build error:
rrd.h:66:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
Remark: MinGW-w64 has ssize_t and off_t
rrd_restore.c, fixed build error:
rrd_restore.c:29:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
rrd_utils.c, fixed build error:
rrd_utils.c:226:10: error: too many arguments to function 'mkdir'
if ((mkdir(pathname, mode) != 0) && (errno != EEXIST)) {","wow!
is the process for building the binaries documente ?
do you also create the perl modules ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,844,2017-11-27T14:11:12Z,2017-11-27T14:14:33Z,2017-12-25T13:12:31Z,MERGED,True,7,3,3,https://github.com/c72578,Fix build errors (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/844,https://github.com/c72578,4,https://github.com/oetiker/rrdtool-1.x/pull/844#issuecomment-353868755,"rrd.h, fixed build error:
rrd.h:66:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
Remark: MinGW-w64 has ssize_t and off_t
rrd_restore.c, fixed build error:
rrd_restore.c:29:17: error: conflicting types for 'ssize_t'
typedef size_t ssize_t;
rrd_utils.c, fixed build error:
rrd_utils.c:226:10: error: too many arguments to function 'mkdir'
if ((mkdir(pathname, mode) != 0) && (errno != EEXIST)) {",I will prepare a PR with documentation for building using MinGW-w64 and come back to PERL later again.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,845,2017-11-28T08:23:15Z,2017-11-28T21:25:58Z,2017-11-28T21:26:08Z,MERGED,True,0,8,1,https://github.com/c72578,"Remove fdatasync, fsync from rrd_config_bottom.h",1,[],https://github.com/oetiker/rrdtool-1.x/pull/845,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/845,"fdatasync() has been removed since RRDtool v1.4.0.
See commit: fc968dd
fixes ""Can't compile with without fsync and fdatasync"" error
on systems, where HAVE_FDATASYNC or HAVE_FSYNC are not defined","fdatasync() has been removed since RRDtool v1.4.0.
See commit: fc968dd
fixes ""Can't compile with without fsync and fdatasync"" error
on systems, where HAVE_FDATASYNC or HAVE_FSYNC are not defined",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,845,2017-11-28T08:23:15Z,2017-11-28T21:25:58Z,2017-11-28T21:26:08Z,MERGED,True,0,8,1,https://github.com/c72578,"Remove fdatasync, fsync from rrd_config_bottom.h",1,[],https://github.com/oetiker/rrdtool-1.x/pull/845,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/845#issuecomment-347668814,"fdatasync() has been removed since RRDtool v1.4.0.
See commit: fc968dd
fixes ""Can't compile with without fsync and fdatasync"" error
on systems, where HAVE_FDATASYNC or HAVE_FSYNC are not defined",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,846,2017-11-29T14:28:51Z,2017-11-30T07:55:16Z,2017-11-30T07:55:16Z,MERGED,True,5,5,4,https://github.com/c72578,Use #ifdef instead of #if for HAVE_...,1,[],https://github.com/oetiker/rrdtool-1.x/pull/846,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/846,"Harmonizes usage of #ifdef also for:
HAVE_STRFTIME, HAVE_STDARG_H, HAVE_GETRUSAGE
Fixes compiler warnings like:
rrd_tool.c:468:5: warning: ""HAVE_GETRUSAGE"" is not defined,
evaluates to 0 [-Wundef]","Harmonizes usage of #ifdef also for:
HAVE_STRFTIME, HAVE_STDARG_H, HAVE_GETRUSAGE
Fixes compiler warnings like:
rrd_tool.c:468:5: warning: ""HAVE_GETRUSAGE"" is not defined,
evaluates to 0 [-Wundef]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,847,2017-12-01T11:52:51Z,2017-12-02T20:27:27Z,2017-12-02T20:27:27Z,MERGED,True,1,1,1,https://github.com/c72578,Add glob.h to configure.ac AC_CHECK_HEADERS,1,[],https://github.com/oetiker/rrdtool-1.x/pull/847,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/847,"Adds check for glob.h
Provides HAVE_GLOB_H","Adds check for glob.h
Provides HAVE_GLOB_H",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,848,2017-12-06T11:10:02Z,2017-12-06T22:28:39Z,2017-12-06T22:28:39Z,MERGED,True,22,4,7,https://github.com/c72578,Fix further build errors (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/848,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/848,"rrd_list.c: MinGW-w64 does not provide glob.h (yet?)
include win32/win32-glob.h using HAVE_GLOB_H. Fixes:
rrd_list.c:9:10: fatal error: glob.h: No such file or directory
#include <glob.h>
rrd_update.c: MinGW has gettimeofday() in time.h. Fixes:
rrd_update.c:46:12: error: conflicting types for 'gettimeofday'
static int gettimeofday(
rrd_tool.c: MinGW has not got getuid and mkdir only one argument.
Fixes:
rrd_tool.c:585:17: warning: nested extern declaration of 'getuid'
rrd_tool.c:632:16: error: too many arguments to function 'mkdir'
if(mkdir(argv[2], 0777)!=0){
rrd_tool.h:
MinGW-w64 provides localtime_r, ctime_r, gmtime_r, strtok_r
rrd_graph.c: MinGW has strftime and tzname.
Due to the resulting later include of time.h, fixes also:
rrd_graph.c:1558: undefined reference to 'localtime_r'
rrd_client.c: MinGW does not provide realpath, ""is_unix"" excluded.
Fixes:
rrd_client.c:113: undefined reference to 'realpath'
rrd_client.c:130: undefined reference to 'realpath'
rrd_rpncalc.c: include pthread.h. Fixes e.g.:
rrd_rpncalc.c:708: undefined reference to 'localtime_r'","rrd_list.c: MinGW-w64 does not provide glob.h (yet?)
include win32/win32-glob.h using HAVE_GLOB_H. Fixes:
rrd_list.c:9:10: fatal error: glob.h: No such file or directory
#include <glob.h>
rrd_update.c: MinGW has gettimeofday() in time.h. Fixes:
rrd_update.c:46:12: error: conflicting types for 'gettimeofday'
static int gettimeofday(
rrd_tool.c: MinGW has not got getuid and mkdir only one argument.
Fixes:
rrd_tool.c:585:17: warning: nested extern declaration of 'getuid'
rrd_tool.c:632:16: error: too many arguments to function 'mkdir'
if(mkdir(argv[2], 0777)!=0){
rrd_tool.h:
MinGW-w64 provides localtime_r, ctime_r, gmtime_r, strtok_r
rrd_graph.c: MinGW has strftime and tzname.
Due to the resulting later include of time.h, fixes also:
rrd_graph.c:1558: undefined reference to 'localtime_r'
rrd_client.c: MinGW does not provide realpath, ""is_unix"" excluded.
Fixes:
rrd_client.c:113: undefined reference to 'realpath'
rrd_client.c:130: undefined reference to 'realpath'
rrd_rpncalc.c: include pthread.h. Fixes e.g.:
rrd_rpncalc.c:708: undefined reference to 'localtime_r'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,849,2017-12-07T20:47:43Z,2017-12-10T14:31:48Z,2017-12-10T14:31:48Z,MERGED,True,4,1,1,https://github.com/c72578,Fix ctime_r configure error (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/849,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/849,"configure.ac: include pthread.h inside AC_LANG_PROGRAM
for ctime_r check if __MINGW32__ is defined
Fixes:
checking if ctime_r need special care to act posixly correct...
configure: error: Can't figure how to compile ctime_r","configure.ac: include pthread.h inside AC_LANG_PROGRAM
for ctime_r check if __MINGW32__ is defined
Fixes:
checking if ctime_r need special care to act posixly correct...
configure: error: Can't figure how to compile ctime_r",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,851,2017-12-14T20:14:10Z,2017-12-20T15:24:35Z,2017-12-20T15:24:36Z,MERGED,True,16,0,2,https://github.com/c72578,"Fix compiler warnings, llu lli 64bit (MinGW-w64)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/851,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/851,"time_t is of type 'long long int', when compiled for 64 bit Windows
(x86_64-w64-mingw32). Use %10llu instead of %10lu in printf and
%lli instead of %li in dprintf. Requires __USE_MINGW_ANSI_STDIO 1


Fixes: rrd_lastupdate.c: In function 'rrd_lastupdate':
rrd_lastupdate.c:76:18:
warning: format '%lu' expects argument of type 'long unsigned int',
but argument 2 has type 'time_t {aka long long int}' [-Wformat=]


Fixes: rrd_graph_helper.c: In function 'parse_shift':
rrd_graph_helper.c:1458:13:
warning: format '%li' expects argument of type 'long int',
but argument 3 has type 'time_t {aka long long int}' [-Wformat=]
dprintf(""SHIFTBY : %li\n"",gdp->shval);","time_t is of type 'long long int', when compiled for 64 bit Windows
(x86_64-w64-mingw32). Use %10llu instead of %10lu in printf and
%lli instead of %li in dprintf. Requires __USE_MINGW_ANSI_STDIO 1


Fixes: rrd_lastupdate.c: In function 'rrd_lastupdate':
rrd_lastupdate.c:76:18:
warning: format '%lu' expects argument of type 'long unsigned int',
but argument 2 has type 'time_t {aka long long int}' [-Wformat=]


Fixes: rrd_graph_helper.c: In function 'parse_shift':
rrd_graph_helper.c:1458:13:
warning: format '%li' expects argument of type 'long int',
but argument 3 has type 'time_t {aka long long int}' [-Wformat=]
dprintf(""SHIFTBY : %li\n"",gdp->shval);",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,853,2017-12-25T14:18:55Z,2017-12-25T18:03:03Z,2017-12-25T18:03:03Z,MERGED,True,69,1,2,https://github.com/c72578,Add documentation for building under MinGW-w64,1,[],https://github.com/oetiker/rrdtool-1.x/pull/853,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/853,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,853,2017-12-25T14:18:55Z,2017-12-25T18:03:03Z,2017-12-25T18:03:03Z,MERGED,True,69,1,2,https://github.com/c72578,Add documentation for building under MinGW-w64,1,[],https://github.com/oetiker/rrdtool-1.x/pull/853,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/853#issuecomment-353883018,,cool!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,854,2017-12-26T06:52:07Z,2017-12-26T14:05:45Z,2017-12-26T14:05:45Z,MERGED,True,27,8,3,https://github.com/c72578,"Check for MinGW-w64 build, add win32-glob files",2,[],https://github.com/oetiker/rrdtool-1.x/pull/854,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/854,"configure.ac: Add check for MinWG-w64 build during configure.
Pass the conditional MINGW_W64 to automake
src/Makefile.am: Add win32-glob.c to RRD_C_FILES and
win32-glob.h to noinst_HEADERS in case of MINGW_W64
Makefile.am: win32/win32-glob.c and win32/win32-glob.h are mentioned
in src/Makefile.am now. Removed from EXTRA_DIST
Enables out of the box configure and make for MinGW-w64 builds","configure.ac: Add check for MinWG-w64 build during configure.
Pass the conditional MINGW_W64 to automake
src/Makefile.am: Add win32-glob.c to RRD_C_FILES and
win32-glob.h to noinst_HEADERS in case of MINGW_W64
Makefile.am: win32/win32-glob.c and win32/win32-glob.h are mentioned
in src/Makefile.am now. Removed from EXTRA_DIST
Enables out of the box configure and make for MinGW-w64 builds",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,855,2017-12-29T10:05:50Z,2017-12-29T20:48:56Z,2017-12-29T20:48:56Z,MERGED,True,2,1,1,https://github.com/c72578,Add missing files to src/Makefile.am EXTRA_DIST,1,[],https://github.com/oetiker/rrdtool-1.x/pull/855,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/855,"src/Makefile.am, added to EXTRA_DIST:
mkstemp.c
mkstemp.h","src/Makefile.am, added to EXTRA_DIST:
mkstemp.c
mkstemp.h",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,855,2017-12-29T10:05:50Z,2017-12-29T20:48:56Z,2017-12-29T20:48:56Z,MERGED,True,2,1,1,https://github.com/c72578,Add missing files to src/Makefile.am EXTRA_DIST,1,[],https://github.com/oetiker/rrdtool-1.x/pull/855,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/855#issuecomment-354490503,"src/Makefile.am, added to EXTRA_DIST:
mkstemp.c
mkstemp.h",The PR has been amended and  compile_afm.pl removed,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,856,2017-12-31T14:04:06Z,2018-01-02T14:19:06Z,2018-01-02T14:19:07Z,MERGED,True,15,3,3,https://github.com/c72578,"Fix 64-bit time_t in fprintf, printf (MSVC)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/856,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/856,"In VS2005 and later, the default size for time_t is 64-bit, unless
_USE_32BIT_TIME_T has been defined to use a 32-bit time_t ...


Fixes MSVC compiler warnings:
./src\rrd_graph_helper.c(1465): warning C4477: 'fprintf' :
format string '%li' requires an argument of type 'long',
but variadic argument 1 has type 'time_t'
./src\rrd_lastupdate.c(83): warning C4477: 'printf' :
format string '%10lu' requires an argument of type 'unsigned long',
but variadic argument 1 has type 'time_t'
./src\rrd_tool.c(720): warning C4477: 'printf' : format string '%ld'
requires an argument of type 'long', but variadic argument 1 has type
'time_t'
./src\rrd_tool.c(724): warning C4477: 'printf' : format string '%ld'
requires an argument of type 'long', but variadic argument 1 has type
'time_t'
./src\rrd_tool.c(742): warning C4477: 'printf' : format string
'%10lu' requires an argument of type 'unsigned long', but variadic
argument 1 has type 'time_t'","In VS2005 and later, the default size for time_t is 64-bit, unless
_USE_32BIT_TIME_T has been defined to use a 32-bit time_t ...


Fixes MSVC compiler warnings:
./src\rrd_graph_helper.c(1465): warning C4477: 'fprintf' :
format string '%li' requires an argument of type 'long',
but variadic argument 1 has type 'time_t'
./src\rrd_lastupdate.c(83): warning C4477: 'printf' :
format string '%10lu' requires an argument of type 'unsigned long',
but variadic argument 1 has type 'time_t'
./src\rrd_tool.c(720): warning C4477: 'printf' : format string '%ld'
requires an argument of type 'long', but variadic argument 1 has type
'time_t'
./src\rrd_tool.c(724): warning C4477: 'printf' : format string '%ld'
requires an argument of type 'long', but variadic argument 1 has type
'time_t'
./src\rrd_tool.c(742): warning C4477: 'printf' : format string
'%10lu' requires an argument of type 'unsigned long', but variadic
argument 1 has type 'time_t'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,857,2018-01-02T10:14:02Z,2018-01-02T14:20:45Z,2018-01-02T14:20:45Z,MERGED,True,5,3,1,https://github.com/c72578,Fix expansion-to-defined warnings (GCC 7),1,[],https://github.com/oetiker/rrdtool-1.x/pull/857,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/857,"Fixed compiler warnings:
gettext.h:176:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:200:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:215:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:246:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:261:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS","Fixed compiler warnings:
gettext.h:176:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:200:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:215:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:246:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:261:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,857,2018-01-02T10:14:02Z,2018-01-02T14:20:45Z,2018-01-02T14:20:45Z,MERGED,True,5,3,1,https://github.com/c72578,Fix expansion-to-defined warnings (GCC 7),1,[],https://github.com/oetiker/rrdtool-1.x/pull/857,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/857#issuecomment-354767288,"Fixed compiler warnings:
gettext.h:176:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:200:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:215:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:246:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:261:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS","BTW, is there a special reason, why gettext.h is included in rrdtool in the src folder and not used from system includes?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,857,2018-01-02T10:14:02Z,2018-01-02T14:20:45Z,2018-01-02T14:20:45Z,MERGED,True,5,3,1,https://github.com/c72578,Fix expansion-to-defined warnings (GCC 7),1,[],https://github.com/oetiker/rrdtool-1.x/pull/857,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/857#issuecomment-354775873,"Fixed compiler warnings:
gettext.h:176:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:200:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:215:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:246:5: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
gettext.h:261:6: warning: this use of ""defined"" may not be portable
[-Wexpansion-to-defined] #if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS",it is included for systems that lack gettext support ... actually by default the system supplied gettext should be used,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,858,2018-01-03T19:47:36Z,2018-01-27T17:21:11Z,2018-01-27T17:21:11Z,MERGED,True,1,0,1,https://github.com/NHellFire,Add missing import in setup.py,1,[],https://github.com/oetiker/rrdtool-1.x/pull/858,https://github.com/NHellFire,1,https://github.com/oetiker/rrdtool-1.x/pull/858,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,860,2018-01-04T13:48:18Z,2018-01-04T17:40:56Z,2018-01-04T17:41:04Z,MERGED,True,37,38,15,https://github.com/c72578,Update documentation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/860,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/860,"Some typos corrected
Minor updates and corrections","Some typos corrected
Minor updates and corrections",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,860,2018-01-04T13:48:18Z,2018-01-04T17:40:56Z,2018-01-04T17:41:04Z,MERGED,True,37,38,15,https://github.com/c72578,Update documentation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/860,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/860#issuecomment-355348583,"Some typos corrected
Minor updates and corrections",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,862,2018-01-05T13:36:34Z,2018-01-05T14:13:16Z,2018-01-05T14:13:16Z,MERGED,True,15,3,1,https://github.com/yarda,Fixed configure --enable / --disable options,1,[],https://github.com/oetiker/rrdtool-1.x/pull/862,https://github.com/yarda,1,https://github.com/oetiker/rrdtool-1.x/pull/862,"E.g. now './configure --enable-libdbi' works.
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","E.g. now './configure --enable-libdbi' works.
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,862,2018-01-05T13:36:34Z,2018-01-05T14:13:16Z,2018-01-05T14:13:16Z,MERGED,True,15,3,1,https://github.com/yarda,Fixed configure --enable / --disable options,1,[],https://github.com/oetiker/rrdtool-1.x/pull/862,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/862#issuecomment-355563886,"E.g. now './configure --enable-libdbi' works.
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,864,2018-01-26T14:59:40Z,2018-01-26T15:11:58Z,2018-01-26T15:12:04Z,MERGED,True,18,18,7,https://github.com/c72578,Update documentation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/864,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/864,Some typos corrected,Some typos corrected,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,864,2018-01-26T14:59:40Z,2018-01-26T15:11:58Z,2018-01-26T15:12:04Z,MERGED,True,18,18,7,https://github.com/c72578,Update documentation,1,[],https://github.com/oetiker/rrdtool-1.x/pull/864,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/864#issuecomment-360810625,Some typos corrected,thank you,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,866,2018-01-27T08:44:02Z,2018-01-27T17:20:43Z,2018-01-27T17:20:43Z,MERGED,True,76,47,1,https://github.com/matwey,Fix/python race,2,[],https://github.com/oetiker/rrdtool-1.x/pull/866,https://github.com/matwey,1,https://github.com/oetiker/rrdtool-1.x/pull/866,"Hello,
This is partial fix for #865
Currently, I don't see python crashing anymore. But now I see warnings from GLibc, which I believe produced by librrd itself, not bindings.
(process:4793): Pango-WARNING **: failed to create cairo scaled font, expect ugly output. the offending font is 'DejaVu Sans Mono 8'

(process:4793): Pango-WARNING **: font_face status is: no error has occurred

(process:4793): Pango-WARNING **: scaled_font status is: invalid matrix (not invertible)

(process:4793): Pango-WARNING **: shaping failure, expect ugly output. shape-engine='PangoFcShapeEngine', font='DejaVu Sans Mono 8', text='Bytes'

(process:4793): GLib-WARNING **: corrupted double-linked list detected","Hello,
This is partial fix for #865
Currently, I don't see python crashing anymore. But now I see warnings from GLibc, which I believe produced by librrd itself, not bindings.
(process:4793): Pango-WARNING **: failed to create cairo scaled font, expect ugly output. the offending font is 'DejaVu Sans Mono 8'

(process:4793): Pango-WARNING **: font_face status is: no error has occurred

(process:4793): Pango-WARNING **: scaled_font status is: invalid matrix (not invertible)

(process:4793): Pango-WARNING **: shaping failure, expect ugly output. shape-engine='PangoFcShapeEngine', font='DejaVu Sans Mono 8', text='Bytes'

(process:4793): GLib-WARNING **: corrupted double-linked list detected",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,866,2018-01-27T08:44:02Z,2018-01-27T17:20:43Z,2018-01-27T17:20:43Z,MERGED,True,76,47,1,https://github.com/matwey,Fix/python race,2,[],https://github.com/oetiker/rrdtool-1.x/pull/866,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/866#issuecomment-360972819,"Hello,
This is partial fix for #865
Currently, I don't see python crashing anymore. But now I see warnings from GLibc, which I believe produced by librrd itself, not bindings.
(process:4793): Pango-WARNING **: failed to create cairo scaled font, expect ugly output. the offending font is 'DejaVu Sans Mono 8'

(process:4793): Pango-WARNING **: font_face status is: no error has occurred

(process:4793): Pango-WARNING **: scaled_font status is: invalid matrix (not invertible)

(process:4793): Pango-WARNING **: shaping failure, expect ugly output. shape-engine='PangoFcShapeEngine', font='DejaVu Sans Mono 8', text='Bytes'

(process:4793): GLib-WARNING **: corrupted double-linked list detected",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,869,2018-02-02T19:18:49Z,2018-02-04T22:55:06Z,2018-02-04T22:55:07Z,MERGED,True,1,1,1,https://github.com/igit,Update CHANGES : version 1.7.0 released on 2017 (not 2016),1,[],https://github.com/oetiker/rrdtool-1.x/pull/869,https://github.com/igit,1,https://github.com/oetiker/rrdtool-1.x/pull/869,Version 1.7.0 released on 2017-05-16 not 2016-05-16,Version 1.7.0 released on 2017-05-16 not 2016-05-16,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,870,2018-02-05T15:34:49Z,2018-02-05T15:35:40Z,2018-02-05T15:35:40Z,MERGED,True,3,3,2,https://github.com/nirgal,Spelling fixes,1,[],https://github.com/oetiker/rrdtool-1.x/pull/870,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/870,Thanks lintian auto checks.,Thanks lintian auto checks.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,871,2018-02-07T17:09:08Z,2018-02-07T22:32:31Z,2018-02-07T22:32:31Z,MERGED,True,1,1,1,https://github.com/nirgal,Quiets warning,1,[],https://github.com/oetiker/rrdtool-1.x/pull/871,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/871,gcc using -Wimplicit-fallthrough emits warning because of the typo,gcc using -Wimplicit-fallthrough emits warning because of the typo,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,873,2018-02-09T19:06:53Z,2018-02-10T15:45:55Z,2018-02-10T15:45:55Z,MERGED,True,8,9,2,https://github.com/matwey,Do not use static variables in xtr() and ytr(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/873,https://github.com/matwey,1,https://github.com/oetiker/rrdtool-1.x/pull/873,"Using static variables for writting leads to race conditions. In order to keep
scale for axis we introduce x_pixie and y_pixie into image_desc_t.
Signed-off-by: Matwey V. Kornilov matwey.kornilov@gmail.com","Using static variables for writting leads to race conditions. In order to keep
scale for axis we introduce x_pixie and y_pixie into image_desc_t.
Signed-off-by: Matwey V. Kornilov matwey.kornilov@gmail.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,874,2018-02-09T23:40:24Z,2018-02-10T15:47:32Z,2018-02-10T15:47:44Z,MERGED,True,3,3,1,https://github.com/nirgal,Really enable translations,1,[],https://github.com/oetiker/rrdtool-1.x/pull/874,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/874,Fix for issue #872.,Fix for issue #872.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,874,2018-02-09T23:40:24Z,2018-02-10T15:47:32Z,2018-02-10T15:47:44Z,MERGED,True,3,3,1,https://github.com/nirgal,Really enable translations,1,[],https://github.com/oetiker/rrdtool-1.x/pull/874,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/874#issuecomment-364664357,Fix for issue #872.,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,875,2018-02-13T07:47:58Z,2018-02-13T09:50:54Z,2018-02-13T09:51:02Z,MERGED,True,4,4,3,https://github.com/matwey,Do not use static variable in gfx_prep_text(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/875,https://github.com/matwey,1,https://github.com/oetiker/rrdtool-1.x/pull/875,"Move last_tabwidth to image_desc_t
Signed-off-by: Matwey V. Kornilov matwey.kornilov@gmail.com","Move last_tabwidth to image_desc_t
Signed-off-by: Matwey V. Kornilov matwey.kornilov@gmail.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,875,2018-02-13T07:47:58Z,2018-02-13T09:50:54Z,2018-02-13T09:51:02Z,MERGED,True,4,4,3,https://github.com/matwey,Do not use static variable in gfx_prep_text(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/875,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/875#issuecomment-365210777,"Move last_tabwidth to image_desc_t
Signed-off-by: Matwey V. Kornilov matwey.kornilov@gmail.com",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,877,2018-02-14T13:29:45Z,2018-02-16T07:09:58Z,2018-02-16T07:09:58Z,MERGED,True,532,0,3,https://github.com/nirgal,French,2,[],https://github.com/oetiker/rrdtool-1.x/pull/877,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/877,French translation,French translation,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,877,2018-02-14T13:29:45Z,2018-02-16T07:09:58Z,2018-02-16T07:09:58Z,MERGED,True,532,0,3,https://github.com/nirgal,French,2,[],https://github.com/oetiker/rrdtool-1.x/pull/877,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/877#issuecomment-366160147,French translation,cool ... thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,879,2018-03-06T14:12:21Z,2018-03-08T08:06:24Z,2018-03-08T08:06:32Z,MERGED,True,1,1,1,https://github.com/Tomo59,Fix rrdtool.graph python binding,1,[],https://github.com/oetiker/rrdtool-1.x/pull/879,https://github.com/Tomo59,1,https://github.com/oetiker/rrdtool-1.x/pull/879,It was failing with 'munmap_chunk(): invalid pointer' error in python 3.6.3,It was failing with 'munmap_chunk(): invalid pointer' error in python 3.6.3,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,879,2018-03-06T14:12:21Z,2018-03-08T08:06:24Z,2018-03-08T08:06:32Z,MERGED,True,1,1,1,https://github.com/Tomo59,Fix rrdtool.graph python binding,1,[],https://github.com/oetiker/rrdtool-1.x/pull/879,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/879#issuecomment-371411036,It was failing with 'munmap_chunk(): invalid pointer' error in python 3.6.3,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,881,2018-03-25T11:58:56Z,2018-03-25T13:01:13Z,2018-03-25T13:01:17Z,MERGED,True,9,5,1,https://github.com/c72578,Update MinGW-w64 build instructions,1,[],https://github.com/oetiker/rrdtool-1.x/pull/881,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/881,"Info added, where to find compiled binaries:
src/.libs/
Added perl-Pod-Html to Fedora dependencies
Added base-devel to MSYS2 build instructions","Info added, where to find compiled binaries:
src/.libs/
Added perl-Pod-Html to Fedora dependencies
Added base-devel to MSYS2 build instructions",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,881,2018-03-25T11:58:56Z,2018-03-25T13:01:13Z,2018-03-25T13:01:17Z,MERGED,True,9,5,1,https://github.com/c72578,Update MinGW-w64 build instructions,1,[],https://github.com/oetiker/rrdtool-1.x/pull/881,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/881#issuecomment-375968889,"Info added, where to find compiled binaries:
src/.libs/
Added perl-Pod-Html to Fedora dependencies
Added base-devel to MSYS2 build instructions",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,882,2018-03-29T08:34:38Z,2018-03-29T08:39:03Z,2018-03-29T08:39:07Z,MERGED,True,1,1,1,https://github.com/nirgal,Fixed typo in error message,1,[],https://github.com/oetiker/rrdtool-1.x/pull/882,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/882,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,882,2018-03-29T08:34:38Z,2018-03-29T08:39:03Z,2018-03-29T08:39:07Z,MERGED,True,1,1,1,https://github.com/nirgal,Fixed typo in error message,1,[],https://github.com/oetiker/rrdtool-1.x/pull/882,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/882#issuecomment-377165011,,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,883,2018-03-29T22:41:25Z,,2021-07-15T06:18:14Z,OPEN,False,31,7,3,https://github.com/alwaysleave,solaris fixes,3,[],https://github.com/oetiker/rrdtool-1.x/pull/883,https://github.com/alwaysleave,1,https://github.com/oetiker/rrdtool-1.x/pull/883,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/fbsanchez,1,https://github.com/oetiker/rrdtool-1.x/pull/887,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!","Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/887#issuecomment-392034272,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!",hmmm adding such a function to dump seems a bit odd ... I would have expected it to show up in xport for example ... what is your thinking on this ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/fbsanchez,3,https://github.com/oetiker/rrdtool-1.x/pull/887#issuecomment-392049309,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!","Hello oetiker, maybe the xport is the right place, I use dump because the default XML format is not useful for my purposes :) I've no time right now to change the placement, is this placement a handicap?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/887#issuecomment-392067400,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!","yes,because except in caes where you want to dump the entire rrd file (to xml) you would use either rrdtool fetch or rrdtool xport to extract data",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/fbsanchez,5,https://github.com/oetiker/rrdtool-1.x/pull/887#issuecomment-394295544,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!","Hello! I'm gonna move the changes to the export functionality, I'll use this PR :) thank you",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/fbsanchez,6,https://github.com/oetiker/rrdtool-1.x/pull/887#issuecomment-394314315,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!","Uhm, after checking the xport feature I'm not fully sure if it covers all my needs, as you commented:

except in case where you want to dump the entire rrd file (to xml)

is just that case, I want to retrieve entire content of the RRD file (only data) CSV sepparated, utimestamp + CDs
I think our desired functionality could be useful in dump, because we need no time range to export, since we need entire RRD content (filtered by aggregation origin - AVERAGE/MIN/MAX...)
Do you think this behaviour is useful for your SW?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/oetiker,7,https://github.com/oetiker/rrdtool-1.x/pull/887#issuecomment-394318750,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!",the problem is that dump returns structured data ... suitable for restore ... you might be better served with 'rrdtool fetch' if you desire 'original' data,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,887,2018-05-25T10:43:49Z,,2020-07-05T23:55:17Z,OPEN,False,395,283,3,https://github.com/fbsanchez,Added CSV format to rrdtool dump,3,[],https://github.com/oetiker/rrdtool-1.x/pull/887,https://github.com/netniV,8,https://github.com/oetiker/rrdtool-1.x/pull/887#issuecomment-653955683,"Hello!
I just added CSV format output to rrdtool dump utility, it also is able to select the desired CF to be exported (max,avg,min,last)
Hope you find it useful
Thank you!","Personally, I think it would be advisable to have it in both places.  Obviously, CSV formatted data does not need to be used for restore, but could be used with other systems for importing (such as mysql, excel, etc).  Additionally, if JSON is handled by both dump/xport, I think having CSV in both places also makes sense.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,891,2018-06-18T09:59:20Z,2018-06-18T11:40:06Z,2018-06-18T11:40:06Z,MERGED,True,4,1,1,https://github.com/weyou,Fix rrdfile write mode issue on Windows,2,[],https://github.com/oetiker/rrdtool-1.x/pull/891,https://github.com/weyou,1,https://github.com/oetiker/rrdtool-1.x/pull/891,"This is a patch to issue #889 , thanks.","This is a patch to issue #889 , thanks.",True,{'THUMBS_UP': ['https://github.com/c72578']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,893,2018-07-13T11:57:02Z,2018-07-13T13:23:01Z,2018-07-13T13:23:06Z,MERGED,True,3,0,1,https://github.com/c72578,Define HAVE_RRD_RESTORE (MSVC),1,[],https://github.com/oetiker/rrdtool-1.x/pull/893,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/893,"Enables restore functionality on Windows MSVC builds
Fixes ERROR: the instance of rrdtool has been compiled without XML
import functions","Enables restore functionality on Windows MSVC builds
Fixes ERROR: the instance of rrdtool has been compiled without XML
import functions",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,893,2018-07-13T11:57:02Z,2018-07-13T13:23:01Z,2018-07-13T13:23:06Z,MERGED,True,3,0,1,https://github.com/c72578,Define HAVE_RRD_RESTORE (MSVC),1,[],https://github.com/oetiker/rrdtool-1.x/pull/893,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/893#issuecomment-404832095,"Enables restore functionality on Windows MSVC builds
Fixes ERROR: the instance of rrdtool has been compiled without XML
import functions",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,894,2018-07-14T12:33:43Z,2018-07-16T05:52:08Z,2018-07-16T05:52:08Z,MERGED,True,7,0,1,https://github.com/c72578,Fix lastupdate time in dump (32bit MSVC only),1,[],https://github.com/oetiker/rrdtool-1.x/pull/894,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/894,"So far, (null) was written into the lastupdate time string:
e.g.: <lastupdate>1511170870</lastupdate> <!-- (null) -->
The problem occurred only in 32bit MSVC builds
Works for both, with or without _USE_32BIT_TIME_T","So far, (null) was written into the lastupdate time string:
e.g.: <lastupdate>1511170870</lastupdate> <!-- (null) -->
The problem occurred only in 32bit MSVC builds
Works for both, with or without _USE_32BIT_TIME_T",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/netniV,1,https://github.com/oetiker/rrdtool-1.x/pull/897,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-408618201,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,"Hi @netniV, thanks for your PR ... yes please make the new line character to be ""\n"" (literally backslash n). The question mark already has a well defined job (as a question mark)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-408618252,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,also please to not commit changes to Makefile.in and configure,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/netniV,4,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-408618589,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,"Yeah someone else pointed out to me that there were makefile changes.  I think I made a mistake with the commit and added the ""-a"" as I do with other projects without realising.  Would it be worth including the <br> since it is a field that supposedly takes tags?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/netniV,5,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-408619335,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,I'm not sure how a program will pass a \n in the title but made the change you've requested and you should now see a cleaner difference.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/netniV,6,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-408990666,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,"OK, hopefully this time I got it right and made you a happy bunny ;-)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/oetiker,7,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-409602288,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,great! thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/netniV,8,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-409934737,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,"Quick question, what is the normal release cycle of changes like these?  Just wondering how long it would take to appear in packages if people ask me 👍",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/oetiker,9,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-409943722,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,"well I will be doing 1.8 release pretty soon, but to see this in packages you will ususally have to wait a few months/years ... many people still run 1.4",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,897,2018-07-27T10:29:23Z,2018-08-01T14:50:50Z,2018-08-02T15:05:36Z,MERGED,True,100,9,3,https://github.com/netniV,Allow multiple lines in graph titles,6,[],https://github.com/oetiker/rrdtool-1.x/pull/897,https://github.com/netniV,10,https://github.com/oetiker/rrdtool-1.x/pull/897#issuecomment-409959548,This PR contains work to allow multiple lines to be used within the graph titles.  It current assumes a question mark as the character to split by.  Further work would offer a parameter to customise the split character or even recognise  and \n.,"I think when it comes to running with Cacti, we've seen many using 1.3 purely because their running Cacti 0.8.8 and their systems are so old, no new packages are being made.  Those running 1.x seem to be 1.5 or higher but not many are running 1.7 yet.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,900,2018-08-16T14:15:33Z,2018-08-17T07:52:54Z,2018-08-17T09:44:46Z,MERGED,True,2,0,1,https://github.com/karlp,lua: build failure when rrd graph is disabled.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/900,https://github.com/karlp,1,https://github.com/oetiker/rrdtool-1.x/pull/900,"Needs the same protection used elsewhere in the file.
Signed-off-by: Karl Palsson karlp@etactica.com","Needs the same protection used elsewhere in the file.
Signed-off-by: Karl Palsson karlp@etactica.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,900,2018-08-16T14:15:33Z,2018-08-17T07:52:54Z,2018-08-17T09:44:46Z,MERGED,True,2,0,1,https://github.com/karlp,lua: build failure when rrd graph is disabled.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/900,https://github.com/karlp,2,https://github.com/oetiker/rrdtool-1.x/pull/900#issuecomment-413625612,"Needs the same protection used elsewhere in the file.
Signed-off-by: Karl Palsson karlp@etactica.com","Travis failures don't appear to be related to my changes, unless I'm missing something.  Does travis currently build clean on unmodified source?  Other PRs have the same travis failures.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,900,2018-08-16T14:15:33Z,2018-08-17T07:52:54Z,2018-08-17T09:44:46Z,MERGED,True,2,0,1,https://github.com/karlp,lua: build failure when rrd graph is disabled.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/900,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/900#issuecomment-413787562,"Needs the same protection used elsewhere in the file.
Signed-off-by: Karl Palsson karlp@etactica.com",thanks ...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,901,2018-08-16T17:32:51Z,2018-08-17T07:51:40Z,2018-08-17T09:44:21Z,MERGED,True,4,0,1,https://github.com/karlp,lua: don't include rrd_restore if it wasn't included,1,[],https://github.com/oetiker/rrdtool-1.x/pull/901,https://github.com/karlp,1,https://github.com/oetiker/rrdtool-1.x/pull/901,"The lua module compiles ok, but fails to load.

rrd=require(""rrd"")
error loading module 'rrd' from file '/usr/lib/lua/rrd.so':
Error relocating /usr/lib/lua/rrd.so: rrd_restore: symbol not found
stack traceback:
[C]: ?
[C]: in function 'require'

Signed-off-by: Karl Palsson karlp@etactica.com","The lua module compiles ok, but fails to load.

rrd=require(""rrd"")
error loading module 'rrd' from file '/usr/lib/lua/rrd.so':
Error relocating /usr/lib/lua/rrd.so: rrd_restore: symbol not found
stack traceback:
[C]: ?
[C]: in function 'require'

Signed-off-by: Karl Palsson karlp@etactica.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,901,2018-08-16T17:32:51Z,2018-08-17T07:51:40Z,2018-08-17T09:44:21Z,MERGED,True,4,0,1,https://github.com/karlp,lua: don't include rrd_restore if it wasn't included,1,[],https://github.com/oetiker/rrdtool-1.x/pull/901,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/901#issuecomment-413787314,"The lua module compiles ok, but fails to load.

rrd=require(""rrd"")
error loading module 'rrd' from file '/usr/lib/lua/rrd.so':
Error relocating /usr/lib/lua/rrd.so: rrd_restore: symbol not found
stack traceback:
[C]: ?
[C]: in function 'require'

Signed-off-by: Karl Palsson karlp@etactica.com",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,907,2018-09-26T13:07:14Z,2018-09-26T13:20:08Z,2018-09-26T13:20:08Z,MERGED,True,5,1,1,https://github.com/c72578,Update perl-shared README for MSVC and ActivePerl,1,[],https://github.com/oetiker/rrdtool-1.x/pull/907,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/907,"Using MSVC, the last supported ActivePerl version is 5.16,
e.g. ActivePerl-5.16.3.1604-MSWin32-x86-298023.msi
Since 5.18, ActivePerl is compiled with GCC compilers, and Microsoft
toolchains are not compatible
See this FAQ for further details:
https://community.activestate.com/faq/windows-compilers-perl-modules","Using MSVC, the last supported ActivePerl version is 5.16,
e.g. ActivePerl-5.16.3.1604-MSWin32-x86-298023.msi
Since 5.18, ActivePerl is compiled with GCC compilers, and Microsoft
toolchains are not compatible
See this FAQ for further details:
https://community.activestate.com/faq/windows-compilers-perl-modules",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,907,2018-09-26T13:07:14Z,2018-09-26T13:20:08Z,2018-09-26T13:20:08Z,MERGED,True,5,1,1,https://github.com/c72578,Update perl-shared README for MSVC and ActivePerl,1,[],https://github.com/oetiker/rrdtool-1.x/pull/907,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/907#issuecomment-424712103,"Using MSVC, the last supported ActivePerl version is 5.16,
e.g. ActivePerl-5.16.3.1604-MSWin32-x86-298023.msi
Since 5.18, ActivePerl is compiled with GCC compilers, and Microsoft
toolchains are not compatible
See this FAQ for further details:
https://community.activestate.com/faq/windows-compilers-perl-modules",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/az143,1,https://github.com/oetiker/rrdtool-1.x/pull/910,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az","here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/910#issuecomment-447313631,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az",can you update this to make it pass ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/az143,3,https://github.com/oetiker/rrdtool-1.x/pull/910#issuecomment-448119120,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az","make check on the Opmantek:omk-patches branch does succeed, and i don't know what more you want me to do. i have no idea what travis is doing in the build log referenced above, but it complains about tests that the patch cannot and has not affected (e.g. rpn1, rpn2, create-with-source-4).",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/910#issuecomment-448178880,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az",the tests have been fixed since. the problem is that your patch does not merge anymore with the current master.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/az143,5,https://github.com/oetiker/rrdtool-1.x/pull/910#issuecomment-448453588,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az","ok, done; re-merged and resolved the minimal conflicts. travis looks happy now.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/c72578,6,https://github.com/oetiker/rrdtool-1.x/pull/910#issuecomment-471446768,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az","@vbastos: Dear Vincent, the file src/rrd_xport.c has been indented in the meantime according to RRDtool's project indentation rules (GNU indent, .indent.pro). Please feel free to rectify this file now.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/c72578,7,https://github.com/oetiker/rrdtool-1.x/pull/910#issuecomment-474004265,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az","A new PR has been submitted, which considers the updated indentation and uses commit
0564d09 from @az143:
PR #981",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,910,2018-10-06T02:35:27Z,2019-05-29T04:24:28Z,2019-05-29T04:24:28Z,CLOSED,False,30,6,4,https://github.com/az143,"proposed fix for #908, no %s/%S unit autoscaling in gprint for json/xml",10,[],https://github.com/oetiker/rrdtool-1.x/pull/910,https://github.com/c72578,8,https://github.com/oetiker/rrdtool-1.x/pull/910#issuecomment-496778529,"here's the patch i submitted yesterday with the #908 as a pull request.
regards,
az","Thanks again.
This has been merged in c3cc095 and is included in the released v1.7.2.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/az143,1,https://github.com/oetiker/rrdtool-1.x/pull/915,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).","i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/az143,2,https://github.com/oetiker/rrdtool-1.x/pull/915#issuecomment-434884865,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).","indeed, that's better - i had just opted for the minimum amount of changes that resolve the underlying issue.
anyway, both of your requested changes have been made.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/915#issuecomment-435001954,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/netniV,4,https://github.com/oetiker/rrdtool-1.x/pull/915#issuecomment-435789391,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).","As noted, this patch doesn't handle multiple delimiters and I verified that looking at the code.
Whilst we would hope that a calling program will always use a single type, there are situations such as with Cacti, where multiple may be provided.  This can happen because the admin may entire a title style, but a device may also return a delimited in a value that gets used in a dynamic title.
If the style picked by the device uses a delimiter earlier in the list, it would get broken up different and the string may include the operators intended break a line leading to unexpected output.
Handling this corner case can be done with only a small improvement on what has been done here by I think:

Search for the position of each delimiter
Find the lowest index and substring from the current position to that location
Search again but just for the delimiter we have just used since we already have the lowest of the rest
Repeat part 2 until none found or the maximum lines is reached

If you feel it's worth it, Either I or @az143 (if they feel up to it) could apply that change.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/915#issuecomment-436813768,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).","improvements are always welcome :) since we are supporting multiple line break chars, we might as well allow a mix ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/netniV,6,https://github.com/oetiker/rrdtool-1.x/pull/915#issuecomment-436817016,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).",I'll take a look at later this week then unless @az143 feels he would rather do it.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/az143,7,https://github.com/oetiker/rrdtool-1.x/pull/915#issuecomment-437218407,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).","On Wed, 07 Nov 2018 15:33:41 -0800, Mark Brugnoli-Vinten writes:
I'll take a look at later this week then unless @az143 feels he would
rather do it.
please go for it; i'm a bit busy at the moment.

regards
az
…
-- 
Alexander Zangerl + GPG Key 2FCCF66BB963BD5F + http://snafu.priv.at/
""You are SUCH a useless use of a constant."" -- flannelcat",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,915,2018-10-30T04:54:09Z,2018-11-01T10:41:23Z,2018-12-19T03:02:34Z,MERGED,True,47,36,1,https://github.com/az143,"fix for #914, rrdtool graph with --title segfaults",3,[],https://github.com/oetiker/rrdtool-1.x/pull/915,https://github.com/netniV,8,https://github.com/oetiker/rrdtool-1.x/pull/915#issuecomment-439108489,"i've updated the graph_title_split() function a bit to not segfault and to handle various corner cases better (e.g. single title w/o delimiter didn't work before, back-to-back delimiters or leading or trailing ones).","@az143 and @oetiker, I have created a PR with what I believe should be working.  Feel free to review it and let me know.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,916,2018-11-07T15:37:16Z,2018-11-07T23:14:34Z,2018-11-07T23:14:34Z,MERGED,True,2,2,1,https://github.com/c72578,Add windows-default-manifest to README-MinGW-w64,1,[],https://github.com/oetiker/rrdtool-1.x/pull/916,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/916,"windows-default-manifest is available for Fedora in the meantime.
This adds a default manifest to the compiled binaries and prevents
unnecessary elevated privileges, e.g. for 32-bit rrdupdate.exe","windows-default-manifest is available for Fedora in the meantime.
This adds a default manifest to the compiled binaries and prevents
unnecessary elevated privileges, e.g. for 32-bit rrdupdate.exe",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,916,2018-11-07T15:37:16Z,2018-11-07T23:14:34Z,2018-11-07T23:14:34Z,MERGED,True,2,2,1,https://github.com/c72578,Add windows-default-manifest to README-MinGW-w64,1,[],https://github.com/oetiker/rrdtool-1.x/pull/916,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/916#issuecomment-436812681,"windows-default-manifest is available for Fedora in the meantime.
This adds a default manifest to the compiled binaries and prevents
unnecessary elevated privileges, e.g. for 32-bit rrdupdate.exe",cool!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/netniV,1,https://github.com/oetiker/rrdtool-1.x/pull/917,I believe this new code should handle the multiple delimiter split better as discussed in #914,I believe this new code should handle the multiple delimiter split better as discussed in #914,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-440023561,I believe this new code should handle the multiple delimiter split better as discussed in #914,thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441131106,I believe this new code should handle the multiple delimiter split better as discussed in #914,"gcc shows the following warning:
rrd_graph.c: In function ‘graph_title_split’:
rrd_graph.c:6203:43: warning: iteration 4 invokes undefined behavior [-Waggressive-loop-optimizations]
             int delim_size = strlen(delims[i]);
                                     ~~~~~~^~~
rrd_graph.c:6200:9: note: within this loop
         for(unsigned int i=0; i < sizeof(delims); i++)
         ^~~",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/netniV,4,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441203308,I believe this new code should handle the multiple delimiter split better as discussed in #914,"From what I have read on the aggressive-loop-optimizations it's normally because you have done something like an infinite loop or integer overflow, neither of which apply here.  In this case, it's not the loop itself that's the warning but the element of the array.  The array has the right number of elements, could you spot a reason for the warning?
d2d13e8#diff-f60462f58d8030091049f71ddd339c33R6203 refers to delims which is on d2d13e8#diff-f60462f58d8030091049f71ddd339c33R6203 and clearly has the right number of elements.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/c72578,5,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441219495,I believe this new code should handle the multiple delimiter split better as discussed in #914,"sizeof(delims) determines the size of delims in bytes, which can be n=16 (4x4) on 32-bit and n=32 (4x8) on 64-bit systems. So we need:
for(unsigned int i=0; i < sizeof(delims) / sizeof(delims[0]); i++)
instead of
for(unsigned int i=0; i < sizeof(delims); i++)
I will submit a PR.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/netniV,6,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441221926,I believe this new code should handle the multiple delimiter split better as discussed in #914,"Ah, yes.  Please do.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/c72578,7,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441222772,I believe this new code should handle the multiple delimiter split better as discussed in #914,PR created: #919,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/oetiker,8,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441237570,I believe this new code should handle the multiple delimiter split better as discussed in #914,would that fail it the delim strings were of different size ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/netniV,9,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441240295,I believe this new code should handle the multiple delimiter split better as discussed in #914,Only if it was using strlen to get the length strings. It should be dividing the total size of the delim by the size of one of the pointers with the new code.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/c72578,10,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441248133,I believe this new code should handle the multiple delimiter split better as discussed in #914,"I just did some testing of delimiters and the results were OK. Examples for testing are attached.
rrdtool_graph_title_example_delimiters_linux.txt",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,917,2018-11-15T16:45:43Z,2018-11-19T20:01:57Z,2018-11-23T14:47:24Z,MERGED,True,46,42,1,https://github.com/netniV,Update to PR #915,1,[],https://github.com/oetiker/rrdtool-1.x/pull/917,https://github.com/netniV,11,https://github.com/oetiker/rrdtool-1.x/pull/917#issuecomment-441258963,I believe this new code should handle the multiple delimiter split better as discussed in #914,"@c72578 Thanks! I was going to post that I use Cacti to generate my tests but I could have got the command lines.  Unfortunately, day job got in the way and you'd resolved it before I got back to you 👍",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,919,2018-11-23T11:53:54Z,2018-11-23T13:07:44Z,2018-11-23T13:08:54Z,MERGED,True,1,1,1,https://github.com/c72578,"Fix loop, sizeof(delims)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/919,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/919,Update to 2154d02,Update to 2154d02,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,919,2018-11-23T11:53:54Z,2018-11-23T13:07:44Z,2018-11-23T13:08:54Z,MERGED,True,1,1,1,https://github.com/c72578,"Fix loop, sizeof(delims)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/919,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/919#issuecomment-441237219,Update to 2154d02,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,920,2018-11-25T10:55:33Z,2018-11-25T15:32:30Z,2018-11-25T15:32:30Z,MERGED,True,5,2,1,https://github.com/c72578,Disable Travis CI valgrind-logfile failing tests,1,[],https://github.com/oetiker/rrdtool-1.x/pull/920,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/920,"These failing tests are not directly coming from rrdtool
and are related to external libraries
Allows Travis CI builds to pass again","These failing tests are not directly coming from rrdtool
and are related to external libraries
Allows Travis CI builds to pass again",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,920,2018-11-25T10:55:33Z,2018-11-25T15:32:30Z,2018-11-25T15:32:30Z,MERGED,True,5,2,1,https://github.com/c72578,Disable Travis CI valgrind-logfile failing tests,1,[],https://github.com/oetiker/rrdtool-1.x/pull/920,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/920#issuecomment-441432077,"These failing tests are not directly coming from rrdtool
and are related to external libraries
Allows Travis CI builds to pass again",meant todo that for a long time ... thanks very much!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,921,2018-11-29T11:24:09Z,2018-11-30T06:49:58Z,2018-11-30T06:50:05Z,MERGED,True,2,1,1,https://github.com/c72578,Fix tests to support Windows time zone name,1,[],https://github.com/oetiker/rrdtool-1.x/pull/921,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/921,"On Windows, names of times zones are different.
Substitute 'W. Europe Standard Time' with 'CET' by function seddif
Removes unnecessary diff output and fixes therefore failing tests
under Windows","On Windows, names of times zones are different.
Substitute 'W. Europe Standard Time' with 'CET' by function seddif
Removes unnecessary diff output and fixes therefore failing tests
under Windows",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,921,2018-11-29T11:24:09Z,2018-11-30T06:49:58Z,2018-11-30T06:50:05Z,MERGED,True,2,1,1,https://github.com/c72578,Fix tests to support Windows time zone name,1,[],https://github.com/oetiker/rrdtool-1.x/pull/921,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/921#issuecomment-443109113,"On Windows, names of times zones are different.
Substitute 'W. Europe Standard Time' with 'CET' by function seddif
Removes unnecessary diff output and fixes therefore failing tests
under Windows",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,922,2018-12-14T11:14:48Z,2018-12-14T12:38:25Z,2018-12-14T12:38:28Z,MERGED,True,4,2,2,https://github.com/c72578,Fix warning strncpy bound equals destination size,1,[],https://github.com/oetiker/rrdtool-1.x/pull/922,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/922,"Reduce num from 5 to 4 in strncpy and add null terminator.
Remark: Version strings consist of 4 chars, e.g. RRD_VERSION5 ""0005""


Fixes the following GCC 8 warnings:
rrd_create.c:960:9: warning:
‘strncpy’ specified bound 5 equals destination size
[-Wstringop-truncation]
strncpy(rrd.stat_head->version, require_version, 5);
rrd_modify.c:1218:9: warning:
‘strncpy’ specified bound 5 equals destination size
[-Wstringop-truncation]
strncpy(out->stat_head->version, require_version, 5);","Reduce num from 5 to 4 in strncpy and add null terminator.
Remark: Version strings consist of 4 chars, e.g. RRD_VERSION5 ""0005""


Fixes the following GCC 8 warnings:
rrd_create.c:960:9: warning:
‘strncpy’ specified bound 5 equals destination size
[-Wstringop-truncation]
strncpy(rrd.stat_head->version, require_version, 5);
rrd_modify.c:1218:9: warning:
‘strncpy’ specified bound 5 equals destination size
[-Wstringop-truncation]
strncpy(out->stat_head->version, require_version, 5);",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,922,2018-12-14T11:14:48Z,2018-12-14T12:38:25Z,2018-12-14T12:38:28Z,MERGED,True,4,2,2,https://github.com/c72578,Fix warning strncpy bound equals destination size,1,[],https://github.com/oetiker/rrdtool-1.x/pull/922,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/922#issuecomment-447313188,"Reduce num from 5 to 4 in strncpy and add null terminator.
Remark: Version strings consist of 4 chars, e.g. RRD_VERSION5 ""0005""


Fixes the following GCC 8 warnings:
rrd_create.c:960:9: warning:
‘strncpy’ specified bound 5 equals destination size
[-Wstringop-truncation]
strncpy(rrd.stat_head->version, require_version, 5);
rrd_modify.c:1218:9: warning:
‘strncpy’ specified bound 5 equals destination size
[-Wstringop-truncation]
strncpy(out->stat_head->version, require_version, 5);",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,923,2018-12-14T15:09:13Z,2018-12-14T15:59:05Z,2018-12-14T15:59:10Z,MERGED,True,0,40,1,https://github.com/c72578,Sync librrd-4.def with librrd.sym,1,[],https://github.com/oetiker/rrdtool-1.x/pull/923,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/923,"Export the same functions in the dll from MSVC builds under Windows
as listed in librrd.sym","Export the same functions in the dll from MSVC builds under Windows
as listed in librrd.sym",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,923,2018-12-14T15:09:13Z,2018-12-14T15:59:05Z,2018-12-14T15:59:10Z,MERGED,True,0,40,1,https://github.com/c72578,Sync librrd-4.def with librrd.sym,1,[],https://github.com/oetiker/rrdtool-1.x/pull/923,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/923#issuecomment-447367980,"Export the same functions in the dll from MSVC builds under Windows
as listed in librrd.sym",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,924,2018-12-18T11:03:50Z,2018-12-18T11:23:42Z,2018-12-18T11:23:46Z,MERGED,True,1,0,1,https://github.com/c72578,Check for gobject-2.0 in configure,1,[],https://github.com/oetiker/rrdtool-1.x/pull/924,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/924,"Since pango version 1.43.0, -lgobject-2.0 is not added automatically
any more during configure. Remark: pango.pc uses Requires.private
now for gobject-2.0 instead of formerly Requires: gobject-2.0
Check for gobject-2.0 in configure to make sure, that -lgobject-2.0
is added to ALL_LIBS
Fixes the following linker errors:

.libs/librrd_la-rrd_graph.o: In function `im_free':
src/rrd_graph.c:465: undefined reference to `g_object_unref'
.libs/librrd_la-rrd_graph.o: In function `rrd_graph_init':
src/rrd_graph.c:4840: undefined reference to `g_object_unref'","Since pango version 1.43.0, -lgobject-2.0 is not added automatically
any more during configure. Remark: pango.pc uses Requires.private
now for gobject-2.0 instead of formerly Requires: gobject-2.0
Check for gobject-2.0 in configure to make sure, that -lgobject-2.0
is added to ALL_LIBS
Fixes the following linker errors:

.libs/librrd_la-rrd_graph.o: In function `im_free':
src/rrd_graph.c:465: undefined reference to `g_object_unref'
.libs/librrd_la-rrd_graph.o: In function `rrd_graph_init':
src/rrd_graph.c:4840: undefined reference to `g_object_unref'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,924,2018-12-18T11:03:50Z,2018-12-18T11:23:42Z,2018-12-18T11:23:46Z,MERGED,True,1,0,1,https://github.com/c72578,Check for gobject-2.0 in configure,1,[],https://github.com/oetiker/rrdtool-1.x/pull/924,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/924#issuecomment-448188297,"Since pango version 1.43.0, -lgobject-2.0 is not added automatically
any more during configure. Remark: pango.pc uses Requires.private
now for gobject-2.0 instead of formerly Requires: gobject-2.0
Check for gobject-2.0 in configure to make sure, that -lgobject-2.0
is added to ALL_LIBS
Fixes the following linker errors:

.libs/librrd_la-rrd_graph.o: In function `im_free':
src/rrd_graph.c:465: undefined reference to `g_object_unref'
.libs/librrd_la-rrd_graph.o: In function `rrd_graph_init':
src/rrd_graph.c:4840: undefined reference to `g_object_unref'",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,925,2018-12-18T16:37:08Z,2018-12-18T22:50:29Z,2018-12-18T22:50:29Z,MERGED,True,8,4,2,https://github.com/c72578,Add -lws2_32 for MinGW builds by configure,1,[],https://github.com/oetiker/rrdtool-1.x/pull/925,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/925,"Add -lws2_32 to LIBS in case of MinGW or MinGW-w64 builds.
This makes building Windows executables more straightforward using
configure.
Update README-MinGW-w64, remove LIBS='-lws2_32' from configure
instructions.","Add -lws2_32 to LIBS in case of MinGW or MinGW-w64 builds.
This makes building Windows executables more straightforward using
configure.
Update README-MinGW-w64, remove LIBS='-lws2_32' from configure
instructions.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,925,2018-12-18T16:37:08Z,2018-12-18T22:50:29Z,2018-12-18T22:50:29Z,MERGED,True,8,4,2,https://github.com/c72578,Add -lws2_32 for MinGW builds by configure,1,[],https://github.com/oetiker/rrdtool-1.x/pull/925,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/925#issuecomment-448401406,"Add -lws2_32 to LIBS in case of MinGW or MinGW-w64 builds.
This makes building Windows executables more straightforward using
configure.
Update README-MinGW-w64, remove LIBS='-lws2_32' from configure
instructions.","cool ... this is all about cross compilation, right ? I guess for the next release I should build windows binaries. did you get the perl module to work too like that ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,927,2019-01-03T11:03:04Z,2019-01-03T12:05:11Z,2019-01-03T12:05:14Z,MERGED,True,34,4,4,https://github.com/oetiker,add graph test,1,[],https://github.com/oetiker/rrdtool-1.x/pull/927,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/927,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,928,2019-01-03T11:03:39Z,2019-01-03T12:59:40Z,2019-01-03T14:25:57Z,MERGED,True,39,38,6,https://github.com/oetiker,Fix off by one step error reported in  issue #913,5,[],https://github.com/oetiker/rrdtool-1.x/pull/928,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/928,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,928,2019-01-03T11:03:39Z,2019-01-03T12:59:40Z,2019-01-03T14:25:57Z,MERGED,True,39,38,6,https://github.com/oetiker,Fix off by one step error reported in  issue #913,5,[],https://github.com/oetiker/rrdtool-1.x/pull/928,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/928#issuecomment-451136332,,resolves #913,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,928,2019-01-03T11:03:39Z,2019-01-03T12:59:40Z,2019-01-03T14:25:57Z,MERGED,True,39,38,6,https://github.com/oetiker,Fix off by one step error reported in  issue #913,5,[],https://github.com/oetiker/rrdtool-1.x/pull/928,https://github.com/pmorch,3,https://github.com/oetiker/rrdtool-1.x/pull/928#issuecomment-451147302,,"Thanks Tobi, this fixes the issue we were having.
But this only fixes the rrdtool xport part of #913, right? Now rrdtool xport and rrdtool graph disagree. The rrdtool graph part of the issue still needs fixing, right?
Or should a new issue be created for the similar rrdtool graph issue? (Again, we don't actually need it)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,928,2019-01-03T11:03:39Z,2019-01-03T12:59:40Z,2019-01-03T14:25:57Z,MERGED,True,39,38,6,https://github.com/oetiker,Fix off by one step error reported in  issue #913,5,[],https://github.com/oetiker/rrdtool-1.x/pull/928,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/928#issuecomment-451152656,,what is the problem with graph ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,928,2019-01-03T11:03:39Z,2019-01-03T12:59:40Z,2019-01-03T14:25:57Z,MERGED,True,39,38,6,https://github.com/oetiker,Fix off by one step error reported in  issue #913,5,[],https://github.com/oetiker/rrdtool-1.x/pull/928,https://github.com/pmorch,5,https://github.com/oetiker/rrdtool-1.x/pull/928#issuecomment-451157782,,Wups my bad. The fixes in #928 also caused graph to alter it's timestamps (of course). Sorry for the noise. All is well.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,929,2019-01-03T12:03:49Z,2019-02-04T07:43:13Z,2019-02-04T07:43:20Z,MERGED,True,58,0,2,https://github.com/oetiker,Update issue templates,3,[],https://github.com/oetiker/rrdtool-1.x/pull/929,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/929,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,931,2019-01-03T21:53:46Z,2019-01-07T07:47:17Z,2019-01-09T14:56:43Z,MERGED,True,40,2,4,https://github.com/pmorch,Added some documentation for the rrdxport output format - see #913,7,[],https://github.com/oetiker/rrdtool-1.x/pull/931,https://github.com/pmorch,1,https://github.com/oetiker/rrdtool-1.x/pull/931,"More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.","More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,931,2019-01-03T21:53:46Z,2019-01-07T07:47:17Z,2019-01-09T14:56:43Z,MERGED,True,40,2,4,https://github.com/pmorch,Added some documentation for the rrdxport output format - see #913,7,[],https://github.com/oetiker/rrdtool-1.x/pull/931,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/931#issuecomment-451848442,"More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,931,2019-01-03T21:53:46Z,2019-01-07T07:47:17Z,2019-01-09T14:56:43Z,MERGED,True,40,2,4,https://github.com/pmorch,Added some documentation for the rrdxport output format - see #913,7,[],https://github.com/oetiker/rrdtool-1.x/pull/931,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/931#issuecomment-451932697,"More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.","The changes concerning rrd_pdpcalc.pod and also -Wbreak should be made in doc/Makefile.am instead (in addition) to doc/Makefile.in
Otherwise bootstrap or autoreconf will overwrite the changes.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,931,2019-01-03T21:53:46Z,2019-01-07T07:47:17Z,2019-01-09T14:56:43Z,MERGED,True,40,2,4,https://github.com/pmorch,Added some documentation for the rrdxport output format - see #913,7,[],https://github.com/oetiker/rrdtool-1.x/pull/931,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/931#issuecomment-451947746,"More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.",oops indeed did not spot that!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,931,2019-01-03T21:53:46Z,2019-01-07T07:47:17Z,2019-01-09T14:56:43Z,MERGED,True,40,2,4,https://github.com/pmorch,Added some documentation for the rrdxport output format - see #913,7,[],https://github.com/oetiker/rrdtool-1.x/pull/931,https://github.com/pmorch,5,https://github.com/oetiker/rrdtool-1.x/pull/931#issuecomment-452107448,"More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.",I've just pushed that change too to my branch.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,931,2019-01-03T21:53:46Z,2019-01-07T07:47:17Z,2019-01-09T14:56:43Z,MERGED,True,40,2,4,https://github.com/pmorch,Added some documentation for the rrdxport output format - see #913,7,[],https://github.com/oetiker/rrdtool-1.x/pull/931,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/931#issuecomment-452698511,"More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.","your change should have gone into doc/Makefile.am and not doc/Makefile.in
if you run ./bootstrap your change will be gone",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,931,2019-01-03T21:53:46Z,2019-01-07T07:47:17Z,2019-01-09T14:56:43Z,MERGED,True,40,2,4,https://github.com/pmorch,Added some documentation for the rrdxport output format - see #913,7,[],https://github.com/oetiker/rrdtool-1.x/pull/931,https://github.com/c72578,7,https://github.com/oetiker/rrdtool-1.x/pull/931#issuecomment-452725193,"More or less what we discussed in #913
About the link to PDP_calculation_explanation.html
You mentioned https://github.com/oetiker/rrdtool-1.x/blob/master doc/PDP_calculation_explanation.pod in #913 . While writing the documentation I decided that adding a link to that document from rrdxport.pod was the way to go.
However that is a long link. While generating rrdxport.txt from rrdxport.1, I got this output:
» make
  GEN      rrdxport.1
  GEN      rrdxport.txt
rrdxport.1:290: warning [p 3, 2.0i]: can't break line
  GEN      rrdxport.html

And I really dislike warnings. The problem is that line 290 is that long URL. So I had these alternatives:

Add PDP_calculation_explanation.pod to the POD definition in Makefile.in so  it is also generated, and then include a relative link to  ./PDP_calculation_explanation instead of the full absolute link to  github.com.
Fix the warning by adding -Wbreak to the @NROFF@ command in Makefile.in
Omit the link entirely
Live with the warning

I went with the first option, also because having links to a hardcoded domain like github.com is asking for future bitrot, and there aren't any other links to github.com (yet). You may decide otherwise - I just wanted to be explicit about my choice here.
I then discovered that PDP_calculation_explanation.pod itself had perlpod errors that I fixed and that it also generated the ""can't break line"" warning (and so did many other .pod files). So I added -Wbreak to the @NROFF@ command in Makefile.in to disable all these warnings.",@pmorch: I have added your commit pmorch@9c6a465 to a new PR #936 and also added -Wbreak to doc/Makefile.am,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,932,2019-01-03T22:52:26Z,2019-01-04T10:18:31Z,2019-01-04T10:18:31Z,MERGED,True,161,164,24,https://github.com/pmorch,Fixes for .pod files,6,[],https://github.com/oetiker/rrdtool-1.x/pull/932,https://github.com/pmorch,1,https://github.com/oetiker/rrdtool-1.x/pull/932,"While creating #931 I noticed that podchecker *.pod  returned a number of errors and warnings. I also noticed that the links to AT-STYLE TIME SPECIFICATION could include the #AT-STYLE-TIME-SPECIFICATION in the URL, so I fixed these things.","While creating #931 I noticed that podchecker *.pod  returned a number of errors and warnings. I also noticed that the links to AT-STYLE TIME SPECIFICATION could include the #AT-STYLE-TIME-SPECIFICATION in the URL, so I fixed these things.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,932,2019-01-03T22:52:26Z,2019-01-04T10:18:31Z,2019-01-04T10:18:31Z,MERGED,True,161,164,24,https://github.com/pmorch,Fixes for .pod files,6,[],https://github.com/oetiker/rrdtool-1.x/pull/932,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/932#issuecomment-451405470,"While creating #931 I noticed that podchecker *.pod  returned a number of errors and warnings. I also noticed that the links to AT-STYLE TIME SPECIFICATION could include the #AT-STYLE-TIME-SPECIFICATION in the URL, so I fixed these things.",thank you very much!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,936,2019-01-09T14:53:55Z,2019-01-09T16:56:10Z,2019-01-09T16:57:44Z,MERGED,True,3,3,1,https://github.com/c72578,Update doc/Makefile.am,2,[],https://github.com/oetiker/rrdtool-1.x/pull/936,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/936,"Add commit from pmorch: Include rrd_pdpcalc.pod in Makefile.am
Add -Wbreak, as in:
564aed3","Add commit from pmorch: Include rrd_pdpcalc.pod in Makefile.am
Add -Wbreak, as in:
564aed3",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,936,2019-01-09T14:53:55Z,2019-01-09T16:56:10Z,2019-01-09T16:57:44Z,MERGED,True,3,3,1,https://github.com/c72578,Update doc/Makefile.am,2,[],https://github.com/oetiker/rrdtool-1.x/pull/936,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/936#issuecomment-452769922,"Add commit from pmorch: Include rrd_pdpcalc.pod in Makefile.am
Add -Wbreak, as in:
564aed3",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,937,2019-01-10T13:41:35Z,2019-01-10T16:20:15Z,2019-01-10T16:20:19Z,MERGED,True,0,18,1,https://github.com/c72578,Remove function substring from rrd_graph.c,1,[],https://github.com/oetiker/rrdtool-1.x/pull/937,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/937,"The function substring is not used any more. This was a leftover
from cd4a728
Fixes rrd_graph.c:6159:7: warning:
no previous prototype for 'substring' [-Wmissing-prototypes]","The function substring is not used any more. This was a leftover
from cd4a728
Fixes rrd_graph.c:6159:7: warning:
no previous prototype for 'substring' [-Wmissing-prototypes]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,937,2019-01-10T13:41:35Z,2019-01-10T16:20:15Z,2019-01-10T16:20:19Z,MERGED,True,0,18,1,https://github.com/c72578,Remove function substring from rrd_graph.c,1,[],https://github.com/oetiker/rrdtool-1.x/pull/937,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/937#issuecomment-453156292,"The function substring is not used any more. This was a leftover
from cd4a728
Fixes rrd_graph.c:6159:7: warning:
no previous prototype for 'substring' [-Wmissing-prototypes]",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,938,2019-01-10T16:11:56Z,2019-01-11T02:32:35Z,2019-01-14T16:19:10Z,MERGED,True,2,4,1,https://github.com/c72578,Use g_list_free_full instead of g_list_foreach,2,[],https://github.com/oetiker/rrdtool-1.x/pull/938,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/938,"Fixes the following compiler warnings in rrd_create.c:

  236:34: warning: cast between incompatible function types from
  'void (*)(void *)' to 'void (*)(void *, void *)'
  [-Wcast-function-type] g_list_foreach( sources, (GFunc)free, NULL );

  1022:44: warning: cast between incompatible function types from
  'void (*)(rrd_file_t *)' {aka 'void (*)(struct rrd_file_t *)'} to
  'void (*)(void *, void *)' [-Wcast-function-type]
  g_list_foreach(sources_rrd_files, (GFunc) cleanup_source_file, NULL);","Fixes the following compiler warnings in rrd_create.c:

  236:34: warning: cast between incompatible function types from
  'void (*)(void *)' to 'void (*)(void *, void *)'
  [-Wcast-function-type] g_list_foreach( sources, (GFunc)free, NULL );

  1022:44: warning: cast between incompatible function types from
  'void (*)(rrd_file_t *)' {aka 'void (*)(struct rrd_file_t *)'} to
  'void (*)(void *, void *)' [-Wcast-function-type]
  g_list_foreach(sources_rrd_files, (GFunc) cleanup_source_file, NULL);",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,938,2019-01-10T16:11:56Z,2019-01-11T02:32:35Z,2019-01-14T16:19:10Z,MERGED,True,2,4,1,https://github.com/c72578,Use g_list_free_full instead of g_list_foreach,2,[],https://github.com/oetiker/rrdtool-1.x/pull/938,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/938#issuecomment-453350694,"Fixes the following compiler warnings in rrd_create.c:

  236:34: warning: cast between incompatible function types from
  'void (*)(void *)' to 'void (*)(void *, void *)'
  [-Wcast-function-type] g_list_foreach( sources, (GFunc)free, NULL );

  1022:44: warning: cast between incompatible function types from
  'void (*)(rrd_file_t *)' {aka 'void (*)(struct rrd_file_t *)'} to
  'void (*)(void *, void *)' [-Wcast-function-type]
  g_list_foreach(sources_rrd_files, (GFunc) cleanup_source_file, NULL);",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,938,2019-01-10T16:11:56Z,2019-01-11T02:32:35Z,2019-01-14T16:19:10Z,MERGED,True,2,4,1,https://github.com/c72578,Use g_list_free_full instead of g_list_foreach,2,[],https://github.com/oetiker/rrdtool-1.x/pull/938,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/938#issuecomment-454053202,"Fixes the following compiler warnings in rrd_create.c:

  236:34: warning: cast between incompatible function types from
  'void (*)(void *)' to 'void (*)(void *, void *)'
  [-Wcast-function-type] g_list_foreach( sources, (GFunc)free, NULL );

  1022:44: warning: cast between incompatible function types from
  'void (*)(rrd_file_t *)' {aka 'void (*)(struct rrd_file_t *)'} to
  'void (*)(void *, void *)' [-Wcast-function-type]
  g_list_foreach(sources_rrd_files, (GFunc) cleanup_source_file, NULL);","Remark: g_list_free_full requires glib 2.28 or newer, see:
https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-full",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,938,2019-01-10T16:11:56Z,2019-01-11T02:32:35Z,2019-01-14T16:19:10Z,MERGED,True,2,4,1,https://github.com/c72578,Use g_list_free_full instead of g_list_foreach,2,[],https://github.com/oetiker/rrdtool-1.x/pull/938,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/938#issuecomment-454064198,"Fixes the following compiler warnings in rrd_create.c:

  236:34: warning: cast between incompatible function types from
  'void (*)(void *)' to 'void (*)(void *, void *)'
  [-Wcast-function-type] g_list_foreach( sources, (GFunc)free, NULL );

  1022:44: warning: cast between incompatible function types from
  'void (*)(rrd_file_t *)' {aka 'void (*)(struct rrd_file_t *)'} to
  'void (*)(void *, void *)' [-Wcast-function-type]
  g_list_foreach(sources_rrd_files, (GFunc) cleanup_source_file, NULL);",I think requiring a 7 year old library is ok :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,940,2019-01-13T10:03:01Z,2019-01-14T16:19:37Z,2019-01-14T16:19:40Z,MERGED,True,1,1,1,https://github.com/nirgal,Re-enable 0-width lines,1,[],https://github.com/oetiker/rrdtool-1.x/pull/940,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/940,"Some people were using these invisible lines as a base for stacking other stuff.
This fixes #930","Some people were using these invisible lines as a base for stacking other stuff.
This fixes #930",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,940,2019-01-13T10:03:01Z,2019-01-14T16:19:37Z,2019-01-14T16:19:40Z,MERGED,True,1,1,1,https://github.com/nirgal,Re-enable 0-width lines,1,[],https://github.com/oetiker/rrdtool-1.x/pull/940,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/940#issuecomment-454064395,"Some people were using these invisible lines as a base for stacking other stuff.
This fixes #930",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,941,2019-01-15T09:47:25Z,2019-01-17T17:05:12Z,2019-01-17T17:05:12Z,MERGED,True,4,2,1,https://github.com/c72578,Define realpath for MinGW builds,2,[],https://github.com/oetiker/rrdtool-1.x/pull/941,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/941,"Define realpath the same way as in win32/rrd_config.h
Fixes the following compiler warnings in rrd_client.c:

  115:11: warning: implicit declaration of function 'realpath';
  [-Wimplicit-function-declaration] ret = realpath(path, NULL);
  115:11: warning: nested extern declaration of 'realpath'
  [-Wnested-externs]
  115:9: warning: assignment to 'char *' from 'int' makes pointer from
  integer without a cast [-Wint-conversion] ret = realpath(path, NULL);
  132:22: warning: assignment to 'char *' from 'int' makes pointer from
  integer without a cast [-Wint-conversion]
  dir_path = realpath(dir, NULL);","Define realpath the same way as in win32/rrd_config.h
Fixes the following compiler warnings in rrd_client.c:

  115:11: warning: implicit declaration of function 'realpath';
  [-Wimplicit-function-declaration] ret = realpath(path, NULL);
  115:11: warning: nested extern declaration of 'realpath'
  [-Wnested-externs]
  115:9: warning: assignment to 'char *' from 'int' makes pointer from
  integer without a cast [-Wint-conversion] ret = realpath(path, NULL);
  132:22: warning: assignment to 'char *' from 'int' makes pointer from
  integer without a cast [-Wint-conversion]
  dir_path = realpath(dir, NULL);",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,941,2019-01-15T09:47:25Z,2019-01-17T17:05:12Z,2019-01-17T17:05:12Z,MERGED,True,4,2,1,https://github.com/c72578,Define realpath for MinGW builds,2,[],https://github.com/oetiker/rrdtool-1.x/pull/941,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/941#issuecomment-454330992,"Define realpath the same way as in win32/rrd_config.h
Fixes the following compiler warnings in rrd_client.c:

  115:11: warning: implicit declaration of function 'realpath';
  [-Wimplicit-function-declaration] ret = realpath(path, NULL);
  115:11: warning: nested extern declaration of 'realpath'
  [-Wnested-externs]
  115:9: warning: assignment to 'char *' from 'int' makes pointer from
  integer without a cast [-Wint-conversion] ret = realpath(path, NULL);
  132:22: warning: assignment to 'char *' from 'int' makes pointer from
  integer without a cast [-Wint-conversion]
  dir_path = realpath(dir, NULL);","Further information concerning realpath under MinGW:
https://sourceforge.net/p/mingw/bugs/2207/
https://sourceforge.net/p/mingw/patches/256/#ef43
Used the suggested simple solution here:
#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,942,2019-01-16T08:20:12Z,2019-01-17T15:41:20Z,2019-01-17T15:41:23Z,MERGED,True,0,1,1,https://github.com/c72578,Remove LINKTYPE from perl-piped/Makefile.PL,1,[],https://github.com/oetiker/rrdtool-1.x/pull/942,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/942,"Remove line:
'linkext'   => {LINKTYPE => ''},
Since version 5.00 of MakeMaker such a line can be deleted safely.
MakeMaker recognizes when there's nothing to be linked.
See: https://perldoc.perl.org/ExtUtils/MakeMaker.html
Fixes Warning:
LINKTYPE set to '', no longer necessary","Remove line:
'linkext'   => {LINKTYPE => ''},
Since version 5.00 of MakeMaker such a line can be deleted safely.
MakeMaker recognizes when there's nothing to be linked.
See: https://perldoc.perl.org/ExtUtils/MakeMaker.html
Fixes Warning:
LINKTYPE set to '', no longer necessary",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,942,2019-01-16T08:20:12Z,2019-01-17T15:41:20Z,2019-01-17T15:41:23Z,MERGED,True,0,1,1,https://github.com/c72578,Remove LINKTYPE from perl-piped/Makefile.PL,1,[],https://github.com/oetiker/rrdtool-1.x/pull/942,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/942#issuecomment-455217491,"Remove line:
'linkext'   => {LINKTYPE => ''},
Since version 5.00 of MakeMaker such a line can be deleted safely.
MakeMaker recognizes when there's nothing to be linked.
See: https://perldoc.perl.org/ExtUtils/MakeMaker.html
Fixes Warning:
LINKTYPE set to '', no longer necessary",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,943,2019-01-18T17:10:03Z,2019-01-19T15:54:58Z,2019-01-19T15:55:01Z,MERGED,True,1630,1240,2,https://github.com/c72578,Fix: Cannot rename temporary file to final file,2,[],https://github.com/oetiker/rrdtool-1.x/pull/943,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/943,"Fixes the following failing tests under Windows:
modify1, modify2, modify3, modify4, modify5
Use CreateFileA() with FILE_SHARE_DELETE in rrd_open.c,
so that the outfilename can later be replaced by tmpfilename using
write_rrd() in rrd_create.c","Fixes the following failing tests under Windows:
modify1, modify2, modify3, modify4, modify5
Use CreateFileA() with FILE_SHARE_DELETE in rrd_open.c,
so that the outfilename can later be replaced by tmpfilename using
write_rrd() in rrd_create.c",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,943,2019-01-18T17:10:03Z,2019-01-19T15:54:58Z,2019-01-19T15:55:01Z,MERGED,True,1630,1240,2,https://github.com/c72578,Fix: Cannot rename temporary file to final file,2,[],https://github.com/oetiker/rrdtool-1.x/pull/943,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/943#issuecomment-455623908,"Fixes the following failing tests under Windows:
modify1, modify2, modify3, modify4, modify5
Use CreateFileA() with FILE_SHARE_DELETE in rrd_open.c,
so that the outfilename can later be replaced by tmpfilename using
write_rrd() in rrd_create.c","Here is an example to test this on Windows (modified from rrdtool tests, modify1):
rrdtool.exe create modify-test1b.rrd --start 1300000000 --step 60 DS:a:GAUGE:120:0:U  RRA:AVERAGE:0.5:1:10 RRA:AVERAGE:0.5:5:10
rrdtool.exe tune modify-test1b.rrd RRA#0:+10",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,943,2019-01-18T17:10:03Z,2019-01-19T15:54:58Z,2019-01-19T15:55:01Z,MERGED,True,1630,1240,2,https://github.com/c72578,Fix: Cannot rename temporary file to final file,2,[],https://github.com/oetiker/rrdtool-1.x/pull/943,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/943#issuecomment-455791680,"Fixes the following failing tests under Windows:
modify1, modify2, modify3, modify4, modify5
Use CreateFileA() with FILE_SHARE_DELETE in rrd_open.c,
so that the outfilename can later be replaced by tmpfilename using
write_rrd() in rrd_create.c",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,944,2019-01-19T22:46:41Z,2019-01-20T15:19:07Z,2019-01-20T15:19:07Z,MERGED,True,32,32,17,https://github.com/c72578,Use _WIN32 instead of WIN32 preprocessor macro,1,[],https://github.com/oetiker/rrdtool-1.x/pull/944,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/944,"_WIN32 is the recommended preprocessor macro
Substitute occurrences of WIN32 with _WIN32 using:

git grep -lw -e '#ifdef WIN32' -e '#ifndef WIN32' -e 'defined(WIN32)' \
-- '*.c' '*.h' '*.xs' | xargs \
sed -i -e 's/#ifdef WIN32/#ifdef _WIN32/g' \
-e 's/#ifndef WIN32/#ifndef _WIN32/g' \
-e 's/defined(WIN32)/defined(_WIN32)/g'","_WIN32 is the recommended preprocessor macro
Substitute occurrences of WIN32 with _WIN32 using:

git grep -lw -e '#ifdef WIN32' -e '#ifndef WIN32' -e 'defined(WIN32)' \
-- '*.c' '*.h' '*.xs' | xargs \
sed -i -e 's/#ifdef WIN32/#ifdef _WIN32/g' \
-e 's/#ifndef WIN32/#ifndef _WIN32/g' \
-e 's/defined(WIN32)/defined(_WIN32)/g'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,944,2019-01-19T22:46:41Z,2019-01-20T15:19:07Z,2019-01-20T15:19:07Z,MERGED,True,32,32,17,https://github.com/c72578,Use _WIN32 instead of WIN32 preprocessor macro,1,[],https://github.com/oetiker/rrdtool-1.x/pull/944,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/944#issuecomment-455821686,"_WIN32 is the recommended preprocessor macro
Substitute occurrences of WIN32 with _WIN32 using:

git grep -lw -e '#ifdef WIN32' -e '#ifndef WIN32' -e 'defined(WIN32)' \
-- '*.c' '*.h' '*.xs' | xargs \
sed -i -e 's/#ifdef WIN32/#ifdef _WIN32/g' \
-e 's/#ifndef WIN32/#ifndef _WIN32/g' \
-e 's/defined(WIN32)/defined(_WIN32)/g'","Info concerning the _WIN32 preprocessor macro:
C/C++ tip: How to detect the operating system type using compiler predefined macros",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,945,2019-01-20T21:16:10Z,2019-01-24T10:52:09Z,2019-01-24T10:52:10Z,MERGED,True,1,0,1,https://github.com/c72578,Include winsdkver.h for _WIN32_MAXVER,1,[],https://github.com/oetiker/rrdtool-1.x/pull/945,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/945,"_WIN32_MAXVER is defined in winsdkver.h
The include is required in case of MinGW-w64 builds
Fixes rrd_open.c:11:5: warning:
""_WIN32_MAXVER"" is not defined, evaluates to 0 [-Wundef]
#if _WIN32_MAXVER >= 0x0602 /* _WIN32_WINNT_WIN8 */","_WIN32_MAXVER is defined in winsdkver.h
The include is required in case of MinGW-w64 builds
Fixes rrd_open.c:11:5: warning:
""_WIN32_MAXVER"" is not defined, evaluates to 0 [-Wundef]
#if _WIN32_MAXVER >= 0x0602 /* _WIN32_WINNT_WIN8 */",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,945,2019-01-20T21:16:10Z,2019-01-24T10:52:09Z,2019-01-24T10:52:10Z,MERGED,True,1,0,1,https://github.com/c72578,Include winsdkver.h for _WIN32_MAXVER,1,[],https://github.com/oetiker/rrdtool-1.x/pull/945,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/945#issuecomment-457154444,"_WIN32_MAXVER is defined in winsdkver.h
The include is required in case of MinGW-w64 builds
Fixes rrd_open.c:11:5: warning:
""_WIN32_MAXVER"" is not defined, evaluates to 0 [-Wundef]
#if _WIN32_MAXVER >= 0x0602 /* _WIN32_WINNT_WIN8 */",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,946,2019-01-24T16:46:09Z,2019-01-25T09:59:47Z,2019-01-25T09:59:47Z,MERGED,True,4,2,1,https://github.com/c72578,Initialize local variable junk,1,[],https://github.com/oetiker/rrdtool-1.x/pull/946,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/946,"Fixes the following compiler warnings (MSVC):
rrd_modify.c(439) : warning C4700: uninitialized local variable
'junk' used
rrd_modify.c(1027) : warning C4700: uninitialized local variable
'junk' used","Fixes the following compiler warnings (MSVC):
rrd_modify.c(439) : warning C4700: uninitialized local variable
'junk' used
rrd_modify.c(1027) : warning C4700: uninitialized local variable
'junk' used",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,947,2019-01-25T10:11:22Z,2019-01-25T12:50:00Z,2019-01-25T12:50:03Z,MERGED,True,6,0,1,https://github.com/c72578,Fix rc compiler redefinition warnings (nmake),1,[],https://github.com/oetiker/rrdtool-1.x/pull/947,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/947,"Surround code in win32/rrd_config.h that causes warnings by rc with
#ifndef RC_INVOKED and #endif. Remark: _MSC_VER is unknown to rc
Fixes the following warnings for .rc files, e.g.:
rc /nologo /I./src /fo./win32/rrdtool.res ./win32\rrdtool.rc
./win32\rrd_config.h(130) : warning RC4005: 'isinf' : redefinition
./win32\rrd_config.h(131) : warning RC4005: 'isnan' : redefinition
This concerns: librrd-4.rc, rrdtool.rc, rrdupdate.rc, rrdcgi.rc,
when using the resource compiler (rc) via nmake under Windows","Surround code in win32/rrd_config.h that causes warnings by rc with
#ifndef RC_INVOKED and #endif. Remark: _MSC_VER is unknown to rc
Fixes the following warnings for .rc files, e.g.:
rc /nologo /I./src /fo./win32/rrdtool.res ./win32\rrdtool.rc
./win32\rrd_config.h(130) : warning RC4005: 'isinf' : redefinition
./win32\rrd_config.h(131) : warning RC4005: 'isnan' : redefinition
This concerns: librrd-4.rc, rrdtool.rc, rrdupdate.rc, rrdcgi.rc,
when using the resource compiler (rc) via nmake under Windows",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,947,2019-01-25T10:11:22Z,2019-01-25T12:50:00Z,2019-01-25T12:50:03Z,MERGED,True,6,0,1,https://github.com/c72578,Fix rc compiler redefinition warnings (nmake),1,[],https://github.com/oetiker/rrdtool-1.x/pull/947,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/947#issuecomment-457563149,"Surround code in win32/rrd_config.h that causes warnings by rc with
#ifndef RC_INVOKED and #endif. Remark: _MSC_VER is unknown to rc
Fixes the following warnings for .rc files, e.g.:
rc /nologo /I./src /fo./win32/rrdtool.res ./win32\rrdtool.rc
./win32\rrd_config.h(130) : warning RC4005: 'isinf' : redefinition
./win32\rrd_config.h(131) : warning RC4005: 'isnan' : redefinition
This concerns: librrd-4.rc, rrdtool.rc, rrdupdate.rc, rrdcgi.rc,
when using the resource compiler (rc) via nmake under Windows",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,948,2019-01-25T14:25:12Z,2019-02-03T12:33:40Z,2019-02-03T12:33:40Z,MERGED,True,5,5,2,https://github.com/c72578,Fix warnings: different const qualifiers (MSVC),3,[],https://github.com/oetiker/rrdtool-1.x/pull/948,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/948,"Cast affected variables from 'const char **' to 'char **'
Fixes the following warning:
C4090: 'function': different 'const' qualifiers
in: rrd_create.c(248), rrd_modify.c(1312),
rrd_modify.c(1329), rrd_modify.c(1457), rrd_modify.c(1463)","Cast affected variables from 'const char **' to 'char **'
Fixes the following warning:
C4090: 'function': different 'const' qualifiers
in: rrd_create.c(248), rrd_modify.c(1312),
rrd_modify.c(1329), rrd_modify.c(1457), rrd_modify.c(1463)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,949,2019-01-27T00:12:38Z,2019-01-28T10:43:22Z,2019-01-28T10:43:22Z,MERGED,True,2,0,1,https://github.com/c72578,Fix _errno inconsistent dll linkage (Windows),1,[],https://github.com/oetiker/rrdtool-1.x/pull/949,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/949,"Exclude in case of _WIN32 in rrd_snprintf.c:
extern int errno;
Fixes warnings:
MSVC:
rrd_snprintf.c(583): warning C4273:
'_errno': inconsistent dll linkage
errno.h(19): note: see previous definition of '_errno'
MinGW-w64 (gcc):
rrd_snprintf.c:583:12: warning: '_errno' redeclared without
dllimport attribute: previous dllimport ignored [-Wattributes]","Exclude in case of _WIN32 in rrd_snprintf.c:
extern int errno;
Fixes warnings:
MSVC:
rrd_snprintf.c(583): warning C4273:
'_errno': inconsistent dll linkage
errno.h(19): note: see previous definition of '_errno'
MinGW-w64 (gcc):
rrd_snprintf.c:583:12: warning: '_errno' redeclared without
dllimport attribute: previous dllimport ignored [-Wattributes]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,949,2019-01-27T00:12:38Z,2019-01-28T10:43:22Z,2019-01-28T10:43:22Z,MERGED,True,2,0,1,https://github.com/c72578,Fix _errno inconsistent dll linkage (Windows),1,[],https://github.com/oetiker/rrdtool-1.x/pull/949,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/949#issuecomment-458054791,"Exclude in case of _WIN32 in rrd_snprintf.c:
extern int errno;
Fixes warnings:
MSVC:
rrd_snprintf.c(583): warning C4273:
'_errno': inconsistent dll linkage
errno.h(19): note: see previous definition of '_errno'
MinGW-w64 (gcc):
rrd_snprintf.c:583:12: warning: '_errno' redeclared without
dllimport attribute: previous dllimport ignored [-Wattributes]","Compiler Warning (level 1) C4273:
https://docs.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-1-c4273",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,950,2019-01-28T20:24:39Z,2019-02-02T21:27:51Z,2019-02-02T21:27:51Z,MERGED,True,229,222,5,https://github.com/c72578,Add minor updates to Windows builds,4,[],https://github.com/oetiker/rrdtool-1.x/pull/950,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/950,"Remove win32/RCa02816, which is a temporary file
Use original Unix line endings for win32-glob.c and win32-glob.h
Define HAVE_ASPRINTF and HAVE_VASPRINTF in win32/rrd_config.h
Define PATH_MAX as _MAX_PATH for MSVC builds","Remove win32/RCa02816, which is a temporary file
Use original Unix line endings for win32-glob.c and win32-glob.h
Define HAVE_ASPRINTF and HAVE_VASPRINTF in win32/rrd_config.h
Define PATH_MAX as _MAX_PATH for MSVC builds",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,951,2019-02-04T10:09:25Z,2019-02-04T10:33:35Z,2019-02-04T10:33:35Z,MERGED,True,1,5,2,https://github.com/c72578,Remove librrd-4.vcxproj.user,1,[],https://github.com/oetiker/rrdtool-1.x/pull/951,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/951,"Remove file from git source control, because
.vcxproj.user files typically contain user-specific settings
or overrides","Remove file from git source control, because
.vcxproj.user files typically contain user-specific settings
or overrides",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,952,2019-02-04T11:19:09Z,2019-02-04T12:19:29Z,2019-02-04T12:33:51Z,MERGED,True,879,555,18,https://github.com/oetiker,ready for 1.7.1 release,1,[],https://github.com/oetiker/rrdtool-1.x/pull/952,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/952,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,953,2019-02-04T12:45:38Z,2019-02-04T13:09:16Z,2019-02-04T13:09:17Z,MERGED,True,3,3,1,https://github.com/c72578,Update version to 1.7.1 for MSVC builds,1,[],https://github.com/oetiker/rrdtool-1.x/pull/953,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/953,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,954,2019-02-04T13:08:41Z,2019-02-04T13:30:44Z,2019-02-04T13:30:50Z,MERGED,True,6,6,3,https://github.com/oetiker,171 release,3,[],https://github.com/oetiker/rrdtool-1.x/pull/954,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/954,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,955,2019-02-04T13:46:43Z,2019-02-04T14:05:20Z,2019-02-04T15:26:42Z,MERGED,True,9,11,3,https://github.com/oetiker,sync 1.7.1 release updates,1,[],https://github.com/oetiker/rrdtool-1.x/pull/955,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/955,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,957,2019-02-04T15:26:00Z,2019-02-04T15:52:24Z,2019-02-04T15:52:27Z,MERGED,True,2,2,2,https://github.com/oetiker,Fix tar,3,[],https://github.com/oetiker/rrdtool-1.x/pull/957,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/957,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,958,2019-02-04T16:18:20Z,2019-02-04T16:55:41Z,2019-02-04T16:55:41Z,MERGED,True,9,5,4,https://github.com/oetiker,Etc package fix,5,[],https://github.com/oetiker/rrdtool-1.x/pull/958,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/958,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,959,2019-02-04T17:42:00Z,2019-02-08T07:39:18Z,2019-02-08T07:39:18Z,CLOSED,False,2,2,2,https://github.com/oetiker,Missing test out,7,[],https://github.com/oetiker/rrdtool-1.x/pull/959,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/959,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,959,2019-02-04T17:42:00Z,2019-02-08T07:39:18Z,2019-02-08T07:39:18Z,CLOSED,False,2,2,2,https://github.com/oetiker,Missing test out,7,[],https://github.com/oetiker/rrdtool-1.x/pull/959,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/959#issuecomment-461487111,,oops ... thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,959,2019-02-04T17:42:00Z,2019-02-08T07:39:18Z,2019-02-08T07:39:18Z,CLOSED,False,2,2,2,https://github.com/oetiker,Missing test out,7,[],https://github.com/oetiker/rrdtool-1.x/pull/959,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/959#issuecomment-461716697,,added via 872c9de,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,960,2019-02-05T14:07:34Z,2019-02-05T15:20:58Z,2019-02-05T15:20:58Z,MERGED,True,4,4,2,https://github.com/yarda,Fixed 'No rule to make target 'etc/rrdcached.socket',1,[],https://github.com/oetiker/rrdtool-1.x/pull/960,https://github.com/yarda,1,https://github.com/oetiker/rrdtool-1.x/pull/960,"It's probably related to the #956 and tries to fix the following compilation error:
make[1]: *** No rule to make target 'etc/rrdcached.socket', needed by 'all-am'.  Stop.
make: *** [Makefile:502: all-recursive] Error 1","It's probably related to the #956 and tries to fix the following compilation error:
make[1]: *** No rule to make target 'etc/rrdcached.socket', needed by 'all-am'.  Stop.
make: *** [Makefile:502: all-recursive] Error 1",True,{'THUMBS_UP': ['https://github.com/c72578']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,960,2019-02-05T14:07:34Z,2019-02-05T15:20:58Z,2019-02-05T15:20:58Z,MERGED,True,4,4,2,https://github.com/yarda,Fixed 'No rule to make target 'etc/rrdcached.socket',1,[],https://github.com/oetiker/rrdtool-1.x/pull/960,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/960#issuecomment-460676934,"It's probably related to the #956 and tries to fix the following compilation error:
make[1]: *** No rule to make target 'etc/rrdcached.socket', needed by 'all-am'.  Stop.
make: *** [Makefile:502: all-recursive] Error 1",so true,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,961,2019-02-07T07:51:42Z,2019-02-07T12:46:04Z,2019-02-07T12:46:06Z,MERGED,True,35,27,5,https://github.com/oetiker,add releasee tests to travis and bump version number for rerelease wi…,6,[],https://github.com/oetiker/rrdtool-1.x/pull/961,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/961,…th fixed makefiles,…th fixed makefiles,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,961,2019-02-07T07:51:42Z,2019-02-07T12:46:04Z,2019-02-07T12:46:06Z,MERGED,True,35,27,5,https://github.com/oetiker,add releasee tests to travis and bump version number for rerelease wi…,6,[],https://github.com/oetiker/rrdtool-1.x/pull/961,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/961#issuecomment-461320624,…th fixed makefiles,"Should the following be updated too in configure.ac?
NUMVERS=1.7001
->
NUMVERS=1.7002",True,{'THUMBS_UP': ['https://github.com/oetiker']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,961,2019-02-07T07:51:42Z,2019-02-07T12:46:04Z,2019-02-07T12:46:06Z,MERGED,True,35,27,5,https://github.com/oetiker,add releasee tests to travis and bump version number for rerelease wi…,6,[],https://github.com/oetiker/rrdtool-1.x/pull/961,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/961#issuecomment-461321611,…th fixed makefiles,hmm all these numbers should be generated from the VERSION file ...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,961,2019-02-07T07:51:42Z,2019-02-07T12:46:04Z,2019-02-07T12:46:06Z,MERGED,True,35,27,5,https://github.com/oetiker,add releasee tests to travis and bump version number for rerelease wi…,6,[],https://github.com/oetiker/rrdtool-1.x/pull/961,https://github.com/c72578,4,https://github.com/oetiker/rrdtool-1.x/pull/961#issuecomment-461322700,…th fixed makefiles,"Yes, this would simplify things, if these numbers are generated from the VERSION file.
For consistency, the same NUMVERS should also be used in win32/rrd_config.h:
#define NUMVERS             1.72
->
#define NUMVERS             1.7002",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,961,2019-02-07T07:51:42Z,2019-02-07T12:46:04Z,2019-02-07T12:46:06Z,MERGED,True,35,27,5,https://github.com/oetiker,add releasee tests to travis and bump version number for rerelease wi…,6,[],https://github.com/oetiker/rrdtool-1.x/pull/961,https://github.com/c72578,5,https://github.com/oetiker/rrdtool-1.x/pull/961#issuecomment-461373877,…th fixed makefiles,"/bin/bash: ps2pdf: command not found
https://travis-ci.org/oetiker/rrdtool-1.x/builds/489975897?utm_source=github_status&utm_medium=notification
->
.travis.yml
sudo apt-get install ghostscript",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,962,2019-02-07T17:29:57Z,2019-02-08T07:25:51Z,2019-02-08T07:25:51Z,MERGED,True,1,1,1,https://github.com/nirgal,Typo,1,[],https://github.com/oetiker/rrdtool-1.x/pull/962,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/962,Thank lintian,Thank lintian,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,963,2019-02-08T07:39:38Z,2019-02-08T10:12:46Z,2019-02-08T10:12:50Z,MERGED,True,2,2,2,https://github.com/oetiker,Rerelease makefiles,1,[],https://github.com/oetiker/rrdtool-1.x/pull/963,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/963,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,964,2019-02-08T10:14:44Z,2019-02-11T13:16:44Z,2019-02-11T13:16:44Z,MERGED,True,7,0,1,https://github.com/oetiker,add notes on update,2,[],https://github.com/oetiker/rrdtool-1.x/pull/964,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/964,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,965,2019-02-10T00:03:08Z,2019-02-10T11:16:31Z,2019-02-10T11:16:31Z,MERGED,True,4,4,1,https://github.com/c72578,Define mkdir for Windows and require HAVE_GETUID,3,[],https://github.com/oetiker/rrdtool-1.x/pull/965,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/965,"Use macro for Windows: #define mkdir(A, B) mkdir(A)
mkdir() has only got one argument under Windows
Call getuid() only if HAVE_GETUID is defined
This is an update of: cc1256a
concerning rrd_tool.c, getuid and mkdir
Fixes the following MinGW-w64 compiler warnings [-Wunused-variable]:
rrd_tool.c: In function 'HandleInputLine':
rrd_tool.c:565:20: warning: unused variable 'dent'
rrd_tool.c:564:15: warning: unused variable 'curdir'","Use macro for Windows: #define mkdir(A, B) mkdir(A)
mkdir() has only got one argument under Windows
Call getuid() only if HAVE_GETUID is defined
This is an update of: cc1256a
concerning rrd_tool.c, getuid and mkdir
Fixes the following MinGW-w64 compiler warnings [-Wunused-variable]:
rrd_tool.c: In function 'HandleInputLine':
rrd_tool.c:565:20: warning: unused variable 'dent'
rrd_tool.c:564:15: warning: unused variable 'curdir'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,966,2019-02-10T01:52:14Z,2019-02-10T10:52:51Z,2019-02-10T10:52:53Z,MERGED,True,24,70,4,https://github.com/c72578,Update FSF address and fix UTF8,1,[],https://github.com/oetiker/rrdtool-1.x/pull/966,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/966,"Update FSF address in COPYRIGHT
old: 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
new: 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Update LICENSE file according to the current version from:
https://www.gnu.org/licenses/gpl-2.0.txt
Update bindings/python/COPYING according to the current version from:
https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt
Change encoding of CONTRIBUTORS from ISO 8859-1 to UTF-8
Fixes rpmlint warnings and errors:
W: file-not-utf8 CONTRIBUTORS
E: incorrect-fsf-address COPYRIGHT
E: incorrect-fsf-address LICENSE
E: incorrect-fsf-address bindings/python/COPYING","Update FSF address in COPYRIGHT
old: 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
new: 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Update LICENSE file according to the current version from:
https://www.gnu.org/licenses/gpl-2.0.txt
Update bindings/python/COPYING according to the current version from:
https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt
Change encoding of CONTRIBUTORS from ISO 8859-1 to UTF-8
Fixes rpmlint warnings and errors:
W: file-not-utf8 CONTRIBUTORS
E: incorrect-fsf-address COPYRIGHT
E: incorrect-fsf-address LICENSE
E: incorrect-fsf-address bindings/python/COPYING",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,966,2019-02-10T01:52:14Z,2019-02-10T10:52:51Z,2019-02-10T10:52:53Z,MERGED,True,24,70,4,https://github.com/c72578,Update FSF address and fix UTF8,1,[],https://github.com/oetiker/rrdtool-1.x/pull/966,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/966#issuecomment-462122159,"Update FSF address in COPYRIGHT
old: 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
new: 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Update LICENSE file according to the current version from:
https://www.gnu.org/licenses/gpl-2.0.txt
Update bindings/python/COPYING according to the current version from:
https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt
Change encoding of CONTRIBUTORS from ISO 8859-1 to UTF-8
Fixes rpmlint warnings and errors:
W: file-not-utf8 CONTRIBUTORS
E: incorrect-fsf-address COPYRIGHT
E: incorrect-fsf-address LICENSE
E: incorrect-fsf-address bindings/python/COPYING",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,969,2019-02-11T14:32:22Z,2019-02-11T15:20:30Z,2019-02-11T15:20:30Z,MERGED,True,0,11,1,https://github.com/c72578,Delete doc/name.inc,1,[],https://github.com/oetiker/rrdtool-1.x/pull/969,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/969,Fixes: #968,Fixes: #968,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/JKammler,1,https://github.com/oetiker/rrdtool-1.x/pull/970,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens","If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-462950017,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens","Can you comment on how your new algorithm is to be viewed in light of a 'COUNTER' type datasource.
The curent design was primarily developed with COUNTER type datasources in minde.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/JKammler,3,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-463307998,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens",The COUNTER type seems to be fine. I will investigate and comment this later because I just found another issue with the algorithm. When write_to_rras() is called twice an RRA with multiple steps gets a bit confused in some situations... oh dear... hard stuff.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-463312817,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens",make sure to add tests for the cases you are fixing,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-469052485,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens",any progress with testing ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/JKammler,6,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-469159709,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens","Hi Tobi,

I already took a look at the other tests to get an idea how I have to do it and began with a setup. Unfortunately I did not find the time yet to finish it. But it is on the top of my Jira-List.

As you know I would be very happy if this issue could be fixed.



Von: Tobias Oetiker <notifications@github.com>
Gesendet: Sonntag, 3. März 2019 19:57
An: oetiker/rrdtool-1.x <rrdtool-1.x@noreply.github.com>
Cc: Kammler, Jens, (TV), NMD-A1 <Jens.Kammler@Bertelsmann.de>; Author <author@noreply.github.com>
Betreff: Re: [oetiker/rrdtool-1.x] Optimized PDP calculation when multiple PDPs are closed and previous was open (#970)



any progress with testing ?

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_oetiker_rrdtool-2D1.x_pull_970-23issuecomment-2D469052485&d=DwMCaQ&c=vo2ie5TPcLdcgWuLVH4y8lsbGPqIayH3XbK3gK82Oco&r=EcrkhjDuhLR6buT4aHGRlYqh6uQ4XfoYHMRXRqEmhEk&m=nxHS3KFEe6Z6DEIrInVsNaJNE7vvnyTKTsXfnDY039U&s=mpVuQWc9UR8ZgPlcy8VHmVwbutD9X9YFYTM8ZUj4NpM&e=>, or mute the thread<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AYj8ZebREKSq5oCYyRBglhFGzo6HXoNXks5vTBr5gaJpZM4a3fAw&d=DwMCaQ&c=vo2ie5TPcLdcgWuLVH4y8lsbGPqIayH3XbK3gK82Oco&r=EcrkhjDuhLR6buT4aHGRlYqh6uQ4XfoYHMRXRqEmhEk&m=nxHS3KFEe6Z6DEIrInVsNaJNE7vvnyTKTsXfnDY039U&s=B-L_ng2Sw8QeHT0FpEGJpuDdsRl0mpTrMWEgxDeDcwI&e=>.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/oetiker,7,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-469995785,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens",looking good! thank you,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/JKammler,8,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-470038260,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens","Thank you for merging the code! Hopefully there is no negative side effect I didn’t consider.
BTW: While I was developing the tests, I noticed another minor issue independently of my changes with the unknown-seconds calculation for counter data sources… maybe I will report about and look into it when I find the time J",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,970,2019-02-12T17:28:55Z,2019-03-06T07:17:58Z,2019-03-06T14:15:43Z,MERGED,True,215,4,7,https://github.com/JKammler,Optimized PDP calculation when multiple PDPs are closed and previous was open ,4,[],https://github.com/oetiker/rrdtool-1.x/pull/970,https://github.com/oetiker,9,https://github.com/oetiker/rrdtool-1.x/pull/970#issuecomment-470122543,"If more than one PDP's are completed within an update and the previous chronologically oldest PDP was still open, there are two questionable effects:

The value of the last open PDP gets involved in the calculation of all PDPs to be completed. It is distributed evenly over them, even though it does not belong there in time:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500820:0  # Complete 2 PDP's  (90s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>2.5000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>2.5000000000e-01</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e-01</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e-01</v></row>


If the previously open PDP is considered as invalid because it consists of more than half unknown step-seconds, all PDPs to be completed are classified as invalid. This explains the behavior in Issue #768:

Example 1
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548500820:1  # Complete 2 PDP's (89s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>

Example 2
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's (270s value 1)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>NaN</v></row>

I am convinced that this is an error, because the already existing values of an open PDP do not affect the following PDP if this is not completed within the same update. So rrdtool works correctly if only 1 PDP is completed within one update:
Example
rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force an open PDP (30s value 1)
rrdtool update test.rrd 1548500819:0  # Complete 1 PDP (89s value 0)
rrdtool update test.rrd 1548500820:0  # Complete 1 PDP (1s value 0)

<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>

Proposal for a simple solution
If the situation described above occurs, the update can be split into two parts.
First, the previous PDP is calculated and completed, then all others. The update value is splitted proportionally to both parts. This solution solves both effects:

The existing values of the previous open PDP do not affect the calculation of the following PDPs any more:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500730:1  # Force open PDP (30s value 1)
rrdtool update test.rrd 1548501000:0  # Complete 5 PDP's (270s value 0)

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>5.0000000000e-01</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>0.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>0.0000000000e+00</v></row>


If the previously open PDP is considered invalid, the following PDP's are not affected anymore:

rrdtool create test.rrd --start 1548500640 -s 60 DS:AV:GAUGE:3600:0:1 RRA:AVERAGE:0.5:1:20
rrdtool update test.rrd 1548500700:1  # Initialize (value 1)
rrdtool update test.rrd 1548500731:U  # Force an open PDP with more than 50% unknown step-secs
rrdtool update test.rrd 1548501000:1  # Complete 5 PDP's

<!-- 2019-01-26 12:04:00 CET / 1548500640 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:05:00 CET / 1548500700 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:06:00 CET / 1548500760 --> <row><v>NaN</v></row>
<!-- 2019-01-26 12:07:00 CET / 1548500820 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:08:00 CET / 1548500880 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:09:00 CET / 1548500940 --> <row><v>1.0000000000e+00</v></row>
<!-- 2019-01-26 12:10:00 CET / 1548501000 --> <row><v>1.0000000000e+00</v></row>

What do you think?
Best regards
Jens",by all means!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,971,2019-02-14T00:25:00Z,2019-02-14T12:09:10Z,2019-02-14T12:09:10Z,MERGED,True,5,5,5,https://github.com/c72578,Update year in COPYRIGHT and win32/*.rc files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/971,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/971,"Remark: The year in these files is not updated automatically (yet) by
make dist.","Remark: The year in these files is not updated automatically (yet) by
make dist.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,972,2019-02-14T18:11:35Z,2019-02-15T07:35:43Z,2019-02-15T07:35:43Z,MERGED,True,0,435,1,https://github.com/c72578,Delete rrd_config.h.in,1,[],https://github.com/oetiker/rrdtool-1.x/pull/972,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/972,"Remove obsolete rrd_config.h.in file in the base directory.
The current file is src/rrd_config.h.in","Remove obsolete rrd_config.h.in file in the base directory.
The current file is src/rrd_config.h.in",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,973,2019-02-18T10:31:17Z,2019-02-18T13:17:18Z,2019-02-18T13:17:29Z,MERGED,True,13,0,1,https://github.com/c72578,"Update snprintf.m4, add _HW_FUNC_XPRINTF_REPLACE",1,[],https://github.com/oetiker/rrdtool-1.x/pull/973,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/973,"Add _HW_FUNC_XPRINTF_REPLACE again to snprintf.m4, in a modified way.
Use AC_LIBOBJ([rrd_snprintf]) instead of original AC_LIBOBJ([snprintf])
Fixes the following configure messages under MinGW-w64:
./configure: line 14694: _HW_FUNC_XPRINTF_REPLACE: command not found
./configure: line 14752: _HW_FUNC_XPRINTF_REPLACE: command not found","Add _HW_FUNC_XPRINTF_REPLACE again to snprintf.m4, in a modified way.
Use AC_LIBOBJ([rrd_snprintf]) instead of original AC_LIBOBJ([snprintf])
Fixes the following configure messages under MinGW-w64:
./configure: line 14694: _HW_FUNC_XPRINTF_REPLACE: command not found
./configure: line 14752: _HW_FUNC_XPRINTF_REPLACE: command not found",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,973,2019-02-18T10:31:17Z,2019-02-18T13:17:18Z,2019-02-18T13:17:29Z,MERGED,True,13,0,1,https://github.com/c72578,"Update snprintf.m4, add _HW_FUNC_XPRINTF_REPLACE",1,[],https://github.com/oetiker/rrdtool-1.x/pull/973,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/973#issuecomment-464716878,"Add _HW_FUNC_XPRINTF_REPLACE again to snprintf.m4, in a modified way.
Use AC_LIBOBJ([rrd_snprintf]) instead of original AC_LIBOBJ([snprintf])
Fixes the following configure messages under MinGW-w64:
./configure: line 14694: _HW_FUNC_XPRINTF_REPLACE: command not found
./configure: line 14752: _HW_FUNC_XPRINTF_REPLACE: command not found",odd did we accidentally delete it?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,973,2019-02-18T10:31:17Z,2019-02-18T13:17:18Z,2019-02-18T13:17:29Z,MERGED,True,13,0,1,https://github.com/c72578,"Update snprintf.m4, add _HW_FUNC_XPRINTF_REPLACE",1,[],https://github.com/oetiker/rrdtool-1.x/pull/973,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/973#issuecomment-464720959,"Add _HW_FUNC_XPRINTF_REPLACE again to snprintf.m4, in a modified way.
Use AC_LIBOBJ([rrd_snprintf]) instead of original AC_LIBOBJ([snprintf])
Fixes the following configure messages under MinGW-w64:
./configure: line 14694: _HW_FUNC_XPRINTF_REPLACE: command not found
./configure: line 14752: _HW_FUNC_XPRINTF_REPLACE: command not found","It was removed by the following commit:
614c9e0

make sure non of the standard *printf functions get replaced. we only need this in specific places.

In this commit, XXX was added to the functions, e.g.:
-[AC_DEFINE([vsnprintf], [rpl_vsnprintf],
+[AC_DEFINE([XXXvsnprintf], [XXXrpl_vsnprintf],
However, also _HW_FUNC_XPRINTF_REPLACE was removed from m4/snprintf.m4",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,973,2019-02-18T10:31:17Z,2019-02-18T13:17:18Z,2019-02-18T13:17:29Z,MERGED,True,13,0,1,https://github.com/c72578,"Update snprintf.m4, add _HW_FUNC_XPRINTF_REPLACE",1,[],https://github.com/oetiker/rrdtool-1.x/pull/973,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/973#issuecomment-464728132,"Add _HW_FUNC_XPRINTF_REPLACE again to snprintf.m4, in a modified way.
Use AC_LIBOBJ([rrd_snprintf]) instead of original AC_LIBOBJ([snprintf])
Fixes the following configure messages under MinGW-w64:
./configure: line 14694: _HW_FUNC_XPRINTF_REPLACE: command not found
./configure: line 14752: _HW_FUNC_XPRINTF_REPLACE: command not found",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,974,2019-02-18T15:37:47Z,2019-02-18T16:06:02Z,2019-02-18T16:06:02Z,MERGED,True,2,2,1,https://github.com/c72578,Update etc/Makefile.am,1,[],https://github.com/oetiker/rrdtool-1.x/pull/974,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/974,"Add rrdcached-init-lsb to EXTRA_DIST
Trim trailing space after backslash. Fixes:
etc/Makefile.am:1: warning: whitespace following trailing backslash","Add rrdcached-init-lsb to EXTRA_DIST
Trim trailing space after backslash. Fixes:
etc/Makefile.am:1: warning: whitespace following trailing backslash",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,976,2019-03-03T13:23:54Z,2019-06-05T18:09:20Z,2019-06-05T18:09:20Z,MERGED,True,11,1,3,https://github.com/TheWitness,Adding Rounding Function for RRDTool,4,[],https://github.com/oetiker/rrdtool-1.x/pull/976,https://github.com/TheWitness,1,https://github.com/oetiker/rrdtool-1.x/pull/976,"I was playing with a Cacti Graph Template the other day and saw the time related averaging that is inherit in RRDTool making values that should appear integers appear as floats on the graph.  So, I'm like, hey ""I'll just use a rounding function, that'll work"".  Only to find that it was missing.
Love to tool been using it for almost two decades, though I don't consider myself an expert.  Here is a little contribution from me.  Nothing magical, just a rounding function.  Related to the following bug report.
#975
Thank you Tobi for all you have done for the monitoring community.  Be well.","I was playing with a Cacti Graph Template the other day and saw the time related averaging that is inherit in RRDTool making values that should appear integers appear as floats on the graph.  So, I'm like, hey ""I'll just use a rounding function, that'll work"".  Only to find that it was missing.
Love to tool been using it for almost two decades, though I don't consider myself an expert.  Here is a little contribution from me.  Nothing magical, just a rounding function.  Related to the following bug report.
#975
Thank you Tobi for all you have done for the monitoring community.  Be well.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,976,2019-03-03T13:23:54Z,2019-06-05T18:09:20Z,2019-06-05T18:09:20Z,MERGED,True,11,1,3,https://github.com/TheWitness,Adding Rounding Function for RRDTool,4,[],https://github.com/oetiker/rrdtool-1.x/pull/976,https://github.com/netniV,2,https://github.com/oetiker/rrdtool-1.x/pull/976#issuecomment-469040968,"I was playing with a Cacti Graph Template the other day and saw the time related averaging that is inherit in RRDTool making values that should appear integers appear as floats on the graph.  So, I'm like, hey ""I'll just use a rounding function, that'll work"".  Only to find that it was missing.
Love to tool been using it for almost two decades, though I don't consider myself an expert.  Here is a little contribution from me.  Nothing magical, just a rounding function.  Related to the following bug report.
#975
Thank you Tobi for all you have done for the monitoring community.  Be well.",Always a useful thing to have,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,976,2019-03-03T13:23:54Z,2019-06-05T18:09:20Z,2019-06-05T18:09:20Z,MERGED,True,11,1,3,https://github.com/TheWitness,Adding Rounding Function for RRDTool,4,[],https://github.com/oetiker/rrdtool-1.x/pull/976,https://github.com/netniV,3,https://github.com/oetiker/rrdtool-1.x/pull/976#issuecomment-469042918,"I was playing with a Cacti Graph Template the other day and saw the time related averaging that is inherit in RRDTool making values that should appear integers appear as floats on the graph.  So, I'm like, hey ""I'll just use a rounding function, that'll work"".  Only to find that it was missing.
Love to tool been using it for almost two decades, though I don't consider myself an expert.  Here is a little contribution from me.  Nothing magical, just a rounding function.  Related to the following bug report.
#975
Thank you Tobi for all you have done for the monitoring community.  Be well.",Could probably do with allowing a parameter for the number of places to round by?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,976,2019-03-03T13:23:54Z,2019-06-05T18:09:20Z,2019-06-05T18:09:20Z,MERGED,True,11,1,3,https://github.com/TheWitness,Adding Rounding Function for RRDTool,4,[],https://github.com/oetiker/rrdtool-1.x/pull/976,https://github.com/TheWitness,4,https://github.com/oetiker/rrdtool-1.x/pull/976#issuecomment-469049687,"I was playing with a Cacti Graph Template the other day and saw the time related averaging that is inherit in RRDTool making values that should appear integers appear as floats on the graph.  So, I'm like, hey ""I'll just use a rounding function, that'll work"".  Only to find that it was missing.
Love to tool been using it for almost two decades, though I don't consider myself an expert.  Here is a little contribution from me.  Nothing magical, just a rounding function.  Related to the following bug report.
#975
Thank you Tobi for all you have done for the monitoring community.  Be well.","You can achieve the same results by first multiplying by XX rounding, and diving by XX.  So, it can be achieved without modifying this pull.  I'll defer to @oetiker and what he wants to see.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,976,2019-03-03T13:23:54Z,2019-06-05T18:09:20Z,2019-06-05T18:09:20Z,MERGED,True,11,1,3,https://github.com/TheWitness,Adding Rounding Function for RRDTool,4,[],https://github.com/oetiker/rrdtool-1.x/pull/976,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/976#issuecomment-469052345,"I was playing with a Cacti Graph Template the other day and saw the time related averaging that is inherit in RRDTool making values that should appear integers appear as floats on the graph.  So, I'm like, hey ""I'll just use a rounding function, that'll work"".  Only to find that it was missing.
Love to tool been using it for almost two decades, though I don't consider myself an expert.  Here is a little contribution from me.  Nothing magical, just a rounding function.  Related to the following bug report.
#975
Thank you Tobi for all you have done for the monitoring community.  Be well.","since neither ceil nor floor offer that precision, I would go for the simple version",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,976,2019-03-03T13:23:54Z,2019-06-05T18:09:20Z,2019-06-05T18:09:20Z,MERGED,True,11,1,3,https://github.com/TheWitness,Adding Rounding Function for RRDTool,4,[],https://github.com/oetiker/rrdtool-1.x/pull/976,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/976#issuecomment-469052417,"I was playing with a Cacti Graph Template the other day and saw the time related averaging that is inherit in RRDTool making values that should appear integers appear as floats on the graph.  So, I'm like, hey ""I'll just use a rounding function, that'll work"".  Only to find that it was missing.
Love to tool been using it for almost two decades, though I don't consider myself an expert.  Here is a little contribution from me.  Nothing magical, just a rounding function.  Related to the following bug report.
#975
Thank you Tobi for all you have done for the monitoring community.  Be well.",I will release 1.7.2 prior to adding this functionality,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,977,2019-03-06T17:34:29Z,2019-03-06T21:32:37Z,2019-03-06T21:32:37Z,MERGED,True,15,15,4,https://github.com/c72578,Allow nan and -nan in test pdp-calc1,1,[],https://github.com/oetiker/rrdtool-1.x/pull/977,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/977,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,978,2019-03-10T01:26:39Z,2019-03-10T12:50:09Z,2019-03-10T12:50:09Z,MERGED,True,954,763,2,https://github.com/c72578,"Indent src/rrd_xport.c, tests/Makefile.am",1,[],https://github.com/oetiker/rrdtool-1.x/pull/978,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/978,"Indent src/rrd_xport.c using GNU indent 2.2.12
tests/Makefile.am:
Use tab in lines 8 and 22, like in the other lines of Makefile.am","Indent src/rrd_xport.c using GNU indent 2.2.12
tests/Makefile.am:
Use tab in lines 8 and 22, like in the other lines of Makefile.am",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,979,2019-03-11T00:06:20Z,2019-03-11T07:50:10Z,2019-03-11T07:50:10Z,MERGED,True,51,5,3,https://github.com/c72578,"Add typenames to .indent.pro, add to EXTRA_DIST",1,[],https://github.com/oetiker/rrdtool-1.x/pull/979,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/979,"Several typenames have been added in the meantime using typedef.
Add them to .indent.pro
Add .indent.pro file to EXTRA_DIST, so that it is available in the
tarball
re-indent src/rrd_xport.c with updated .indent.pro","Several typenames have been added in the meantime using typedef.
Add them to .indent.pro
Add .indent.pro file to EXTRA_DIST, so that it is available in the
tarball
re-indent src/rrd_xport.c with updated .indent.pro",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,980,2019-03-18T16:37:56Z,2019-03-19T22:55:52Z,2019-03-20T07:18:55Z,MERGED,True,10,12,4,https://github.com/Titan-C,Fix bounds in rrd_xport fix #913 and #928,4,[],https://github.com/oetiker/rrdtool-1.x/pull/980,https://github.com/Titan-C,1,https://github.com/oetiker/rrdtool-1.x/pull/980,"rrdxport needs to provide enough data points in its output for the
receiving client to be able to reproduce the graphs generated by rrdgraph.

The start time pointer needs to be at the start of the interval that
contain the query start time. For the function that retrieves the data.
On output the returned start timestamp is > than query timestamp.
SV export was missing the end boundary

This aims to fix issue #913 and extends on #928
Using the script of #913 (comment), this changes generate this new output.
All necessary values, associated for every timestamp are provided, in XML/JSON export as in the SV, to accurately reproduce an graph in the queried interval.
Still needs to be fixed.

 TEST
 Docs, particularly changes in  #931

Example output below:
DATABASE NATIVE RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000080,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ],
    [ ""1500000020"",2.0000000000e+01, 2.1000000000e+01 ],
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000040"",4.0000000000e+01, 4.1000000000e+01 ],
    [ ""1500000050"",5.0000000000e+01, 5.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000070"",7.0000000000e+01, 7.1000000000e+01 ],
    [ ""1500000080"",8.0000000000e+01, 8.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""
1500000020,""2.0000000000e+01"",""2.1000000000e+01""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000040,""4.0000000000e+01"",""4.1000000000e+01""
1500000050,""5.0000000000e+01"",""5.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000070,""7.0000000000e+01"",""7.1000000000e+01""
1500000080,""8.0000000000e+01"",""8.1000000000e+01""
For resampled data the the behaviour is also fixed:
DATABASE RESAMPLED RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000030,
    ""end"": 1500000090,
    ""step"": 30,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000090"",null, null ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000090,""NaN"",""NaN""
For queries within 2 timestamps only one value is returned, and metadata reflects the output coherently.
DATABASE QUERY WITHIN MEASUREMENTS
Query start:  1500000002 : Fri Jul 14 04:40:02 CEST 2017
Query end  : 1500000009 : Fri Jul 14 04:40:09 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000010,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""","rrdxport needs to provide enough data points in its output for the
receiving client to be able to reproduce the graphs generated by rrdgraph.

The start time pointer needs to be at the start of the interval that
contain the query start time. For the function that retrieves the data.
On output the returned start timestamp is > than query timestamp.
SV export was missing the end boundary

This aims to fix issue #913 and extends on #928
Using the script of #913 (comment), this changes generate this new output.
All necessary values, associated for every timestamp are provided, in XML/JSON export as in the SV, to accurately reproduce an graph in the queried interval.
Still needs to be fixed.

 TEST
 Docs, particularly changes in  #931

Example output below:
DATABASE NATIVE RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000080,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ],
    [ ""1500000020"",2.0000000000e+01, 2.1000000000e+01 ],
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000040"",4.0000000000e+01, 4.1000000000e+01 ],
    [ ""1500000050"",5.0000000000e+01, 5.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000070"",7.0000000000e+01, 7.1000000000e+01 ],
    [ ""1500000080"",8.0000000000e+01, 8.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""
1500000020,""2.0000000000e+01"",""2.1000000000e+01""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000040,""4.0000000000e+01"",""4.1000000000e+01""
1500000050,""5.0000000000e+01"",""5.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000070,""7.0000000000e+01"",""7.1000000000e+01""
1500000080,""8.0000000000e+01"",""8.1000000000e+01""
For resampled data the the behaviour is also fixed:
DATABASE RESAMPLED RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000030,
    ""end"": 1500000090,
    ""step"": 30,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000090"",null, null ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000090,""NaN"",""NaN""
For queries within 2 timestamps only one value is returned, and metadata reflects the output coherently.
DATABASE QUERY WITHIN MEASUREMENTS
Query start:  1500000002 : Fri Jul 14 04:40:02 CEST 2017
Query end  : 1500000009 : Fri Jul 14 04:40:09 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000010,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,980,2019-03-18T16:37:56Z,2019-03-19T22:55:52Z,2019-03-20T07:18:55Z,MERGED,True,10,12,4,https://github.com/Titan-C,Fix bounds in rrd_xport fix #913 and #928,4,[],https://github.com/oetiker/rrdtool-1.x/pull/980,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/980#issuecomment-474227610,"rrdxport needs to provide enough data points in its output for the
receiving client to be able to reproduce the graphs generated by rrdgraph.

The start time pointer needs to be at the start of the interval that
contain the query start time. For the function that retrieves the data.
On output the returned start timestamp is > than query timestamp.
SV export was missing the end boundary

This aims to fix issue #913 and extends on #928
Using the script of #913 (comment), this changes generate this new output.
All necessary values, associated for every timestamp are provided, in XML/JSON export as in the SV, to accurately reproduce an graph in the queried interval.
Still needs to be fixed.

 TEST
 Docs, particularly changes in  #931

Example output below:
DATABASE NATIVE RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000080,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ],
    [ ""1500000020"",2.0000000000e+01, 2.1000000000e+01 ],
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000040"",4.0000000000e+01, 4.1000000000e+01 ],
    [ ""1500000050"",5.0000000000e+01, 5.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000070"",7.0000000000e+01, 7.1000000000e+01 ],
    [ ""1500000080"",8.0000000000e+01, 8.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""
1500000020,""2.0000000000e+01"",""2.1000000000e+01""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000040,""4.0000000000e+01"",""4.1000000000e+01""
1500000050,""5.0000000000e+01"",""5.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000070,""7.0000000000e+01"",""7.1000000000e+01""
1500000080,""8.0000000000e+01"",""8.1000000000e+01""
For resampled data the the behaviour is also fixed:
DATABASE RESAMPLED RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000030,
    ""end"": 1500000090,
    ""step"": 30,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000090"",null, null ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000090,""NaN"",""NaN""
For queries within 2 timestamps only one value is returned, and metadata reflects the output coherently.
DATABASE QUERY WITHIN MEASUREMENTS
Query start:  1500000002 : Fri Jul 14 04:40:02 CEST 2017
Query end  : 1500000009 : Fri Jul 14 04:40:09 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000010,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,980,2019-03-18T16:37:56Z,2019-03-19T22:55:52Z,2019-03-20T07:18:55Z,MERGED,True,10,12,4,https://github.com/Titan-C,Fix bounds in rrd_xport fix #913 and #928,4,[],https://github.com/oetiker/rrdtool-1.x/pull/980,https://github.com/Titan-C,3,https://github.com/oetiker/rrdtool-1.x/pull/980#issuecomment-474408355,"rrdxport needs to provide enough data points in its output for the
receiving client to be able to reproduce the graphs generated by rrdgraph.

The start time pointer needs to be at the start of the interval that
contain the query start time. For the function that retrieves the data.
On output the returned start timestamp is > than query timestamp.
SV export was missing the end boundary

This aims to fix issue #913 and extends on #928
Using the script of #913 (comment), this changes generate this new output.
All necessary values, associated for every timestamp are provided, in XML/JSON export as in the SV, to accurately reproduce an graph in the queried interval.
Still needs to be fixed.

 TEST
 Docs, particularly changes in  #931

Example output below:
DATABASE NATIVE RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000080,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ],
    [ ""1500000020"",2.0000000000e+01, 2.1000000000e+01 ],
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000040"",4.0000000000e+01, 4.1000000000e+01 ],
    [ ""1500000050"",5.0000000000e+01, 5.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000070"",7.0000000000e+01, 7.1000000000e+01 ],
    [ ""1500000080"",8.0000000000e+01, 8.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""
1500000020,""2.0000000000e+01"",""2.1000000000e+01""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000040,""4.0000000000e+01"",""4.1000000000e+01""
1500000050,""5.0000000000e+01"",""5.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000070,""7.0000000000e+01"",""7.1000000000e+01""
1500000080,""8.0000000000e+01"",""8.1000000000e+01""
For resampled data the the behaviour is also fixed:
DATABASE RESAMPLED RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000030,
    ""end"": 1500000090,
    ""step"": 30,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000090"",null, null ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000090,""NaN"",""NaN""
For queries within 2 timestamps only one value is returned, and metadata reflects the output coherently.
DATABASE QUERY WITHIN MEASUREMENTS
Query start:  1500000002 : Fri Jul 14 04:40:02 CEST 2017
Query end  : 1500000009 : Fri Jul 14 04:40:09 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000010,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""","Hi,
How does it go on? Does this get merged, do you need something else?
I was also wondering if it would be pertinent to change in the XML/JSON export to:
@@ -750,10 +750,10 @@ static int rrd_xport_format_xmljson(
     } else {
         if (json) {
             snprintf(buf, sizeof(buf), ""    \""%s\"": %lld,\n"", META_START_TAG,
-                     (long long int) start + step);
+                     (long long int) start);
         } else {
             snprintf(buf, sizeof(buf), ""    <%s>%lld</%s>\n"", META_START_TAG,
-                     (long long int) start + step, META_START_TAG);
+                     (long long int) start, META_START_TAG);
         }
     }
     addToBuffer(buffer, buf, 0);
That would only have an influence in the metadata section.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,980,2019-03-18T16:37:56Z,2019-03-19T22:55:52Z,2019-03-20T07:18:55Z,MERGED,True,10,12,4,https://github.com/Titan-C,Fix bounds in rrd_xport fix #913 and #928,4,[],https://github.com/oetiker/rrdtool-1.x/pull/980,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/980#issuecomment-474616389,"rrdxport needs to provide enough data points in its output for the
receiving client to be able to reproduce the graphs generated by rrdgraph.

The start time pointer needs to be at the start of the interval that
contain the query start time. For the function that retrieves the data.
On output the returned start timestamp is > than query timestamp.
SV export was missing the end boundary

This aims to fix issue #913 and extends on #928
Using the script of #913 (comment), this changes generate this new output.
All necessary values, associated for every timestamp are provided, in XML/JSON export as in the SV, to accurately reproduce an graph in the queried interval.
Still needs to be fixed.

 TEST
 Docs, particularly changes in  #931

Example output below:
DATABASE NATIVE RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000080,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ],
    [ ""1500000020"",2.0000000000e+01, 2.1000000000e+01 ],
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000040"",4.0000000000e+01, 4.1000000000e+01 ],
    [ ""1500000050"",5.0000000000e+01, 5.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000070"",7.0000000000e+01, 7.1000000000e+01 ],
    [ ""1500000080"",8.0000000000e+01, 8.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""
1500000020,""2.0000000000e+01"",""2.1000000000e+01""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000040,""4.0000000000e+01"",""4.1000000000e+01""
1500000050,""5.0000000000e+01"",""5.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000070,""7.0000000000e+01"",""7.1000000000e+01""
1500000080,""8.0000000000e+01"",""8.1000000000e+01""
For resampled data the the behaviour is also fixed:
DATABASE RESAMPLED RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000030,
    ""end"": 1500000090,
    ""step"": 30,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000090"",null, null ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000090,""NaN"",""NaN""
For queries within 2 timestamps only one value is returned, and metadata reflects the output coherently.
DATABASE QUERY WITHIN MEASUREMENTS
Query start:  1500000002 : Fri Jul 14 04:40:02 CEST 2017
Query end  : 1500000009 : Fri Jul 14 04:40:09 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000010,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""","Hi,
How does it go on?

sorry got distracted :)

That would only have an influence in the metadata section.

why would you change the metadata section?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,980,2019-03-18T16:37:56Z,2019-03-19T22:55:52Z,2019-03-20T07:18:55Z,MERGED,True,10,12,4,https://github.com/Titan-C,Fix bounds in rrd_xport fix #913 and #928,4,[],https://github.com/oetiker/rrdtool-1.x/pull/980,https://github.com/Titan-C,5,https://github.com/oetiker/rrdtool-1.x/pull/980#issuecomment-474641746,"rrdxport needs to provide enough data points in its output for the
receiving client to be able to reproduce the graphs generated by rrdgraph.

The start time pointer needs to be at the start of the interval that
contain the query start time. For the function that retrieves the data.
On output the returned start timestamp is > than query timestamp.
SV export was missing the end boundary

This aims to fix issue #913 and extends on #928
Using the script of #913 (comment), this changes generate this new output.
All necessary values, associated for every timestamp are provided, in XML/JSON export as in the SV, to accurately reproduce an graph in the queried interval.
Still needs to be fixed.

 TEST
 Docs, particularly changes in  #931

Example output below:
DATABASE NATIVE RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000080,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ],
    [ ""1500000020"",2.0000000000e+01, 2.1000000000e+01 ],
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000040"",4.0000000000e+01, 4.1000000000e+01 ],
    [ ""1500000050"",5.0000000000e+01, 5.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000070"",7.0000000000e+01, 7.1000000000e+01 ],
    [ ""1500000080"",8.0000000000e+01, 8.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""
1500000020,""2.0000000000e+01"",""2.1000000000e+01""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000040,""4.0000000000e+01"",""4.1000000000e+01""
1500000050,""5.0000000000e+01"",""5.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000070,""7.0000000000e+01"",""7.1000000000e+01""
1500000080,""8.0000000000e+01"",""8.1000000000e+01""
For resampled data the the behaviour is also fixed:
DATABASE RESAMPLED RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000030,
    ""end"": 1500000090,
    ""step"": 30,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000090"",null, null ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000090,""NaN"",""NaN""
For queries within 2 timestamps only one value is returned, and metadata reflects the output coherently.
DATABASE QUERY WITHIN MEASUREMENTS
Query start:  1500000002 : Fri Jul 14 04:40:02 CEST 2017
Query end  : 1500000009 : Fri Jul 14 04:40:09 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000010,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""","why would you change the metadata section?
Well, now in the metadata start and end timestamps also mark the bounds
of all the timestamped values returned in the data array. That is, it is
a closed interval description.

For that reason the amount of data rows would need to be calculated as:

(start-end)/step + 1

start==first_timestamp, and the validity of the first interval is
[start-step; start[.

If I change the metadata section as proposed in the diff. The amount of
data rows is calculated:

(start-end)/step

In this case, start+step==first_timestamp, and the validity of the first
interval is [start; start+step[.

It is just a matter of convention. That's why I was unsure on that change.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,980,2019-03-18T16:37:56Z,2019-03-19T22:55:52Z,2019-03-20T07:18:55Z,MERGED,True,10,12,4,https://github.com/Titan-C,Fix bounds in rrd_xport fix #913 and #928,4,[],https://github.com/oetiker/rrdtool-1.x/pull/980,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/980#issuecomment-474714988,"rrdxport needs to provide enough data points in its output for the
receiving client to be able to reproduce the graphs generated by rrdgraph.

The start time pointer needs to be at the start of the interval that
contain the query start time. For the function that retrieves the data.
On output the returned start timestamp is > than query timestamp.
SV export was missing the end boundary

This aims to fix issue #913 and extends on #928
Using the script of #913 (comment), this changes generate this new output.
All necessary values, associated for every timestamp are provided, in XML/JSON export as in the SV, to accurately reproduce an graph in the queried interval.
Still needs to be fixed.

 TEST
 Docs, particularly changes in  #931

Example output below:
DATABASE NATIVE RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000080,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ],
    [ ""1500000020"",2.0000000000e+01, 2.1000000000e+01 ],
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000040"",4.0000000000e+01, 4.1000000000e+01 ],
    [ ""1500000050"",5.0000000000e+01, 5.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000070"",7.0000000000e+01, 7.1000000000e+01 ],
    [ ""1500000080"",8.0000000000e+01, 8.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""
1500000020,""2.0000000000e+01"",""2.1000000000e+01""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000040,""4.0000000000e+01"",""4.1000000000e+01""
1500000050,""5.0000000000e+01"",""5.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000070,""7.0000000000e+01"",""7.1000000000e+01""
1500000080,""8.0000000000e+01"",""8.1000000000e+01""
For resampled data the the behaviour is also fixed:
DATABASE RESAMPLED RESOLUTION
Query start:  1500000005 : Fri Jul 14 04:40:05 CEST 2017
Query end  : 1500000072 : Fri Jul 14 04:41:12 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000030,
    ""end"": 1500000090,
    ""step"": 30,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000030"",3.0000000000e+01, 3.1000000000e+01 ],
    [ ""1500000060"",6.0000000000e+01, 6.1000000000e+01 ],
    [ ""1500000090"",null, null ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000030,""3.0000000000e+01"",""3.1000000000e+01""
1500000060,""6.0000000000e+01"",""6.1000000000e+01""
1500000090,""NaN"",""NaN""
For queries within 2 timestamps only one value is returned, and metadata reflects the output coherently.
DATABASE QUERY WITHIN MEASUREMENTS
Query start:  1500000002 : Fri Jul 14 04:40:02 CEST 2017
Query end  : 1500000009 : Fri Jul 14 04:40:09 CEST 2017
RRD XPORT
{ ""about"": ""RRDtool graph JSON output"",
  ""meta"": {
    ""start"": 1500000010,
    ""end"": 1500000010,
    ""step"": 10,
    ""legend"": [
      """",
      """"
          ]
     },
  ""data"": [
    [ ""1500000010"",1.0000000000e+01, 1.1000000000e+01 ]
  ]
}
RRD CSV
0x0
""time"",""first"",""second""
1500000010,""1.0000000000e+01"",""1.1000000000e+01""","no the the metadata should represent what is in the xport
note that the value stored in a slot are 'valid' for the time from start to just before end ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,981,2019-03-18T16:49:02Z,2019-03-19T07:24:38Z,2019-03-19T07:24:44Z,MERGED,True,24,3,2,https://github.com/c72578,Fix %s/%S unit autoscaling in gprint for json/xml,1,[],https://github.com/oetiker/rrdtool-1.x/pull/981,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/981,"This PR includes the patch from @az143, which has been submitted in
0564d09
Indentation was updated using indent
Fixes #908","This PR includes the patch from @az143, which has been submitted in
0564d09
Indentation was updated using indent
Fixes #908",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,981,2019-03-18T16:49:02Z,2019-03-19T07:24:38Z,2019-03-19T07:24:44Z,MERGED,True,24,3,2,https://github.com/c72578,Fix %s/%S unit autoscaling in gprint for json/xml,1,[],https://github.com/oetiker/rrdtool-1.x/pull/981,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/981#issuecomment-474227148,"This PR includes the patch from @az143, which has been submitted in
0564d09
Indentation was updated using indent
Fixes #908",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,982,2019-03-21T09:38:41Z,2019-03-21T10:10:13Z,2019-03-21T10:10:17Z,MERGED,True,3,3,3,https://github.com/c72578,Update bugs address,1,[],https://github.com/oetiker/rrdtool-1.x/pull/982,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/982,"Replace:
http://oss.oetiker.ch/rrdtool-trac/newticket
with
https://github.com/oetiker/rrdtool-1.x/issues","Replace:
http://oss.oetiker.ch/rrdtool-trac/newticket
with
https://github.com/oetiker/rrdtool-1.x/issues",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,982,2019-03-21T09:38:41Z,2019-03-21T10:10:13Z,2019-03-21T10:10:17Z,MERGED,True,3,3,3,https://github.com/c72578,Update bugs address,1,[],https://github.com/oetiker/rrdtool-1.x/pull/982,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/982#issuecomment-475173053,"Replace:
http://oss.oetiker.ch/rrdtool-trac/newticket
with
https://github.com/oetiker/rrdtool-1.x/issues",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,983,2019-03-21T10:29:31Z,2019-03-21T14:00:31Z,2019-03-21T14:00:32Z,MERGED,True,80,80,33,https://github.com/c72578,Update URL from http to https,1,[],https://github.com/oetiker/rrdtool-1.x/pull/983,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/983,"Command used to replace http with https:
git grep -l 'http://oss.oetiker.ch' -- './*' ':(exclude)CHANGES' | \
xargs sed -b -i 's|http://oss.oetiker.ch|https://oss.oetiker.ch|g'
Fixes:
#934","Command used to replace http with https:
git grep -l 'http://oss.oetiker.ch' -- './*' ':(exclude)CHANGES' | \
xargs sed -b -i 's|http://oss.oetiker.ch|https://oss.oetiker.ch|g'
Fixes:
#934",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,984,2019-03-23T14:15:12Z,2019-03-24T07:21:45Z,2019-03-24T07:21:45Z,MERGED,True,12,2,2,https://github.com/c72578,Let two more tests pass under MSYS2 (Windows),1,[],https://github.com/oetiker/rrdtool-1.x/pull/984,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/984,"Updates the following tests:
create-with-source-4, xport1
Avoid Windows drive letter in the path of DEF:vname=rrdfile
under MSYS or MSYS2. Use only the filename of the rrd and not
the full path if environmental variable MSYSTEM is set.","Updates the following tests:
create-with-source-4, xport1
Avoid Windows drive letter in the path of DEF:vname=rrdfile
under MSYS or MSYS2. Use only the filename of the rrd and not
the full path if environmental variable MSYSTEM is set.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,985,2019-03-25T09:02:34Z,2019-03-25T12:13:51Z,2019-03-25T12:13:51Z,MERGED,True,5,5,3,https://github.com/c72578,Update further URLs from http to https,1,[],https://github.com/oetiker/rrdtool-1.x/pull/985,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/985,"Command used to replace http with https:
git grep -l 'http://tobi.oetiker.ch' -- './*' ':(exclude)CHANGES' | \
xargs sed -i 's|http://tobi.oetiker.ch|https://tobi.oetiker.ch|g'
This is an addition to commit: 267369f","Command used to replace http with https:
git grep -l 'http://tobi.oetiker.ch' -- './*' ':(exclude)CHANGES' | \
xargs sed -i 's|http://tobi.oetiker.ch|https://tobi.oetiker.ch|g'
This is an addition to commit: 267369f",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,986,2019-03-25T12:14:45Z,2019-03-25T14:46:49Z,2019-03-25T14:46:49Z,MERGED,True,1,1,1,https://github.com/oetiker,Update functions,1,[],https://github.com/oetiker/rrdtool-1.x/pull/986,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/986,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,987,2019-03-26T16:08:49Z,2019-03-26T21:20:39Z,2019-03-26T21:20:39Z,MERGED,True,11,6,1,https://github.com/c72578,Update test list1,1,[],https://github.com/oetiker/rrdtool-1.x/pull/987,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/987,"Avoid double slashes at beginning of filename paths.
Leave ""/"" in CACHED_DIR (only sed ^$BASEDIR), then it is not
necessary to add ""/"" in function do_list_tests() several times
again and ""$1"" can be used instead of ""/$1"" there.
This allows passing of test list1 under MSYS2 (Windows), where paths
starting (unnecessarily) with // are not working. Exit test list1
under Windows (MSYS2) before ""Starting rrdcached..."".","Avoid double slashes at beginning of filename paths.
Leave ""/"" in CACHED_DIR (only sed ^$BASEDIR), then it is not
necessary to add ""/"" in function do_list_tests() several times
again and ""$1"" can be used instead of ""/$1"" there.
This allows passing of test list1 under MSYS2 (Windows), where paths
starting (unnecessarily) with // are not working. Exit test list1
under Windows (MSYS2) before ""Starting rrdcached..."".",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,988,2019-03-27T16:04:14Z,2019-03-28T06:52:53Z,2019-03-28T06:52:53Z,MERGED,True,0,9,3,https://github.com/c72578,Remove strftime.c and strftime.h from MSVC builds,2,[],https://github.com/oetiker/rrdtool-1.x/pull/988,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/988,"Recent versions of MSVC (VS2015 and newer) properly support strftime
including formatting codes like %F, %T or %V (ISO 8601)","Recent versions of MSVC (VS2015 and newer) properly support strftime
including formatting codes like %F, %T or %V (ISO 8601)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,989,2019-03-27T17:11:00Z,2019-03-27T18:59:01Z,2019-03-27T18:59:05Z,MERGED,True,1,1,1,https://github.com/themylogin,fix segfault on non-existent RRD file when using rrdcached,1,[],https://github.com/oetiker/rrdtool-1.x/pull/989,https://github.com/themylogin,1,https://github.com/oetiker/rrdtool-1.x/pull/989,"fix segfault on non-existent RRD file when using rrdcached + rrdtool xport
(like 814ca69 does for rrdtool graph)","fix segfault on non-existent RRD file when using rrdcached + rrdtool xport
(like 814ca69 does for rrdtool graph)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,989,2019-03-27T17:11:00Z,2019-03-27T18:59:01Z,2019-03-27T18:59:05Z,MERGED,True,1,1,1,https://github.com/themylogin,fix segfault on non-existent RRD file when using rrdcached,1,[],https://github.com/oetiker/rrdtool-1.x/pull/989,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/989#issuecomment-477304410,"fix segfault on non-existent RRD file when using rrdcached + rrdtool xport
(like 814ca69 does for rrdtool graph)",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,990,2019-03-28T14:15:12Z,2019-03-28T17:08:47Z,2019-03-28T17:08:47Z,MERGED,True,25,2,3,https://github.com/c72578,Update strftime.c and use it under MinGW,1,[],https://github.com/oetiker/rrdtool-1.x/pull/990,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/990,"Add %F and %T to strftime.c
These format codes are commonly used, part of C99 and used in the
test vformatter1
rrd_graph.c: Include local strftime.h and use strftime_ from
strftime.c in case of MinGW or MinGW-w64 builds.
This allows test vformatter1 to pass under MSYS2 (MinGW-w64)","Add %F and %T to strftime.c
These format codes are commonly used, part of C99 and used in the
test vformatter1
rrd_graph.c: Include local strftime.h and use strftime_ from
strftime.c in case of MinGW or MinGW-w64 builds.
This allows test vformatter1 to pass under MSYS2 (MinGW-w64)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,991,2019-04-03T16:16:11Z,2019-04-04T07:35:28Z,2019-04-04T07:35:31Z,MERGED,True,3,3,2,https://github.com/c72578,"Use fabs() for floating point, labs() for long",1,[],https://github.com/oetiker/rrdtool-1.x/pull/991,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/991,"Fixes the following clang compiler warnings:

  rrd_rpncalc.c:999:11: warning: using integer absolute value function
  'abs' when argument is of floating point type [-Wabsolute-value]
    if (abs(percentile) > 100) {
  rrd_rpncalc.c:1103:24: warning: using integer absolute value function
  'abs' when argument is of floating point type [-Wabsolute-value]
    int idx = round(abs(idxf));
  rrd_hw.c:519:36: warning: absolute value function 'abs' given an
  argument of type 'long' but has parameter of type 'int' which may
  cause truncation of value [-Wabsolute-value]
    new_val = ((unsigned long) abs(val)) % mod;","Fixes the following clang compiler warnings:

  rrd_rpncalc.c:999:11: warning: using integer absolute value function
  'abs' when argument is of floating point type [-Wabsolute-value]
    if (abs(percentile) > 100) {
  rrd_rpncalc.c:1103:24: warning: using integer absolute value function
  'abs' when argument is of floating point type [-Wabsolute-value]
    int idx = round(abs(idxf));
  rrd_hw.c:519:36: warning: absolute value function 'abs' given an
  argument of type 'long' but has parameter of type 'int' which may
  cause truncation of value [-Wabsolute-value]
    new_val = ((unsigned long) abs(val)) % mod;",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,991,2019-04-03T16:16:11Z,2019-04-04T07:35:28Z,2019-04-04T07:35:31Z,MERGED,True,3,3,2,https://github.com/c72578,"Use fabs() for floating point, labs() for long",1,[],https://github.com/oetiker/rrdtool-1.x/pull/991,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/991#issuecomment-479785315,"Fixes the following clang compiler warnings:

  rrd_rpncalc.c:999:11: warning: using integer absolute value function
  'abs' when argument is of floating point type [-Wabsolute-value]
    if (abs(percentile) > 100) {
  rrd_rpncalc.c:1103:24: warning: using integer absolute value function
  'abs' when argument is of floating point type [-Wabsolute-value]
    int idx = round(abs(idxf));
  rrd_hw.c:519:36: warning: absolute value function 'abs' given an
  argument of type 'long' but has parameter of type 'int' which may
  cause truncation of value [-Wabsolute-value]
    new_val = ((unsigned long) abs(val)) % mod;",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,992,2019-04-04T13:42:34Z,2019-04-04T13:49:42Z,2019-04-04T15:37:51Z,CLOSED,False,6,2,1,https://github.com/c72578,Calculate difference instead of abs(unsigned),1,[],https://github.com/oetiker/rrdtool-1.x/pull/992,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/992,"Fixes the following clang compiler warning:

  rrd_fetch.c:391:29: warning: taking the absolute value of unsigned
  type 'unsigned long' has no effect [-Wabsolute-value]
    tmp_step_diff = labs(*step - (rrd.stat_head->pdp_step","Fixes the following clang compiler warning:

  rrd_fetch.c:391:29: warning: taking the absolute value of unsigned
  type 'unsigned long' has no effect [-Wabsolute-value]
    tmp_step_diff = labs(*step - (rrd.stat_head->pdp_step",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,992,2019-04-04T13:42:34Z,2019-04-04T13:49:42Z,2019-04-04T15:37:51Z,CLOSED,False,6,2,1,https://github.com/c72578,Calculate difference instead of abs(unsigned),1,[],https://github.com/oetiker/rrdtool-1.x/pull/992,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/992#issuecomment-479904797,"Fixes the following clang compiler warning:

  rrd_fetch.c:391:29: warning: taking the absolute value of unsigned
  type 'unsigned long' has no effect [-Wabsolute-value]
    tmp_step_diff = labs(*step - (rrd.stat_head->pdp_step","make check TESTS_STYLE=""rrdcached""
FAIL: graph1
FAIL: rpn1",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,992,2019-04-04T13:42:34Z,2019-04-04T13:49:42Z,2019-04-04T15:37:51Z,CLOSED,False,6,2,1,https://github.com/c72578,Calculate difference instead of abs(unsigned),1,[],https://github.com/oetiker/rrdtool-1.x/pull/992,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/992#issuecomment-479949252,"Fixes the following clang compiler warning:

  rrd_fetch.c:391:29: warning: taking the absolute value of unsigned
  type 'unsigned long' has no effect [-Wabsolute-value]
    tmp_step_diff = labs(*step - (rrd.stat_head->pdp_step","New PR submitted:
#993",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,993,2019-04-04T15:17:51Z,2019-04-05T07:06:18Z,2019-04-05T07:06:18Z,MERGED,True,4,2,1,https://github.com/c72578,Cast unsigned long values to long for labs(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/993,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/993,"Fixes the following clang compiler warning:

  rrd_fetch.c:391:29: warning: taking the absolute value of unsigned
  type 'unsigned long' has no effect [-Wabsolute-value]
    tmp_step_diff = labs(*step - (rrd.stat_head->pdp_step","Fixes the following clang compiler warning:

  rrd_fetch.c:391:29: warning: taking the absolute value of unsigned
  type 'unsigned long' has no effect [-Wabsolute-value]
    tmp_step_diff = labs(*step - (rrd.stat_head->pdp_step",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,994,2019-04-09T09:39:59Z,2019-04-09T11:39:43Z,2019-04-09T11:39:46Z,MERGED,True,1,0,1,https://github.com/c72578,Update test tune1,1,[],https://github.com/oetiker/rrdtool-1.x/pull/994,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/994,"Compare dump of the updated rrd file with tune1-testorg.dump,
which is available in tests","Compare dump of the updated rrd file with tune1-testorg.dump,
which is available in tests",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,994,2019-04-09T09:39:59Z,2019-04-09T11:39:43Z,2019-04-09T11:39:46Z,MERGED,True,1,0,1,https://github.com/c72578,Update test tune1,1,[],https://github.com/oetiker/rrdtool-1.x/pull/994,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/994#issuecomment-481215838,"Compare dump of the updated rrd file with tune1-testorg.dump,
which is available in tests",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,995,2019-04-09T11:38:06Z,2019-04-09T12:39:49Z,2019-04-09T12:39:52Z,MERGED,True,1,1,1,https://github.com/c72578,Cast lua_tostring return value to char *,2,[],https://github.com/oetiker/rrdtool-1.x/pull/995,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/995,"Fixes the following gcc compiler warning:

  rrdlua.c:69:21: warning: assignment discards ‘const’ qualifier from
  pointer target type [-Wdiscarded-qualifiers]
  if (!(argv[i] = lua_tostring (L, i))) {","Fixes the following gcc compiler warning:

  rrdlua.c:69:21: warning: assignment discards ‘const’ qualifier from
  pointer target type [-Wdiscarded-qualifiers]
  if (!(argv[i] = lua_tostring (L, i))) {",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,995,2019-04-09T11:38:06Z,2019-04-09T12:39:49Z,2019-04-09T12:39:52Z,MERGED,True,1,1,1,https://github.com/c72578,Cast lua_tostring return value to char *,2,[],https://github.com/oetiker/rrdtool-1.x/pull/995,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/995#issuecomment-481233899,"Fixes the following gcc compiler warning:

  rrdlua.c:69:21: warning: assignment discards ‘const’ qualifier from
  pointer target type [-Wdiscarded-qualifiers]
  if (!(argv[i] = lua_tostring (L, i))) {",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,996,2019-04-09T15:23:42Z,2019-04-10T09:09:53Z,2019-04-10T09:09:53Z,MERGED,True,10,5,6,https://github.com/c72578,Update .gitignore files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/996,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/996,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,997,2019-04-10T11:25:05Z,2019-04-10T13:01:49Z,2019-04-10T13:01:49Z,MERGED,True,2,0,1,https://github.com/c72578,Avoid pragma comment warning under MinGW,2,[],https://github.com/oetiker/rrdtool-1.x/pull/997,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/997,"Removes the following MinGW compiler warning:

  rrd_client.c:32: warning: ignoring #pragma comment
  [-Wunknown-pragmas] #pragma comment(lib, ""ws2_32.lib"")


This #pragma comment is only relevant for MSVC","Removes the following MinGW compiler warning:

  rrd_client.c:32: warning: ignoring #pragma comment
  [-Wunknown-pragmas] #pragma comment(lib, ""ws2_32.lib"")


This #pragma comment is only relevant for MSVC",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,998,2019-04-12T15:07:59Z,2019-04-13T15:06:37Z,2019-04-13T15:06:37Z,MERGED,True,3,3,3,https://github.com/c72578,Fix GCC string truncation warnings,1,[],https://github.com/oetiker/rrdtool-1.x/pull/998,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/998,"Fixes the following GCC compiler warnings:

  rrd_fetch.c:338:9: warning: 'strncpy' output may be truncated copying
  19 bytes from a string of length 19 [-Wstringop-truncation]
    strncpy((*ds_namv)[i], rrd.ds_def[i].ds_nam, DS_NAM_SIZE - 1);
  rrd_tune.c:284:13: warning: 'strncpy' output may be truncated copying
  19 bytes from a string of length 19 [-Wstringop-truncation]
    strncpy(rrd.ds_def[ds].ds_nam, ds_new, DS_NAM_SIZE - 1);
  rrd_graph.c:2282:17: warning: 'strncpy' output may be truncated
    copying 204 bytes from a string of length 204
    [-Wstringop-truncation] strncpy(im->gdes[i].legend, saved_legend,
    sizeof im->gdes[0].legend - 1);","Fixes the following GCC compiler warnings:

  rrd_fetch.c:338:9: warning: 'strncpy' output may be truncated copying
  19 bytes from a string of length 19 [-Wstringop-truncation]
    strncpy((*ds_namv)[i], rrd.ds_def[i].ds_nam, DS_NAM_SIZE - 1);
  rrd_tune.c:284:13: warning: 'strncpy' output may be truncated copying
  19 bytes from a string of length 19 [-Wstringop-truncation]
    strncpy(rrd.ds_def[ds].ds_nam, ds_new, DS_NAM_SIZE - 1);
  rrd_graph.c:2282:17: warning: 'strncpy' output may be truncated
    copying 204 bytes from a string of length 204
    [-Wstringop-truncation] strncpy(im->gdes[i].legend, saved_legend,
    sizeof im->gdes[0].legend - 1);",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,998,2019-04-12T15:07:59Z,2019-04-13T15:06:37Z,2019-04-13T15:06:37Z,MERGED,True,3,3,3,https://github.com/c72578,Fix GCC string truncation warnings,1,[],https://github.com/oetiker/rrdtool-1.x/pull/998,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/998#issuecomment-482610784,"Fixes the following GCC compiler warnings:

  rrd_fetch.c:338:9: warning: 'strncpy' output may be truncated copying
  19 bytes from a string of length 19 [-Wstringop-truncation]
    strncpy((*ds_namv)[i], rrd.ds_def[i].ds_nam, DS_NAM_SIZE - 1);
  rrd_tune.c:284:13: warning: 'strncpy' output may be truncated copying
  19 bytes from a string of length 19 [-Wstringop-truncation]
    strncpy(rrd.ds_def[ds].ds_nam, ds_new, DS_NAM_SIZE - 1);
  rrd_graph.c:2282:17: warning: 'strncpy' output may be truncated
    copying 204 bytes from a string of length 204
    [-Wstringop-truncation] strncpy(im->gdes[i].legend, saved_legend,
    sizeof im->gdes[0].legend - 1);","Further information concerning string truncation:
Detecting String Truncation with GCC 8
https://developers.redhat.com/blog/2018/05/24/detecting-string-truncation-with-gcc-8/",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,999,2019-04-13T21:02:09Z,2019-04-25T14:57:36Z,2019-04-25T14:57:41Z,MERGED,True,31,28,2,https://github.com/c72578,Avoid MinGW-w64 strndup compiler warning,3,[],https://github.com/oetiker/rrdtool-1.x/pull/999,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/999,"Fixes the following MinGW-w64 GCC compiler warning:

  rrd_create.c:287:14: warning: declaration of 'strndup' shadows a
  built-in function [-Wshadow]
  static char *strndup(


MinGW-w64: strndup is not detected by configure, therefore
HAVE_STRNDUP is not defined.
Use strndup_() here instead of strndup() to avoid any collisions.
Add typename GList to .indent.pro
indent rrd_create.c using GNU indent 2.2.12","Fixes the following MinGW-w64 GCC compiler warning:

  rrd_create.c:287:14: warning: declaration of 'strndup' shadows a
  built-in function [-Wshadow]
  static char *strndup(


MinGW-w64: strndup is not detected by configure, therefore
HAVE_STRNDUP is not defined.
Use strndup_() here instead of strndup() to avoid any collisions.
Add typename GList to .indent.pro
indent rrd_create.c using GNU indent 2.2.12",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,999,2019-04-13T21:02:09Z,2019-04-25T14:57:36Z,2019-04-25T14:57:41Z,MERGED,True,31,28,2,https://github.com/c72578,Avoid MinGW-w64 strndup compiler warning,3,[],https://github.com/oetiker/rrdtool-1.x/pull/999,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/999#issuecomment-486556105,"Fixes the following MinGW-w64 GCC compiler warning:

  rrd_create.c:287:14: warning: declaration of 'strndup' shadows a
  built-in function [-Wshadow]
  static char *strndup(


MinGW-w64: strndup is not detected by configure, therefore
HAVE_STRNDUP is not defined.
Use strndup_() here instead of strndup() to avoid any collisions.
Add typename GList to .indent.pro
indent rrd_create.c using GNU indent 2.2.12","Hi Tobi,
would you mind merging this too?
Thanks
Wolfgang",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,999,2019-04-13T21:02:09Z,2019-04-25T14:57:36Z,2019-04-25T14:57:41Z,MERGED,True,31,28,2,https://github.com/c72578,Avoid MinGW-w64 strndup compiler warning,3,[],https://github.com/oetiker/rrdtool-1.x/pull/999,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/999#issuecomment-486708787,"Fixes the following MinGW-w64 GCC compiler warning:

  rrd_create.c:287:14: warning: declaration of 'strndup' shadows a
  built-in function [-Wshadow]
  static char *strndup(


MinGW-w64: strndup is not detected by configure, therefore
HAVE_STRNDUP is not defined.
Use strndup_() here instead of strndup() to avoid any collisions.
Add typename GList to .indent.pro
indent rrd_create.c using GNU indent 2.2.12",oops sorry :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1001,2019-04-24T14:06:17Z,2019-04-24T15:06:53Z,2019-04-24T15:06:53Z,MERGED,True,84,51,2,https://github.com/c72578,"Update rrd_open.c, fix issues",2,[],https://github.com/oetiker/rrdtool-1.x/pull/1001,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1001,"Add missing #define and indent rrd_open.c

Add missing #define __rrd_read(dst, dst_t, cnt) { \ after
#elif defined(HAVE_LIBRADOS) && !defined(HAVE_MMAP)
This fixes:
indent: src/rrd_open.c:77: Error:Unmatched 'else'
indent: src/rrd_open.c:79: Error:Stmt nesting error.
and errors in case of defined(HAVE_LIBRADOS) && !defined(HAVE_MMAP)
indent src/rrd_open.c using GNU indent 2.2.12
Replace all remaining tabs by four spaces

Consider flags for CreateFileA(), Windows

Implement dwDesiredAccess and dwCreationDisposition based on
the flags O_RDONLY, O_RDWR, O_CREAT | O_TRUNC and O_EXCL
This updates how a file handle is created using CreateFileA()
under Windows, considering the flags. Use e.g.
DesiredAccess = GENERIC_READ | GENERIC_WRITE
dwCreationDisposition = OPEN_EXISTING
CreateFileA(): Check for INVALID_HANDLE_VALUE and add output of error
messages using GetLastError() and FormatMessage()
The error message provides correct output now, which error occurs.
e.g.: rrdtool.exe info not_existing_file.rrd
ERROR: opening 'not_existing_file.rrd':
The system cannot find the file specified.
Previously, the following error occurred later in the code:
ERROR: short read while reading header rrd->stat_head
And also empty files were left behind:
e.g. rrdtool.exe resize not_existing_file.rrd 0 GROW 5200
Use <CharacterSet>MultiByte</CharacterSet> consistently
in .vcxproj files. There were 4 occurrences of
<CharacterSet>Unicode</CharacterSet> in librrd-4.vcxproj.
Using MultiByte or NotSet instead of Unicode is required for
printing (LPTSTR) lpMsgBuf from FormatMessage() using %s, to avoid
unnecessary wide characters.
This commit is an update to a9671a7","Add missing #define and indent rrd_open.c

Add missing #define __rrd_read(dst, dst_t, cnt) { \ after
#elif defined(HAVE_LIBRADOS) && !defined(HAVE_MMAP)
This fixes:
indent: src/rrd_open.c:77: Error:Unmatched 'else'
indent: src/rrd_open.c:79: Error:Stmt nesting error.
and errors in case of defined(HAVE_LIBRADOS) && !defined(HAVE_MMAP)
indent src/rrd_open.c using GNU indent 2.2.12
Replace all remaining tabs by four spaces

Consider flags for CreateFileA(), Windows

Implement dwDesiredAccess and dwCreationDisposition based on
the flags O_RDONLY, O_RDWR, O_CREAT | O_TRUNC and O_EXCL
This updates how a file handle is created using CreateFileA()
under Windows, considering the flags. Use e.g.
DesiredAccess = GENERIC_READ | GENERIC_WRITE
dwCreationDisposition = OPEN_EXISTING
CreateFileA(): Check for INVALID_HANDLE_VALUE and add output of error
messages using GetLastError() and FormatMessage()
The error message provides correct output now, which error occurs.
e.g.: rrdtool.exe info not_existing_file.rrd
ERROR: opening 'not_existing_file.rrd':
The system cannot find the file specified.
Previously, the following error occurred later in the code:
ERROR: short read while reading header rrd->stat_head
And also empty files were left behind:
e.g. rrdtool.exe resize not_existing_file.rrd 0 GROW 5200
Use <CharacterSet>MultiByte</CharacterSet> consistently
in .vcxproj files. There were 4 occurrences of
<CharacterSet>Unicode</CharacterSet> in librrd-4.vcxproj.
Using MultiByte or NotSet instead of Unicode is required for
printing (LPTSTR) lpMsgBuf from FormatMessage() using %s, to avoid
unnecessary wide characters.
This commit is an update to a9671a7",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1001,2019-04-24T14:06:17Z,2019-04-24T15:06:53Z,2019-04-24T15:06:53Z,MERGED,True,84,51,2,https://github.com/c72578,"Update rrd_open.c, fix issues",2,[],https://github.com/oetiker/rrdtool-1.x/pull/1001,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1001#issuecomment-486282064,"Add missing #define and indent rrd_open.c

Add missing #define __rrd_read(dst, dst_t, cnt) { \ after
#elif defined(HAVE_LIBRADOS) && !defined(HAVE_MMAP)
This fixes:
indent: src/rrd_open.c:77: Error:Unmatched 'else'
indent: src/rrd_open.c:79: Error:Stmt nesting error.
and errors in case of defined(HAVE_LIBRADOS) && !defined(HAVE_MMAP)
indent src/rrd_open.c using GNU indent 2.2.12
Replace all remaining tabs by four spaces

Consider flags for CreateFileA(), Windows

Implement dwDesiredAccess and dwCreationDisposition based on
the flags O_RDONLY, O_RDWR, O_CREAT | O_TRUNC and O_EXCL
This updates how a file handle is created using CreateFileA()
under Windows, considering the flags. Use e.g.
DesiredAccess = GENERIC_READ | GENERIC_WRITE
dwCreationDisposition = OPEN_EXISTING
CreateFileA(): Check for INVALID_HANDLE_VALUE and add output of error
messages using GetLastError() and FormatMessage()
The error message provides correct output now, which error occurs.
e.g.: rrdtool.exe info not_existing_file.rrd
ERROR: opening 'not_existing_file.rrd':
The system cannot find the file specified.
Previously, the following error occurred later in the code:
ERROR: short read while reading header rrd->stat_head
And also empty files were left behind:
e.g. rrdtool.exe resize not_existing_file.rrd 0 GROW 5200
Use <CharacterSet>MultiByte</CharacterSet> consistently
in .vcxproj files. There were 4 occurrences of
<CharacterSet>Unicode</CharacterSet> in librrd-4.vcxproj.
Using MultiByte or NotSet instead of Unicode is required for
printing (LPTSTR) lpMsgBuf from FormatMessage() using %s, to avoid
unnecessary wide characters.
This commit is an update to a9671a7",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1002,2019-04-30T14:37:36Z,2019-04-30T21:15:23Z,2019-04-30T21:15:23Z,MERGED,True,2,0,1,https://github.com/c72578,Fix compiler warning: label defined but not used,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1002,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1002,"The label 'no_lseek_necessary' is only relevant,
if HAVE_POSIX_FALLOCATE is defined.
Fixes the following compiler warning on systems, where
HAVE_POSIX_FALLOCATE is not defined:

  rrd_open.c:387:3: warning: label 'no_lseek_necessary' defined but not
  used [-Wunused-label]","The label 'no_lseek_necessary' is only relevant,
if HAVE_POSIX_FALLOCATE is defined.
Fixes the following compiler warning on systems, where
HAVE_POSIX_FALLOCATE is not defined:

  rrd_open.c:387:3: warning: label 'no_lseek_necessary' defined but not
  used [-Wunused-label]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1003,2019-05-07T14:56:29Z,2019-05-08T05:46:58Z,2019-05-08T06:50:38Z,MERGED,True,1831,1724,2,https://github.com/c72578,Silence unused variable and parameter warnings,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1003,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1003,"indent src/rrd_client.c before any further changes using
GNU indent 2.2.12
Cast unused variables and parameters to void, do nothing
Fixes the following compiler warnings on Windows:

rrd_open.c:
  757:9: warning: unused parameter 'writelock' [-Wunused-parameter]
    int writelock)
  810:24: warning: unused variable 'rrd_simple_file'
    [-Wunused-variable] rrd_simple_file_t *rrd_simple_file;
  807:17: warning: unused parameter 'rrd_file' [-Wunused-parameter]
    rrd_file_t *rrd_file,
  808:12: warning: unused parameter 'rrd' [-Wunused-parameter]
    rrd_t *rrd)
rrd_client.c:
  746:39: warning: unused parameter 'client' [-Wunused-parameter]
    static int connect_unix(rrd_client_t *client, const char *path)
    /* {{{ */
  746:59: warning: unused parameter 'path' [-Wunused-parameter]
    static int connect_unix(rrd_client_t *client, const char *path)
    /* {{{ */","indent src/rrd_client.c before any further changes using
GNU indent 2.2.12
Cast unused variables and parameters to void, do nothing
Fixes the following compiler warnings on Windows:

rrd_open.c:
  757:9: warning: unused parameter 'writelock' [-Wunused-parameter]
    int writelock)
  810:24: warning: unused variable 'rrd_simple_file'
    [-Wunused-variable] rrd_simple_file_t *rrd_simple_file;
  807:17: warning: unused parameter 'rrd_file' [-Wunused-parameter]
    rrd_file_t *rrd_file,
  808:12: warning: unused parameter 'rrd' [-Wunused-parameter]
    rrd_t *rrd)
rrd_client.c:
  746:39: warning: unused parameter 'client' [-Wunused-parameter]
    static int connect_unix(rrd_client_t *client, const char *path)
    /* {{{ */
  746:59: warning: unused parameter 'path' [-Wunused-parameter]
    static int connect_unix(rrd_client_t *client, const char *path)
    /* {{{ */",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1003,2019-05-07T14:56:29Z,2019-05-08T05:46:58Z,2019-05-08T06:50:38Z,MERGED,True,1831,1724,2,https://github.com/c72578,Silence unused variable and parameter warnings,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1003,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1003#issuecomment-490119635,"indent src/rrd_client.c before any further changes using
GNU indent 2.2.12
Cast unused variables and parameters to void, do nothing
Fixes the following compiler warnings on Windows:

rrd_open.c:
  757:9: warning: unused parameter 'writelock' [-Wunused-parameter]
    int writelock)
  810:24: warning: unused variable 'rrd_simple_file'
    [-Wunused-variable] rrd_simple_file_t *rrd_simple_file;
  807:17: warning: unused parameter 'rrd_file' [-Wunused-parameter]
    rrd_file_t *rrd_file,
  808:12: warning: unused parameter 'rrd' [-Wunused-parameter]
    rrd_t *rrd)
rrd_client.c:
  746:39: warning: unused parameter 'client' [-Wunused-parameter]
    static int connect_unix(rrd_client_t *client, const char *path)
    /* {{{ */
  746:59: warning: unused parameter 'path' [-Wunused-parameter]
    static int connect_unix(rrd_client_t *client, const char *path)
    /* {{{ */","Close and reopen PR to initiate travis rebuild.
The first build failed because of:
The following packages have unmet dependencies:
 libpango1.0-dev : Depends: libpango-1.0-0 (= 1.36.3-1ubuntu1) but 1.36.3-1ubuntu1.1 is to be installed
                   Depends: libpangocairo-1.0-0 (= 1.36.3-1ubuntu1) but 1.36.3-1ubuntu1.1 is to be installed
                   Depends: libpangoft2-1.0-0 (= 1.36.3-1ubuntu1) but 1.36.3-1ubuntu1.1 is to be installed
                   Depends: libpangoxft-1.0-0 (= 1.36.3-1ubuntu1) but 1.36.3-1ubuntu1.1 is to be installed
                   Recommends: debhelper but it is not going to be installed
 python-setuptools : Depends: python-pkg-resources (= 3.3-1ubuntu1) but 3.3-1ubuntu2 is to be installed
E: Unable to correct problems, you have held broken packages.
The command ""sudo apt-get install autopoint libdbi-dev tcl-dev lua5.1 liblua5.1-0-dev valgrind dc python-pip python-setuptools libpango1.0-dev ghostscript"" failed and exited with 100 during .",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1004,2019-05-19T18:56:35Z,2019-05-19T19:47:43Z,2019-05-19T19:47:50Z,MERGED,True,9,11,3,https://github.com/c72578,Define _POSIX_THREAD_SAFE_FUNCTIONS (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1004,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1004,"time.h of MinGW-w64 requires _POSIX_THREAD_SAFE_FUNCTIONS to be
defined in order to provide ctime_r, gmtime_r or localtime_r.
In newer versions of winpthreads (e.g. git-7.0.0.5447.a2d94c81),
_POSIX_THREAD_SAFE_FUNCTIONS is not defined any more in
pthread_unistd.h. Hence define it here directly.
This is a follow-up to commit:
603de9a","time.h of MinGW-w64 requires _POSIX_THREAD_SAFE_FUNCTIONS to be
defined in order to provide ctime_r, gmtime_r or localtime_r.
In newer versions of winpthreads (e.g. git-7.0.0.5447.a2d94c81),
_POSIX_THREAD_SAFE_FUNCTIONS is not defined any more in
pthread_unistd.h. Hence define it here directly.
This is a follow-up to commit:
603de9a",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1004,2019-05-19T18:56:35Z,2019-05-19T19:47:43Z,2019-05-19T19:47:50Z,MERGED,True,9,11,3,https://github.com/c72578,Define _POSIX_THREAD_SAFE_FUNCTIONS (MinGW-w64),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1004,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1004#issuecomment-493786116,"time.h of MinGW-w64 requires _POSIX_THREAD_SAFE_FUNCTIONS to be
defined in order to provide ctime_r, gmtime_r or localtime_r.
In newer versions of winpthreads (e.g. git-7.0.0.5447.a2d94c81),
_POSIX_THREAD_SAFE_FUNCTIONS is not defined any more in
pthread_unistd.h. Hence define it here directly.
This is a follow-up to commit:
603de9a",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1006,2019-05-27T18:08:47Z,2019-05-27T19:34:08Z,2019-05-27T19:34:08Z,MERGED,True,542,167,57,https://github.com/oetiker,released 1.7.2,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1006,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/1006,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1007,2019-05-28T12:02:39Z,2019-05-28T18:08:45Z,2021-01-14T15:38:42Z,MERGED,True,1,1,1,https://github.com/stefangluszek,Fix missing double values in rrdinfo.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1007,https://github.com/stefangluszek,1,https://github.com/oetiker/rrdtool-1.x/pull/1007,"The double values of rrd info were never properly converted to the
python dictionary causing some keys (e.g. xff) to be missing.","The double values of rrd info were never properly converted to the
python dictionary causing some keys (e.g. xff) to be missing.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1007,2019-05-28T12:02:39Z,2019-05-28T18:08:45Z,2021-01-14T15:38:42Z,MERGED,True,1,1,1,https://github.com/stefangluszek,Fix missing double values in rrdinfo.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1007,https://github.com/JoakimSoderberg,2,https://github.com/oetiker/rrdtool-1.x/pull/1007#issuecomment-760276262,"The double values of rrd info were never properly converted to the
python dictionary causing some keys (e.g. xff) to be missing.",@oetiker is any official version planned that contains this version? Without this the Python bindings are unusable,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1008,2019-05-29T15:34:18Z,2019-05-30T16:02:19Z,2019-05-30T16:02:19Z,MERGED,True,42,42,42,https://github.com/c72578,Restore Copyright Years in src/*.c src/*.h,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1008,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1008,"Restore the Copyright Years, so that rrdtool-release will update the
years in the future again as intended.
The years are not present any more since the following commit:
1964f6f
rrdtool-release expects a 4 digit year for the substitution:
s/Copyright.+?Oetiker.+\d{4}","Restore the Copyright Years, so that rrdtool-release will update the
years in the future again as intended.
The years are not present any more since the following commit:
1964f6f
rrdtool-release expects a 4 digit year for the substitution:
s/Copyright.+?Oetiker.+\d{4}",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1009,2019-05-31T10:34:16Z,2019-05-31T11:34:35Z,2019-05-31T11:34:35Z,MERGED,True,14,6,2,https://github.com/c72578,Update rrdtool-release script,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1009,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1009,"Update version numbers for MSVC builds too. These are defined in
win32/rrd_config.h
Update Copyright info and years in win32/*.rc files
Use a variable for the current year
Make script compatible with rrdtool major versions > 1
(use \d instead of 1)
Minor updates to the script considering recommendations from
ShellCheck, e.g.:
Use $(...) notation instead of legacy backticked `...`.","Update version numbers for MSVC builds too. These are defined in
win32/rrd_config.h
Update Copyright info and years in win32/*.rc files
Use a variable for the current year
Make script compatible with rrdtool major versions > 1
(use \d instead of 1)
Minor updates to the script considering recommendations from
ShellCheck, e.g.:
Use $(...) notation instead of legacy backticked `...`.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1010,2019-06-03T09:05:23Z,2019-06-03T11:39:41Z,2019-06-03T11:39:44Z,MERGED,True,1,1,1,https://github.com/c72578,Fix failed to expand Py_UNUSED (rrdtoolmodule.c),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1010,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1010,"Fix: failed to expand 'Py_UNUSED', Invalid ## usage when expanding
'Py_UNUSED'.
Fixes: #903","Fix: failed to expand 'Py_UNUSED', Invalid ## usage when expanding
'Py_UNUSED'.
Fixes: #903",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1011,2019-06-03T12:56:24Z,2019-06-03T15:47:22Z,2019-06-03T15:47:22Z,MERGED,True,59,55,1,https://github.com/c72578,Add --showtime to xport help output,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1011,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1011,"Fixes: #911
indent src/rrd_tool.c using GNU indent 2.2.12","Fixes: #911
indent src/rrd_tool.c using GNU indent 2.2.12",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1013,2019-06-04T08:16:07Z,2019-06-04T08:46:21Z,2019-06-04T08:46:21Z,MERGED,True,1163,1012,1,https://github.com/c72578,Fix --use-nan-for-all-missing-data,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1013,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1013,"Fixes: #918
indent src/rrd_graph.c using GNU indent 2.2.12","Fixes: #918
indent src/rrd_graph.c using GNU indent 2.2.12",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1014,2019-06-04T12:16:48Z,2019-06-04T15:17:19Z,2019-06-04T15:17:19Z,MERGED,True,4,2,1,https://github.com/c72578,Update doc/rrdruby.pod,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1014,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1014,"Fixes: #885
Typo: --interlace -> --interlaced
Change encoding of file from ANSI to UTF-8
add to pod file: =encoding utf8
Fixes podchecker error:
*** ERROR: Non-ASCII character seen before =encoding in 'Loïs'.
Assuming CP1252 at line 84 in file doc/rrdruby.pod
doc/rrdruby.pod has 1 pod syntax error.","Fixes: #885
Typo: --interlace -> --interlaced
Change encoding of file from ANSI to UTF-8
add to pod file: =encoding utf8
Fixes podchecker error:
*** ERROR: Non-ASCII character seen before =encoding in 'Loïs'.
Assuming CP1252 at line 84 in file doc/rrdruby.pod
doc/rrdruby.pod has 1 pod syntax error.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1015,2019-06-05T19:57:00Z,2019-06-06T06:33:10Z,2019-06-06T06:33:10Z,MERGED,True,12,1,2,https://github.com/c72578,Add rrdpython.pod and rrdruby.pod to dist,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1015,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1015,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1016,2019-06-11T05:49:40Z,2019-06-11T07:40:39Z,2019-06-11T08:47:17Z,MERGED,True,1,1,1,https://github.com/tobyee,"Links to section ""HOW TO MEASURE""",1,[],https://github.com/oetiker/rrdtool-1.x/pull/1016,https://github.com/tobyee,1,https://github.com/oetiker/rrdtool-1.x/pull/1016,"Fixes a link to section ""HOW TO MEASURE""","Fixes a link to section ""HOW TO MEASURE""",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1017,2019-06-16T06:21:36Z,2019-06-16T18:02:12Z,2019-06-16T18:02:12Z,MERGED,True,2,2,2,https://github.com/c72578,Set fallback first_weekday to 0 (fix #1012),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1017,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1017,"Set first_weekday to 0 (Sunday), when HAVE__NL_TIME_WEEK_1STDAY
is not defined
Fixes: #1012","Set first_weekday to 0 (Sunday), when HAVE__NL_TIME_WEEK_1STDAY
is not defined
Fixes: #1012",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1019,2019-06-17T10:17:36Z,2019-06-17T12:29:24Z,2019-06-17T12:29:24Z,MERGED,True,181,8,4,https://github.com/c72578,Add vcpkg support for MSVC builds,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1019,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1019,"This allows building against newer and up-to-date versions of
required libraries. Vcpkg is a library manager and can be found here:
https://github.com/microsoft/vcpkg
Libraries are provided for 32-bit and 64-bit.
Current versions of libraries are e.g.:
cairo 1.16.0, expat 2.2.6, fontconfig 2.12.4, freetype 2.9.1,
gettext 0.19, glib 2.52.3, libpng 1.6.37, pango 1.40.11, pcre 8.41,
libxml2 2.9.9 and zlib 1.2.11
Furthermore these libraries from vcpkg are regularly updated.
Added information to WIN32-BUILD-TIPS.txt and win32/README concerning
vcpkg
Added win32/Makefile_vcpkg.msc for building using nmake","This allows building against newer and up-to-date versions of
required libraries. Vcpkg is a library manager and can be found here:
https://github.com/microsoft/vcpkg
Libraries are provided for 32-bit and 64-bit.
Current versions of libraries are e.g.:
cairo 1.16.0, expat 2.2.6, fontconfig 2.12.4, freetype 2.9.1,
gettext 0.19, glib 2.52.3, libpng 1.6.37, pango 1.40.11, pcre 8.41,
libxml2 2.9.9 and zlib 1.2.11
Furthermore these libraries from vcpkg are regularly updated.
Added information to WIN32-BUILD-TIPS.txt and win32/README concerning
vcpkg
Added win32/Makefile_vcpkg.msc for building using nmake",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1020,2019-06-17T20:02:09Z,2019-06-18T06:17:47Z,2019-06-18T06:17:47Z,MERGED,True,353,266,2,https://github.com/c72578,Implement first_weekday under Windows,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1020,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1020,"indent src/rrd_rpncalc.c using GNU indent 2.2.12
before further changes to the file
Use GetLocaleInfoEx() to obtain the first weekday","indent src/rrd_rpncalc.c using GNU indent 2.2.12
before further changes to the file
Use GetLocaleInfoEx() to obtain the first weekday",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1021,2019-06-18T08:54:49Z,2019-06-18T12:44:53Z,2019-06-18T12:44:54Z,MERGED,True,12,10,2,https://github.com/c72578,Simplify first_weekday under Windows,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1021,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1021,"Use LOCALE_IFIRSTDAYOFWEEK | LOCALE_RETURN_NUMBER. In this case,
the function GetLocaleInfoEx() retrieves the value as a number instead
of a string.
According to: GetLocaleInfoEx function (winnls.h) | Microsoft Docs
sscanf() is not required any more to convert a char array to an int","Use LOCALE_IFIRSTDAYOFWEEK | LOCALE_RETURN_NUMBER. In this case,
the function GetLocaleInfoEx() retrieves the value as a number instead
of a string.
According to: GetLocaleInfoEx function (winnls.h) | Microsoft Docs
sscanf() is not required any more to convert a char array to an int",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1022,2019-06-22T21:28:13Z,2019-06-24T06:20:52Z,2019-06-24T06:20:52Z,MERGED,True,30,30,14,https://github.com/c72578,Bump version to librrd-8.dll for MSVC builds,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1022,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1022,"The current version in the filename of the library is 8, e.g.
librrd.so.8 or librrd-8.dll (MinGW-w64 builds), which is based on
LIBVERS from configure.ac. The version of the dll for MSVC builds is
not derived from LIBVERS and has not been updated yet.

Substitute occurrences of librrd-4 with librrd-8 using:
git grep -l 'librrd-4' | xargs sed -b -i 's/librrd-4/librrd-8/g'
rename librrd-4* files to librrd-8* using:
find . -name 'librrd-4*' \
-exec bash -c 'file={}; git mv $file ${file/librrd-4/librrd-8}' \;","The current version in the filename of the library is 8, e.g.
librrd.so.8 or librrd-8.dll (MinGW-w64 builds), which is based on
LIBVERS from configure.ac. The version of the dll for MSVC builds is
not derived from LIBVERS and has not been updated yet.

Substitute occurrences of librrd-4 with librrd-8 using:
git grep -l 'librrd-4' | xargs sed -b -i 's/librrd-4/librrd-8/g'
rename librrd-4* files to librrd-8* using:
find . -name 'librrd-4*' \
-exec bash -c 'file={}; git mv $file ${file/librrd-4/librrd-8}' \;",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1024,2019-06-25T09:08:42Z,2019-06-25T11:29:01Z,2019-06-25T11:29:01Z,MERGED,True,535,4,4,https://github.com/c72578,Add platform x64 to MSVC .sln and .vcxproj files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1024,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1024,"So far, MSVC x64 builds have been created using nmake. This adds x64 to
the .sln and .vcxproj files and x64 can be chosen within Visual Studio.

Update the created x64 platform configurations with the matching
include and lib directories
Remove unnecessary and incorrect <AdditionalIncludeDirectories>
from rrdtool.vcxproj and rrdupdate.vcxproj (one ../ was too much)","So far, MSVC x64 builds have been created using nmake. This adds x64 to
the .sln and .vcxproj files and x64 can be chosen within Visual Studio.

Update the created x64 platform configurations with the matching
include and lib directories
Remove unnecessary and incorrect <AdditionalIncludeDirectories>
from rrdtool.vcxproj and rrdupdate.vcxproj (one ../ was too much)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1025,2019-06-26T18:37:01Z,2019-06-27T08:49:01Z,2019-06-27T13:03:43Z,MERGED,True,6,5,1,https://github.com/AMDmi3,Fix UB when calculating median of all-NaN values,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1025,https://github.com/AMDmi3,1,https://github.com/oetiker/rrdtool-1.x/pull/1025,"The current code contains undefined behavior where all-NaN values
are passed to median. In that case we end up with final_elements==0
in the following branch:
else {
    rpnstack->s[++stptr] =
        0.5 * (element_ptr[final_elements / 2] +
               element_ptr[final_elements / 2 - 1]);
}
and so we use 0 and -1 as element_ptr array indexes. The
latter is ill-formed and leads to a crash in my case. Move the
check which accounts for the last NaN earlier, so we could
push NaN and finish right away.","The current code contains undefined behavior where all-NaN values
are passed to median. In that case we end up with final_elements==0
in the following branch:
else {
    rpnstack->s[++stptr] =
        0.5 * (element_ptr[final_elements / 2] +
               element_ptr[final_elements / 2 - 1]);
}
and so we use 0 and -1 as element_ptr array indexes. The
latter is ill-formed and leads to a crash in my case. Move the
check which accounts for the last NaN earlier, so we could
push NaN and finish right away.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1025,2019-06-26T18:37:01Z,2019-06-27T08:49:01Z,2019-06-27T13:03:43Z,MERGED,True,6,5,1,https://github.com/AMDmi3,Fix UB when calculating median of all-NaN values,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1025,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1025#issuecomment-506255233,"The current code contains undefined behavior where all-NaN values
are passed to median. In that case we end up with final_elements==0
in the following branch:
else {
    rpnstack->s[++stptr] =
        0.5 * (element_ptr[final_elements / 2] +
               element_ptr[final_elements / 2 - 1]);
}
and so we use 0 and -1 as element_ptr array indexes. The
latter is ill-formed and leads to a crash in my case. Move the
check which accounts for the last NaN earlier, so we could
push NaN and finish right away.",thanks,True,{'THUMBS_UP': ['https://github.com/AMDmi3']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1026,2019-06-27T16:24:21Z,2019-06-28T07:37:56Z,2019-06-28T07:38:02Z,MERGED,True,404,57,7,https://github.com/c72578,Update MSVC rrd.sln and .vcxproj files,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1026,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1026,"rrd.sln:
Do not build rrdtool and rrdupdate in case of configurations
DebugDLL|x64 and ReleaseDLL|x64


rrdtool.vcxproj:
Move <AdditionalIncludeDirectories> before <PreprocessorDefinitions>
like in librrd-8.vcxproj, rrdupdate.vcxproj and the other occurrences
in rrdtool.vcxproj


rrdupdate.vcxproj:
Change GenerateDebugInformation for Release configurations from
true to false


Add rrdcgi.vcxproj and update Makefile.am (MSVC)


So far, rrdcgi.exe has been built using nmake. Add rrdcgi.vcxproj
as an additional Visual Studio project and add it to rrd.sln

Update Makefile.am:
Add win32/rrdcgi.vcxproj and win32/Makefile_vcpkg.msc to EXTRA_DIST
Remove win32/rrdtool.sln and win32/rrdupdate.sln, because all
projects are part of rrd.sln
git rm win32/rrdtool.sln win32/rrdupdate.sln","rrd.sln:
Do not build rrdtool and rrdupdate in case of configurations
DebugDLL|x64 and ReleaseDLL|x64


rrdtool.vcxproj:
Move <AdditionalIncludeDirectories> before <PreprocessorDefinitions>
like in librrd-8.vcxproj, rrdupdate.vcxproj and the other occurrences
in rrdtool.vcxproj


rrdupdate.vcxproj:
Change GenerateDebugInformation for Release configurations from
true to false


Add rrdcgi.vcxproj and update Makefile.am (MSVC)


So far, rrdcgi.exe has been built using nmake. Add rrdcgi.vcxproj
as an additional Visual Studio project and add it to rrd.sln

Update Makefile.am:
Add win32/rrdcgi.vcxproj and win32/Makefile_vcpkg.msc to EXTRA_DIST
Remove win32/rrdtool.sln and win32/rrdupdate.sln, because all
projects are part of rrd.sln
git rm win32/rrdtool.sln win32/rrdupdate.sln",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1026,2019-06-27T16:24:21Z,2019-06-28T07:37:56Z,2019-06-28T07:38:02Z,MERGED,True,404,57,7,https://github.com/c72578,Update MSVC rrd.sln and .vcxproj files,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1026,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1026#issuecomment-506485286,"rrd.sln:
Do not build rrdtool and rrdupdate in case of configurations
DebugDLL|x64 and ReleaseDLL|x64


rrdtool.vcxproj:
Move <AdditionalIncludeDirectories> before <PreprocessorDefinitions>
like in librrd-8.vcxproj, rrdupdate.vcxproj and the other occurrences
in rrdtool.vcxproj


rrdupdate.vcxproj:
Change GenerateDebugInformation for Release configurations from
true to false


Add rrdcgi.vcxproj and update Makefile.am (MSVC)


So far, rrdcgi.exe has been built using nmake. Add rrdcgi.vcxproj
as an additional Visual Studio project and add it to rrd.sln

Update Makefile.am:
Add win32/rrdcgi.vcxproj and win32/Makefile_vcpkg.msc to EXTRA_DIST
Remove win32/rrdtool.sln and win32/rrdupdate.sln, because all
projects are part of rrd.sln
git rm win32/rrdtool.sln win32/rrdupdate.sln","The PR is OK now from my side.
I had to sort out potential Visual Studio 2017 parallel build issues.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1026,2019-06-27T16:24:21Z,2019-06-28T07:37:56Z,2019-06-28T07:38:02Z,MERGED,True,404,57,7,https://github.com/c72578,Update MSVC rrd.sln and .vcxproj files,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1026,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1026#issuecomment-506636210,"rrd.sln:
Do not build rrdtool and rrdupdate in case of configurations
DebugDLL|x64 and ReleaseDLL|x64


rrdtool.vcxproj:
Move <AdditionalIncludeDirectories> before <PreprocessorDefinitions>
like in librrd-8.vcxproj, rrdupdate.vcxproj and the other occurrences
in rrdtool.vcxproj


rrdupdate.vcxproj:
Change GenerateDebugInformation for Release configurations from
true to false


Add rrdcgi.vcxproj and update Makefile.am (MSVC)


So far, rrdcgi.exe has been built using nmake. Add rrdcgi.vcxproj
as an additional Visual Studio project and add it to rrd.sln

Update Makefile.am:
Add win32/rrdcgi.vcxproj and win32/Makefile_vcpkg.msc to EXTRA_DIST
Remove win32/rrdtool.sln and win32/rrdupdate.sln, because all
projects are part of rrd.sln
git rm win32/rrdtool.sln win32/rrdupdate.sln",cool!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1027,2019-07-06T03:53:17Z,2019-07-08T06:23:40Z,2019-07-08T06:23:40Z,MERGED,True,3,0,1,https://github.com/c72578,Include asprintf.h in rrd_info.c for MSVC builds,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1027,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1027,"Fixes the following MSVC level 3 compiler warning:
rrd_info.c(21): warning C4013: 'vasprintf' undefined;
assuming extern returning int
This is a follow-up to PR #828 and commit b1bcbca","Fixes the following MSVC level 3 compiler warning:
rrd_info.c(21): warning C4013: 'vasprintf' undefined;
assuming extern returning int
This is a follow-up to PR #828 and commit b1bcbca",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1028,2019-07-06T12:24:58Z,2019-07-08T07:03:52Z,2019-07-08T07:03:52Z,MERGED,True,4,0,1,https://github.com/c72578,Fix possible memory leak by buffer.file,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1028,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1028,"Close the opened buffer.file in rrd_xport.c before return -1,
if the data processing has failed

Fixes the following Cppcheck error:
[rrdtool-1.x/src/rrd_xport.c:435] (error) Memory leak:
buffer.file [memleak]","Close the opened buffer.file in rrd_xport.c before return -1,
if the data processing has failed

Fixes the following Cppcheck error:
[rrdtool-1.x/src/rrd_xport.c:435] (error) Memory leak:
buffer.file [memleak]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1029,2019-07-08T12:30:34Z,2019-07-09T07:15:04Z,2019-07-09T07:15:04Z,MERGED,True,1862,1370,1,https://github.com/c72578,Fix identical inner if condition rrd_graph_helper,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1029,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1029,"indent src/rrd_graph_helper.c using GNU indent 2.2.12
before changes to the file
Fixes the following Cppcheck warning:
[src/rrd_graph_helper.c:972] (warning) Identical inner 'if' condition
is always true
(outer condition is '!vname' and inner condition is '!vname').
[identicalInnerCondition]","indent src/rrd_graph_helper.c using GNU indent 2.2.12
before changes to the file
Fixes the following Cppcheck warning:
[src/rrd_graph_helper.c:972] (warning) Identical inner 'if' condition
is always true
(outer condition is '!vname' and inner condition is '!vname').
[identicalInnerCondition]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1030,2019-07-09T09:29:47Z,2019-07-10T06:59:30Z,2019-07-10T06:59:30Z,MERGED,True,9,0,3,https://github.com/c72578,"Update MSVC .vcxproj files (SAFESH, IntDir)",1,[],https://github.com/oetiker/rrdtool-1.x/pull/1030,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1030,"Win32 Debug configurations have EditAndContinue set, whereas /SAFESEH
is incompatible with EditAndContinue. Add
<ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
to these configurations.

Fixes the following warning in Visual Studio build log files, e.g.:
warning LNK4075: ignoring '/EDITANDCONTINUE' due to
'/SAFESEH' specification

The projects librrd-8, rrdcgi, rrdtool and rrdupdate are built in
the same directory, which is OK, as there is no overlap. No need for a
separate IntDir for each project. To silence the warning, add:
<IntDirSharingDetected>None</IntDirSharingDetected>

Fixes the following warning in Visual Studio build log files, e.g.:
warning MSB8028: The intermediate directory (Debug\) contains files
shared from another project (librrd-8.vcxproj).
This can lead to incorrect clean and rebuild behavior.","Win32 Debug configurations have EditAndContinue set, whereas /SAFESEH
is incompatible with EditAndContinue. Add
<ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
to these configurations.

Fixes the following warning in Visual Studio build log files, e.g.:
warning LNK4075: ignoring '/EDITANDCONTINUE' due to
'/SAFESEH' specification

The projects librrd-8, rrdcgi, rrdtool and rrdupdate are built in
the same directory, which is OK, as there is no overlap. No need for a
separate IntDir for each project. To silence the warning, add:
<IntDirSharingDetected>None</IntDirSharingDetected>

Fixes the following warning in Visual Studio build log files, e.g.:
warning MSB8028: The intermediate directory (Debug\) contains files
shared from another project (librrd-8.vcxproj).
This can lead to incorrect clean and rebuild behavior.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1031,2019-07-11T13:19:17Z,2019-07-11T14:36:17Z,2019-07-11T14:36:17Z,MERGED,True,4076,4077,3,https://github.com/c72578,Use temp pointer for realloc(),3,[],https://github.com/oetiker/rrdtool-1.x/pull/1031,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1031,"Indent rrd_daemon.c

indent src/rrd_daemon.c using GNU indent 2.2.12
before further changes to the code

Add Bear compilation database file to .gitignore

Add compile_commands.json to .gitignore. This compilation database
file can be created by Build EAR
(BEAR, https://github.com/rizsotto/Bear) and used by Cppcheck

Use temp pointer for realloc()
If realloc() fails, it returns NULL and the original block is
left untouched; it is not freed. Use a temporary pointer first to
check, if realloc() has failed.

Fixes the following Cppcheck errors:
[src/rrd_create.c:958] (error) Common realloc mistake: 'mappings'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_create.c:2451] (error) Common realloc mistake: 'candidates'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_daemon.c:2402] (error) Common realloc mistake: 'sources'
nulled but not freed upon failure [memleakOnRealloc]","Indent rrd_daemon.c

indent src/rrd_daemon.c using GNU indent 2.2.12
before further changes to the code

Add Bear compilation database file to .gitignore

Add compile_commands.json to .gitignore. This compilation database
file can be created by Build EAR
(BEAR, https://github.com/rizsotto/Bear) and used by Cppcheck

Use temp pointer for realloc()
If realloc() fails, it returns NULL and the original block is
left untouched; it is not freed. Use a temporary pointer first to
check, if realloc() has failed.

Fixes the following Cppcheck errors:
[src/rrd_create.c:958] (error) Common realloc mistake: 'mappings'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_create.c:2451] (error) Common realloc mistake: 'candidates'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_daemon.c:2402] (error) Common realloc mistake: 'sources'
nulled but not freed upon failure [memleakOnRealloc]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1032,2019-07-12T14:11:17Z,2019-07-14T20:36:02Z,2019-07-14T20:36:02Z,MERGED,True,4,0,2,https://github.com/c72578,Add check for va_copy to configure,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1032,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1032,"So far, configure did not check for va_copy and HAVE_VA_COPY was
undefined. A check for HAVE_VA_COPY is part of rrd_snprintf.c

Add HW_FUNC_VA_COPY to configure.ac
MSVC has got va_copy(), so define it in win32/rrd_config.h:
#define HAVE_VA_COPY 1","So far, configure did not check for va_copy and HAVE_VA_COPY was
undefined. A check for HAVE_VA_COPY is part of rrd_snprintf.c

Add HW_FUNC_VA_COPY to configure.ac
MSVC has got va_copy(), so define it in win32/rrd_config.h:
#define HAVE_VA_COPY 1",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1033,2019-07-15T13:27:55Z,2019-07-15T15:58:10Z,2019-07-15T15:58:10Z,MERGED,True,12,12,4,https://github.com/c72578,Fix format specifiers,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1033,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1033,"Fixes the following Cppcheck warnings:

  [bindings/tcl/tclrrd.c:513] (warning) %lu in format string (no. 1)
    requires 'unsigned long' but the argument type is 'signed long'.
    [invalidPrintfArgType_uint]

  [src/rrd_fetch_libdbi.c:56] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:63] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:85] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:85] (warning) %i in format string (no. 4)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:119] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:126] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:148] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:148] (warning) %i in format string (no. 4)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]

  [src/rrd_graph_helper.c:1504] (warning) %u in format string (no. 2)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]
  [src/rrd_graph_helper.c:1511] (warning) %u in format string (no. 2)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]
  [src/rrd_graph_helper.c:1695] (warning) %u in format string (no. 1)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]
  [src/rrd_graph_helper.c:1812] (warning) %u in format string (no. 2)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]

  [src/rrd_tune.c:392] (warning) %ld in format string (no. 3)
    requires 'long' but the argument type is 'unsigned long'.
    [invalidPrintfArgType_sint]","Fixes the following Cppcheck warnings:

  [bindings/tcl/tclrrd.c:513] (warning) %lu in format string (no. 1)
    requires 'unsigned long' but the argument type is 'signed long'.
    [invalidPrintfArgType_uint]

  [src/rrd_fetch_libdbi.c:56] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:63] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:85] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:85] (warning) %i in format string (no. 4)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:119] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:126] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:148] (warning) %i in format string (no. 3)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]
  [src/rrd_fetch_libdbi.c:148] (warning) %i in format string (no. 4)
    requires 'int' but the argument type is 'unsigned int'.
    [invalidPrintfArgType_sint]

  [src/rrd_graph_helper.c:1504] (warning) %u in format string (no. 2)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]
  [src/rrd_graph_helper.c:1511] (warning) %u in format string (no. 2)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]
  [src/rrd_graph_helper.c:1695] (warning) %u in format string (no. 1)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]
  [src/rrd_graph_helper.c:1812] (warning) %u in format string (no. 2)
    requires 'unsigned int' but the argument type is 'signed int'.
    [invalidPrintfArgType_uint]

  [src/rrd_tune.c:392] (warning) %ld in format string (no. 3)
    requires 'long' but the argument type is 'unsigned long'.
    [invalidPrintfArgType_sint]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1035,2019-07-17T11:24:40Z,2019-07-17T21:22:52Z,2019-07-17T21:22:52Z,MERGED,True,37,30,1,https://github.com/c72578,Fix rrd_cgi.c Cppcheck_warnings,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1035,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1035,"Indent rrd_cgi.c

indent src/rrd_cgi.c using GNU indent 2.2.12
before further changes to the code

Fix rrd_cgi.c Cppcheck_warnings
Remove the identical inner 'if' condition.
Use the %zu format specifier for size_t returned from strlen(),
according to: https://en.cppreference.com/w/c/string/byte/strlen
- Fixes the following Cppcheck warnings:
  [src/rrd_cgi.c:349] (warning) Identical inner 'if' condition is
    always true (outer condition is 'calcpr[i]' and inner condition is
    'calcpr[i]'). [identicalInnerCondition]

  [src/rrd_cgi.c:527] (portability) %zd in format string (no. 1)
    requires 'ssize_t' but the argument type is 'size_t
    {aka unsigned long}'. [invalidPrintfArgType_sint]
  or
  [src/rrd_cgi.c:527] (portability) %zd in format string (no. 1)
    requires 'ssize_t' but the argument type is 'size_t
    {aka unsigned long long}'. [invalidPrintfArgType_sint]","Indent rrd_cgi.c

indent src/rrd_cgi.c using GNU indent 2.2.12
before further changes to the code

Fix rrd_cgi.c Cppcheck_warnings
Remove the identical inner 'if' condition.
Use the %zu format specifier for size_t returned from strlen(),
according to: https://en.cppreference.com/w/c/string/byte/strlen
- Fixes the following Cppcheck warnings:
  [src/rrd_cgi.c:349] (warning) Identical inner 'if' condition is
    always true (outer condition is 'calcpr[i]' and inner condition is
    'calcpr[i]'). [identicalInnerCondition]

  [src/rrd_cgi.c:527] (portability) %zd in format string (no. 1)
    requires 'ssize_t' but the argument type is 'size_t
    {aka unsigned long}'. [invalidPrintfArgType_sint]
  or
  [src/rrd_cgi.c:527] (portability) %zd in format string (no. 1)
    requires 'ssize_t' but the argument type is 'size_t
    {aka unsigned long long}'. [invalidPrintfArgType_sint]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1036,2019-07-20T11:37:38Z,2019-07-24T17:13:27Z,2019-07-24T17:13:27Z,MERGED,True,103,75,3,https://github.com/c72578,"Cleanup ssize_t, off_t and strtoll() for MSVC",2,[],https://github.com/oetiker/rrdtool-1.x/pull/1036,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1036,"Indent rrd.h

indent src/rrd.h using GNU indent 2.2.12
before further changes to the code

Cleanup ssize_t, off_t and strtoll() for MSVC
MSVC defines the standard type off_t. Remove unneeded off_t typedef.
So far there has been a typedef size_t ssize_t in case of _MSC_VER,
which is incorrect because size_t is unsigned and ssize_t signed.
MSVC supports SSIZE_T (in capital letters). It is sufficient to have
the typedef SSIZE_T ssize_t in rrd.h - remove redundant, obsolete code
from rrd_restore.c
The function strtoll() is supported since Visual Studio 2013.
In rrd_resize.c, b_read is ssize_t. Use %zd in fprintf() as format
specifier, because ssize_t is signed.","Indent rrd.h

indent src/rrd.h using GNU indent 2.2.12
before further changes to the code

Cleanup ssize_t, off_t and strtoll() for MSVC
MSVC defines the standard type off_t. Remove unneeded off_t typedef.
So far there has been a typedef size_t ssize_t in case of _MSC_VER,
which is incorrect because size_t is unsigned and ssize_t signed.
MSVC supports SSIZE_T (in capital letters). It is sufficient to have
the typedef SSIZE_T ssize_t in rrd.h - remove redundant, obsolete code
from rrd_restore.c
The function strtoll() is supported since Visual Studio 2013.
In rrd_resize.c, b_read is ssize_t. Use %zd in fprintf() as format
specifier, because ssize_t is signed.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1037,2019-07-30T09:34:04Z,2019-08-02T09:10:08Z,2019-08-02T09:10:09Z,MERGED,True,2,1,1,https://github.com/c72578,Update win32-glob.c to current upstream version,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1037,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1037,"See commit https://sourceforge.net/p/sox/code/ci/5761ed/
for upstream fix.","See commit https://sourceforge.net/p/sox/code/ci/5761ed/
for upstream fix.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1038,2019-08-02T15:09:09Z,2019-08-02T20:12:11Z,2019-08-02T21:08:35Z,CLOSED,False,3,0,1,https://github.com/c72578,Add Perl 5.22 to .travis.yml and use dist: trusty for now,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1038,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1038,"Travis has been moving from Ubuntu trusty (14.04LTS)
to xenial (16.04LTS), which has got Perl 5.22
Switch back to trusty for now, until reason for failing tests under
xenial using ""make check TESTS_STYLE=""valgrind-logfile"" has been
investigated","Travis has been moving from Ubuntu trusty (14.04LTS)
to xenial (16.04LTS), which has got Perl 5.22
Switch back to trusty for now, until reason for failing tests under
xenial using ""make check TESTS_STYLE=""valgrind-logfile"" has been
investigated",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1038,2019-08-02T15:09:09Z,2019-08-02T20:12:11Z,2019-08-02T21:08:35Z,CLOSED,False,3,0,1,https://github.com/c72578,Add Perl 5.22 to .travis.yml and use dist: trusty for now,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1038,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1038#issuecomment-517830100,"Travis has been moving from Ubuntu trusty (14.04LTS)
to xenial (16.04LTS), which has got Perl 5.22
Switch back to trusty for now, until reason for failing tests under
xenial using ""make check TESTS_STYLE=""valgrind-logfile"" has been
investigated","Found the reason for the failing travis build on xenial:
libtool-bin needs to be installed.
This PR is not needed any more. A new one has been prepared:
#1039",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1039,2019-08-02T17:02:31Z,2019-08-04T09:52:11Z,2019-08-04T09:52:12Z,MERGED,True,8,4,1,https://github.com/c72578,Update .travis.yml for Ubuntu xenial (16.04LTS),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1039,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1039,"Install libtool-bin to fix failing ""valgrind-logfile"" tests
Enable the following ""valgrind-logfile"" tests, which are passing now
under xenial: create-with-source-4, vformatter1
Add also graph1 and pdp-calc1, which have been added in the meantime.
There are only three failing tests left: rpn1, rpn2, xport1
Add Perl 5.22, which is the version in xenial","Install libtool-bin to fix failing ""valgrind-logfile"" tests
Enable the following ""valgrind-logfile"" tests, which are passing now
under xenial: create-with-source-4, vformatter1
Add also graph1 and pdp-calc1, which have been added in the meantime.
There are only three failing tests left: rpn1, rpn2, xport1
Add Perl 5.22, which is the version in xenial",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1039,2019-08-02T17:02:31Z,2019-08-04T09:52:11Z,2019-08-04T09:52:12Z,MERGED,True,8,4,1,https://github.com/c72578,Update .travis.yml for Ubuntu xenial (16.04LTS),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1039,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1039#issuecomment-517822973,"Install libtool-bin to fix failing ""valgrind-logfile"" tests
Enable the following ""valgrind-logfile"" tests, which are passing now
under xenial: create-with-source-4, vformatter1
Add also graph1 and pdp-calc1, which have been added in the meantime.
There are only three failing tests left: rpn1, rpn2, xport1
Add Perl 5.22, which is the version in xenial","Here is some background information:
The default Travis CI build environment has been changed recently from Ubuntu trusty (16.04LTS) to xenial (16.04LTS). This caused most of the ""valgrind-logfile"" tests to fail. See the following log for details: https://travis-ci.org/oetiker/rrdtool-1.x/builds/566858762
In order to investigate the problem, the following line was temporarily added to .travis.yml:
- cat tests/test-suite.log
Showing:
./functions: line 54: libtool: command not found
So, libtool is not installed by default any more in xenial. Install the libtool-bin package, which provides /usr/bin/libtool",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1039,2019-08-02T17:02:31Z,2019-08-04T09:52:11Z,2019-08-04T09:52:12Z,MERGED,True,8,4,1,https://github.com/c72578,Update .travis.yml for Ubuntu xenial (16.04LTS),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1039,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/1039#issuecomment-517974899,"Install libtool-bin to fix failing ""valgrind-logfile"" tests
Enable the following ""valgrind-logfile"" tests, which are passing now
under xenial: create-with-source-4, vformatter1
Add also graph1 and pdp-calc1, which have been added in the meantime.
There are only three failing tests left: rpn1, rpn2, xport1
Add Perl 5.22, which is the version in xenial",The PR is ready from my side now.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1040,2019-08-14T09:47:10Z,2019-08-14T16:21:31Z,2019-08-14T16:21:31Z,MERGED,True,16,16,10,https://github.com/c72578,Fix typos found by codespell,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1040,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1040,Typos were found by codespell v1.15.0,Typos were found by codespell v1.15.0,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1044,2019-08-21T16:15:23Z,2019-08-21T17:26:55Z,2019-08-21T17:26:58Z,MERGED,True,16,2,1,https://github.com/c72578,Fix compiler warnings (-Wcast-function-type),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1044,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1044,"Add tree_compare_func() and use this function instead of
(GCompareDataFunc) strcmp
Fixes the following gcc compiler warning:
rrd_daemon.c:4245:34: warning: cast between incompatible function
types from ‘int (*)(const char *, const char *)’
to ‘gint (*)(const void *, const void *, void *)’
{aka ‘int (*)(const void *, const void *, void *)’}
[-Wcast-function-type]
cache_tree = g_tree_new_full((GCompareDataFunc) strcmp, NULL, NULL,


Use g_strcmp0() instead of strcmp() in tree_compare_func().
g_strcmp0() compares str1 and str2 like strcmp(). Handles NULL
gracefully by sorting it before non-NULL strings.
Comparing two NULL pointers returns 0.


Cast free_cache_item using (void (*)(void)
Fixes the following gcc compiler warning:
rrd_daemon.c:4246:34: warning: cast between incompatible function
types from ‘void * (*)(cache_item_t *)’
{aka ‘void * (*)(struct cache_item_s *)’}
to ‘void (*)(void *)’ [-Wcast-function-type]
(GDestroyNotify) free_cache_item);","Add tree_compare_func() and use this function instead of
(GCompareDataFunc) strcmp
Fixes the following gcc compiler warning:
rrd_daemon.c:4245:34: warning: cast between incompatible function
types from ‘int (*)(const char *, const char *)’
to ‘gint (*)(const void *, const void *, void *)’
{aka ‘int (*)(const void *, const void *, void *)’}
[-Wcast-function-type]
cache_tree = g_tree_new_full((GCompareDataFunc) strcmp, NULL, NULL,


Use g_strcmp0() instead of strcmp() in tree_compare_func().
g_strcmp0() compares str1 and str2 like strcmp(). Handles NULL
gracefully by sorting it before non-NULL strings.
Comparing two NULL pointers returns 0.


Cast free_cache_item using (void (*)(void)
Fixes the following gcc compiler warning:
rrd_daemon.c:4246:34: warning: cast between incompatible function
types from ‘void * (*)(cache_item_t *)’
{aka ‘void * (*)(struct cache_item_s *)’}
to ‘void (*)(void *)’ [-Wcast-function-type]
(GDestroyNotify) free_cache_item);",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1044,2019-08-21T16:15:23Z,2019-08-21T17:26:55Z,2019-08-21T17:26:58Z,MERGED,True,16,2,1,https://github.com/c72578,Fix compiler warnings (-Wcast-function-type),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1044,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1044#issuecomment-523533105,"Add tree_compare_func() and use this function instead of
(GCompareDataFunc) strcmp
Fixes the following gcc compiler warning:
rrd_daemon.c:4245:34: warning: cast between incompatible function
types from ‘int (*)(const char *, const char *)’
to ‘gint (*)(const void *, const void *, void *)’
{aka ‘int (*)(const void *, const void *, void *)’}
[-Wcast-function-type]
cache_tree = g_tree_new_full((GCompareDataFunc) strcmp, NULL, NULL,


Use g_strcmp0() instead of strcmp() in tree_compare_func().
g_strcmp0() compares str1 and str2 like strcmp(). Handles NULL
gracefully by sorting it before non-NULL strings.
Comparing two NULL pointers returns 0.


Cast free_cache_item using (void (*)(void)
Fixes the following gcc compiler warning:
rrd_daemon.c:4246:34: warning: cast between incompatible function
types from ‘void * (*)(cache_item_t *)’
{aka ‘void * (*)(struct cache_item_s *)’}
to ‘void (*)(void *)’ [-Wcast-function-type]
(GDestroyNotify) free_cache_item);","Info concerning involved functions:
g_tree_new_full ()
https://developer.gnome.org/glib/stable/glib-Balanced-Binary-Trees.html#g-tree-new-full
GCompareDataFunc ()
https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc
strcmp
http://www.cplusplus.com/reference/cstring/strcmp/
g_strcmp0 ()
https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strcmp0",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1044,2019-08-21T16:15:23Z,2019-08-21T17:26:55Z,2019-08-21T17:26:58Z,MERGED,True,16,2,1,https://github.com/c72578,Fix compiler warnings (-Wcast-function-type),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1044,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1044#issuecomment-523564493,"Add tree_compare_func() and use this function instead of
(GCompareDataFunc) strcmp
Fixes the following gcc compiler warning:
rrd_daemon.c:4245:34: warning: cast between incompatible function
types from ‘int (*)(const char *, const char *)’
to ‘gint (*)(const void *, const void *, void *)’
{aka ‘int (*)(const void *, const void *, void *)’}
[-Wcast-function-type]
cache_tree = g_tree_new_full((GCompareDataFunc) strcmp, NULL, NULL,


Use g_strcmp0() instead of strcmp() in tree_compare_func().
g_strcmp0() compares str1 and str2 like strcmp(). Handles NULL
gracefully by sorting it before non-NULL strings.
Comparing two NULL pointers returns 0.


Cast free_cache_item using (void (*)(void)
Fixes the following gcc compiler warning:
rrd_daemon.c:4246:34: warning: cast between incompatible function
types from ‘void * (*)(cache_item_t *)’
{aka ‘void * (*)(struct cache_item_s *)’}
to ‘void (*)(void *)’ [-Wcast-function-type]
(GDestroyNotify) free_cache_item);",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1045,2019-08-22T12:53:04Z,2019-08-23T21:32:10Z,2019-08-23T21:32:14Z,MERGED,True,1,1,1,https://github.com/c72578,Fix compiler warning (-Wstringop-truncation),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1045,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1045,"Use strncat() the following way in rrd_cgi.c:
strncat(dest, src, dest_size - strlen(dest) - 1);


Fixes the following gcc compiler warning:
rrd_cgi.c:1407:21: warning: ‘strncat’ output truncated before
terminating nul copying as many bytes from a string as its length
[-Wstringop-truncation]
strncat(line, tmp, tmplen);","Use strncat() the following way in rrd_cgi.c:
strncat(dest, src, dest_size - strlen(dest) - 1);


Fixes the following gcc compiler warning:
rrd_cgi.c:1407:21: warning: ‘strncat’ output truncated before
terminating nul copying as many bytes from a string as its length
[-Wstringop-truncation]
strncat(line, tmp, tmplen);",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1045,2019-08-22T12:53:04Z,2019-08-23T21:32:10Z,2019-08-23T21:32:14Z,MERGED,True,1,1,1,https://github.com/c72578,Fix compiler warning (-Wstringop-truncation),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1045,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1045#issuecomment-523893438,"Use strncat() the following way in rrd_cgi.c:
strncat(dest, src, dest_size - strlen(dest) - 1);


Fixes the following gcc compiler warning:
rrd_cgi.c:1407:21: warning: ‘strncat’ output truncated before
terminating nul copying as many bytes from a string as its length
[-Wstringop-truncation]
strncat(line, tmp, tmplen);","Info concerning strncat() and string truncation:
https://developers.redhat.com/blog/2018/05/24/detecting-string-truncation-with-gcc-8/
https://www.us-cert.gov/bsi/articles/knowledge/coding-practices/strncpy-and-strncat",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1045,2019-08-22T12:53:04Z,2019-08-23T21:32:10Z,2019-08-23T21:32:14Z,MERGED,True,1,1,1,https://github.com/c72578,Fix compiler warning (-Wstringop-truncation),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1045,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1045#issuecomment-524469140,"Use strncat() the following way in rrd_cgi.c:
strncat(dest, src, dest_size - strlen(dest) - 1);


Fixes the following gcc compiler warning:
rrd_cgi.c:1407:21: warning: ‘strncat’ output truncated before
terminating nul copying as many bytes from a string as its length
[-Wstringop-truncation]
strncat(line, tmp, tmplen);",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1046,2019-08-22T21:52:13Z,2019-08-26T06:05:54Z,2019-08-26T06:05:54Z,MERGED,True,10,1,1,https://github.com/clarfonthey,Fix wbuf segfault,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1046,https://github.com/clarfonthey,1,https://github.com/oetiker/rrdtool-1.x/pull/1046,"This ensures that wbuf_data, wbuf_size, and wbuf_capacity are all initialised to zero. Fixes #1043.
In general, calloc should be preferred over malloc as it preserves alignment. However, as I'm not familiar enough with the code base, I'm going to simply change this one line to fix my problem.","This ensures that wbuf_data, wbuf_size, and wbuf_capacity are all initialised to zero. Fixes #1043.
In general, calloc should be preferred over malloc as it preserves alignment. However, as I'm not familiar enough with the code base, I'm going to simply change this one line to fix my problem.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1046,2019-08-22T21:52:13Z,2019-08-26T06:05:54Z,2019-08-26T06:05:54Z,MERGED,True,10,1,1,https://github.com/clarfonthey,Fix wbuf segfault,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1046,https://github.com/clarfonthey,2,https://github.com/oetiker/rrdtool-1.x/pull/1046#issuecomment-524094089,"This ensures that wbuf_data, wbuf_size, and wbuf_capacity are all initialised to zero. Fixes #1043.
In general, calloc should be preferred over malloc as it preserves alignment. However, as I'm not familiar enough with the code base, I'm going to simply change this one line to fix my problem.","I should add, this really is the kind of bug that can be caught by linting. I don't know too much about the most common GCC flags/linting tools for C but I doubt this is the only bug of this kind in the code base.
This bug makes rrdcached unusable for me and I would greatly appreciate a patch release for this, but will understand if this is not doable any time soon. Would appreciate knowing what the status is on that so I can apply the patch locally as necessary. Thanks!",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1046,2019-08-22T21:52:13Z,2019-08-26T06:05:54Z,2019-08-26T06:05:54Z,MERGED,True,10,1,1,https://github.com/clarfonthey,Fix wbuf segfault,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1046,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1046#issuecomment-524469526,"This ensures that wbuf_data, wbuf_size, and wbuf_capacity are all initialised to zero. Fixes #1043.
In general, calloc should be preferred over malloc as it preserves alignment. However, as I'm not familiar enough with the code base, I'm going to simply change this one line to fix my problem.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1046,2019-08-22T21:52:13Z,2019-08-26T06:05:54Z,2019-08-26T06:05:54Z,MERGED,True,10,1,1,https://github.com/clarfonthey,Fix wbuf segfault,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1046,https://github.com/clarfonthey,4,https://github.com/oetiker/rrdtool-1.x/pull/1046#issuecomment-524672804,"This ensures that wbuf_data, wbuf_size, and wbuf_capacity are all initialised to zero. Fixes #1043.
In general, calloc should be preferred over malloc as it preserves alignment. However, as I'm not familiar enough with the code base, I'm going to simply change this one line to fix my problem.",Noticed that this wasn't actually fixing my issue; found out that another bit of code had to be added to fix. These fields should be set to zero now.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/pallas,1,https://github.com/oetiker/rrdtool-1.x/pull/1048,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.","A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1048#issuecomment-527026440,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.","afaik @octo s original idea was to have the rrd_client.[ch] with a more liberal license than rrdtool to make linking with other projects easier. Not sure how the other header files got in there and if they are really necessary.
Also the rrd_client functions afaik are internal and not needed 'client side' ... they are not used in rrdtool code as well. The missing rrdc_ entries would be ok.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/octo,3,https://github.com/oetiker/rrdtool-1.x/pull/1048#issuecomment-527158346,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.","ACK, my intention was to be permissive: The FSF argues that by linking with a library / shared object, you're creating a ""derived work"". One consequence is that if you link with a GPL licensed library, the resulting binary must also be licensed under the GPL.
I wanted non-GPL binaries be able to use rrd_client.h, too. rrd_client.h is self-contained and does not rely on other headers.
The license (MIT license) is GPL compatible, meaning you can link this module with other GPL code, too.
If this is creating problems, pleade let me know – as I said: I wanted this to be as permissive as possible.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/pallas,4,https://github.com/oetiker/rrdtool-1.x/pull/1048#issuecomment-527539157,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.","Ah, ok, so rrd_client is intended to be internal? I will switch my project to use rrdc instead.
As for rrd_client.[ch], I understand the intention behind the license change. If you pull those two files into another directory and attempt to compile them, you should see something like
rrd_client.c:47:10: fatal error: rrd_strtod.h: No such file or directory
 #include ""rrd_strtod.h""
          ^~~~~~~~~~~~~~
compilation terminated.

The C file specifically includes rrd_strtod.h, rrd.h, rrd_tool.h, rrd_client.h, & mutex.h",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/1048#issuecomment-527545280,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.",just had a look through the code ... there are indeed a bunch of rrd_ functions used in the rrd_client code now ... they have crept in while refactoring things ... I guess there is some disentanglement required to get rrd_client.[ch] moving freely again ... PRs gladly accepted,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/pallas,6,https://github.com/oetiker/rrdtool-1.x/pull/1048#issuecomment-527969011,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.","I modified the PR to only add the missing rrdc symbols, not the rrd_client symbols. I will take a look at making rrd_client a stand-alone file again, hopefully soon, but as a separate PR.",True,{'THUMBS_UP': ['https://github.com/oetiker']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/c72578,7,https://github.com/oetiker/rrdtool-1.x/pull/1048#issuecomment-528081755,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.","Would you mind sorting librrd.sym again, using the sort command (default settings)?
sort librrd.sym
Then, rrdc_flushall will be after rrdc_flush_if_daemon ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1048,2019-08-31T16:47:14Z,2019-09-10T13:16:13Z,2019-09-10T13:16:13Z,MERGED,True,4,0,1,https://github.com/pallas,Add missing client symbols,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1048,https://github.com/pallas,8,https://github.com/oetiker/rrdtool-1.x/pull/1048#issuecomment-528438754,"A bunch of client symbols were missing from the shared library.
Aside, it is not at all clear to me how to copy rrd_client into an external project and build it, since it depends on a bunch of other files, especially since they do not share the same license.","Yes, of course. I did sort it but my default sort settings on this host appear to be ignoring underscores. Let me try changing the collation function..",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1049,2019-09-01T15:29:38Z,2019-09-02T06:59:33Z,2019-09-02T06:59:33Z,MERGED,True,3,3,1,https://github.com/nirgal,Clean up tests leftover files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1049,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/1049,"Bold try. I haven't tested.
But Debian package system is complaining about these two extra files when building several time in a row...","Bold try. I haven't tested.
But Debian package system is complaining about these two extra files when building several time in a row...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1049,2019-09-01T15:29:38Z,2019-09-02T06:59:33Z,2019-09-02T06:59:33Z,MERGED,True,3,3,1,https://github.com/nirgal,Clean up tests leftover files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1049,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1049#issuecomment-527027063,"Bold try. I haven't tested.
But Debian package system is complaining about these two extra files when building several time in a row...",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1050,2019-09-02T10:46:35Z,2019-09-02T13:26:39Z,2019-09-02T13:26:40Z,MERGED,True,1,1,1,https://github.com/c72578,Clean tests/rpn1.out,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1050,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1050,"There was another leftover in the tests folder after
make clean: rpn1.out
It is a png file created during the test rpn1
This is a followup commit to PR #1049","There was another leftover in the tests folder after
make clean: rpn1.out
It is a png file created during the test rpn1
This is a followup commit to PR #1049",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1051,2019-09-03T20:45:54Z,2019-09-04T09:02:35Z,2019-09-04T09:02:35Z,MERGED,True,15,6,1,https://github.com/pallas,rrd_client: avoid invalid read,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1051,https://github.com/pallas,1,https://github.com/oetiker/rrdtool-1.x/pull/1051,"In rrd_client_last and rrd_client_first, the response value is in the
message prior to any additional lines.  Unfortunately, the buffer that
contains this data is on the stack for response_read and is no longer valid
by the time the caller sees it.
This change strdups the message line in response_read and subsequently frees
it in response_free.
Resolves issue #1047.","In rrd_client_last and rrd_client_first, the response value is in the
message prior to any additional lines.  Unfortunately, the buffer that
contains this data is on the stack for response_read and is no longer valid
by the time the caller sees it.
This change strdups the message line in response_read and subsequently frees
it in response_free.
Resolves issue #1047.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1052,2019-09-07T20:58:25Z,2019-09-08T21:15:21Z,2019-09-08T21:15:21Z,MERGED,True,12,5,2,https://github.com/c72578,Use temp pointer for realloc(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1052,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1052,"Fixes the following Cppcheck 1.89 errors:
[src/rrd_cgi.c:295] (error) Common realloc mistake:'varheap'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_cgi.c:1138] (error) Common realloc mistake: 'argv'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_graph.c:1211] (error) Common realloc mistake: 'steparray'
nulled but not freed upon failure [memleakOnRealloc]","Fixes the following Cppcheck 1.89 errors:
[src/rrd_cgi.c:295] (error) Common realloc mistake:'varheap'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_cgi.c:1138] (error) Common realloc mistake: 'argv'
nulled but not freed upon failure [memleakOnRealloc]
[src/rrd_graph.c:1211] (error) Common realloc mistake: 'steparray'
nulled but not freed upon failure [memleakOnRealloc]",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1053,2019-09-08T13:36:22Z,2019-09-10T11:56:57Z,2019-09-10T11:56:57Z,MERGED,True,15,61,3,https://github.com/c72578,Remove duplicate code of find_first_weekday(),4,[],https://github.com/oetiker/rrdtool-1.x/pull/1053,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1053,"Indent rrd_rpncalc.h
Indent src/rrd_rpncalc.h using GNU indent 2.2.12
before further changes to the code
Remove duplicate code of find_first_weekday()
So far, the same code of find_first_weekday() was used in rrd_graph.c
and rrd_rpncalc.c
Remove duplicate code from rrd_graph.c and add find_first_weekday()
to rrd_rpncalc.h, which is included from rrd_graph.h","Indent rrd_rpncalc.h
Indent src/rrd_rpncalc.h using GNU indent 2.2.12
before further changes to the code
Remove duplicate code of find_first_weekday()
So far, the same code of find_first_weekday() was used in rrd_graph.c
and rrd_rpncalc.c
Remove duplicate code from rrd_graph.c and add find_first_weekday()
to rrd_rpncalc.h, which is included from rrd_graph.h",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1054,2019-09-10T10:37:58Z,2019-09-10T11:19:27Z,2019-09-10T11:19:27Z,MERGED,True,32,32,4,https://github.com/c72578,Use DefaultPlatformToolset for .vcxproj files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1054,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1054,"Use $(DefaultPlatformToolset) for the PlatformToolset
instead of v140. This allows to use the associated PlatformToolset
automatically for each version of Visual Studio:
v140 for VS2015, v141 for VS2017, v142 for VS2019.
However, a developer can easily target projects to a desired,
different PlatformToolset.
Set ToolsVersion=""Current"" instead of ToolsVersion=""14.0""
Strings were replaced in .vcxproj files the following way:

  git grep -l 'v140' -- '*.vcxproj' | \
    xargs sed -i 's/v140/$(DefaultPlatformToolset)/g'
  git grep -l '14.0' -- '*.vcxproj' | xargs sed -i 's/14.0/Current/g'","Use $(DefaultPlatformToolset) for the PlatformToolset
instead of v140. This allows to use the associated PlatformToolset
automatically for each version of Visual Studio:
v140 for VS2015, v141 for VS2017, v142 for VS2019.
However, a developer can easily target projects to a desired,
different PlatformToolset.
Set ToolsVersion=""Current"" instead of ToolsVersion=""14.0""
Strings were replaced in .vcxproj files the following way:

  git grep -l 'v140' -- '*.vcxproj' | \
    xargs sed -i 's/v140/$(DefaultPlatformToolset)/g'
  git grep -l '14.0' -- '*.vcxproj' | xargs sed -i 's/14.0/Current/g'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1054,2019-09-10T10:37:58Z,2019-09-10T11:19:27Z,2019-09-10T11:19:27Z,MERGED,True,32,32,4,https://github.com/c72578,Use DefaultPlatformToolset for .vcxproj files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1054,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1054#issuecomment-529879115,"Use $(DefaultPlatformToolset) for the PlatformToolset
instead of v140. This allows to use the associated PlatformToolset
automatically for each version of Visual Studio:
v140 for VS2015, v141 for VS2017, v142 for VS2019.
However, a developer can easily target projects to a desired,
different PlatformToolset.
Set ToolsVersion=""Current"" instead of ToolsVersion=""14.0""
Strings were replaced in .vcxproj files the following way:

  git grep -l 'v140' -- '*.vcxproj' | \
    xargs sed -i 's/v140/$(DefaultPlatformToolset)/g'
  git grep -l '14.0' -- '*.vcxproj' | xargs sed -i 's/14.0/Current/g'","The following dialogues will not appear any more, which makes opening the rrd.sln file in Visual Studio more straight forward.
VS2017:

VS2019:",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1055,2019-09-10T14:42:45Z,2019-09-10T15:08:07Z,2019-09-10T15:08:07Z,MERGED,True,4,0,1,https://github.com/c72578,Sync librrd-8.def with librrd.sym,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1055,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1055,"Export the same functions in the dll from MSVC builds under Windows
as defined in librrd.sym","Export the same functions in the dll from MSVC builds under Windows
as defined in librrd.sym",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1058,2019-09-26T08:29:06Z,2019-09-27T08:03:44Z,2019-09-27T08:03:44Z,MERGED,True,2,1,1,https://github.com/c72578,Sort and remove duplicate entries in ALL_LIBS,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1058,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1058,"So far, configure showed e.g. the following at the end:
Libraries: -lgobject-2.0 -lpng -lm  -ldbi -lglib-2.0  -lpangocairo-1.0
 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lcairo  -lxml2

The variable ALL_LIBS included duplicates resulting from the configure
process and some double spaces.

Now, ALL_LIBS is sorted and duplicate entries are removed, e.g.:
Libraries: -lcairo -ldbi -lglib-2.0 -lgobject-2.0 -lharfbuzz -lm
 -lpango-1.0 -lpangocairo-1.0 -lpng -lxml2","So far, configure showed e.g. the following at the end:
Libraries: -lgobject-2.0 -lpng -lm  -ldbi -lglib-2.0  -lpangocairo-1.0
 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lcairo  -lxml2

The variable ALL_LIBS included duplicates resulting from the configure
process and some double spaces.

Now, ALL_LIBS is sorted and duplicate entries are removed, e.g.:
Libraries: -lcairo -ldbi -lglib-2.0 -lgobject-2.0 -lharfbuzz -lm
 -lpango-1.0 -lpangocairo-1.0 -lpng -lxml2",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1059,2019-09-30T12:26:04Z,2019-09-30T20:30:16Z,2019-09-30T20:30:16Z,MERGED,True,3,0,1,https://github.com/yli-cpr,#1057: Fix potential duplicate write_changes_to_disk() calls,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1059,https://github.com/yli-cpr,1,https://github.com/oetiker/rrdtool-1.x/pull/1059,Fix duplicate write_changes_to_disk() calls when HAVE_LIBRADOS is true and HAVE_MMAP is false,Fix duplicate write_changes_to_disk() calls when HAVE_LIBRADOS is true and HAVE_MMAP is false,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1060,2019-10-09T11:10:28Z,2019-10-09T11:41:49Z,2019-10-09T11:41:49Z,MERGED,True,5,6,1,https://github.com/c72578,Update .travis.yml according to yamllint,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1060,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1060,"Fix the following warnings and errors reported by yamllint 1.17.0:

24:1  warning  comment not indented like content (comments-indentation)
28:1  warning  comment not indented like content (comments-indentation)
44:18 error    trailing spaces (trailing-spaces)
49:1  error    too many blank lines (1 > 0) (empty-lines)

Used the following yamllint command:

  yamllint -d ""{extends: default, rules: {document-start: disable, \
  line-length: {max: 512}}}"" .travis.yml","Fix the following warnings and errors reported by yamllint 1.17.0:

24:1  warning  comment not indented like content (comments-indentation)
28:1  warning  comment not indented like content (comments-indentation)
44:18 error    trailing spaces (trailing-spaces)
49:1  error    too many blank lines (1 > 0) (empty-lines)

Used the following yamllint command:

  yamllint -d ""{extends: default, rules: {document-start: disable, \
  line-length: {max: 512}}}"" .travis.yml",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1064,2019-11-12T10:34:25Z,2019-11-12T17:01:37Z,2019-11-12T17:01:38Z,MERGED,True,17,3,1,https://github.com/nirgal,Update rrdlist manual,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1064,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/1064,Add documentation for --noflush and --recursive options.,Add documentation for --noflush and --recursive options.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1065,2019-11-12T10:53:33Z,2019-11-12T15:20:10Z,2019-11-12T15:20:10Z,MERGED,True,1,1,1,https://github.com/nirgal,Fix rrd_pdpcalc whatis entry in manual,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1065,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/1065,"From Debian lintian checker:
Each manual page should start with a ""NAME"" section, which lists the
name and a brief description of the page separated by ""-"". The ""NAME""
section is parsed by lexgrog and used to generate a database that's
queried by commands like apropos and whatis. This tag indicates that
lexgrog was unable to parse the NAME section of this manual page.
For manual pages that document multiple programs, functions, files, or
other things, the part before ""-"" should list each separated by a comma
and a space. Each thing listed must not contain spaces; a man page for a
two-part command like ""fs listacl"" must use something like ""fs_listacl""
in the ""NAME"" section so that it can be parsed by lexgrog.
Refer to the lexgrog(1) manual page, the groff_man(7) manual page, and
the groff_mdoc(7) manual page for details.","From Debian lintian checker:
Each manual page should start with a ""NAME"" section, which lists the
name and a brief description of the page separated by ""-"". The ""NAME""
section is parsed by lexgrog and used to generate a database that's
queried by commands like apropos and whatis. This tag indicates that
lexgrog was unable to parse the NAME section of this manual page.
For manual pages that document multiple programs, functions, files, or
other things, the part before ""-"" should list each separated by a comma
and a space. Each thing listed must not contain spaces; a man page for a
two-part command like ""fs listacl"" must use something like ""fs_listacl""
in the ""NAME"" section so that it can be parsed by lexgrog.
Refer to the lexgrog(1) manual page, the groff_man(7) manual page, and
the groff_mdoc(7) manual page for details.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1066,2019-11-12T20:50:06Z,2019-11-13T08:35:46Z,2019-11-13T08:35:46Z,MERGED,True,1,0,1,https://github.com/c72578,Add podchecker to .travis.yml,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1066,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1066,Check the syntax of doc/*.pod files,Check the syntax of doc/*.pod files,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1066,2019-11-12T20:50:06Z,2019-11-13T08:35:46Z,2019-11-13T08:35:46Z,MERGED,True,1,0,1,https://github.com/c72578,Add podchecker to .travis.yml,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1066,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1066#issuecomment-553110892,Check the syntax of doc/*.pod files,"Remark:
The following podchecker warnings do not appear in newer versions of Perl any more (e.g. 5.30), only currently here under Perl 5.22 from Ubuntu Xenial and can be ignored:
*** WARNING: (section) in 'mkdir(1)' deprecated at line 152 in file doc/librrd.pod
*** WARNING: (section) in 'mkdir(2)' deprecated at line 154 in file doc/librrd.pod
*** WARNING: (section) in 'mkdir(2)' deprecated at line 157 in file doc/librrd.pod
*** WARNING: (section) in 'stat(2)' deprecated at line 170 in file doc/librrd.pod
*** WARNING: (section) in 'mkdir(2)' deprecated at line 174 in file doc/librrd.pod
*** WARNING: (section) in 'chmod(1)' deprecated at line 110 in file doc/rrdcached.pod
*** WARNING: (section) in 'unix(7)' deprecated at line 114 in file doc/rrdcached.pod
*** WARNING: (section) in 'tzset(3)' deprecated at line 193 in file doc/RRDs.pod",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1067,2019-11-18T19:42:38Z,2019-11-18T22:02:29Z,2019-11-18T22:02:29Z,MERGED,True,4,0,1,https://github.com/c72578,Use LC_NUMERIC=C for tests,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1067,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1067,"The following tests require dot as decimal separator:
graph1, rpn1, create-with-source-4, dcounter1, vformatter1, pdp-calc1
Set LC_NUMERIC=C, which allows these tests to pass also under locales,
where the decimal separator is not a dot by default:
de_DE, es_ES, fr_FR, nl_NL etc.","The following tests require dot as decimal separator:
graph1, rpn1, create-with-source-4, dcounter1, vformatter1, pdp-calc1
Set LC_NUMERIC=C, which allows these tests to pass also under locales,
where the decimal separator is not a dot by default:
de_DE, es_ES, fr_FR, nl_NL etc.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1068,2019-11-29T15:45:22Z,2019-12-01T17:22:59Z,2019-12-01T17:23:03Z,MERGED,True,1,1,1,https://github.com/Thomas-Gelf,rrdgraph_rpn.pod: fix SMIN example,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1068,https://github.com/Thomas-Gelf,1,https://github.com/oetiker/rrdtool-1.x/pull/1068,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1068,2019-11-29T15:45:22Z,2019-12-01T17:22:59Z,2019-12-01T17:23:03Z,MERGED,True,1,1,1,https://github.com/Thomas-Gelf,rrdgraph_rpn.pod: fix SMIN example,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1068,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1068#issuecomment-560133787,,thank you,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1069,2019-11-29T17:52:54Z,2019-12-10T15:14:26Z,2019-12-10T15:14:26Z,MERGED,True,2,2,1,https://github.com/Thomas-Gelf,rrdgraph_rpn.pod: fix typo,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1069,https://github.com/Thomas-Gelf,1,https://github.com/oetiker/rrdtool-1.x/pull/1069,This should probably have read Now (instead of No). I dropped the whole word as the former sentence also starts with Now.,This should probably have read Now (instead of No). I dropped the whole word as the former sentence also starts with Now.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1069,2019-11-29T17:52:54Z,2019-12-10T15:14:26Z,2019-12-10T15:14:26Z,MERGED,True,2,2,1,https://github.com/Thomas-Gelf,rrdgraph_rpn.pod: fix typo,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1069,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1069#issuecomment-560133850,This should probably have read Now (instead of No). I dropped the whole word as the former sentence also starts with Now.,thank you,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1069,2019-11-29T17:52:54Z,2019-12-10T15:14:26Z,2019-12-10T15:14:26Z,MERGED,True,2,2,1,https://github.com/Thomas-Gelf,rrdgraph_rpn.pod: fix typo,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1069,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1069#issuecomment-564079247,This should probably have read Now (instead of No). I dropped the whole word as the former sentence also starts with Now.,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1072,2019-12-30T00:32:57Z,2020-01-03T08:40:39Z,2020-01-03T14:37:36Z,MERGED,True,10,5,1,https://github.com/SuperHeron,Fix AM_CHECK_PYTHON_HEADERS macro for Python3,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1072,https://github.com/SuperHeron,1,https://github.com/oetiker/rrdtool-1.x/pull/1072,"This detects Python3 include paths like /usr/include/python3.7m.
Taken from pygobject.","This detects Python3 include paths like /usr/include/python3.7m.
Taken from pygobject.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1072,2019-12-30T00:32:57Z,2020-01-03T08:40:39Z,2020-01-03T14:37:36Z,MERGED,True,10,5,1,https://github.com/SuperHeron,Fix AM_CHECK_PYTHON_HEADERS macro for Python3,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1072,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1072#issuecomment-570504106,"This detects Python3 include paths like /usr/include/python3.7m.
Taken from pygobject.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1074,2020-02-06T23:49:13Z,2020-07-03T14:15:48Z,2020-07-03T14:15:48Z,MERGED,True,3,2,1,https://github.com/commx,fetch - do not call rrd_freemem on uninitialized pointers,3,[],https://github.com/oetiker/rrdtool-1.x/pull/1074,https://github.com/commx,1,https://github.com/oetiker/rrdtool-1.x/pull/1074,"This change fixes a regression introduced with 411f10c.
The bug was reported in commx/python-rrdtool#34.","This change fixes a regression introduced with 411f10c.
The bug was reported in commx/python-rrdtool#34.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1079,2020-03-14T13:00:40Z,2020-03-14T16:44:46Z,2020-03-14T17:01:34Z,MERGED,True,4,0,1,https://github.com/neirbowj,Fix double meaning of time 0 as uninitialized value,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1079,https://github.com/neirbowj,1,https://github.com/oetiker/rrdtool-1.x/pull/1079,"Treat ""VRULE:0#..."" as ""VRULE:1#..."" because elsewhere xrule==0 is
used to mean xrule has not been set, which can lead to an array
bounds violation.
Fixes #1078","Treat ""VRULE:0#..."" as ""VRULE:1#..."" because elsewhere xrule==0 is
used to mean xrule has not been set, which can lead to an array
bounds violation.
Fixes #1078",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1079,2020-03-14T13:00:40Z,2020-03-14T16:44:46Z,2020-03-14T17:01:34Z,MERGED,True,4,0,1,https://github.com/neirbowj,Fix double meaning of time 0 as uninitialized value,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1079,https://github.com/neirbowj,2,https://github.com/oetiker/rrdtool-1.x/pull/1079#issuecomment-599056982,"Treat ""VRULE:0#..."" as ""VRULE:1#..."" because elsewhere xrule==0 is
used to mean xrule has not been set, which can lead to an array
bounds violation.
Fixes #1078","In order to permit ""VRULE:0#..."" it would be necessary to create an additional struct member to track whether the value in xrule is valid or not. Let me know if you would prefer that approach.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1085,2020-06-14T09:34:57Z,2020-06-14T13:44:09Z,2020-06-14T13:58:19Z,MERGED,True,7,1,1,https://github.com/zeising,rrd_open: Ignore EINVAL from posix_fallocate(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1085,https://github.com/zeising,1,https://github.com/oetiker/rrdtool-1.x/pull/1085,"On ZFS on FreeBSD (at least) ZFS does not support posix_fallocate(),
returning EINVAL instead.  Ignore this error and continue normally.
Without this change, it is not possible to resize rrd files on ZFS.
This fixes #1082
Signed-off-by: Niclas Zeising zeising@daemonic.se","On ZFS on FreeBSD (at least) ZFS does not support posix_fallocate(),
returning EINVAL instead.  Ignore this error and continue normally.
Without this change, it is not possible to resize rrd files on ZFS.
This fixes #1082
Signed-off-by: Niclas Zeising zeising@daemonic.se",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1086,2020-07-01T16:40:49Z,2020-07-03T06:19:24Z,2020-07-03T06:19:24Z,MERGED,True,1,1,1,https://github.com/jer-gentoo,doc: Distribute rrdrados.pod,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1086,https://github.com/jer-gentoo,1,https://github.com/oetiker/rrdtool-1.x/pull/1086,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,1,https://github.com/oetiker/rrdtool-1.x/pull/1087,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,2,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-661211361,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","@oetiker we would like to see this option introduced, any feedback on it?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-661682827,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",can you add a test please,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,4,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-662143680,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",What kind of test would you like? How many ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-662256737,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",I would imagine calling it with the new option and then checking that the response is as expected.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,6,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-664514958,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",I will work on this and get the PR updated.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,7,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667575884,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","Took me longer to write the tests than I did the patch but I think I've succeeded.  Btw, there is a test that is already failing create-with-source-4.  I don't believe that is anything down to what I was doing since it appears to have the following issue:
./create-with-source-4: line 87: dc: command not found
./create-with-source-4: line 87: [: -lt: unary operator expected",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/c72578,8,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667621599,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","@netniV, for create-with-source-4 the dc command needs to be installed.
Depending on the OS/environment, e.g.:

Debian/Ubuntu:
sudo apt-get install dc
Fedora (dc is part of package bc)
sudo dnf install bc
MSYS2 (dc is part of package bc)
pacman -Sy --needed bc
...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/c72578,9,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667641311,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","@netniV, did you already have a look at tests/graph2-valgrind.log after
make check TESTS_STYLE=""valgrind-logfile"" TESTS=""graph2""
There are several ""blocks are definitely lost"" in graph2-valgrind.log",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,10,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667647237,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","I don't know about that that test.
What I did do is take the xport1 test as a starting point but only used one of the DS. Could that be the reason ?  I just did the make checks command which passed.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,11,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667647332,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",Oh and I realised the error of dc later. Shouldn't that be tested for in the build of the tests if it is required though?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/c72578,12,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667669812,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","The valgrind tests are also part of the Travis-CI. See:

  
    
      rrdtool-1.x/.travis.yml
    
    
         Line 31
      in
      37cac32
    
  
  
    

        
          
           - make check TESTS_STYLE=""valgrind-logfile"" TESTS=""modify1 modify2 modify3 modify4 modify5 tune1 tune2 graph1 rrdcreate dump-restore create-with-source-1 create-with-source-2 create-with-source-3 create-with-source-4 create-with-source-and-mapping-1 create-from-template-1 dcounter1 vformatter1 list1 pdp-calc1"" 
        
    
  


Ideally a test like the new graph2 should be added there and pass. Otherwise it should be stated in the comment together with the other failing valgrind tests.
# Disable the following, failing tests: rpn1 rpn2 xport1
# These tests are failing on Travis CI (currently Ubuntu xenial, 16.04LTS), when using valgrind-logfile",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,13,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667730596,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","valgrind.log is empty and as I am not sure what to do to fix it, I'm kinda stuck with it that way.  I have corrected the typo though.
./functions: line 58: libtool: command not found
cat: /usr/share/cacti/rrdtool/tests/graph2-valgrind.log.12862.tmp: No such file or directory
FAILED: (rc=127) create
FAIL graph2 (exit status: 1)

That was in the test suite log file.
Not sure why it thinks libtool isn't installed though:
apt install libtool
Reading package lists... Done
Building dependency tree
Reading state information... Done
libtool is already the newest version (2.4.6-10).
0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/c72578,14,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-667789701,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","@netniV, the libtool binary is distributed via the libtool-bin package. Please try:
sudo apt-get install libtool-bin",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,15,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-668134540,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","OK, so the functions issue has now gone away but it is still failing...
=========================================
   rrdtool 1.7.2: tests/test-suite.log
=========================================

# TOTAL: 1
# PASS:  0
# SKIP:  0
# XFAIL: 0
# FAIL:  1
# XPASS: 0
# ERROR: 0

.. contents:: :depth: 2

FAIL: graph2
============

/usr/bin/libtool: line 11733: exec: valgrind: not found
cat: /usr/share/cacti/rrdtool/tests/graph2-valgrind.log.10244.tmp: No such file or directory
FAILED: (rc=127) create
FAIL graph2 (exit status: 1)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,16,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-668138131,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","Honestly, I have no idea what I am doing here 😱
If you can fix up the patch for whatever I've overlooked, I can bear that in mind for next time but as far as I can tell on my system it works.
This was based on the xport1, so if you deem that means it should be excluded, I have no real thoughts either way 👍",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/c72578,17,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-668150415,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","/usr/bin/libtool: line 11733: exec: valgrind: not found

This should help:
sudo apt-get install valgrind",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,18,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-668297349,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","Did that still didn't understand it, gave up now.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/TheWitness,19,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-668546414,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",valgrind is a leak detector.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/c72578,20,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-668792921,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","Attached is the graph2-valgrind.log file created under Fedora 32, using
make check TESTS_STYLE=""valgrind-logfile"" TESTS=""graph2""
graph2-valgrind.zip",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/netniV,21,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-669104968,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.","Again, still don't know what I'm looking at there.  The codebase itself has not really changed, all I did was combine the use of two different functions (as you will see from the source diff).  If you did that against graphv for --imgformat=PNG and --imgformat=JSONTIME, does it also leak?  If so, I would say there was an underlying problem.
If not, then I have no clue what needs to be released that isn't.  Could it be the im_free(&im) that comes later needs a separate one for the jsontime data?  However, as that's a single point, which pulls the grinfo out of it, I don't see that as being wrong myself and the img variables are not released within that section of code.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1087,2020-07-05T23:49:29Z,2020-08-13T07:45:28Z,2020-08-13T07:45:35Z,MERGED,True,156,5,9,https://github.com/netniV,Add JSONTIME output to graphv data,10,[],https://github.com/oetiker/rrdtool-1.x/pull/1087,https://github.com/oetiker,22,https://github.com/oetiker/rrdtool-1.x/pull/1087#issuecomment-673319297,"So, this morning I was asked a question by my Cacti colleague @browniebraun:

May I can ask you something about RRDtool as you are more experienced with it C code?  I would like to enhance our Zoom JS code to have a hover effect showing the related data for every data point to make RRDtool graph more dynamic. Our current plans are not to switch to a different graph engine AFAIK.
How difficult would it be to enhance the graphv option RRDtool provides to include all data points in JSONTIME format beside the blob image and the rrdgraph characteristics it already returns in a big array?

So I took a quick peek, explained what I thought would need doing, found myself tinkering, and after an hour of that here is the result.... basically I add a new element after the image= called datapoints= which is simply the output that would have been produced if --imgformat=JSONTIME was set.
graphv --imgformat=jsontime
rrdtool-graphv-json.txt
This file contains the data when exported via the JSONTIME imageformat
graphv --imgformat=png
rrdtool-graphv-png.txt
This file contains the data when exported as a PNG image
graphv --imgformat=png --add-jsontime
rrdtool-graphv-combined.txt
This file contains the data when exported as a PNG image with the JSONTIME data added in for good measure by the --add-jsontime parameter.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/jyavenard,1,https://github.com/oetiker/rrdtool-1.x/pull/1088,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/jyavenard,2,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-660825013,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.",See #375 for history. Created a new pull request as it had been created for version 1.4; and I don't know how to update a pull request against a new branch on my side.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-660844011,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.",looking good,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/c72578,4,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661319590,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","Usage of timegm needs some attention under Windows.
See e.g.:
https://stackoverflow.com/questions/16647819/timegm-cross-platform

A mingw-w64 build or PR #1088 will currently fail with the following output:

rrd_graph.c: In function 'find_first_time':
rrd_graph.c:52:26: warning: implicit declaration of function 'timegm'; did you mean 'time'? [-Wimplicit-function-declaration]
   52 | #define MKTIME(a,b) (b ? timegm(a) : mktime(a))
      |                          ^~~~~~
rrd_graph.c:1611:12: note: in expansion of macro 'MKTIME'
 1611 |     return MKTIME(&tm, utc);
      |            ^~~~~~
rrd_graph.c:52:26: warning: nested extern declaration of 'timegm' [-Wnested-externs]
   52 | #define MKTIME(a,b) (b ? timegm(a) : mktime(a))
      |                          ^~~~~~
rrd_graph.c:1611:12: note: in expansion of macro 'MKTIME'
 1611 |     return MKTIME(&tm, utc);
      |            ^~~~~~
...
ld.exe: .libs/librrd_la-rrd_graph.o: in function `find_first_time':
src/rrd_graph.c:1611: undefined reference to `timegm'
ld.exe: .libs/librrd_la-rrd_graph.o: in function `find_next_time':
src/rrd_graph.c:1675: undefined reference to `timegm'
collect2.exe: error: ld returned 1 exit status

Error, when compiling using VS2017:

src\rrd_graph.c(1611): warning C4013: 'timegm' undefined; assuming extern returning int
...
librrd-8.lib(rrd_graph.obj) : error LNK2019: unresolved external symbol _timegm referenced in function _find_first_time",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/jyavenard,5,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661799011,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","can you add a test please

How do you go about testing something returning a graph?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661808323,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.",you can have rrdgraph output in text format ... JSON for example ...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/jyavenard,7,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661813850,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","...
librrd-8.lib(rrd_graph.obj) : error LNK2019: unresolved external symbol _timegm referenced in function _find_first_time


how do you compile on windows? is this a supported platform?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/oetiker,8,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661819843,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","...
librrd-8.lib(rrd_graph.obj) : error LNK2019: unresolved external symbol _timegm referenced in function _find_first_time

how do you compile on windows? is this a supported platform?

yes windows is supported and wolfgang (@c72578) is the windows master
it seems that
#define timegm _mkgmtime

might fix the problem",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/oetiker,9,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661820137,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.",@c72578 github actions support windows ... it would be extra cool if we could have automated testing for windows too ...,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/jyavenard,10,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661854794,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","@c72578 github actions support windows ... it would be extra cool if we could have automated testing for windows too ...

I'm not sure if this is addressed to me.
But that's really outside the scope of this change.
I've been using this patch for over 10 years so I could easily generate such graph
https://mediaserver.avenard.org/power/search?small=1&graph=2&view=day&date=19/07/2020&hour=23&minute=59&plot=total,ch4,ext1,ext2,ext
which present data from midnight to midnight.
Someone asked me to rebase this patch on the current version which I did.
I looked at the existing test for graph, and there's just one doing very little. I feel it's unreasonable to ask for more than that.
But now this is getting too much work for which I have little interest.
So it seems I'll just have to continue building my own modified copy of rrdtool.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/oetiker,11,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-661856218,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.",the windows testing bit is NOT adressed to you ... hence the @c72578 in front of it :),True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/c72578,12,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-662102276,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","@jyavenard here is a modification to this PR, which allows compilation under Windows.
diff --git a/src/rrd_graph.c b/src/rrd_graph.c
index b92c5a96..2fbef664 100644
--- a/src/rrd_graph.c
+++ b/src/rrd_graph.c
@@ -49,6 +49,9 @@
 
 #include <time.h>
 #define LOCALTIME_R(a,b,c) (c ? gmtime_r(a,b) : localtime_r(a,b))
+#ifdef _WIN32
+#define timegm _mkgmtime
+#endif
 #define MKTIME(a,b) (b ? timegm(a) : mktime(a))
 
 #include <locale.h>",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/jyavenard,13,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-662141942,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","@jyavenard here is a modification to this PR, which allows compilation under Windows.
#include <time.h>
#define LOCALTIME_R(a,b,c) (c ? gmtime_r(a,b) : localtime_r(a,b))
+#ifdef _WIN32
+#define timegm _mkgmtime
+#endif

I've already pushed similar changes yesterday",True,{'THUMBS_UP': ['https://github.com/c72578']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/jyavenard,14,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-662293489,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","Ok, after spending a couple of hours, I don't see how I can write an automated test to verify the behaviour of this. The data isn't exported with the JSON format.
Here is an example of what I would expect it to do.
I collect the power usage and store 1 minute average in a rrd database. The data is stored using UTC timestamps.
So midnight this morning, would have the time epoch time 1595376000.
Now if I wanted to present this data with the graph generated via a php called via apache; the time of midnight UTC would be displayed as 10:00AM instead of 00:00.
E.g if I wanted to display from 1595376000 to 1595462400 (23/07/2020 at 00:00AM)
You can't modify the TZ in a php script running inside apache, this would affect all sites running within that apache session, the logs, the content displayed, everything, and that would be bad.
So I would see this graph:

but I want to see:

note the time range displayed. 10AM vs 12AM",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/oetiker,15,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-662321605,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","hmmm, ok I see that could prove tricky ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1088,2020-07-20T06:08:53Z,2020-07-22T12:47:16Z,2020-07-25T06:58:02Z,MERGED,True,58,23,5,https://github.com/jyavenard,Add --utc to graph option.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1088,https://github.com/c72578,16,https://github.com/oetiker/rrdtool-1.x/pull/1088#issuecomment-663819804,"Allow to generate a graph as if the current timezone was UTC (e.g set TZ=UTC).
This is particularly useful in environment where changing the TZ environment variable is not desirable, such as in a browser script.
The data generated would be added to the rrd file while TZ=UTC, and read in the browser with --utc set.
This allows to easily calculate daily average ranging from midgnight to midnight rather than say the last 24 hours.","@c72578 github actions support windows ... it would be extra cool if we could have automated testing for windows too ...

OK, I have opened PR #1089 now, which adds a GitHub Action for Windows",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1089,2020-07-24T23:34:42Z,2020-07-26T11:11:54Z,2020-07-26T11:11:54Z,MERGED,True,59,0,2,https://github.com/c72578,Add Windows MSYS2 GitHub Action,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1089,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1089,"This enables CI for Windows builds using MSYS2 mingw-w64-x86_64.
The GitHub Action is based on: https://www.msys2.org/docs/ci/","This enables CI for Windows builds using MSYS2 mingw-w64-x86_64.
The GitHub Action is based on: https://www.msys2.org/docs/ci/",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1089,2020-07-24T23:34:42Z,2020-07-26T11:11:54Z,2020-07-26T11:11:54Z,MERGED,True,59,0,2,https://github.com/c72578,Add Windows MSYS2 GitHub Action,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1089,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1089#issuecomment-663775492,"This enables CI for Windows builds using MSYS2 mingw-w64-x86_64.
The GitHub Action is based on: https://www.msys2.org/docs/ci/","See results of corresponding Github Action:
https://github.com/c72578/rrdtool-1.x/runs/911267186",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1090,2020-08-09T20:08:45Z,2020-08-10T07:04:04Z,2020-08-10T07:04:04Z,MERGED,True,10,7,3,https://github.com/c72578,Add -no-undefined automatically for MinGW-w64,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1090,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1090,"The linker flag -no-undefined is required, when building the dll for
Windows using MinGW-w64. Add -no-undefined to librrd_la_LDFLAGS in
Makefile.am in case of MinGW-w64 builds. This way it is not necessary
anymore to add LDFLAGS=-no-undefined to the make command.","The linker flag -no-undefined is required, when building the dll for
Windows using MinGW-w64. Add -no-undefined to librrd_la_LDFLAGS in
Makefile.am in case of MinGW-w64 builds. This way it is not necessary
anymore to add LDFLAGS=-no-undefined to the make command.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1091,2020-08-11T17:16:41Z,2020-08-11T19:36:59Z,2020-08-11T19:36:59Z,MERGED,True,2,0,1,https://github.com/c72578,Add python details to configure summary,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1091,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1091,"The output in the summary of configure will look like this:
 Build Python Bindings: yes
         Python Binary: /usr/bin/python
        Python Version: 3.8","The output in the summary of configure will look like this:
 Build Python Bindings: yes
         Python Binary: /usr/bin/python
        Python Version: 3.8",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1098,2020-12-11T18:46:48Z,2020-12-14T06:50:15Z,2020-12-14T06:50:15Z,MERGED,True,1,16,2,https://github.com/nomis,Use a separate pango fontmap per thread,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1098,https://github.com/nomis,1,https://github.com/oetiker/rrdtool-1.x/pull/1098,"Reusing the same fontmap from multiple threads is not safe, despite the attempts to use a mutex to protect it there are other instances where it behaves unexpectedly if graphs are created from multiple threads at the same time, e.g.:
(process:76234): Pango-WARNING **: 11:47:25.823: failed to create cairo scaled font, expect ugly output. the offending font is 'DejaVu Sans Mono 8'
(process:76234): Pango-WARNING **: 11:47:25.823: font_face status is: no error has occurred
(process:76234): Pango-WARNING **: 11:47:25.823: scaled_font status is: invalid matrix (not invertible)
(process:76234): Pango-WARNING **: 11:47:25.823: shaping failure, expect ugly output. shape-engine='PangoFcShapeEngine', font='DejaVu Sans Mono 8', text='Apparent temp (?C)'

This error results in boxes instead of characters on the graph. In the worst case scenario there are memory management errors that cause GLib to complain or the process to abort.
Calling pango_cairo_font_map_get_default() multiple times from the same thread will return the same object, so this satisfies the performance expectations of reusing it within a single thread. Trying to lock a mutex for even more pango/cairo function calls is likely to decrease performance when multiple threads are used concurrently.","Reusing the same fontmap from multiple threads is not safe, despite the attempts to use a mutex to protect it there are other instances where it behaves unexpectedly if graphs are created from multiple threads at the same time, e.g.:
(process:76234): Pango-WARNING **: 11:47:25.823: failed to create cairo scaled font, expect ugly output. the offending font is 'DejaVu Sans Mono 8'
(process:76234): Pango-WARNING **: 11:47:25.823: font_face status is: no error has occurred
(process:76234): Pango-WARNING **: 11:47:25.823: scaled_font status is: invalid matrix (not invertible)
(process:76234): Pango-WARNING **: 11:47:25.823: shaping failure, expect ugly output. shape-engine='PangoFcShapeEngine', font='DejaVu Sans Mono 8', text='Apparent temp (?C)'

This error results in boxes instead of characters on the graph. In the worst case scenario there are memory management errors that cause GLib to complain or the process to abort.
Calling pango_cairo_font_map_get_default() multiple times from the same thread will return the same object, so this satisfies the performance expectations of reusing it within a single thread. Trying to lock a mutex for even more pango/cairo function calls is likely to decrease performance when multiple threads are used concurrently.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1098,2020-12-11T18:46:48Z,2020-12-14T06:50:15Z,2020-12-14T06:50:15Z,MERGED,True,1,16,2,https://github.com/nomis,Use a separate pango fontmap per thread,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1098,https://github.com/nomis,2,https://github.com/oetiker/rrdtool-1.x/pull/1098#issuecomment-743362735,"Reusing the same fontmap from multiple threads is not safe, despite the attempts to use a mutex to protect it there are other instances where it behaves unexpectedly if graphs are created from multiple threads at the same time, e.g.:
(process:76234): Pango-WARNING **: 11:47:25.823: failed to create cairo scaled font, expect ugly output. the offending font is 'DejaVu Sans Mono 8'
(process:76234): Pango-WARNING **: 11:47:25.823: font_face status is: no error has occurred
(process:76234): Pango-WARNING **: 11:47:25.823: scaled_font status is: invalid matrix (not invertible)
(process:76234): Pango-WARNING **: 11:47:25.823: shaping failure, expect ugly output. shape-engine='PangoFcShapeEngine', font='DejaVu Sans Mono 8', text='Apparent temp (?C)'

This error results in boxes instead of characters on the graph. In the worst case scenario there are memory management errors that cause GLib to complain or the process to abort.
Calling pango_cairo_font_map_get_default() multiple times from the same thread will return the same object, so this satisfies the performance expectations of reusing it within a single thread. Trying to lock a mutex for even more pango/cairo function calls is likely to decrease performance when multiple threads are used concurrently.","Test script: test.py.txt
Test file info: 5449-1000-029AF902EE.rrd.txt",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1098,2020-12-11T18:46:48Z,2020-12-14T06:50:15Z,2020-12-14T06:50:15Z,MERGED,True,1,16,2,https://github.com/nomis,Use a separate pango fontmap per thread,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1098,https://github.com/nomis,3,https://github.com/oetiker/rrdtool-1.x/pull/1098#issuecomment-743386642,"Reusing the same fontmap from multiple threads is not safe, despite the attempts to use a mutex to protect it there are other instances where it behaves unexpectedly if graphs are created from multiple threads at the same time, e.g.:
(process:76234): Pango-WARNING **: 11:47:25.823: failed to create cairo scaled font, expect ugly output. the offending font is 'DejaVu Sans Mono 8'
(process:76234): Pango-WARNING **: 11:47:25.823: font_face status is: no error has occurred
(process:76234): Pango-WARNING **: 11:47:25.823: scaled_font status is: invalid matrix (not invertible)
(process:76234): Pango-WARNING **: 11:47:25.823: shaping failure, expect ugly output. shape-engine='PangoFcShapeEngine', font='DejaVu Sans Mono 8', text='Apparent temp (?C)'

This error results in boxes instead of characters on the graph. In the worst case scenario there are memory management errors that cause GLib to complain or the process to abort.
Calling pango_cairo_font_map_get_default() multiple times from the same thread will return the same object, so this satisfies the performance expectations of reusing it within a single thread. Trying to lock a mutex for even more pango/cairo function calls is likely to decrease performance when multiple threads are used concurrently.","After this is fixed, it would be helpful if Ubuntu Bionic (using 1.7.0) was updated to include these patches:
f06463f (causes graph title text to move up/down a line)
bd5f3ea (causes lines on the graph to jump around)
138fd09 (causes tab positions that vary across multiple lines to be wrong)
Compared to Ubuntu Xenial (using 1.5.5) the support for generating graphs from multiple threads under Python is awful. Lines on the graphs jump around all over the place.
There is nothing in the CHANGES file to indicate that these major threading issues in 1.7.0 are fixed in later versions to prompt anyone to upgrade.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1099,2020-12-28T15:37:11Z,2020-12-30T14:45:02Z,2020-12-30T14:45:02Z,MERGED,True,1,3,1,https://github.com/nirgal,Switch to python3,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1099,https://github.com/nirgal,1,https://github.com/oetiker/rrdtool-1.x/pull/1099,Python2 is dead,Python2 is dead,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1102,2021-01-11T14:58:43Z,2021-01-11T17:16:18Z,2022-03-24T04:57:00Z,MERGED,True,15,0,3,None,Reproducibility improvement,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1102,None,1,https://github.com/oetiker/rrdtool-1.x/pull/1102,"RRDtool binaries include build date and time, no matter if SOURCE_DATE_EPOCH environment variable was set or not. Following changes were made in the context of Reproducible Builds initiative.","RRDtool binaries include build date and time, no matter if SOURCE_DATE_EPOCH environment variable was set or not. Following changes were made in the context of Reproducible Builds initiative.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1102,2021-01-11T14:58:43Z,2021-01-11T17:16:18Z,2022-03-24T04:57:00Z,MERGED,True,15,0,3,None,Reproducibility improvement,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1102,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1102#issuecomment-758096873,"RRDtool binaries include build date and time, no matter if SOURCE_DATE_EPOCH environment variable was set or not. Following changes were made in the context of Reproducible Builds initiative.",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1102,2021-01-11T14:58:43Z,2021-01-11T17:16:18Z,2022-03-24T04:57:00Z,MERGED,True,15,0,3,None,Reproducibility improvement,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1102,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/1102#issuecomment-1075586404,"RRDtool binaries include build date and time, no matter if SOURCE_DATE_EPOCH environment variable was set or not. Following changes were made in the context of Reproducible Builds initiative.","@vkleinik Please have a look here in rrd_tool.c:

  
    
      rrdtool-1.x/src/rrd_tool.c
    
    
         Line 51
      in
      fe683a0
    
  
  
    

        
          
           ""               Compiled %s %s\n\n"" 
        
    
  


Two variables are required: __DATE__, __TIME__
However, BUILD_DATE is only one variable here:

  
    
      rrdtool-1.x/src/rrd_tool.c
    
    
         Line 313
      in
      fe683a0
    
  
  
    

        
          
           fprintf(stdout, _(help_main), PACKAGE_VERSION, BUILD_DATE); 
        
    
  


vs:

  
    
      rrdtool-1.x/src/rrd_tool.c
    
    
         Line 315
      in
      fe683a0
    
  
  
    

        
          
           fprintf(stdout, _(help_main), PACKAGE_VERSION, __DATE__, __TIME__); 
        
    
  


This leads to a segfault, when running rrdtool or rrdtool --help
Example output of __DATE__, __TIME__ to stdout:
./rrdtool
RRDtool 1.8.0  Copyright by Tobias Oetiker <tobi@oetiker.ch>
               Compiled Mar 22 2022 19:01:46

Usage: rrdtool [options] command command_options",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1102,2021-01-11T14:58:43Z,2021-01-11T17:16:18Z,2022-03-24T04:57:00Z,MERGED,True,15,0,3,None,Reproducibility improvement,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1102,https://github.com/c72578,4,https://github.com/oetiker/rrdtool-1.x/pull/1102#issuecomment-1075995741,"RRDtool binaries include build date and time, no matter if SOURCE_DATE_EPOCH environment variable was set or not. Following changes were made in the context of Reproducible Builds initiative.","@oetiker , @vkleinik I will prepare a fix concerning BUILD_DATE in rrdtool help output.
diff -u a/src/rrd_tool.c b/src/rrd_tool.c
--- a/src/rrd_tool.c	2022-03-23 01:30:44.000000000 +0100
+++ b/src/rrd_tool.c	2022-03-23 18:57:06.914718200 +0100
@@ -45,11 +45,19 @@
     char *cmd)
 {
 
+#ifdef BUILD_DATE
     const char *help_main =
         N_(""RRDtool %s""
            ""  Copyright by Tobias Oetiker <tobi@oetiker.ch>\n""
-           ""               Compiled %s %s\n\n""
+           ""               Compiled %s\n\n""
            ""Usage: rrdtool [options] command command_options\n"");
+#else
+    const char *help_main =
+        N_(""RRDtool %s""
+           ""  Copyright by Tobias Oetiker <tobi@oetiker.ch>\n""
+           ""               Compiled %s\n\n""
+           ""Usage: rrdtool [options] command command_options\n"");
+#endif
 
     const char *help_list =
         N_",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1102,2021-01-11T14:58:43Z,2021-01-11T17:16:18Z,2022-03-24T04:57:00Z,MERGED,True,15,0,3,None,Reproducibility improvement,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1102,https://github.com/oetiker,5,https://github.com/oetiker/rrdtool-1.x/pull/1102#issuecomment-1076082999,"RRDtool binaries include build date and time, no matter if SOURCE_DATE_EPOCH environment variable was set or not. Following changes were made in the context of Reproducible Builds initiative.",cool,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1108,2021-03-12T13:29:44Z,2021-03-12T14:34:54Z,2021-03-12T14:34:54Z,MERGED,True,3,0,1,https://github.com/mistotebe,Plug some leaks in rrdcached,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1108,https://github.com/mistotebe,1,https://github.com/oetiker/rrdtool-1.x/pull/1108,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1109,2021-03-13T07:04:40Z,2021-03-15T08:30:15Z,2021-03-15T08:30:15Z,MERGED,True,1,2,1,https://github.com/c72578,Update Debian link,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1109,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1109,Resolves #1104,Resolves #1104,True,{'THUMBS_UP': ['https://github.com/miiichael']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1110,2021-03-13T09:13:52Z,2021-03-16T07:44:29Z,2021-03-16T07:44:35Z,MERGED,True,3,3,2,https://github.com/c72578,"Switch to pkgconf (MSYS2, MinGW-w64)",2,[],https://github.com/oetiker/rrdtool-1.x/pull/1110,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1110,"The MSYS2 project has switched from pkg-config to pkgconf as default.
For details, see: msys2/MSYS2-packages#2197
Both packages work when building RRDtool for Windows using MSYS2.

Switch to pkgconf instead of pkg-config
Update the following files:
.github/workflows/ci-workflow.yml
win32/README-MinGW-w64
This avoids the following warning in the Windows CI-build:
warning: removing 'mingw-w64-x86_64-pkg-config' from target list
because it conflicts with 'mingw-w64-x86_64-pkgconf'","The MSYS2 project has switched from pkg-config to pkgconf as default.
For details, see: msys2/MSYS2-packages#2197
Both packages work when building RRDtool for Windows using MSYS2.

Switch to pkgconf instead of pkg-config
Update the following files:
.github/workflows/ci-workflow.yml
win32/README-MinGW-w64
This avoids the following warning in the Windows CI-build:
warning: removing 'mingw-w64-x86_64-pkg-config' from target list
because it conflicts with 'mingw-w64-x86_64-pkgconf'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1110,2021-03-13T09:13:52Z,2021-03-16T07:44:29Z,2021-03-16T07:44:35Z,MERGED,True,3,3,2,https://github.com/c72578,"Switch to pkgconf (MSYS2, MinGW-w64)",2,[],https://github.com/oetiker/rrdtool-1.x/pull/1110,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1110#issuecomment-800033042,"The MSYS2 project has switched from pkg-config to pkgconf as default.
For details, see: msys2/MSYS2-packages#2197
Both packages work when building RRDtool for Windows using MSYS2.

Switch to pkgconf instead of pkg-config
Update the following files:
.github/workflows/ci-workflow.yml
win32/README-MinGW-w64
This avoids the following warning in the Windows CI-build:
warning: removing 'mingw-w64-x86_64-pkg-config' from target list
because it conflicts with 'mingw-w64-x86_64-pkgconf'",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1111,2021-03-22T12:01:33Z,2021-03-22T15:19:08Z,2021-03-22T15:19:08Z,MERGED,True,3,2,1,https://github.com/svenpanne,Avoid segfault: Don't read and write into the same buffer.,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1111,https://github.com/svenpanne,1,https://github.com/oetiker/rrdtool-1.x/pull/1111,"Using CTX->rrd_error as a source and destination buffer at the same time
provokes undefined behavior.  In real life you get funny error messages
and/or segfaults within vs(n)printf().
Simple solution: Use a temporary copy of the error message while writing
into it.","Using CTX->rrd_error as a source and destination buffer at the same time
provokes undefined behavior.  In real life you get funny error messages
and/or segfaults within vs(n)printf().
Simple solution: Use a temporary copy of the error message while writing
into it.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1117,2021-05-26T19:08:47Z,2021-05-28T06:45:06Z,2021-05-28T06:45:06Z,MERGED,True,0,2,2,https://github.com/yarda,Fix RPATH for the python bindings,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1117,https://github.com/yarda,1,https://github.com/oetiker/rrdtool-1.x/pull/1117,"Fixes #1116
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","Fixes #1116
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1117,2021-05-26T19:08:47Z,2021-05-28T06:45:06Z,2021-05-28T06:45:06Z,MERGED,True,0,2,2,https://github.com/yarda,Fix RPATH for the python bindings,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1117,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1117#issuecomment-849100978,"Fixes #1116
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","this completely disables the rpath in all cases, this means the python bindings will not work when librrd is no in the default library search patch, right ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1117,2021-05-26T19:08:47Z,2021-05-28T06:45:06Z,2021-05-28T06:45:06Z,MERGED,True,0,2,2,https://github.com/yarda,Fix RPATH for the python bindings,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1117,https://github.com/yarda,3,https://github.com/oetiker/rrdtool-1.x/pull/1117#issuecomment-849130950,"Fixes #1116
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","this completely disables the rpath in all cases, this means the python bindings will not work when librrd is no in the default library search patch, right ?

This is what the --disable-rpath should do, shouldn't it? E.g. in Fedora it's not permitted to use RPATH [1], so it is not possible to achieve it without patching.
[1] https://docs.fedoraproject.org/en-US/packaging-guidelines/#_beware_of_rpath",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1117,2021-05-26T19:08:47Z,2021-05-28T06:45:06Z,2021-05-28T06:45:06Z,MERGED,True,0,2,2,https://github.com/yarda,Fix RPATH for the python bindings,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1117,https://github.com/yarda,4,https://github.com/oetiker/rrdtool-1.x/pull/1117#issuecomment-849526251,"Fixes #1116
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","this completely disables the rpath in all cases, this means the python bindings will not work when librrd is no in the default library search patch, right ?

This is what the --disable-rpath should do, shouldn't it? E.g. in Fedora it's not permitted to use RPATH [1], so it is not possible to achieve it without patching.
[1] https://docs.fedoraproject.org/en-US/packaging-guidelines/#_beware_of_rpath

Also Fedora is trying to enforce no RPATH:
https://fedoraproject.org/wiki/Changes/Broken_RPATH_will_fail_rpmbuild
The feature is called ""broken RPATH..."", but it also includes explicit standard RPATHs like e.g. $libdir.
It seems openSUSE already enforces no RPATH, Debian discourages use of it. Python upstream is discussing about it. So I think there should be configure switch for it. There is currently --disable-rpath, but it doesn't disable all RPATHs.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1117,2021-05-26T19:08:47Z,2021-05-28T06:45:06Z,2021-05-28T06:45:06Z,MERGED,True,0,2,2,https://github.com/yarda,Fix RPATH for the python bindings,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1117,https://github.com/c72578,5,https://github.com/oetiker/rrdtool-1.x/pull/1117#issuecomment-849535234,"Fixes #1116
Signed-off-by: Jaroslav Škarvada jskarvad@redhat.com","In bindings/Makefile.am we have
if ENABLE_RPATH
PYTHON_RPATH=--rpath=$(libdir)
PERL_RPATH=RPATH=$(libdir)
endif


Instead of specifying the -rpath to the linker, the environment variable LD_RUN_PATH can be set to the same effect [1].

So, there is some redundancy and it makes sense to remove LD_RUN_PATH=$(libdir), which is currently not inside if ENABLE_RPATH.
[1] https://en.wikipedia.org/wiki/Rpath#The_role_of_GNU_ld",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1121,2021-07-03T07:13:47Z,2021-07-05T06:23:11Z,2021-07-05T06:23:55Z,MERGED,True,199,3,4,https://github.com/c72578,Update Windows GitHub Actions,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1121,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1121,"Update ci-workflow.yml and add GitHub Actions for Windows builds
using MSVC and vcpkg. Both, x64 and x86 builds are part of the CI.
The required vcpkg ports are installed and cached using
lukka/run-vcpkg@v7
Add release-windows.yml, which enables building Windows binaries of
RRDtool. This GitHub action is run automatically upon new tags and
can be triggered manually. The required .exe and .dll files are
copied using collect_rrdtool_vcpkg_files.bat and deployed by
actions/upload-artifact@v2
Makefile_vcpkg.msc:
Add include\harfbuzz, which is required for building pango.
Fixes: pango-coverage.h(28): fatal error C1083:
Cannot open include file: 'hb.h': No such file or directory","Update ci-workflow.yml and add GitHub Actions for Windows builds
using MSVC and vcpkg. Both, x64 and x86 builds are part of the CI.
The required vcpkg ports are installed and cached using
lukka/run-vcpkg@v7
Add release-windows.yml, which enables building Windows binaries of
RRDtool. This GitHub action is run automatically upon new tags and
can be triggered manually. The required .exe and .dll files are
copied using collect_rrdtool_vcpkg_files.bat and deployed by
actions/upload-artifact@v2
Makefile_vcpkg.msc:
Add include\harfbuzz, which is required for building pango.
Fixes: pango-coverage.h(28): fatal error C1083:
Cannot open include file: 'hb.h': No such file or directory",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1121,2021-07-03T07:13:47Z,2021-07-05T06:23:11Z,2021-07-05T06:23:55Z,MERGED,True,199,3,4,https://github.com/c72578,Update Windows GitHub Actions,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1121,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1121#issuecomment-873361719,"Update ci-workflow.yml and add GitHub Actions for Windows builds
using MSVC and vcpkg. Both, x64 and x86 builds are part of the CI.
The required vcpkg ports are installed and cached using
lukka/run-vcpkg@v7
Add release-windows.yml, which enables building Windows binaries of
RRDtool. This GitHub action is run automatically upon new tags and
can be triggered manually. The required .exe and .dll files are
copied using collect_rrdtool_vcpkg_files.bat and deployed by
actions/upload-artifact@v2
Makefile_vcpkg.msc:
Add include\harfbuzz, which is required for building pango.
Fixes: pango-coverage.h(28): fatal error C1083:
Cannot open include file: 'hb.h': No such file or directory","A test run of release-windows.yml can be found here:
https://github.com/c72578/rrdtool-1.x/actions/runs/995760209
The built Windows binaries using Github Actions are provided under Artifacts:
deploy-rrdtool-MSVC-x64.zip
deploy-rrdtool-MSVC-x86.zip
This way, RRDtool is built against the third-party libraries provided by vcpkg, as of today:



Port
Version




cairo
1.17.4


expat
2.4.1


fontconfig
2.13.1


freetype
2.10.4


gettext
0.21


glib
2.66.4


libpng
1.6.37


libxml2
2.9.10


pango
1.48.4


pcre
8.45


zlib
1.2.11",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1121,2021-07-03T07:13:47Z,2021-07-05T06:23:11Z,2021-07-05T06:23:55Z,MERGED,True,199,3,4,https://github.com/c72578,Update Windows GitHub Actions,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1121,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/1121#issuecomment-873525162,"Update ci-workflow.yml and add GitHub Actions for Windows builds
using MSVC and vcpkg. Both, x64 and x86 builds are part of the CI.
The required vcpkg ports are installed and cached using
lukka/run-vcpkg@v7
Add release-windows.yml, which enables building Windows binaries of
RRDtool. This GitHub action is run automatically upon new tags and
can be triggered manually. The required .exe and .dll files are
copied using collect_rrdtool_vcpkg_files.bat and deployed by
actions/upload-artifact@v2
Makefile_vcpkg.msc:
Add include\harfbuzz, which is required for building pango.
Fixes: pango-coverage.h(28): fatal error C1083:
Cannot open include file: 'hb.h': No such file or directory","@oetiker Hi Tobi,
it looks like travis-ci protected branch settings for the master branch need to be updated.

Since June 15th, 2021, the building on travis-ci.org is ceased. Please use travis-ci.com from now on.


Migrating repositories to travis-ci.com
https://docs.travis-ci.com/user/migrate/open-source-repository-migration#do-i-need-to-make-any-other-changes

Do I need to make any other changes?

You only need to make any changes yourself if you use any of the following features:
“Protected Branches” feature in GitHub to require a passing Travis CI build before merging a Pull Request: make sure to edit your required status checks to now use Travis CI - Pull Request and/or Travis CI - Branch. See: Required status checks at GitHub.


Go to the repository’s Branch Settings page (https://github.com/oetiker/rrdtool-1.x/settings/branches).
In the ""Branch Protection Settings"" section, click ""Edit"" for a protected branch
Scroll down to the second box, ""Require status checks to pass before merging."" Select either ""Travis CI - Pull Request"" or ""Travis CI - Branch"" or both. (Note: ""continuous-integration/travis-ci"" is the Status API event which is deprecated)
Save your changes",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1121,2021-07-03T07:13:47Z,2021-07-05T06:23:11Z,2021-07-05T06:23:55Z,MERGED,True,199,3,4,https://github.com/c72578,Update Windows GitHub Actions,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1121,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/1121#issuecomment-873837646,"Update ci-workflow.yml and add GitHub Actions for Windows builds
using MSVC and vcpkg. Both, x64 and x86 builds are part of the CI.
The required vcpkg ports are installed and cached using
lukka/run-vcpkg@v7
Add release-windows.yml, which enables building Windows binaries of
RRDtool. This GitHub action is run automatically upon new tags and
can be triggered manually. The required .exe and .dll files are
copied using collect_rrdtool_vcpkg_files.bat and deployed by
actions/upload-artifact@v2
Makefile_vcpkg.msc:
Add include\harfbuzz, which is required for building pango.
Fixes: pango-coverage.h(28): fatal error C1083:
Cannot open include file: 'hb.h': No such file or directory",thank you! fixed travis and the branch protection ... guess we should move the linux checks to actions too ..,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1125,2021-07-13T18:29:35Z,2021-07-15T06:16:43Z,2021-07-15T06:16:53Z,MERGED,True,11,2,1,https://github.com/c72578,Add escapeJSON() to legend entries,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1125,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1125,"Double quotes in legends are currently not escaped, if JSON imgformat
is used for rrdtool graph. This produces invalid JSON files.
See #409 (comment) for further details.","Double quotes in legends are currently not escaped, if JSON imgformat
is used for rrdtool graph. This produces invalid JSON files.
See #409 (comment) for further details.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1125,2021-07-13T18:29:35Z,2021-07-15T06:16:43Z,2021-07-15T06:16:53Z,MERGED,True,11,2,1,https://github.com/c72578,Add escapeJSON() to legend entries,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1125,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1125#issuecomment-880427530,"Double quotes in legends are currently not escaped, if JSON imgformat
is used for rrdtool graph. This produces invalid JSON files.
See #409 (comment) for further details.",thanks!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1132,2021-09-03T01:44:39Z,2021-09-03T14:16:22Z,2021-09-03T14:16:25Z,MERGED,True,10,3,2,https://github.com/andrewchambers,fix leaks in xport,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1132,https://github.com/andrewchambers,1,https://github.com/oetiker/rrdtool-1.x/pull/1132,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1132,2021-09-03T01:44:39Z,2021-09-03T14:16:22Z,2021-09-03T14:16:25Z,MERGED,True,10,3,2,https://github.com/andrewchambers,fix leaks in xport,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1132,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1132#issuecomment-912573595,,thank you!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1136,2021-10-12T08:36:28Z,2021-10-21T12:31:51Z,2021-10-21T12:31:51Z,MERGED,True,3,2,1,https://github.com/oetiker,be more agressive in extracting bad characters from cgi variables,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1136,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/1136,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1138,2021-10-21T23:37:48Z,2021-10-24T11:14:41Z,2021-10-24T19:01:47Z,MERGED,True,3,3,3,https://github.com/veprbl,Fix python bindings installation in case of empty DESTDIR,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1138,https://github.com/veprbl,1,https://github.com/oetiker/rrdtool-1.x/pull/1138,"The current behaviour is to install the extension to ./usr/local (if
prefix is /usr/local), so it ends up in the temporary build directory
instead of the intended absolute prefix.
The slash after $(DESTDIR) is needed to make empty DESTDIR mean
installation to / instead of making the prefix to mean a relative
path. We make it triple slash as POSIX reserves double slashes to
possibly have a special treatment by the OS.","The current behaviour is to install the extension to ./usr/local (if
prefix is /usr/local), so it ends up in the temporary build directory
instead of the intended absolute prefix.
The slash after $(DESTDIR) is needed to make empty DESTDIR mean
installation to / instead of making the prefix to mean a relative
path. We make it triple slash as POSIX reserves double slashes to
possibly have a special treatment by the OS.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1138,2021-10-21T23:37:48Z,2021-10-24T11:14:41Z,2021-10-24T19:01:47Z,MERGED,True,3,3,3,https://github.com/veprbl,Fix python bindings installation in case of empty DESTDIR,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1138,https://github.com/veprbl,2,https://github.com/oetiker/rrdtool-1.x/pull/1138#issuecomment-949163970,"The current behaviour is to install the extension to ./usr/local (if
prefix is /usr/local), so it ends up in the temporary build directory
instead of the intended absolute prefix.
The slash after $(DESTDIR) is needed to make empty DESTDIR mean
installation to / instead of making the prefix to mean a relative
path. We make it triple slash as POSIX reserves double slashes to
possibly have a special treatment by the OS.","Turns out the python bindings don't install on travis, as before this PR it says:
make[4]: Leaving directory '/home/travis/build/oetiker/rrdtool-1.x/bindings/perl-shared'
2036  GEN      install-data-local
2037  GEN      install-data-local
2038running install
2039Checking .pth file support in opt/rrdtool-master/lib/python2.7/site-packages/
2040/usr/bin/python -E -c pass
2041TEST FAILED: opt/rrdtool-master/lib/python2.7/site-packages/ does NOT support .pth files
2042error: bad install directory or PYTHONPATH
2043
2044You are attempting to install a package to a directory that is not
2045on PYTHONPATH and which Python does not read "".pth"" files from.  The
2046installation directory you specified (via --install-dir, --prefix, or
2047the distutils default setting) was:
2048
2049    opt/rrdtool-master/lib/python2.7/site-packages/
2050
2051and your PYTHONPATH environment variable currently contains:
2052
2053    ''
2054
2055Here are some of your options for correcting the problem:
2056
2057* You can choose a different installation directory, i.e., one that is
2058  on PYTHONPATH or supports .pth files
2059
2060* You can add the installation directory to the PYTHONPATH environment
2061  variable.  (It must then also be on PYTHONPATH whenever you run
2062  Python and want to use the package(s) you are installing.)
2063
2064* You can set up the installation directory to support "".pth"" files by
2065  using one of the approaches described here:
2066
2067  https://setuptools.readthedocs.io/en/latest/easy_install.html#custom-installation-locations
2068
2069
2070Please make the appropriate changes for your system and try again.
2071make[3]: Leaving directory '/home/travis/build/oetiker/rrdtool-1.x/bindings'

And, after, it works:
make[4]: Leaving directory '/home/travis/build/oetiker/rrdtool-1.x/bindings/perl-shared'
2036  GEN      install-data-local
2037  GEN      install-data-local
2038running install
2039running install_lib
2040creating /opt/rrdtool-master/lib/python2.7
2041creating /opt/rrdtool-master/lib/python2.7/site-packages
2042copying build/lib.linux-x86_64-2.7/rrdtool.so -> ///opt/rrdtool-master/lib/python2.7/site-packages
2043running install_egg_info
2044running egg_info
2045creating rrdtool.egg-info
2046writing rrdtool.egg-info/PKG-INFO
2047writing top-level names to rrdtool.egg-info/top_level.txt
2048writing dependency_links to rrdtool.egg-info/dependency_links.txt
2049writing manifest file 'rrdtool.egg-info/SOURCES.txt'
2050reading manifest file 'rrdtool.egg-info/SOURCES.txt'
2051writing manifest file 'rrdtool.egg-info/SOURCES.txt'
2052Copying rrdtool.egg-info to ///opt/rrdtool-master/lib/python2.7/site-packages/rrdtool-0.1.10-py2.7.egg-info
2053running install_scripts
2054make[3]: Leaving directory '/home/travis/build/oetiker/rrdtool-1.x/bindings'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/Frazew,1,https://github.com/oetiker/rrdtool-1.x/pull/1139,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!","Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/landy2005,2,https://github.com/oetiker/rrdtool-1.x/pull/1139#issuecomment-971718370,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!","@Frazew hi, can you make ability for use rrdcached with dump and restore commands?
(dump already should work, but really not: #1141)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/Frazew,3,https://github.com/oetiker/rrdtool-1.x/pull/1139#issuecomment-971740483,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!",I've edited the description to reflect the tests that were conducted which tend towards indicating that the patch should be working as intended.,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/1139#issuecomment-972643000,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!","I've edited the description to reflect the tests that were conducted which tend towards indicating that the patch should be working as intended.

Hi @Frazew, thank you a lot for your contribution. Great to hear that this is working for you in produciton already. Could you please update the tests in the tests folder to exercise the new functionality ... in that way the testing would not be limited to you saying so in the PR.
thanks tobi",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/Frazew,5,https://github.com/oetiker/rrdtool-1.x/pull/1139#issuecomment-976969285,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!","Hi @oetiker! I've had to somewhat significantly modify the way the tests are conducted in order for them to be actually useful here.
The problem was that communication between rrdtool and rrdcached was always tested using a unix domain socket, which leads to a fundamentally different behavior in the get_path  implementation. Also, because both rrdtool and rrdcached were pointing to the same directory, commands that would fallback to the local implementation (like the tune command) worked like a charm while they should not have.
I fixed this by implementing the rrdcached-tcp and rrdcached-unix test suites. The rrdcached-unix behaves mostly the same way as before while rrdcached-tcp launches rrdcached on a tcp socket (which disables the unix domain socket logic) and sets $RRDTOOL to a function (in tests/functions) which fixes the calls that are not actually implemented in rrdcached.
One great way to ensure that the new test suite behaves as intended is to apply its changes on the current master branch and try to run the rrdcached-tcp test suite. All calls to TUNE fail unless the workaround is enabled here.
Hopefully this makes the PR more complete! This should also facilitate the tests if one decides to implement dump and restore as reported in #1141 and #1142",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/oetiker,6,https://github.com/oetiker/rrdtool-1.x/pull/1139#issuecomment-977863057,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!",great! will have a look!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/Frazew,7,https://github.com/oetiker/rrdtool-1.x/pull/1139#issuecomment-977897441,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!",fyi I've just pushed a quick change that should fix the failing windows builds (failing PCRE download from vcpkg),True,{'THUMBS_UP': ['https://github.com/c72578']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1139,2021-11-08T17:15:05Z,2021-12-20T12:26:55Z,2021-12-20T12:26:55Z,MERGED,True,420,67,53,https://github.com/Frazew,Draft: Add support for TUNE command in rrdcached,6,['enhancement'],https://github.com/oetiker/rrdtool-1.x/pull/1139,https://github.com/c72578,8,https://github.com/oetiker/rrdtool-1.x/pull/1139#issuecomment-997161087,"Summary
Context
The TUNE command is not supported by rrdcached (see issue librenms/librenms#4356). Running rrdtool tune with the -D argument is only used for FLUSH and still requires rrdcached and rrdtool to be using a shared filesystem.
Solution
This PR aims to fix this by implementing the TUNE command in rrdcached and modifying rrdtool to properly run it on the remote server instead of locally when the -D argument is supplied.
Testing
Context
This PR originates from the fact that LibreNMS supports using a remote rrdcached for storage. Because rrdtool currently lacks the TUNE function over a remote rrdcached, issues arise when one tries to tune the ports as described in the documentation (see also the issue mentioned above).
Sample infrastructure
This patch was introduced within a production infrastructure that can be basically summarized like this:
+----------------------------------------------+
|                     librenms infrastructure  |
|                                              |
|                                              |
|                                              |
| +----------+      +-----------+              |
| | frontend |      | rrdcached |              |
| | 10.1.0.3 +------+ 10.1.0.42 |              |
| +----------+      +---+-+-+---+              |
|                       | | |                  |
|                       | | |                  |
|                       | | |                  |
|                    +--+-+-+--+               |
|                    | pollers |               |
|                    +---------+               |
|                                              |
+----------------------------------------------+

Validating
We confirm that the patch is functional with the following steps, checked on sample_hostname with a port whose speed had recently been upgraded.
Checking the RRD file
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 1.2500000000e+1
Tuning using LibreNMS
$ cd /opt/librenms/ && cat config.d/rrdcached.php
<?php
$config['rrdcached'] = ""10.1.0.42:42217"";
$config['rrdtool_version'] = '1.7.2';
$ ./scripts/tune_port.php -h sample_hostname -p port-channel4094.3
Found hostname sample_hostname.......
Tuning port port-channel4094.3.......
$ exit
Checking the RRD file again
$ rrdtool info --daemon 10.1.0.42:42217 sample_hostname/port-id996775.rrd | head -30
[...]
ds[INOCTETS].max = 2.5000000000e+10
Notes

This patch is being tested within a production infrastructure and the PR description is updated as we get more insights
I am by no means a professional C developer, reviewers might want to take this into account!","fyi I've just pushed a quick change that should fix the failing windows builds (failing PCRE download from vcpkg)

In the meantime, this has been fixed in master (#1148) and merged into this PR.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1147,2021-12-11T00:50:32Z,2021-12-13T10:54:21Z,2021-12-13T11:29:45Z,MERGED,True,1,1,1,https://github.com/diederikdehaas,Update Debian link to package tracker,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1147,https://github.com/diederikdehaas,1,https://github.com/oetiker/rrdtool-1.x/pull/1147,"From there you can see all the Debian package news, go to the packaging
source and Debian's copy of the upstream source.","From there you can see all the Debian package news, go to the packaging
source and Debian's copy of the upstream source.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1147,2021-12-11T00:50:32Z,2021-12-13T10:54:21Z,2021-12-13T11:29:45Z,MERGED,True,1,1,1,https://github.com/diederikdehaas,Update Debian link to package tracker,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1147,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1147#issuecomment-991470853,"From there you can see all the Debian package news, go to the packaging
source and Debian's copy of the upstream source.","Remark: I will prepare a PR for updating the used vcpkg version, which is required for Windows CI (failing PCRE download) ...
See also:
#1139 (comment)
microsoft/vcpkg#21225",True,"{'THUMBS_UP': ['https://github.com/diederikdehaas', 'https://github.com/oetiker']}"
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1148,2021-12-12T15:01:56Z,2021-12-18T06:09:30Z,2021-12-18T06:09:30Z,MERGED,True,6,6,2,https://github.com/c72578,Update vcpkg in Windows GitHub Actions,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1148,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1148,"Update vcpkg to current commit 50fd3d9
Fix pcre download error.
Former ftp.pcre.org FTP site is no longer available","Update vcpkg to current commit 50fd3d9
Fix pcre download error.
Former ftp.pcre.org FTP site is no longer available",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1148,2021-12-12T15:01:56Z,2021-12-18T06:09:30Z,2021-12-18T06:09:30Z,MERGED,True,6,6,2,https://github.com/c72578,Update vcpkg in Windows GitHub Actions,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1148,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1148#issuecomment-992221059,"Update vcpkg to current commit 50fd3d9
Fix pcre download error.
Former ftp.pcre.org FTP site is no longer available","Concerning Travis CI - Pull Request Expected — Waiting for status to be reported, see:
https://app.travis-ci.com/github/oetiker/rrdtool-1.x/requests
not enough credits",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1152,2022-01-03T13:53:56Z,2022-01-03T15:10:10Z,2022-01-03T17:42:58Z,MERGED,True,1,1,1,https://github.com/vinc17fr,Fix typo,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1152,https://github.com/vinc17fr,1,https://github.com/oetiker/rrdtool-1.x/pull/1152,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1152,2022-01-03T13:53:56Z,2022-01-03T15:10:10Z,2022-01-03T17:42:58Z,MERGED,True,1,1,1,https://github.com/vinc17fr,Fix typo,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1152,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1152#issuecomment-1004156925,,thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1153,2022-01-20T15:21:22Z,2022-01-21T09:26:15Z,2022-01-21T09:32:16Z,MERGED,True,4,2,1,https://github.com/usaleem-ix,Fix for a race condition in journal_write,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1153,https://github.com/usaleem-ix,1,https://github.com/oetiker/rrdtool-1.x/pull/1153,"There is a race condition in journal_write() where journal_lock is
being acquired after checking whether journal_fh is NULL or not.
journal_fh is a static file handle that can be set to NULL by any
other thread, while current thread is blocked by
pthread_mutex_lock(). This commit fixes this race condition.
Signed-off-by: Umer Saleem usaleem@ixsystems.com","There is a race condition in journal_write() where journal_lock is
being acquired after checking whether journal_fh is NULL or not.
journal_fh is a static file handle that can be set to NULL by any
other thread, while current thread is blocked by
pthread_mutex_lock(). This commit fixes this race condition.
Signed-off-by: Umer Saleem usaleem@ixsystems.com",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1153,2022-01-20T15:21:22Z,2022-01-21T09:26:15Z,2022-01-21T09:32:16Z,MERGED,True,4,2,1,https://github.com/usaleem-ix,Fix for a race condition in journal_write,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1153,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1153#issuecomment-1018266612,"There is a race condition in journal_write() where journal_lock is
being acquired after checking whether journal_fh is NULL or not.
journal_fh is a static file handle that can be set to NULL by any
other thread, while current thread is blocked by
pthread_mutex_lock(). This commit fixes this race condition.
Signed-off-by: Umer Saleem usaleem@ixsystems.com",thank you for the fix!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1153,2022-01-20T15:21:22Z,2022-01-21T09:26:15Z,2022-01-21T09:32:16Z,MERGED,True,4,2,1,https://github.com/usaleem-ix,Fix for a race condition in journal_write,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1153,https://github.com/usaleem-ix,3,https://github.com/oetiker/rrdtool-1.x/pull/1153#issuecomment-1018319359,"There is a race condition in journal_write() where journal_lock is
being acquired after checking whether journal_fh is NULL or not.
journal_fh is a static file handle that can be set to NULL by any
other thread, while current thread is blocked by
pthread_mutex_lock(). This commit fixes this race condition.
Signed-off-by: Umer Saleem usaleem@ixsystems.com",You are welcome. Do I need to look into CodeQL / Analyze (cpp) (pull_request) ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1153,2022-01-20T15:21:22Z,2022-01-21T09:26:15Z,2022-01-21T09:32:16Z,MERGED,True,4,2,1,https://github.com/usaleem-ix,Fix for a race condition in journal_write,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1153,https://github.com/oetiker,4,https://github.com/oetiker/rrdtool-1.x/pull/1153#issuecomment-1018330521,"There is a race condition in journal_write() where journal_lock is
being acquired after checking whether journal_fh is NULL or not.
journal_fh is a static file handle that can be set to NULL by any
other thread, while current thread is blocked by
pthread_mutex_lock(). This commit fixes this race condition.
Signed-off-by: Umer Saleem usaleem@ixsystems.com","You are welcome. Do I need to look into CodeQL / Analyze (cpp) (pull_request) ?

No, you don't have to. But if you like to, by all means do! Once we get CodeQL happy for the whole project, I would make it a requirement to be happy for each PR.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1153,2022-01-20T15:21:22Z,2022-01-21T09:26:15Z,2022-01-21T09:32:16Z,MERGED,True,4,2,1,https://github.com/usaleem-ix,Fix for a race condition in journal_write,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1153,https://github.com/usaleem-ix,5,https://github.com/oetiker/rrdtool-1.x/pull/1153#issuecomment-1018335568,"There is a race condition in journal_write() where journal_lock is
being acquired after checking whether journal_fh is NULL or not.
journal_fh is a static file handle that can be set to NULL by any
other thread, while current thread is blocked by
pthread_mutex_lock(). This commit fixes this race condition.
Signed-off-by: Umer Saleem usaleem@ixsystems.com","Sure, thank you.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1154,2022-01-26T08:30:36Z,2022-01-26T13:16:33Z,2022-01-26T13:16:33Z,MERGED,True,1,1,1,https://github.com/mwhudson,clear LC_ALL when setting LC_TIME in rpn2 test,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1154,https://github.com/mwhudson,1,https://github.com/oetiker/rrdtool-1.x/pull/1154,"This test was failing when LC_ALL was set to C.UTF-8 and using the C.UTF-8 locale which is part of glibc 2.35, which differs in a very minor way to that that has been used by Debian/Ubuntu for years. The tests sets LC_TIME to C, presumably to try to isolate itself from such things, but that does not have any effect if LC_ALL is set in the build environment.","This test was failing when LC_ALL was set to C.UTF-8 and using the C.UTF-8 locale which is part of glibc 2.35, which differs in a very minor way to that that has been used by Debian/Ubuntu for years. The tests sets LC_TIME to C, presumably to try to isolate itself from such things, but that does not have any effect if LC_ALL is set in the build environment.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1155,2022-03-13T14:30:46Z,2022-03-14T13:39:16Z,2022-03-14T13:39:24Z,MERGED,True,248,2,8,https://github.com/oetiker,preparing for 1.8,22,[],https://github.com/oetiker/rrdtool-1.x/pull/1155,https://github.com/oetiker,1,https://github.com/oetiker/rrdtool-1.x/pull/1155,,,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1155,2022-03-13T14:30:46Z,2022-03-14T13:39:16Z,2022-03-14T13:39:24Z,MERGED,True,248,2,8,https://github.com/oetiker,preparing for 1.8,22,[],https://github.com/oetiker/rrdtool-1.x/pull/1155,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1155#issuecomment-1066135219,,@c72578 it seems the Windows MSVC build is failing ... any ideas ?,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1155,2022-03-13T14:30:46Z,2022-03-14T13:39:16Z,2022-03-14T13:39:24Z,MERGED,True,248,2,8,https://github.com/oetiker,preparing for 1.8,22,[],https://github.com/oetiker/rrdtool-1.x/pull/1155,https://github.com/c72578,3,https://github.com/oetiker/rrdtool-1.x/pull/1155#issuecomment-1066154555,,"@c72578 it seems the Windows MSVC build is failing ... any ideas ?

A fix has been prepared: #1156",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1155,2022-03-13T14:30:46Z,2022-03-14T13:39:16Z,2022-03-14T13:39:24Z,MERGED,True,248,2,8,https://github.com/oetiker,preparing for 1.8,22,[],https://github.com/oetiker/rrdtool-1.x/pull/1155,https://github.com/c72578,4,https://github.com/oetiker/rrdtool-1.x/pull/1155#issuecomment-1066627669,,"Concerning the failing Linux Build, e.g. [1]:
running egg_info
error: [Errno 13] Permission denied
In this commit, sudo chown -R travis rrdtool.egg-info has been added to .travis.yml
25491f0
[1] https://github.com/oetiker/rrdtool-1.x/runs/5533122181",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1156,2022-03-13T18:25:18Z,2022-03-14T06:35:34Z,2022-03-14T06:35:34Z,MERGED,True,8,8,3,https://github.com/c72578,Update vcpkg in Windows GitHub Actions,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1156,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1156,"Update vcpkg to current release 2022.03.10, commit af22873
win32/collect_rrdtool_vcpkg_files.bat:
lzma.dll is called liblzma.dll now","Update vcpkg to current release 2022.03.10, commit af22873
win32/collect_rrdtool_vcpkg_files.bat:
lzma.dll is called liblzma.dll now",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1160,2022-03-14T19:13:06Z,2022-03-14T20:24:09Z,2022-03-14T20:24:10Z,MERGED,True,8,8,5,https://github.com/c72578,Update version to 1.8.0 for MSVC builds,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1160,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1160,"Includes version and copyright year updates to files in the win32
subdirectory after running the rrdtool-release script.","Includes version and copyright year updates to files in the win32
subdirectory after running the rrdtool-release script.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1160,2022-03-14T19:13:06Z,2022-03-14T20:24:09Z,2022-03-14T20:24:10Z,MERGED,True,8,8,5,https://github.com/c72578,Update version to 1.8.0 for MSVC builds,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1160,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1160#issuecomment-1067252424,"Includes version and copyright year updates to files in the win32
subdirectory after running the rrdtool-release script.","hmmm wondering ... could we make it so that it configures this at build time, based on the VERSION file ?",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1161,2022-03-15T17:23:15Z,2022-03-16T08:20:29Z,2022-03-16T08:20:38Z,MERGED,True,1,1,1,https://github.com/c72578,rrdtool-release: Create NUMVERS from VERSION file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1161,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1161,"In the script rrdtool-release, NUMVERS has been read from the
configure file so far, which may not be up-to-date.
Generate NUMVERS from the VERSION file instead. This ensures
that only one source is used for the version - the VERSION file.
Use the same perl command for creating NUMVERS, as in configure.ac","In the script rrdtool-release, NUMVERS has been read from the
configure file so far, which may not be up-to-date.
Generate NUMVERS from the VERSION file instead. This ensures
that only one source is used for the version - the VERSION file.
Use the same perl command for creating NUMVERS, as in configure.ac",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1161,2022-03-15T17:23:15Z,2022-03-16T08:20:29Z,2022-03-16T08:20:38Z,MERGED,True,1,1,1,https://github.com/c72578,rrdtool-release: Create NUMVERS from VERSION file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1161,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1161#issuecomment-1068251554,"In the script rrdtool-release, NUMVERS has been read from the
configure file so far, which may not be up-to-date.
Generate NUMVERS from the VERSION file instead. This ensures
that only one source is used for the version - the VERSION file.
Use the same perl command for creating NUMVERS, as in configure.ac","This is, how NUMVERS is generated in configure.ac:

  
    
      rrdtool-1.x/configure.ac
    
    
         Line 653
      in
      c1e083e
    
  
  
    

        
          
           NUMVERS=m4_esyscmd([perl -ne 'my @x=split /\./;printf ""%d.%d%03d"", @x' VERSION])",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1161,2022-03-15T17:23:15Z,2022-03-16T08:20:29Z,2022-03-16T08:20:38Z,MERGED,True,1,1,1,https://github.com/c72578,rrdtool-release: Create NUMVERS from VERSION file,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1161,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1161#issuecomment-1068854555,"In the script rrdtool-release, NUMVERS has been read from the
configure file so far, which may not be up-to-date.
Generate NUMVERS from the VERSION file instead. This ensures
that only one source is used for the version - the VERSION file.
Use the same perl command for creating NUMVERS, as in configure.ac",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1162,2022-03-20T21:41:54Z,2022-03-21T08:35:44Z,2022-03-21T08:36:35Z,MERGED,True,4,2,1,https://github.com/ryandesign,acinclude.m4: Include <stdlib.h> when using exit,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1162,https://github.com/ryandesign,1,https://github.com/oetiker/rrdtool-1.x/pull/1162,"Fixes:
conftest.c:124:33: error: implicitly declaring library function 'exit' with type 'void (int) __attribute__((noreturn))'","Fixes:
conftest.c:124:33: error: implicitly declaring library function 'exit' with type 'void (int) __attribute__((noreturn))'",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1162,2022-03-20T21:41:54Z,2022-03-21T08:35:44Z,2022-03-21T08:36:35Z,MERGED,True,4,2,1,https://github.com/ryandesign,acinclude.m4: Include <stdlib.h> when using exit,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1162,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1162#issuecomment-1073633576,"Fixes:
conftest.c:124:33: error: implicitly declaring library function 'exit' with type 'void (int) __attribute__((noreturn))'",thanks,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1164,2022-03-22T04:43:06Z,2022-03-23T08:30:44Z,2022-04-13T12:43:04Z,MERGED,True,53,53,47,https://github.com/c72578,Update Version and Copyright year in git files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1164,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1164,"This commit is based on running the first part of the rrdtool-release
script (before ./bootstrap).

Part of #1163","This commit is based on running the first part of the rrdtool-release
script (before ./bootstrap).

Part of #1163",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1164,2022-03-22T04:43:06Z,2022-03-23T08:30:44Z,2022-04-13T12:43:04Z,MERGED,True,53,53,47,https://github.com/c72578,Update Version and Copyright year in git files,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1164,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1164#issuecomment-1074736401,"This commit is based on running the first part of the rrdtool-release
script (before ./bootstrap).

Part of #1163","Something for a separate PR:

 configure, Makefile.in files (#1170)
These could be removed, as they are generated during bootstrap from configure.ac and Makefile.am
 Update of the download link of the tarball (#1172)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1165,2022-03-23T17:25:58Z,2022-03-24T16:00:16Z,2022-03-27T15:32:39Z,MERGED,True,9,1,2,https://github.com/c72578,Fix BUILD_DATE in rrdtool help output,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1165,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1165,"This is a followup to #1102
Fixes segfault when running ""rrdtool --help""
Change DATE_FMT to the same date format as the __DATE__ macro [1]:
mmm dd yyyy

[1] https://gcc.gnu.org/onlinedocs/cpp/Standard-Predefined-Macros.html","This is a followup to #1102
Fixes segfault when running ""rrdtool --help""
Change DATE_FMT to the same date format as the __DATE__ macro [1]:
mmm dd yyyy

[1] https://gcc.gnu.org/onlinedocs/cpp/Standard-Predefined-Macros.html",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1165,2022-03-23T17:25:58Z,2022-03-24T16:00:16Z,2022-03-27T15:32:39Z,MERGED,True,9,1,2,https://github.com/c72578,Fix BUILD_DATE in rrdtool help output,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1165,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1165#issuecomment-1079909119,"This is a followup to #1102
Fixes segfault when running ""rrdtool --help""
Change DATE_FMT to the same date format as the __DATE__ macro [1]:
mmm dd yyyy

[1] https://gcc.gnu.org/onlinedocs/cpp/Standard-Predefined-Macros.html","Additional information:
This is what happens without the fix, when SOURCE_DATE_EPOCH is set.

Windows, mingw32 or mingw64 build:

$ ./rrdtool.exe
Segmentation fault

Linux (build time is null):

$ rdtool
RRDtool 1.8.0  Copyright by Tobias Oetiker <tobi@oetiker.ch>
               Compiled 22 Mar 2022 00:00:00 (null)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1166,2022-03-24T20:43:12Z,2022-03-24T22:02:17Z,2022-03-24T22:02:17Z,MERGED,True,4,3,1,https://github.com/c72578,ci-workflow.yml: Add autotools to msys2,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1166,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1166,"Add mingw-w64-x86_64-autotools to ""install:""
Fixes:
./bootstrap: line 8: libtoolize: command not found
./bootstrap: line 11: autoreconf: command not found
Minor modifications to ci-workflow.yml:

Fix yamllint errors in line 8 and 10:
too many spaces inside brackets
Add ""workflow_dispatch:"" to allow manual run of the Windows CI
workflow","Add mingw-w64-x86_64-autotools to ""install:""
Fixes:
./bootstrap: line 8: libtoolize: command not found
./bootstrap: line 11: autoreconf: command not found
Minor modifications to ci-workflow.yml:

Fix yamllint errors in line 8 and 10:
too many spaces inside brackets
Add ""workflow_dispatch:"" to allow manual run of the Windows CI
workflow",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1167,2022-03-25T18:26:09Z,2022-03-28T09:00:45Z,2022-03-28T09:00:45Z,MERGED,True,24,4,4,https://github.com/c72578,Fix tests under MSYS2 (Windows),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1167,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1167,"This is a follow-up to commit 7cd748e considering running the tests
in Windows under MSYS2. A similar approach has already been used in
tests\graph2 and tests\xport1 (see also: 847d679)

Updates the following tests:
graph1, rpn1, rpn2, vformatter1
Avoid Windows drive letter in the path of DEF:vname=rrdfile
under MSYS or MSYS2. Use only the filename of the rrd and not
the full path if environmental variable MSYSTEM is set.","This is a follow-up to commit 7cd748e considering running the tests
in Windows under MSYS2. A similar approach has already been used in
tests\graph2 and tests\xport1 (see also: 847d679)

Updates the following tests:
graph1, rpn1, rpn2, vformatter1
Avoid Windows drive letter in the path of DEF:vname=rrdfile
under MSYS or MSYS2. Use only the filename of the rrd and not
the full path if environmental variable MSYSTEM is set.",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1168,2022-04-01T17:30:40Z,2022-04-04T06:57:18Z,2022-04-04T06:57:19Z,MERGED,True,2,1,1,https://github.com/c72578,Fix unsigned integer overflow in rrdtool first,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1168,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1168,"This fixes a signed/unsigned conversion bug in the calculation of
""then"". Background info:
pdp_cnt and pdp_step are both unsigned long, whereas timer is signed.
When multiplying signed and unsigned integers (same size), a signed is
implicitly typecast to unsigned.

A similar fix has already been applied to rrd_dump.c
in commit e193975
Resolves #1140","This fixes a signed/unsigned conversion bug in the calculation of
""then"". Background info:
pdp_cnt and pdp_step are both unsigned long, whereas timer is signed.
When multiplying signed and unsigned integers (same size), a signed is
implicitly typecast to unsigned.

A similar fix has already been applied to rrd_dump.c
in commit e193975
Resolves #1140",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1168,2022-04-01T17:30:40Z,2022-04-04T06:57:18Z,2022-04-04T06:57:19Z,MERGED,True,2,1,1,https://github.com/c72578,Fix unsigned integer overflow in rrdtool first,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1168,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1168#issuecomment-1086259258,"This fixes a signed/unsigned conversion bug in the calculation of
""then"". Background info:
pdp_cnt and pdp_step are both unsigned long, whereas timer is signed.
When multiplying signed and unsigned integers (same size), a signed is
implicitly typecast to unsigned.

A similar fix has already been applied to rrd_dump.c
in commit e193975
Resolves #1140","Here are two builds from release-windows Github Action for testing:
rrdtool-1.8.0-x86_vcpkg_2022-04-01_git_b74a0d6.zip
SHA256: 4a255c372de39258e901ffdb6e93daffdb502753a1e2ec23722937370380da75
rrdtool-1.8.0-x64_vcpkg_2022-04-01_git_b74a0d6.zip
SHA256: b68013bb4ba9dc098d618a7d8c540756aac5a7297feb550c0d9632a5ff25361a",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1168,2022-04-01T17:30:40Z,2022-04-04T06:57:18Z,2022-04-04T06:57:19Z,MERGED,True,2,1,1,https://github.com/c72578,Fix unsigned integer overflow in rrdtool first,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1168,https://github.com/PBudmark,3,https://github.com/oetiker/rrdtool-1.x/pull/1168#issuecomment-1086319768,"This fixes a signed/unsigned conversion bug in the calculation of
""then"". Background info:
pdp_cnt and pdp_step are both unsigned long, whereas timer is signed.
When multiplying signed and unsigned integers (same size), a signed is
implicitly typecast to unsigned.

A similar fix has already been applied to rrd_dump.c
in commit e193975
Resolves #1140","I have run my tests on both provided builds and they work as intended regarding the issue, nothing else verified.
Thanks / Per.Ake",True,{'THUMBS_UP': ['https://github.com/c72578']}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1169,2022-04-04T16:31:28Z,2022-04-05T07:01:05Z,2022-04-05T07:01:05Z,MERGED,True,4,0,1,https://github.com/c72578,Add test for rrd_first(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1169,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1169,"Make use of existing test ""create-from-template-1"", which already
creates, updates and dumps rrds and add a test for rrdtool first.

This is a test for issue #1140","Make use of existing test ""create-from-template-1"", which already
creates, updates and dumps rrds and add a test for rrdtool first.

This is a test for issue #1140",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1169,2022-04-04T16:31:28Z,2022-04-05T07:01:05Z,2022-04-05T07:01:05Z,MERGED,True,4,0,1,https://github.com/c72578,Add test for rrd_first(),1,[],https://github.com/oetiker/rrdtool-1.x/pull/1169,https://github.com/c72578,2,https://github.com/oetiker/rrdtool-1.x/pull/1169#issuecomment-1087811131,"Make use of existing test ""create-from-template-1"", which already
creates, updates and dumps rrds and add a test for rrdtool first.

This is a test for issue #1140","create-from-template-1.log

Output of passing test:

OK: createax1
OK: rrdtool first == 1299994020
OK: createay1
...

Output of failing test (before #1168):

OK: createax1
FAILED: (rc=1) rrdtool first == 5594961316
FAIL create-from-template-1 (exit status: 1)",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1170,2022-04-05T20:43:28Z,2022-04-07T07:39:04Z,2022-04-07T07:39:05Z,MERGED,True,18,55042,22,https://github.com/c72578,Remove autogenerated files,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1170,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1170,"The removed files are generated using bootstrap
(libtoolize, autoreconf) and they are available in release tarballs.

Avoids outdated configure file in git
Resolves #1163
The following commands have been used for removal:

  git rm configure
  git rm -r conftools/
  git rm Makefile.in
  git rm *Makefile.in
  git rm src/rrd_config.h.in","The removed files are generated using bootstrap
(libtoolize, autoreconf) and they are available in release tarballs.

Avoids outdated configure file in git
Resolves #1163
The following commands have been used for removal:

  git rm configure
  git rm -r conftools/
  git rm Makefile.in
  git rm *Makefile.in
  git rm src/rrd_config.h.in",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1170,2022-04-05T20:43:28Z,2022-04-07T07:39:04Z,2022-04-07T07:39:05Z,MERGED,True,18,55042,22,https://github.com/c72578,Remove autogenerated files,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1170,https://github.com/oetiker,2,https://github.com/oetiker/rrdtool-1.x/pull/1170#issuecomment-1089879227,"The removed files are generated using bootstrap
(libtoolize, autoreconf) and they are available in release tarballs.

Avoids outdated configure file in git
Resolves #1163
The following commands have been used for removal:

  git rm configure
  git rm -r conftools/
  git rm Makefile.in
  git rm *Makefile.in
  git rm src/rrd_config.h.in",great!,True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1170,2022-04-05T20:43:28Z,2022-04-07T07:39:04Z,2022-04-07T07:39:05Z,MERGED,True,18,55042,22,https://github.com/c72578,Remove autogenerated files,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1170,https://github.com/oetiker,3,https://github.com/oetiker/rrdtool-1.x/pull/1170#issuecomment-1089879631,"The removed files are generated using bootstrap
(libtoolize, autoreconf) and they are available in release tarballs.

Avoids outdated configure file in git
Resolves #1163
The following commands have been used for removal:

  git rm configure
  git rm -r conftools/
  git rm Makefile.in
  git rm *Makefile.in
  git rm src/rrd_config.h.in","on your PRs, please also update the CHANGES file with each one ... that makes it simpler to release new versions ...",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1170,2022-04-05T20:43:28Z,2022-04-07T07:39:04Z,2022-04-07T07:39:05Z,MERGED,True,18,55042,22,https://github.com/c72578,Remove autogenerated files,2,[],https://github.com/oetiker/rrdtool-1.x/pull/1170,https://github.com/c72578,4,https://github.com/oetiker/rrdtool-1.x/pull/1170#issuecomment-1090023997,"The removed files are generated using bootstrap
(libtoolize, autoreconf) and they are available in release tarballs.

Avoids outdated configure file in git
Resolves #1163
The following commands have been used for removal:

  git rm configure
  git rm -r conftools/
  git rm Makefile.in
  git rm *Makefile.in
  git rm src/rrd_config.h.in","OK, I will update CHANGES",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1172,2022-04-08T16:03:47Z,2022-04-09T08:42:54Z,2022-04-09T08:42:54Z,MERGED,True,5,3,3,https://github.com/c72578,Update tarball download link in doc,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1172,https://github.com/c72578,1,https://github.com/oetiker/rrdtool-1.x/pull/1172,"The download location of the release tarball has been moved to GitHub.

Update the download link in doc/rrdbuild.pod
rrdtool-release:
Add substitution of version in download subdirectory, e.g. v1.8.0 in:
rrdtool-1.x/releases/download/v1.8.0/rrdtool-1.8.0.tar.gz","The download location of the release tarball has been moved to GitHub.

Update the download link in doc/rrdbuild.pod
rrdtool-release:
Add substitution of version in download subdirectory, e.g. v1.8.0 in:
rrdtool-1.x/releases/download/v1.8.0/rrdtool-1.8.0.tar.gz",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1176,2022-04-28T12:12:40Z,2022-05-02T06:53:23Z,2022-05-02T06:53:24Z,MERGED,True,13,6,3,https://github.com/youpong,Suppress several warnings of implicit fall through,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1176,https://github.com/youpong,1,https://github.com/oetiker/rrdtool-1.x/pull/1176,"Suppress the warning message of the intentional fall through like bellow.
rrd_strtod.c:113:27: warning: this statement may fall through [-Wimplicit-fallthrough=]
  113 |        case '-': negative = 1; // Fall through to increment position
      |                  ~~~~~~~~~^~~
rrd_strtod.c:114:8: note: here
  114 |        case '+': p++;
      |        ^~~~","Suppress the warning message of the intentional fall through like bellow.
rrd_strtod.c:113:27: warning: this statement may fall through [-Wimplicit-fallthrough=]
  113 |        case '-': negative = 1; // Fall through to increment position
      |                  ~~~~~~~~~^~~
rrd_strtod.c:114:8: note: here
  114 |        case '+': p++;
      |        ^~~~",True,{}
oetiker/rrdtool-1.x,https://github.com/oetiker/rrdtool-1.x,1176,2022-04-28T12:12:40Z,2022-05-02T06:53:23Z,2022-05-02T06:53:24Z,MERGED,True,13,6,3,https://github.com/youpong,Suppress several warnings of implicit fall through,1,[],https://github.com/oetiker/rrdtool-1.x/pull/1176,https://github.com/youpong,2,https://github.com/oetiker/rrdtool-1.x/pull/1176#issuecomment-1114284667,"Suppress the warning message of the intentional fall through like bellow.
rrd_strtod.c:113:27: warning: this statement may fall through [-Wimplicit-fallthrough=]
  113 |        case '-': negative = 1; // Fall through to increment position
      |                  ~~~~~~~~~^~~
rrd_strtod.c:114:8: note: here
  114 |        case '+': p++;
      |        ^~~~",I confirmed the absence of the warnings in the logs.,True,{}
