endlessm/eos-updater,https://github.com/endlessm/eos-updater,29,2016-02-25T15:59:18Z,2016-03-04T17:27:37Z,2016-03-04T17:27:39Z,MERGED,True,27,2,2,https://github.com/jprvita,Shell/6407,1,[],https://github.com/endlessm/eos-updater/pull/29,https://github.com/jprvita,1,https://github.com/endlessm/eos-updater/pull/29,[endlessm/eos-shell#6407],[endlessm/eos-shell#6407],True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,30,2016-03-29T20:22:35Z,2016-03-30T18:30:57Z,2016-03-30T18:30:59Z,MERGED,True,11,7,1,https://github.com/jprvita,T6407,3,[],https://github.com/endlessm/eos-updater/pull/30,https://github.com/jprvita,1,https://github.com/endlessm/eos-updater/pull/30,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,30,2016-03-29T20:22:35Z,2016-03-30T18:30:57Z,2016-03-30T18:30:59Z,MERGED,True,11,7,1,https://github.com/jprvita,T6407,3,[],https://github.com/endlessm/eos-updater/pull/30,https://github.com/Kurt-von-Laven,2,https://github.com/endlessm/eos-updater/pull/30#issuecomment-203569143,,CR Pass,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,31,2016-03-30T21:44:57Z,2016-03-30T23:33:56Z,2016-03-30T23:33:57Z,MERGED,True,1,1,1,https://github.com/jprvita,Update systemd dependency,1,[],https://github.com/endlessm/eos-updater/pull/31,https://github.com/jprvita,1,https://github.com/endlessm/eos-updater/pull/31,"libsystemd-journal has been merged into libsystemd on the newer systemd
(229) we are shipping on eos 2.7.
https://phabricator.endlessm.com/T6363","libsystemd-journal has been merged into libsystemd on the newer systemd
(229) we are shipping on eos 2.7.
https://phabricator.endlessm.com/T6363",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,32,2016-03-30T21:45:55Z,2016-03-30T23:33:49Z,2016-03-30T23:33:51Z,MERGED,True,1,1,1,https://github.com/jprvita,Update systemd dependency,1,[],https://github.com/endlessm/eos-updater/pull/32,https://github.com/jprvita,1,https://github.com/endlessm/eos-updater/pull/32,"libsystemd-journal-dev has been merged into libsystemd-dev on the newer systemd
(229) we are shipping on eos 2.7.
https://phabricator.endlessm.com/T6363","libsystemd-journal-dev has been merged into libsystemd-dev on the newer systemd
(229) we are shipping on eos 2.7.
https://phabricator.endlessm.com/T6363",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,33,2016-03-30T23:15:00Z,2016-03-30T23:37:04Z,2016-03-30T23:37:06Z,CLOSED,False,1,1,1,https://github.com/dbnicholson,build: Require libsystemd instead of libsystemd-journal,1,[],https://github.com/endlessm/eos-updater/pull/33,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/33,"After the systemd upgrade to 229, libsystemd-journal is gone.
https://phabricator.endlessm.com/T11107","After the systemd upgrade to 229, libsystemd-journal is gone.
https://phabricator.endlessm.com/T11107",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,33,2016-03-30T23:15:00Z,2016-03-30T23:37:04Z,2016-03-30T23:37:06Z,CLOSED,False,1,1,1,https://github.com/dbnicholson,build: Require libsystemd instead of libsystemd-journal,1,[],https://github.com/endlessm/eos-updater/pull/33,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/33#issuecomment-203685371,"After the systemd upgrade to 229, libsystemd-journal is gone.
https://phabricator.endlessm.com/T11107",Same merge in #31. Closing this.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,34,2016-03-30T23:15:17Z,2016-03-30T23:36:43Z,2016-03-30T23:36:46Z,CLOSED,False,1,1,1,https://github.com/dbnicholson,Depend on libsystemd-dev instead of libsystemd-journal-dev,1,[],https://github.com/endlessm/eos-updater/pull/34,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/34,"After the systemd upgrade to 229, libsystemd-journal-dev is gone.
https://phabricator.endlessm.com/T11107","After the systemd upgrade to 229, libsystemd-journal-dev is gone.
https://phabricator.endlessm.com/T11107",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,34,2016-03-30T23:15:17Z,2016-03-30T23:36:43Z,2016-03-30T23:36:46Z,CLOSED,False,1,1,1,https://github.com/dbnicholson,Depend on libsystemd-dev instead of libsystemd-journal-dev,1,[],https://github.com/endlessm/eos-updater/pull/34,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/34#issuecomment-203685225,"After the systemd upgrade to 229, libsystemd-journal-dev is gone.
https://phabricator.endlessm.com/T11107",Same merge in #32. Closing this.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,35,2016-05-09T22:52:24Z,2016-05-10T17:03:00Z,2016-05-10T17:03:02Z,MERGED,True,73,26,6,https://github.com/dbnicholson,Cleanup old remote ref,8,[],https://github.com/endlessm/eos-updater/pull/35,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/35,"Keep track of the original update refspec so it can be deleted and not keep a reference to a no longer wanted tree.
https://phabricator.endlessm.com/T11010","Keep track of the original update refspec so it can be deleted and not keep a reference to a no longer wanted tree.
https://phabricator.endlessm.com/T11010",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,35,2016-05-09T22:52:24Z,2016-05-10T17:03:00Z,2016-05-10T17:03:02Z,MERGED,True,73,26,6,https://github.com/dbnicholson,Cleanup old remote ref,8,[],https://github.com/endlessm/eos-updater/pull/35,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/35#issuecomment-218194572,"Keep track of the original update refspec so it can be deleted and not keep a reference to a no longer wanted tree.
https://phabricator.endlessm.com/T11010",I fixed the comment and left a reply about the bus property.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,36,2016-05-12T11:09:10Z,2016-05-24T17:35:04Z,2016-05-24T17:35:04Z,MERGED,True,499,262,13,https://github.com/krnowak,Cleanups,11,[],https://github.com/endlessm/eos-updater/pull/36,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/36,"These are some cleanups and refactorings I did when working on avahi stuff. Probably best reviewed commit-by-commit.
@iaguis: You wanted to see this.","These are some cleanups and refactorings I did when working on avahi stuff. Probably best reviewed commit-by-commit.
@iaguis: You wanted to see this.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,36,2016-05-12T11:09:10Z,2016-05-24T17:35:04Z,2016-05-24T17:35:04Z,MERGED,True,499,262,13,https://github.com/krnowak,Cleanups,11,[],https://github.com/endlessm/eos-updater/pull/36,https://github.com/krnowak,2,https://github.com/endlessm/eos-updater/pull/36#issuecomment-219987662,"These are some cleanups and refactorings I did when working on avahi stuff. Probably best reviewed commit-by-commit.
@iaguis: You wanted to see this.","Updated, addressed some of the comments.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,36,2016-05-12T11:09:10Z,2016-05-24T17:35:04Z,2016-05-24T17:35:04Z,MERGED,True,499,262,13,https://github.com/krnowak,Cleanups,11,[],https://github.com/endlessm/eos-updater/pull/36,https://github.com/cosimoc,3,https://github.com/endlessm/eos-updater/pull/36#issuecomment-220112952,"These are some cleanups and refactorings I did when working on avahi stuff. Probably best reviewed commit-by-commit.
@iaguis: You wanted to see this.","@krnowak Done another round of review, thanks.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,36,2016-05-12T11:09:10Z,2016-05-24T17:35:04Z,2016-05-24T17:35:04Z,MERGED,True,499,262,13,https://github.com/krnowak,Cleanups,11,[],https://github.com/endlessm/eos-updater/pull/36,https://github.com/krnowak,4,https://github.com/endlessm/eos-updater/pull/36#issuecomment-220244883,"These are some cleanups and refactorings I did when working on avahi stuff. Probably best reviewed commit-by-commit.
@iaguis: You wanted to see this.","Looks like github is acting up. Whenever I update my avahi branch which is based on this cleanups branch, it marks most of the comments as obsolete. Meh.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,36,2016-05-12T11:09:10Z,2016-05-24T17:35:04Z,2016-05-24T17:35:04Z,MERGED,True,499,262,13,https://github.com/krnowak,Cleanups,11,[],https://github.com/endlessm/eos-updater/pull/36,https://github.com/krnowak,5,https://github.com/endlessm/eos-updater/pull/36#issuecomment-220257110,"These are some cleanups and refactorings I did when working on avahi stuff. Probably best reviewed commit-by-commit.
@iaguis: You wanted to see this.",Updated. I removed the commit that moved the original_refspec variable to EosUpdaterData and added a small commit quieting down some make rules (so they print GEN foo when running make V=0).,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/37,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works","Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/cosimoc,2,https://github.com/endlessm/eos-updater/pull/37#issuecomment-226660902,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",@smspillaz Here is the PR I mentioned. Would be awesome if you could take a look!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/37#issuecomment-226661309,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works","@cosimoc Will do, thanks!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/37#issuecomment-226893667,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works","I probably won't get through all of this in one day, but I should have a first pass done by tuesday-ish",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/krnowak,5,https://github.com/endlessm/eos-updater/pull/37#issuecomment-227117269,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",Thanks for the review! Want me to just force push the fixes to the appriopriate commits or would you prefer separate commits so you can see the fixes?,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/krnowak,6,https://github.com/endlessm/eos-updater/pull/37#issuecomment-227166887,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works","I pushed a separate commit for now with the changes. Later, before we merge this PR, I'll redistribute the fixes to the appriopriate commits.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/krnowak,7,https://github.com/endlessm/eos-updater/pull/37#issuecomment-227222301,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",I will have to also fix the ostree version dependency - ostree 2016.6 with my changes was just released.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/smspillaz,8,https://github.com/endlessm/eos-updater/pull/37#issuecomment-227241045,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",Thanks for looking at those changes! I'm only halfway through the review so I'll do the other set of changes and then look at the fixups. Most of my questions have been answered.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/krnowak,9,https://github.com/endlessm/eos-updater/pull/37#issuecomment-229389031,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",Added another commit with fixes and rebased on top of the current master branch.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/smspillaz,10,https://github.com/endlessm/eos-updater/pull/37#issuecomment-229530882,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",Everything looks more or less fine to me from this point. The main concern was about the port-file thing in the tests - I'm not sure I understand why that's not just passed as a param.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/krnowak,11,https://github.com/endlessm/eos-updater/pull/37#issuecomment-229605347,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",Added a commit with more fixes.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/smspillaz,12,https://github.com/endlessm/eos-updater/pull/37#issuecomment-229708369,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",634846a LGTM,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/krnowak,13,https://github.com/endlessm/eos-updater/pull/37#issuecomment-229779092,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",Added another commit with a few fixes.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,37,2016-05-31T12:45:14Z,2017-02-15T10:25:56Z,2017-02-15T10:38:32Z,CLOSED,False,10802,841,59,https://github.com/krnowak,"LAN client and server, tests",45,[],https://github.com/endlessm/eos-updater/pull/37,https://github.com/pwithnall,14,https://github.com/endlessm/eos-updater/pull/37#issuecomment-279975814,"Sorry about the code-droppy nature of this PR. The commits are basically per file as the work grew a bit. The changes done are:

add eos-updater daemon config

for now it only has the ""Download"" group with an ""Order"" field being a comma-separated list of download sources in order of preference (currently the only possible values are ""lan"" and ""main"").


add polling for updates on LAN

it starts EosAvahiDiscoverer to get the list of servers
there are two versions of txt records possible:

version 1 is mostly for servers that do not have signed branch file, so in txt records it contains:

sha512sum of the branch file
download time of the branch file from the main server
ostree path


version 2 is for the servers that do have signed branch file, so in txt records it contains:

ostree path (should be exposed in a branch file too, so we can verify it, not yet implemented)
branch file timestamp (verified against a timestamp in the branch file)


version 2 does not expose hashed sum in txt records,

signature serves the role of the hash checksum
branch file has the new ""UnixUTCTimestamp"" field in the ""main"" group
branch file would have the new ""OstreePath"" field in the ""main"" group, not implemented




once the services are discovered, it downloads the newest branch file

signed branch files are preferred over the unsigned ones,
for version 1 of txt records we skip downloading the branch file if the timestamp was older or the sha512sum was the same
if there are no signed branch files, we search the newest unsigned one


it processes the branch file to learn about OstreeRef for the device

if OnHold field is set to true, we stop the update


it downloads ref->commit information from every service to learn what commit they have for upgrade

this might be a lot of churn, maybe ref->commit information should be exposed in avahi txt records too?


it filters the services so it has a list of services that offer the newest commit
it prepares the update info and the metrics info


update polling from the main server

now it can download the signature of the branch file
it queries the main server about the latest commit from the ref->commit mapping
it prepares the update info and the metrics info


update fetching the update

the update info prepared in poll stage contains an optional list of url overrides
the url actually used for fetching the updates is selected randomly


update applying the update

store the extra files in ostree repo's extensions directory

this is basically /ostree/repo/extensions/eos
there we store the branch file with the signature and ref->commit mappings with signatures


generate avahi service file


add LAN update server

it serves the files in ostree repository

repo config is faked to make ostree pull to believe it is pulling from archive-z2 repository
refs/heads/ are handled specially by serving /refs/remotes//
requests for /objects/.filez are handled by zipping the objects with requested checksum on the fly
rest of the files are served as is


the server can listen on local port or on socket given to it by systemd
the server shuts itself down after some period of inactivity


add some tests

one is checking if updating from the main server works
one is checking if updating from the lan server works",Merged with some additional changes as part of PR #47 (T14894). Thanks!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,38,2016-06-23T09:01:03Z,2016-06-23T09:45:16Z,2016-06-23T09:45:19Z,MERGED,True,4,4,2,https://github.com/krnowak,Fix some dumb mistakes,2,[],https://github.com/endlessm/eos-updater/pull/38,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/38,https://phabricator.endlessm.com/T12107,https://phabricator.endlessm.com/T12107,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,39,2016-06-28T15:50:39Z,,2016-06-28T15:51:09Z,OPEN,False,26,0,1,https://github.com/iaguis,apply: initial robustness implementation,1,[],https://github.com/endlessm/eos-updater/pull/39,https://github.com/iaguis,1,https://github.com/endlessm/eos-updater/pull/39,"This commit writes the initial flags file when applying a deployment.
It sets the successful flag to 0 and tries_left to 1 so dracut tries to
boot it once, and goes back to the previous one if it fails.
XRef endlessm/eos-boot-helper#56","This commit writes the initial flags file when applying a deployment.
It sets the successful flag to 0 and tries_left to 1 so dracut tries to
boot it once, and goes back to the previous one if it fails.
XRef endlessm/eos-boot-helper#56",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,40,2016-06-30T13:17:37Z,2017-02-15T10:21:12Z,2017-02-15T10:37:48Z,CLOSED,False,14015,916,76,https://github.com/krnowak,pendrive updates,80,[],https://github.com/endlessm/eos-updater/pull/40,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/40,"This might be a bit hard to review before the avahi work is merged. If it is merged, then I'll rebase it on top of it, so the diff will be smaller.
Sorry for lousy commit messages, I'll update it ASAP.","This might be a bit hard to review before the avahi work is merged. If it is merged, then I'll rebase it on top of it, so the diff will be smaller.
Sorry for lousy commit messages, I'll update it ASAP.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,40,2016-06-30T13:17:37Z,2017-02-15T10:21:12Z,2017-02-15T10:37:48Z,CLOSED,False,14015,916,76,https://github.com/krnowak,pendrive updates,80,[],https://github.com/endlessm/eos-updater/pull/40,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/40#issuecomment-279972159,"This might be a bit hard to review before the avahi work is merged. If it is merged, then I'll rebase it on top of it, so the diff will be smaller.
Sorry for lousy commit messages, I'll update it ASAP.",Merged with some additional changes as part of PR #47 (T14894). Thanks!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,41,2016-07-12T18:47:36Z,2016-07-12T21:11:40Z,2016-07-12T21:11:43Z,MERGED,True,8,8,1,https://github.com/cosimoc,eos-updater-ctl: convert to python3,1,[],https://github.com/endlessm/eos-updater/pull/41,https://github.com/cosimoc,1,https://github.com/endlessm/eos-updater/pull/41,https://phabricator.endlessm.com/T12364,https://phabricator.endlessm.com/T12364,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,42,2016-07-12T18:47:45Z,2016-07-12T21:12:13Z,2016-07-12T21:12:15Z,MERGED,True,5,2,1,https://github.com/cosimoc,Adjust dependencies,1,[],https://github.com/endlessm/eos-updater/pull/42,https://github.com/cosimoc,1,https://github.com/endlessm/eos-updater/pull/42,https://phabricator.endlessm.com/T12364-debian,https://phabricator.endlessm.com/T12364-debian,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,43,2016-10-28T15:59:36Z,2016-10-31T20:25:57Z,2016-10-31T20:25:59Z,MERGED,True,113,5,6,https://github.com/wjt,Disable all update steps on live sessions,1,[],https://github.com/endlessm/eos-updater/pull/43,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/43,"eos-autoupdater.timer is already stopped and masked from the initramfs,
but this prevents any updates being fetched or installed.
The rationale here is that endless.live_boot sessions have a read-only
filesystem, with overlay+tmpfs mounted over directories which need to be
read-write. Running an ostree update on such a system is at best
wasteful and frustrating (it will be discarded as soon as you reboot, so
can never be used), and at worst disastrous (it fills /run, because
hardlinking files on overlay requires copying the file from the lower to
the upper filesystem, and your live system breaks until you reboot).
https://phabricator.endlessm.com/T13951","eos-autoupdater.timer is already stopped and masked from the initramfs,
but this prevents any updates being fetched or installed.
The rationale here is that endless.live_boot sessions have a read-only
filesystem, with overlay+tmpfs mounted over directories which need to be
read-write. Running an ostree update on such a system is at best
wasteful and frustrating (it will be discarded as soon as you reboot, so
can never be used), and at worst disastrous (it fills /run, because
hardlinking files on overlay requires copying the file from the lower to
the upper filesystem, and your live system breaks until you reboot).
https://phabricator.endlessm.com/T13951",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,44,2016-11-02T15:01:33Z,2016-11-02T15:27:56Z,2016-11-02T15:27:58Z,MERGED,True,70,57,10,https://github.com/wjt,Add an ErrorName D-Bus property,2,[],https://github.com/endlessm/eos-updater/pull/44,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/44,"As described in the XML comments, ErrorCode is actually totally useless for
determining what error has occurred. It is the code field of a
GError, but without the domain field you have no way of knowing if
1 means EOS_UPDATER_ERROR_LIVE_BOOT or G_IO_ERROR_NOT_FOUND (which
happens in practice on converted systems).
Exposing a fully-qualified error name in a property is consistent with the
way errors are reported from D-Bus methods. There's also prior art: we used
this approach in Telepathy after learning the hard way that integers are no
good for extensibility.
EOS_UPDATER_ERROR_LIVE_BOOT is reported as follows:
ErrorCode: uint32 1

ErrorMessage: 'Updater disabled on live systems'
ErrorName: 'com.endlessm.Updater.Error.LiveBoot'
On converted systems, we report this rather ugly representation of
G_IO_ERROR_NOT_FOUND:
ErrorCode: uint32 1

ErrorMessage: 'Not an ostree system'
ErrorName:
'org.gtk.GDBus.UnmappedGError.Quark._g_2dio_2derror_2dquark.Code1'
We could address this by using a more descriptive GError in these cases,
from our own EOS_UPDATER_ERROR domain.
https://phabricator.endlessm.com/T13951","As described in the XML comments, ErrorCode is actually totally useless for
determining what error has occurred. It is the code field of a
GError, but without the domain field you have no way of knowing if
1 means EOS_UPDATER_ERROR_LIVE_BOOT or G_IO_ERROR_NOT_FOUND (which
happens in practice on converted systems).
Exposing a fully-qualified error name in a property is consistent with the
way errors are reported from D-Bus methods. There's also prior art: we used
this approach in Telepathy after learning the hard way that integers are no
good for extensibility.
EOS_UPDATER_ERROR_LIVE_BOOT is reported as follows:
ErrorCode: uint32 1

ErrorMessage: 'Updater disabled on live systems'
ErrorName: 'com.endlessm.Updater.Error.LiveBoot'
On converted systems, we report this rather ugly representation of
G_IO_ERROR_NOT_FOUND:
ErrorCode: uint32 1

ErrorMessage: 'Not an ostree system'
ErrorName:
'org.gtk.GDBus.UnmappedGError.Quark._g_2dio_2derror_2dquark.Code1'
We could address this by using a more descriptive GError in these cases,
from our own EOS_UPDATER_ERROR domain.
https://phabricator.endlessm.com/T13951",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,45,2017-01-17T10:17:55Z,2017-01-17T10:32:08Z,2017-01-17T10:32:11Z,MERGED,True,36,15,4,https://github.com/pwithnall,T14640 — eos-updater-util: Log when entering or leaving an error state,4,[],https://github.com/endlessm/eos-updater/pull/45,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/45,"Ensure that the error details appear in the journal, so that it’s easier
to debug problems later, when we can’t necessarily query the error state
of eos-updater over D-Bus.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T14640

This also includes some changes to drop the gnome-common dependency, which made it a bit easier for me to compile eos-updater.","Ensure that the error details appear in the journal, so that it’s easier
to debug problems later, when we can’t necessarily query the error state
of eos-updater over D-Bus.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T14640

This also includes some changes to drop the gnome-common dependency, which made it a bit easier for me to compile eos-updater.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,46,2017-01-24T18:14:41Z,2017-01-24T18:23:00Z,2017-01-25T10:13:58Z,MERGED,True,104,0,10,https://github.com/pwithnall,T14894 merge debian,28,[],https://github.com/endlessm/eos-updater/pull/46,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/46,"Merge the debian-master branch into master so that the debian directory can be maintained in sync with everything else in the project. This is justified because we are the upstream for eos-updater, and we know it’s only going to be used on EOS.

When merging this, I suspect some changes will be needed in Jenkins; and the debian-master branch will need to be deleted.","Merge the debian-master branch into master so that the debian directory can be maintained in sync with everything else in the project. This is justified because we are the upstream for eos-updater, and we know it’s only going to be used on EOS.

When merging this, I suspect some changes will be needed in Jenkins; and the debian-master branch will need to be deleted.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,46,2017-01-24T18:14:41Z,2017-01-24T18:23:00Z,2017-01-25T10:13:58Z,MERGED,True,104,0,10,https://github.com/pwithnall,T14894 merge debian,28,[],https://github.com/endlessm/eos-updater/pull/46,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/46#issuecomment-274890177,"Merge the debian-master branch into master so that the debian directory can be maintained in sync with everything else in the project. This is justified because we are the upstream for eos-updater, and we know it’s only going to be used on EOS.

When merging this, I suspect some changes will be needed in Jenkins; and the debian-master branch will need to be deleted.",Looks good. I'll disable the master jenkins job before merging so we can get it in cleanly.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,46,2017-01-24T18:14:41Z,2017-01-24T18:23:00Z,2017-01-25T10:13:58Z,MERGED,True,104,0,10,https://github.com/pwithnall,T14894 merge debian,28,[],https://github.com/endlessm/eos-updater/pull/46,https://github.com/dbnicholson,3,https://github.com/endlessm/eos-updater/pull/46#issuecomment-274891702,"Merge the debian-master branch into master so that the debian directory can be maintained in sync with everything else in the project. This is justified because we are the upstream for eos-updater, and we know it’s only going to be used on EOS.

When merging this, I suspect some changes will be needed in Jenkins; and the debian-master branch will need to be deleted.","Going now in http://ci.endlessm-sf.com:8080/job/obs-eos-updater-master/60/console. I deleted the debian-master branch from the repo and changed the jenkins job not to run builds on the origin/debian-master branch.
If this needs to go back to eos3.1, we'll also need to do the dance there.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,46,2017-01-24T18:14:41Z,2017-01-24T18:23:00Z,2017-01-25T10:13:58Z,MERGED,True,104,0,10,https://github.com/pwithnall,T14894 merge debian,28,[],https://github.com/endlessm/eos-updater/pull/46,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/46#issuecomment-275069462,"Merge the debian-master branch into master so that the debian directory can be maintained in sync with everything else in the project. This is justified because we are the upstream for eos-updater, and we know it’s only going to be used on EOS.

When merging this, I suspect some changes will be needed in Jenkins; and the debian-master branch will need to be deleted.","If this needs to go back to eos3.1, we'll also need to do the dance there.

I don’t think it does.
Thanks for the fast merge.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/47,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/47#issuecomment-277037606,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","Pushed some more changes to drop eos-branch file support. There’s a bit of follow-up cleanup to do, but no more functional changes to make in this area as far as I can tell. I will try and do the cleanup tomorrow and push additional commits, but they shouldn’t affect pending reviews much.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/47#issuecomment-277234189,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894",Finished pushing commits to drop eos-branch file support.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/47#issuecomment-278331351,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","Those review comments all make sense, thanks. Let me know when you’re done reviewing and I’ll push some fixup commits for the comments. Then those can be reviewed separately, squashed in, and the branch merged. That’s probably the clearest way of doing it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/47#issuecomment-278822377,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","Here’s one round of review fixes. I have not tested them thoroughly yet, but the code should be ready to review. I’ll test them tomorrow, and get the rest of the fixes done.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/47#issuecomment-279010325,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","Pushed another round of fixes, which I think addresses all the comments except the Avahi .service stuff, which I’m going to punt to a follow-up task; and some of the USB updater stuff which is lower priority, and the questions are less serious.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/dbnicholson,7,https://github.com/endlessm/eos-updater/pull/47#issuecomment-279441602,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","I've finished another round of review. My only remaining comments:


I think using sharedstatedir for the autoupdater stamp file location is wrong. See 2de5a70#r100831258.


I think the USB volume should be prepped with a mirror pull so that the refs are in refs/heads.


If the USB volume is prepped in mirror mode, then copying the summary file is unnecessary. However, if the source repo has eos-summary and eos-summary.sig, then those should probably be put in the standard location since that would carry through the upstream summary signature. Might be able to punt on this for now.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,8,https://github.com/endlessm/eos-updater/pull/47#issuecomment-279483818,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","I've finished another round of review. My only remaining comments:

I think using sharedstatedir for the autoupdater stamp file location is wrong. See 2de5a70#r100831258.


Fixed as df5e7ba (I’ll update the original commit message when squashing it in).


I think the USB volume should be prepped with a mirror pull so that the refs are in refs/heads.


Fixed as eeaef32.


If the USB volume is prepped in mirror mode, then copying the summary file is unnecessary. However, if the source repo has eos-summary and eos-summary.sig, then those should probably be put in the standard location since that would carry through the upstream summary signature. Might be able to punt on this for now.


Fixed as 72681a7.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/dbnicholson,9,https://github.com/endlessm/eos-updater/pull/47#issuecomment-279485884,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894",All looks good to me now. Do you still want review from others or should we merge?,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,47,2017-01-25T18:03:48Z,2017-02-13T19:22:46Z,2017-02-13T19:22:49Z,MERGED,True,13398,1070,87,https://github.com/pwithnall,T14894 kinvolk,227,[],https://github.com/endlessm/eos-updater/pull/47,https://github.com/pwithnall,10,https://github.com/endlessm/eos-updater/pull/47#issuecomment-279486981,"PR to merge the work by Kinvolk on adding LAN and USB support for eos-updater. The commits by Krzesimir have all been reviewed by Kinvolk and myself, so only need a cursory review — although their use of /ostree/repo/extensions for storing new metadata could do with some investigation. It’s probably best if I write this up in the task before anyone looks at it though. The commits by me all need review. They are either fixes for problems I’ve found through code review of the branch; or fixes for problems I found while reading the eos-updater code to get more familiar with it. I have deliberately not squashed my fixes into the commits from Kinvolk so they can be reviewed separately. However, I have rebased them to be in the right place in the commit history as much as I could.
I am still in the process of testing this manually, and I am aware that one of the recent commits (e5cbfac) broke make check. I will fix that tomorrow morning (did some debugging tonight and am not really sure what’s going on yet). I have not yet got LAN updates working with my local testing, although they may be closer to working with the latest patches on the branch — I haven’t yet had a chance to re-test due to make check failing.
Accordingly, this cannot be merged yet; but will hopefully be mergeable by the end of the week. So if you could time your reviews accordingly, that would be great. Thanks!

https://phabricator.endlessm.com/T14894","All looks good to me now. Do you still want review from others or should we merge?

I think it’s OK to merge now. I’ll squash the fixups, fix the commit messages, and merge it myself. Thanks for your patience. :-)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,48,2017-02-13T19:48:45Z,2017-02-13T20:38:47Z,2017-02-13T20:38:50Z,MERGED,True,21,4,2,https://github.com/pwithnall,T14894 build fixes,2,[],https://github.com/endlessm/eos-updater/pull/48,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/48,https://phabricator.endlessm.com/T14894#336250,https://phabricator.endlessm.com/T14894#336250,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,49,2017-02-14T13:14:57Z,2017-02-14T13:54:25Z,2017-02-14T13:54:30Z,MERGED,True,26,10,1,https://github.com/pwithnall,eos-autoupdater: Don’t connect to NetworkManager in tests,1,[],https://github.com/endlessm/eos-updater/pull/49,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/49,"Connecting to NetworkManager means connecting to the system bus, which
we might not have permission to do when running in unit tests. This
could cause construction of the NmClient to fail, which would take us
down with it.
Instead, don’t connect to NetworkManager when running the unit tests
(which use a mock session bus). Ideally we’d fix this by using a mock
system bus when running the tests, but GTestDBus doesn’t support that
(and adding support for it is not going to be accepted upstream: see bug
a fake bus instance (outside process) instead, but that’s work for
later.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T14894

https://phabricator.endlessm.com/T14894#336274","Connecting to NetworkManager means connecting to the system bus, which
we might not have permission to do when running in unit tests. This
could cause construction of the NmClient to fail, which would take us
down with it.
Instead, don’t connect to NetworkManager when running the unit tests
(which use a mock session bus). Ideally we’d fix this by using a mock
system bus when running the tests, but GTestDBus doesn’t support that
(and adding support for it is not going to be accepted upstream: see bug
a fake bus instance (outside process) instead, but that’s work for
later.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T14894

https://phabricator.endlessm.com/T14894#336274",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,50,2017-02-14T19:03:29Z,2017-02-14T19:27:07Z,2017-02-15T09:12:16Z,MERGED,True,28,15,7,https://github.com/pwithnall,T14894 attributes,3,[],https://github.com/endlessm/eos-updater/pull/50,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/50,https://phabricator.endlessm.com/T14894,https://phabricator.endlessm.com/T14894,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,50,2017-02-14T19:03:29Z,2017-02-14T19:27:07Z,2017-02-15T09:12:16Z,MERGED,True,28,15,7,https://github.com/pwithnall,T14894 attributes,3,[],https://github.com/endlessm/eos-updater/pull/50,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/50#issuecomment-279956342,https://phabricator.endlessm.com/T14894,"I'm curious what other files are immutable

It was each of the commit directories in the deployment, yes.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,51,2017-02-16T14:48:50Z,2017-02-18T01:38:16Z,2017-02-20T10:37:29Z,MERGED,True,1372,329,47,https://github.com/pwithnall,T15545 configuration for builder,15,[],https://github.com/endlessm/eos-updater/pull/51,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/51,"Partial solution for T15545.
https://phabricator.endlessm.com/T15545","Partial solution for T15545.
https://phabricator.endlessm.com/T15545",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,51,2017-02-16T14:48:50Z,2017-02-18T01:38:16Z,2017-02-20T10:37:29Z,MERGED,True,1372,329,47,https://github.com/pwithnall,T15545 configuration for builder,15,[],https://github.com/endlessm/eos-updater/pull/51,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/51#issuecomment-280623547,"Partial solution for T15545.
https://phabricator.endlessm.com/T15545",Updated to address review comments.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,52,2017-02-20T14:03:01Z,2017-02-21T17:27:01Z,2017-02-21T17:27:03Z,MERGED,True,9,0,1,https://github.com/pwithnall,tests: Skip a permissions test if running as root,1,[],https://github.com/endlessm/eos-updater/pull/52,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/52,"Root can access everything, so checking that a file returns EACCES is
not going to give us the result we expect. This happens if the tests are
run as root, which happens in Jenkins.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15545","Root can access everything, so checking that a file returns EACCES is
not going to give us the result we expect. This happens if the tests are
run as root, which happens in Jenkins.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15545",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,53,2017-02-20T18:35:41Z,2017-02-21T17:22:51Z,2017-02-21T17:22:53Z,MERGED,True,22,5,4,https://github.com/pwithnall,T15644 not ostree notification,4,[],https://github.com/endlessm/eos-updater/pull/53,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/53,"An update to make failure due to running eos-updater on a dev-converted system (i.e. one which doesn’t use OSTree and hence can’t be updated by eos-updater) more obvious, by giving it its own error code.
Also fix a few small issues with eos-updater-ctl I saw in the process.
https://phabricator.endlessm.com/T15644","An update to make failure due to running eos-updater on a dev-converted system (i.e. one which doesn’t use OSTree and hence can’t be updated by eos-updater) more obvious, by giving it its own error code.
Also fix a few small issues with eos-updater-ctl I saw in the process.
https://phabricator.endlessm.com/T15644",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,53,2017-02-20T18:35:41Z,2017-02-21T17:22:51Z,2017-02-21T17:22:53Z,MERGED,True,22,5,4,https://github.com/pwithnall,T15644 not ostree notification,4,[],https://github.com/endlessm/eos-updater/pull/53,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/53#issuecomment-281152248,"An update to make failure due to running eos-updater on a dev-converted system (i.e. one which doesn’t use OSTree and hence can’t be updated by eos-updater) more obvious, by giving it its own error code.
Also fix a few small issues with eos-updater-ctl I saw in the process.
https://phabricator.endlessm.com/T15644",The eos-desktop part of this is PR #234.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,54,2017-02-21T20:18:14Z,2017-02-23T15:48:27Z,2017-02-23T15:48:32Z,MERGED,True,2479,335,44,https://github.com/pwithnall,T15544 avahi service management,33,[],https://github.com/endlessm/eos-updater/pull/54,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/54,https://phabricator.endlessm.com/T15544,https://phabricator.endlessm.com/T15544,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,54,2017-02-21T20:18:14Z,2017-02-23T15:48:27Z,2017-02-23T15:48:32Z,MERGED,True,2479,335,44,https://github.com/pwithnall,T15544 avahi service management,33,[],https://github.com/endlessm/eos-updater/pull/54,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/54#issuecomment-281981203,https://phabricator.endlessm.com/T15544,Updated branch pushed which fixes all comments except the packaging comment. Thanks for the review. :-),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,55,2017-02-22T12:16:15Z,2017-02-22T16:48:51Z,2017-02-22T16:48:54Z,MERGED,True,9,0,1,https://github.com/pwithnall,eos-updater: Consistently error out at startup if not using OSTree,1,[],https://github.com/endlessm/eos-updater/pull/55,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/55,"If getting the booted checksum fails, consistently return
EOS_UPDATER_ERROR_NOT_OSTREE_SYSTEM, rather than a G_IO_ERROR which is
not suitable for sending over D-Bus. On a dev-converted system, getting
the booted checksum will fail as we are not booted into an OSTree
deployment.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15644","If getting the booted checksum fails, consistently return
EOS_UPDATER_ERROR_NOT_OSTREE_SYSTEM, rather than a G_IO_ERROR which is
not suitable for sending over D-Bus. On a dev-converted system, getting
the booted checksum will fail as we are not booted into an OSTree
deployment.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15644",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,56,2017-02-22T13:16:03Z,2017-02-22T16:56:48Z,2017-02-22T16:56:52Z,MERGED,True,6,3,1,https://github.com/pwithnall,tests: Improve check for skipping ‘unreadable file’ test,1,[],https://github.com/endlessm/eos-updater/pull/56,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/56,"Previously this was testing for whether the effective UID was root, on
the assumption that root was the only user able to bypass DAC checks on
file permissions. However, on Jenkins it seems this is not the case —
there might be some UID remapping going on, or the jenkins user might
have CAP_DAC_OVERRIDE. In any case, the check can be improved by testing
to see if the user can read the ‘unreadable file’. If they can, skip the
test.
The test is run frequently enough locally by anyone developing
eos-updater that it will still be run enough to catch problems with the
code.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15545","Previously this was testing for whether the effective UID was root, on
the assumption that root was the only user able to bypass DAC checks on
file permissions. However, on Jenkins it seems this is not the case —
there might be some UID remapping going on, or the jenkins user might
have CAP_DAC_OVERRIDE. In any case, the check can be improved by testing
to see if the user can read the ‘unreadable file’. If they can, skip the
test.
The test is run frequently enough locally by anyone developing
eos-updater that it will still be run enough to catch problems with the
code.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15545",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,57,2017-02-22T15:24:09Z,2017-02-22T16:53:44Z,2017-02-22T16:53:46Z,MERGED,True,16,16,5,https://github.com/pwithnall,eos-prepare-volume: Rename to eos-updater-prepare-volume,1,[],https://github.com/endlessm/eos-updater/pull/57,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/57,"This makes it a little more obvious that the utility is to do with
updates, rather than with audio preferences.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15706","This makes it a little more obvious that the utility is to do with
updates, rather than with audio preferences.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15706",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,58,2017-02-23T17:05:12Z,2017-02-23T19:09:30Z,2017-02-23T19:09:32Z,MERGED,True,39,13,1,https://github.com/pwithnall,tests: Skip permissions-based Avahi .service file tests on Jenkins,1,[],https://github.com/endlessm/eos-updater/pull/58,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/58,"Jenkins runs as root or some other user with CAP_DAC_OVERRIDE, which
foils our attempts to simulate unwriteable directories. This causes
spurious test failures on Jenkins (and nowhere else). Since the tests
are going to be run often enough during development, we can just skip
them on Jenkins.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15544","Jenkins runs as root or some other user with CAP_DAC_OVERRIDE, which
foils our attempts to simulate unwriteable directories. This causes
spurious test failures on Jenkins (and nowhere else). Since the tests
are going to be run often enough during development, we can just skip
them on Jenkins.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15544",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,59,2017-02-24T12:28:47Z,2017-02-24T17:36:22Z,2017-02-24T17:36:24Z,MERGED,True,41,2,1,https://github.com/pwithnall,T15544 update server tests,2,[],https://github.com/endlessm/eos-updater/pull/59,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/59,"Fix the integration test for eos-update-server.
https://phabricator.endlessm.com/T15544","Fix the integration test for eos-update-server.
https://phabricator.endlessm.com/T15544",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,60,2017-02-24T17:44:41Z,2017-02-24T17:57:20Z,2017-02-27T11:19:26Z,MERGED,True,65,10,10,https://github.com/pwithnall,T15544 update server tests,8,[],https://github.com/endlessm/eos-updater/pull/60,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/60,"A few more changes to fix some problems encountered while smoke testing today.
https://phabricator.endlessm.com/T15544","A few more changes to fix some problems encountered while smoke testing today.
https://phabricator.endlessm.com/T15544",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,61,2017-02-27T11:19:13Z,2017-02-27T11:41:37Z,2017-02-27T11:41:40Z,MERGED,True,5,2,1,https://github.com/pwithnall,eos-repo-server: Print error details in a warning message,1,[],https://github.com/endlessm/eos-updater/pull/61,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/61,"If the modified repository configuration can’t be written, a warning is
printed. Ensure that warning contains the actual error message.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15544

Follow up to #60 (comment).","If the modified repository configuration can’t be written, a warning is
printed. Ensure that warning contains the actual error message.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15544

Follow up to #60 (comment).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,62,2017-02-28T11:25:38Z,2017-02-28T16:41:56Z,2017-02-28T16:41:59Z,MERGED,True,25,0,1,https://github.com/pwithnall,T15794 fix dbus policy,2,[],https://github.com/endlessm/eos-updater/pull/62,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/62,https://phabricator.endlessm.com/T15794,https://phabricator.endlessm.com/T15794,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,63,2017-02-28T16:14:02Z,2017-03-01T16:54:38Z,2017-03-01T16:54:41Z,MERGED,True,1081,134,28,https://github.com/pwithnall,T15702 documentation,25,[],https://github.com/endlessm/eos-updater/pull/63,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/63,https://phabricator.endlessm.com/T15702,https://phabricator.endlessm.com/T15702,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,63,2017-02-28T16:14:02Z,2017-03-01T16:54:38Z,2017-03-01T16:54:41Z,MERGED,True,1081,134,28,https://github.com/pwithnall,T15702 documentation,25,[],https://github.com/endlessm/eos-updater/pull/63,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/63#issuecomment-283324212,https://phabricator.endlessm.com/T15702,Review comments fixed. Thanks for the detailed review!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,63,2017-02-28T16:14:02Z,2017-03-01T16:54:38Z,2017-03-01T16:54:41Z,MERGED,True,1081,134,28,https://github.com/pwithnall,T15702 documentation,25,[],https://github.com/endlessm/eos-updater/pull/63,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/63#issuecomment-283332643,https://phabricator.endlessm.com/T15702,"And I’ve just pushed two additional commits to update the README and TODO files, which finishes off this task.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,64,2017-03-01T17:04:07Z,2017-03-01T17:44:49Z,2017-03-01T17:44:51Z,MERGED,True,159,61,13,https://github.com/pwithnall,T15870 miscellaneous unit and ctl updates,11,[],https://github.com/endlessm/eos-updater/pull/64,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/64,https://phabricator.endlessm.com/T15870,https://phabricator.endlessm.com/T15870,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,65,2017-03-02T16:13:20Z,2017-03-02T17:09:24Z,2017-03-02T17:09:26Z,MERGED,True,3,3,3,https://github.com/pwithnall,docs: Fix man sections for .conf man pages,1,[],https://github.com/endlessm/eos-updater/pull/65,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/65,"They’re in section 5, and I forgot that the section is specified in the
page header, as well as in the filename and the installation path.
man, this is such a pain.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15702","They’re in section 5, and I forgot that the section is specified in the
page header, as well as in the filename and the installation path.
man, this is such a pain.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15702",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,66,2017-03-02T16:16:47Z,2017-03-02T17:14:11Z,2017-03-02T17:14:14Z,MERGED,True,66,23,8,https://github.com/pwithnall,T15870 fixes,9,[],https://github.com/endlessm/eos-updater/pull/66,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/66,https://phabricator.endlessm.com/T15870,https://phabricator.endlessm.com/T15870,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,67,2017-03-02T17:48:45Z,2017-03-02T18:05:06Z,2017-03-02T18:05:09Z,MERGED,True,2,2,2,https://github.com/pwithnall,build: Change default LAN port from 12345 to 43381,1,[],https://github.com/endlessm/eos-updater/pull/67,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/67,"This one’s a little less overloaded (not officially or unofficially
assigned to anything).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15894","This one’s a little less overloaded (not officially or unofficially
assigned to anything).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15894",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,68,2017-03-03T17:23:27Z,2017-03-03T19:58:53Z,2017-03-03T19:58:55Z,MERGED,True,11,3,2,https://github.com/pwithnall,eos-updater-poll-lan: Fix crash polling a LAN source on the same ref,1,[],https://github.com/endlessm/eos-updater/pull/68,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/68,"If eos-updater polled for updates from another computer on the local
network which has the same (or an older) OSTree ref deployed as the
current computer, eos-updater would crash.
This never actually caused a problem, because eos-updater not running is
essentially equivalent to it running and being in the Ready state, which
is the state it would have switched back to after finding no newer
OSTree commits to fetch from the other computer. It would have caused
problems on networks where there’s more than one computer advertising
updates; but that’s not a configuration we support yet.
In any case, crashing is bad. Fix it. The confusion resulted from
is_checksum_an_update() returning TRUE while explicitly not returning
something in one of its out parameters, and the caller not handling this
situation correctly.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15908","If eos-updater polled for updates from another computer on the local
network which has the same (or an older) OSTree ref deployed as the
current computer, eos-updater would crash.
This never actually caused a problem, because eos-updater not running is
essentially equivalent to it running and being in the Ready state, which
is the state it would have switched back to after finding no newer
OSTree commits to fetch from the other computer. It would have caused
problems on networks where there’s more than one computer advertising
updates; but that’s not a configuration we support yet.
In any case, crashing is bad. Fix it. The confusion resulted from
is_checksum_an_update() returning TRUE while explicitly not returning
something in one of its out parameters, and the caller not handling this
situation correctly.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15908",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,69,2017-03-06T11:02:42Z,2017-03-06T17:07:27Z,2017-03-06T17:07:29Z,MERGED,True,11,0,1,https://github.com/pwithnall,debian: Add postinst script to delete outdated eos-updater.service,1,[],https://github.com/endlessm/eos-updater/pull/69,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/69,"Previous versions of eos-updater provided eos-updater.{service,timer} as
aliases for eos-autoupdater.{service,timer}. The latest versions provide
eos-updater.service as an independent service file (for binding the
com.endlessm.Updater D-Bus service to systemd), and no
eos-updater.timer.
However, existing EOS deployments might have left-over
eos-updater.{service,timer} files in /etc/systemd/system due to
previously editing them. They won’t match the new unit file setup, and
will override it, causing eos-updater to not start on demand.
Fix that by deleting them in an eos-updater.postinst script. This will
only take effect on dev-converted systems — on non-dev-converted
systems, we have to rely on people having not edited the unit files.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15910","Previous versions of eos-updater provided eos-updater.{service,timer} as
aliases for eos-autoupdater.{service,timer}. The latest versions provide
eos-updater.service as an independent service file (for binding the
com.endlessm.Updater D-Bus service to systemd), and no
eos-updater.timer.
However, existing EOS deployments might have left-over
eos-updater.{service,timer} files in /etc/systemd/system due to
previously editing them. They won’t match the new unit file setup, and
will override it, causing eos-updater to not start on demand.
Fix that by deleting them in an eos-updater.postinst script. This will
only take effect on dev-converted systems — on non-dev-converted
systems, we have to rely on people having not edited the unit files.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15910",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,69,2017-03-06T11:02:42Z,2017-03-06T17:07:27Z,2017-03-06T17:07:29Z,MERGED,True,11,0,1,https://github.com/pwithnall,debian: Add postinst script to delete outdated eos-updater.service,1,[],https://github.com/endlessm/eos-updater/pull/69,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/69#issuecomment-284366623,"Previous versions of eos-updater provided eos-updater.{service,timer} as
aliases for eos-autoupdater.{service,timer}. The latest versions provide
eos-updater.service as an independent service file (for binding the
com.endlessm.Updater D-Bus service to systemd), and no
eos-updater.timer.
However, existing EOS deployments might have left-over
eos-updater.{service,timer} files in /etc/systemd/system due to
previously editing them. They won’t match the new unit file setup, and
will override it, causing eos-updater to not start on demand.
Fix that by deleting them in an eos-updater.postinst script. This will
only take effect on dev-converted systems — on non-dev-converted
systems, we have to rely on people having not edited the unit files.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15910","Note that I’m not enough of a Debian developer to know if this is the best way to fix the problem. It’s tested and works, but I’m very much prepared for someone to say it’s a terrible idea (and suggest something better).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,70,2017-03-07T11:26:23Z,2017-03-07T12:05:36Z,2017-03-07T12:05:38Z,MERGED,True,19,7,1,https://github.com/pwithnall,eos-repo-server: Set compression level to 2 rather than 9,1,[],https://github.com/endlessm/eos-updater/pull/70,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/70,"When sending OSTree blobs over the network, we compress them on the fly
to convert from bare format into archive-z2 format. Previously, we were
using the default compression level which, for our version of OSTree, is
9 — the highest zlib compression level.
This results in a lot of CPU usage, which is not good when multiple
clients are simultaneously downloading from this computer. It makes
eos-update-server consume all of the available CPU.
Instead of compression level 9, use compression level 2. This requires a
third of the CPU time, giving compression which is about 90% as good as
level 9. It’s worth noting that upstream OSTree has since switched to
level 6 by default.
This depends on a new API in OSTree,
ostree_raw_file_to_archive_z2_stream_with_options(), which will be
available in the 2017.3 release. We’ve backported it to our OSTree
package, which is at 2016.14. Hence the version requirement in
eos-updater has not been bumped even though it technically should be.
https://phabricator.endlessm.com/T15909","When sending OSTree blobs over the network, we compress them on the fly
to convert from bare format into archive-z2 format. Previously, we were
using the default compression level which, for our version of OSTree, is
9 — the highest zlib compression level.
This results in a lot of CPU usage, which is not good when multiple
clients are simultaneously downloading from this computer. It makes
eos-update-server consume all of the available CPU.
Instead of compression level 9, use compression level 2. This requires a
third of the CPU time, giving compression which is about 90% as good as
level 9. It’s worth noting that upstream OSTree has since switched to
level 6 by default.
This depends on a new API in OSTree,
ostree_raw_file_to_archive_z2_stream_with_options(), which will be
available in the 2017.3 release. We’ve backported it to our OSTree
package, which is at 2016.14. Hence the version requirement in
eos-updater has not been bumped even though it technically should be.
https://phabricator.endlessm.com/T15909",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,71,2017-03-07T12:41:15Z,2017-03-07T12:43:44Z,2017-03-07T12:43:47Z,MERGED,True,1,1,1,https://github.com/pwithnall,debian: Bump libostree dependency for new archive-z2 symbol,1,[],https://github.com/endlessm/eos-updater/pull/71,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/71,"This is a follow-up commit for 7234b8e which bumps our libostree
package dependency to the one including the new symbol. Note that this
doesn’t bump the dependency in configure.ac for the reasons mentioned in
commit 7234b8e.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15909","This is a follow-up commit for 7234b8e which bumps our libostree
package dependency to the one including the new symbol. Note that this
doesn’t bump the dependency in configure.ac for the reasons mentioned in
commit 7234b8e.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15909",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,72,2017-03-07T13:38:31Z,2017-03-07T18:19:13Z,2017-03-07T18:19:15Z,MERGED,True,47,7,1,https://github.com/pwithnall,eos-updater-avahi: Correctly handle service resolution failure,1,[],https://github.com/endlessm/eos-updater/pull/72,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/72,"Previously, the code was assuming that service resolution always
succeeds, but that’s not the case. If it fails, the address is returned
as NULL.
See the example code:
http://www.avahi.org/doxygen/html/client-browse-services_8c-example.html#a21
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15948","Previously, the code was assuming that service resolution always
succeeds, but that’s not the case. If it fails, the address is returned
as NULL.
See the example code:
http://www.avahi.org/doxygen/html/client-browse-services_8c-example.html#a21
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15948",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,73,2017-03-07T16:25:27Z,2017-03-07T17:25:24Z,2017-03-07T17:25:26Z,MERGED,True,12,9,1,https://github.com/pwithnall,T15953 summary bootstrap,3,[],https://github.com/endlessm/eos-updater/pull/73,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/73,https://phabricator.endlessm.com/T15953,https://phabricator.endlessm.com/T15953,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,74,2017-03-08T13:04:00Z,2017-03-08T13:08:59Z,2017-03-08T13:09:21Z,MERGED,True,2,0,1,https://github.com/wjt,Disable eos-autoupdater.timer based on cmdline,2,[],https://github.com/endlessm/eos-updater/pull/74,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/74,https://phabricator.endlessm.com/T15977,https://phabricator.endlessm.com/T15977,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,75,2017-03-08T16:00:33Z,2017-03-08T17:21:00Z,2017-03-08T17:21:01Z,MERGED,True,115,16,4,https://github.com/pwithnall,T15975 autoupdater jitter,3,[],https://github.com/endlessm/eos-updater/pull/75,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/75,https://phabricator.endlessm.com/T15975,https://phabricator.endlessm.com/T15975,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,75,2017-03-08T16:00:33Z,2017-03-08T17:21:00Z,2017-03-08T17:21:01Z,MERGED,True,115,16,4,https://github.com/pwithnall,T15975 autoupdater jitter,3,[],https://github.com/endlessm/eos-updater/pull/75,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/75#issuecomment-285100079,https://phabricator.endlessm.com/T15975,Updated to address review comments.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,76,2017-03-09T11:43:30Z,2017-03-09T16:26:05Z,2017-03-09T16:26:07Z,MERGED,True,2,0,1,https://github.com/pwithnall,eos-updater-avahi: Add Wants= dependency from multi-user.target,1,[],https://github.com/endlessm/eos-updater/pull/76,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/76,"Previously, the eos-updater-avahi.service unit would only be triggered
when any of the paths watched by eos-updater-avahi.path were changed.
This isn’t actually what we want — we also want it to be triggered on
boot when those paths aren’t changed, just to sync the state of the
Avahi service file.
Add a WantedBy=multi-user.target to achieve that; and correctly add the
Wants=avahi-daemon.service relation to ensure this does pull the Avahi
daemon into the boot too.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16000","Previously, the eos-updater-avahi.service unit would only be triggered
when any of the paths watched by eos-updater-avahi.path were changed.
This isn’t actually what we want — we also want it to be triggered on
boot when those paths aren’t changed, just to sync the state of the
Avahi service file.
Add a WantedBy=multi-user.target to achieve that; and correctly add the
Wants=avahi-daemon.service relation to ensure this does pull the Avahi
daemon into the boot too.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16000",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,77,2017-03-10T16:47:12Z,2017-03-10T17:44:15Z,2017-03-10T17:44:16Z,MERGED,True,233,36,2,https://github.com/pwithnall,T15999 eos updater ctl enable server,7,[],https://github.com/endlessm/eos-updater/pull/77,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/77,https://phabricator.endlessm.com/T15999,https://phabricator.endlessm.com/T15999,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,77,2017-03-10T16:47:12Z,2017-03-10T17:44:15Z,2017-03-10T17:44:16Z,MERGED,True,233,36,2,https://github.com/pwithnall,T15999 eos updater ctl enable server,7,[],https://github.com/endlessm/eos-updater/pull/77,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/77#issuecomment-285735315,https://phabricator.endlessm.com/T15999,Pushed an updated version which changes the geteuid() check.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,78,2017-03-13T11:08:17Z,2017-03-13T17:46:40Z,2017-03-13T17:46:41Z,MERGED,True,86,1,1,https://github.com/pwithnall,T16095 avahi caching,3,[],https://github.com/endlessm/eos-updater/pull/78,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/78,https://phabricator.endlessm.com/T16095,https://phabricator.endlessm.com/T16095,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,79,2017-03-13T13:33:50Z,2017-03-13T18:10:42Z,2017-03-13T18:10:44Z,MERGED,True,17,4,5,https://github.com/pwithnall,T16103 unit cycle,2,[],https://github.com/endlessm/eos-updater/pull/79,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/79,https://phabricator.endlessm.com/T16103,https://phabricator.endlessm.com/T16103,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,80,2017-03-23T11:09:00Z,2017-03-27T22:25:51Z,2017-03-27T22:25:53Z,MERGED,True,16,23,1,https://github.com/pwithnall,eos-repo-server: Reset timeout conditions on failed requests,1,[],https://github.com/endlessm/eos-updater/pull/80,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/80,"Previously they were reset only on successful requests, meaning that a
long-running timed out request in the middle of a legitimate stream of
update requests from a client would cause eos-update-server to exit.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16270","Previously they were reset only on successful requests, meaning that a
long-running timed out request in the middle of a legitimate stream of
update requests from a client would cause eos-update-server to exit.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16270",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,80,2017-03-23T11:09:00Z,2017-03-27T22:25:51Z,2017-03-27T22:25:53Z,MERGED,True,16,23,1,https://github.com/pwithnall,eos-repo-server: Reset timeout conditions on failed requests,1,[],https://github.com/endlessm/eos-updater/pull/80,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/80#issuecomment-289444360,"Previously they were reset only on successful requests, meaning that a
long-running timed out request in the middle of a legitimate stream of
update requests from a client would cause eos-update-server to exit.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16270",Updated branch to address review comments.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,81,2017-03-31T10:28:57Z,2017-03-31T16:07:27Z,2017-03-31T16:07:28Z,MERGED,True,25,0,1,https://github.com/pwithnall,docs: Mention mDNS/IGMP problems in eos-updater-avahi man page,1,[],https://github.com/endlessm/eos-updater/pull/81,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/81,"Add some information about IGMP problems on the eos-updater-avahi man
page, and advise people to look at their router configurations if they
encounter symptoms like this.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16013","Add some information about IGMP problems on the eos-updater-avahi man
page, and advise people to look at their router configurations if they
encounter symptoms like this.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16013",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,82,2017-03-31T12:02:16Z,2017-03-31T15:25:02Z,2017-03-31T15:25:05Z,MERGED,True,29,2,1,https://github.com/pwithnall,eos-updater-avahi: Include scope ID in link-local IPv6 addresses,1,[],https://github.com/endlessm/eos-updater/pull/82,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/82,"Avahi doesn’t do this for us, and a link-local IPv6 address is useless
without a scope ID (since the same address can be used for multiple
machines on different interfaces; the scope ID disambiguates the
interface).
This fixes failures to poll and pull from LAN peers over IPv6 with the
error message “Failed to fetch latest commit from …: Could not connect:
Invalid argument”.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16385","Avahi doesn’t do this for us, and a link-local IPv6 address is useless
without a scope ID (since the same address can be used for multiple
machines on different interfaces; the scope ID disambiguates the
interface).
This fixes failures to poll and pull from LAN peers over IPv6 with the
error message “Failed to fetch latest commit from …: Could not connect:
Invalid argument”.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16385",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,82,2017-03-31T12:02:16Z,2017-03-31T15:25:02Z,2017-03-31T15:25:05Z,MERGED,True,29,2,1,https://github.com/pwithnall,eos-updater-avahi: Include scope ID in link-local IPv6 addresses,1,[],https://github.com/endlessm/eos-updater/pull/82,https://github.com/sgnn7,2,https://github.com/endlessm/eos-updater/pull/82#issuecomment-290739484,"Avahi doesn’t do this for us, and a link-local IPv6 address is useless
without a scope ID (since the same address can be used for multiple
machines on different interfaces; the scope ID disambiguates the
interface).
This fixes failures to poll and pull from LAN peers over IPv6 with the
error message “Failed to fetch latest commit from …: Could not connect:
Invalid argument”.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16385",@pwithnall LGTM though I'd add the upstream bug URI in the commit message.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,82,2017-03-31T12:02:16Z,2017-03-31T15:25:02Z,2017-03-31T15:25:05Z,MERGED,True,29,2,1,https://github.com/pwithnall,eos-updater-avahi: Include scope ID in link-local IPv6 addresses,1,[],https://github.com/endlessm/eos-updater/pull/82,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/82#issuecomment-290743385,"Avahi doesn’t do this for us, and a link-local IPv6 address is useless
without a scope ID (since the same address can be used for multiple
machines on different interfaces; the scope ID disambiguates the
interface).
This fixes failures to poll and pull from LAN peers over IPv6 with the
error message “Failed to fetch latest commit from …: Could not connect:
Invalid argument”.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16385","Updated to include the URI, thanks. Pushed.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,83,2017-03-31T15:12:07Z,2017-03-31T16:16:51Z,2017-03-31T16:16:52Z,MERGED,True,58,21,3,https://github.com/pwithnall,T16387 connection terminated unexpectedly,3,[],https://github.com/endlessm/eos-updater/pull/83,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/83,https://phabricator.endlessm.com/T16387,https://phabricator.endlessm.com/T16387,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,84,2017-04-05T17:19:09Z,2017-04-06T12:35:44Z,2017-04-06T12:35:44Z,MERGED,True,20,11,3,https://github.com/krnowak,autoupdater: Port to libnm,2,[],https://github.com/endlessm/eos-updater/pull/84,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/84,"The libnm-glib library is deprecated.
https://phabricator.endlessm.com/T15813
Unfortunately make check does not pass for me neither on my branch nor on the current master branch. Will need to investigate.","The libnm-glib library is deprecated.
https://phabricator.endlessm.com/T15813
Unfortunately make check does not pass for me neither on my branch nor on the current master branch. Will need to investigate.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,84,2017-04-05T17:19:09Z,2017-04-06T12:35:44Z,2017-04-06T12:35:44Z,MERGED,True,20,11,3,https://github.com/krnowak,autoupdater: Port to libnm,2,[],https://github.com/endlessm/eos-updater/pull/84,https://github.com/krnowak,2,https://github.com/endlessm/eos-updater/pull/84#issuecomment-292132869,"The libnm-glib library is deprecated.
https://phabricator.endlessm.com/T15813
Unfortunately make check does not pass for me neither on my branch nor on the current master branch. Will need to investigate.","Updated. I bumped the libnm dep to 1.2 (that's why there is a check for libnm 1.6 in autoupdater), because eos3.1 seems to have that version still, while master has 1.6. Will this change land in eos3.1 too? (Likely seeing that the 3.1 is on par with master.)
Also, the failing (hanging actually) test is the one testing the LAN updates.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,84,2017-04-05T17:19:09Z,2017-04-06T12:35:44Z,2017-04-06T12:35:44Z,MERGED,True,20,11,3,https://github.com/krnowak,autoupdater: Port to libnm,2,[],https://github.com/endlessm/eos-updater/pull/84,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/84#issuecomment-292159653,"The libnm-glib library is deprecated.
https://phabricator.endlessm.com/T15813
Unfortunately make check does not pass for me neither on my branch nor on the current master branch. Will need to investigate.","Also, the failing (hanging actually) test is the one testing the LAN updates.

Fixed as https://phabricator.endlessm.com/T16387#366105.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,85,2017-04-06T11:28:00Z,2017-04-06T12:29:49Z,2017-04-06T12:31:21Z,MERGED,True,9,6,2,https://github.com/pwithnall,T16387 test failure,2,[],https://github.com/endlessm/eos-updater/pull/85,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/85,"This failure was only apparent when using keepalive connections to the server (or if the server started listening but was never sent a request).
https://phabricator.endlessm.com/T16387","This failure was only apparent when using keepalive connections to the server (or if the server started listening but was never sent a request).
https://phabricator.endlessm.com/T16387",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,86,2017-04-06T17:16:38Z,2017-04-06T18:38:30Z,2017-04-06T18:45:56Z,MERGED,True,980,390,77,https://github.com/krnowak,T15859 - Tidy up licensing,4,[],https://github.com/endlessm/eos-updater/pull/86,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/86,https://phabricator.endlessm.com/T15859,https://phabricator.endlessm.com/T15859,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,87,2017-04-06T17:18:56Z,2017-04-07T22:23:27Z,2017-04-07T22:23:27Z,MERGED,True,18,12,2,https://github.com/krnowak,Test log fixes,2,[],https://github.com/endlessm/eos-updater/pull/87,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/87,Just some minor fixes I have made during checking the hangs in the LAN update tests.,Just some minor fixes I have made during checking the hangs in the LAN update tests.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,87,2017-04-06T17:18:56Z,2017-04-07T22:23:27Z,2017-04-07T22:23:27Z,MERGED,True,18,12,2,https://github.com/krnowak,Test log fixes,2,[],https://github.com/endlessm/eos-updater/pull/87,https://github.com/krnowak,2,https://github.com/endlessm/eos-updater/pull/87#issuecomment-292591827,Just some minor fixes I have made during checking the hangs in the LAN update tests.,Updated.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,88,2017-04-07T09:43:45Z,2017-04-07T12:10:26Z,2017-04-07T12:10:26Z,MERGED,True,41,139,11,https://github.com/krnowak,T15812 - drop XSLT rules,3,[],https://github.com/endlessm/eos-updater/pull/88,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/88,https://phabricator.endlessm.com/T15812,https://phabricator.endlessm.com/T15812,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,88,2017-04-07T09:43:45Z,2017-04-07T12:10:26Z,2017-04-07T12:10:26Z,MERGED,True,41,139,11,https://github.com/krnowak,T15812 - drop XSLT rules,3,[],https://github.com/endlessm/eos-updater/pull/88,https://github.com/krnowak,2,https://github.com/endlessm/eos-updater/pull/88#issuecomment-292518565,https://phabricator.endlessm.com/T15812,Updated.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,88,2017-04-07T09:43:45Z,2017-04-07T12:10:26Z,2017-04-07T12:10:26Z,MERGED,True,41,139,11,https://github.com/krnowak,T15812 - drop XSLT rules,3,[],https://github.com/endlessm/eos-updater/pull/88,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/88#issuecomment-292520079,https://phabricator.endlessm.com/T15812,"Lovely, thanks.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,89,2017-04-13T15:05:43Z,2017-04-18T20:49:29Z,2017-04-18T20:49:31Z,MERGED,True,1266,468,24,https://github.com/pwithnall,T16551 server multiple repos,13,[],https://github.com/endlessm/eos-updater/pull/89,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/89,https://phabricator.endlessm.com/T16551,https://phabricator.endlessm.com/T16551,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,89,2017-04-13T15:05:43Z,2017-04-18T20:49:29Z,2017-04-18T20:49:31Z,MERGED,True,1266,468,24,https://github.com/pwithnall,T16551 server multiple repos,13,[],https://github.com/endlessm/eos-updater/pull/89,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/89#issuecomment-294814052,https://phabricator.endlessm.com/T16551,Updated to address review comments.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,89,2017-04-13T15:05:43Z,2017-04-18T20:49:29Z,2017-04-18T20:49:31Z,MERGED,True,1266,468,24,https://github.com/pwithnall,T16551 server multiple repos,13,[],https://github.com/endlessm/eos-updater/pull/89,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/89#issuecomment-294944389,https://phabricator.endlessm.com/T16551,Updated.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,89,2017-04-13T15:05:43Z,2017-04-18T20:49:29Z,2017-04-18T20:49:31Z,MERGED,True,1266,468,24,https://github.com/pwithnall,T16551 server multiple repos,13,[],https://github.com/endlessm/eos-updater/pull/89,https://github.com/krnowak,4,https://github.com/endlessm/eos-updater/pull/89#issuecomment-294960320,https://phabricator.endlessm.com/T16551,"There seem to be still one G_LOG_DOMAIN define missing in the main Makefile.am file for the libeos-update-server library. With that fixes, this PR should be good to be merged.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,90,2017-04-18T08:25:56Z,2017-04-18T15:58:10Z,2017-04-18T15:58:10Z,MERGED,True,211,155,12,https://github.com/krnowak,Convert to structured logging,4,[],https://github.com/endlessm/eos-updater/pull/90,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/90,https://phabricator.endlessm.com/T15811,https://phabricator.endlessm.com/T15811,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,91,2017-04-18T17:53:48Z,2017-04-19T15:53:27Z,2017-04-19T15:53:29Z,MERGED,True,54,33,1,https://github.com/pwithnall,eos-autoupdater: Don’t normally write stamp file on first boot,1,[],https://github.com/endlessm/eos-updater/pull/91,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/91,"Only write it if a randomised delay is configured, otherwise our first
check for updates will be delayed by the IntervalDays period. When we do
write it, discount the normal IntervalDays period so that the update
will be performed after the RandomizedDelayDays period only.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16643","Only write it if a randomised delay is configured, otherwise our first
check for updates will be delayed by the IntervalDays period. When we do
write it, discount the normal IntervalDays period so that the update
will be performed after the RandomizedDelayDays period only.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16643",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,92,2017-04-19T11:19:30Z,2017-04-19T16:13:08Z,2017-04-19T17:09:05Z,MERGED,True,6,2,2,https://github.com/pwithnall,eos-updater: Handle G_IO_ERROR_FAILED when running in FBE test mode,1,[],https://github.com/endlessm/eos-updater/pull/92,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/92,"When test mode is enabled in the first boot environment, overlay file
systems are mounted on top of everything (including /ostree), which
breaks OSTree. (This is expected.)
This causes libostree to return an error from ostree_sysroot_load(),
which we were not correctly handling, and hence were passing through the
wrong error domain over eos-updater’s D-Bus interface. This caused an
error message to appear in the UI when it wasn’t supposed to.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16574","When test mode is enabled in the first boot environment, overlay file
systems are mounted on top of everything (including /ostree), which
breaks OSTree. (This is expected.)
This causes libostree to return an error from ostree_sysroot_load(),
which we were not correctly handling, and hence were passing through the
wrong error domain over eos-updater’s D-Bus interface. This caused an
error message to appear in the UI when it wasn’t supposed to.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16574",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,92,2017-04-19T11:19:30Z,2017-04-19T16:13:08Z,2017-04-19T17:09:05Z,MERGED,True,6,2,2,https://github.com/pwithnall,eos-updater: Handle G_IO_ERROR_FAILED when running in FBE test mode,1,[],https://github.com/endlessm/eos-updater/pull/92,https://github.com/wjt,2,https://github.com/endlessm/eos-updater/pull/92#issuecomment-295324780,"When test mode is enabled in the first boot environment, overlay file
systems are mounted on top of everything (including /ostree), which
breaks OSTree. (This is expected.)
This causes libostree to return an error from ostree_sysroot_load(),
which we were not correctly handling, and hence were passing through the
wrong error domain over eos-updater’s D-Bus interface. This caused an
error message to appear in the UI when it wasn’t supposed to.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16574","Is there an argument that we should adjust the test mode overlays to match the overlays used for live boots, which do not cause this problem? I guess live boot mode is explicitly detected. What is the failure that libostree hits?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,92,2017-04-19T11:19:30Z,2017-04-19T16:13:08Z,2017-04-19T17:09:05Z,MERGED,True,6,2,2,https://github.com/pwithnall,eos-updater: Handle G_IO_ERROR_FAILED when running in FBE test mode,1,[],https://github.com/endlessm/eos-updater/pull/92,https://github.com/cosimoc,3,https://github.com/endlessm/eos-updater/pull/92#issuecomment-295327932,"When test mode is enabled in the first boot environment, overlay file
systems are mounted on top of everything (including /ostree), which
breaks OSTree. (This is expected.)
This causes libostree to return an error from ostree_sysroot_load(),
which we were not correctly handling, and hence were passing through the
wrong error domain over eos-updater’s D-Bus interface. This caused an
error message to appear in the UI when it wasn’t supposed to.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16574","This looks reasonable to me for now, so I merged it -- another option would be to try and explicitly detect test mode, since this error could also possibly have other causes.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,92,2017-04-19T11:19:30Z,2017-04-19T16:13:08Z,2017-04-19T17:09:05Z,MERGED,True,6,2,2,https://github.com/pwithnall,eos-updater: Handle G_IO_ERROR_FAILED when running in FBE test mode,1,[],https://github.com/endlessm/eos-updater/pull/92,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/92#issuecomment-295348844,"When test mode is enabled in the first boot environment, overlay file
systems are mounted on top of everything (including /ostree), which
breaks OSTree. (This is expected.)
This causes libostree to return an error from ostree_sysroot_load(),
which we were not correctly handling, and hence were passing through the
wrong error domain over eos-updater’s D-Bus interface. This caused an
error message to appear in the UI when it wasn’t supposed to.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16574","another option would be to try and explicitly detect test mode, since this error could also possibly have other causes.

IIRC from looking at the libostree code, I don’t think there’s anything else obvious which could cause G_IO_ERROR_FAILED there actually. In any case, any I/O failure of ostree_sysroot_load() is a pretty good indication that the system is not (currently) an OSTree deployment, so I think the error we return is always appropriate.

Is there an argument that we should adjust the test mode overlays to match the overlays used for live boots, which do not cause this problem? I guess live boot mode is explicitly detected. What is the failure that libostree hits?

Potentially. libostree hits the failure that ostree= is specified on the kernel command line, but the file system layout doesn’t look like a deployment, because eos-test-mode has overmounted overlay file systems everywhere. (At least, I assume that’s the cause of the problem — I have not investigated which mount breaks things.) This results in the error Unexpected state: ostree= kernel argument found, but / is not a deployment root.
I’ll look at the difference between test and live mode before closing the task.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,93,2017-04-20T16:52:39Z,2017-04-20T17:12:24Z,2017-04-20T17:12:26Z,MERGED,True,56,35,1,https://github.com/pwithnall,eos-autoupdater: Don’t normally write stamp file on first boot,1,[],https://github.com/endlessm/eos-updater/pull/93,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/93,"Only write it if a randomised delay is configured, otherwise our first
check for updates will be delayed by the IntervalDays period. When we do
write it, discount the normal IntervalDays period so that the update
will be performed after the RandomizedDelayDays period only.
(Non-trivial rebase to eos3.1.)
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16643","Only write it if a randomised delay is configured, otherwise our first
check for updates will be delayed by the IntervalDays period. When we do
write it, discount the normal IntervalDays period so that the update
will be performed after the RandomizedDelayDays period only.
(Non-trivial rebase to eos3.1.)
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16643",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,94,2017-04-26T16:33:50Z,2017-05-16T08:49:10Z,2017-05-16T08:49:10Z,MERGED,True,490,37,8,https://github.com/krnowak,util: Add functions for parsing the entire string as a number,1,[],https://github.com/endlessm/eos-updater/pull/94,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/94,"That thing got copy-pasted all over the place and I was about to do it
once again. Better just split it to function and add test to verify I
did not break anything.","That thing got copy-pasted all over the place and I was about to do it
once again. Better just split it to function and add test to verify I
did not break anything.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,94,2017-04-26T16:33:50Z,2017-05-16T08:49:10Z,2017-05-16T08:49:10Z,MERGED,True,490,37,8,https://github.com/krnowak,util: Add functions for parsing the entire string as a number,1,[],https://github.com/endlessm/eos-updater/pull/94,https://github.com/krnowak,2,https://github.com/endlessm/eos-updater/pull/94#issuecomment-297489944,"That thing got copy-pasted all over the place and I was about to do it
once again. Better just split it to function and add test to verify I
did not break anything.",Moving this to GLib is a good idea (provided that the patches will not simply languish in bugzilla ;) ). Will do it tomorrow.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,94,2017-04-26T16:33:50Z,2017-05-16T08:49:10Z,2017-05-16T08:49:10Z,MERGED,True,490,37,8,https://github.com/krnowak,util: Add functions for parsing the entire string as a number,1,[],https://github.com/endlessm/eos-updater/pull/94,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/94#issuecomment-297698876,"That thing got copy-pasted all over the place and I was about to do it
once again. Better just split it to function and add test to verify I
did not break anything.","Moving this to GLib is a good idea (provided that the patches will not simply languish in bugzilla ;) ). Will do it tomorrow.

Speaking with my GLib maintainer hat on, the patches will not languish in Bugzilla. :)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,94,2017-04-26T16:33:50Z,2017-05-16T08:49:10Z,2017-05-16T08:49:10Z,MERGED,True,490,37,8,https://github.com/krnowak,util: Add functions for parsing the entire string as a number,1,[],https://github.com/endlessm/eos-updater/pull/94,https://github.com/krnowak,4,https://github.com/endlessm/eos-updater/pull/94#issuecomment-297992408,"That thing got copy-pasted all over the place and I was about to do it
once again. Better just split it to function and add test to verify I
did not break anything.",Updated. Partially stolen from https://bugzilla.gnome.org/show_bug.cgi?id=781829.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,94,2017-04-26T16:33:50Z,2017-05-16T08:49:10Z,2017-05-16T08:49:10Z,MERGED,True,490,37,8,https://github.com/krnowak,util: Add functions for parsing the entire string as a number,1,[],https://github.com/endlessm/eos-updater/pull/94,https://github.com/krnowak,5,https://github.com/endlessm/eos-updater/pull/94#issuecomment-300460158,"That thing got copy-pasted all over the place and I was about to do it
once again. Better just split it to function and add test to verify I
did not break anything.","Updated, partially stolen from GLib master.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,94,2017-04-26T16:33:50Z,2017-05-16T08:49:10Z,2017-05-16T08:49:10Z,MERGED,True,490,37,8,https://github.com/krnowak,util: Add functions for parsing the entire string as a number,1,[],https://github.com/endlessm/eos-updater/pull/94,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/94#issuecomment-301717079,"That thing got copy-pasted all over the place and I was about to do it
once again. Better just split it to function and add test to verify I
did not break anything.",++,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/95,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,2,https://github.com/endlessm/eos-updater/pull/95#issuecomment-298925037,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","Updated, but I did not even try to compile it. Not everything was addressed yet (mostly documenting the txt messages format and the stuff eos extensions file).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,3,https://github.com/endlessm/eos-updater/pull/95#issuecomment-298982689,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","Now it builds, added a bit of the TXT records format docs. There are some TODOs left, some of which I will address tomorrow. Tests are still to be written.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,4,https://github.com/endlessm/eos-updater/pull/95#issuecomment-301162329,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589",Updated to fix two bugs in eos-updater-avahi (I forgot to steal the autoptr variable for out parameter and forgot to terminate the string array with NULL).,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,5,https://github.com/endlessm/eos-updater/pull/95#issuecomment-302413689,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","Just pushed the fixes, more may follow up during testing.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,6,https://github.com/endlessm/eos-updater/pull/95#issuecomment-303422936,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","Pushed some fixes, I still need to make some proper commits out of them. I still did not address the enum-instead-of-defines review issue. At least this code works together with my ostree changes in pwithnall/ostree#2.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,7,https://github.com/endlessm/eos-updater/pull/95#issuecomment-303508684,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","Updated. I hopefully addressed all the review issues, rebased it on top of current master, updated the ostree bloom implementation to the newest one and prepared the commits.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,8,https://github.com/endlessm/eos-updater/pull/95#issuecomment-303508855,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589",The only issue left is this eos-updater-avahi.py test that fails for me. Will investigate it tomorrow.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/95#issuecomment-305033979,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","This looks good, though given the change in architecture being discussed on the mailing list we can’t merge this until the new architecture has been finalised, implemented in OSTree, and this PR tweaked to make use of it. :-(",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,10,https://github.com/endlessm/eos-updater/pull/95#issuecomment-312318139,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","I updated it with a most likely broken commit, but the bulk of work should be there. I copied the bloom hash func for OstreeCollectionRef to ostree bloom files. I also copied the ostree-ref.[ch] and modified them slightly to avoid including libglnx and ostree-repo-private.h headers.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/mwleeds,11,https://github.com/endlessm/eos-updater/pull/95#issuecomment-314918460,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","I pushed a fixed version of this to the branch ""mwleeds/T16589"" that compiles and passes the tests. So that's ready for CR.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/pwithnall,12,https://github.com/endlessm/eos-updater/pull/95#issuecomment-322225912,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","I pushed a fixed version of this to the branch ""mwleeds/T16589"" that compiles and passes the tests. So that's ready for CR.

Since that branch isn’t part of this PR, I can’t easily review it. I think you should be able to force-push to Krzesimir’s branch and push your fixups there so they get included in this PR. Could you try that?
I’ve added comments on specific commits in your branch, which we can hopefully then address in this PR:

5526c5c#commitcomment-23636281
a409c2b#commitcomment-23636298
44895e7#commitcomment-23636313
e487d0c#commitcomment-23636346
e487d0c#commitcomment-23636346",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/krnowak,13,https://github.com/endlessm/eos-updater/pull/95#issuecomment-322282309,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","Since that branch isn’t part of this PR, I can’t easily review it. I think you should be able to force-push to Krzesimir’s branch and push your fixups there so they get included in this PR. Could you try that?

That won't work unless @mwleeds is the maintainer of the project, no?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/mwleeds,14,https://github.com/endlessm/eos-updater/pull/95#issuecomment-322283304,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","@krnowak right I can't push to your eos-updater fork, so I opened #101 instead",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,95,2017-04-28T14:02:22Z,2017-08-14T21:07:22Z,2017-08-15T21:53:00Z,CLOSED,False,3088,72,15,https://github.com/krnowak,new DNS-SD records,15,[],https://github.com/endlessm/eos-updater/pull/95,https://github.com/pwithnall,15,https://github.com/endlessm/eos-updater/pull/95#issuecomment-322310099,"This is a work in progress, not tested or anything, but can serve as a base for API review. It is based on #94, so please ignore the string to number conversion functions. I still have to review this code against the new IETF drafts.
(Edit: Pressed the submit too quickly)
Added three functions:

generate an ostree avahi service file

it follows a bit an API convention in ostree, so it takes a GVariant being a vardict for options


delete an ostree avahi service file

it deletes it for a specific repository index


delete all ostree avahi service files but the ones in the whitelist

this is to be used in the situation when we change the config in a way that we remove some repositories, so we can also remove all the obsolete files without having to remember what files there were.
makes me wonder if this is really necessary - probably we could remove the whitelist, so all the ostree avahi service files would be removed and then we could recreate them based on a new configuration



https://phabricator.endlessm.com/T16589","@krnowak right I can't push to your eos-updater fork, so I opened #101 instead

Thanks, let’s continue the review there. I’ll close this. Thanks for your updates as well, Krzesimir!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,96,2017-06-01T19:47:49Z,2017-06-01T21:16:45Z,2017-06-01T22:27:00Z,MERGED,True,86,35,5,https://github.com/dsd, Follow ref redirects in commit metadata ,2,[],https://github.com/endlessm/eos-updater/pull/96,https://github.com/dsd,1,https://github.com/endlessm/eos-updater/pull/96,https://phabricator.endlessm.com/T17339,https://phabricator.endlessm.com/T17339,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,96,2017-06-01T19:47:49Z,2017-06-01T21:16:45Z,2017-06-01T22:27:00Z,MERGED,True,86,35,5,https://github.com/dsd, Follow ref redirects in commit metadata ,2,[],https://github.com/endlessm/eos-updater/pull/96,https://github.com/krnowak,2,https://github.com/endlessm/eos-updater/pull/96#issuecomment-305612355,https://phabricator.endlessm.com/T17339,Looks good. Feel free to merge when your tests pass.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,97,2017-06-01T21:33:41Z,2017-06-05T10:53:53Z,2017-06-05T10:53:55Z,MERGED,True,86,35,5,https://github.com/dsd, Follow ref redirects in commit metadata ,2,[],https://github.com/endlessm/eos-updater/pull/97,https://github.com/dsd,1,https://github.com/endlessm/eos-updater/pull/97,https://phabricator.endlessm.com/T17339,https://phabricator.endlessm.com/T17339,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,98,2017-06-02T13:27:03Z,2017-06-20T16:09:27Z,2017-06-20T16:09:27Z,MERGED,True,1260,64,13,https://github.com/krnowak,eos-updater-apply: Workaround failures during sysroot cleanup,18,[],https://github.com/endlessm/eos-updater/pull/98,https://github.com/krnowak,1,https://github.com/endlessm/eos-updater/pull/98,"The sysroot cleanup happens after the successful deployment. The
failures are likely the result of the concurrent prunes that happened
earlier.
So tell ostree to skip cleanup and perform it ourselves later, so we
can simply log an error, but still report a success as the ""apply""
command is mostly about creating a new deployment, not doing the
cleanup.
https://phabricator.endlessm.com/T16958","The sysroot cleanup happens after the successful deployment. The
failures are likely the result of the concurrent prunes that happened
earlier.
So tell ostree to skip cleanup and perform it ourselves later, so we
can simply log an error, but still report a success as the ""apply""
command is mostly about creating a new deployment, not doing the
cleanup.
https://phabricator.endlessm.com/T16958",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,98,2017-06-02T13:27:03Z,2017-06-20T16:09:27Z,2017-06-20T16:09:27Z,MERGED,True,1260,64,13,https://github.com/krnowak,eos-updater-apply: Workaround failures during sysroot cleanup,18,[],https://github.com/endlessm/eos-updater/pull/98,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/98#issuecomment-307935273,"The sysroot cleanup happens after the successful deployment. The
failures are likely the result of the concurrent prunes that happened
earlier.
So tell ostree to skip cleanup and perform it ourselves later, so we
can simply log an error, but still report a success as the ""apply""
command is mostly about creating a new deployment, not doing the
cleanup.
https://phabricator.endlessm.com/T16958","This looks good; before I merge it, did you manage to test it with a reproducible error case (as mentioned in T16958)?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,98,2017-06-02T13:27:03Z,2017-06-20T16:09:27Z,2017-06-20T16:09:27Z,MERGED,True,1260,64,13,https://github.com/krnowak,eos-updater-apply: Workaround failures during sysroot cleanup,18,[],https://github.com/endlessm/eos-updater/pull/98,https://github.com/krnowak,3,https://github.com/endlessm/eos-updater/pull/98#issuecomment-308038981,"The sysroot cleanup happens after the successful deployment. The
failures are likely the result of the concurrent prunes that happened
earlier.
So tell ostree to skip cleanup and perform it ourselves later, so we
can simply log an error, but still report a success as the ""apply""
command is mostly about creating a new deployment, not doing the
cleanup.
https://phabricator.endlessm.com/T16958",I'm working on it.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,98,2017-06-02T13:27:03Z,2017-06-20T16:09:27Z,2017-06-20T16:09:27Z,MERGED,True,1260,64,13,https://github.com/krnowak,eos-updater-apply: Workaround failures during sysroot cleanup,18,[],https://github.com/endlessm/eos-updater/pull/98,https://github.com/krnowak,4,https://github.com/endlessm/eos-updater/pull/98#issuecomment-308696709,"The sysroot cleanup happens after the successful deployment. The
failures are likely the result of the concurrent prunes that happened
earlier.
So tell ostree to skip cleanup and perform it ourselves later, so we
can simply log an error, but still report a success as the ""apply""
command is mostly about creating a new deployment, not doing the
cleanup.
https://phabricator.endlessm.com/T16958",Updated.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,99,2017-06-12T21:00:25Z,2017-06-12T21:10:47Z,2017-06-12T21:18:08Z,MERGED,True,1,0,1,https://github.com/GeorgesStavracas,Add ostree-tests as a build dependency,1,[],https://github.com/endlessm/eos-updater/pull/99,https://github.com/GeorgesStavracas,1,https://github.com/endlessm/eos-updater/pull/99,"The tests of eos-updater package depend on
ostree-trivial-httpd, which is provided by
ostree-test package.
This commit adds ostree-test as a build-time
dependency, so that Jenkins build passes all
the tests.
https://phabricator.endlessm.com/T17204","The tests of eos-updater package depend on
ostree-trivial-httpd, which is provided by
ostree-test package.
This commit adds ostree-test as a build-time
dependency, so that Jenkins build passes all
the tests.
https://phabricator.endlessm.com/T17204",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,99,2017-06-12T21:00:25Z,2017-06-12T21:10:47Z,2017-06-12T21:18:08Z,MERGED,True,1,0,1,https://github.com/GeorgesStavracas,Add ostree-tests as a build dependency,1,[],https://github.com/endlessm/eos-updater/pull/99,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/99#issuecomment-307930375,"The tests of eos-updater package depend on
ostree-trivial-httpd, which is provided by
ostree-test package.
This commit adds ostree-test as a build-time
dependency, so that Jenkins build passes all
the tests.
https://phabricator.endlessm.com/T17204","Might also be needed as a runtime dependency of eos-updater-tests, but I'll leave that to @pwithnall. I can't tell if the installed tests actually run trivial-httpd or not.

It doesn’t need to be a runtime dependency — the tests which spawn it are uninstalled-only at the moment.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,100,2017-06-20T15:20:20Z,2017-06-21T10:55:43Z,2017-06-21T16:18:07Z,MERGED,True,11,1,3,https://github.com/pwithnall,src: Add a new error code for errors during fetching updates,1,[],https://github.com/endlessm/eos-updater/pull/100,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/100,"Override all unknown errors while fetching with the new code. This
should make failures a bit easier to read.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T17616","Override all unknown errors while fetching with the new code. This
should make failures a bit easier to read.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T17616",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,101,2017-08-14T19:14:44Z,2017-08-30T23:47:47Z,2017-09-08T12:04:49Z,MERGED,True,2802,72,14,https://github.com/mwleeds,new DNS-SD records (continued from #95),17,[],https://github.com/endlessm/eos-updater/pull/101,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/101,"This is a continuation of PR #95 since I don't have write access to the branch on that one. After CR/QA, the fixup commits need to be squashed and the commit message on f3cf6b5 should be updated, then this can be merged.","This is a continuation of PR #95 since I don't have write access to the branch on that one. After CR/QA, the fixup commits need to be squashed and the commit message on f3cf6b5 should be updated, then this can be merged.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,101,2017-08-14T19:14:44Z,2017-08-30T23:47:47Z,2017-09-08T12:04:49Z,MERGED,True,2802,72,14,https://github.com/mwleeds,new DNS-SD records (continued from #95),17,[],https://github.com/endlessm/eos-updater/pull/101,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/101#issuecomment-322629049,"This is a continuation of PR #95 since I don't have write access to the branch on that one. After CR/QA, the fixup commits need to be squashed and the commit message on f3cf6b5 should be updated, then this can be merged.","I've addressed @pwithnall's review comments, and I've seen ostree accept the records generated by this code, so perhaps this could be merged.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,101,2017-08-14T19:14:44Z,2017-08-30T23:47:47Z,2017-09-08T12:04:49Z,MERGED,True,2802,72,14,https://github.com/mwleeds,new DNS-SD records (continued from #95),17,[],https://github.com/endlessm/eos-updater/pull/101,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/101#issuecomment-322795756,"This is a continuation of PR #95 since I don't have write access to the branch on that one. After CR/QA, the fixup commits need to be squashed and the commit message on f3cf6b5 should be updated, then this can be merged.","Apart from the one remaining review comment, this looks good to me. When you fix that one, please squash all the fixups (git rebase -i --autosquash), since github doesn’t do that automatically for us when we merge. Then I should be able to just hit the merge button on the branch.
However, note that it can’t be merged until https://phabricator.endlessm.com/T16919 is fixed and we have the updated libostree package in EOS OBS, since we depend on the fix for ostreedev/ostree#1069, right?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,101,2017-08-14T19:14:44Z,2017-08-30T23:47:47Z,2017-09-08T12:04:49Z,MERGED,True,2802,72,14,https://github.com/mwleeds,new DNS-SD records (continued from #95),17,[],https://github.com/endlessm/eos-updater/pull/101,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/101#issuecomment-322894612,"This is a continuation of PR #95 since I don't have write access to the branch on that one. After CR/QA, the fixup commits need to be squashed and the commit message on f3cf6b5 should be updated, then this can be merged.",Alright I did the squashing and cleaned up Krnowak's last commit. So now this has to wait for ostreedev/ostree#1069 and T16919.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,102,2017-08-17T19:51:43Z,2017-08-18T18:44:03Z,2017-08-18T18:44:19Z,MERGED,True,718,181,8,https://github.com/pwithnall,euu/config: Expand config API to support per-key fallbacks,4,[],https://github.com/endlessm/eos-updater/pull/102,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/102,"This includes two trivial commits to fix some compiler warnings (one potentially impactful) which I spotted while working on this.
https://phabricator.endlessm.com/T18308","This includes two trivial commits to fix some compiler warnings (one potentially impactful) which I spotted while working on this.
https://phabricator.endlessm.com/T18308",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,102,2017-08-17T19:51:43Z,2017-08-18T18:44:03Z,2017-08-18T18:44:19Z,MERGED,True,718,181,8,https://github.com/pwithnall,euu/config: Expand config API to support per-key fallbacks,4,[],https://github.com/endlessm/eos-updater/pull/102,https://github.com/cosimoc,2,https://github.com/endlessm/eos-updater/pull/102#issuecomment-323431628,"This includes two trivial commits to fix some compiler warnings (one potentially impactful) which I spotted while working on this.
https://phabricator.endlessm.com/T18308","@mwleeds has a lot on his plate and was happy with my review, so merging this.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,103,2017-08-21T20:26:50Z,2017-08-21T21:13:12Z,2017-08-22T08:16:27Z,MERGED,True,287,41,16,https://github.com/pwithnall,T18308 — fix tests to work with uninstalled config files,2,[],https://github.com/endlessm/eos-updater/pull/103,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/103,"Also improve the debug output from one of the integration tests to make this actually diagnosable in future.
Requesting review from @cosimoc and @mwleeds, but feel free to split it or delegate it amongst yourselves as per your current workloads. Thanks!
https://phabricator.endlessm.com/T18308","Also improve the debug output from one of the integration tests to make this actually diagnosable in future.
Requesting review from @cosimoc and @mwleeds, but feel free to split it or delegate it amongst yourselves as per your current workloads. Thanks!
https://phabricator.endlessm.com/T18308",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,104,2017-09-08T22:45:12Z,2017-09-08T22:56:12Z,2017-09-11T08:06:17Z,MERGED,True,0,2,1,https://github.com/mwleeds,eos-updater-poll-common: Remove unused variables,1,[],https://github.com/endlessm/eos-updater/pull/104,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/104,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,104,2017-09-08T22:45:12Z,2017-09-08T22:56:12Z,2017-09-11T08:06:17Z,MERGED,True,0,2,1,https://github.com/mwleeds,eos-updater-poll-common: Remove unused variables,1,[],https://github.com/endlessm/eos-updater/pull/104,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/104#issuecomment-328451130,,"Looks good, although it would be best to wait for review (even on trivial patches) before pushing. :-)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,105,2017-09-11T09:48:27Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,6205,221,40,https://github.com/smspillaz,T16682,24,[],https://github.com/endlessm/eos-updater/pull/105,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/105,"Add a mechanism to automatically install a list of flatpaks specified within the OSTree at /usr/share/eos-application-tools/flatpak-autoinstall.d/*. The flatpaks are pulled into the local repository first and a list of pending deployments is written at /var/lib/eos-updater/$checksum/to-export, where they will be deployed on boot once an OSTree image with that checksum has been booted.
https://phabricator.endlessm.com/T16682","Add a mechanism to automatically install a list of flatpaks specified within the OSTree at /usr/share/eos-application-tools/flatpak-autoinstall.d/*. The flatpaks are pulled into the local repository first and a list of pending deployments is written at /var/lib/eos-updater/$checksum/to-export, where they will be deployed on boot once an OSTree image with that checksum has been booted.
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,105,2017-09-11T09:48:27Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,6205,221,40,https://github.com/smspillaz,T16682,24,[],https://github.com/endlessm/eos-updater/pull/105,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/105#issuecomment-332485157,"Add a mechanism to automatically install a list of flatpaks specified within the OSTree at /usr/share/eos-application-tools/flatpak-autoinstall.d/*. The flatpaks are pulled into the local repository first and a list of pending deployments is written at /var/lib/eos-updater/$checksum/to-export, where they will be deployed on boot once an OSTree image with that checksum has been booted.
https://phabricator.endlessm.com/T16682","Let me know when this is ready for re-review. Eventually, there’s going to have to be a lot of squashing of all the fixup commits into a few atomic commits to keep the revision history legible and each to dig through in future.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,105,2017-09-11T09:48:27Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,6205,221,40,https://github.com/smspillaz,T16682,24,[],https://github.com/endlessm/eos-updater/pull/105,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/105#issuecomment-332704416,"Add a mechanism to automatically install a list of flatpaks specified within the OSTree at /usr/share/eos-application-tools/flatpak-autoinstall.d/*. The flatpaks are pulled into the local repository first and a list of pending deployments is written at /var/lib/eos-updater/$checksum/to-export, where they will be deployed on boot once an OSTree image with that checksum has been booted.
https://phabricator.endlessm.com/T16682","Only thing I have left to do is s/if (foo)/if (foo != NULL)/g and squash, though I'm minded to do that at the end once we're happy with the approach for this iteration",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,105,2017-09-11T09:48:27Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,6205,221,40,https://github.com/smspillaz,T16682,24,[],https://github.com/endlessm/eos-updater/pull/105,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/105#issuecomment-343044505,"Add a mechanism to automatically install a list of flatpaks specified within the OSTree at /usr/share/eos-application-tools/flatpak-autoinstall.d/*. The flatpaks are pulled into the local repository first and a list of pending deployments is written at /var/lib/eos-updater/$checksum/to-export, where they will be deployed on boot once an OSTree image with that checksum has been booted.
https://phabricator.endlessm.com/T16682","Okay added some more of the feature spec to the branch:

Filters for locales, ~locales and architectures (note that locale filtering really depends on what we want to do with flatpak/flatpak#1156
Manpage for eos-updater-flatpak-autoinstall.d
Updated other manpages
More verbose logging
Moved the flatpak pulling into the fetch step, dropped error path to drop old refs.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,105,2017-09-11T09:48:27Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,6205,221,40,https://github.com/smspillaz,T16682,24,[],https://github.com/endlessm/eos-updater/pull/105,https://github.com/smspillaz,5,https://github.com/endlessm/eos-updater/pull/105#issuecomment-343435800,"Add a mechanism to automatically install a list of flatpaks specified within the OSTree at /usr/share/eos-application-tools/flatpak-autoinstall.d/*. The flatpaks are pulled into the local repository first and a list of pending deployments is written at /var/lib/eos-updater/$checksum/to-export, where they will be deployed on boot once an OSTree image with that checksum has been booted.
https://phabricator.endlessm.com/T16682","On Fri, Nov 10, 2017 at 7:59 AM, Philip Withnall ***@***.***> wrote:
 ***@***.**** requested changes on this pull request.

 Here’s part one of my review. I’ve got as far as the start of
 eos-updater-flatpak-installer/main.c and will continue tomorrow. Could
 you please push fixes as fixups (git commit --fixup) so github doesn’t
 lose the review context. It looks like the branch will need a bit of
 squashing before it gets merged anyway.
 ------------------------------

 In Makefile.am
 <#105 (comment)>:

 > @@ -60,12 +60,36 @@ AM_CPPFLAGS = \
  # Utility library
  noinst_LTLIBRARIES += ***@***.******@***.***

 +enum_header_files = \
 +	libeos-updater-util/flatpak.h \
 +	eos-updater-flatpak-installer/installer.h \
 +	$(NULL)
 +enum_template_h_file = libeos-updater-util/enums.h.in
 +enum_template_c_file = libeos-updater-util/enums.c.in
 +enum_sources = \
 +	libeos-updater-util/enums.h \
 +	libeos-updater-util/enums.c \
 +	$(NULL)
 +
 +# FIXME: We can't use the --output switch as documented in https://git.gnome.org/browse/glib/commit/?id=cd97f93bf7c44cb5736f6cbcb4db773ca592e462

 Why not? (You might have answered this before, but I’ve forgotten.)

 If we can’t use --output, then the rule has to change to:

 $(AM_V_GEN)$(GLIB_MKENUMS) … > ***@***.*** && mv ***@***.*** $@

 Otherwise $@ gets written in chunks, and can end up being read by the
 compiler while it’s still being written (if using parallel make). The mv
 makes sure it appears at its final path atomically. Same for the other
 $(GLIB_MKENUMS) rule.

 Isn’t automake fun? 🥇

Decided to just use --output 🤓

 ------------------------------

 In Makefile.am
 <#105 (comment)>:

 > @@ -132,7 +163,10 @@ systemdsystemunit_DATA += $(eos_updater_avahi_in:%.in=%)
  EXTRA_DIST += $(eos_updater_avahi_in)
  CLEANFILES += $(eos_updater_avahi_in:%.in=%)

 -dist_man8_MANS += eos-updater-avahi/docs/eos-updater-avahi.8
 +dist_man8_MANS += \
 +	eos-updater-avahi/docs/eos-updater-avahi.8 \
 +	eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8 \

 Please put these eos-updater-flatpak-installer additions in their own
 section. See how there’s a comment #eos-update-server program followed by
 a load of += appends for files which are specific to eos-update-server
 (and *only* eos-update-server). eos-updater-flatpak-installer should be
 in its own section like this.

 (This is an attempt to bring the good bits of recursive automake (i.e.
 separate Makefile.am for each program) into non-recursive automake.)
 ------------------------------

 In Makefile.am
 <#105 (comment)>:

 > @@ -235,6 +269,30 @@ dist_bin_SCRIPTS += eos-updater-prepare-volume/eos-updater-prepare-volume

  dist_man8_MANS += eos-updater-prepare-volume/docs/eos-updater-prepare-volume.8

 +# eos-updater-install-flatpaks program

 s/eos-updater-install-flatpaks/eos-updater-flatpak-installer/
 ------------------------------

 In configure.ac
 <#105 (comment)>:

 > @@ -119,11 +129,21 @@ AS_IF([test ""$GPG"" = """"],[
  	AC_MSG_ERROR([gpg is required for tests])
  ])

 +AC_PATH_PROG([FLATPAK],[flatpak])
 +AS_IF([test ""$FLATPAK"" = """"],[
 +	AC_MSG_ERROR([flatpak is required for tests])

 Maybe s/flatpak/flatpak command line program/ to make it more obvious this
 doesn’t mean libflatpak.
 ------------------------------

 In data/Makefile.am
 <#105 (comment)>:

 > @@ -48,6 +49,7 @@ CLEANFILES = $(systemdsystemunit_DATA)
  dist_man5_MANS = \
  	docs/eos-autoupdater.conf.5 \
  	docs/eos-updater.conf.5 \
 +	docs/eos-updater-flatpak-autoinstall.d.5 \

 I think this file would be best in eos-updater-flatpak-installer/docs/.

 (I’m trying to slowly move away from, and eventually eliminate, the data/
 directory.)
 ------------------------------

 In data/Makefile.am
 <#105 (comment)>:

 > @@ -18,6 +18,7 @@ eos_autoupdater_in = \
  	eos-autoupdater.service.in \
  	eos-autoupdater.timer.in \
  	eos-updater.service.in \
 +	eos-updater-flatpak-installer.service.in \

 I think this file would be best in eos-updater-flatpak-installer/.

 (I’m trying to slowly move away from, and eventually eliminate, the data/
 directory.)
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > @@ -0,0 +1,122 @@
 +.\"" Manpage for eos-updater-flatpak-autoinstall.d.5.
 +.\"" Documentation is under the same licence as the eos-updater package.
 +.TH man 5 ""8 Nov 2017"" ""1.0"" ""eos\-updater\-flatpak\-autoinstall.d man page""
 +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater - Configuration for flatpak installation on updates
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP

 What’s the point in the override/ directory? Shouldn’t this just be
 /var/lib/eos-application-tools/flatpak-autoinstall.d (that’s what the
 design doc says)?

 Note the design doc says eos-application-tools rather than eos-updater.
 Either is fine by me, but we should be consistent between the
 implementation and design doc.

Ah, in the past I had that since we were mirroring the state of the two
files between /var/lib/ and /usr/share ... Now that we have the keyfile we
can drop the override/ part.
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > @@ -0,0 +1,122 @@
 +.\"" Manpage for eos-updater-flatpak-autoinstall.d.5.
 +.\"" Documentation is under the same licence as the eos-updater package.
 +.TH man 5 ""8 Nov 2017"" ""1.0"" ""eos\-updater\-flatpak\-autoinstall.d man page""
 +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater - Configuration for flatpak installation on updates
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 +.br
 +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP

 The /etc directory is missing from this list.

Ah good point. What priority should it take? I'm assuming lower priority
than the one in /var for now?
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > @@ -0,0 +1,122 @@
 +.\"" Manpage for eos-updater-flatpak-autoinstall.d.5.
 +.\"" Documentation is under the same licence as the eos-updater package.
 +.TH man 5 ""8 Nov 2017"" ""1.0"" ""eos\-updater\-flatpak\-autoinstall.d man page""
 +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater - Configuration for flatpak installation on updates

 How about eos\-updater\-flatpak\-autoinstall.d — Endless OS Configuration
 for Flatpak Installation on Updates to avoid the second em-dash (and keep
 the capitalisation consistent with other man pages).
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater - Configuration for flatpak installation on updates
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 +.br
 +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of ""flatpak ref action""
 +files, which specify flatpaks that should be installed and removed

 installed, updated or uninstalled

------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater - Configuration for flatpak installation on updates
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 +.br
 +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of ""flatpak ref action""

 s/""flatpak ref action""/‘flatpak ref action’/

 (curly single quotes please)
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 +.br
 +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of ""flatpak ref action""
 +files, which specify flatpaks that should be installed and removed
 +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a new deployment.
 +.PP
 +The directories listed

 Spurious start of a sentence here?
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.\""
 +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 +.br
 +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of ""flatpak ref action""
 +files, which specify flatpaks that should be installed and removed
 +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a new deployment.
 +.PP
 +The directories listed
 +The configuration file contains a mandatory section, \fI[Download]\fP, and an
 +optional per\-source section, \fI[Source ""volume""]\fP, whose keys are described
 +below.

 This paragraph looks like a copy-paste error from another man page.
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of ""flatpak ref action""
 +files, which specify flatpaks that should be installed and removed
 +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a new deployment.
 +.PP
 +The directories listed
 +The configuration file contains a mandatory section, \fI[Download]\fP, and an
 +optional per\-source section, \fI[Source ""volume""]\fP, whose keys are described
 +below.
 +.PP
 +Configuration files take priority over each other in the directory order
 +listed above. If a file in a higher priority directory has the same basename

 Is the list above in ascending or descending order?
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.\""
 +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of ""flatpak ref action""
 +files, which specify flatpaks that should be installed and removed
 +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a new deployment.
 +.PP
 +The directories listed
 +The configuration file contains a mandatory section, \fI[Download]\fP, and an
 +optional per\-source section, \fI[Source ""volume""]\fP, whose keys are described
 +below.
 +.PP
 +Configuration files take priority over each other in the directory order
 +listed above. If a file in a higher priority directory has the same basename
 +as a file in a lower priority directory, only the configuration from
 +the higher priority directory is used. The list of actions to apply is
 +determined by appending all the new actions in each filename in
 +lexicographical order. This means that the most up-to-date action in

 The wording here is unclear as to whether you mean:

 actions = [sort(file_actions) for file_actions in filenames]

 or

 actions = [file_actions for file_actions in sort(filenames)]

 How about something like “The list of actions to apply is determined by
 sorting the filenames lexicographically, then concatenating all their lists
 of actions.”? Although this doesn’t mention the filter-by-serial-number,
 sort-by-serial-number, or filter-by-filters steps from §(Order of applying
 entries from autoinstall lists) in the design document. Maybe we could just
 copy the wording and bullet point list from that to here, with some minor
 editing?
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.PP
 +The directories listed
 +The configuration file contains a mandatory section, \fI[Download]\fP, and an
 +optional per\-source section, \fI[Source ""volume""]\fP, whose keys are described
 +below.
 +.PP
 +Configuration files take priority over each other in the directory order
 +listed above. If a file in a higher priority directory has the same basename
 +as a file in a lower priority directory, only the configuration from
 +the higher priority directory is used. The list of actions to apply is
 +determined by appending all the new actions in each filename in
 +lexicographical order. This means that the most up-to-date action in
 +a filename that is lexicographically ordered after the another filename
 +will take priority in the event that the two most up-to-date actions conflict,
 +even if the most up-to-date action in the lower-priority file has a newer
 +serial number.

 I think this last sentence is a bit too confusing. As long as the
 explanation of the algorithm above is clear enough, this kind of example
 shouldn’t be necessary.

I'd prefer to keep this in the documentation since it is a side effect that
might catch some people by surprise.
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.PP
 +Configuration files take priority over each other in the directory order
 +listed above. If a file in a higher priority directory has the same basename
 +as a file in a lower priority directory, only the configuration from
 +the higher priority directory is used. The list of actions to apply is
 +determined by appending all the new actions in each filename in
 +lexicographical order. This means that the most up-to-date action in
 +a filename that is lexicographically ordered after the another filename
 +will take priority in the event that the two most up-to-date actions conflict,
 +even if the most up-to-date action in the lower-priority file has a newer
 +serial number.
 +.\""
 +.SH ACTION SPECIFICATION
 +.IX Header ""FILE FORMAT""
 +.\""
 +The file format of each ""flatpak ref action"" file in a

 Single curly quotes here please too.
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.PP
 +Configuration files take priority over each other in the directory order
 +listed above. If a file in a higher priority directory has the same basename
 +as a file in a lower priority directory, only the configuration from
 +the higher priority directory is used. The list of actions to apply is
 +determined by appending all the new actions in each filename in
 +lexicographical order. This means that the most up-to-date action in
 +a filename that is lexicographically ordered after the another filename
 +will take priority in the event that the two most up-to-date actions conflict,
 +even if the most up-to-date action in the lower-priority file has a newer
 +serial number.
 +.\""
 +.SH ACTION SPECIFICATION
 +.IX Header ""FILE FORMAT""
 +.\""
 +The file format of each ""flatpak ref action"" file in a

 And in all the other bits of the file which aren’t demonstrating JSON
 syntax.
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +listed above. If a file in a higher priority directory has the same basename
 +as a file in a lower priority directory, only the configuration from
 +the higher priority directory is used. The list of actions to apply is
 +determined by appending all the new actions in each filename in
 +lexicographical order. This means that the most up-to-date action in
 +a filename that is lexicographically ordered after the another filename
 +will take priority in the event that the two most up-to-date actions conflict,
 +even if the most up-to-date action in the lower-priority file has a newer
 +serial number.
 +.\""
 +.SH ACTION SPECIFICATION
 +.IX Header ""FILE FORMAT""
 +.\""
 +The file format of each ""flatpak ref action"" file in a
 +\fBeos\-updater\-flatpak\-autoinstall.d(5)\fP directory is
 +RFC7159 compliant JSON. Each file must be a JSON array containing

 s/RFC7159/RFC\ 7159/ to get a non-breaking space in it.
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.IX Header ""FILE FORMAT""
 +.\""
 +The file format of each ""flatpak ref action"" file in a
 +\fBeos\-updater\-flatpak\-autoinstall.d(5)\fP directory is
 +RFC7159 compliant JSON. Each file must be a JSON array containing
 +objects describing a ""flatpak ref action"", as described below in
 +\fBFlatpak Ref Action\fP. These files are intended to be append-only
 +and the \fB""serial""\P property in each object must be a monotonically
 +increasing counter within the domain of that filename.
 +.\""
 +.IP ""\fIFlatpak Ref Action\fP""
 +.IX Flatpak Ref Action
 +.\""
 +A JSON object containing, at minimum, properties \fB""action""\fP,
 +\fB""serial""\fP and optionally \fB""filters""\fP. Valid values for
 +\fB""action""\fP are \fB""install""\fP, and \fB""uninstall""\fP, each having

 Plus update?

I should probably address this in the design doc (I thought I did, but
maybe it was never resolved). Does ""update"" makes much sense? Either the
flatpak is installed or it isn't?
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.IP ""\fIThe ""filters"" entry\fP""
 +.IX Action filters
 +.\""
 +A \fB""\fIFlatpak Ref Action\fP""\fP may have a \fB""filters""\fP entry which
 +is a JSON object with properties \fB""architectures""\fP, \fB""~architectures""\fP,
 +\fB""locales""\fP and \fB""~locales""\fP. Each filter property takes a JSON
 +array of strings containing architectures or locales to apply to the filter.
 +.\""
 +Where a filter is prefixed with a tilde (~), the action will not be applied
 +if the system architecture or locales matches any entry in the array. Otherwise,
 +the action will only be applied if the system architectures or locales matches
 +at least one entry in the array.
 +.\""
 +Where an action is filtered out and not applied, it will never be applied
 +again, even if the property being filtered on changes. For instance, if the
 +system locale changes, the action will not be applied on the next boot if

 Could simplify this sentence to “For instance, if the system locale
 changes, the action will not be re-evaluated to see if it matches the new
 locale.”
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +their own required properties as explained below. The only valid type
 +for \fB""serial""\fP, is an integer, which must be monotonically
 +increasing as new entries are appended to the file.
 +.\""
 +.IP ""\fIThe ""filters"" entry\fP""
 +.IX Action filters
 +.\""
 +A \fB""\fIFlatpak Ref Action\fP""\fP may have a \fB""filters""\fP entry which
 +is a JSON object with properties \fB""architectures""\fP, \fB""~architectures""\fP,
 +\fB""locales""\fP and \fB""~locales""\fP. Each filter property takes a JSON
 +array of strings containing architectures or locales to apply to the filter.
 +.\""
 +Where a filter is prefixed with a tilde (~), the action will not be applied
 +if the system architecture or locales matches any entry in the array. Otherwise,
 +the action will only be applied if the system architectures or locales matches
 +at least one entry in the array.

 I’m liking this man page description of the JSON so far, thanks.

 This paragraph could do with clarification of what architectures: [] and ~architectures:
 [] mean, since those are obvious corner cases. (Their behaviour is
 consistent with the above description, but not necessarily immediately
 obvious.)

(I still need to address this one, mental note)
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +Where an action is filtered out and not applied, it will never be applied
 +again, even if the property being filtered on changes. For instance, if the
 +system locale changes, the action will not be applied on the next boot if
 +it could have been applied were the locale the correct value when the action
 +were first applied.
 +.\""
 +.IP ""\fI""install"" actions\fP""
 +.IX Install action
 +.\""
 +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref Action\fP"" entry is
 +""\fB""install""\fP"", the action will describe a flatpak that should be
 +installed upon the next boot of the deployment in which the action was
 +introduced. The entry must have the additional properties ""\fB""app""\fP"",
 +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 +flatpak app ID, whether the flatpak is a runtime or an app and the
 +\fBPostree\fP(1) collection-id to install the app from. See

 s/collection-id/collection ID/

 (collection-id should only be used to format it when referring to config
 keys and other bits of code.)
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +again, even if the property being filtered on changes. For instance, if the
 +system locale changes, the action will not be applied on the next boot if
 +it could have been applied were the locale the correct value when the action
 +were first applied.
 +.\""
 +.IP ""\fI""install"" actions\fP""
 +.IX Install action
 +.\""
 +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref Action\fP"" entry is
 +""\fB""install""\fP"", the action will describe a flatpak that should be
 +installed upon the next boot of the deployment in which the action was
 +introduced. The entry must have the additional properties ""\fB""app""\fP"",
 +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 +flatpak app ID, whether the flatpak is a runtime or an app and the
 +\fBPostree\fP(1) collection-id to install the app from. See
 +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on flatpak app IDs,

 \fP and \fB are the wrong way round for ostree(1) here.

 (Hey, github does syntax highlighting for troff!)
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +system locale changes, the action will not be applied on the next boot if
 +it could have been applied were the locale the correct value when the action
 +were first applied.
 +.\""
 +.IP ""\fI""install"" actions\fP""
 +.IX Install action
 +.\""
 +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref Action\fP"" entry is
 +""\fB""install""\fP"", the action will describe a flatpak that should be
 +installed upon the next boot of the deployment in which the action was
 +introduced. The entry must have the additional properties ""\fB""app""\fP"",
 +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 +flatpak app ID, whether the flatpak is a runtime or an app and the
 +\fBPostree\fP(1) collection-id to install the app from. See
 +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on flatpak app IDs,
 +ref-kinds and collection-ids generally. If the flatpak is already installed

 s/collection-ids/collection IDs/
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.IP ""\fI""install"" actions\fP""
 +.IX Install action
 +.\""
 +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref Action\fP"" entry is
 +""\fB""install""\fP"", the action will describe a flatpak that should be
 +installed upon the next boot of the deployment in which the action was
 +introduced. The entry must have the additional properties ""\fB""app""\fP"",
 +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 +flatpak app ID, whether the flatpak is a runtime or an app and the
 +\fBPostree\fP(1) collection-id to install the app from. See
 +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on flatpak app IDs,
 +ref-kinds and collection-ids generally. If the flatpak is already installed
 +when the action is applied, \fBeos-updater-flatpak-installer\fP(8) will attempt
 +to upgrade it.
 +\.""
 +Note that flatpaks are not pulled from the collection-id upon booting into

 s/pulled from the collection-id/pulled from a remote/
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +.\""
 +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref Action\fP"" entry is
 +""\fB""install""\fP"", the action will describe a flatpak that should be
 +installed upon the next boot of the deployment in which the action was
 +introduced. The entry must have the additional properties ""\fB""app""\fP"",
 +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 +flatpak app ID, whether the flatpak is a runtime or an app and the
 +\fBPostree\fP(1) collection-id to install the app from. See
 +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on flatpak app IDs,
 +ref-kinds and collection-ids generally. If the flatpak is already installed
 +when the action is applied, \fBeos-updater-flatpak-installer\fP(8) will attempt
 +to upgrade it.
 +\.""
 +Note that flatpaks are not pulled from the collection-id upon booting into
 +the deployment, they are instead downloaded by \fBeos-updater\fP(8) during its
 +""fetch"" step whilst it prepares the commit to be deployed.

 s/""fetch""/‘fetch’/
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +flatpak app ID, whether the flatpak is a runtime or an app and the
 +\fBPostree\fP(1) collection-id to install the app from. See
 +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on flatpak app IDs,
 +ref-kinds and collection-ids generally. If the flatpak is already installed
 +when the action is applied, \fBeos-updater-flatpak-installer\fP(8) will attempt
 +to upgrade it.
 +\.""
 +Note that flatpaks are not pulled from the collection-id upon booting into
 +the deployment, they are instead downloaded by \fBeos-updater\fP(8) during its
 +""fetch"" step whilst it prepares the commit to be deployed.
 +\.""
 +.IP ""\fI""uninstall"" actions\fP""
 +.IX Uninstall action
 +.\""
 +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref Action\fP"" entry is
 +""\fB""unnistall""\fP"", the action will describe a flatpak that should be

 Typo: uninstall
 ------------------------------

 In data/docs/eos-updater-flatpak-autoinstall.d.5
 <#105 (comment)>:

 > +\.""
 +Note that flatpaks are not pulled from the collection-id upon booting into
 +the deployment, they are instead downloaded by \fBeos-updater\fP(8) during its
 +""fetch"" step whilst it prepares the commit to be deployed.
 +\.""
 +.IP ""\fI""uninstall"" actions\fP""
 +.IX Uninstall action
 +.\""
 +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref Action\fP"" entry is
 +""\fB""unnistall""\fP"", the action will describe a flatpak that should be
 +uninstalled upon the next boot of the deployment in which the action was
 +introduced. The entry must have the additional properties ""\fB""app""\fP"",
 +""\fB""ref-kind""\fP"". It is not an error if the flatpak is already uninstalled
 +when the action is applied.
 +\.""
 +.SH ""SEE ALSO""

 It would be useful to include an EXAMPLES section with a short example
 JSON file in (could use the one from the §(Autoinstall files) section of
 the design doc).
 ------------------------------

 In data/eos-updater-autoinstall.schema.json
 <#105 (comment)>:

 > @@ -0,0 +1,138 @@
 +{
 +    ""$comment"": ""Copyright (c) 2017 Endless Mobile, Inc. This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street <https://maps.google.com/?q=51+Franklin+Street&entry=gmail&source=g>, Fifth Floor, Boston, MA  02110-1301  USA."",
 +    ""$schema"": ""http://json-schema.org/draft-06/schema#"",
 +    ""type"": ""object"",
 +    ""title"": ""Autoinstall Flatpak Entry"",
 +    ""description"": ""A description of an action to be performed by the system updater when updating to a given OSTree revision"",
 +    ""oneOf"": [
 +        {
 +            ""properties"": {

 Missing required for install
 ------------------------------

 In data/eos-updater-autoinstall.schema.json
 <#105 (comment)>:

 > +                    ""description"": ""The app-id to be installed"",
 +                    ""$ref"": ""#/definitions/app""
 +                },
 +                ""collection-id"": {
 +                    ""$ref"": ""#/definitions/collection-id""
 +                }
 +            }
 +        },
 +        {
 +            ""properties"": {
 +                ""action"": {
 +                    ""const"": ""uninstall"",
 +                    ""description"": ""The machine-readable type of event"",
 +                    ""type"": ""string""
 +                },
 +                ""remote"": {

 uninstall doesn’t need remote, right?
 ------------------------------

 In data/eos-updater-autoinstall.schema.json
 <#105 (comment)>:

 > +                ""action"": {
 +                    ""const"": ""uninstall"",
 +                    ""description"": ""The machine-readable type of event"",
 +                    ""type"": ""string""
 +                },
 +                ""remote"": {
 +                    ""description"": ""The remote to install the app from"",
 +                    ""type"": ""string""
 +                }
 +            },
 +            ""required"": [""ref-kind"", ""app"", ""remote""]
 +        }
 +    ],
 +    ""required"": [""action"", ""serial""],
 +    ""definitions"": {
 +        ""filters"": {

 #/definitions/filters exists twice in this dictionary.
 ------------------------------

 In data/eos-updater-autoinstall.schema.json
 <#105 (comment)>:

 > +            ""type"": ""integer""
 +        },
 +        ""ref-kind"": {
 +            ""description"": ""The flatpak ref kind"",
 +            ""type"": ""string"",
 +            ""enum"": [""app"", ""runtime""]
 +        },
 +        ""app"": {
 +            ""description"": ""The app-id to be installed"",
 +            ""type"": ""string""
 +        },
 +        ""collection-id"": {
 +            ""description"": ""The collection-id to install the app from"",
 +            ""type"": ""string""
 +        },
 +        ""filters"": {

 This subschema doesn’t look right at all. Copy-paste error?
 ------------------------------

 In data/eos-updater-autoinstall.schema.json
 <#105 (comment)>:

 > +                    ""$ref"": ""#/definitions/serial""
 +                },
 +                ""filters"": {
 +                    ""$ref"": ""#/definitions/filters""
 +                },
 +                ""ref-kind"": {
 +                    ""$ref"": ""#/definitions/ref-kind""
 +                },
 +                ""app"": {
 +                    ""$ref"": ""#/definitions/app""
 +                }
 +            }
 +        }
 +    },
 +    ""required"": [""action"", ""serial"", ""detail""],
 +    ""definitions"": {

 Seems definitions is declared twice? Are these multiple copy-paste errors
 here, or am I mis-parsing this in my head (indentation might be off?)?

Oh man, this file has been rebased so many times that has been clobbered up
badly. I spent some time to fix it up in a single fixup commit.
 ------------------------------

 In data/eos-updater-autoinstall.schema.json
 <#105 (comment)>:

 > +            ""type"": ""string"",
 +            ""enum"": [""app"", ""runtime""]
 +        },
 +        ""app"": {
 +            ""description"": ""The app-id to be installed"",
 +            ""type"": ""string""
 +        },
 +        ""filters"": {
 +            ""type"": ""object"",
 +            ""title"": ""Filters to apply to action"",
 +            ""description"": ""Tests to apply to see if action should be applied or skipped"",
 +            ""properties"": {
 +                ""~architectures"": {
 +                    ""description"": ""Which architectures forbid performing this action on"",
 +                    ""type"": ""array"",
 +                    ""minItems"": 1,

 ~architectures can legitimately be empty (it would be a weird autoinstall
 entry, but it’s valid)
 ------------------------------

 In data/eos-updater-flatpak-installer.service.in
 <#105 (comment)>:

 > +Description=Endless OS Automatic Updater - Post Boot Flatpak Installer
 +Wants=local-fs.target
 +After=local-fs.target
 +ConditionKernelCommandLine=!eos-updater-disable
 +
 +# Only on updates
 +Before=multi-user.target systemd-update-done.service
 +ConditionNeedsUpdate=/var
 +
 +[Service]
 +Type=oneshot
 +RemainAfterExit=true
 ***@***.***@/eos-updater-flatpak-installer
 +
 +# Sandboxing
 +# FIXME: Enable more of these options once we have systemd > 229

 FIXME can be dropped, because we have systemd > 229, and you *have*
 enabled more of these options.
 ------------------------------

 In data/eos-updater-flatpak-installer.service.in
 <#105 (comment)>:

 > +Environment=GSETTINGS_BACKEND=memory
 +MemoryDenyWriteExecute=yes
 +NoNewPrivileges=yes
 +PrivateDevices=yes
 +PrivateNetwork=yes
 +PrivateTmp=yes
 +PrivateUsers=yes
 +ProtectControlGroups=yes
 +ProtectHome=yes
 +ProtectKernelModules=yes
 +ProtectKernelTunables=yes
 +ProtectSystem=no
 +RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6
 +RestrictRealtime=yes
 +SystemCallErrorNumber=EPERM
 ***@***.*** @io-event @ipc @network-io @aio @process

 Does it really use @aio and @process?
 ------------------------------

 In data/eos-updater-flatpak-installer.service.in
 <#105 (comment)>:

 > +Environment=GVFS_REMOTE_VOLUME_MONITOR_IGNORE=1
 +Environment=GSETTINGS_BACKEND=memory
 +MemoryDenyWriteExecute=yes
 +NoNewPrivileges=yes
 +PrivateDevices=yes
 +PrivateNetwork=yes
 +PrivateTmp=yes
 +PrivateUsers=yes
 +ProtectControlGroups=yes
 +ProtectHome=yes
 +ProtectKernelModules=yes
 +ProtectKernelTunables=yes
 +ProtectSystem=no
 +RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6
 +RestrictRealtime=yes
 +SystemCallErrorNumber=EPERM

 Using SystemCallErrorNumber= is a good call.
 ------------------------------

 In debian/eos-updater.install
 <#105 (comment)>:

 >  usr/share/man/man8/eos-updater.8
 +usr/share/man/man8/eos-update-server.8
 +usr/share/man/man8/eos-updater-avahi.8

 Why reorder the files in the list here? Doesn’t seem like it’s moving to
 be more alphabetically ordered.

Oh wow, maybe I read all that in the wrong way :S I'll try and give it some
sort of alphabetical order ... though maybe in another commit.
 ------------------------------

 In Makefile.am
 <#105 (comment)>:

 > @@ -60,12 +60,36 @@ AM_CPPFLAGS = \
  # Utility library
  noinst_LTLIBRARIES += ***@***.******@***.***

 +enum_header_files = \
 +	libeos-updater-util/flatpak.h \
 +	eos-updater-flatpak-installer/installer.h \
 +	$(NULL)
 +enum_template_h_file = libeos-updater-util/enums.h.in
 +enum_template_c_file = libeos-updater-util/enums.c.in
 +enum_sources = \
 +	libeos-updater-util/enums.h \
 +	libeos-updater-util/enums.c \
 +	$(NULL)
 +
 +# FIXME: We can't use the --output switch as documented in https://git.gnome.org/browse/glib/commit/?id=cd97f93bf7c44cb5736f6cbcb4db773ca592e462

 Ah, it was because --output didn’t work if the target file didn’t exist.

 I’ve merged your patch for that to endlessm/glib, so it should be OK to
 use here now. Thanks.
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > @@ -0,0 +1,92 @@
 +.\"" Manpage for eos-updater-flatpak-installer.
 +.\"" Documentation is under the same licence as the eos-updater package.
 +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer man page""

 Installing them should be a matter of putting them in the right directory
 (via Makefile.am and debian/*.install). They don’t need any
 post-processing on installation.

Not sure I understand this point - we already don't post process them?
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > @@ -0,0 +1,100 @@
 +.\"" Manpage for eos-updater-flatpak-installer.
 +.\"" Documentation is under the same licence as the eos-updater package.
 +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer man page""

 Note the date in the header of this man page needs updating.
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > @@ -0,0 +1,100 @@
 +.\"" Manpage for eos-updater-flatpak-installer.
 +.\"" Documentation is under the same licence as the eos-updater package.
 +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer man page""
 +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak Installer

 I suggest this changes to:

 eos\-updater\-flatpak\-installer — Endless OS Update Flatpak Installer

 so we don’t need the second em-dash.
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > @@ -0,0 +1,100 @@
 +.\"" Manpage for eos-updater-flatpak-installer.
 +.\"" Documentation is under the same licence as the eos-updater package.
 +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer man page""
 +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak Installer
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-pull\fB]

 You can drop the \fBs from before ] — they’re only needed if an argument
 takes a parameter, and in that case are paired with an \fP before the
 parameter.

(Still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer man page""
 +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak Installer
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-pull\fB]
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP installs downloaded flatpaks on Endless OS
 +updates upon rebooting into the new update. It is the part of the system that

 s/rebooting into the new update/booting into the new OS deployment/
 (terminology is a little more specific).

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.\""
 +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak Installer
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-pull\fB]
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP installs downloaded flatpaks on Endless OS
 +updates upon rebooting into the new update. It is the part of the system that
 +ensures that when new flatpaks are installed on OS Updates, they are

 s/Updates/updates/ (capitalisation)

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.SH NAME
 +.IX Header ""NAME""
 +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak Installer
 +.\""
 +.SH SYNOPSIS
 +.IX Header ""SYNOPSIS""
 +.\""
 +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-pull\fB]
 +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP installs downloaded flatpaks on Endless OS
 +updates upon rebooting into the new update. It is the part of the system that
 +ensures that when new flatpaks are installed on OS Updates, they are
 +installed ""seamlessly"", only appearing when rebooting into the new system.

 ‘seamlessly’ doesn’t really convey any information. How about:

 they are made available in the new OS deployment and not the old one, when rebooting into the new deployment.

 ?

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP installs downloaded flatpaks on Endless OS
 +updates upon rebooting into the new update. It is the part of the system that
 +ensures that when new flatpaks are installed on OS Updates, they are
 +installed ""seamlessly"", only appearing when rebooting into the new system.
 +.PP
 +.SH OPTIONS
 +.IX Header ""OPTIONS""
 +.\""
 +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 +Which mode to run the flatpak installer in. When set to \fBperform\fP, the
 +installer will examine the list of applications to install in
 +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,

 The reader doesn’t know what $(datadir) will be, so just hard-code it.
 (We could technically substitute it into the man page as part of the build
 process, but that’s too much faff to bother with.)

(still on my list )
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP installs downloaded flatpaks on Endless OS
 +updates upon rebooting into the new update. It is the part of the system that
 +ensures that when new flatpaks are installed on OS Updates, they are
 +installed ""seamlessly"", only appearing when rebooting into the new system.
 +.PP
 +.SH OPTIONS
 +.IX Header ""OPTIONS""
 +.\""
 +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 +Which mode to run the flatpak installer in. When set to \fBperform\fP, the
 +installer will examine the list of applications to install in
 +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,

 Also, don’t bother with the *: just ending the path with / signifies it’s
 a directory and it should be obvious you mean all the files in that
 directory.

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.\""
 +.SH DESCRIPTION
 +.IX Header ""DESCRIPTION""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP installs downloaded flatpaks on Endless OS
 +updates upon rebooting into the new update. It is the part of the system that
 +ensures that when new flatpaks are installed on OS Updates, they are
 +installed ""seamlessly"", only appearing when rebooting into the new system.
 +.PP
 +.SH OPTIONS
 +.IX Header ""OPTIONS""
 +.\""
 +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 +Which mode to run the flatpak installer in. When set to \fBperform\fP, the
 +installer will examine the list of applications to install in
 +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,

 Also, please format paths as \fI/path/blah/blah/\fP to make them stand
 out a bit from the surrounding prose.

(Still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded flatpaks on Endless OS
 +updates upon rebooting into the new update. It is the part of the system that
 +ensures that when new flatpaks are installed on OS Updates, they are
 +installed ""seamlessly"", only appearing when rebooting into the new system.
 +.PP
 +.SH OPTIONS
 +.IX Header ""OPTIONS""
 +.\""
 +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 +Which mode to run the flatpak installer in. When set to \fBperform\fP, the
 +installer will examine the list of applications to install in
 +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 +/var/lib/eos-updater/flatpak-autoinstall.d/override/* and the counter state
 +in /var/lib/eos-application-tools/flatpak-autoinstall.progress, then for each
 +basename, perform only newly updated actions and save the most up to date
 +serial number for each file in

 Sentence seems to end abruptly. Missing something?

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.PP
 +.SH OPTIONS
 +.IX Header ""OPTIONS""
 +.\""
 +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 +Which mode to run the flatpak installer in. When set to \fBperform\fP, the
 +installer will examine the list of applications to install in
 +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 +/var/lib/eos-updater/flatpak-autoinstall.d/override/* and the counter state
 +in /var/lib/eos-application-tools/flatpak-autoinstall.progress, then for each
 +basename, perform only newly updated actions and save the most up to date
 +serial number for each file in
 +\"".
 +When set to \fBstamp\fP, \fBeos\-updater\-flatpak\-installer\fP will only save
 +the updated actions to
 +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When set to

 \fIitalics around paths please\fP.

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.\""
 +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 +Which mode to run the flatpak installer in. When set to \fBperform\fP, the
 +installer will examine the list of applications to install in
 +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 +/var/lib/eos-updater/flatpak-autoinstall.d/override/* and the counter state
 +in /var/lib/eos-application-tools/flatpak-autoinstall.progress, then for each
 +basename, perform only newly updated actions and save the most up to date
 +serial number for each file in
 +\"".
 +When set to \fBstamp\fP, \fBeos\-updater\-flatpak\-installer\fP will only save
 +the updated actions to
 +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When set to
 +\fBcheck\fP, the tool will check to see if all actions are applied (e.g., that
 +applications that should have been installed are installed and every app that
 +should have been removed are removed).

 s/are/has been/

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +When set to \fBstamp\fP, \fBeos\-updater\-flatpak\-installer\fP will only save
 +the updated actions to
 +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When set to
 +\fBcheck\fP, the tool will check to see if all actions are applied (e.g., that
 +applications that should have been installed are installed and every app that
 +should have been removed are removed).
 +.\""
 +.IP ""\fB\-p\fP, \fB\-\-pull\fP""
 +Whether to pull flatpaks as well as deploying them. By default, flatpaks are
 +not pulled during this step, it is expected that they will be pulled by
 +\fBeos\-updater\fP(8) when it fetches and applies system updates.
 +.\""
 +.SH ""KERNEL COMMAND LINE""
 +.IX Header ""KERNEL COMMAND LINE""
 +.\""
 +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is started when

 \fBeos\-updater\-flatpak\-installer.service\fP

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +the updated actions to
 +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When set to
 +\fBcheck\fP, the tool will check to see if all actions are applied (e.g., that
 +applications that should have been installed are installed and every app that
 +should have been removed are removed).
 +.\""
 +.IP ""\fB\-p\fP, \fB\-\-pull\fP""
 +Whether to pull flatpaks as well as deploying them. By default, flatpaks are
 +not pulled during this step, it is expected that they will be pulled by
 +\fBeos\-updater\fP(8) when it fetches and applies system updates.
 +.\""
 +.SH ""KERNEL COMMAND LINE""
 +.IX Header ""KERNEL COMMAND LINE""
 +.\""
 +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is started when
 +the kernel command line contains \fPeos\-updater\-disable\fP, then

 \fIeos\-updater\-disable\fP (the convention I’ve been using is italics
 for literals which aren’t program or man page names, such as literals in
 config files)

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.IP ""\fB\-p\fP, \fB\-\-pull\fP""
 +Whether to pull flatpaks as well as deploying them. By default, flatpaks are
 +not pulled during this step, it is expected that they will be pulled by
 +\fBeos\-updater\fP(8) when it fetches and applies system updates.
 +.\""
 +.SH ""KERNEL COMMAND LINE""
 +.IX Header ""KERNEL COMMAND LINE""
 +.\""
 +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is started when
 +the kernel command line contains \fPeos\-updater\-disable\fP, then
 +it will have no effect.
 +.\""
 +.SH ""EXIT STATUS""
 +.IX Header ""EXIT STATUS""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP returns \fBEXIT_SUCCESS\fP in case of normal

 Please use the numeric values of these constants, since that’s what shell
 programmers will be checking for. :-(

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.\""
 +.SH ""KERNEL COMMAND LINE""
 +.IX Header ""KERNEL COMMAND LINE""
 +.\""
 +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is started when
 +the kernel command line contains \fPeos\-updater\-disable\fP, then
 +it will have no effect.
 +.\""
 +.SH ""EXIT STATUS""
 +.IX Header ""EXIT STATUS""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP returns \fBEXIT_SUCCESS\fP in case of normal
 +operation and \fBEXIT_FAILURE\fP in case a file was missing or we were unable
 +apply some actions. It also returns \fBEXIT_FAILURE\fP when \fB\-\-mode\fP is
 +set to \fBcheck\fP and flatpaks expected to be installed or removed are
 +not installed or removed.

 It would be good if the exit status could be used to differentiate between
 failure due to invalid arguments, and failure due to the system state not
 matching what check expects.

 See eos-update-server.8 for an example of this kind of thing. Listing the
 exit statuses as an itemised list makes it a bit easier to read.

(still on my list)
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.\""
 +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is started when
 +the kernel command line contains \fPeos\-updater\-disable\fP, then
 +it will have no effect.
 +.\""
 +.SH ""EXIT STATUS""
 +.IX Header ""EXIT STATUS""
 +.\""
 +\fBeos\-updater\-flatpak\-installer\fP returns \fBEXIT_SUCCESS\fP in case of normal
 +operation and \fBEXIT_FAILURE\fP in case a file was missing or we were unable
 +apply some actions. It also returns \fBEXIT_FAILURE\fP when \fB\-\-mode\fP is
 +set to \fBcheck\fP and flatpaks expected to be installed or removed are
 +not installed or removed.
 +.\""
 +.SH ""FILES""
 +.IX Header ""FILES""

 The /etc directory is missing from here.

 You could probably just list the directories without additional
 documentation here, and cross-link to the man page for the autoinstall list
 format, which describes the directories in a bit more detail. No point in
 duplicating the docs.
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +.IX Item ""/usr/share/eos-application-tools/flatpak-autoinstall.d/*""
 +Each of the files in this directory contain a list of actions to be applied
 +by the installer.
 +.\""
 +.IP \fI/var/lib/eos-application-tools/flatpak-autoinstall.d/*\fP 4
 +.IX Item ""/var/lib/eos-application-tools/flatpak-autoinstall.d/*""
 +Each of the files in this directory mirrors the files in
 +""/usr/share/eos-application-tools/flatpak-autoinstall.d/*"" and contains
 +a single number with the index of the most recently applied action (with
 +the assumption that all actions prior to that have been applied).
 +.\""
 +.\""
 +.SH ""SEE ALSO""
 +.IX Header ""SEE ALSO""
 +.\""
 +\fBeos\-updater\-service\fP(8),

 eos-updater-service isn’t a thing.
 ------------------------------

 In eos-updater-flatpak-installer/docs/eos-updater-flatpak-installer.8
 <#105 (comment)>:

 > +by the installer.
 +.\""
 +.IP \fI/var/lib/eos-application-tools/flatpak-autoinstall.d/*\fP 4
 +.IX Item ""/var/lib/eos-application-tools/flatpak-autoinstall.d/*""
 +Each of the files in this directory mirrors the files in
 +""/usr/share/eos-application-tools/flatpak-autoinstall.d/*"" and contains
 +a single number with the index of the most recently applied action (with
 +the assumption that all actions prior to that have been applied).
 +.\""
 +.\""
 +.SH ""SEE ALSO""
 +.IX Header ""SEE ALSO""
 +.\""
 +\fBeos\-updater\-service\fP(8),
 +\fBeos\-updater\fP(8),
 +\fBeos\-updater\-flatpak\-autoinstall.d\fP(5)

 Should probably add \fBflatpak\fP(1) to the bottom of this list.
 ------------------------------

 In eos-updater-flatpak-installer/installer.h
 <#105 (comment)>:

 > + *
 + * You should have received a copy of the GNU Lesser General Public
 + * License along with this library; if not, write to the Free Software
 + * Foundation, Inc., 51 Franklin Street <https://maps.google.com/?q=51+Franklin+Street&entry=gmail&source=g>, Fifth Floor, Boston, MA  02110-1301  USA
 + *
 + * Authors:
 + *  - Sam Spilsbury ***@***.***>
 + */
 +
 +#pragma once
 +
 +#include <glib.h>
 +
 +G_BEGIN_DECLS
 +
 +typedef enum {

 Nitpick: Missing a documentation comment. (Even for internal API, it’s
 useful for anyone editing the code.)
 ------------------------------

 In eos-updater-flatpak-installer/main.c
 <#105 (comment)>:

 > +  /* Include the usage. */
 +  help = g_option_context_get_help (context, TRUE, NULL);
 +  g_printerr (""%s: %s\n\n%s\n"", g_get_prgname (), formatted_message, help);
 +
 +  return 128;
 +}
 +
 +static const gchar *
 +get_datadir (void)
 +{
 +  return eos_updater_get_envvar_or (""EOS_UPDATER_TEST_OSTREE_DATADIR"",
 +                                    DATADIR);
 +}
 +
 +static GHashTable *
 +incoming_flatpak_ref_actions (GError **error)

 This should move out to a helper library.

I'm not sure if we should do this - since the fetch code needs to read from
the ostree commit and the flatpak installer needs to read from the actual
filesystem, the implementations are different enough to warrant a separate
implementation in each executable.
…
 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#105 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAvUjYXRB5Vq9E21pqefmcg3oirxW3Fnks5s05HvgaJpZM4PS55D>
 .


-- 
Sam Spilsbury  |  +61.417.121.217  |  Endless",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,105,2017-09-11T09:48:27Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,6205,221,40,https://github.com/smspillaz,T16682,24,[],https://github.com/endlessm/eos-updater/pull/105,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/105#issuecomment-343442678,"Add a mechanism to automatically install a list of flatpaks specified within the OSTree at /usr/share/eos-application-tools/flatpak-autoinstall.d/*. The flatpaks are pulled into the local repository first and a list of pending deployments is written at /var/lib/eos-updater/$checksum/to-export, where they will be deployed on boot once an OSTree image with that checksum has been booted.
https://phabricator.endlessm.com/T16682","On Fri, 2017-11-10 at 10:25 +0000, Sam Spilsbury wrote:
 On Fri, Nov 10, 2017 at 7:59 AM, Philip Withnall ***@***.***
 b.com>
 wrote:

 > ***@***.**** requested changes on this pull request.
 >
 > Here’s part one of my review. I’ve got as far as the start of
 > eos-updater-flatpak-installer/main.c and will continue tomorrow.
 Could
 > you please push fixes as fixups (git commit --fixup) so github
 doesn’t
 > lose the review context. It looks like the branch will need a bit
 of
 > squashing before it gets merged anyway.
 > ------------------------------
 >
 > In Makefile.am
 > <#105 (comment)
 4720>:
 >
 > > @@ -60,12 +60,36 @@ AM_CPPFLAGS = \
 > # Utility library
 > noinst_LTLIBRARIES += ***@***.***_
 ***@***.***
 >
 > +enum_header_files = \
 > +	libeos-updater-util/flatpak.h \
 > +	eos-updater-flatpak-installer/installer.h \
 > +	$(NULL)
 > +enum_template_h_file = libeos-updater-util/enums.h.in
 > +enum_template_c_file = libeos-updater-util/enums.c.in
 > +enum_sources = \
 > +	libeos-updater-util/enums.h \
 > +	libeos-updater-util/enums.c \
 > +	$(NULL)
 > +
 > +# FIXME: We can't use the --output switch as documented in https:/
 /git.gnome.org/browse/glib/commit/?id=cd97f93bf7c44cb5736f6cbcb4db773
 ca592e462
 >
 > Why not? (You might have answered this before, but I’ve forgotten.)
 >
 > If we can’t use --output, then the rule has to change to:
 >
 > $(AM_V_GEN)$(GLIB_MKENUMS) … > ***@***.*** && mv ***@***.*** $@
 >
 > Otherwise $@ gets written in chunks, and can end up being read by
 the
 > compiler while it’s still being written (if using parallel make).
 The mv
 > makes sure it appears at its final path atomically. Same for the
 other
 > $(GLIB_MKENUMS) rule.
 >
 > Isn’t automake fun? 🥇
 >

 Decided to just use --output 🤓


 > ------------------------------
 >
 > In Makefile.am
 > <#105 (comment)
 5193>:
 >
 > > @@ -132,7 +163,10 @@ systemdsystemunit_DATA +=
 $(eos_updater_avahi_in:%.in=%)
 > EXTRA_DIST += $(eos_updater_avahi_in)
 > CLEANFILES += $(eos_updater_avahi_in:%.in=%)
 >
 > -dist_man8_MANS += eos-updater-avahi/docs/eos-updater-avahi.8
 > +dist_man8_MANS += \
 > +	eos-updater-avahi/docs/eos-updater-avahi.8 \
 > +	eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8 \
 >
 > Please put these eos-updater-flatpak-installer additions in their
 own
 > section. See how there’s a comment #eos-update-server program
 followed by
 > a load of += appends for files which are specific to eos-update-
 server
 > (and *only* eos-update-server). eos-updater-flatpak-installer
 should be
 > in its own section like this.
 >
 > (This is an attempt to bring the good bits of recursive automake
 (i.e.
 > separate Makefile.am for each program) into non-recursive
 automake.)
 > ------------------------------
 >
 > In Makefile.am
 > <#105 (comment)
 5280>:
 >
 > > @@ -235,6 +269,30 @@ dist_bin_SCRIPTS += eos-updater-prepare-
 volume/eos-updater-prepare-volume
 >
 > dist_man8_MANS += eos-updater-prepare-volume/docs/eos-updater-
 prepare-volume.8
 >
 > +# eos-updater-install-flatpaks program
 >
 > s/eos-updater-install-flatpaks/eos-updater-flatpak-installer/
 > ------------------------------
 >
 > In configure.ac
 > <#105 (comment)
 5594>:
 >
 > > @@ -119,11 +129,21 @@ AS_IF([test ""$GPG"" = """"],[
 > AC_MSG_ERROR([gpg is required for tests])
 > ])
 >
 > +AC_PATH_PROG([FLATPAK],[flatpak])
 > +AS_IF([test ""$FLATPAK"" = """"],[
 > +	AC_MSG_ERROR([flatpak is required for tests])
 >
 > Maybe s/flatpak/flatpak command line program/ to make it more
 obvious this
 > doesn’t mean libflatpak.
 > ------------------------------
 >
 > In data/Makefile.am
 > <#105 (comment)
 5890>:
 >
 > > @@ -48,6 +49,7 @@ CLEANFILES = $(systemdsystemunit_DATA)
 > dist_man5_MANS = \
 > docs/eos-autoupdater.conf.5 \
 > docs/eos-updater.conf.5 \
 > +	docs/eos-updater-flatpak-autoinstall.d.5 \
 >
 > I think this file would be best in eos-updater-flatpak-
 installer/docs/.
 >
 > (I’m trying to slowly move away from, and eventually eliminate, the
 data/
 > directory.)
 > ------------------------------
 >
 > In data/Makefile.am
 > <#105 (comment)
 5925>:
 >
 > > @@ -18,6 +18,7 @@ eos_autoupdater_in = \
 > eos-autoupdater.service.in \
 > eos-autoupdater.timer.in \
 > eos-updater.service.in \
 > +	eos-updater-flatpak-installer.service.in \
 >
 > I think this file would be best in eos-updater-flatpak-installer/.
 >
 > (I’m trying to slowly move away from, and eventually eliminate, the
 data/
 > directory.)
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 6917>:
 >
 > > @@ -0,0 +1,122 @@
 > +.\"" Manpage for eos-updater-flatpak-autoinstall.d.5.
 > +.\"" Documentation is under the same licence as the eos-updater
 package.
 > +.TH man 5 ""8 Nov 2017"" ""1.0"" ""eos\-updater\-flatpak\-autoinstall.d
 man page""
 > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater -
 Configuration for flatpak installation on updates
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 >
 > What’s the point in the override/ directory? Shouldn’t this just be
 > /var/lib/eos-application-tools/flatpak-autoinstall.d (that’s what
 the
 > design doc says)?
 >
 > Note the design doc says eos-application-tools rather than eos-
 updater.
 > Either is fine by me, but we should be consistent between the
 > implementation and design doc.
 >

 Ah, in the past I had that since we were mirroring the state of the
 two
 files between /var/lib/ and /usr/share ... Now that we have the
 keyfile we
 can drop the override/ part.
OK.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 6980>:
 >
 > > @@ -0,0 +1,122 @@
 > +.\"" Manpage for eos-updater-flatpak-autoinstall.d.5.
 > +.\"" Documentation is under the same licence as the eos-updater
 package.
 > +.TH man 5 ""8 Nov 2017"" ""1.0"" ""eos\-updater\-flatpak\-autoinstall.d
 man page""
 > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater -
 Configuration for flatpak installation on updates
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 > +.br
 > +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 >
 > The /etc directory is missing from this list.
 >

 Ah good point. What priority should it take? I'm assuming lower
 priority
 than the one in /var for now?
Design doc says /etc takes priority over /var, which takes priority
over /usr. That makes sense to me: local sysadmin configuration
overrides per-deployment configuration, which overrides default
configuration.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 7417>:
 >
 > > @@ -0,0 +1,122 @@
 > +.\"" Manpage for eos-updater-flatpak-autoinstall.d.5.
 > +.\"" Documentation is under the same licence as the eos-updater
 package.
 > +.TH man 5 ""8 Nov 2017"" ""1.0"" ""eos\-updater\-flatpak\-autoinstall.d
 man page""
 > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater -
 Configuration for flatpak installation on updates
 >
 > How about eos\-updater\-flatpak\-autoinstall.d — Endless OS
 Configuration
 > for Flatpak Installation on Updates to avoid the second em-dash
 (and keep
 > the capitalisation consistent with other man pages).
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 7590>:
 >
 > > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater -
 Configuration for flatpak installation on updates
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 > +.br
 > +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of
 ""flatpak ref action""
 > +files, which specify flatpaks that should be installed and removed
 >
 > installed, updated or uninstalled
 >
 ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 7768>:
 >
 > > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-autoinstall.d — Endless OS Updater -
 Configuration for flatpak installation on updates
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 > +.br
 > +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of
 ""flatpak ref action""
 >
 > s/""flatpak ref action""/‘flatpak ref action’/
 >
 > (curly single quotes please)
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 7918>:
 >
 > > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 > +.br
 > +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of
 ""flatpak ref action""
 > +files, which specify flatpaks that should be installed and removed
 > +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a
 new deployment.
 > +.PP
 > +The directories listed
 >
 > Spurious start of a sentence here?
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 8086>:
 >
 > > +.\""
 > +\fB/var/lib/eos\-updater/flatpak\-autoinstall.d/override\fP
 > +.br
 > +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of
 ""flatpak ref action""
 > +files, which specify flatpaks that should be installed and removed
 > +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a
 new deployment.
 > +.PP
 > +The directories listed
 > +The configuration file contains a mandatory section,
 \fI[Download]\fP, and an
 > +optional per\-source section, \fI[Source ""volume""]\fP, whose keys
 are described
 > +below.
 >
 > This paragraph looks like a copy-paste error from another man page.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 8177>:
 >
 > > +\fB/usr/share/eos\-application\-tools/flatpak-autoinstall.d\fP
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of
 ""flatpak ref action""
 > +files, which specify flatpaks that should be installed and removed
 > +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a
 new deployment.
 > +.PP
 > +The directories listed
 > +The configuration file contains a mandatory section,
 \fI[Download]\fP, and an
 > +optional per\-source section, \fI[Source ""volume""]\fP, whose keys
 are described
 > +below.
 > +.PP
 > +Configuration files take priority over each other in the directory
 order
 > +listed above. If a file in a higher priority directory has the
 same basename
 >
 > Is the list above in ascending or descending order?
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 8976>:
 >
 > > +.\""
 > +\fBeos\-updater\-flatpak\-autoinstall.d\fP provides a list of
 ""flatpak ref action""
 > +files, which specify flatpaks that should be installed and removed
 > +by \fBeos\-updater\-flatpak\-installer\fP(8) when booting into a
 new deployment.
 > +.PP
 > +The directories listed
 > +The configuration file contains a mandatory section,
 \fI[Download]\fP, and an
 > +optional per\-source section, \fI[Source ""volume""]\fP, whose keys
 are described
 > +below.
 > +.PP
 > +Configuration files take priority over each other in the directory
 order
 > +listed above. If a file in a higher priority directory has the
 same basename
 > +as a file in a lower priority directory, only the configuration
 from
 > +the higher priority directory is used. The list of actions to
 apply is
 > +determined by appending all the new actions in each filename in
 > +lexicographical order. This means that the most up-to-date action
 in
 >
 > The wording here is unclear as to whether you mean:
 >
 > actions = [sort(file_actions) for file_actions in filenames]
 >
 > or
 >
 > actions = [file_actions for file_actions in sort(filenames)]
 >
 > How about something like “The list of actions to apply is
 determined by
 > sorting the filenames lexicographically, then concatenating all
 their lists
 > of actions.”? Although this doesn’t mention the filter-by-serial-
 number,
 > sort-by-serial-number, or filter-by-filters steps from §(Order of
 applying
 > entries from autoinstall lists) in the design document. Maybe we
 could just
 > copy the wording and bullet point list from that to here, with some
 minor
 > editing?
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 9153>:
 >
 > > +.PP
 > +The directories listed
 > +The configuration file contains a mandatory section,
 \fI[Download]\fP, and an
 > +optional per\-source section, \fI[Source ""volume""]\fP, whose keys
 are described
 > +below.
 > +.PP
 > +Configuration files take priority over each other in the directory
 order
 > +listed above. If a file in a higher priority directory has the
 same basename
 > +as a file in a lower priority directory, only the configuration
 from
 > +the higher priority directory is used. The list of actions to
 apply is
 > +determined by appending all the new actions in each filename in
 > +lexicographical order. This means that the most up-to-date action
 in
 > +a filename that is lexicographically ordered after the another
 filename
 > +will take priority in the event that the two most up-to-date
 actions conflict,
 > +even if the most up-to-date action in the lower-priority file has
 a newer
 > +serial number.
 >
 > I think this last sentence is a bit too confusing. As long as the
 > explanation of the algorithm above is clear enough, this kind of
 example
 > shouldn’t be necessary.
 >

 I'd prefer to keep this in the documentation since it is a side
 effect that
 might catch some people by surprise.
Let’s see how clear the explanation of the algorithm turns out. If we
keep this sentence I’d want to reword it to make it less confusing:
‘most-up-to-date’ is not well defined.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 9355>:
 >
 > > +.PP
 > +Configuration files take priority over each other in the directory
 order
 > +listed above. If a file in a higher priority directory has the
 same basename
 > +as a file in a lower priority directory, only the configuration
 from
 > +the higher priority directory is used. The list of actions to
 apply is
 > +determined by appending all the new actions in each filename in
 > +lexicographical order. This means that the most up-to-date action
 in
 > +a filename that is lexicographically ordered after the another
 filename
 > +will take priority in the event that the two most up-to-date
 actions conflict,
 > +even if the most up-to-date action in the lower-priority file has
 a newer
 > +serial number.
 > +.\""
 > +.SH ACTION SPECIFICATION
 > +.IX Header ""FILE FORMAT""
 > +.\""
 > +The file format of each ""flatpak ref action"" file in a
 >
 > Single curly quotes here please too.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 9663>:
 >
 > > +.PP
 > +Configuration files take priority over each other in the directory
 order
 > +listed above. If a file in a higher priority directory has the
 same basename
 > +as a file in a lower priority directory, only the configuration
 from
 > +the higher priority directory is used. The list of actions to
 apply is
 > +determined by appending all the new actions in each filename in
 > +lexicographical order. This means that the most up-to-date action
 in
 > +a filename that is lexicographically ordered after the another
 filename
 > +will take priority in the event that the two most up-to-date
 actions conflict,
 > +even if the most up-to-date action in the lower-priority file has
 a newer
 > +serial number.
 > +.\""
 > +.SH ACTION SPECIFICATION
 > +.IX Header ""FILE FORMAT""
 > +.\""
 > +The file format of each ""flatpak ref action"" file in a
 >
 > And in all the other bits of the file which aren’t demonstrating
 JSON
 > syntax.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 0631>:
 >
 > > +listed above. If a file in a higher priority directory has the
 same basename
 > +as a file in a lower priority directory, only the configuration
 from
 > +the higher priority directory is used. The list of actions to
 apply is
 > +determined by appending all the new actions in each filename in
 > +lexicographical order. This means that the most up-to-date action
 in
 > +a filename that is lexicographically ordered after the another
 filename
 > +will take priority in the event that the two most up-to-date
 actions conflict,
 > +even if the most up-to-date action in the lower-priority file has
 a newer
 > +serial number.
 > +.\""
 > +.SH ACTION SPECIFICATION
 > +.IX Header ""FILE FORMAT""
 > +.\""
 > +The file format of each ""flatpak ref action"" file in a
 > +\fBeos\-updater\-flatpak\-autoinstall.d(5)\fP directory is
 > +RFC7159 compliant JSON. Each file must be a JSON array containing
 >
 > s/RFC7159/RFC\ 7159/ to get a non-breaking space in it.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 1083>:
 >
 > > +.IX Header ""FILE FORMAT""
 > +.\""
 > +The file format of each ""flatpak ref action"" file in a
 > +\fBeos\-updater\-flatpak\-autoinstall.d(5)\fP directory is
 > +RFC7159 compliant JSON. Each file must be a JSON array containing
 > +objects describing a ""flatpak ref action"", as described below in
 > +\fBFlatpak Ref Action\fP. These files are intended to be append-
 only
 > +and the \fB""serial""\P property in each object must be a
 monotonically
 > +increasing counter within the domain of that filename.
 > +.\""
 > +.IP ""\fIFlatpak Ref Action\fP""
 > +.IX Flatpak Ref Action
 > +.\""
 > +A JSON object containing, at minimum, properties \fB""action""\fP,
 > +\fB""serial""\fP and optionally \fB""filters""\fP. Valid values for
 > +\fB""action""\fP are \fB""install""\fP, and \fB""uninstall""\fP, each
 having
 >
 > Plus update?
 >

 I should probably address this in the design doc (I thought I did,
 but
 maybe it was never resolved). Does ""update"" makes much sense? Either
 the
 flatpak is installed or it isn't?
IIRC the conclusion in the design document was to support ‘update’,
which would update an app iff it’s installed already, but wouldn’t
install it if it wasn’t already installed. I think the use case was the
nVidia runtime, which had to be updated to match changes in the
underlying runtime, but didn’t need to be installed if not installed
already.
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 1414>:
 >
 > > +.IP ""\fIThe ""filters"" entry\fP""
 > +.IX Action filters
 > +.\""
 > +A \fB""\fIFlatpak Ref Action\fP""\fP may have a \fB""filters""\fP
 entry which
 > +is a JSON object with properties \fB""architectures""\fP,
 \fB""~architectures""\fP,
 > +\fB""locales""\fP and \fB""~locales""\fP. Each filter property takes a
 JSON
 > +array of strings containing architectures or locales to apply to
 the filter.
 > +.\""
 > +Where a filter is prefixed with a tilde (~), the action will not
 be applied
 > +if the system architecture or locales matches any entry in the
 array. Otherwise,
 > +the action will only be applied if the system architectures or
 locales matches
 > +at least one entry in the array.
 > +.\""
 > +Where an action is filtered out and not applied, it will never be
 applied
 > +again, even if the property being filtered on changes. For
 instance, if the
 > +system locale changes, the action will not be applied on the next
 boot if
 >
 > Could simplify this sentence to “For instance, if the system locale
 > changes, the action will not be re-evaluated to see if it matches
 the new
 > locale.”
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 1609>:
 >
 > > +their own required properties as explained below. The only valid
 type
 > +for \fB""serial""\fP, is an integer, which must be monotonically
 > +increasing as new entries are appended to the file.
 > +.\""
 > +.IP ""\fIThe ""filters"" entry\fP""
 > +.IX Action filters
 > +.\""
 > +A \fB""\fIFlatpak Ref Action\fP""\fP may have a \fB""filters""\fP
 entry which
 > +is a JSON object with properties \fB""architectures""\fP,
 \fB""~architectures""\fP,
 > +\fB""locales""\fP and \fB""~locales""\fP. Each filter property takes a
 JSON
 > +array of strings containing architectures or locales to apply to
 the filter.
 > +.\""
 > +Where a filter is prefixed with a tilde (~), the action will not
 be applied
 > +if the system architecture or locales matches any entry in the
 array. Otherwise,
 > +the action will only be applied if the system architectures or
 locales matches
 > +at least one entry in the array.
 >
 > I’m liking this man page description of the JSON so far, thanks.
 >
 > This paragraph could do with clarification of what architectures:
 [] and ~architectures:
 > [] mean, since those are obvious corner cases. (Their behaviour is
 > consistent with the above description, but not necessarily
 immediately
 > obvious.)
 >

 (I still need to address this one, mental note)


 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 1847>:
 >
 > > +Where an action is filtered out and not applied, it will never
 be applied
 > +again, even if the property being filtered on changes. For
 instance, if the
 > +system locale changes, the action will not be applied on the next
 boot if
 > +it could have been applied were the locale the correct value when
 the action
 > +were first applied.
 > +.\""
 > +.IP ""\fI""install"" actions\fP""
 > +.IX Install action
 > +.\""
 > +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref
 Action\fP"" entry is
 > +""\fB""install""\fP"", the action will describe a flatpak that should
 be
 > +installed upon the next boot of the deployment in which the action
 was
 > +introduced. The entry must have the additional properties
 ""\fB""app""\fP"",
 > +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 > +flatpak app ID, whether the flatpak is a runtime or an app and the
 > +\fBPostree\fP(1) collection-id to install the app from. See
 >
 > s/collection-id/collection ID/
 >
 > (collection-id should only be used to format it when referring to
 config
 > keys and other bits of code.)
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 2097>:
 >
 > > +again, even if the property being filtered on changes. For
 instance, if the
 > +system locale changes, the action will not be applied on the next
 boot if
 > +it could have been applied were the locale the correct value when
 the action
 > +were first applied.
 > +.\""
 > +.IP ""\fI""install"" actions\fP""
 > +.IX Install action
 > +.\""
 > +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref
 Action\fP"" entry is
 > +""\fB""install""\fP"", the action will describe a flatpak that should
 be
 > +installed upon the next boot of the deployment in which the action
 was
 > +introduced. The entry must have the additional properties
 ""\fB""app""\fP"",
 > +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 > +flatpak app ID, whether the flatpak is a runtime or an app and the
 > +\fBPostree\fP(1) collection-id to install the app from. See
 > +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on
 flatpak app IDs,
 >
 > \fP and \fB are the wrong way round for ostree(1) here.
 >
 > (Hey, github does syntax highlighting for troff!)
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 2201>:
 >
 > > +system locale changes, the action will not be applied on the
 next boot if
 > +it could have been applied were the locale the correct value when
 the action
 > +were first applied.
 > +.\""
 > +.IP ""\fI""install"" actions\fP""
 > +.IX Install action
 > +.\""
 > +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref
 Action\fP"" entry is
 > +""\fB""install""\fP"", the action will describe a flatpak that should
 be
 > +installed upon the next boot of the deployment in which the action
 was
 > +introduced. The entry must have the additional properties
 ""\fB""app""\fP"",
 > +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 > +flatpak app ID, whether the flatpak is a runtime or an app and the
 > +\fBPostree\fP(1) collection-id to install the app from. See
 > +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on
 flatpak app IDs,
 > +ref-kinds and collection-ids generally. If the flatpak is already
 installed
 >
 > s/collection-ids/collection IDs/
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 2364>:
 >
 > > +.IP ""\fI""install"" actions\fP""
 > +.IX Install action
 > +.\""
 > +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref
 Action\fP"" entry is
 > +""\fB""install""\fP"", the action will describe a flatpak that should
 be
 > +installed upon the next boot of the deployment in which the action
 was
 > +introduced. The entry must have the additional properties
 ""\fB""app""\fP"",
 > +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 > +flatpak app ID, whether the flatpak is a runtime or an app and the
 > +\fBPostree\fP(1) collection-id to install the app from. See
 > +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on
 flatpak app IDs,
 > +ref-kinds and collection-ids generally. If the flatpak is already
 installed
 > +when the action is applied, \fBeos-updater-flatpak-installer\fP(8)
 will attempt
 > +to upgrade it.
 > +\.""
 > +Note that flatpaks are not pulled from the collection-id upon
 booting into
 >
 > s/pulled from the collection-id/pulled from a remote/
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 2429>:
 >
 > > +.\""
 > +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref
 Action\fP"" entry is
 > +""\fB""install""\fP"", the action will describe a flatpak that should
 be
 > +installed upon the next boot of the deployment in which the action
 was
 > +introduced. The entry must have the additional properties
 ""\fB""app""\fP"",
 > +""\fB""ref-kind""\fP"" and ""\fB""collection-id""\fP"", which describe the
 > +flatpak app ID, whether the flatpak is a runtime or an app and the
 > +\fBPostree\fP(1) collection-id to install the app from. See
 > +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on
 flatpak app IDs,
 > +ref-kinds and collection-ids generally. If the flatpak is already
 installed
 > +when the action is applied, \fBeos-updater-flatpak-installer\fP(8)
 will attempt
 > +to upgrade it.
 > +\.""
 > +Note that flatpaks are not pulled from the collection-id upon
 booting into
 > +the deployment, they are instead downloaded by \fBeos-
 updater\fP(8) during its
 > +""fetch"" step whilst it prepares the commit to be deployed.
 >
 > s/""fetch""/‘fetch’/
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 2462>:
 >
 > > +flatpak app ID, whether the flatpak is a runtime or an app and
 the
 > +\fBPostree\fP(1) collection-id to install the app from. See
 > +\fBflatpak\fP(1) and \fPostree\fB(1) for more information on
 flatpak app IDs,
 > +ref-kinds and collection-ids generally. If the flatpak is already
 installed
 > +when the action is applied, \fBeos-updater-flatpak-installer\fP(8)
 will attempt
 > +to upgrade it.
 > +\.""
 > +Note that flatpaks are not pulled from the collection-id upon
 booting into
 > +the deployment, they are instead downloaded by \fBeos-
 updater\fP(8) during its
 > +""fetch"" step whilst it prepares the commit to be deployed.
 > +\.""
 > +.IP ""\fI""uninstall"" actions\fP""
 > +.IX Uninstall action
 > +.\""
 > +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref
 Action\fP"" entry is
 > +""\fB""unnistall""\fP"", the action will describe a flatpak that
 should be
 >
 > Typo: uninstall
 > ------------------------------
 >
 > In data/docs/eos-updater-flatpak-autoinstall.d.5
 > <#105 (comment)
 2754>:
 >
 > > +\.""
 > +Note that flatpaks are not pulled from the collection-id upon
 booting into
 > +the deployment, they are instead downloaded by \fBeos-
 updater\fP(8) during its
 > +""fetch"" step whilst it prepares the commit to be deployed.
 > +\.""
 > +.IP ""\fI""uninstall"" actions\fP""
 > +.IX Uninstall action
 > +.\""
 > +Where the fB""\action\fP""\fP property of a ""\fBFlatpak Ref
 Action\fP"" entry is
 > +""\fB""unnistall""\fP"", the action will describe a flatpak that
 should be
 > +uninstalled upon the next boot of the deployment in which the
 action was
 > +introduced. The entry must have the additional properties
 ""\fB""app""\fP"",
 > +""\fB""ref-kind""\fP"". It is not an error if the flatpak is already
 uninstalled
 > +when the action is applied.
 > +\.""
 > +.SH ""SEE ALSO""
 >
 > It would be useful to include an EXAMPLES section with a short
 example
 > JSON file in (could use the one from the §(Autoinstall files)
 section of
 > the design doc).
 > ------------------------------
 >
 > In data/eos-updater-autoinstall.schema.json
 > <#105 (comment)
 4765>:
 >
 > > @@ -0,0 +1,138 @@
 > +{
 > + ""$comment"": ""Copyright (c) 2017 Endless Mobile, Inc. This library
 is free software; you can redistribute it and/or modify it under the
 terms of the GNU Lesser General Public License as published by the
 Free Software Foundation; either version 2.1 of the License, or (at
 your option) any later version. This library is distributed in the
 hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 PURPOSE. See the GNU Lesser General Public License for more details.
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street <https://maps.google.com/?q=51+F
 ranklin+Street&entry=gmail&source=g>, Fifth Floor, Boston, MA 02110-
 1301 USA."",
 > + ""$schema"": ""http://json-schema.org/draft-06/schema#"",
 > + ""type"": ""object"",
 > + ""title"": ""Autoinstall Flatpak Entry"",
 > + ""description"": ""A description of an action to be performed by the
 system updater when updating to a given OSTree revision"",
 > + ""oneOf"": [
 > + {
 > + ""properties"": {
 >
 > Missing required for install
 > ------------------------------
 >
 > In data/eos-updater-autoinstall.schema.json
 > <#105 (comment)
 4856>:
 >
 > > + ""description"": ""The app-id to be installed"",
 > + ""$ref"": ""#/definitions/app""
 > + },
 > + ""collection-id"": {
 > + ""$ref"": ""#/definitions/collection-id""
 > + }
 > + }
 > + },
 > + {
 > + ""properties"": {
 > + ""action"": {
 > + ""const"": ""uninstall"",
 > + ""description"": ""The machine-readable type of event"",
 > + ""type"": ""string""
 > + },
 > + ""remote"": {
 >
 > uninstall doesn’t need remote, right?
 > ------------------------------
 >
 > In data/eos-updater-autoinstall.schema.json
 > <#105 (comment)
 5095>:
 >
 > > + ""action"": {
 > + ""const"": ""uninstall"",
 > + ""description"": ""The machine-readable type of event"",
 > + ""type"": ""string""
 > + },
 > + ""remote"": {
 > + ""description"": ""The remote to install the app from"",
 > + ""type"": ""string""
 > + }
 > + },
 > + ""required"": [""ref-kind"", ""app"", ""remote""]
 > + }
 > + ],
 > + ""required"": [""action"", ""serial""],
 > + ""definitions"": {
 > + ""filters"": {
 >
 > #/definitions/filters exists twice in this dictionary.
 > ------------------------------
 >
 > In data/eos-updater-autoinstall.schema.json
 > <#105 (comment)
 5321>:
 >
 > > + ""type"": ""integer""
 > + },
 > + ""ref-kind"": {
 > + ""description"": ""The flatpak ref kind"",
 > + ""type"": ""string"",
 > + ""enum"": [""app"", ""runtime""]
 > + },
 > + ""app"": {
 > + ""description"": ""The app-id to be installed"",
 > + ""type"": ""string""
 > + },
 > + ""collection-id"": {
 > + ""description"": ""The collection-id to install the app from"",
 > + ""type"": ""string""
 > + },
 > + ""filters"": {
 >
 > This subschema doesn’t look right at all. Copy-paste error?
 > ------------------------------
 >
 > In data/eos-updater-autoinstall.schema.json
 > <#105 (comment)
 5494>:
 >
 > > + ""$ref"": ""#/definitions/serial""
 > + },
 > + ""filters"": {
 > + ""$ref"": ""#/definitions/filters""
 > + },
 > + ""ref-kind"": {
 > + ""$ref"": ""#/definitions/ref-kind""
 > + },
 > + ""app"": {
 > + ""$ref"": ""#/definitions/app""
 > + }
 > + }
 > + }
 > + },
 > + ""required"": [""action"", ""serial"", ""detail""],
 > + ""definitions"": {
 >
 > Seems definitions is declared twice? Are these multiple copy-paste
 errors
 > here, or am I mis-parsing this in my head (indentation might be
 off?)?
 >

 Oh man, this file has been rebased so many times that has been
 clobbered up
 badly. I spent some time to fix it up in a single fixup commit.
👍
 > ------------------------------
 >
 > In data/eos-updater-autoinstall.schema.json
 > <#105 (comment)
 5592>:
 >
 > > + ""type"": ""string"",
 > + ""enum"": [""app"", ""runtime""]
 > + },
 > + ""app"": {
 > + ""description"": ""The app-id to be installed"",
 > + ""type"": ""string""
 > + },
 > + ""filters"": {
 > + ""type"": ""object"",
 > + ""title"": ""Filters to apply to action"",
 > + ""description"": ""Tests to apply to see if action should be applied
 or skipped"",
 > + ""properties"": {
 > + ""~architectures"": {
 > + ""description"": ""Which architectures forbid performing this action
 on"",
 > + ""type"": ""array"",
 > + ""minItems"": 1,
 >
 > ~architectures can legitimately be empty (it would be a weird
 autoinstall
 > entry, but it’s valid)
 > ------------------------------
 >
 > In data/eos-updater-flatpak-installer.service.in
 > <#105 (comment)
 5748>:
 >
 > > +Description=Endless OS Automatic Updater - Post Boot Flatpak
 Installer
 > +Wants=local-fs.target
 > +After=local-fs.target
 > +ConditionKernelCommandLine=!eos-updater-disable
 > +
 > +# Only on updates
 > +Before=multi-user.target systemd-update-done.service
 > +ConditionNeedsUpdate=/var
 > +
 > +[Service]
 > +Type=oneshot
 > +RemainAfterExit=true
 > ***@***.***@/eos-updater-flatpak-installer
 > +
 > +# Sandboxing
 > +# FIXME: Enable more of these options once we have systemd > 229
 >
 > FIXME can be dropped, because we have systemd > 229, and you *have*
 > enabled more of these options.
 > ------------------------------
 >
 > In data/eos-updater-flatpak-installer.service.in
 > <#105 (comment)
 6130>:
 >
 > > +Environment=GSETTINGS_BACKEND=memory
 > +MemoryDenyWriteExecute=yes
 > +NoNewPrivileges=yes
 > +PrivateDevices=yes
 > +PrivateNetwork=yes
 > +PrivateTmp=yes
 > +PrivateUsers=yes
 > +ProtectControlGroups=yes
 > +ProtectHome=yes
 > +ProtectKernelModules=yes
 > +ProtectKernelTunables=yes
 > +ProtectSystem=no
 > +RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6
 > +RestrictRealtime=yes
 > +SystemCallErrorNumber=EPERM
 > ***@***.*** @io-event @ipc @network-io @aio
 @process
 >
 > Does it really use @aio and @process?
 > ------------------------------
 >
 > In data/eos-updater-flatpak-installer.service.in
 > <#105 (comment)
 6250>:
 >
 > > +Environment=GVFS_REMOTE_VOLUME_MONITOR_IGNORE=1
 > +Environment=GSETTINGS_BACKEND=memory
 > +MemoryDenyWriteExecute=yes
 > +NoNewPrivileges=yes
 > +PrivateDevices=yes
 > +PrivateNetwork=yes
 > +PrivateTmp=yes
 > +PrivateUsers=yes
 > +ProtectControlGroups=yes
 > +ProtectHome=yes
 > +ProtectKernelModules=yes
 > +ProtectKernelTunables=yes
 > +ProtectSystem=no
 > +RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6
 > +RestrictRealtime=yes
 > +SystemCallErrorNumber=EPERM
 >
 > Using SystemCallErrorNumber= is a good call.
 > ------------------------------
 >
 > In debian/eos-updater.install
 > <#105 (comment)
 7633>:
 >
 > > usr/share/man/man8/eos-updater.8
 > +usr/share/man/man8/eos-update-server.8
 > +usr/share/man/man8/eos-updater-avahi.8
 >
 > Why reorder the files in the list here? Doesn’t seem like it’s
 moving to
 > be more alphabetically ordered.
 >

 Oh wow, maybe I read all that in the wrong way :S I'll try and give
 it some
 sort of alphabetical order ... though maybe in another commit.
Yeah, put the existing files in alphabetical order in a preparatory
commit, then add the new file in the right place later on. That would
be great.
 > ------------------------------
 >
 > In Makefile.am
 > <#105 (comment)
 7753>:
 >
 > > @@ -60,12 +60,36 @@ AM_CPPFLAGS = \
 > # Utility library
 > noinst_LTLIBRARIES += ***@***.***_
 ***@***.***
 >
 > +enum_header_files = \
 > +	libeos-updater-util/flatpak.h \
 > +	eos-updater-flatpak-installer/installer.h \
 > +	$(NULL)
 > +enum_template_h_file = libeos-updater-util/enums.h.in
 > +enum_template_c_file = libeos-updater-util/enums.c.in
 > +enum_sources = \
 > +	libeos-updater-util/enums.h \
 > +	libeos-updater-util/enums.c \
 > +	$(NULL)
 > +
 > +# FIXME: We can't use the --output switch as documented in https:/
 /git.gnome.org/browse/glib/commit/?id=cd97f93bf7c44cb5736f6cbcb4db773
 ca592e462
 >
 > Ah, it was because --output didn’t work if the target file didn’t
 exist.
 >
 > I’ve merged your patch for that to endlessm/glib, so it should be
 OK to
 > use here now. Thanks.
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 7932>:
 >
 > > @@ -0,0 +1,92 @@
 > +.\"" Manpage for eos-updater-flatpak-installer.
 > +.\"" Documentation is under the same licence as the eos-updater
 package.
 > +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer
 man page""
 >
 > Installing them should be a matter of putting them in the right
 directory
 > (via Makefile.am and debian/*.install). They don’t need any
 > post-processing on installation.
 >

 Not sure I understand this point - we already don't post process
 them?
I think you’d left a comment on the review (or maybe in a commit
message?) expressing some doubt about how to install the man files. I
was replying to it. Your comment might have been out of date, since it
looks to me like you’re installing the man files correctly.
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 7974>:
 >
 > > @@ -0,0 +1,100 @@
 > +.\"" Manpage for eos-updater-flatpak-installer.
 > +.\"" Documentation is under the same licence as the eos-updater
 package.
 > +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer
 man page""
 >
 > Note the date in the header of this man page needs updating.
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 8092>:
 >
 > > @@ -0,0 +1,100 @@
 > +.\"" Manpage for eos-updater-flatpak-installer.
 > +.\"" Documentation is under the same licence as the eos-updater
 package.
 > +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer
 man page""
 > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak
 Installer
 >
 > I suggest this changes to:
 >
 > eos\-updater\-flatpak\-installer — Endless OS Update Flatpak
 Installer
 >
 > so we don’t need the second em-dash.
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 8354>:
 >
 > > @@ -0,0 +1,100 @@
 > +.\"" Manpage for eos-updater-flatpak-installer.
 > +.\"" Documentation is under the same licence as the eos-updater
 package.
 > +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer
 man page""
 > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak
 Installer
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-
 pull\fB]
 >
 > You can drop the \fBs from before ] — they’re only needed if an
 argument
 > takes a parameter, and in that case are paired with an \fP before
 the
 > parameter.
 >

 (Still on my list)


 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 8436>:
 >
 > > +.TH man 8 ""13 Apr 2017"" ""1.0"" ""eos\-updater\-flatpak\-installer
 man page""
 > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak
 Installer
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-
 pull\fB]
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded
 flatpaks on Endless OS
 > +updates upon rebooting into the new update. It is the part of the
 system that
 >
 > s/rebooting into the new update/booting into the new OS deployment/
 > (terminology is a little more specific).
 >

 (still on my list)


 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 8533>:
 >
 > > +.\""
 > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak
 Installer
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-
 pull\fB]
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded
 flatpaks on Endless OS
 > +updates upon rebooting into the new update. It is the part of the
 system that
 > +ensures that when new flatpaks are installed on OS Updates, they
 are
 >
 > s/Updates/updates/ (capitalisation)
 >

 (still on my list)


 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 8702>:
 >
 > > +.SH NAME
 > +.IX Header ""NAME""
 > +eos\-updater\-flatpak\-installer — Endless OS Updater - Flatpak
 Installer
 > +.\""
 > +.SH SYNOPSIS
 > +.IX Header ""SYNOPSIS""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer [\-m \-\-mode\fB] [\-p \-\-
 pull\fB]
 > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded
 flatpaks on Endless OS
 > +updates upon rebooting into the new update. It is the part of the
 system that
 > +ensures that when new flatpaks are installed on OS Updates, they
 are
 > +installed ""seamlessly"", only appearing when rebooting into the new
 system.
 >
 > ‘seamlessly’ doesn’t really convey any information. How about:
 >
 > they are made available in the new OS deployment and not the old
 one, when rebooting into the new deployment.
 >
 > ?
 >

 (still on my list)


 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 9442>:
 >
 > > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded
 flatpaks on Endless OS
 > +updates upon rebooting into the new update. It is the part of the
 system that
 > +ensures that when new flatpaks are installed on OS Updates, they
 are
 > +installed ""seamlessly"", only appearing when rebooting into the new
 system.
 > +.PP
 > +.SH OPTIONS
 > +.IX Header ""OPTIONS""
 > +.\""
 > +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 > +Which mode to run the flatpak installer in. When set to
 \fBperform\fP, the
 > +installer will examine the list of applications to install in
 > +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 >
 > The reader doesn’t know what $(datadir) will be, so just hard-code
 it.
 > (We could technically substitute it into the man page as part of
 the build
 > process, but that’s too much faff to bother with.)
 >

 (still on my list )


 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 9547>:
 >
 > > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded
 flatpaks on Endless OS
 > +updates upon rebooting into the new update. It is the part of the
 system that
 > +ensures that when new flatpaks are installed on OS Updates, they
 are
 > +installed ""seamlessly"", only appearing when rebooting into the new
 system.
 > +.PP
 > +.SH OPTIONS
 > +.IX Header ""OPTIONS""
 > +.\""
 > +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 > +Which mode to run the flatpak installer in. When set to
 \fBperform\fP, the
 > +installer will examine the list of applications to install in
 > +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 >
 > Also, don’t bother with the *: just ending the path with /
 signifies it’s
 > a directory and it should be obvious you mean all the files in that
 > directory.
 >

 (still on my list)



 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 9627>:
 >
 > > +.\""
 > +.SH DESCRIPTION
 > +.IX Header ""DESCRIPTION""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded
 flatpaks on Endless OS
 > +updates upon rebooting into the new update. It is the part of the
 system that
 > +ensures that when new flatpaks are installed on OS Updates, they
 are
 > +installed ""seamlessly"", only appearing when rebooting into the new
 system.
 > +.PP
 > +.SH OPTIONS
 > +.IX Header ""OPTIONS""
 > +.\""
 > +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 > +Which mode to run the flatpak installer in. When set to
 \fBperform\fP, the
 > +installer will examine the list of applications to install in
 > +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 >
 > Also, please format paths as \fI/path/blah/blah/\fP to make them
 stand
 > out a bit from the surrounding prose.
 >

 (Still on my list)



 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 9706>:
 >
 > > +\fBeos\-updater\-flatpak\-installer\fP installs downloaded
 flatpaks on Endless OS
 > +updates upon rebooting into the new update. It is the part of the
 system that
 > +ensures that when new flatpaks are installed on OS Updates, they
 are
 > +installed ""seamlessly"", only appearing when rebooting into the new
 system.
 > +.PP
 > +.SH OPTIONS
 > +.IX Header ""OPTIONS""
 > +.\""
 > +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 > +Which mode to run the flatpak installer in. When set to
 \fBperform\fP, the
 > +installer will examine the list of applications to install in
 > +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 > +/var/lib/eos-updater/flatpak-autoinstall.d/override/* and the
 counter state
 > +in /var/lib/eos-application-tools/flatpak-autoinstall.progress,
 then for each
 > +basename, perform only newly updated actions and save the most up
 to date
 > +serial number for each file in
 >
 > Sentence seems to end abruptly. Missing something?
 >

 (still on my list)


 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 9754>:
 >
 > > +.PP
 > +.SH OPTIONS
 > +.IX Header ""OPTIONS""
 > +.\""
 > +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 > +Which mode to run the flatpak installer in. When set to
 \fBperform\fP, the
 > +installer will examine the list of applications to install in
 > +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 > +/var/lib/eos-updater/flatpak-autoinstall.d/override/* and the
 counter state
 > +in /var/lib/eos-application-tools/flatpak-autoinstall.progress,
 then for each
 > +basename, perform only newly updated actions and save the most up
 to date
 > +serial number for each file in
 > +\"".
 > +When set to \fBstamp\fP, \fBeos\-updater\-flatpak\-installer\fP
 will only save
 > +the updated actions to
 > +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When
 set to
 >
 > \fIitalics around paths please\fP.
 >

 (still on my list)


 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 9831>:
 >
 > > +.\""
 > +.IP ""\fB\-m\fP, \fB\-\-mode\fP""
 > +Which mode to run the flatpak installer in. When set to
 \fBperform\fP, the
 > +installer will examine the list of applications to install in
 > +$(datadir)/eos-application-tools/flatpak-autoinstall.d/*,
 > +/var/lib/eos-updater/flatpak-autoinstall.d/override/* and the
 counter state
 > +in /var/lib/eos-application-tools/flatpak-autoinstall.progress,
 then for each
 > +basename, perform only newly updated actions and save the most up
 to date
 > +serial number for each file in
 > +\"".
 > +When set to \fBstamp\fP, \fBeos\-updater\-flatpak\-installer\fP
 will only save
 > +the updated actions to
 > +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When
 set to
 > +\fBcheck\fP, the tool will check to see if all actions are applied
 (e.g., that
 > +applications that should have been installed are installed and
 every app that
 > +should have been removed are removed).
 >
 > s/are/has been/
 >

 (still on my list)

 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 0497>:
 >
 > > +When set to \fBstamp\fP, \fBeos\-updater\-flatpak\-installer\fP
 will only save
 > +the updated actions to
 > +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When
 set to
 > +\fBcheck\fP, the tool will check to see if all actions are applied
 (e.g., that
 > +applications that should have been installed are installed and
 every app that
 > +should have been removed are removed).
 > +.\""
 > +.IP ""\fB\-p\fP, \fB\-\-pull\fP""
 > +Whether to pull flatpaks as well as deploying them. By default,
 flatpaks are
 > +not pulled during this step, it is expected that they will be
 pulled by
 > +\fBeos\-updater\fP(8) when it fetches and applies system updates.
 > +.\""
 > +.SH ""KERNEL COMMAND LINE""
 > +.IX Header ""KERNEL COMMAND LINE""
 > +.\""
 > +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is
 started when
 >
 > \fBeos\-updater\-flatpak\-installer.service\fP
 >

 (still on my list)

 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 0557>:
 >
 > > +the updated actions to
 > +/var/lib/eos-application-tools/flatpak-autoinstall.progress. When
 set to
 > +\fBcheck\fP, the tool will check to see if all actions are applied
 (e.g., that
 > +applications that should have been installed are installed and
 every app that
 > +should have been removed are removed).
 > +.\""
 > +.IP ""\fB\-p\fP, \fB\-\-pull\fP""
 > +Whether to pull flatpaks as well as deploying them. By default,
 flatpaks are
 > +not pulled during this step, it is expected that they will be
 pulled by
 > +\fBeos\-updater\fP(8) when it fetches and applies system updates.
 > +.\""
 > +.SH ""KERNEL COMMAND LINE""
 > +.IX Header ""KERNEL COMMAND LINE""
 > +.\""
 > +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is
 started when
 > +the kernel command line contains \fPeos\-updater\-disable\fP, then
 >
 > \fIeos\-updater\-disable\fP (the convention I’ve been using is
 italics
 > for literals which aren’t program or man page names, such as
 literals in
 > config files)
 >
 (still on my list)

 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 0834>:
 >
 > > +.IP ""\fB\-p\fP, \fB\-\-pull\fP""
 > +Whether to pull flatpaks as well as deploying them. By default,
 flatpaks are
 > +not pulled during this step, it is expected that they will be
 pulled by
 > +\fBeos\-updater\fP(8) when it fetches and applies system updates.
 > +.\""
 > +.SH ""KERNEL COMMAND LINE""
 > +.IX Header ""KERNEL COMMAND LINE""
 > +.\""
 > +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is
 started when
 > +the kernel command line contains \fPeos\-updater\-disable\fP, then
 > +it will have no effect.
 > +.\""
 > +.SH ""EXIT STATUS""
 > +.IX Header ""EXIT STATUS""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP returns \fBEXIT_SUCCESS\fP
 in case of normal
 >
 > Please use the numeric values of these constants, since that’s what
 shell
 > programmers will be checking for. :-(
 >
 (still on my list)

 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 1007>:
 >
 > > +.\""
 > +.SH ""KERNEL COMMAND LINE""
 > +.IX Header ""KERNEL COMMAND LINE""
 > +.\""
 > +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is
 started when
 > +the kernel command line contains \fPeos\-updater\-disable\fP, then
 > +it will have no effect.
 > +.\""
 > +.SH ""EXIT STATUS""
 > +.IX Header ""EXIT STATUS""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP returns \fBEXIT_SUCCESS\fP
 in case of normal
 > +operation and \fBEXIT_FAILURE\fP in case a file was missing or we
 were unable
 > +apply some actions. It also returns \fBEXIT_FAILURE\fP when \fB\-
 \-mode\fP is
 > +set to \fBcheck\fP and flatpaks expected to be installed or
 removed are
 > +not installed or removed.
 >
 > It would be good if the exit status could be used to differentiate
 between
 > failure due to invalid arguments, and failure due to the system
 state not
 > matching what check expects.
 >
 > See eos-update-server.8 for an example of this kind of thing.
 Listing the
 > exit statuses as an itemised list makes it a bit easier to read.
 >
 (still on my list)

 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 1158>:
 >
 > > +.\""
 > +If the \fPeos\-updater\-flatpak\-installer.service\fP unit is
 started when
 > +the kernel command line contains \fPeos\-updater\-disable\fP, then
 > +it will have no effect.
 > +.\""
 > +.SH ""EXIT STATUS""
 > +.IX Header ""EXIT STATUS""
 > +.\""
 > +\fBeos\-updater\-flatpak\-installer\fP returns \fBEXIT_SUCCESS\fP
 in case of normal
 > +operation and \fBEXIT_FAILURE\fP in case a file was missing or we
 were unable
 > +apply some actions. It also returns \fBEXIT_FAILURE\fP when \fB\-
 \-mode\fP is
 > +set to \fBcheck\fP and flatpaks expected to be installed or
 removed are
 > +not installed or removed.
 > +.\""
 > +.SH ""FILES""
 > +.IX Header ""FILES""
 >
 > The /etc directory is missing from here.
 >
 > You could probably just list the directories without additional
 > documentation here, and cross-link to the man page for the
 autoinstall list
 > format, which describes the directories in a bit more detail. No
 point in
 > duplicating the docs.
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 1985>:
 >
 > > +.IX Item ""/usr/share/eos-application-tools/flatpak-
 autoinstall.d/*""
 > +Each of the files in this directory contain a list of actions to
 be applied
 > +by the installer.
 > +.\""
 > +.IP \fI/var/lib/eos-application-tools/flatpak-autoinstall.d/*\fP 4
 > +.IX Item ""/var/lib/eos-application-tools/flatpak-autoinstall.d/*""
 > +Each of the files in this directory mirrors the files in
 > +""/usr/share/eos-application-tools/flatpak-autoinstall.d/*"" and
 contains
 > +a single number with the index of the most recently applied action
 (with
 > +the assumption that all actions prior to that have been applied).
 > +.\""
 > +.\""
 > +.SH ""SEE ALSO""
 > +.IX Header ""SEE ALSO""
 > +.\""
 > +\fBeos\-updater\-service\fP(8),
 >
 > eos-updater-service isn’t a thing.
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/docs/eos-updater-flatpak-
 installer.8
 > <#105 (comment)
 2119>:
 >
 > > +by the installer.
 > +.\""
 > +.IP \fI/var/lib/eos-application-tools/flatpak-autoinstall.d/*\fP 4
 > +.IX Item ""/var/lib/eos-application-tools/flatpak-autoinstall.d/*""
 > +Each of the files in this directory mirrors the files in
 > +""/usr/share/eos-application-tools/flatpak-autoinstall.d/*"" and
 contains
 > +a single number with the index of the most recently applied action
 (with
 > +the assumption that all actions prior to that have been applied).
 > +.\""
 > +.\""
 > +.SH ""SEE ALSO""
 > +.IX Header ""SEE ALSO""
 > +.\""
 > +\fBeos\-updater\-service\fP(8),
 > +\fBeos\-updater\fP(8),
 > +\fBeos\-updater\-flatpak\-autoinstall.d\fP(5)
 >
 > Should probably add \fBflatpak\fP(1) to the bottom of this list.
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/installer.h
 > <#105 (comment)
 2203>:
 >
 > > + *
 > + * You should have received a copy of the GNU Lesser General
 Public
 > + * License along with this library; if not, write to the Free
 Software
 > + * Foundation, Inc., 51 Franklin Street <https://maps.google.com/?
 q=51+Franklin+Street&entry=gmail&source=g>, Fifth Floor, Boston, MA
 02110-1301 USA
 > + *
 > + * Authors:
 > + * - Sam Spilsbury ***@***.***>
 > + */
 > +
 > +#pragma once
 > +
 > +#include <glib.h>
 > +
 > +G_BEGIN_DECLS
 > +
 > +typedef enum {
 >
 > Nitpick: Missing a documentation comment. (Even for internal API,
 it’s
 > useful for anyone editing the code.)
 > ------------------------------
 >
 > In eos-updater-flatpak-installer/main.c
 > <#105 (comment)
 2533>:
 >
 > > + /* Include the usage. */
 > + help = g_option_context_get_help (context, TRUE, NULL);
 > + g_printerr (""%s: %s\n\n%s\n"", g_get_prgname (),
 formatted_message, help);
 > +
 > + return 128;
 > +}
 > +
 > +static const gchar *
 > +get_datadir (void)
 > +{
 > + return eos_updater_get_envvar_or
 (""EOS_UPDATER_TEST_OSTREE_DATADIR"",
 > + DATADIR);
 > +}
 > +
 > +static GHashTable *
 > +incoming_flatpak_ref_actions (GError **error)
 >
 > This should move out to a helper library.
 >

 I'm not sure if we should do this - since the fetch code needs to
 read from
 the ostree commit and the flatpak installer needs to read from the
 actual
 filesystem, the implementations are different enough to warrant a
 separate
 implementation in each executable.
Sure, but they are both complex enough that they need to be unit
tested, and it’s a lot easier to put them in a helper library and unit
test that, than it is to run eos-updater-flatpak-installer as a
subprocess from a unit test and try to check all its error handling
paths and work out whether its internal state is correct. (If you put
the code in a helper library, you can expose more of its internal state
in the helper library’s API, which makes testing a *lot* easier.)

Ideally, eos-updater-flatpak-installer/main.c would only be a few
hundred lines long: the command line handling, output printing, and a
few calls to some functions in the helper library. Everything in main.c
should be sufficiently simple that it doesn’t need unit testing, and
gets code coverage entirely from any integration tests which get run on
it.
…
 > —
 > You are receiving this because you were mentioned.
 > Reply to this email directly, view it on GitHub
 > <#105 (review)
 -75607983>,
 > or mute the thread
 > <https://github.com/notifications/unsubscribe-auth/AAvUjYXRB5Vq9E21
 pqefmcg3oirxW3Fnks5s05HvgaJpZM4PS55D>
 > .
 >",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,106,2017-09-20T10:13:46Z,2017-09-22T22:03:44Z,2017-09-26T10:44:42Z,MERGED,True,39,5,6,https://github.com/pwithnall,Build system fixes and improvements,4,[],https://github.com/endlessm/eos-updater/pull/106,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/106,A few small fixes I needed to make while doing some QA locally.,A few small fixes I needed to make while doing some QA locally.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,106,2017-09-20T10:13:46Z,2017-09-22T22:03:44Z,2017-09-26T10:44:42Z,MERGED,True,39,5,6,https://github.com/pwithnall,Build system fixes and improvements,4,[],https://github.com/endlessm/eos-updater/pull/106,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/106#issuecomment-330956492,A few small fixes I needed to make while doing some QA locally.,I'm not sure why GitHub is marking one of my review comments as outdated; it's not.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,107,2017-09-20T15:51:21Z,2017-09-21T21:32:05Z,2017-12-27T02:44:19Z,MERGED,True,1,1,1,https://github.com/pwithnall,fetch: Output slightly more information on a fetch failure,1,[],https://github.com/endlessm/eos-updater/pull/107,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/107,"This information is reported in the eos-updater D-Bus interface, but
it’s useful to have it in the journal too.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19272","This information is reported in the eos-updater D-Bus interface, but
it’s useful to have it in the journal too.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19272",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,108,2017-09-22T15:02:16Z,2017-09-22T15:06:36Z,2017-09-22T15:07:20Z,MERGED,True,20,8,2,https://github.com/pwithnall,src/fetch: Fix a double-free of a GError leading to corrupted messages,3,[],https://github.com/endlessm/eos-updater/pull/108,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/108,"The GError here is using g_autoptr(), meaning it gets freed
automatically on exit from the function — but g_propagate_error() takes
ownership of it too, resulting in a double-free and some corrupted
failure messages being reported to the user.
Signed-off-by: Philip Withnall withnall@endlessm.com

Reported by @wjt on #updater on Slack.","The GError here is using g_autoptr(), meaning it gets freed
automatically on exit from the function — but g_propagate_error() takes
ownership of it too, resulting in a double-free and some corrupted
failure messages being reported to the user.
Signed-off-by: Philip Withnall withnall@endlessm.com

Reported by @wjt on #updater on Slack.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,109,2017-09-25T16:04:39Z,2017-09-26T02:09:11Z,2017-09-26T10:44:20Z,MERGED,True,94,77,17,https://github.com/pwithnall,Fixes for compiling/analysing with Clang,7,[],https://github.com/endlessm/eos-updater/pull/109,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/109,https://phabricator.endlessm.com/T19388,https://phabricator.endlessm.com/T19388,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/110,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388","T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333344837,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388","This shouldn’t be merged yet, since I still need to do a bit more work to get eos-updater fully compiling with -Wconversion. What’s here already is ready to review, though, since the remaining work is additive.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333498351,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388",Finished — make check now passes in my ARM chroot. Ready for review and merge.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333591105,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388","All comments answered or addressed with additional commits. Ready for review again, thanks.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/mwleeds,5,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333759457,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388","@pwithnall do these not show up for you?
libeos-updater-util/util.c:485:26: warning: implicit conversion loses integer precision: 'gulong' (aka 'unsigned long') to 'guint'
      (aka 'unsigned int') [-Wshorten-64-to-32]
  quit_file->signal_id = g_signal_connect (quit_file->monitor,
                       ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/glib-2.0/gobject/gsignal.h:475:5: note: expanded from macro 'g_signal_connect'
    g_signal_connect_data ((instance), (detailed_signal), (c_handler), (data), NULL, (GConnectFlags) 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

eos-autoupdater.c:285:21: warning: implicit conversion changes signedness: 'gint' (aka 'int') to 'UpdateStep' (aka 'enum _UpdateStep')
      [-Wsign-conversion]
  UpdateStep step = GPOINTER_TO_INT (step_data);
             ~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/glib-2.0/include/glibconfig.h:87:29: note: expanded from macro 'GPOINTER_TO_INT'
#define GPOINTER_TO_INT(p)      ((gint)  (glong) (p))
                                 ^~~~~~~~~~~~~~~~~~~

eos-test-utils.c:1260:61: warning: implicit conversion loses integer precision: 'gsize' (aka 'unsigned long') to 'guint' (aka 'unsigned int')
      [-Wshorten-64-to-32]
  g_autoptr(GPtrArray) source_strs = g_ptr_array_sized_new (n_sources);
                                     ~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333765937,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388","Hmm, weird. They don’t show up with the ARM chroot compiler, but do show up when I rebuild from scratch on x86-64. I thought I’d done that. Good catch!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/pwithnall,7,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333767810,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388",Fixes pushed. Ready for re-review.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/smspillaz,8,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333769275,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388",(last few commits are an r+ from me),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,110,2017-09-30T23:17:10Z,2017-10-04T14:23:17Z,2017-10-04T14:23:28Z,MERGED,True,299,155,38,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM,19,[],https://github.com/endlessm/eos-updater/pull/110,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/110#issuecomment-333779842,"T19388 turns out to have been caused by an implicit cast from a 64-bit integer to a 32-bit one. Some of the top 32 bits turned out to actually contain useful information.
https://phabricator.endlessm.com/T19388","For fun, I just tried compiling with CC=clang on x86-64, and found another -Wconversion failure. Fix pushed for it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,111,2017-10-02T11:03:44Z,2017-10-04T15:21:45Z,2017-10-04T15:22:00Z,MERGED,True,7,5,2,https://github.com/pwithnall,T19388: Fix OSTree bloom hashing (and tests) on ARM (for eos3.3),2,[],https://github.com/endlessm/eos-updater/pull/111,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/111,"Version of #110 for eos3.3. Doesn’t depend on the GLib fixes which #110 does.
https://phabricator.endlessm.com/T19388","Version of #110 for eos3.3. Doesn’t depend on the GLib fixes which #110 does.
https://phabricator.endlessm.com/T19388",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/112,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/112#issuecomment-337203513,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","@smspillaz: When you push commits which fix review issues, can you please create them as fixup commits (git commit --fixup) so that we don’t end up with >200 commits on a branch and a commit history which is a) impossible to bisect sensibly afterwards; and b) impossible to post-hoc squash down easily?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/112#issuecomment-337287149,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","@smspillaz: When you push commits which fix review issues, can you please create them as fixup commits (git commit --fixup) so that we don’t end up with >200 commits on a branch and a commit history which is a) impossible to bisect sensibly afterwards; and b) impossible to post-hoc squash down easily?

Ah nice, I didn't know about that feature - I'll make use of in in the future. In any event, I'm happy to squash this branch down into something sensible if we're ready to merge it. Are there any further things to address?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/112#issuecomment-338856588,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","Comments addressed. Note that there are still conflicts on this branch - I tried rebasing it on (the recently updated) T16682 and it tended up being a quagmire of merge conflicts. I think a better way forward would be to create a new branch and cherry-pick the updated commits on top of the now-rebased T16682 after it has been squashed down into something a little more manageable.
I'll try doing that tonight.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/smspillaz,5,https://github.com/endlessm/eos-updater/pull/112#issuecomment-343713416,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","Okay, most of the comments should now be addressed. The only one that isn't is about moving things into a helper library - I figure it will cause far less rebase pain if we do that after we're happy with how everything else works.",True,{'THUMBS_UP': ['https://github.com/pwithnall']}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/smspillaz,6,https://github.com/endlessm/eos-updater/pull/112#issuecomment-344640813,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","Okay, did a bunch more work on this:

Addressed review comments
Added test cases specified in the phabricator ticket
Refactored things a little to support those test cases
Required that JSON files specify both ""remote"" and ""collection-id"" for now, as discussed
Dropped the ""initial compression"" step.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/pwithnall,7,https://github.com/endlessm/eos-updater/pull/112#issuecomment-346396103,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","I’ve pushed a couple of fixup commits to the branch, which fix building with builddir ≠ srcdir.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/smspillaz,8,https://github.com/endlessm/eos-updater/pull/112#issuecomment-346526942,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","@pwithnall thanks for the reviews and fixups!
With respect to rebasing ... I think what I might do is fix up the remaining identified points on this branch, then start three new branches

Split out all the tests stuff into tests-common
Checkpoint commits
Flatpak auto-installation

They do each step on each other a little bit, but I'm okay to bear that pain as a tradeoff for reducing the diff size and unblocking.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,112,2017-10-13T15:26:22Z,2017-12-01T03:46:44Z,2017-12-01T03:46:44Z,CLOSED,False,9103,295,56,https://github.com/smspillaz,T19437,83,[],https://github.com/endlessm/eos-updater/pull/112,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/112#issuecomment-346576446,"Allow distributors to override the refspec to update from
This can effectively be used to implement ""checkpoint"" epochs, by
placing a new refspec in /usr/share/eos-updater/upgrade-refspec .
For instance, a distributor might wish to ensure that a client is
at least running version X before attempting to pull and apply
version Y. To do that, they would make a final commit on X which
sets /usr/share/eos-updater/upgrade-refspec to a new refspec
that the updater should look at the next time it pulls and deploys
an OSTree when it is booted into the system on that final commit.
This ensures that for systems not yet booted into that final commit,
the updater will only pull revisions up to the final one and will
only begin to pull new revisions on the new refspec once booted
into the system on the final commit.
This PR subsumes T16682, which gives us a mechanism to install
flatpaks upon reboot of the system.
https://phabricator.endlessm.com/T19437","Sure, that works for me. Within each branch, the more you can split out groundwork commits from other commits, the better; as I can cherry-pick from within branches as well. The three branches will step on each other a bit, but that shouldn’t be a problem as long as they’re reviewed and applied in the intended order. I’m not expecting drastic review comments on any of them, which will minimise rebase collisions.
If you could make sure that each branch passes the unit tests when it’s applied, and make sure that eos-updater still compiles between each commit (I use git for-each master.. make all, with git-for-each from git-branch-tools), that acts as a bit of assurance that changes have been split out into separate commits properly, and that cherry-picking one of the commits will not cause problems. Thanks!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,113,2017-10-18T14:13:50Z,2017-10-23T16:54:42Z,2017-10-23T16:54:55Z,MERGED,True,346,1181,25,https://github.com/pwithnall,eos-updater-prepare-volume: Rewrite in Python and use ostree-create-usb,4,[],https://github.com/endlessm/eos-updater/pull/113,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/113,"This is a complete rewrite of the eos-updater-prepare-volume utility,
although it maintains command line backwards compatibility with the old
version.
The new version is written in Python, and is a fairly simple wrapper
around ostree create-usb (requires OSTree 2017.12). It adds support
for including flatpaks in the repository on the USB drive, resolving
various details about them from the provided collection–refs.
All the code relating to the old version of the utility has been
deleted. This enables us to delete the libeos-updater-0 library and its
associated Debian rules. As far as I’m aware, nothing outside
eos-updater ever used it.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19366","This is a complete rewrite of the eos-updater-prepare-volume utility,
although it maintains command line backwards compatibility with the old
version.
The new version is written in Python, and is a fairly simple wrapper
around ostree create-usb (requires OSTree 2017.12). It adds support
for including flatpaks in the repository on the USB drive, resolving
various details about them from the provided collection–refs.
All the code relating to the old version of the utility has been
deleted. This enables us to delete the libeos-updater-0 library and its
associated Debian rules. As far as I’m aware, nothing outside
eos-updater ever used it.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19366",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,113,2017-10-18T14:13:50Z,2017-10-23T16:54:42Z,2017-10-23T16:54:55Z,MERGED,True,346,1181,25,https://github.com/pwithnall,eos-updater-prepare-volume: Rewrite in Python and use ostree-create-usb,4,[],https://github.com/endlessm/eos-updater/pull/113,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/113#issuecomment-338724743,"This is a complete rewrite of the eos-updater-prepare-volume utility,
although it maintains command line backwards compatibility with the old
version.
The new version is written in Python, and is a fairly simple wrapper
around ostree create-usb (requires OSTree 2017.12). It adds support
for including flatpaks in the repository on the USB drive, resolving
various details about them from the provided collection–refs.
All the code relating to the old version of the utility has been
deleted. This enables us to delete the libeos-updater-0 library and its
associated Debian rules. As far as I’m aware, nothing outside
eos-updater ever used it.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19366","Rebased, squashed and merged. Thanks for the reviews!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,114,2017-10-18T14:18:43Z,2017-10-23T16:57:32Z,2017-10-23T16:57:40Z,MERGED,True,10,614,4,https://github.com/pwithnall,lib/extensions: Drop support for refs.d directories,1,[],https://github.com/endlessm/eos-updater/pull/114,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/114,"With the new unsigned summary support and ostree-metadata branch, we
don’t need refs.d directories. They were never supported by our
infrastructure anyway, so were never used in practice.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15926

This depends on #113 being merged first, since it’s stacked on top of that. The only relevant commit in this PR is the top-most one.","With the new unsigned summary support and ostree-metadata branch, we
don’t need refs.d directories. They were never supported by our
infrastructure anyway, so were never used in practice.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15926

This depends on #113 being merged first, since it’s stacked on top of that. The only relevant commit in this PR is the top-most one.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,114,2017-10-18T14:18:43Z,2017-10-23T16:57:32Z,2017-10-23T16:57:40Z,MERGED,True,10,614,4,https://github.com/pwithnall,lib/extensions: Drop support for refs.d directories,1,[],https://github.com/endlessm/eos-updater/pull/114,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/114#issuecomment-338725574,"With the new unsigned summary support and ostree-metadata branch, we
don’t need refs.d directories. They were never supported by our
infrastructure anyway, so were never used in practice.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15926

This depends on #113 being merged first, since it’s stacked on top of that. The only relevant commit in this PR is the top-most one.","Rebased and merged, thanks.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,115,2017-10-18T14:20:21Z,2017-10-23T16:59:42Z,2017-10-23T16:59:59Z,MERGED,True,79,429,18,https://github.com/pwithnall,"lib/extensions: Drop support for eos-summary{,.sig}",1,[],https://github.com/endlessm/eos-updater/pull/115,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/115,"With the new unsigned summary support and ostree-metadata branch, we
don’t need to keep and propagate copies of the summary file just in case
the user regenerates it (using ostree summary -u) and breaks the
signature, since we no longer rely on the signature.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19538

This depends on #114 being merged first, since it’s stacked on top of that. The only relevant commit in this PR is the top-most one.","With the new unsigned summary support and ostree-metadata branch, we
don’t need to keep and propagate copies of the summary file just in case
the user regenerates it (using ostree summary -u) and breaks the
signature, since we no longer rely on the signature.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19538

This depends on #114 being merged first, since it’s stacked on top of that. The only relevant commit in this PR is the top-most one.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,116,2017-10-24T19:06:33Z,2017-10-27T16:36:08Z,2017-10-27T16:36:11Z,MERGED,True,791,2848,36,https://github.com/pwithnall,Port eos-updater to use OstreeRepoFinder,19,[],https://github.com/endlessm/eos-updater/pull/116,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/116,"A whole bunch of commits necessary for this to work, and to get the tests working again.
https://phabricator.endlessm.com/T19293","A whole bunch of commits necessary for this to work, and to get the tests working again.
https://phabricator.endlessm.com/T19293",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,116,2017-10-24T19:06:33Z,2017-10-27T16:36:08Z,2017-10-27T16:36:11Z,MERGED,True,791,2848,36,https://github.com/pwithnall,Port eos-updater to use OstreeRepoFinder,19,[],https://github.com/endlessm/eos-updater/pull/116,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/116#issuecomment-339505894,"A whole bunch of commits necessary for this to work, and to get the tests working again.
https://phabricator.endlessm.com/T19293","All review comments so far addressed, apart from the one about compile errors in intermediate commits. I’ll handle that one after squashing everything down after review.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,116,2017-10-24T19:06:33Z,2017-10-27T16:36:08Z,2017-10-27T16:36:11Z,MERGED,True,791,2848,36,https://github.com/pwithnall,Port eos-updater to use OstreeRepoFinder,19,[],https://github.com/endlessm/eos-updater/pull/116,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/116#issuecomment-339959951,"A whole bunch of commits necessary for this to work, and to get the tests working again.
https://phabricator.endlessm.com/T19293","Thanks for the reviews. I’ve squashed everything in, and tested with git for-each master.. make that it builds fine in all the intermediate states. (I don’t expect the test suite to pass in each intermediate state, so I haven’t checked that. The test suite passes at the tip of the branch.)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,117,2017-10-25T05:30:07Z,2017-10-25T09:59:08Z,2017-10-25T09:59:17Z,MERGED,True,1,0,1,https://github.com/mwleeds,tests: Fix memory leak,1,[],https://github.com/endlessm/eos-updater/pull/117,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/117,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,118,2017-10-27T16:50:39Z,2017-10-27T18:32:59Z,2017-10-30T17:44:41Z,MERGED,True,4,0,1,https://github.com/pwithnall,debian: Add missing Python dependencies for eos-updater-prepare-volume,1,[],https://github.com/endlessm/eos-updater/pull/118,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/118,"Seems like dh_python is not doing its job and listing the Python
dependencies automatically. List the dependencies for
eos-updater-prepare-volume and eos-updater-ctl manually.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293","Seems like dh_python is not doing its job and listing the Python
dependencies automatically. List the dependencies for
eos-updater-prepare-volume and eos-updater-ctl manually.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,118,2017-10-27T16:50:39Z,2017-10-27T18:32:59Z,2017-10-30T17:44:41Z,MERGED,True,4,0,1,https://github.com/pwithnall,debian: Add missing Python dependencies for eos-updater-prepare-volume,1,[],https://github.com/endlessm/eos-updater/pull/118,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/118#issuecomment-340129967,"Seems like dh_python is not doing its job and listing the Python
dependencies automatically. List the dependencies for
eos-updater-prepare-volume and eos-updater-ctl manually.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293","Just FYI, dh_python handles runtime python dependencies. There's no automatic build dependency generator.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,118,2017-10-27T16:50:39Z,2017-10-27T18:32:59Z,2017-10-30T17:44:41Z,MERGED,True,4,0,1,https://github.com/pwithnall,debian: Add missing Python dependencies for eos-updater-prepare-volume,1,[],https://github.com/endlessm/eos-updater/pull/118,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/118#issuecomment-340470855,"Seems like dh_python is not doing its job and listing the Python
dependencies automatically. List the dependencies for
eos-updater-prepare-volume and eos-updater-ctl manually.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293","Just FYI, dh_python handles runtime python dependencies. There's no automatic build dependency generator.

I guess the issue here is that the build-time dependencies need to be a superset of the runtime dependencies, since the Python scripts are run in the build-time unit tests. Do you think the patch is correct, or is there a better way of including the runtime dependencies into the build-time ones automatically (without this duplication)?
Thanks for the FYI. :-)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,118,2017-10-27T16:50:39Z,2017-10-27T18:32:59Z,2017-10-30T17:44:41Z,MERGED,True,4,0,1,https://github.com/pwithnall,debian: Add missing Python dependencies for eos-updater-prepare-volume,1,[],https://github.com/endlessm/eos-updater/pull/118,https://github.com/dbnicholson,4,https://github.com/endlessm/eos-updater/pull/118#issuecomment-340521380,"Seems like dh_python is not doing its job and listing the Python
dependencies automatically. List the dependencies for
eos-updater-prepare-volume and eos-updater-ctl manually.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293","I don't believe there's any way to automatically generate build time dependencies in debian. It's more or less expected that the source portion of the control file is static so that it can be analyzed directly without running external processes. There are some ways to hook into dpkg to make adjustments to the fields in the dsc file (which uses the control file as source), but that happens at the end of the build after the build dependencies have been analyzed. And I don't think it would be kosher to have the Build-Depends different between the dsc and debian/control file.
So, as far as I know, this is the correct and only way to to do this.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,118,2017-10-27T16:50:39Z,2017-10-27T18:32:59Z,2017-10-30T17:44:41Z,MERGED,True,4,0,1,https://github.com/pwithnall,debian: Add missing Python dependencies for eos-updater-prepare-volume,1,[],https://github.com/endlessm/eos-updater/pull/118,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/118#issuecomment-340526473,"Seems like dh_python is not doing its job and listing the Python
dependencies automatically. List the dependencies for
eos-updater-prepare-volume and eos-updater-ctl manually.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293",(Follow-up which does this in #119.),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,119,2017-10-30T17:00:51Z,2017-10-30T18:55:09Z,2017-10-30T18:55:13Z,MERGED,True,5,0,1,https://github.com/pwithnall,debian: Add Python dependencies for tests to build-depends,1,[],https://github.com/endlessm/eos-updater/pull/119,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/119,"Since the tests are run at build time, we need to depend on the Python
modules they use (primarily gobject-introspection) in order to
successfully build eos-updater.
The eos-updater-tests package additionally needs to depend on
eos-updater-tools for eos-updater-prepare-volume, which it shells out to
at times.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293","Since the tests are run at build time, we need to depend on the Python
modules they use (primarily gobject-introspection) in order to
successfully build eos-updater.
The eos-updater-tests package additionally needs to depend on
eos-updater-tools for eos-updater-prepare-volume, which it shells out to
at times.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,120,2017-11-01T10:12:52Z,2017-11-01T16:18:04Z,2017-11-01T16:18:07Z,MERGED,True,15,2,1,https://github.com/pwithnall,eos-updater-prepare-volume: Improve FlatpakInstallation error handling,1,[],https://github.com/endlessm/eos-updater/pull/120,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/120,"Handle errors in listing the available installations, which can happen
because libflatpak tries to ensure a repository exists for each location
it checks — if the user doesn’t have permission to create the
repository, this can fail. Another error can be returned if
get_system_installations() can’t find any accessible system
installations.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293","Handle errors in listing the available installations, which can happen
because libflatpak tries to ensure a repository exists for each location
it checks — if the user doesn’t have permission to create the
repository, this can fail. Another error can be returned if
get_system_installations() can’t find any accessible system
installations.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19293",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,121,2017-11-02T19:31:24Z,2017-11-03T16:05:52Z,2017-11-03T16:05:57Z,MERGED,True,36,8,1,https://github.com/pwithnall,Fix trying to list directories in eos-update-server,2,[],https://github.com/endlessm/eos-updater/pull/121,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/121,A couple of minor fixes for problems spotted while starting to work on https://phabricator.endlessm.com/T19367.,A couple of minor fixes for problems spotted while starting to work on https://phabricator.endlessm.com/T19367.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,122,2017-11-03T19:30:30Z,2017-11-03T20:22:08Z,2017-11-03T20:22:11Z,MERGED,True,3,3,1,https://github.com/mwleeds,libeos-update-server/repo: Clean up /refs/heads handler,1,[],https://github.com/endlessm/eos-updater/pull/122,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/122,"Use gsize instead of size_t for consistency, and use a better variable
name than ""len"". No functional changes.","Use gsize instead of size_t for consistency, and use a better variable
name than ""len"". No functional changes.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,123,2017-11-06T19:45:17Z,2017-11-07T17:12:01Z,2017-11-07T17:12:05Z,MERGED,True,90,0,1,https://github.com/mwleeds,libeos-update-server: Support /refs/mirrors/ requests,3,[],https://github.com/endlessm/eos-updater/pull/123,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/123,"When peers request collection refs from each other, they can use the
format /refs/mirrors/$collection_id/$ref to avoid having to assume that
the remote name is the same on both machines. This commit makes
eos-update-server handle these requests either directly if such a file
exists or by redirecting them to /refs/remotes/$remote_name/$ref if
the remote $remote_name has a collection ID that matches $collection_id.
https://phabricator.endlessm.com/T18718","When peers request collection refs from each other, they can use the
format /refs/mirrors/$collection_id/$ref to avoid having to assume that
the remote name is the same on both machines. This commit makes
eos-update-server handle these requests either directly if such a file
exists or by redirecting them to /refs/remotes/$remote_name/$ref if
the remote $remote_name has a collection ID that matches $collection_id.
https://phabricator.endlessm.com/T18718",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,123,2017-11-06T19:45:17Z,2017-11-07T17:12:01Z,2017-11-07T17:12:05Z,MERGED,True,90,0,1,https://github.com/mwleeds,libeos-update-server: Support /refs/mirrors/ requests,3,[],https://github.com/endlessm/eos-updater/pull/123,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/123#issuecomment-342549584,"When peers request collection refs from each other, they can use the
format /refs/mirrors/$collection_id/$ref to avoid having to assume that
the remote name is the same on both machines. This commit makes
eos-update-server handle these requests either directly if such a file
exists or by redirecting them to /refs/remotes/$remote_name/$ref if
the remote $remote_name has a collection ID that matches $collection_id.
https://phabricator.endlessm.com/T18718",Thanks for the reviews; I addressed all the comments,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,124,2017-11-20T16:34:49Z,2017-11-20T21:47:29Z,2017-11-20T21:47:34Z,MERGED,True,2,1,1,https://github.com/pwithnall,docs: Minor clarification in eos-updater-avahi man page,1,[],https://github.com/endlessm/eos-updater/pull/124,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/124,"Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16589","Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16589",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,125,2017-11-20T18:05:10Z,2017-11-20T18:17:50Z,2017-11-20T18:17:53Z,MERGED,True,1,1,1,https://github.com/pwithnall,src: Fix crash caused by incorrect number of printf() parameters,1,[],https://github.com/endlessm/eos-updater/pull/125,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/125,"There was one more printf placeholder than parameters passed to
g_debug(), and for some reason this wasn’t noticed as a compiler
warning. It could intermittently cause crashes, depending on what’s on
the stack at the time (strlen() would be called on it).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19367","There was one more printf placeholder than parameters passed to
g_debug(), and for some reason this wasn’t noticed as a compiler
warning. It could intermittently cause crashes, depending on what’s on
the stack at the time (strlen() would be called on it).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T19367",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,126,2017-11-20T18:15:48Z,2017-11-20T23:28:25Z,2017-11-20T23:28:28Z,MERGED,True,66,468,10,https://github.com/pwithnall,eos-updater-avahi: Drop support for old-style DNS-SD record format,2,[],https://github.com/endlessm/eos-updater/pull/126,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/126,"No client code exists in the wild any more which will read it, so drop
it. No systems were ever deployed which used the old format, and any
modern versions of eos-updater read the new format only.
The only remnant left of the old format is some code in
eos-updater-avahi.c which deletes the old
/etc/avahi/services/eos-updater.service file if it still exists, to
stop Avahi from advertising the old records further.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T18774","No client code exists in the wild any more which will read it, so drop
it. No systems were ever deployed which used the old format, and any
modern versions of eos-updater read the new format only.
The only remnant left of the old format is some code in
eos-updater-avahi.c which deletes the old
/etc/avahi/services/eos-updater.service file if it still exists, to
stop Avahi from advertising the old records further.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T18774",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,126,2017-11-20T18:15:48Z,2017-11-20T23:28:25Z,2017-11-20T23:28:28Z,MERGED,True,66,468,10,https://github.com/pwithnall,eos-updater-avahi: Drop support for old-style DNS-SD record format,2,[],https://github.com/endlessm/eos-updater/pull/126,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/126#issuecomment-345782962,"No client code exists in the wild any more which will read it, so drop
it. No systems were ever deployed which used the old format, and any
modern versions of eos-updater read the new format only.
The only remnant left of the old format is some code in
eos-updater-avahi.c which deletes the old
/etc/avahi/services/eos-updater.service file if it still exists, to
stop Avahi from advertising the old records further.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T18774","(The first commit here is from #124, which should be reviewed first. It’s needed here in order to avoid merge conflicts.)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,127,2017-11-21T17:55:18Z,2017-11-22T05:02:49Z,2017-11-22T05:02:56Z,MERGED,True,2,18,2,https://github.com/pwithnall,docs: Drop outdated documentation for pulling from USB sticks,1,[],https://github.com/endlessm/eos-updater/pull/127,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/127,"You no longer need a [Source ""volume""] section, since USB sticks are
detected and enumerated automatically.
Signed-off-by: Philip Withnall withnall@endlessm.com","You no longer need a [Source ""volume""] section, since USB sticks are
detected and enumerated automatically.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,128,2017-11-21T18:48:17Z,2017-11-21T22:57:43Z,2017-11-21T22:57:45Z,MERGED,True,1,1,1,https://github.com/pwithnall,libeos-update-server: Fix serving mirror refs from non-default remotes,1,[],https://github.com/endlessm/eos-updater/pull/128,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/128,"Serving mirror refs from a remote other than the one set as
EusRepo:served-remote was broken due to passing the wrong remote name
around. Fix that.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T18718","Serving mirror refs from a remote other than the one set as
EusRepo:served-remote was broken due to passing the wrong remote name
around. Fix that.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T18718",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,129,2017-11-23T11:16:31Z,2017-12-20T17:15:03Z,2017-12-20T17:15:18Z,CLOSED,False,3994,69,15,https://github.com/smspillaz,"T19437, rebased",16,[],https://github.com/endlessm/eos-updater/pull/129,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/129,"This PR is the culmination of all the work expressed in T16682 and T19437, namely the flatpak auto-installer and the checkpoints commit work.
Also addressed some review feedback in separate commits where I'm not entirely sure about the approach, feel free to review them separately.
https://phabricator.endlessm.com/T19437
https://phabriactor.endlessm.com/T16682","This PR is the culmination of all the work expressed in T16682 and T19437, namely the flatpak auto-installer and the checkpoints commit work.
Also addressed some review feedback in separate commits where I'm not entirely sure about the approach, feel free to review them separately.
https://phabricator.endlessm.com/T19437
https://phabriactor.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,129,2017-11-23T11:16:31Z,2017-12-20T17:15:03Z,2017-12-20T17:15:18Z,CLOSED,False,3994,69,15,https://github.com/smspillaz,"T19437, rebased",16,[],https://github.com/endlessm/eos-updater/pull/129,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/129#issuecomment-350426897,"This PR is the culmination of all the work expressed in T16682 and T19437, namely the flatpak auto-installer and the checkpoints commit work.
Also addressed some review feedback in separate commits where I'm not entirely sure about the approach, feel free to review them separately.
https://phabricator.endlessm.com/T19437
https://phabriactor.endlessm.com/T16682","Okay, all the comments should now be addressed and I've split up the big ""fetch"" commit into a few smaller ones - basically one commit to introduce library changes, another commit to use them, etc etc.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,129,2017-11-23T11:16:31Z,2017-12-20T17:15:03Z,2017-12-20T17:15:18Z,CLOSED,False,3994,69,15,https://github.com/smspillaz,"T19437, rebased",16,[],https://github.com/endlessm/eos-updater/pull/129,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/129#issuecomment-353053045,"This PR is the culmination of all the work expressed in T16682 and T19437, namely the flatpak auto-installer and the checkpoints commit work.
Also addressed some review feedback in separate commits where I'm not entirely sure about the approach, feel free to review them separately.
https://phabricator.endlessm.com/T19437
https://phabriactor.endlessm.com/T16682",retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,129,2017-11-23T11:16:31Z,2017-12-20T17:15:03Z,2017-12-20T17:15:18Z,CLOSED,False,3994,69,15,https://github.com/smspillaz,"T19437, rebased",16,[],https://github.com/endlessm/eos-updater/pull/129,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/129#issuecomment-353125168,"This PR is the culmination of all the work expressed in T16682 and T19437, namely the flatpak auto-installer and the checkpoints commit work.
Also addressed some review feedback in separate commits where I'm not entirely sure about the approach, feel free to review them separately.
https://phabricator.endlessm.com/T19437
https://phabriactor.endlessm.com/T16682","All merged! #138 merged the last bits of this.
Some follow-up work is required: see https://phabricator.endlessm.com/T16682.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,130,2017-12-07T15:42:40Z,2017-12-07T23:12:09Z,2017-12-07T23:12:12Z,MERGED,True,0,3,1,https://github.com/pwithnall,libeos-updater-util: Remove code coverage from unit test code,1,[],https://github.com/endlessm/eos-updater/pull/130,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/130,"We don’t care about the coverage of the tests themselves, just the code
they’re testing.
Signed-off-by: Philip Withnall withnall@endlessm.com","We don’t care about the coverage of the tests themselves, just the code
they’re testing.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,131,2017-12-15T15:47:41Z,2017-12-18T09:57:44Z,2017-12-18T09:57:50Z,MERGED,True,3,0,1,https://github.com/pwithnall,tests: Add a comment explaining why we use a regex,1,[],https://github.com/endlessm/eos-updater/pull/131,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/131,"See
#129 (comment).
Signed-off-by: Philip Withnall withnall@endlessm.com","See
#129 (comment).
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,131,2017-12-15T15:47:41Z,2017-12-18T09:57:44Z,2017-12-18T09:57:50Z,MERGED,True,3,0,1,https://github.com/pwithnall,tests: Add a comment explaining why we use a regex,1,[],https://github.com/endlessm/eos-updater/pull/131,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/131#issuecomment-352100025,"See
#129 (comment).
Signed-off-by: Philip Withnall withnall@endlessm.com",retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,131,2017-12-15T15:47:41Z,2017-12-18T09:57:44Z,2017-12-18T09:57:50Z,MERGED,True,3,0,1,https://github.com/pwithnall,tests: Add a comment explaining why we use a regex,1,[],https://github.com/endlessm/eos-updater/pull/131,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/131#issuecomment-352101384,"See
#129 (comment).
Signed-off-by: Philip Withnall withnall@endlessm.com","retest this please

Jenkins, y u ignore me?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,131,2017-12-15T15:47:41Z,2017-12-18T09:57:44Z,2017-12-18T09:57:50Z,MERGED,True,3,0,1,https://github.com/pwithnall,tests: Add a comment explaining why we use a regex,1,[],https://github.com/endlessm/eos-updater/pull/131,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/131#issuecomment-352102447,"See
#129 (comment).
Signed-off-by: Philip Withnall withnall@endlessm.com",(Rebased and pushed and that kicked Jenkins into action.),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,132,2017-12-15T16:59:49Z,2017-12-15T20:01:41Z,2017-12-15T20:01:44Z,MERGED,True,15,6,3,https://github.com/pwithnall,build: Reduce json-glib dependency to 1.2.6 again,2,[],https://github.com/endlessm/eos-updater/pull/132,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/132,"My changes to the previous commit bumped the dependency without
checking that json-glib 1.4 was actually packaged. It isn’t. Drop our
dependency back down, but depend on a new update to the 1.2.6 package
which fixes an assertion failure we hit otherwise.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682","My changes to the previous commit bumped the dependency without
checking that json-glib 1.4 was actually packaged. It isn’t. Drop our
dependency back down, but depend on a new update to the 1.2.6 package
which fixes an assertion failure we hit otherwise.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,132,2017-12-15T16:59:49Z,2017-12-15T20:01:41Z,2017-12-15T20:01:44Z,MERGED,True,15,6,3,https://github.com/pwithnall,build: Reduce json-glib dependency to 1.2.6 again,2,[],https://github.com/endlessm/eos-updater/pull/132,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/132#issuecomment-352057259,"My changes to the previous commit bumped the dependency without
checking that json-glib 1.4 was actually packaged. It isn’t. Drop our
dependency back down, but depend on a new update to the 1.2.6 package
which fixes an assertion failure we hit otherwise.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682",This must not be merged until this package build has completed and been merged: https://obs-master.endlessm-sf.com/package/show?package=json-glib&project=home%3Awithnall%3Abranches%3Aeos%3Amaster%3Acore. We should also check the package version change in debian/control is correct for the new json-glib build.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,132,2017-12-15T16:59:49Z,2017-12-15T20:01:41Z,2017-12-15T20:01:44Z,MERGED,True,15,6,3,https://github.com/pwithnall,build: Reduce json-glib dependency to 1.2.6 again,2,[],https://github.com/endlessm/eos-updater/pull/132,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/132#issuecomment-352059364,"My changes to the previous commit bumped the dependency without
checking that json-glib 1.4 was actually packaged. It isn’t. Drop our
dependency back down, but depend on a new update to the 1.2.6 package
which fixes an assertion failure we hit otherwise.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682",⇒ Now depending on this merge request: https://obs-master.endlessm-sf.com/request/show/15481,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,132,2017-12-15T16:59:49Z,2017-12-15T20:01:41Z,2017-12-15T20:01:44Z,MERGED,True,15,6,3,https://github.com/pwithnall,build: Reduce json-glib dependency to 1.2.6 again,2,[],https://github.com/endlessm/eos-updater/pull/132,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/132#issuecomment-352091612,"My changes to the previous commit bumped the dependency without
checking that json-glib 1.4 was actually packaged. It isn’t. Drop our
dependency back down, but depend on a new update to the 1.2.6 package
which fixes an assertion failure we hit otherwise.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682",Now depends on https://obs-master.endlessm-sf.com/request/show/15482.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,132,2017-12-15T16:59:49Z,2017-12-15T20:01:41Z,2017-12-15T20:01:44Z,MERGED,True,15,6,3,https://github.com/pwithnall,build: Reduce json-glib dependency to 1.2.6 again,2,[],https://github.com/endlessm/eos-updater/pull/132,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/132#issuecomment-352098518,"My changes to the previous commit bumped the dependency without
checking that json-glib 1.4 was actually packaged. It isn’t. Drop our
dependency back down, but depend on a new update to the 1.2.6 package
which fixes an assertion failure we hit otherwise.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682","Merging on the basis that Emmanuele has reviewed one iteration of the code, and Mario has reviewed the Debian changes, and nobody is around to complain.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,133,2017-12-15T20:07:59Z,2017-12-18T14:34:41Z,2017-12-18T14:34:47Z,MERGED,True,15,14,2,https://github.com/pwithnall,Fixes for leaks spotted while reviewing T16682,2,[],https://github.com/endlessm/eos-updater/pull/133,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/133,A few leaks spotted while reviewing the next commit in https://phabricator.endlessm.com/T16682.,A few leaks spotted while reviewing the next commit in https://phabricator.endlessm.com/T16682.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,133,2017-12-15T20:07:59Z,2017-12-18T14:34:41Z,2017-12-18T14:34:47Z,MERGED,True,15,14,2,https://github.com/pwithnall,Fixes for leaks spotted while reviewing T16682,2,[],https://github.com/endlessm/eos-updater/pull/133,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/133#issuecomment-352384540,A few leaks spotted while reviewing the next commit in https://phabricator.endlessm.com/T16682.,Fixed a couple more instances (thanks for reminding me). Ready to merge.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,134,2017-12-18T12:53:05Z,2017-12-18T14:35:09Z,2017-12-18T14:35:12Z,MERGED,True,9,0,1,https://github.com/pwithnall,util/flatpak: Print ‘(None)’ when formatting empty lists,1,[],https://github.com/endlessm/eos-updater/pull/134,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/134,"Otherwise when eos-updater-flatpak-installer has nothing to do, its
output looks a little funny.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682","Otherwise when eos-updater-flatpak-installer has nothing to do, its
output looks a little funny.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,135,2017-12-18T12:54:12Z,2017-12-18T13:23:20Z,2017-12-18T13:23:23Z,MERGED,True,825,2,9,https://github.com/pwithnall,installer: Add eos-updater-flatpak-installer,1,[],https://github.com/endlessm/eos-updater/pull/135,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/135,"(This doesn’t really need reviewing; it’s the results of my review of one of the commits on #129, which I’m pushing here to get Jenkins to test run the build.)
This binary uses the functions in libeos-updater-flatpak-installer
to actually install flatpaks on reboot. It also has a ""check"" mode
which checks if the flatpak actions we claim to have applied are actually
fully-up-to-date on the system.
(Modified by Philip Withnall to improve formatting on man pages and fix
a few minor bugs found during review.)
https://phabricator.endlessm.com/T16682","(This doesn’t really need reviewing; it’s the results of my review of one of the commits on #129, which I’m pushing here to get Jenkins to test run the build.)
This binary uses the functions in libeos-updater-flatpak-installer
to actually install flatpaks on reboot. It also has a ""check"" mode
which checks if the flatpak actions we claim to have applied are actually
fully-up-to-date on the system.
(Modified by Philip Withnall to improve formatting on man pages and fix
a few minor bugs found during review.)
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,135,2017-12-18T12:54:12Z,2017-12-18T13:23:20Z,2017-12-18T13:23:23Z,MERGED,True,825,2,9,https://github.com/pwithnall,installer: Add eos-updater-flatpak-installer,1,[],https://github.com/endlessm/eos-updater/pull/135,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/135#issuecomment-352424020,"(This doesn’t really need reviewing; it’s the results of my review of one of the commits on #129, which I’m pushing here to get Jenkins to test run the build.)
This binary uses the functions in libeos-updater-flatpak-installer
to actually install flatpaks on reboot. It also has a ""check"" mode
which checks if the flatpak actions we claim to have applied are actually
fully-up-to-date on the system.
(Modified by Philip Withnall to improve formatting on man pages and fix
a few minor bugs found during review.)
https://phabricator.endlessm.com/T16682",Checks passed! Merging.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,136,2017-12-18T13:53:00Z,2017-12-18T14:35:26Z,2017-12-18T14:35:30Z,MERGED,True,430,12,7,https://github.com/pwithnall,poll: Allow distributors to override the refspec to update from,1,[],https://github.com/endlessm/eos-updater/pull/136,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/136,"(No need to review this unless really necessary; I’ve just reviewed it. I’m pushing this here to get Jenkins to test it.)
Use ""eos.checkpoint-target"" as a metadata item on a commit with
the name of a new refspec to pull from next time the updater
is run with that commit deployed.
This allows for ""checkpoint commits"", eg, stop updating the OS
at refspec eos-history-v1 and set its ""checkpoint target"" to
eos-history-v2. When eos-history-v1 is deployed, the next time
we fetch we'll fetch from eos-history-v2 instead and then from
that point forward will continue to fetch from eos-history-v2
since that was the booted refspec.
(Modified by Philip Withnall to fix some minor issues found during code
review.)
https://phabricator.endlessm.com/T19437
https://phabricator.endlessm.com/T16682","(No need to review this unless really necessary; I’ve just reviewed it. I’m pushing this here to get Jenkins to test it.)
Use ""eos.checkpoint-target"" as a metadata item on a commit with
the name of a new refspec to pull from next time the updater
is run with that commit deployed.
This allows for ""checkpoint commits"", eg, stop updating the OS
at refspec eos-history-v1 and set its ""checkpoint target"" to
eos-history-v2. When eos-history-v1 is deployed, the next time
we fetch we'll fetch from eos-history-v2 instead and then from
that point forward will continue to fetch from eos-history-v2
since that was the booted refspec.
(Modified by Philip Withnall to fix some minor issues found during code
review.)
https://phabricator.endlessm.com/T19437
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,137,2017-12-20T16:02:47Z,2017-12-20T16:16:08Z,2017-12-20T16:16:11Z,MERGED,True,34,31,8,https://github.com/pwithnall,T16682 next commit,6,[],https://github.com/endlessm/eos-updater/pull/137,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/137,Various commits cherry picked from #129. Pushing here to get Jenkins to test them; no need to review them manually since they’ve already been reviewed in #129.,Various commits cherry picked from #129. Pushing here to get Jenkins to test them; no need to review them manually since they’ve already been reviewed in #129.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,138,2017-12-20T16:59:26Z,2017-12-20T17:14:25Z,2017-12-20T17:14:29Z,MERGED,True,3937,39,6,https://github.com/pwithnall,T16682 next commit,2,[],https://github.com/endlessm/eos-updater/pull/138,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/138,"The final commits from #129, pushed here to get Jenkins testing before being merged. Do not review these manually, as they’ve already been reviewed in #129.","The final commits from #129, pushed here to get Jenkins testing before being merged. Do not review these manually, as they’ve already been reviewed in #129.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,139,2017-12-20T18:54:55Z,2017-12-21T12:24:45Z,2017-12-21T12:24:51Z,CLOSED,False,208,95,3,https://github.com/pwithnall,T16682 more parser tests,8,[],https://github.com/endlessm/eos-updater/pull/139,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/139,"Add more tests for the JSON autoinstall file parser, and get our code coverage up to 100% on it.
https://phabricator.endlessm.com/T16682","Add more tests for the JSON autoinstall file parser, and get our code coverage up to 100% on it.
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,139,2017-12-20T18:54:55Z,2017-12-21T12:24:45Z,2017-12-21T12:24:51Z,CLOSED,False,208,95,3,https://github.com/pwithnall,T16682 more parser tests,8,[],https://github.com/endlessm/eos-updater/pull/139,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/139#issuecomment-353226068,"Add more tests for the JSON autoinstall file parser, and get our code coverage up to 100% on it.
https://phabricator.endlessm.com/T16682",Just had a few thoughts on the *is_skipped stuff but other than that LGTM,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,139,2017-12-20T18:54:55Z,2017-12-21T12:24:45Z,2017-12-21T12:24:51Z,CLOSED,False,208,95,3,https://github.com/pwithnall,T16682 more parser tests,8,[],https://github.com/endlessm/eos-updater/pull/139,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/139#issuecomment-353337719,"Add more tests for the JSON autoinstall file parser, and get our code coverage up to 100% on it.
https://phabricator.endlessm.com/T16682","Since it was a fairly trivial refactoring to address your comments, I won’t wait for re-review (but will wait for Jenkins).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,139,2017-12-20T18:54:55Z,2017-12-21T12:24:45Z,2017-12-21T12:24:51Z,CLOSED,False,208,95,3,https://github.com/pwithnall,T16682 more parser tests,8,[],https://github.com/endlessm/eos-updater/pull/139,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/139#issuecomment-353337911,"Add more tests for the JSON autoinstall file parser, and get our code coverage up to 100% on it.
https://phabricator.endlessm.com/T16682","Jenkins, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,139,2017-12-20T18:54:55Z,2017-12-21T12:24:45Z,2017-12-21T12:24:51Z,CLOSED,False,208,95,3,https://github.com/pwithnall,T16682 more parser tests,8,[],https://github.com/endlessm/eos-updater/pull/139,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/139#issuecomment-353338205,"Add more tests for the JSON autoinstall file parser, and get our code coverage up to 100% on it.
https://phabricator.endlessm.com/T16682",Oh Jenkins. :-( Reported as https://phabricator.endlessm.com/T2254#523464. Merging regardless.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,140,2017-12-21T12:30:31Z,2017-12-21T22:56:18Z,2017-12-27T02:44:20Z,MERGED,True,8,8,2,https://github.com/pwithnall,debian: Sort .install files alphabetically,1,[],https://github.com/endlessm/eos-updater/pull/140,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/140,"Using sort.
Signed-off-by: Philip Withnall withnall@endlessm.com

It was one of the review comments from an earlier T16682 patch review.","Using sort.
Signed-off-by: Philip Withnall withnall@endlessm.com

It was one of the review comments from an earlier T16682 patch review.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,140,2017-12-21T12:30:31Z,2017-12-21T22:56:18Z,2017-12-27T02:44:20Z,MERGED,True,8,8,2,https://github.com/pwithnall,debian: Sort .install files alphabetically,1,[],https://github.com/endlessm/eos-updater/pull/140,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/140#issuecomment-353363922,"Using sort.
Signed-off-by: Philip Withnall withnall@endlessm.com

It was one of the review comments from an earlier T16682 patch review.","Yup, we were in need of this.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,140,2017-12-21T12:30:31Z,2017-12-21T22:56:18Z,2017-12-27T02:44:20Z,MERGED,True,8,8,2,https://github.com/pwithnall,debian: Sort .install files alphabetically,1,[],https://github.com/endlessm/eos-updater/pull/140,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/140#issuecomment-353364207,"Using sort.
Signed-off-by: Philip Withnall withnall@endlessm.com

It was one of the review comments from an earlier T16682 patch review.","Yup, we were in need of this.

Do you want to accept and merge it then? The Jenkins failure is spurious.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,140,2017-12-21T12:30:31Z,2017-12-21T22:56:18Z,2017-12-27T02:44:20Z,MERGED,True,8,8,2,https://github.com/pwithnall,debian: Sort .install files alphabetically,1,[],https://github.com/endlessm/eos-updater/pull/140,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/140#issuecomment-353378677,"Using sort.
Signed-off-by: Philip Withnall withnall@endlessm.com

It was one of the review comments from an earlier T16682 patch review.","Jenkins, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,140,2017-12-21T12:30:31Z,2017-12-21T22:56:18Z,2017-12-27T02:44:20Z,MERGED,True,8,8,2,https://github.com/pwithnall,debian: Sort .install files alphabetically,1,[],https://github.com/endlessm/eos-updater/pull/140,https://github.com/dbnicholson,5,https://github.com/endlessm/eos-updater/pull/140#issuecomment-353379712,"Using sort.
Signed-off-by: Philip Withnall withnall@endlessm.com

It was one of the review comments from an earlier T16682 patch review.",really retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,141,2017-12-21T14:09:18Z,2017-12-21T22:57:11Z,2017-12-27T02:41:22Z,MERGED,True,8,9,1,https://github.com/pwithnall,flatpak: Various small fixes to the autoinstall JSON schema,1,[],https://github.com/endlessm/eos-updater/pull/141,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/141,"• Remove trailing commas (invalid JSON)
• Remove duplicate required element
• Fix names of filters (the specification doesn’t pluralise them)
The resulting schema is valid according to:
json-schema-validate *.schema.json
using Walbottle (https://gitlab.com/walbottle/walbottle).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682","• Remove trailing commas (invalid JSON)
• Remove duplicate required element
• Fix names of filters (the specification doesn’t pluralise them)
The resulting schema is valid according to:
json-schema-validate *.schema.json
using Walbottle (https://gitlab.com/walbottle/walbottle).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,141,2017-12-21T14:09:18Z,2017-12-21T22:57:11Z,2017-12-27T02:41:22Z,MERGED,True,8,9,1,https://github.com/pwithnall,flatpak: Various small fixes to the autoinstall JSON schema,1,[],https://github.com/endlessm/eos-updater/pull/141,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/141#issuecomment-353378642,"• Remove trailing commas (invalid JSON)
• Remove duplicate required element
• Fix names of filters (the specification doesn’t pluralise them)
The resulting schema is valid according to:
json-schema-validate *.schema.json
using Walbottle (https://gitlab.com/walbottle/walbottle).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682","Jenkins, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,141,2017-12-21T14:09:18Z,2017-12-21T22:57:11Z,2017-12-27T02:41:22Z,MERGED,True,8,9,1,https://github.com/pwithnall,flatpak: Various small fixes to the autoinstall JSON schema,1,[],https://github.com/endlessm/eos-updater/pull/141,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/141#issuecomment-353380591,"• Remove trailing commas (invalid JSON)
• Remove duplicate required element
• Fix names of filters (the specification doesn’t pluralise them)
The resulting schema is valid according to:
json-schema-validate *.schema.json
using Walbottle (https://gitlab.com/walbottle/walbottle).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682","and again, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,141,2017-12-21T14:09:18Z,2017-12-21T22:57:11Z,2017-12-27T02:41:22Z,MERGED,True,8,9,1,https://github.com/pwithnall,flatpak: Various small fixes to the autoinstall JSON schema,1,[],https://github.com/endlessm/eos-updater/pull/141,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/141#issuecomment-353478643,"• Remove trailing commas (invalid JSON)
• Remove duplicate required element
• Fix names of filters (the specification doesn’t pluralise them)
The resulting schema is valid according to:
json-schema-validate *.schema.json
using Walbottle (https://gitlab.com/walbottle/walbottle).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T16682",Indeed - it was a thought for a future task. Lets merge this for now.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,142,2017-12-21T15:08:40Z,2018-01-04T10:09:46Z,2018-01-04T10:09:49Z,MERGED,True,37,1,4,https://github.com/pwithnall,T16682 spec compliance,4,[],https://github.com/endlessm/eos-updater/pull/142,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/142,"A few small fixes for the T16682 work to ensure it does everything the design says.
https://phabricator.endlessm.com/T16682","A few small fixes for the T16682 work to ensure it does everything the design says.
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,142,2017-12-21T15:08:40Z,2018-01-04T10:09:46Z,2018-01-04T10:09:49Z,MERGED,True,37,1,4,https://github.com/pwithnall,T16682 spec compliance,4,[],https://github.com/endlessm/eos-updater/pull/142,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/142#issuecomment-353378543,"A few small fixes for the T16682 work to ensure it does everything the design says.
https://phabricator.endlessm.com/T16682","Jenkins, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,142,2017-12-21T15:08:40Z,2018-01-04T10:09:46Z,2018-01-04T10:09:49Z,MERGED,True,37,1,4,https://github.com/pwithnall,T16682 spec compliance,4,[],https://github.com/endlessm/eos-updater/pull/142,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/142#issuecomment-353380574,"A few small fixes for the T16682 work to ensure it does everything the design says.
https://phabricator.endlessm.com/T16682","and again, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,142,2017-12-21T15:08:40Z,2018-01-04T10:09:46Z,2018-01-04T10:09:49Z,MERGED,True,37,1,4,https://github.com/pwithnall,T16682 spec compliance,4,[],https://github.com/endlessm/eos-updater/pull/142,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/142#issuecomment-355167924,"A few small fixes for the T16682 work to ensure it does everything the design says.
https://phabricator.endlessm.com/T16682","Other than that, this looks fine to me. Happy to merge it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,143,2018-01-02T13:48:10Z,2018-01-03T14:06:16Z,2018-01-04T00:40:18Z,MERGED,True,5,3,1,https://github.com/smspillaz,T16682: Various fixes to the eos-updater-flatpak-installer.service unit,3,[],https://github.com/endlessm/eos-updater/pull/143,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/143,"Various fixes to the unit file to ensure that it runs correctly on boot.
https://phabricator.endlessm.com/T16682","Various fixes to the unit file to ensure that it runs correctly on boot.
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,143,2018-01-02T13:48:10Z,2018-01-03T14:06:16Z,2018-01-04T00:40:18Z,MERGED,True,5,3,1,https://github.com/smspillaz,T16682: Various fixes to the eos-updater-flatpak-installer.service unit,3,[],https://github.com/endlessm/eos-updater/pull/143,https://github.com/cosimoc,2,https://github.com/endlessm/eos-updater/pull/143#issuecomment-354964332,"Various fixes to the unit file to ensure that it runs correctly on boot.
https://phabricator.endlessm.com/T16682",@smspillaz Did you push an updated PR? I still see the version with ConditionNeedsUpdate=/var removed here.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,143,2018-01-02T13:48:10Z,2018-01-03T14:06:16Z,2018-01-04T00:40:18Z,MERGED,True,5,3,1,https://github.com/smspillaz,T16682: Various fixes to the eos-updater-flatpak-installer.service unit,3,[],https://github.com/endlessm/eos-updater/pull/143,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/143#issuecomment-354991317,"Various fixes to the unit file to ensure that it runs correctly on boot.
https://phabricator.endlessm.com/T16682",@cosimoc Must not have pushed it. The relevant commit that removed it is now gone.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,144,2018-01-04T00:36:36Z,2018-01-04T06:35:18Z,2018-01-04T06:35:20Z,MERGED,True,1,0,1,https://github.com/smspillaz,flatpak-installer: Add Conflicts=shutdown.target,1,[],https://github.com/endlessm/eos-updater/pull/144,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/144,"Otherwise a shutdown will interrupt installation.
https://phabricator.endlessm.com/T16682","Otherwise a shutdown will interrupt installation.
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,145,2018-01-09T02:06:16Z,2018-01-09T10:17:26Z,2018-01-09T10:18:03Z,MERGED,True,6,0,1,https://github.com/mwleeds,poll: Fail gracefully w/o OstreeRepoFinderAvahi,1,[],https://github.com/endlessm/eos-updater/pull/145,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/145,"If the OstreeRepoFinderAvahi instance fails to start (which can
happen if libostree is compiled without avahi support), eos-updater hits
an assertion failure when it passes an empty array to
ostree_repo_find_remotes_async. Change it to instead print a meaningful
error message.
https://phabricator.endlessm.com/T19367","If the OstreeRepoFinderAvahi instance fails to start (which can
happen if libostree is compiled without avahi support), eos-updater hits
an assertion failure when it passes an empty array to
ostree_repo_find_remotes_async. Change it to instead print a meaningful
error message.
https://phabricator.endlessm.com/T19367",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,146,2018-01-13T02:26:07Z,2018-01-15T15:28:37Z,2018-01-15T15:28:40Z,MERGED,True,5,8,3,https://github.com/smspillaz,T16682: Additional service file touchups,7,[],https://github.com/endlessm/eos-updater/pull/146,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/146,"Some additional fixes to T16682, particularly in permissions that seemed to be getting in the way when installing com.endlessm.CompanionAppService
https://phabricator.endlessm.com/T20708","Some additional fixes to T16682, particularly in permissions that seemed to be getting in the way when installing com.endlessm.CompanionAppService
https://phabricator.endlessm.com/T20708",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,146,2018-01-13T02:26:07Z,2018-01-15T15:28:37Z,2018-01-15T15:28:40Z,MERGED,True,5,8,3,https://github.com/smspillaz,T16682: Additional service file touchups,7,[],https://github.com/endlessm/eos-updater/pull/146,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/146#issuecomment-357689744,"Some additional fixes to T16682, particularly in permissions that seemed to be getting in the way when installing com.endlessm.CompanionAppService
https://phabricator.endlessm.com/T20708","This looks good to me now, but let’s wait for Jenkins to pass/fail before merging.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,146,2018-01-13T02:26:07Z,2018-01-15T15:28:37Z,2018-01-15T15:28:40Z,MERGED,True,5,8,3,https://github.com/smspillaz,T16682: Additional service file touchups,7,[],https://github.com/endlessm/eos-updater/pull/146,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/146#issuecomment-357690110,"Some additional fixes to T16682, particularly in permissions that seemed to be getting in the way when installing com.endlessm.CompanionAppService
https://phabricator.endlessm.com/T20708","Oh Jenkins, why do you have to make me sad so?
The tests failed, but with the same error as before, so we should really wait for this OSTree change to make its way through OBS before retesting.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,146,2018-01-13T02:26:07Z,2018-01-15T15:28:37Z,2018-01-15T15:28:40Z,MERGED,True,5,8,3,https://github.com/smspillaz,T16682: Additional service file touchups,7,[],https://github.com/endlessm/eos-updater/pull/146,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/146#issuecomment-357705818,"Some additional fixes to T16682, particularly in permissions that seemed to be getting in the way when installing com.endlessm.CompanionAppService
https://phabricator.endlessm.com/T20708","Jenkins, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,147,2018-01-14T22:42:41Z,2018-01-15T10:28:40Z,2018-01-15T11:05:34Z,MERGED,True,20,9,2,https://github.com/smspillaz,util: Override architecture during testing,1,[],https://github.com/endlessm/eos-updater/pull/147,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/147,"This means explicitly passing the architecture to
FlatpakRef's constructor so that we can pass an overridden one.
https://phabricator.endlessm.com/T16682","This means explicitly passing the architecture to
FlatpakRef's constructor so that we can pass an overridden one.
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,147,2018-01-14T22:42:41Z,2018-01-15T10:28:40Z,2018-01-15T11:05:34Z,MERGED,True,20,9,2,https://github.com/smspillaz,util: Override architecture during testing,1,[],https://github.com/endlessm/eos-updater/pull/147,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/147#issuecomment-357651630,"This means explicitly passing the architecture to
FlatpakRef's constructor so that we can pass an overridden one.
https://phabricator.endlessm.com/T16682","The build fails with this branch, but it also fails without this branch. The failure has been introduced by OSTree now being compiled with Avahi support enabled, which causes anything using the ostree command to fail on the CI machines, since the Avahi daemon isn’t running on them.
We need a separate PR to pass --finders=config or --finders=config,mount (but not --finders=config,mount,lan) to ostree, as per this commit which does it in ostree.git. Note that we’d need to bump our OSTree dependency in debian-master. @smspillaz, does that make sense?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,148,2018-01-15T10:51:22Z,2018-01-15T11:03:22Z,2018-01-15T11:03:24Z,CLOSED,False,9,20,2,https://github.com/pwithnall,"Revert ""util: Override architecture during testing""",1,[],https://github.com/endlessm/eos-updater/pull/148,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/148,"This reverts commit 1f6fb8f.
Don’t merge this. I want to test if the failure in https://ci.endlessm-sf.com/job/obs-eos-updater-master/216/console is in eos-updater or ostree.","This reverts commit 1f6fb8f.
Don’t merge this. I want to test if the failure in https://ci.endlessm-sf.com/job/obs-eos-updater-master/216/console is in eos-updater or ostree.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,149,2018-01-15T18:13:01Z,2018-01-16T14:36:11Z,2018-01-16T14:36:14Z,MERGED,True,18,486,11,https://github.com/pwithnall,T15923 Thread safety documentation and warning fixes,2,[],https://github.com/endlessm/eos-updater/pull/149,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/149,https://phabricator.endlessm.com/T15923,https://phabricator.endlessm.com/T15923,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,149,2018-01-15T18:13:01Z,2018-01-16T14:36:11Z,2018-01-16T14:36:14Z,MERGED,True,18,486,11,https://github.com/pwithnall,T15923 Thread safety documentation and warning fixes,2,[],https://github.com/endlessm/eos-updater/pull/149,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/149#issuecomment-357978860,https://phabricator.endlessm.com/T15923,"Do we pass EosUpdater to worker threads? Maybe we shouldn't be doing that ...

Argh, so we do. I’ll follow up on that in the task.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,150,2018-01-16T15:45:26Z,2018-01-23T11:37:29Z,2018-01-23T11:37:32Z,MERGED,True,116,62,3,https://github.com/pwithnall,src: Improvements to thread safety for apply and fetch operations,1,[],https://github.com/endlessm/eos-updater/pull/150,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/150,"This does not make things fully thread safe. In particular, the poll
operation is still a complete mess, and the fetch operation still has
some non-thread-safe accesses to the EosUpdaterData struct. The apply
operation should be thread-safe now though.
All the operations (poll, fetch, apply) use a single worker thread each
to do the bulk of their work. These were previously passed pointers to
the EosUpdater and EosUpdaterData structs, which are also used in the
main thread. This was not thread safe.
Fix that by adding a per-operation struct (ApplyData or FetchData) into
which the data needed by the worker thread is copied before the main
thread forks. In the case of the fetch operation, this includes an
OstreeAsyncProgress object, which reports progress data back to the main
thread. This is thread safe, since its callback is scheduled in the main
thread’s default GMainContext.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15923","This does not make things fully thread safe. In particular, the poll
operation is still a complete mess, and the fetch operation still has
some non-thread-safe accesses to the EosUpdaterData struct. The apply
operation should be thread-safe now though.
All the operations (poll, fetch, apply) use a single worker thread each
to do the bulk of their work. These were previously passed pointers to
the EosUpdater and EosUpdaterData structs, which are also used in the
main thread. This was not thread safe.
Fix that by adding a per-operation struct (ApplyData or FetchData) into
which the data needed by the worker thread is copied before the main
thread forks. In the case of the fetch operation, this includes an
OstreeAsyncProgress object, which reports progress data back to the main
thread. This is thread safe, since its callback is scheduled in the main
thread’s default GMainContext.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T15923",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,151,2018-01-19T15:20:08Z,2018-01-19T17:42:11Z,2018-01-19T17:42:14Z,MERGED,True,20,23,1,https://github.com/pwithnall,T20812 flatpak checks,2,[],https://github.com/endlessm/eos-updater/pull/151,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/151,Fix checks on collection IDs vs remote names from the autoinstall JSON files. See https://phabricator.endlessm.com/T20812.,Fix checks on collection IDs vs remote names from the autoinstall JSON files. See https://phabricator.endlessm.com/T20812.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,152,2018-01-20T00:38:39Z,2018-01-24T00:23:42Z,2018-05-02T17:38:56Z,MERGED,True,307,12,6,https://github.com/smspillaz,T20812: Add testcase for systems that don't yet have collection-ids,4,[],https://github.com/endlessm/eos-updater/pull/152,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/152,"It's the test we had to have.
https://phabricator.endlessm.com/T20812","It's the test we had to have.
https://phabricator.endlessm.com/T20812",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,153,2018-01-20T11:54:14Z,2018-01-22T13:04:12Z,2018-05-02T17:38:56Z,MERGED,True,0,0,0,https://github.com/smspillaz,"T20809: Add tests, make branch mandatory",0,[],https://github.com/endlessm/eos-updater/pull/153,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/153,https://phabricator.endlessm.com/T20809,https://phabricator.endlessm.com/T20809,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,154,2018-01-22T13:16:44Z,2018-01-22T22:57:31Z,2018-01-24T00:31:04Z,MERGED,True,858,191,13,https://github.com/smspillaz,T20809: Make 'branch' specification mandatory,13,[],https://github.com/endlessm/eos-updater/pull/154,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/154,https://phabricator.endlessm.com/T20809,https://phabricator.endlessm.com/T20809,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,155,2018-01-23T13:35:52Z,2018-01-24T15:11:10Z,2018-05-02T17:38:54Z,MERGED,True,22,4,4,https://github.com/smspillaz,T20809: Some follow-up comments,4,[],https://github.com/endlessm/eos-updater/pull/155,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/155,https://phabricator.endlessm.com/T20809,https://phabricator.endlessm.com/T20809,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,155,2018-01-23T13:35:52Z,2018-01-24T15:11:10Z,2018-05-02T17:38:54Z,MERGED,True,22,4,4,https://github.com/smspillaz,T20809: Some follow-up comments,4,[],https://github.com/endlessm/eos-updater/pull/155,https://github.com/cosimoc,2,https://github.com/endlessm/eos-updater/pull/155#issuecomment-359871115,https://phabricator.endlessm.com/T20809,"This needs #152 to go in first, so let's hold the merge until https://phabricator.endlessm.com/T20812 is merged. @ramcq and/or @pwithnall may also want to take a look :)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,156,2018-01-24T00:22:41Z,2018-01-24T15:52:57Z,2018-01-24T15:53:00Z,MERGED,True,22,0,1,https://github.com/smspillaz,"T20876: Add test for invalid entry as ""serial"" number",1,[],https://github.com/endlessm/eos-updater/pull/156,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/156,https://phabricator.endlessm.com/T20876,https://phabricator.endlessm.com/T20876,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,156,2018-01-24T00:22:41Z,2018-01-24T15:52:57Z,2018-01-24T15:53:00Z,MERGED,True,22,0,1,https://github.com/smspillaz,"T20876: Add test for invalid entry as ""serial"" number",1,[],https://github.com/endlessm/eos-updater/pull/156,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/156#issuecomment-360110305,https://phabricator.endlessm.com/T20876,Good point. I'll add such a test now.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,156,2018-01-24T00:22:41Z,2018-01-24T15:52:57Z,2018-01-24T15:53:00Z,MERGED,True,22,0,1,https://github.com/smspillaz,"T20876: Add test for invalid entry as ""serial"" number",1,[],https://github.com/endlessm/eos-updater/pull/156,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/156#issuecomment-360167090,https://phabricator.endlessm.com/T20876,"This looks good to me, but needs rebasing to avoid the conflicts.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,156,2018-01-24T00:22:41Z,2018-01-24T15:52:57Z,2018-01-24T15:53:00Z,MERGED,True,22,0,1,https://github.com/smspillaz,"T20876: Add test for invalid entry as ""serial"" number",1,[],https://github.com/endlessm/eos-updater/pull/156,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/156#issuecomment-360170274,https://phabricator.endlessm.com/T20876,"Yeah, that second commit was obviated by 0711a90 . Rebased.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,156,2018-01-24T00:22:41Z,2018-01-24T15:52:57Z,2018-01-24T15:53:00Z,MERGED,True,22,0,1,https://github.com/smspillaz,"T20876: Add test for invalid entry as ""serial"" number",1,[],https://github.com/endlessm/eos-updater/pull/156,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/156#issuecomment-360179041,https://phabricator.endlessm.com/T20876,Jenkins checks passed. Merging.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,157,2018-01-24T02:12:47Z,2018-01-24T15:13:24Z,2018-01-24T15:13:28Z,MERGED,True,258,4,3,https://github.com/smspillaz,T20881: Ignore FLATPAK_ERROR_ALREADY_INSTALLED when updating,2,[],https://github.com/endlessm/eos-updater/pull/157,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/157,"Arguably a design bug in Flatpak itself.
https://phabricator.endlessm.com/T20881","Arguably a design bug in Flatpak itself.
https://phabricator.endlessm.com/T20881",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,158,2018-01-24T14:23:19Z,2018-01-24T14:54:57Z,2018-01-24T14:55:00Z,MERGED,True,7,2,1,https://github.com/smspillaz,T20809: Restore clobbered test,2,[],https://github.com/endlessm/eos-updater/pull/158,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/158,"This was accidentally nuked in #155 .
https://phabricator.endlessm.com/T20809","This was accidentally nuked in #155 .
https://phabricator.endlessm.com/T20809",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,159,2018-01-24T14:35:55Z,2018-01-24T14:54:50Z,2018-01-24T14:54:52Z,MERGED,True,36,17,4,https://github.com/pwithnall,T20888 Improve handling of invalid /ostree/repos,2,[],https://github.com/endlessm/eos-updater/pull/159,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/159,https://phabricator.endlessm.com/T20888,https://phabricator.endlessm.com/T20888,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,160,2018-01-24T22:38:51Z,2018-01-25T17:11:59Z,2018-01-25T17:25:35Z,MERGED,True,2,2,1,https://github.com/ramcq,flatpak-updater: add eos-extra-settled.target as pre-requisite,1,[],https://github.com/endlessm/eos-updater/pull/160,https://github.com/ramcq,1,https://github.com/endlessm/eos-updater/pull/160,"eos-extra-settled.target is generated with a dependency on the SD
card being mounted at /var/endless-extra on ""split"" systems which
have their Flatpaks on the SD card. Adding this dependency makes
sure that the Flatpak system installation is ready/accessible
before we try and deploy the Flatpaks - although it has the side
effect that this unit won't complete on systems where the SD card
is missing.
https://phabricator.endlessm.com/T20696","eos-extra-settled.target is generated with a dependency on the SD
card being mounted at /var/endless-extra on ""split"" systems which
have their Flatpaks on the SD card. Adding this dependency makes
sure that the Flatpak system installation is ready/accessible
before we try and deploy the Flatpaks - although it has the side
effect that this unit won't complete on systems where the SD card
is missing.
https://phabricator.endlessm.com/T20696",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,161,2018-01-26T14:47:50Z,2018-01-31T17:23:13Z,2018-01-31T17:23:13Z,CLOSED,False,1,1,1,https://github.com/smspillaz,flatpak-installer: Remove @chown from blacklist,1,[],https://github.com/endlessm/eos-updater/pull/161,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/161,"This isn't supported on systemd 232
https://phabricator.endlessm.com/T20944","This isn't supported on systemd 232
https://phabricator.endlessm.com/T20944",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,161,2018-01-26T14:47:50Z,2018-01-31T17:23:13Z,2018-01-31T17:23:13Z,CLOSED,False,1,1,1,https://github.com/smspillaz,flatpak-installer: Remove @chown from blacklist,1,[],https://github.com/endlessm/eos-updater/pull/161,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/161#issuecomment-362005982,"This isn't supported on systemd 232
https://phabricator.endlessm.com/T20944",Closing unmerged as per https://phabricator.endlessm.com/T20944#537822.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,162,2018-01-26T17:20:44Z,2018-01-26T21:38:16Z,2018-01-26T21:38:19Z,MERGED,True,8,3,2,https://github.com/pwithnall,docs: Clarify command line format for eos-updater-prepare-volume,1,[],https://github.com/endlessm/eos-updater/pull/162,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/162,"Hopefully make it a little clearer what format the flatpak refs are
expected in for the apps to copy to the USB stick.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T20926","Hopefully make it a little clearer what format the flatpak refs are
expected in for the apps to copy to the USB stick.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T20926",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,163,2018-01-29T14:07:53Z,2018-01-29T21:42:13Z,2018-01-29T21:42:20Z,MERGED,True,38,37,2,https://github.com/pwithnall,T20958 Fix NULL remote names in refspecs,2,[],https://github.com/endlessm/eos-updater/pull/163,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/163,Potential fix for https://phabricator.endlessm.com/T20958. Only compile tested. See the commit messages for details.,Potential fix for https://phabricator.endlessm.com/T20958. Only compile tested. See the commit messages for details.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,163,2018-01-29T14:07:53Z,2018-01-29T21:42:13Z,2018-01-29T21:42:20Z,MERGED,True,38,37,2,https://github.com/pwithnall,T20958 Fix NULL remote names in refspecs,2,[],https://github.com/endlessm/eos-updater/pull/163,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/163#issuecomment-361396342,Potential fix for https://phabricator.endlessm.com/T20958. Only compile tested. See the commit messages for details.,LGTM. There's still one call site for ostree_parse_refspec that doesn't check for remote == NULL but I can submit a separate PR for that,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,164,2018-01-29T21:54:32Z,2018-01-30T12:19:45Z,2018-01-30T12:19:48Z,MERGED,True,8,0,1,https://github.com/mwleeds,fetch: Check for invalid refspec,1,[],https://github.com/endlessm/eos-updater/pull/164,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/164,"If a refspec is of the form ""some-ref"" rather than
""remote-name:some-ref"", ostree_parse_refspec() returns NULL for the
remote parameter, so check for that possibility in content_fetch_old().","If a refspec is of the form ""some-ref"" rather than
""remote-name:some-ref"", ostree_parse_refspec() returns NULL for the
remote parameter, so check for that possibility in content_fetch_old().",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,165,2018-01-30T12:20:58Z,2018-01-30T19:45:14Z,2018-01-30T19:45:22Z,MERGED,True,2,0,1,https://github.com/pwithnall,eos-updater-prepare-volume: Handle empty remote name from parse_refspec,1,[],https://github.com/endlessm/eos-updater/pull/165,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/165,"As with previous commits, this adds robustness to
eos-updater-prepare-volume in case the origin is not configured
correctly (this is not expected to happen).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T20958","As with previous commits, this adds robustness to
eos-updater-prepare-volume in case the origin is not configured
correctly (this is not expected to happen).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T20958",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,166,2018-01-31T15:33:09Z,2018-01-31T17:21:35Z,2018-01-31T17:48:06Z,MERGED,True,2,2,1,https://github.com/ramcq,flatpak-installer: tidy up debug messages,1,[],https://github.com/endlessm/eos-updater/pull/166,https://github.com/ramcq,1,https://github.com/endlessm/eos-updater/pull/166,"Always printed ""is installed"" regardless of return value of function.","Always printed ""is installed"" regardless of return value of function.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,166,2018-01-31T15:33:09Z,2018-01-31T17:21:35Z,2018-01-31T17:48:06Z,MERGED,True,2,2,1,https://github.com/ramcq,flatpak-installer: tidy up debug messages,1,[],https://github.com/endlessm/eos-updater/pull/166,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/166#issuecomment-361973205,"Always printed ""is installed"" regardless of return value of function.",I’m going to wait for Jenkins to approve this before merging it.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,166,2018-01-31T15:33:09Z,2018-01-31T17:21:35Z,2018-01-31T17:48:06Z,MERGED,True,2,2,1,https://github.com/ramcq,flatpak-installer: tidy up debug messages,1,[],https://github.com/endlessm/eos-updater/pull/166,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/166#issuecomment-362013511,"Always printed ""is installed"" regardless of return value of function.","However, that first change should be something which should have been caught by compiler warnings. Could you quickly check to make sure we’re passing all the appropriate warning flags in here?

I’ve tracked this down; it’s an upstream bug with the structured version of g_message(). In eos-updater, we are passing the correct flag to the compiler (-Wformat=2), and if we (for example) have a format problem with a raw printf() call, it is detected.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,166,2018-01-31T15:33:09Z,2018-01-31T17:21:35Z,2018-01-31T17:48:06Z,MERGED,True,2,2,1,https://github.com/ramcq,flatpak-installer: tidy up debug messages,1,[],https://github.com/endlessm/eos-updater/pull/166,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/166#issuecomment-362013638,"Always printed ""is installed"" regardless of return value of function.",I’ll fix this upstream and backport it.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,167,2018-02-01T17:09:12Z,2018-02-02T00:10:01Z,2018-02-02T00:10:03Z,MERGED,True,2,2,1,https://github.com/ramcq,flatpak-installer: modify unit to use After/Requires,1,[],https://github.com/endlessm/eos-updater/pull/167,https://github.com/ramcq,1,https://github.com/endlessm/eos-updater/pull/167,"Upgrade Wants to Requires so the unit can't run without the /var/endless-extra
being settled. Use local-fs.target instead of ostree-remount.service.
https://phabricator.endlessm.com/T20696","Upgrade Wants to Requires so the unit can't run without the /var/endless-extra
being settled. Use local-fs.target instead of ostree-remount.service.
https://phabricator.endlessm.com/T20696",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,168,2018-02-08T18:36:40Z,2018-02-14T13:31:47Z,2018-02-14T13:32:12Z,CLOSED,False,379,167,21,https://github.com/pwithnall,T20396 Add metered data scheduling support to eos-updater,10,[],https://github.com/endlessm/eos-updater/pull/168,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/168,"https://phabricator.endlessm.com/T20396

Ready to merge once it passes review","https://phabricator.endlessm.com/T20396

Ready to merge once it passes review",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,168,2018-02-08T18:36:40Z,2018-02-14T13:31:47Z,2018-02-14T13:32:12Z,CLOSED,False,379,167,21,https://github.com/pwithnall,T20396 Add metered data scheduling support to eos-updater,10,[],https://github.com/endlessm/eos-updater/pull/168,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/168#issuecomment-364530238,"https://phabricator.endlessm.com/T20396

Ready to merge once it passes review","Fixups and some additional commits pushed, which should get the tests going (although I suspect Jenkins will fail due to the Mogwai packages not being built successfully by OBS yet).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,168,2018-02-08T18:36:40Z,2018-02-14T13:31:47Z,2018-02-14T13:32:12Z,CLOSED,False,379,167,21,https://github.com/pwithnall,T20396 Add metered data scheduling support to eos-updater,10,[],https://github.com/endlessm/eos-updater/pull/168,https://github.com/wjt,3,https://github.com/endlessm/eos-updater/pull/168#issuecomment-364899038,"https://phabricator.endlessm.com/T20396

Ready to merge once it passes review",@eos-shell-build retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,168,2018-02-08T18:36:40Z,2018-02-14T13:31:47Z,2018-02-14T13:32:12Z,CLOSED,False,379,167,21,https://github.com/pwithnall,T20396 Add metered data scheduling support to eos-updater,10,[],https://github.com/endlessm/eos-updater/pull/168,https://github.com/wjt,4,https://github.com/endlessm/eos-updater/pull/168#issuecomment-365599154,"https://phabricator.endlessm.com/T20396

Ready to merge once it passes review",retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,168,2018-02-08T18:36:40Z,2018-02-14T13:31:47Z,2018-02-14T13:32:12Z,CLOSED,False,379,167,21,https://github.com/pwithnall,T20396 Add metered data scheduling support to eos-updater,10,[],https://github.com/endlessm/eos-updater/pull/168,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/168#issuecomment-365606699,"https://phabricator.endlessm.com/T20396

Ready to merge once it passes review","retest this please

It passed! \o/",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,168,2018-02-08T18:36:40Z,2018-02-14T13:31:47Z,2018-02-14T13:32:12Z,CLOSED,False,379,167,21,https://github.com/pwithnall,T20396 Add metered data scheduling support to eos-updater,10,[],https://github.com/endlessm/eos-updater/pull/168,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/168#issuecomment-365606894,"https://phabricator.endlessm.com/T20396

Ready to merge once it passes review","And now it’s testing again because I quoted the command. 😩
I’ll merge based on your test result. Thanks for your persistent reviews. 😄",True,{'LAUGH': ['https://github.com/wjt']}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,168,2018-02-08T18:36:40Z,2018-02-14T13:31:47Z,2018-02-14T13:32:12Z,CLOSED,False,379,167,21,https://github.com/pwithnall,T20396 Add metered data scheduling support to eos-updater,10,[],https://github.com/endlessm/eos-updater/pull/168,https://github.com/pwithnall,7,https://github.com/endlessm/eos-updater/pull/168#issuecomment-365607598,"https://phabricator.endlessm.com/T20396

Ready to merge once it passes review",Squashed and merged manually.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,169,2018-02-13T12:16:55Z,2018-02-13T17:25:19Z,2018-02-13T17:25:25Z,MERGED,True,228,279,10,https://github.com/pwithnall,T21123 Fix potential crash when calling PollVolume(),13,[],https://github.com/endlessm/eos-updater/pull/169,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/169,"This fixes a potential crash, and a definite timeout/failure to reply when calling PollVolume() — see https://phabricator.endlessm.com/T21123. It also moves us closer to eliminating the threading problems in eos-updater (https://phabricator.endlessm.com/T15923, https://phabricator.endlessm.com/T20858). It also fixes a definite mess up with the GMainContexts when using a normal Poll().
A lot of the initial commits are just tidying up the code, and don’t change behaviour. The later commits do (and the commit messages highlight this).
https://phabricator.endlessm.com/T21123","This fixes a potential crash, and a definite timeout/failure to reply when calling PollVolume() — see https://phabricator.endlessm.com/T21123. It also moves us closer to eliminating the threading problems in eos-updater (https://phabricator.endlessm.com/T15923, https://phabricator.endlessm.com/T20858). It also fixes a definite mess up with the GMainContexts when using a normal Poll().
A lot of the initial commits are just tidying up the code, and don’t change behaviour. The later commits do (and the commit messages highlight this).
https://phabricator.endlessm.com/T21123",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,170,2018-02-14T20:42:03Z,2018-02-15T09:18:40Z,2018-02-15T09:18:43Z,CLOSED,False,1,1,1,https://github.com/wjt,data: remove non-existent @chown syscall group,1,[],https://github.com/endlessm/eos-updater/pull/170,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/170,"I spotted the following in the journal:
Feb 14 19:33:05 endless systemd[1]:
[/lib/systemd/system/eos-updater-flatpak-installer.service:42] Don't
know system call group, ignoring: @chown

The @ syntax is used to refer to groups of system calls. The list of
known groups is documented in systemd.exec(5) and does not include
@chown. The chown syscall is part of the @privileged syscall group,
which per a comment above is deliberately allowed.
The current behaviour is that this service is allowed to invoke chown.
I think that's fine given it is also deliberately allowed to invoke much
more serious syscalls.
https://phabricator.endlessm.com/T16682","I spotted the following in the journal:
Feb 14 19:33:05 endless systemd[1]:
[/lib/systemd/system/eos-updater-flatpak-installer.service:42] Don't
know system call group, ignoring: @chown

The @ syntax is used to refer to groups of system calls. The list of
known groups is documented in systemd.exec(5) and does not include
@chown. The chown syscall is part of the @privileged syscall group,
which per a comment above is deliberately allowed.
The current behaviour is that this service is allowed to invoke chown.
I think that's fine given it is also deliberately allowed to invoke much
more serious syscalls.
https://phabricator.endlessm.com/T16682",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,170,2018-02-14T20:42:03Z,2018-02-15T09:18:40Z,2018-02-15T09:18:43Z,CLOSED,False,1,1,1,https://github.com/wjt,data: remove non-existent @chown syscall group,1,[],https://github.com/endlessm/eos-updater/pull/170,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/170#issuecomment-365785115,"I spotted the following in the journal:
Feb 14 19:33:05 endless systemd[1]:
[/lib/systemd/system/eos-updater-flatpak-installer.service:42] Don't
know system call group, ignoring: @chown

The @ syntax is used to refer to groups of system calls. The list of
known groups is documented in systemd.exec(5) and does not include
@chown. The chown syscall is part of the @privileged syscall group,
which per a comment above is deliberately allowed.
The current behaviour is that this service is allowed to invoke chown.
I think that's fine given it is also deliberately allowed to invoke much
more serious syscalls.
https://phabricator.endlessm.com/T16682",I believe that @pwithnall wanted to keep this line despite the warning,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,170,2018-02-14T20:42:03Z,2018-02-15T09:18:40Z,2018-02-15T09:18:43Z,CLOSED,False,1,1,1,https://github.com/wjt,data: remove non-existent @chown syscall group,1,[],https://github.com/endlessm/eos-updater/pull/170,https://github.com/wjt,3,https://github.com/endlessm/eos-updater/pull/170#issuecomment-365868018,"I spotted the following in the journal:
Feb 14 19:33:05 endless systemd[1]:
[/lib/systemd/system/eos-updater-flatpak-installer.service:42] Don't
know system call group, ignoring: @chown

The @ syntax is used to refer to groups of system calls. The list of
known groups is documented in systemd.exec(5) and does not include
@chown. The chown syscall is part of the @privileged syscall group,
which per a comment above is deliberately allowed.
The current behaviour is that this service is allowed to invoke chown.
I think that's fine given it is also deliberately allowed to invoke much
more serious syscalls.
https://phabricator.endlessm.com/T16682","Ah, @chown is introduced in systemd v235. Fine.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,171,2018-02-21T16:35:36Z,2018-02-21T16:41:19Z,2018-02-21T16:41:24Z,MERGED,True,1,0,1,https://github.com/pwithnall,debian: Make eos-updater depend on mogwai-scheduled,1,[],https://github.com/endlessm/eos-updater/pull/171,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/171,"Since the updater now queries the download scheduler to see if it is
allowed to download, it should require that the scheduler is actually
installed.
Critically, this will pull mogwai-scheduled into the set of packages
installed by default on base images.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T20396","Since the updater now queries the download scheduler to see if it is
allowed to download, it should require that the scheduler is actually
installed.
Critically, this will pull mogwai-scheduled into the set of packages
installed by default on base images.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T20396",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,172,2018-02-21T17:19:45Z,2018-02-22T10:20:18Z,2018-02-22T10:20:21Z,MERGED,True,5,2,1,https://github.com/wjt,eos-updater-flatpak-installer: run after systemd-tmpfiles-setup,1,[],https://github.com/endlessm/eos-updater/pull/172,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/172,"On unconverted systems, /home is a symlink to /var/home; /var/home is a
symlink to /sysroot/home. The /home -> /var/home symlink is part of the
ostree; the /var/home -> /sysroot/home symlink is managed by
systemd-tmpfiles:
/usr/lib/tmpfiles.d/ostree.conf:L /var/home - - - - ../sysroot/home
/usr/lib/tmpfiles.d/home.conf:Q /home 0755 - - -

(The home.conf line for /home comes from the systemd package, and causes the
""already exists and is not a directory"" warning below.)
With the current ordering constraints, these two services may (and do)
run concurrently. This, in combination with ProtectHome=yes in this
unit, causes launching this service to fail:
systemd[1]: Starting Endless OS Post-Boot Flatpak Installer...
systemd[1]: Starting Create Volatile Files and Directories...
systemd-tmpfiles[392]: ""/home"" already exists and is not a directory.
systemd[386]: eos-updater-flatpak-installer.service: Failed at step NAMESPACE spawning /usr/lib/x86_64-linux-gnu/eos-updater-flatpak-installer: No such file or directory
systemd[1]: eos-updater-flatpak-installer.service: Main process exited, code=exited, status=226/NAMESPACE
systemd[1]: Failed to start Endless OS Post-Boot Flatpak Installer.
systemd[1]: eos-updater-flatpak-installer.service: Unit entered failed state.
systemd[1]: eos-updater-flatpak-installer.service: Failed with result 'exit-code'.
systemd-tmpfiles[392]: Cannot set file attribute for '/var/log/journal', value=0x00800000, mask=0x00800000: Operation not supported
systemd-tmpfiles[392]: Cannot set file attribute for '/var/log/journal/b6636faad27b47d8a8c9b50f359b9b7e', value=0x00800000, mask=0x00800000: Operation not supported
systemd[1]: Started Create Volatile Files and Directories.

On my test system, this is reproducible on 100% of boots: this service
never successfully runs after an upgrade. (A process of bisecting all
the sandboxing flags in this file confirms that it is ProtectHome=yes
that triggers this problem.)
Avoid this issue by forcing this service to start after
systemd-tmpfiles-setup.
https://phabricator.endlessm.com/T21221","On unconverted systems, /home is a symlink to /var/home; /var/home is a
symlink to /sysroot/home. The /home -> /var/home symlink is part of the
ostree; the /var/home -> /sysroot/home symlink is managed by
systemd-tmpfiles:
/usr/lib/tmpfiles.d/ostree.conf:L /var/home - - - - ../sysroot/home
/usr/lib/tmpfiles.d/home.conf:Q /home 0755 - - -

(The home.conf line for /home comes from the systemd package, and causes the
""already exists and is not a directory"" warning below.)
With the current ordering constraints, these two services may (and do)
run concurrently. This, in combination with ProtectHome=yes in this
unit, causes launching this service to fail:
systemd[1]: Starting Endless OS Post-Boot Flatpak Installer...
systemd[1]: Starting Create Volatile Files and Directories...
systemd-tmpfiles[392]: ""/home"" already exists and is not a directory.
systemd[386]: eos-updater-flatpak-installer.service: Failed at step NAMESPACE spawning /usr/lib/x86_64-linux-gnu/eos-updater-flatpak-installer: No such file or directory
systemd[1]: eos-updater-flatpak-installer.service: Main process exited, code=exited, status=226/NAMESPACE
systemd[1]: Failed to start Endless OS Post-Boot Flatpak Installer.
systemd[1]: eos-updater-flatpak-installer.service: Unit entered failed state.
systemd[1]: eos-updater-flatpak-installer.service: Failed with result 'exit-code'.
systemd-tmpfiles[392]: Cannot set file attribute for '/var/log/journal', value=0x00800000, mask=0x00800000: Operation not supported
systemd-tmpfiles[392]: Cannot set file attribute for '/var/log/journal/b6636faad27b47d8a8c9b50f359b9b7e', value=0x00800000, mask=0x00800000: Operation not supported
systemd[1]: Started Create Volatile Files and Directories.

On my test system, this is reproducible on 100% of boots: this service
never successfully runs after an upgrade. (A process of bisecting all
the sandboxing flags in this file confirms that it is ProtectHome=yes
that triggers this problem.)
Avoid this issue by forcing this service to start after
systemd-tmpfiles-setup.
https://phabricator.endlessm.com/T21221",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,172,2018-02-21T17:19:45Z,2018-02-22T10:20:18Z,2018-02-22T10:20:21Z,MERGED,True,5,2,1,https://github.com/wjt,eos-updater-flatpak-installer: run after systemd-tmpfiles-setup,1,[],https://github.com/endlessm/eos-updater/pull/172,https://github.com/wjt,2,https://github.com/endlessm/eos-updater/pull/172#issuecomment-367440918,"On unconverted systems, /home is a symlink to /var/home; /var/home is a
symlink to /sysroot/home. The /home -> /var/home symlink is part of the
ostree; the /var/home -> /sysroot/home symlink is managed by
systemd-tmpfiles:
/usr/lib/tmpfiles.d/ostree.conf:L /var/home - - - - ../sysroot/home
/usr/lib/tmpfiles.d/home.conf:Q /home 0755 - - -

(The home.conf line for /home comes from the systemd package, and causes the
""already exists and is not a directory"" warning below.)
With the current ordering constraints, these two services may (and do)
run concurrently. This, in combination with ProtectHome=yes in this
unit, causes launching this service to fail:
systemd[1]: Starting Endless OS Post-Boot Flatpak Installer...
systemd[1]: Starting Create Volatile Files and Directories...
systemd-tmpfiles[392]: ""/home"" already exists and is not a directory.
systemd[386]: eos-updater-flatpak-installer.service: Failed at step NAMESPACE spawning /usr/lib/x86_64-linux-gnu/eos-updater-flatpak-installer: No such file or directory
systemd[1]: eos-updater-flatpak-installer.service: Main process exited, code=exited, status=226/NAMESPACE
systemd[1]: Failed to start Endless OS Post-Boot Flatpak Installer.
systemd[1]: eos-updater-flatpak-installer.service: Unit entered failed state.
systemd[1]: eos-updater-flatpak-installer.service: Failed with result 'exit-code'.
systemd-tmpfiles[392]: Cannot set file attribute for '/var/log/journal', value=0x00800000, mask=0x00800000: Operation not supported
systemd-tmpfiles[392]: Cannot set file attribute for '/var/log/journal/b6636faad27b47d8a8c9b50f359b9b7e', value=0x00800000, mask=0x00800000: Operation not supported
systemd[1]: Started Create Volatile Files and Directories.

On my test system, this is reproducible on 100% of boots: this service
never successfully runs after an upgrade. (A process of bisecting all
the sandboxing flags in this file confirms that it is ProtectHome=yes
that triggers this problem.)
Avoid this issue by forcing this service to start after
systemd-tmpfiles-setup.
https://phabricator.endlessm.com/T21221",Comment added!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,173,2018-02-26T19:28:53Z,2018-02-27T14:07:02Z,2018-02-27T14:07:06Z,MERGED,True,153,152,4,https://github.com/wjt,eufi: pass branch to flatpak_installation_update(),2,[],https://github.com/endlessm/eos-updater/pull/173,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/173,"The documentation for the 'branch' parameter says:

name of the branch of the app or runtime to update (default: master).

'master' is never the correct branch for any Flatpaks we want to install or update after an ostree update. We need to pass it here, just like we do to other functions. Without this, if a Flatpak is specified to be installed, and it's already installed, the operation will fail:
libeos-updater-flatpak-installer-Message: Attempting to install eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0
libeos-updater-flatpak-installer-Message: eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0 already installed, updating
libeos-updater-flatpak-installer-Message: Failed to update eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0
eos-updater-flatpak-installer: Couldn’t apply some flatpak update actions for this boot: org.freedesktop.Platform.Icontheme.EndlessOS branch master is not installed

This is not caught by the test suite because it uses the ""master"" branch throughout. As a result, there's also a patch here that attempts to use the branch ""stable"" throughout the test suite. However, the tests are flaky for me locally (with or without this change). Let's see what Jenkins thinks.
https://phabricator.endlessm.com/T20809","The documentation for the 'branch' parameter says:

name of the branch of the app or runtime to update (default: master).

'master' is never the correct branch for any Flatpaks we want to install or update after an ostree update. We need to pass it here, just like we do to other functions. Without this, if a Flatpak is specified to be installed, and it's already installed, the operation will fail:
libeos-updater-flatpak-installer-Message: Attempting to install eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0
libeos-updater-flatpak-installer-Message: eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0 already installed, updating
libeos-updater-flatpak-installer-Message: Failed to update eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0
eos-updater-flatpak-installer: Couldn’t apply some flatpak update actions for this boot: org.freedesktop.Platform.Icontheme.EndlessOS branch master is not installed

This is not caught by the test suite because it uses the ""master"" branch throughout. As a result, there's also a patch here that attempts to use the branch ""stable"" throughout the test suite. However, the tests are flaky for me locally (with or without this change). Let's see what Jenkins thinks.
https://phabricator.endlessm.com/T20809",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,173,2018-02-26T19:28:53Z,2018-02-27T14:07:02Z,2018-02-27T14:07:06Z,MERGED,True,153,152,4,https://github.com/wjt,eufi: pass branch to flatpak_installation_update(),2,[],https://github.com/endlessm/eos-updater/pull/173,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/173#issuecomment-368888443,"The documentation for the 'branch' parameter says:

name of the branch of the app or runtime to update (default: master).

'master' is never the correct branch for any Flatpaks we want to install or update after an ostree update. We need to pass it here, just like we do to other functions. Without this, if a Flatpak is specified to be installed, and it's already installed, the operation will fail:
libeos-updater-flatpak-installer-Message: Attempting to install eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0
libeos-updater-flatpak-installer-Message: eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0 already installed, updating
libeos-updater-flatpak-installer-Message: Failed to update eos-sdk:runtime/org.freedesktop.Platform.Icontheme.EndlessOS/x86_64/1.0
eos-updater-flatpak-installer: Couldn’t apply some flatpak update actions for this boot: org.freedesktop.Platform.Icontheme.EndlessOS branch master is not installed

This is not caught by the test suite because it uses the ""master"" branch throughout. As a result, there's also a patch here that attempts to use the branch ""stable"" throughout the test suite. However, the tests are flaky for me locally (with or without this change). Let's see what Jenkins thinks.
https://phabricator.endlessm.com/T20809",Jenkins likes this; please merge!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,174,2018-03-01T21:24:25Z,2018-03-02T11:11:55Z,2018-03-02T18:02:32Z,MERGED,True,7,2,1,https://github.com/wjt,eos-updater-ctl: right-align property names,1,[],https://github.com/endlessm/eos-updater/pull/174,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/174,"Before:
======= Properties =======
State: Ready
 CurrentID: '4b4e0fb003bae61d18152376a597675063c2dd1e3561ffe4eec8cd637f533f62'
 DownloadSize: int64 0
 DownloadedBytes: int64 0
 ErrorCode: uint32 0
 ErrorMessage: ''
 ErrorName: ''
 FullDownloadSize: int64 0
 FullUnpackedSize: int64 0
 OriginalRefspec: ''
 UnpackedSize: int64 0
 UpdateID: ''
 UpdateLabel: ''
 UpdateMessage: ''
 UpdateRefspec: ''

After:
======= Properties =======
           State: Ready
       CurrentID: '4b4e0fb003bae61d18152376a597675063c2dd1e3561ffe4eec8cd637f533f62'
    DownloadSize: int64 0
 DownloadedBytes: int64 0
       ErrorCode: uint32 0
    ErrorMessage: ''
       ErrorName: ''
FullDownloadSize: int64 0
FullUnpackedSize: int64 0
 OriginalRefspec: ''
    UnpackedSize: int64 0
        UpdateID: ''
     UpdateLabel: ''
   UpdateMessage: ''
   UpdateRefspec: ''

I think this is easier to skim, and in particular makes it a bit easier to eyeball the DownloadedBytes / DownloadSize ratio.","Before:
======= Properties =======
State: Ready
 CurrentID: '4b4e0fb003bae61d18152376a597675063c2dd1e3561ffe4eec8cd637f533f62'
 DownloadSize: int64 0
 DownloadedBytes: int64 0
 ErrorCode: uint32 0
 ErrorMessage: ''
 ErrorName: ''
 FullDownloadSize: int64 0
 FullUnpackedSize: int64 0
 OriginalRefspec: ''
 UnpackedSize: int64 0
 UpdateID: ''
 UpdateLabel: ''
 UpdateMessage: ''
 UpdateRefspec: ''

After:
======= Properties =======
           State: Ready
       CurrentID: '4b4e0fb003bae61d18152376a597675063c2dd1e3561ffe4eec8cd637f533f62'
    DownloadSize: int64 0
 DownloadedBytes: int64 0
       ErrorCode: uint32 0
    ErrorMessage: ''
       ErrorName: ''
FullDownloadSize: int64 0
FullUnpackedSize: int64 0
 OriginalRefspec: ''
    UnpackedSize: int64 0
        UpdateID: ''
     UpdateLabel: ''
   UpdateMessage: ''
   UpdateRefspec: ''

I think this is easier to skim, and in particular makes it a bit easier to eyeball the DownloadedBytes / DownloadSize ratio.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,174,2018-03-01T21:24:25Z,2018-03-02T11:11:55Z,2018-03-02T18:02:32Z,MERGED,True,7,2,1,https://github.com/wjt,eos-updater-ctl: right-align property names,1,[],https://github.com/endlessm/eos-updater/pull/174,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/174#issuecomment-369892602,"Before:
======= Properties =======
State: Ready
 CurrentID: '4b4e0fb003bae61d18152376a597675063c2dd1e3561ffe4eec8cd637f533f62'
 DownloadSize: int64 0
 DownloadedBytes: int64 0
 ErrorCode: uint32 0
 ErrorMessage: ''
 ErrorName: ''
 FullDownloadSize: int64 0
 FullUnpackedSize: int64 0
 OriginalRefspec: ''
 UnpackedSize: int64 0
 UpdateID: ''
 UpdateLabel: ''
 UpdateMessage: ''
 UpdateRefspec: ''

After:
======= Properties =======
           State: Ready
       CurrentID: '4b4e0fb003bae61d18152376a597675063c2dd1e3561ffe4eec8cd637f533f62'
    DownloadSize: int64 0
 DownloadedBytes: int64 0
       ErrorCode: uint32 0
    ErrorMessage: ''
       ErrorName: ''
FullDownloadSize: int64 0
FullUnpackedSize: int64 0
 OriginalRefspec: ''
    UnpackedSize: int64 0
        UpdateID: ''
     UpdateLabel: ''
   UpdateMessage: ''
   UpdateRefspec: ''

I think this is easier to skim, and in particular makes it a bit easier to eyeball the DownloadedBytes / DownloadSize ratio.","I think this is easier to skim, and in particular makes it a bit easier to eyeball the DownloadedBytes / DownloadSize ratio.

We could also explicitly calculate and print that percentage.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,175,2018-03-06T09:00:12Z,2018-03-06T10:18:53Z,2018-03-06T10:18:56Z,MERGED,True,1,1,1,https://github.com/wjt,eos-updater-ctl: fix syntax,1,[],https://github.com/endlessm/eos-updater/pull/175,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/175,"I broke this in #174. Sorry.
Any preferred way to check this at build time? One way would be to add a test case which just runs s python3 -m py_compile eos-updater-ctl. Another way would be to build-depend on a linter and run that. A third way would be to rename to eos-updater-ctl.in and do:
eos-updater-ctl: eos-updater-ctl.in
	$(AM_V_GEN) python3 -m py_compile $< && cp -a $< $@","I broke this in #174. Sorry.
Any preferred way to check this at build time? One way would be to add a test case which just runs s python3 -m py_compile eos-updater-ctl. Another way would be to build-depend on a linter and run that. A third way would be to rename to eos-updater-ctl.in and do:
eos-updater-ctl: eos-updater-ctl.in
	$(AM_V_GEN) python3 -m py_compile $< && cp -a $< $@",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,175,2018-03-06T09:00:12Z,2018-03-06T10:18:53Z,2018-03-06T10:18:56Z,MERGED,True,1,1,1,https://github.com/wjt,eos-updater-ctl: fix syntax,1,[],https://github.com/endlessm/eos-updater/pull/175,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/175#issuecomment-370733350,"I broke this in #174. Sorry.
Any preferred way to check this at build time? One way would be to add a test case which just runs s python3 -m py_compile eos-updater-ctl. Another way would be to build-depend on a linter and run that. A third way would be to rename to eos-updater-ctl.in and do:
eos-updater-ctl: eos-updater-ctl.in
	$(AM_V_GEN) python3 -m py_compile $< && cp -a $< $@",(Pulling in a linter means we will forever have build failures due to irrelevant lint failures. Renaming to .in just seems more ugly than option 1.),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,176,2018-03-06T14:59:30Z,2018-03-07T10:06:36Z,2018-03-07T10:06:39Z,MERGED,True,17,11,3,https://github.com/wjt,"Ensure eos-updater-ctl compiles, by running it",4,[],https://github.com/endlessm/eos-updater/pull/176,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/176,"This is implemented as a build step, not a test, to increase the likelihood of it being run. I looked at adding it as an installed test in tests/ but installed tests are not run at build time.
I also took the liberty of fixing the (very few) warnings raised by flake8, my conservative Python linter of choice. While it does have some (IMO reasonable) opinions about line length and indentation, it can also detect many cases of (for example) referencing variables before they are defined. I'd suggest making python3-flake8 a build-dependency and running it against eos-updater-ctl rather than invoking eos-updater-ctl --help, but I have not since this has already been deemed unpopular!","This is implemented as a build step, not a test, to increase the likelihood of it being run. I looked at adding it as an installed test in tests/ but installed tests are not run at build time.
I also took the liberty of fixing the (very few) warnings raised by flake8, my conservative Python linter of choice. While it does have some (IMO reasonable) opinions about line length and indentation, it can also detect many cases of (for example) referencing variables before they are defined. I'd suggest making python3-flake8 a build-dependency and running it against eos-updater-ctl rather than invoking eos-updater-ctl --help, but I have not since this has already been deemed unpopular!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,177,2018-03-09T16:54:35Z,2018-03-12T19:03:50Z,2018-03-12T19:04:02Z,MERGED,True,5,2,1,https://github.com/pwithnall,Minor fixes to eos-updater-ctl,2,[],https://github.com/endlessm/eos-updater/pull/177,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/177,This fixes a warning which @GeorgesStavracas was seeing when using eos-updater-ctl monitor.,This fixes a warning which @GeorgesStavracas was seeing when using eos-updater-ctl monitor.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,177,2018-03-09T16:54:35Z,2018-03-12T19:03:50Z,2018-03-12T19:04:02Z,MERGED,True,5,2,1,https://github.com/pwithnall,Minor fixes to eos-updater-ctl,2,[],https://github.com/endlessm/eos-updater/pull/177,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/177#issuecomment-372426992,This fixes a warning which @GeorgesStavracas was seeing when using eos-updater-ctl monitor.,CI passed. Merging.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/joaquimrocha,1,https://github.com/endlessm/eos-updater/pull/178,https://phabricator.endlessm.com/T21623,https://phabricator.endlessm.com/T21623,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/178#issuecomment-375619015,https://phabricator.endlessm.com/T21623,"Looks like Jenkins caught a problem with the build system changes:
Making all in tests
make[2]: Entering directory '/src/tests'
Makefile:1157: ../src/.deps/test_update_direct-eos-updater-generated.Po: No such file or directory
make[2]: *** No rule to make target '../src/.deps/test_update_direct-eos-updater-generated.Po'.  Stop.
make[2]: Leaving directory '/src/tests'",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/joaquimrocha,3,https://github.com/endlessm/eos-updater/pull/178#issuecomment-375653163,https://phabricator.endlessm.com/T21623,New fixup commit with the requested changes.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/178#issuecomment-375659177,https://phabricator.endlessm.com/T21623,"Hang on, Jenkins failed again :(
# eos-updater-tests:ERROR:../../../tests/test-update-direct.c:75:cancel_update: assertion failed (error == NULL): GDBus.Error:com.endlessm.Updater.Error.WrongState: Can't call Cancel() while in state Error (nothing to be cancelled) (g-io-error-quark, 36)
ERROR: test-update-direct - too few tests run (expected 1, got 0)
ERROR: test-update-direct - exited with status 134 (terminated by signal 6?)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/joaquimrocha,5,https://github.com/endlessm/eos-updater/pull/178#issuecomment-375823427,https://phabricator.endlessm.com/T21623,"Jenkins, please retest this.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/joaquimrocha,6,https://github.com/endlessm/eos-updater/pull/178#issuecomment-375823542,https://phabricator.endlessm.com/T21623,Jenkins test this please.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/joaquimrocha,7,https://github.com/endlessm/eos-updater/pull/178#issuecomment-375924203,https://phabricator.endlessm.com/T21623,Jenkins test this please.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,178,2018-03-16T14:05:03Z,2018-03-27T12:57:53Z,2018-03-27T12:57:56Z,MERGED,True,397,8,13,https://github.com/joaquimrocha,T21623,4,[],https://github.com/endlessm/eos-updater/pull/178,https://github.com/joaquimrocha,8,https://github.com/endlessm/eos-updater/pull/178#issuecomment-376082807,https://phabricator.endlessm.com/T21623,Jenkins test this please.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,179,2018-03-20T17:00:34Z,2018-03-28T14:37:42Z,2018-03-28T14:37:45Z,MERGED,True,184,4,7,https://github.com/joaquimrocha,Provide the update version property,1,[],https://github.com/endlessm/eos-updater/pull/179,https://github.com/joaquimrocha,1,https://github.com/endlessm/eos-updater/pull/179,"We now have the update version added to the commit metadata, so this
patch retrieves it and also adds the matching property to the dbus
interface.
https://phabricator.endlessm.com/T21610","We now have the update version added to the commit metadata, so this
patch retrieves it and also adds the matching property to the dbus
interface.
https://phabricator.endlessm.com/T21610",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,179,2018-03-20T17:00:34Z,2018-03-28T14:37:42Z,2018-03-28T14:37:45Z,MERGED,True,184,4,7,https://github.com/joaquimrocha,Provide the update version property,1,[],https://github.com/endlessm/eos-updater/pull/179,https://github.com/ramcq,2,https://github.com/endlessm/eos-updater/pull/179#issuecomment-374678103,"We now have the update version added to the commit metadata, so this
patch retrieves it and also adds the matching property to the dbus
interface.
https://phabricator.endlessm.com/T21610","This seems reasonable if setting NULL on a GDBus ""s"" property keeps it at """". Don't know enough about the internals to be sure of that, but I think that's what happens?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,180,2018-03-23T15:45:24Z,2018-03-28T23:29:53Z,2018-03-28T23:29:55Z,CLOSED,False,1,1,1,https://github.com/joaquimrocha,Update the copyright of the configure.ac,1,[],https://github.com/endlessm/eos-updater/pull/180,https://github.com/joaquimrocha,1,https://github.com/endlessm/eos-updater/pull/180,This is just a trivial PR to check whether the tests are passing on master or not.,This is just a trivial PR to check whether the tests are passing on master or not.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,180,2018-03-23T15:45:24Z,2018-03-28T23:29:53Z,2018-03-28T23:29:55Z,CLOSED,False,1,1,1,https://github.com/joaquimrocha,Update the copyright of the configure.ac,1,[],https://github.com/endlessm/eos-updater/pull/180,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/180#issuecomment-377071577,This is just a trivial PR to check whether the tests are passing on master or not.,"The tests did pass. Let’s reduce unnecessary churn on the files and drop this branch though, since I think you’re done with testing Jenkins.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/181,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376098825,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","But eos-updater-flatpak-installer runs from the new deployed OSTree, as does systemd, OSTree and flatpak; so we should always be able to ensure the system call filter in this .service file is appropriate for the set of system calls made by the running eos-updater-flatpak-installer instance. I think we should just fix the SystemCallFilter= value to not blacklist whatever system call is being made.
The SystemCallFilter= value we currently have is a blacklist, so it implicitly allows new or unknown system calls, and only disallows the groups which are listed. Either some of our code has started using one of the blacklisted system calls, or systemd has added a system call that we’re using to one of these blacklisted groups. Or the system call group which was ignored with systemd 232 (@chown, T20944) is now being enforced by systemd 237 and is breaking things.
Here’s a rough list of what’s changed in the system call filter groups between systemd 232 and 237:

statx(2), fremovexattr, inotify_init, oldfstat, oldlstat, oldstat, utime added to @file-system
_llseek added to @base-io
wait*, usage counters, process/thread identity, rt_sigqueueinfo, rt_tgsigqueueinfo added to @process
nice, ioprio_set added to @resources
prlimit64, ugetrlimit added to @default
Add @aio, @sync and @chown groups",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376147888,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","But eos-updater-flatpak-installer runs from the new deployed OSTree, as does systemd, OSTree and flatpak; so we should always be able to ensure the system call filter in this .service file is appropriate for the set of system calls made by the running eos-updater-flatpak-installer instance. I think we should just fix the SystemCallFilter= value to not blacklist whatever system call is being made.

I appreciate that this can be fixed by just updating the SystemCallFilter= value to something that systemd, flatpak and ostree all like. My point is more about risk management and tradeoffs. This feature was designed to ideally never fail. It doesn't require internet access and should require very minimal available disk space, if any, because the relevant ostree objects have already been pulled into the repo on reboot. Because of the fact that we're relying on it not to fail across updates, we're using it for features like replacing LibreOffice and the Discovery Feed with the flatpak version.
Consider the worst case scenario. Lets say we rebase ostree, flatpak and/or systemd. I don't think its feasible for us to say that we'll audit all of those three components for new system calls and/or system call filter groups and consider the impact on downstream dependencies. Some new system call or system call filter gets introduced which will trip up the flatpak installer. As happened in this case, nobody notices for a little while that this is the case since it isn't often that the flatpak installer gets run. Meanwhile, we ship an update removing LibreOffice from the OSTree and shipping it as a flatpak. The feature is broken and we only find out either at QA time (holding up a release) or worse, we ship the release and a bunch of people end up without LibreOffice, then we find out that its broken.
SystemCallFilter= is certainly a great development that allows us to mitigate some of the damage in case someone gets code execution on the flatpak installer. But consider that the flatpak installer is already pretty well sandboxed. We don't allow executing writable memory, it can't touch the network and it can't touch /home. Granted, it can touch the system, but the ostree is mounted read-only anyway so the worst that it can do is touch /var and /etc. Given that we already have this protection, my point is that going forward, I'd rather that the tradeoff go in favour of keeping this feature working across updates at the cost of slightly less security as opposed to potentially having it break every time we rebase systemd, flatpak or ostree.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376154024,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","I appreciate your point, and you have a valid viewpoint on the tradeoff between ease of maintenance and security. However, this is exactly the kind of thing we should be doing (automated) integration testing for. A single test run of upgrading the OSTree and eos-updater-flatpak-installer being run would have caught this, if I understand the situation correctly.
Rather than removing functionality, I would much prefer it if we set up automated tests for that functionality instead. Given how much of the system eos-updater interacts with, there are many things which can go wrong with it (or with eos-updater-flatpak-installer) — we’re just as likely to be hit by a change in libflatpak as we are to be hit by a change in systemd’s sandboxing. Automated integration testing on our OS images is a solution which would catch all such problems. Anything else is a stopgap.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/smspillaz,5,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376215308,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","Rather than removing functionality, I would much prefer it if we set up automated tests for that functionality instead. Given how much of the system eos-updater interacts with, there are many things which can go wrong with it (or with eos-updater-flatpak-installer)

That would certainly be nice, but I am mindful of the fact that this is going to be quite a lot of work to scope out. In order to test this properly, you need to run the relevant code with the given systemd sandboxing options.
Two options here I guess. I figure out what system call is causing the problem and fix it now and we block further systemd/flatpak/ostree rebases on getting these integration tests done or we remove the SystemCallFilter= and block re-adding it on getting these integration tests done.
The other thing to keep in mind is that even if we have integration tests to catch this sort of thing, there is still the point of the fact that it will potentially break every time systemd and/or flatpak/ostree are updated. Thus we still end up taking on the maintenance burden of going through the trial-and-error process to fix it every time that happens. This is not as big a problem as shipping a broken update to users, but it is still a non-negligible cost that takes up time and resources.
For now I'll figure out what system call is causing the problem and then we'll make a decision as to what to do from there.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376218389,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751",I’d start your debugging by looking at the @chown group.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/cosimoc,7,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376311759,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","@smspillaz @pwithnall FWIW I am leaning towards a somewhat pragmatic approach here:

I want to see this fixed ASAP in the short term. I think the best way to achieve that is to identify the syscall group that's causing the failure and just commenting that one out. Only if that proves to be much more complicated than initially thought, or inconclusive, I'd remove the whole SystemCallFilter= directive.
In the medium-term, I agree that it would be worth investing in automated integration testing on our OS images. That is something that we should not embark on without the buy in of the tools and QA teams though. @pwithnall Since you seem to have the best idea of what that would consist of, could you make sure that stories in Phabricator are open about it? Please copy me, Dan, Brent and Steve as well.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/smspillaz,8,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376355885,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","The good news is that it was @chown that was causing the problem: #182
I'll close this one for now. However, if this keeps breaking on systemd/flatpak/ostree updates (the likelihood of that now is probably low, since I don't think that flatpak or ostree will end up using system calls in those groups), I think it'd be prudent to re-evaluate whether the call filter is worth it. It'd be nice to see automated testing for sure, but my point still stands about there being non-negligible costs in time spent debugging every time this breaks.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,181,2018-03-26T05:04:40Z,2018-03-27T00:30:36Z,2018-03-27T10:43:37Z,CLOSED,False,13,1,1,https://github.com/smspillaz,systemd: Don't use SystemCallFilter with the flatpak installer,1,[],https://github.com/endlessm/eos-updater/pull/181,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/181#issuecomment-376479788,"Part of the design of the flatpak installer is that it was assumed
to never fail except in very exceptional cases, such disk space
running out. SystemCallFilter is a noble concept for reducing
attack surface area, but ultimately, we need the flatpak installer
to work correctly across updates, which means that changes in
the system calls that ostree or flatpak itself might use should
not break the flatpak installer due to security policy.
https://phabricator.endlessm.com/T21751","In the medium-term, I agree that it would be worth investing in automated integration testing on our OS images. That is something that we should not embark on without the buy in of the tools and QA teams though. @pwithnall Since you seem to have the best idea of what that would consist of, could you make sure that stories in Phabricator are open about it? Please copy me, Dan, Brent and Steve as well.

High-level tasks (I’ve CCed you to these):

https://phabricator.endlessm.com/T17238
https://phabricator.endlessm.com/T10644
https://phabricator.endlessm.com/T18881

Tasks more specific to eos-updater:

https://phabricator.endlessm.com/T16034
https://phabricator.endlessm.com/T15340
https://phabricator.endlessm.com/T15981

High-level tasks which are tangential to integration testing:

https://phabricator.endlessm.com/T2265
https://phabricator.endlessm.com/T4563",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,182,2018-03-27T00:25:51Z,2018-03-27T01:29:26Z,2018-03-27T01:29:28Z,MERGED,True,2,2,1,https://github.com/smspillaz,systemd: Remove the @chown system call group from the blacklist,1,[],https://github.com/endlessm/eos-updater/pull/182,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/182,"As identified, this is required for certain ostree operations
to work.
https://phabricator.endlessm.com/T21751","As identified, this is required for certain ostree operations
to work.
https://phabricator.endlessm.com/T21751",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,183,2018-03-30T15:12:06Z,2018-04-26T11:33:32Z,2018-04-26T11:42:28Z,MERGED,True,25,1,2,https://github.com/pwithnall,libeuu: Fix using EuuConfigFile with just the GResource,2,[],https://github.com/endlessm/eos-updater/pull/183,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/183,"If loading an EuuConfigFile with a GResource, but none of the listed
files existing on the file system, it would hit an assertion failure.
Fix the special case handling of the GResource so that this works.
Adapted from a patch in https://phabricator.endlessm.com/T21619.
Signed-off-by: Philip Withnall withnall@endlessm.com","If loading an EuuConfigFile with a GResource, but none of the listed
files existing on the file system, it would hit an assertion failure.
Fix the special case handling of the GResource so that this works.
Adapted from a patch in https://phabricator.endlessm.com/T21619.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,183,2018-03-30T15:12:06Z,2018-04-26T11:33:32Z,2018-04-26T11:42:28Z,MERGED,True,25,1,2,https://github.com/pwithnall,libeuu: Fix using EuuConfigFile with just the GResource,2,[],https://github.com/endlessm/eos-updater/pull/183,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/183#issuecomment-381088690,"If loading an EuuConfigFile with a GResource, but none of the listed
files existing on the file system, it would hit an assertion failure.
Fix the special case handling of the GResource so that this works.
Adapted from a patch in https://phabricator.endlessm.com/T21619.
Signed-off-by: Philip Withnall withnall@endlessm.com",I really should write a test for this though. I’ll leave this unmerged for now and will get back to it when I find time to write a test.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,183,2018-03-30T15:12:06Z,2018-04-26T11:33:32Z,2018-04-26T11:42:28Z,MERGED,True,25,1,2,https://github.com/pwithnall,libeuu: Fix using EuuConfigFile with just the GResource,2,[],https://github.com/endlessm/eos-updater/pull/183,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/183#issuecomment-381115164,"If loading an EuuConfigFile with a GResource, but none of the listed
files existing on the file system, it would hit an assertion failure.
Fix the special case handling of the GResource so that this works.
Adapted from a patch in https://phabricator.endlessm.com/T21619.
Signed-off-by: Philip Withnall withnall@endlessm.com","Test added. Ready for re-review.
Once this is approved, I need to cherry-pick the test to the copy of this code in eos-paygd. (The code needs factoring out into a proper separate library at some point — that’s https://phabricator.endlessm.com/T21621.)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,183,2018-03-30T15:12:06Z,2018-04-26T11:33:32Z,2018-04-26T11:42:28Z,MERGED,True,25,1,2,https://github.com/pwithnall,libeuu: Fix using EuuConfigFile with just the GResource,2,[],https://github.com/endlessm/eos-updater/pull/183,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/183#issuecomment-384562075,"If loading an EuuConfigFile with a GResource, but none of the listed
files existing on the file system, it would hit an assertion failure.
Fix the special case handling of the GResource so that this works.
Adapted from a patch in https://phabricator.endlessm.com/T21619.
Signed-off-by: Philip Withnall withnall@endlessm.com",Still waiting for re-review here.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,183,2018-03-30T15:12:06Z,2018-04-26T11:33:32Z,2018-04-26T11:42:28Z,MERGED,True,25,1,2,https://github.com/pwithnall,libeuu: Fix using EuuConfigFile with just the GResource,2,[],https://github.com/endlessm/eos-updater/pull/183,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/183#issuecomment-384607696,"If loading an EuuConfigFile with a GResource, but none of the listed
files existing on the file system, it would hit an assertion failure.
Fix the special case handling of the GResource so that this works.
Adapted from a patch in https://phabricator.endlessm.com/T21619.
Signed-off-by: Philip Withnall withnall@endlessm.com","Thanks for the review. Merging, and I’ll cherry-pick the new test to libgsystemservice which is the new upstream for this helper code. (Eventually I will factor it out of eos-updater.)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,183,2018-03-30T15:12:06Z,2018-04-26T11:33:32Z,2018-04-26T11:42:28Z,MERGED,True,25,1,2,https://github.com/pwithnall,libeuu: Fix using EuuConfigFile with just the GResource,2,[],https://github.com/endlessm/eos-updater/pull/183,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/183#issuecomment-384610219,"If loading an EuuConfigFile with a GResource, but none of the listed
files existing on the file system, it would hit an assertion failure.
Fix the special case handling of the GResource so that this works.
Adapted from a patch in https://phabricator.endlessm.com/T21619.
Signed-off-by: Philip Withnall withnall@endlessm.com",Cherry picked: https://gitlab.gnome.org/pwithnall/libgsystemservice/merge_requests/3,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,184,2018-04-03T00:00:32Z,2018-04-03T15:54:15Z,2018-04-09T11:47:55Z,MERGED,True,2,2,1,https://github.com/mwleeds,docs: Fix an erroneous reference to --mode=apply,1,[],https://github.com/endlessm/eos-updater/pull/184,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/184,"In eos-updater-flatpak-installer.8, there's a reference to an ""apply""
mode but the mode is actually called ""perform"".","In eos-updater-flatpak-installer.8, there's a reference to an ""apply""
mode but the mode is actually called ""perform"".",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,185,2018-04-03T00:04:52Z,2018-04-03T15:54:38Z,2018-04-09T11:48:15Z,MERGED,True,1,1,1,https://github.com/mwleeds,eufi: Fix an error message to be more accurate,1,[],https://github.com/endlessm/eos-updater/pull/185,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/185,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,186,2018-04-03T10:28:54Z,2018-04-03T10:31:40Z,2018-04-09T11:47:02Z,MERGED,True,1,1,1,https://github.com/dbnicholson,docs: Fix eos-updater-flatpak-autoinstall.d.5 page,1,[],https://github.com/endlessm/eos-updater/pull/186,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/186,"The branch addition in 0f5d277 was
supposed to be bolded, but the inline \fB directive was not written
correctly.","The branch addition in 0f5d277 was
supposed to be bolded, but the inline \fB directive was not written
correctly.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,187,2018-04-03T10:46:06Z,2018-04-03T21:16:49Z,2018-04-09T13:25:07Z,MERGED,True,132,76,2,https://github.com/joaquimrocha,T21857,2,[],https://github.com/endlessm/eos-updater/pull/187,https://github.com/joaquimrocha,1,https://github.com/endlessm/eos-updater/pull/187,https://phabricator.endlessm.com/T21857,https://phabricator.endlessm.com/T21857,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/188,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/188#issuecomment-379617237,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","I'm not super happy with the way this is written, especially since it would break if a prefix other than /usr is used, but I'm submitting the PR anyway as a starting point for discussion.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/188#issuecomment-381804857,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","This is still WIP, but I put a status update on the ticket.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/188#issuecomment-389413114,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756",This is ready for re-review now.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/mwleeds,5,https://github.com/endlessm/eos-updater/pull/188#issuecomment-389413696,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","There is a critical warning at runtime:
** (process:6018): CRITICAL **: Unsupported type array
But I'm not sure it's anything to lose sleep over. The array is clearly usable by Python.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/188#issuecomment-389501619,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","There is a critical warning at runtime:
** (process:6018): CRITICAL **: Unsupported type array
But I'm not sure it's anything to lose sleep over. The array is clearly usable by Python.

It’s definitely something I’d want fixed before merging. Run under gdb with G_DEBUG=fatal-warnings in the environment, and you should get a backtrace from where the critical’s being emitted, which should give you some clues about what’s causing it. Poke me in Slack if you need a second opinion.
wrt the Jenkins failure:
Couldn't find include 'EosUpdaterUtil-0.gir' (search path: '['gir-1.0', '/usr/share/gir-1.0', '/usr/share/gir-1.0', '/usr/share/gir-1.0']')
libtool: link: ( cd ""test-common/.libs"" && rm -f ""libeos-updater-test-common.la"" && ln -s ""../libeos-updater-test-common.la"" ""libeos-updater-test-common.la"" )
/usr/share/gobject-introspection-1.0/Makefile.introspection:159: recipe for target 'libeos-updater-flatpak-installer/EosUpdaterFlatpakInstaller-0.gir' failed

That can be fixed by adding --add-include-path=$(top_builddir)/libeos-updater-util to the relevant SCANNERFLAGS.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/pwithnall,7,https://github.com/endlessm/eos-updater/pull/188#issuecomment-389519008,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","Also, there are quite a few remaining warnings from g-ir-scanner in the log. Can you please file a follow-up Phabricator task about fixing them, if you haven’t already? Thanks.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/mwleeds,8,https://github.com/endlessm/eos-updater/pull/188#issuecomment-390004924,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","Also, there are quite a few remaining warnings from g-ir-scanner in the log. Can you please file a follow-up Phabricator task about fixing them, if you haven’t already? Thanks.

https://phabricator.endlessm.com/T22636",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/188#issuecomment-390186167,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","I’m going to look into the runtime warning and will do some work on this branch to fix up the comments while I’m at it, so please don’t do any more work on this yourself for the moment!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/pwithnall,10,https://github.com/endlessm/eos-updater/pull/188#issuecomment-390225661,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","OK, I’ve got some fixups here which could be merged into this PR. I’d then like @smspillaz to take a look, specifically at this bit (if he’s around and able).
If this PR gets accepted, before it’s merged, there are a few things to do:

Fix the typo in a commit message
Squash together these two commits
Ensure “Remove unused function parameter” is ordered before “Fix some g-ir-scanner warnings”
Rebase and squash in all the fixups (which will be non-trivial; it should work if they’re squashed in one-by-one, but squashing them in all at once causes conflicts because git doesn’t do it in order)


I looked at the critical warning message. It’s easily reproducible by running python3 and then entering:
from gi.repository import EosUpdaterFlatpakInstaller, EosUpdaterUtil
EosUpdaterFlatpakInstaller.determine_flatpak_ref_actions_to_check(['/opt/endless/source/eos-application-tools/data'])

It gives the following backtrace:
** (process:31455): CRITICAL **: Unsupported type array

Program received signal SIGTRAP, Trace/breakpoint trap.
_g_log_abort (breakpoint=1) at /opt/endless/source/glib/glib/gmessages.c:554
554	}
(gdb) bt
#0  _g_log_abort (breakpoint=1) at /opt/endless/source/glib/glib/gmessages.c:554
#1  0x00007fffeebe9b3a in g_logv (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, 
    format=0x7fffef37fec8 ""Unsupported type %s"", args=0x7fffffffcbb8)
    at /opt/endless/source/glib/glib/gmessages.c:1362
#2  0x00007fffeebe9c2b in g_log (log_domain=0x0, log_level=G_LOG_LEVEL_CRITICAL, 
    format=0x7fffef37fec8 ""Unsupported type %s"") at /opt/endless/source/glib/glib/gmessages.c:1403
#3  0x00007fffef37ae47 in _pygi_marshal_to_py_ghash ()
   from /usr/lib64/python3.6/site-packages/gi/_gi.cpython-36m-x86_64-linux-gnu.so
#4  0x00007fffef371e4e in pygi_invoke_c_callable ()
   from /usr/lib64/python3.6/site-packages/gi/_gi.cpython-36m-x86_64-linux-gnu.so
#5  0x00007fffef3739b8 in pygi_function_cache_invoke ()
   from /usr/lib64/python3.6/site-packages/gi/_gi.cpython-36m-x86_64-linux-gnu.so
#6  0x00007ffff79980f4 in _PyObject_FastCallDict () from /lib64/libpython3.6m.so.1.0
#7  0x00007ffff7a06d8d in call_function () from /lib64/libpython3.6m.so.1.0
#8  0x00007ffff7a30e9a in _PyEval_EvalFrameDefault () from /lib64/libpython3.6m.so.1.0
#9  0x00007ffff7a0fb38 in PyEval_EvalCodeEx () from /lib64/libpython3.6m.so.1.0
#10 0x00007ffff7a108bb in PyEval_EvalCode () from /lib64/libpython3.6m.so.1.0
#11 0x00007ffff7a9c692 in run_mod () from /lib64/libpython3.6m.so.1.0
#12 0x00007ffff7967101 in PyRun_InteractiveOneObjectEx () from /lib64/libpython3.6m.so.1.0
#13 0x00007ffff7969bf6 in PyRun_InteractiveLoopFlags () from /lib64/libpython3.6m.so.1.0
#14 0x00007ffff7a9efc5 in PyRun_AnyFileExFlags () from /lib64/libpython3.6m.so.1.0
#15 0x00007ffff796ac61 in Py_Main.cold.2848 () from /lib64/libpython3.6m.so.1.0
#16 0x0000555555554e22 in main ()

Looking at that, and at the pygobject code, it seems that pygobject just doesn’t like having a GPtrArray as the value type of a GHashTable. As Matthew says, it does function perfectly well. I can’t see why the implementation of GI_TYPE_TAG_ARRAY should differ from the implementation of GI_TYPE_TAG_INTERFACE (GObject instances); no refcounting or checks are done in the latter case, so we shouldn’t need to do any for arrays. I think this is a bug in pygobject, and it should just not be warning about arrays.
⇒ I’ve filed https://gitlab.gnome.org/GNOME/pygobject/merge_requests/73 about it",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,188,2018-04-09T03:14:44Z,2018-06-08T13:50:23Z,2018-07-30T19:15:10Z,MERGED,True,189,38,13,https://github.com/mwleeds,Add autoinstall flatpaks to update USBs,14,[],https://github.com/endlessm/eos-updater/pull/188,https://github.com/mwleeds,11,https://github.com/endlessm/eos-updater/pull/188#issuecomment-395610410,"When an OS update has flatpak(s) set to be updated or installed along
with it (via eos-updater-flatpak-installer), the flatpaks are required
for the update for succeed. So this commit adds the flatpaks to a USB
being created with eos-updater-prepare-volume so that USB updates work
even when the update in question has flatpaks to be autoinstalled. This
is accomplished by adding a ""print"" mode to
eos-updater-flatpak-installer and parsing the output from that in
eos-updater-prepare-volume. This way the logic that parses the
configuration files can stay in one place. Since we can't make any
assumptions about the OS version on the client receiving the USB update,
every flatpak configured to be automatically updated or installed on
OS update must be included.
https://phabricator.endlessm.com/T21756","I'll leave this for @pwithnall to merge after looking at my changes to ""libeuu: Ignore non-JSON files when loading autoinstall files from a dir""",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/189,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/189#issuecomment-382333535,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Review of “test: Should probably install the runtime from repo_name, not ""test-r…”: Should this not be merged in to other commits?

Actually this was something that I missed earlier when this feature was first written. But the change  libeos-updater-flatpak-installer/tests/installer.c was caught in there which shouldn't be there. Will fix.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/189#issuecomment-382395799,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Review: “fetch: Invariant is that there must be a collection-id OR a remote” — I don’t think this is right. IIRC, we require collection IDs to be set in the JSON, and don’t require remote names to be set. The remote names are then filled in from the collection IDs, which means that eventually both will be set in the EuuFlatpakLocationRef.

Hmm okay, the comment in the code seems to indicate otherwise. I seem to recall that this check was causing some tests to fail but it might be those ones for which we have a collection ID with no associated remote.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/189#issuecomment-382601291,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Hmm okay, the comment in the code seems to indicate otherwise. I seem to recall that this check was causing some tests to fail but it might be those ones for which we have a collection ID with no associated remote.

I did a little bit more investigation and found that the problem here is that a dependency ref action could be pulled in from a remote that does not have a collection-id set on its configuration. When that happens, we don't know what collection-id to use (we can't use the collection-id from the source ref as the dependency could come from a different remote).
For now I've made it so that dependency ref actions don't get pulled from remotes that do not have a collection-id set.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,5,https://github.com/endlessm/eos-updater/pull/189#issuecomment-382671236,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Wrt “flatpak: Ignore related refs that don't have a collection-id set” — this (and other commits) could do with some rationale for their changes in their commit messages.

Makes sense. I'll add one tonight",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/189#issuecomment-382701285,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","For now I've made it so that dependency ref actions don't get pulled from remotes that do not have a collection-id set.

That makes sense. This might be something we want unit tests for.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,7,https://github.com/endlessm/eos-updater/pull/189#issuecomment-383131472,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Okay, I pushed a bunch of fixups for the review comments.
Unfortunately while I was doing a bit of testing, I quickly found out that things were not as simple as they seemed :( Here's a brief summary of what has changed:

Dependency ref actions now inherit the serial and source from their source ref action and have an IS_DEPENDENCY flag. During squashing, dependencies are sorted before their source if the action was an install or update action, or after their source if the action was an uninstall action
We now give the source ref action's remote the highest priority when searching for remotes for dependencies
If the result of (2) would be that two actions in the autoinstall list would try and install the same dependency from different remotes first, then the first action in the autoinstall list wins
We don't add all dependency ref actions from all remotes for a single source and rely on squashing to deduplicate them. We still have the squashing process but now only add the dependency once from the best matching remote. The squashing process would otherwise pick the most recent dependency ref action from the autoinstall list which will end up picking a lower priority remote.

This ended up becoming massive :(",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,8,https://github.com/endlessm/eos-updater/pull/189#issuecomment-383131874,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Ugh, github is displaying the commits out of order ... let me rebase from the tip to try and fix that.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,9,https://github.com/endlessm/eos-updater/pull/189#issuecomment-383132165,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Nope, that didn't help sigh",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,10,https://github.com/endlessm/eos-updater/pull/189#issuecomment-383132640,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Okay, if you pull the repository git log will definitely display them in the right order for squashing. Not sure how to fix the github fail here...",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,11,https://github.com/endlessm/eos-updater/pull/189#issuecomment-383894560,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054",This now depends on #189,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,12,https://github.com/endlessm/eos-updater/pull/189#issuecomment-384225272,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054",This no longer depends on the linked flatpak PR.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/ramcq,13,https://github.com/endlessm/eos-updater/pull/189#issuecomment-384310574,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","Looks reasonable in overall size/shape/logic, I've not done an in-depth review but picked up a few possibly outdated comments - not read the commit messages but might be worth a scan there too for outdated wording about the algorithm/approach.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/pwithnall,14,https://github.com/endlessm/eos-updater/pull/189#issuecomment-384948730,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","I have a few comments on some of the fixups, above. They need fixing before this can be merged. Specifically:

#189 (comment)
#189 (comment)
#189 (comment) (introduces a bug)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/pwithnall,15,https://github.com/endlessm/eos-updater/pull/189#issuecomment-385028647,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054",Ship. It. (Once Jenkins passes and you’ve rebased and squashed.),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,16,https://github.com/endlessm/eos-updater/pull/189#issuecomment-385256486,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054",@pwithnall Just a heads up that there's one last commit here (test-common: Don't preinstall runtimes more than once) which was necessary to fix a test failure on Jenkins.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/pwithnall,17,https://github.com/endlessm/eos-updater/pull/189#issuecomment-385370222,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054","@pwithnall Just a heads up that there's one last commit here (test-common: Don't preinstall runtimes more than once) which was necessary to fix a test failure on Jenkins.

Looks good to me. 👍",True,{'THUMBS_UP': ['https://github.com/smspillaz']}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,189,2018-04-13T15:02:44Z,2018-04-30T12:50:00Z,2018-05-02T17:38:53Z,MERGED,True,4810,1129,20,https://github.com/smspillaz,T22054: Pull and install dependency ref actions,31,[],https://github.com/endlessm/eos-updater/pull/189,https://github.com/smspillaz,18,https://github.com/endlessm/eos-updater/pull/189#issuecomment-385388857,"This adds a new function euu_add_dependency_ref_actions_for_installation. Given a flattened autoinstall list and a FlatpakInstallation, it will figure out what dependencies need to be added (taken from flatpak_installation_list_remote_related_refs_sync) and add appropriate actions for those to the autoinstall list.
This PR also contains a few incidental changes, required to make this work, such as signing all exported builds.
https://phabricator.endlessm.com/T22054",Lets do this,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,190,2018-04-13T21:43:09Z,2018-04-16T10:07:03Z,2018-04-16T10:07:15Z,MERGED,True,5,0,1,https://github.com/joaquimrocha,fetch: Set schedule entry's priority,1,[],https://github.com/endlessm/eos-updater/pull/190,https://github.com/joaquimrocha,1,https://github.com/endlessm/eos-updater/pull/190,"The value for the OS updates priority is equal to what's expected for
this type of updates in GNOME Software, so it sets the appropriate
priority to app updates (Mogwai's checks eos-updater and GNOME
Software's priorities together).
https://phabricator.endlessm.com/T21327","The value for the OS updates priority is equal to what's expected for
this type of updates in GNOME Software, so it sets the appropriate
priority to app updates (Mogwai's checks eos-updater and GNOME
Software's priorities together).
https://phabricator.endlessm.com/T21327",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,191,2018-04-16T22:26:00Z,2018-05-01T19:54:08Z,2018-05-01T19:54:11Z,MERGED,True,130,13,10,https://github.com/mwleeds,T21756 preparation,5,[],https://github.com/endlessm/eos-updater/pull/191,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/191,"These commits had to broken off from the other T21756 commits because if I add EosUpdaterUtil-0 to libeos_updater_flatpak_installer_EosUpdaterFlatpakInstaller_@EUFI_API_VERSION@_gir_INCLUDES in the same commit that adds EosUpdaterUtil-0.gir as a target the build fails because the gir isn't installed at build time. So after this is merged, #188 will be able to have that dependency.","These commits had to broken off from the other T21756 commits because if I add EosUpdaterUtil-0 to libeos_updater_flatpak_installer_EosUpdaterFlatpakInstaller_@EUFI_API_VERSION@_gir_INCLUDES in the same commit that adds EosUpdaterUtil-0.gir as a target the build fails because the gir isn't installed at build time. So after this is merged, #188 will be able to have that dependency.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,191,2018-04-16T22:26:00Z,2018-05-01T19:54:08Z,2018-05-01T19:54:11Z,MERGED,True,130,13,10,https://github.com/mwleeds,T21756 preparation,5,[],https://github.com/endlessm/eos-updater/pull/191,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/191#issuecomment-385570506,"These commits had to broken off from the other T21756 commits because if I add EosUpdaterUtil-0 to libeos_updater_flatpak_installer_EosUpdaterFlatpakInstaller_@EUFI_API_VERSION@_gir_INCLUDES in the same commit that adds EosUpdaterUtil-0.gir as a target the build fails because the gir isn't installed at build time. So after this is merged, #188 will be able to have that dependency.",I pushed a fixed branch. I would have done fixups but with this small amount of changes I don't think it matters much.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,192,2018-04-19T09:33:24Z,2018-04-19T09:59:26Z,2018-04-19T09:59:30Z,MERGED,True,1,1,1,https://github.com/pwithnall,build: Allow declarations after statements,1,[],https://github.com/endlessm/eos-updater/pull/192,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/192,"Welcome to 2018! This works really well with g_autoptr(), which we’ve
been using for a while.
I don’t plan to port the code from -Wdeclaration-after-statement to
-Wno-declaration-after-statement; but any new code or modifications made
after this commit should use declarations after statements where
appropriate.
Signed-off-by: Philip Withnall withnall@endlessm.com","Welcome to 2018! This works really well with g_autoptr(), which we’ve
been using for a while.
I don’t plan to port the code from -Wdeclaration-after-statement to
-Wno-declaration-after-statement; but any new code or modifications made
after this commit should use declarations after statements where
appropriate.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{'HEART': ['https://github.com/smspillaz']}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,193,2018-04-25T11:20:00Z,2018-04-27T10:53:47Z,2018-04-27T10:53:50Z,MERGED,True,114,3,1,https://github.com/joaquimrocha,Cancel fetching when Mogwai asks it to not download,1,[],https://github.com/endlessm/eos-updater/pull/193,https://github.com/joaquimrocha,1,https://github.com/endlessm/eos-updater/pull/193,"Fetching the updates was honoring the 'download-now' property from
Mogwai's Scheduled Entry for starting, but once it started, it'd not get
canceled even if Mogwai reported download-now=false for the entry.
This patch implements that cancellation by using a local cancellable
object for the fetching operation instead of the one that's passed to
the call, since the latter should only be cancelled by the Cancel()
DBus method (in order to avoid future issues).
https://phabricator.endlessm.com/T22237","Fetching the updates was honoring the 'download-now' property from
Mogwai's Scheduled Entry for starting, but once it started, it'd not get
canceled even if Mogwai reported download-now=false for the entry.
This patch implements that cancellation by using a local cancellable
object for the fetching operation instead of the one that's passed to
the call, since the latter should only be cancelled by the Cancel()
DBus method (in order to avoid future issues).
https://phabricator.endlessm.com/T22237",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,193,2018-04-25T11:20:00Z,2018-04-27T10:53:47Z,2018-04-27T10:53:50Z,MERGED,True,114,3,1,https://github.com/joaquimrocha,Cancel fetching when Mogwai asks it to not download,1,[],https://github.com/endlessm/eos-updater/pull/193,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/193#issuecomment-384682287,"Fetching the updates was honoring the 'download-now' property from
Mogwai's Scheduled Entry for starting, but once it started, it'd not get
canceled even if Mogwai reported download-now=false for the entry.
This patch implements that cancellation by using a local cancellable
object for the fetching operation instead of the one that's passed to
the call, since the latter should only be cancelled by the Cancel()
DBus method (in order to avoid future issues).
https://phabricator.endlessm.com/T22237","In your testing, what happens when the download is cancelled? I expect eos-updater goes to the error state, and then eos-autoupdater needs to reset it back to polling for updates?

For posterity, it would be good to have an answer to this put into the commit message too.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,194,2018-04-26T01:38:15Z,2018-05-24T12:10:51Z,2018-05-24T12:10:51Z,CLOSED,False,629,22,3,https://github.com/smspillaz,T22279: Also uninstall autodelete extensions,4,[],https://github.com/endlessm/eos-updater/pull/194,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/194,"This is a follow-up to #189
If an extension is marked autodelete, we should remove it when the source flatpak gets uninstalled.","This is a follow-up to #189
If an extension is marked autodelete, we should remove it when the source flatpak gets uninstalled.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,194,2018-04-26T01:38:15Z,2018-05-24T12:10:51Z,2018-05-24T12:10:51Z,CLOSED,False,629,22,3,https://github.com/smspillaz,T22279: Also uninstall autodelete extensions,4,[],https://github.com/endlessm/eos-updater/pull/194,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/194#issuecomment-384485291,"This is a follow-up to #189
If an extension is marked autodelete, we should remove it when the source flatpak gets uninstalled.",Currently stacked on #189,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,194,2018-04-26T01:38:15Z,2018-05-24T12:10:51Z,2018-05-24T12:10:51Z,CLOSED,False,629,22,3,https://github.com/smspillaz,T22279: Also uninstall autodelete extensions,4,[],https://github.com/endlessm/eos-updater/pull/194,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/194#issuecomment-385305066,"This is a follow-up to #189
If an extension is marked autodelete, we should remove it when the source flatpak gets uninstalled.",Will need to be rebased once #189 is merged.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,194,2018-04-26T01:38:15Z,2018-05-24T12:10:51Z,2018-05-24T12:10:51Z,CLOSED,False,629,22,3,https://github.com/smspillaz,T22279: Also uninstall autodelete extensions,4,[],https://github.com/endlessm/eos-updater/pull/194,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/194#issuecomment-385974151,"This is a follow-up to #189
If an extension is marked autodelete, we should remove it when the source flatpak gets uninstalled.","Will need to be rebased once #189 is merged

It’s merged; this can be rebased.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,194,2018-04-26T01:38:15Z,2018-05-24T12:10:51Z,2018-05-24T12:10:51Z,CLOSED,False,629,22,3,https://github.com/smspillaz,T22279: Also uninstall autodelete extensions,4,[],https://github.com/endlessm/eos-updater/pull/194,https://github.com/smspillaz,5,https://github.com/endlessm/eos-updater/pull/194#issuecomment-391541823,"This is a follow-up to #189
If an extension is marked autodelete, we should remove it when the source flatpak gets uninstalled.","(Do we want this anymore? If not, we should close this)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,194,2018-04-26T01:38:15Z,2018-05-24T12:10:51Z,2018-05-24T12:10:51Z,CLOSED,False,629,22,3,https://github.com/smspillaz,T22279: Also uninstall autodelete extensions,4,[],https://github.com/endlessm/eos-updater/pull/194,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/194#issuecomment-391691112,"This is a follow-up to #189
If an extension is marked autodelete, we should remove it when the source flatpak gets uninstalled.","(Do we want this anymore? If not, we should close this)

I think the conclusion so far from https://phabricator.endlessm.com/T22279 is that we might want this, but it should be discussed upstream first, since the behaviour of flatpak uninstall might need to change as well. That discussion hasn’t happened yet.
I’ve rebased this on master as of today (trivial rebase), just so it’s obvious what code hasn’t been merged here. Let’s close this PR but keep the branch in place until the discussion has happened on the task (which I don’t think has a particularly high priority at the moment).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,195,2018-04-29T15:03:24Z,2018-05-01T15:26:01Z,2018-05-02T17:38:46Z,MERGED,True,1082,156,9,https://github.com/smspillaz,T22295: Check booted branch first before following update refspec,5,[],https://github.com/endlessm/eos-updater/pull/195,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/195,"Previously we would always unconditionally follow the upgrade refspec
if we were booted into a commit that had the update refspec as part
of its metadata. However, such an approach means that the client must
always be able to use the current updater on the checkpoint commit
to upgrade to the most recent commit. This leaves very little room
for error in case the updater on the current commit is not able
to process the new upgrade (for instance, incorrectly configured
flatpak remotes).
Considering that, we might want to ""fix"" the updater again before
we try upgrading on the branch that really requires it. That can
be done by adding new commits to the currently booted branch. However,
if we do that we need the updater to pay attention to the currently
booted branch and not the ""upgrade"" branch in the booted commit's
metadata.
This branch does exactly that. It wraps get_refspec_to_upgrade_on
with another function that first pulls on the currently booted branch
to see if there is a new commit and if so uses that, then, if there
is not a new commit, pulls the upgrade-refspec branch for new commits
and attempts to apply them.
Finally, this branch also includes updates to the tests to allow tests
to build up their own non-linear commit graph.
https://phabricator.endlessm.com/T22295","Previously we would always unconditionally follow the upgrade refspec
if we were booted into a commit that had the update refspec as part
of its metadata. However, such an approach means that the client must
always be able to use the current updater on the checkpoint commit
to upgrade to the most recent commit. This leaves very little room
for error in case the updater on the current commit is not able
to process the new upgrade (for instance, incorrectly configured
flatpak remotes).
Considering that, we might want to ""fix"" the updater again before
we try upgrading on the branch that really requires it. That can
be done by adding new commits to the currently booted branch. However,
if we do that we need the updater to pay attention to the currently
booted branch and not the ""upgrade"" branch in the booted commit's
metadata.
This branch does exactly that. It wraps get_refspec_to_upgrade_on
with another function that first pulls on the currently booted branch
to see if there is a new commit and if so uses that, then, if there
is not a new commit, pulls the upgrade-refspec branch for new commits
and attempts to apply them.
Finally, this branch also includes updates to the tests to allow tests
to build up their own non-linear commit graph.
https://phabricator.endlessm.com/T22295",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,195,2018-04-29T15:03:24Z,2018-05-01T15:26:01Z,2018-05-02T17:38:46Z,MERGED,True,1082,156,9,https://github.com/smspillaz,T22295: Check booted branch first before following update refspec,5,[],https://github.com/endlessm/eos-updater/pull/195,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/195#issuecomment-385623360,"Previously we would always unconditionally follow the upgrade refspec
if we were booted into a commit that had the update refspec as part
of its metadata. However, such an approach means that the client must
always be able to use the current updater on the checkpoint commit
to upgrade to the most recent commit. This leaves very little room
for error in case the updater on the current commit is not able
to process the new upgrade (for instance, incorrectly configured
flatpak remotes).
Considering that, we might want to ""fix"" the updater again before
we try upgrading on the branch that really requires it. That can
be done by adding new commits to the currently booted branch. However,
if we do that we need the updater to pay attention to the currently
booted branch and not the ""upgrade"" branch in the booted commit's
metadata.
This branch does exactly that. It wraps get_refspec_to_upgrade_on
with another function that first pulls on the currently booted branch
to see if there is a new commit and if so uses that, then, if there
is not a new commit, pulls the upgrade-refspec branch for new commits
and attempts to apply them.
Finally, this branch also includes updates to the tests to allow tests
to build up their own non-linear commit graph.
https://phabricator.endlessm.com/T22295","This looks good to me now. Feel free to rebase, squash, merge!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,195,2018-04-29T15:03:24Z,2018-05-01T15:26:01Z,2018-05-02T17:38:46Z,MERGED,True,1082,156,9,https://github.com/smspillaz,T22295: Check booted branch first before following update refspec,5,[],https://github.com/endlessm/eos-updater/pull/195,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/195#issuecomment-385623566,"Previously we would always unconditionally follow the upgrade refspec
if we were booted into a commit that had the update refspec as part
of its metadata. However, such an approach means that the client must
always be able to use the current updater on the checkpoint commit
to upgrade to the most recent commit. This leaves very little room
for error in case the updater on the current commit is not able
to process the new upgrade (for instance, incorrectly configured
flatpak remotes).
Considering that, we might want to ""fix"" the updater again before
we try upgrading on the branch that really requires it. That can
be done by adding new commits to the currently booted branch. However,
if we do that we need the updater to pay attention to the currently
booted branch and not the ""upgrade"" branch in the booted commit's
metadata.
This branch does exactly that. It wraps get_refspec_to_upgrade_on
with another function that first pulls on the currently booted branch
to see if there is a new commit and if so uses that, then, if there
is not a new commit, pulls the upgrade-refspec branch for new commits
and attempts to apply them.
Finally, this branch also includes updates to the tests to allow tests
to build up their own non-linear commit graph.
https://phabricator.endlessm.com/T22295","jenkins, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,195,2018-04-29T15:03:24Z,2018-05-01T15:26:01Z,2018-05-02T17:38:46Z,MERGED,True,1082,156,9,https://github.com/smspillaz,T22295: Check booted branch first before following update refspec,5,[],https://github.com/endlessm/eos-updater/pull/195,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/195#issuecomment-385623632,"Previously we would always unconditionally follow the upgrade refspec
if we were booted into a commit that had the update refspec as part
of its metadata. However, such an approach means that the client must
always be able to use the current updater on the checkpoint commit
to upgrade to the most recent commit. This leaves very little room
for error in case the updater on the current commit is not able
to process the new upgrade (for instance, incorrectly configured
flatpak remotes).
Considering that, we might want to ""fix"" the updater again before
we try upgrading on the branch that really requires it. That can
be done by adding new commits to the currently booted branch. However,
if we do that we need the updater to pay attention to the currently
booted branch and not the ""upgrade"" branch in the booted commit's
metadata.
This branch does exactly that. It wraps get_refspec_to_upgrade_on
with another function that first pulls on the currently booted branch
to see if there is a new commit and if so uses that, then, if there
is not a new commit, pulls the upgrade-refspec branch for new commits
and attempts to apply them.
Finally, this branch also includes updates to the tests to allow tests
to build up their own non-linear commit graph.
https://phabricator.endlessm.com/T22295",Although I just noticed Jenkins had failed. Investigate that first?,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,195,2018-04-29T15:03:24Z,2018-05-01T15:26:01Z,2018-05-02T17:38:46Z,MERGED,True,1082,156,9,https://github.com/smspillaz,T22295: Check booted branch first before following update refspec,5,[],https://github.com/endlessm/eos-updater/pull/195,https://github.com/smspillaz,5,https://github.com/endlessm/eos-updater/pull/195#issuecomment-385699117,"Previously we would always unconditionally follow the upgrade refspec
if we were booted into a commit that had the update refspec as part
of its metadata. However, such an approach means that the client must
always be able to use the current updater on the checkpoint commit
to upgrade to the most recent commit. This leaves very little room
for error in case the updater on the current commit is not able
to process the new upgrade (for instance, incorrectly configured
flatpak remotes).
Considering that, we might want to ""fix"" the updater again before
we try upgrading on the branch that really requires it. That can
be done by adding new commits to the currently booted branch. However,
if we do that we need the updater to pay attention to the currently
booted branch and not the ""upgrade"" branch in the booted commit's
metadata.
This branch does exactly that. It wraps get_refspec_to_upgrade_on
with another function that first pulls on the currently booted branch
to see if there is a new commit and if so uses that, then, if there
is not a new commit, pulls the upgrade-refspec branch for new commits
and attempts to apply them.
Finally, this branch also includes updates to the tests to allow tests
to build up their own non-linear commit graph.
https://phabricator.endlessm.com/T22295",Jenkins passed. Squashed and rebasemerging,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,196,2018-05-01T21:50:12Z,2018-05-02T13:04:54Z,2018-05-02T17:38:48Z,MERGED,True,175,56,2,https://github.com/dbnicholson,"poll-common: Operate on checkpoint refs, not refspecs",3,[],https://github.com/endlessm/eos-updater/pull/196,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/196,"The eos.checkpoint-target commit metadata is created on the server side
while the remote is a property of the client's configuration. Following
a remote specified in the metadata would almost certainly be wrong and
provide the server with the ability to switch a client's remote.
Instead, only take the ref from the metadata like the
ostree.endoflife-rebase handling. If a full refspec with remote is
included, the remote is ignored and a warning is issued.
https://phabricator.endlessm.com/T19437","The eos.checkpoint-target commit metadata is created on the server side
while the remote is a property of the client's configuration. Following
a remote specified in the metadata would almost certainly be wrong and
provide the server with the ability to switch a client's remote.
Instead, only take the ref from the metadata like the
ostree.endoflife-rebase handling. If a full refspec with remote is
included, the remote is ignored and a warning is issued.
https://phabricator.endlessm.com/T19437",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,196,2018-05-01T21:50:12Z,2018-05-02T13:04:54Z,2018-05-02T17:38:48Z,MERGED,True,175,56,2,https://github.com/dbnicholson,"poll-common: Operate on checkpoint refs, not refspecs",3,[],https://github.com/endlessm/eos-updater/pull/196,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/196#issuecomment-385835663,"The eos.checkpoint-target commit metadata is created on the server side
while the remote is a property of the client's configuration. Following
a remote specified in the metadata would almost certainly be wrong and
provide the server with the ability to switch a client's remote.
Instead, only take the ref from the metadata like the
ostree.endoflife-rebase handling. If a full refspec with remote is
included, the remote is ignored and a warning is issued.
https://phabricator.endlessm.com/T19437",Created a PR here with my suggested changes: #197 . Other than that tested this locally and it works fine.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,196,2018-05-01T21:50:12Z,2018-05-02T13:04:54Z,2018-05-02T17:38:48Z,MERGED,True,175,56,2,https://github.com/dbnicholson,"poll-common: Operate on checkpoint refs, not refspecs",3,[],https://github.com/endlessm/eos-updater/pull/196,https://github.com/dbnicholson,3,https://github.com/endlessm/eos-updater/pull/196#issuecomment-385938110,"The eos.checkpoint-target commit metadata is created on the server side
while the remote is a property of the client's configuration. Following
a remote specified in the metadata would almost certainly be wrong and
provide the server with the ability to switch a client's remote.
Instead, only take the ref from the metadata like the
ostree.endoflife-rebase handling. If a full refspec with remote is
included, the remote is ignored and a warning is issued.
https://phabricator.endlessm.com/T19437","If you don't mind, I'll squash your changes from #197 into my commits.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,196,2018-05-01T21:50:12Z,2018-05-02T13:04:54Z,2018-05-02T17:38:48Z,MERGED,True,175,56,2,https://github.com/dbnicholson,"poll-common: Operate on checkpoint refs, not refspecs",3,[],https://github.com/endlessm/eos-updater/pull/196,https://github.com/dbnicholson,4,https://github.com/endlessm/eos-updater/pull/196#issuecomment-385941812,"The eos.checkpoint-target commit metadata is created on the server side
while the remote is a property of the client's configuration. Following
a remote specified in the metadata would almost certainly be wrong and
provide the server with the ability to switch a client's remote.
Instead, only take the ref from the metadata like the
ostree.endoflife-rebase handling. If a full refspec with remote is
included, the remote is ignored and a warning is issued.
https://phabricator.endlessm.com/T19437",CR ready again. I squashed/merged the changes from #197 here.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,197,2018-05-02T01:09:47Z,2018-05-02T13:05:18Z,2018-05-02T13:05:34Z,CLOSED,False,175,56,2,https://github.com/smspillaz,T19437: Review comments,5,[],https://github.com/endlessm/eos-updater/pull/197,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/197,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,197,2018-05-02T01:09:47Z,2018-05-02T13:05:18Z,2018-05-02T13:05:34Z,CLOSED,False,175,56,2,https://github.com/smspillaz,T19437: Review comments,5,[],https://github.com/endlessm/eos-updater/pull/197,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/197#issuecomment-385970743,,Squashed into #196.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,198,2018-05-02T03:43:59Z,2018-05-02T10:40:38Z,2018-05-02T10:40:41Z,MERGED,True,8,1,1,https://github.com/smspillaz,T22295: Fix unconditional failure in libostree P2P metadata fetch code,3,[],https://github.com/endlessm/eos-updater/pull/198,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/198,"As @dbnicholson spotted in https://github.com/endlessm/eos-updater/pull/195/files/e57fba023ce06b9f32524010057d2570dcc24967#r185319556
https://phabricator.endlessm.com/T22295","As @dbnicholson spotted in https://github.com/endlessm/eos-updater/pull/195/files/e57fba023ce06b9f32524010057d2570dcc24967#r185319556
https://phabricator.endlessm.com/T22295",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,199,2018-05-02T11:21:58Z,2018-05-02T13:14:16Z,2018-05-02T13:14:20Z,MERGED,True,15,0,1,https://github.com/joaquimrocha,fetch: Ensure we can cancel checking the scheduler,1,[],https://github.com/endlessm/eos-updater/pull/199,https://github.com/joaquimrocha,1,https://github.com/endlessm/eos-updater/pull/199,"The fetch operation couldn't be canceled because the check_scheduler was
blocked iterating its context (while waiting for Mogwai's signals).
These changes add a new GSource from the cancellable object to the
GMainContext, so when the cancellable is canceled the main context
iterates and thus allows for the operation to stop.
https://phabricator.endlessm.com/T21133","The fetch operation couldn't be canceled because the check_scheduler was
blocked iterating its context (while waiting for Mogwai's signals).
These changes add a new GSource from the cancellable object to the
GMainContext, so when the cancellable is canceled the main context
iterates and thus allows for the operation to stop.
https://phabricator.endlessm.com/T21133",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,200,2018-05-04T13:49:20Z,2018-05-04T14:26:58Z,2018-05-04T14:27:02Z,CLOSED,False,27,10,4,https://github.com/pwithnall,T22418 Add --force to update command,2,[],https://github.com/endlessm/eos-updater/pull/200,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/200,https://phabricator.endlessm.com/T22418,https://phabricator.endlessm.com/T22418,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,200,2018-05-04T13:49:20Z,2018-05-04T14:26:58Z,2018-05-04T14:27:02Z,CLOSED,False,27,10,4,https://github.com/pwithnall,T22418 Add --force to update command,2,[],https://github.com/endlessm/eos-updater/pull/200,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/200#issuecomment-386618503,https://phabricator.endlessm.com/T22418,"Commit message fixed and merged, thanks.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,201,2018-05-07T16:41:22Z,2018-05-08T10:12:47Z,2018-05-08T10:13:52Z,CLOSED,False,371,429,42,https://github.com/pwithnall,T15816 Split eos-updater into subdirectories,4,[],https://github.com/endlessm/eos-updater/pull/201,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/201,https://phabricator.endlessm.com/T15816,https://phabricator.endlessm.com/T15816,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,201,2018-05-07T16:41:22Z,2018-05-08T10:12:47Z,2018-05-08T10:13:52Z,CLOSED,False,371,429,42,https://github.com/pwithnall,T15816 Split eos-updater into subdirectories,4,[],https://github.com/endlessm/eos-updater/pull/201,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/201#issuecomment-387348480,https://phabricator.endlessm.com/T15816,"In general it might be good to split out commits that move things around from commits that make substantive changes to dependencies and the build process.

Not really possible given that the #include lines need to have the right paths, and automake doesn’t arrange build dependencies properly if you move them into sibling directories of where the Makefile.am is. :-(  I think this is the best I can get it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,201,2018-05-07T16:41:22Z,2018-05-08T10:12:47Z,2018-05-08T10:13:52Z,CLOSED,False,371,429,42,https://github.com/pwithnall,T15816 Split eos-updater into subdirectories,4,[],https://github.com/endlessm/eos-updater/pull/201,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/201#issuecomment-387349340,https://phabricator.endlessm.com/T15816,"Not really possible given that the #include lines need to have the right paths, and automake doesn’t arrange build dependencies properly if you move them into sibling directories of where the Makefile.am is. :-( I think this is the best I can get it.

Fair enough. We'll also need to fix the conflicts here.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,201,2018-05-07T16:41:22Z,2018-05-08T10:12:47Z,2018-05-08T10:13:52Z,CLOSED,False,371,429,42,https://github.com/pwithnall,T15816 Split eos-updater into subdirectories,4,[],https://github.com/endlessm/eos-updater/pull/201,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/201#issuecomment-387354238,https://phabricator.endlessm.com/T15816,"Fair enough. We'll also need to fix the conflicts here.

git managed it automatically; I’ve checked the diffs. 🎊",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,201,2018-05-07T16:41:22Z,2018-05-08T10:12:47Z,2018-05-08T10:13:52Z,CLOSED,False,371,429,42,https://github.com/pwithnall,T15816 Split eos-updater into subdirectories,4,[],https://github.com/endlessm/eos-updater/pull/201,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/201#issuecomment-387354577,https://phabricator.endlessm.com/T15816,Rebased and merged.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,202,2018-05-07T17:51:18Z,2018-05-07T19:47:01Z,2018-05-07T20:20:05Z,MERGED,True,2,2,1,https://github.com/dbnicholson,Fix checkpoint with no collection ID,2,[],https://github.com/endlessm/eos-updater/pull/202,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/202,"Hit a segfault when constructing the update info for a checkpoint when the remote had no collection ID.
https://phabricator.endlessm.com/T19437","Hit a segfault when constructing the update info for a checkpoint when the remote had no collection ID.
https://phabricator.endlessm.com/T19437",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,202,2018-05-07T17:51:18Z,2018-05-07T19:47:01Z,2018-05-07T20:20:05Z,MERGED,True,2,2,1,https://github.com/dbnicholson,Fix checkpoint with no collection ID,2,[],https://github.com/endlessm/eos-updater/pull/202,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/202#issuecomment-387181135,"Hit a segfault when constructing the update info for a checkpoint when the remote had no collection ID.
https://phabricator.endlessm.com/T19437",LGTM,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,203,2018-05-07T19:57:50Z,2018-05-07T21:19:24Z,2018-05-07T21:21:04Z,MERGED,True,1,1,1,https://github.com/mwleeds,poll: Fix order of remote and ref arguments,1,[],https://github.com/endlessm/eos-updater/pull/203,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/203,"Fix the order of the remote and ref arguments to
get_refspec_to_upgrade_on() in
check_for_update_following_checkpoint_commits() to match the function
definition. It appears those fields in UpdateRefInfo aren't used yet, so
that's why this hasn't caused a bug yet.","Fix the order of the remote and ref arguments to
get_refspec_to_upgrade_on() in
check_for_update_following_checkpoint_commits() to match the function
definition. It appears those fields in UpdateRefInfo aren't used yet, so
that's why this hasn't caused a bug yet.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,203,2018-05-07T19:57:50Z,2018-05-07T21:19:24Z,2018-05-07T21:21:04Z,MERGED,True,1,1,1,https://github.com/mwleeds,poll: Fix order of remote and ref arguments,1,[],https://github.com/endlessm/eos-updater/pull/203,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/203#issuecomment-387210487,"Fix the order of the remote and ref arguments to
get_refspec_to_upgrade_on() in
check_for_update_following_checkpoint_commits() to match the function
definition. It appears those fields in UpdateRefInfo aren't used yet, so
that's why this hasn't caused a bug yet.","@rshuler, this will also need merging back to eos3.4.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,204,2018-05-07T20:46:23Z,2018-05-07T21:14:26Z,2018-05-07T21:14:51Z,MERGED,True,10,3,1,https://github.com/dbnicholson,poll-common: Always set collection ref out param,1,[],https://github.com/endlessm/eos-updater/pull/204,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/204,"If the caller passed in collection_ref_to_upgrade_on, then it needs to
be set even if it's NULL in the case where there's no collection ID set
for the remote.
The g_autoptr is overkill, but I thought I'd just make it safe in case anything more clever needs to be done here in the future.
https://phabricator.endlessm.com/T19437","If the caller passed in collection_ref_to_upgrade_on, then it needs to
be set even if it's NULL in the case where there's no collection ID set
for the remote.
The g_autoptr is overkill, but I thought I'd just make it safe in case anything more clever needs to be done here in the future.
https://phabricator.endlessm.com/T19437",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,205,2018-05-08T04:28:31Z,2018-05-15T19:04:27Z,2018-05-15T19:04:40Z,MERGED,True,525,2,2,https://github.com/smspillaz,T22475: Tests for checkpoint edge error cases,3,[],https://github.com/endlessm/eos-updater/pull/205,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/205,"Test that we don't crash in circumstances of invalid or partially valid configuration (such as no collection-ref being set locally on the remote config or a malformed refspec being set on a commit).
https://phabricator.endlessm.com/T22475","Test that we don't crash in circumstances of invalid or partially valid configuration (such as no collection-ref being set locally on the remote config or a malformed refspec being set on a commit).
https://phabricator.endlessm.com/T22475",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,205,2018-05-08T04:28:31Z,2018-05-15T19:04:27Z,2018-05-15T19:04:40Z,MERGED,True,525,2,2,https://github.com/smspillaz,T22475: Tests for checkpoint edge error cases,3,[],https://github.com/endlessm/eos-updater/pull/205,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/205#issuecomment-387346205,"Test that we don't crash in circumstances of invalid or partially valid configuration (such as no collection-ref being set locally on the remote config or a malformed refspec being set on a commit).
https://phabricator.endlessm.com/T22475","Review of “poll: Fail if there is no booted collection ref when using checkpoints” — this seems completely contrary to the discussion on T19437 yesterday. At this time, I don’t think we can guarantee that many machines have a collection ID configured locally. The checkpoint support needs to work without a collection ID.

Fair enough, I wasn't sure whether we wanted it to work or fail cleanly when there wasn't a collection-id set. I'll adjust the behavior and the test then.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,205,2018-05-08T04:28:31Z,2018-05-15T19:04:27Z,2018-05-15T19:04:40Z,MERGED,True,525,2,2,https://github.com/smspillaz,T22475: Tests for checkpoint edge error cases,3,[],https://github.com/endlessm/eos-updater/pull/205,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/205#issuecomment-387346316,"Test that we don't crash in circumstances of invalid or partially valid configuration (such as no collection-ref being set locally on the remote config or a malformed refspec being set on a commit).
https://phabricator.endlessm.com/T22475","Review of “tests: Add test for malformed checkpoint refspec” — this looks OK (thanks for adding it!), but it would be good to extend the test a bit to then add an additional commit to the first branch, and check that the client then pulls that. This would test the recovery path for if we did manage to push an invalid checkpoint refspec.

Okay, I can add a new test",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,205,2018-05-08T04:28:31Z,2018-05-15T19:04:27Z,2018-05-15T19:04:40Z,MERGED,True,525,2,2,https://github.com/smspillaz,T22475: Tests for checkpoint edge error cases,3,[],https://github.com/endlessm/eos-updater/pull/205,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/205#issuecomment-388097644,"Test that we don't crash in circumstances of invalid or partially valid configuration (such as no collection-ref being set locally on the remote config or a malformed refspec being set on a commit).
https://phabricator.endlessm.com/T22475",LGTM. Squash the fixups and merge!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,206,2018-05-08T17:13:54Z,2018-05-09T15:10:56Z,2018-05-10T16:38:48Z,MERGED,True,116,0,3,https://github.com/dbnicholson,eos-updater-apply: Set remote branches option after deploy,1,[],https://github.com/endlessm/eos-updater/pull/206,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/206,"This is mostly cosmetic since the only time the remote branches option
is used is when a pull is done with no refs specified. Still, people
expect it to match the ref in the origin refspec, and changing it to
match prevents inadvertently pulling an unused ref that would occupy
disk space. Errors from the option update are ignored since it has no
effect on the actual upgrade.
https://phabricator.endlessm.com/T22477","This is mostly cosmetic since the only time the remote branches option
is used is when a pull is done with no refs specified. Still, people
expect it to match the ref in the origin refspec, and changing it to
match prevents inadvertently pulling an unused ref that would occupy
disk space. Errors from the option update are ignored since it has no
effect on the actual upgrade.
https://phabricator.endlessm.com/T22477",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,207,2018-05-09T02:53:15Z,2018-05-10T19:37:37Z,2018-05-10T19:37:39Z,MERGED,True,270,17,4,https://github.com/smspillaz,poll: Don't treat move to older commit on new branch as a downgrade,1,[],https://github.com/endlessm/eos-updater/pull/207,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/207,"Previously we checked if the commit timestamp was always greater than
the booted commit timestamp before pulling it. This won't work in
the case that a commit is made on a new branch (1), then we make
another commit on the old branch (2) with a checkpoint pointing
to then new branch.
https://phabricator.endlessm.com/T22498","Previously we checked if the commit timestamp was always greater than
the booted commit timestamp before pulling it. This won't work in
the case that a commit is made on a new branch (1), then we make
another commit on the old branch (2) with a checkpoint pointing
to then new branch.
https://phabricator.endlessm.com/T22498",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,207,2018-05-09T02:53:15Z,2018-05-10T19:37:37Z,2018-05-10T19:37:39Z,MERGED,True,270,17,4,https://github.com/smspillaz,poll: Don't treat move to older commit on new branch as a downgrade,1,[],https://github.com/endlessm/eos-updater/pull/207,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/207#issuecomment-388094080,"Previously we checked if the commit timestamp was always greater than
the booted commit timestamp before pulling it. This won't work in
the case that a commit is made on a new branch (1), then we make
another commit on the old branch (2) with a checkpoint pointing
to then new branch.
https://phabricator.endlessm.com/T22498",LGTM. Squash the fixups and merge!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,208,2018-05-22T20:19:44Z,2018-05-24T13:49:32Z,2018-05-24T13:49:36Z,MERGED,True,21,17,3,https://github.com/mariospr,Don't prune the repository when updating or uninstalling flatpaks,5,[],https://github.com/endlessm/eos-updater/pull/208,https://github.com/mariospr,1,https://github.com/endlessm/eos-updater/pull/208,"This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621","This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,208,2018-05-22T20:19:44Z,2018-05-24T13:49:32Z,2018-05-24T13:49:36Z,MERGED,True,21,17,3,https://github.com/mariospr,Don't prune the repository when updating or uninstalling flatpaks,5,[],https://github.com/endlessm/eos-updater/pull/208,https://github.com/mariospr,2,https://github.com/endlessm/eos-updater/pull/208#issuecomment-391139946,"This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621","Of course, CI failed because this PR depends on endlessm/flatpak#95 being merged",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,208,2018-05-22T20:19:44Z,2018-05-24T13:49:32Z,2018-05-24T13:49:36Z,MERGED,True,21,17,3,https://github.com/mariospr,Don't prune the repository when updating or uninstalling flatpaks,5,[],https://github.com/endlessm/eos-updater/pull/208,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/208#issuecomment-391315244,"This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621","This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.

I would say it counts as a legitimate improvement, not a workaround.
Remember to bump the flatpak dependency in debian/control so that we get the right APIs.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,208,2018-05-22T20:19:44Z,2018-05-24T13:49:32Z,2018-05-24T13:49:36Z,MERGED,True,21,17,3,https://github.com/mariospr,Don't prune the repository when updating or uninstalling flatpaks,5,[],https://github.com/endlessm/eos-updater/pull/208,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/208#issuecomment-391542600,"This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621","I would say it counts as a legitimate improvement, not a workaround.

Not sure I would want to keep this permanently. To me, pruning is a feature since we want to minimize the chance that the installer fails due to ENOSPACE. That said, it is doing whatever it is doing very inefficiently. Once we fix the performance of it upstream, this should be revisited (or at least, group all this stuff into a transaction and prune at the start and end)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,208,2018-05-22T20:19:44Z,2018-05-24T13:49:32Z,2018-05-24T13:49:36Z,MERGED,True,21,17,3,https://github.com/mariospr,Don't prune the repository when updating or uninstalling flatpaks,5,[],https://github.com/endlessm/eos-updater/pull/208,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/208#issuecomment-391657376,"This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621","Not sure I would want to keep this permanently. To me, pruning is a feature since we want to minimize the chance that the installer fails due to ENOSPACE. That said, it is doing whatever it is doing very inefficiently. Once we fix the performance of it upstream, this should be revisited (or at least, group all this stuff into a transaction and prune at the start and end)

Pruning always happens after the peak disk space usage has been reached. If installing/updating a particular app is going to give you ENOSPACE, no amount of pruning before/after the install/update operation is going to help. It can only help ensure that situation isn’t reached for future app installs/updates — and that’s already taken care of by the prune at the end of eos-updater’s apply phase.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,208,2018-05-22T20:19:44Z,2018-05-24T13:49:32Z,2018-05-24T13:49:36Z,MERGED,True,21,17,3,https://github.com/mariospr,Don't prune the repository when updating or uninstalling flatpaks,5,[],https://github.com/endlessm/eos-updater/pull/208,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/208#issuecomment-391695237,"This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621","The flatpak changes have been merged. Waiting for OBS to rebuild, then we can poke Jenkins here and merge.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,208,2018-05-22T20:19:44Z,2018-05-24T13:49:32Z,2018-05-24T13:49:36Z,MERGED,True,21,17,3,https://github.com/mariospr,Don't prune the repository when updating or uninstalling flatpaks,5,[],https://github.com/endlessm/eos-updater/pull/208,https://github.com/pwithnall,7,https://github.com/endlessm/eos-updater/pull/208#issuecomment-391701179,"This is not a fix, but a workaround as an attempt to prevent taking too long
to boot when doing OS upgrades that imply updating a flatpak deployment.
https://phabricator.endlessm.com/T22621","Jenkins, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/209,https://phabricator.endlessm.com/T22054,https://phabricator.endlessm.com/T22054,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391383981,https://phabricator.endlessm.com/T22054,"Force-pushed an updated commit (seemed pointless to do a fixup, since it touches every line in the patch) which uses g_warning(). Let’s see what Jenkins says about the unit tests with that.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391400808,https://phabricator.endlessm.com/T22054,You were right about the warnings breaking the tests. Pushed an update which should fix that.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391424133,https://phabricator.endlessm.com/T22054,"One thing I am still potentially concerned about is how a warning loglevel will behave in the presence of subprocesses where we dont call g_log_set_writer_func. AFAIK, G_DEBUG is still set to fatal-warnings on those so the subprocess would still crash if it tried to emit a warning. I have not been able to test this however, so I could be wrong",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391426123,https://phabricator.endlessm.com/T22054,"Optional: Could pass a pointer to a fixture here (by calling this in the test setup func) instead of relying on global state.

Nope, since g_log_set_writer_func() should only be called once per process (see its documentation).

I would call reset_n_wanings as part of a fixture teardown hook just in case a future test triggers a warning (which will be suppressed above), causing later tests to fail due to potentially stale global state.

No other tests can fail due to warning messages, since no other tests call assert_n_warnings(). However, this does mean that we will silently ignore warnings from other tests, which is not good (that might be what you were getting at). I’ll update the branch to improve our behaviour there.

One thing I am still potentially concerned about is how a warning loglevel will behave in the presence of subprocesses where we dont call g_log_set_writer_func.

The tests have all passed, so I don’ŧ think there’s a problem there.

AFAIK, G_DEBUG is still set to fatal-warnings on those so the subprocess would still crash if it tried to emit a warning. I have not been able to test this however, so I could be wrong

Actually, G_DEBUG is only set to gc-friendly in the tests (see glib-tap.mk). We should be setting it to fatal-warnings though, definitely. I’ll handle that as a separate PR.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/smspillaz,6,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391541263,https://phabricator.endlessm.com/T22054,"Optional: Could pass a pointer to a fixture here (by calling this in the test setup func) instead of relying on global state.

Nope, since g_log_set_writer_func() should only be called once per process (see its documentation).

    I would call reset_n_wanings as part of a fixture teardown hook just in case a future test triggers a warning (which will be suppressed above), causing later tests to fail due to potentially stale global state.

No other tests can fail due to warning messages, since no other tests call assert_n_warnings(). However, this does mean that we will silently ignore warnings from other tests, which is not good (that might be what you were getting at). I’ll update the branch to improve our behaviour there.

Ah, that sucks about only being able to set the callback once.
The case I'm thinking of is more along the lines of:
happy_test() { /* something that warns unexpectedly, reset_count not called afterwards, warning not detected */ }
test_that_expect_not_to_warn() { /* asserts that there were no warnings 💥 */ }

Basically its a classic potential leakage of global state into other tests issue. I'd like to see us avoid the global state or at least always clean it up after each test.

Actually, G_DEBUG is only set to gc-friendly in the tests (see glib-tap.mk). We should be setting it to fatal-warnings though, definitely. I’ll handle that as a separate PR.

Given the discussion we just had, I'm not sure if we should be doing that? I'm thinking of ostreedev/ostree#1542 for example.
If we ever want to test what the behaviour is during a case that warns in an acceptance test, the child process has to not warn (and thus terminate unexpectedly).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/smspillaz,7,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391541511,https://phabricator.endlessm.com/T22054,"Shouldn’t review my own code!

Since I proposed this PR, I cant review it either 🙃 (or at least github wont let me)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/pwithnall,8,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391683983,https://phabricator.endlessm.com/T22054,"Ah, that sucks about only being able to set the callback once.

It’s a deliberate way of how the logging infrastructure is designed. I don’t think it’s a problem. (We do want the same log writer function for each test after all.) We just need to make sure any global state touched by that log writer function is appropriately reset.

Basically its a classic potential leakage of global state into other tests issue. I'd like to see us avoid the global state or at least always clean it up after each test.

The warning count does get reset at the start of each test which later asserts on the warning count. We could do with an assertion before exiting which checks there were no other warnings though. I’d rather not introduce a test fixture just to assert on the warning count; that‘s quite an invasive change.

Given the discussion we just had, I'm not sure if we should be doing that? I'm thinking of ostreedev/ostree#1542 for example.
If we ever want to test what the behaviour is during a case that warns in an acceptance test, the child process has to not warn (and thus terminate unexpectedly).

I’ve filed https://phabricator.endlessm.com/T22734 about it. I think we should use G_DEBUG=fatal-warnings. If it becomes a problem for subprocesses, we can remove it from the subprocess environment and do some checks on the stderr coming from that subprocess instead.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391700871,https://phabricator.endlessm.com/T22054,"Updated, rebased, squashed and ready for review. You could just review it in a comment, @smspillaz.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/smspillaz,10,https://github.com/endlessm/eos-updater/pull/209#issuecomment-391923651,https://phabricator.endlessm.com/T22054,Github wont let me review this but after our discussion I am fine with this for now,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,209,2018-05-23T06:22:02Z,2018-05-25T13:38:20Z,2018-05-25T13:38:24Z,MERGED,True,98,60,2,https://github.com/smspillaz,T22054: Logging improvements,2,[],https://github.com/endlessm/eos-updater/pull/209,https://github.com/pwithnall,11,https://github.com/endlessm/eos-updater/pull/209#issuecomment-392060464,https://phabricator.endlessm.com/T22054,Thanks.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,210,2018-05-24T23:38:22Z,2018-05-31T16:54:57Z,2018-05-31T16:54:59Z,MERGED,True,89,35,6,https://github.com/pwithnall,T22054 Allow installing dependencies from remotes without a locally configured collection ID,9,[],https://github.com/endlessm/eos-updater/pull/210,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/210,https://phabricator.endlessm.com/T22054,https://phabricator.endlessm.com/T22054,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,210,2018-05-24T23:38:22Z,2018-05-31T16:54:57Z,2018-05-31T16:54:59Z,MERGED,True,89,35,6,https://github.com/pwithnall,T22054 Allow installing dependencies from remotes without a locally configured collection ID,9,[],https://github.com/endlessm/eos-updater/pull/210,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/210#issuecomment-391920535,https://phabricator.endlessm.com/T22054,LGTM apart from the one comment,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,210,2018-05-24T23:38:22Z,2018-05-31T16:54:57Z,2018-05-31T16:54:59Z,MERGED,True,89,35,6,https://github.com/pwithnall,T22054 Allow installing dependencies from remotes without a locally configured collection ID,9,[],https://github.com/endlessm/eos-updater/pull/210,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/210#issuecomment-392779666,https://phabricator.endlessm.com/T22054,FWIW: This is a CR Pass from me (not sure if we were still blocking on that),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,210,2018-05-24T23:38:22Z,2018-05-31T16:54:57Z,2018-05-31T16:54:59Z,MERGED,True,89,35,6,https://github.com/pwithnall,T22054 Allow installing dependencies from remotes without a locally configured collection ID,9,[],https://github.com/endlessm/eos-updater/pull/210,https://github.com/rshuler,4,https://github.com/endlessm/eos-updater/pull/210#issuecomment-393308674,https://phabricator.endlessm.com/T22054,retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,210,2018-05-24T23:38:22Z,2018-05-31T16:54:57Z,2018-05-31T16:54:59Z,MERGED,True,89,35,6,https://github.com/pwithnall,T22054 Allow installing dependencies from remotes without a locally configured collection ID,9,[],https://github.com/endlessm/eos-updater/pull/210,https://github.com/rshuler,5,https://github.com/endlessm/eos-updater/pull/210#issuecomment-393314125,https://phabricator.endlessm.com/T22054,retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,210,2018-05-24T23:38:22Z,2018-05-31T16:54:57Z,2018-05-31T16:54:59Z,MERGED,True,89,35,6,https://github.com/pwithnall,T22054 Allow installing dependencies from remotes without a locally configured collection ID,9,[],https://github.com/endlessm/eos-updater/pull/210,https://github.com/smspillaz,6,https://github.com/endlessm/eos-updater/pull/210#issuecomment-393382899,https://phabricator.endlessm.com/T22054,Last two commits are 👍,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,211,2018-06-06T12:22:18Z,2018-06-11T16:56:52Z,2018-06-11T16:56:57Z,MERGED,True,339,89,15,https://github.com/pwithnall,T22873 Various fixes to unit tests,13,[],https://github.com/endlessm/eos-updater/pull/211,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/211,https://phabricator.endlessm.com/T22873,https://phabricator.endlessm.com/T22873,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,211,2018-06-06T12:22:18Z,2018-06-11T16:56:52Z,2018-06-11T16:56:57Z,MERGED,True,339,89,15,https://github.com/pwithnall,T22873 Various fixes to unit tests,13,[],https://github.com/endlessm/eos-updater/pull/211,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/211#issuecomment-395486066,https://phabricator.endlessm.com/T22873,"Jenkins failure:
# eos-updater-tests-DEBUG: Trying to cancel state Ready
# eos-updater-tests-DEBUG: Error cancelling Ready: GDBus.Error:com.endlessm.Updater.Error.WrongState: Can't call Cancel() while in state Ready (nothing to be cancelled)
# eos-updater-tests-DEBUG: State changed Ready
# eos-updater-tests-DEBUG: Trying to cancel state Polling
# eos-updater-tests-DEBUG: Cancelled state Polling
# eos-updater-tests-DEBUG: Trying to cancel state Error
# eos-updater-tests-DEBUG: Error cancelling Error: GDBus.Error:com.endlessm.Updater.Error.WrongState: Can't call Cancel() while in state Error (nothing to be cancelled)
# eos-updater-tests-DEBUG: State changed Error
# eos-updater-tests-DEBUG: Error name: com.endlessm.Updater.Error.Cancelled
# eos-updater-tests-DEBUG: Error message: Operation was cancelled
# eos-updater-tests-DEBUG: State changed Polling
# eos-updater-tests-DEBUG: Trying to cancel state None
# eos-updater-tests-DEBUG: Error cancelling None: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name com.endlessm.Updater was not provided by any .service files
# eos-updater-tests-DEBUG: State changed None
# eos-updater-tests:ERROR:../../../tests/test-update-direct.c:293:test_cancel_update: 'timed_out' should be FALSE

The # eos-updater-tests-DEBUG: Error cancelling None: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name com.endlessm.Updater was not provided by any .service files line is quite suspicious. I suspect it means that eos-updater crashed.
Probably because of the combination of G_DEBUG=fatal-warnings and this critical warning:
(/build/src/eos-updater_1.3.0~rc3+dev1051.2c0b4be/_build/sub/eos-updater/.libs/eos-updater:29780): EosMetrics-CRITICAL **: Unable to connect to the D-Bus event recorder server: Could not connect: No such file or directory

I suspect this is something I haven’t seen locally because the D-Bus setup on my local machine and on Jenkins differs. I’ll come up with something to silence this critical.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,211,2018-06-06T12:22:18Z,2018-06-11T16:56:52Z,2018-06-11T16:56:57Z,MERGED,True,339,89,15,https://github.com/pwithnall,T22873 Various fixes to unit tests,13,[],https://github.com/endlessm/eos-updater/pull/211,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/211#issuecomment-395504103,https://phabricator.endlessm.com/T22873,"Pushed another commit which fixes the metrics problem. The test failure now is:
ERROR: test-update-broken-delta - too few tests run (expected 1, got 0)

That’s expected — it’s because the OSTree changes aren’t available in OBS yet.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,211,2018-06-06T12:22:18Z,2018-06-11T16:56:52Z,2018-06-11T16:56:57Z,MERGED,True,339,89,15,https://github.com/pwithnall,T22873 Various fixes to unit tests,13,[],https://github.com/endlessm/eos-updater/pull/211,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/211#issuecomment-395504355,https://phabricator.endlessm.com/T22873,"So this can’t be merged until the OSTree changes are in. Also, it needs autosquashing before merging.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,211,2018-06-06T12:22:18Z,2018-06-11T16:56:52Z,2018-06-11T16:56:57Z,MERGED,True,339,89,15,https://github.com/pwithnall,T22873 Various fixes to unit tests,13,[],https://github.com/endlessm/eos-updater/pull/211,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/211#issuecomment-396295868,https://phabricator.endlessm.com/T22873,"bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,211,2018-06-06T12:22:18Z,2018-06-11T16:56:52Z,2018-06-11T16:56:57Z,MERGED,True,339,89,15,https://github.com/pwithnall,T22873 Various fixes to unit tests,13,[],https://github.com/endlessm/eos-updater/pull/211,https://github.com/pwithnall,6,https://github.com/endlessm/eos-updater/pull/211#issuecomment-396302693,https://phabricator.endlessm.com/T22873,"The tests passed, but there was a merge conflict due to recent changes on master. I’ve rebased (the conflict was trivial) and will wait for Jenkins to pass again before merging.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,212,2018-06-06T13:34:41Z,2018-06-15T13:43:01Z,2018-06-15T13:43:01Z,CLOSED,False,20,4,2,https://github.com/pwithnall,T22763 Prune before fetch,2,[],https://github.com/endlessm/eos-updater/pull/212,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/212,"https://phabricator.endlessm.com/T22763
This should not be merged, as it has not been tested yet. Let’s see what Jenkins says, and we probably want to do some manual testing in a VM too before merging. Ready for code review though.","https://phabricator.endlessm.com/T22763
This should not be merged, as it has not been tested yet. Let’s see what Jenkins says, and we probably want to do some manual testing in a VM too before merging. Ready for code review though.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,212,2018-06-06T13:34:41Z,2018-06-15T13:43:01Z,2018-06-15T13:43:01Z,CLOSED,False,20,4,2,https://github.com/pwithnall,T22763 Prune before fetch,2,[],https://github.com/endlessm/eos-updater/pull/212,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/212#issuecomment-397624041,"https://phabricator.endlessm.com/T22763
This should not be merged, as it has not been tested yet. Let’s see what Jenkins says, and we probably want to do some manual testing in a VM too before merging. Ready for code review though.","Closed (without prejudice) as per https://phabricator.endlessm.com/T22763#598482. We might want to look at this again in future, but only as part of a larger, more coherent plan for making updates succeed on low disk space systems.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,213,2018-06-07T23:36:35Z,2018-06-08T00:46:19Z,2018-06-08T00:46:23Z,CLOSED,False,114,22,11,https://github.com/mwleeds,Some commits from T21756,8,[],https://github.com/endlessm/eos-updater/pull/213,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/213,I'm experimenting to see how the CI does with a subset of the commits in #188 to narrow down the problem.,I'm experimenting to see how the CI does with a subset of the commits in #188 to narrow down the problem.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,214,2018-06-08T17:24:44Z,2018-06-14T13:08:51Z,2018-06-14T13:08:58Z,MERGED,True,431,236,21,https://github.com/pwithnall,T22805: eos-updater: Allow upgrades even if the current commit is missing,7,[],https://github.com/endlessm/eos-updater/pull/214,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/214,"https://phabricator.endlessm.com/T22805
Rebased and ready for full review and merging.","https://phabricator.endlessm.com/T22805
Rebased and ready for full review and merging.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,214,2018-06-08T17:24:44Z,2018-06-14T13:08:51Z,2018-06-14T13:08:58Z,MERGED,True,431,236,21,https://github.com/pwithnall,T22805: eos-updater: Allow upgrades even if the current commit is missing,7,[],https://github.com/endlessm/eos-updater/pull/214,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/214#issuecomment-396314259,"https://phabricator.endlessm.com/T22805
Rebased and ready for full review and merging.","Now that T22873 has been merged, I’ve rebased this and it’s ready for a second round of review and merging to master.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,214,2018-06-08T17:24:44Z,2018-06-14T13:08:51Z,2018-06-14T13:08:58Z,MERGED,True,431,236,21,https://github.com/pwithnall,T22805: eos-updater: Allow upgrades even if the current commit is missing,7,[],https://github.com/endlessm/eos-updater/pull/214,https://github.com/eos-shell-build,3,https://github.com/endlessm/eos-updater/pull/214#issuecomment-396318246,"https://phabricator.endlessm.com/T22805
Rebased and ready for full review and merging.",Build finished.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,215,2018-06-08T23:48:12Z,2018-06-11T16:03:26Z,2018-06-11T16:03:31Z,MERGED,True,6,6,1,https://github.com/mwleeds,eupv: Update the summary file before calling create-usb,1,[],https://github.com/endlessm/eos-updater/pull/215,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/215,"The ostree create-usb command requires an updated summary file to
function properly; see its man page.
https://phabricator.endlessm.com/T22895","The ostree create-usb command requires an updated summary file to
function properly; see its man page.
https://phabricator.endlessm.com/T22895",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,216,2018-06-11T14:40:52Z,2018-06-19T12:43:30Z,2018-06-19T12:43:30Z,CLOSED,False,365,99,13,https://github.com/pwithnall,T22805: eos-updater: Allow upgrades even if the current commit is missing (eos3.3 backport),6,[],https://github.com/endlessm/eos-updater/pull/216,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/216,"This is a backport of #214 to the eos3.3 branch. It does not depend on #211 (unlike #214), and has a few minor changes to make it build properly on eos3.3. These are noted in the commit messages.","This is a backport of #214 to the eos3.3 branch. It does not depend on #211 (unlike #214), and has a few minor changes to make it build properly on eos3.3. These are noted in the commit messages.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,216,2018-06-11T14:40:52Z,2018-06-19T12:43:30Z,2018-06-19T12:43:30Z,CLOSED,False,365,99,13,https://github.com/pwithnall,T22805: eos-updater: Allow upgrades even if the current commit is missing (eos3.3 backport),6,[],https://github.com/endlessm/eos-updater/pull/216,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/216#issuecomment-398385278,"This is a backport of #214 to the eos3.3 branch. It does not depend on #211 (unlike #214), and has a few minor changes to make it build properly on eos3.3. These are noted in the commit messages.",Closing as per this comment — we’re not doing another eos3.3 release.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,217,2018-06-12T02:40:09Z,2018-06-12T11:26:53Z,2018-06-12T13:15:40Z,MERGED,True,8,2,1,https://github.com/mwleeds,poll: Fix an assertion failure on the fallback code path,1,[],https://github.com/endlessm/eos-updater/pull/217,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/217,"In metadata_fetch_internal(), there are two code paths for getting
metadata, a ""new"" one that supports pulling from peer sources, and a
fallback one that only fetches from the Internet. On the fallback code
path, we are passing to run_fetchers() only one fetcher but the complete
configured list of sources. Since the fallback path is supposed to only
be used for fetching from the Internet, we should only pass that source
to run_fetchers(). This commit does that, which avoids an assertion
failure from the line ""g_return_val_if_fail (fetchers->len ==
sources->len, NULL);"".","In metadata_fetch_internal(), there are two code paths for getting
metadata, a ""new"" one that supports pulling from peer sources, and a
fallback one that only fetches from the Internet. On the fallback code
path, we are passing to run_fetchers() only one fetcher but the complete
configured list of sources. Since the fallback path is supposed to only
be used for fetching from the Internet, we should only pass that source
to run_fetchers(). This commit does that, which avoids an assertion
failure from the line ""g_return_val_if_fail (fetchers->len ==
sources->len, NULL);"".",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,217,2018-06-12T02:40:09Z,2018-06-12T11:26:53Z,2018-06-12T13:15:40Z,MERGED,True,8,2,1,https://github.com/mwleeds,poll: Fix an assertion failure on the fallback code path,1,[],https://github.com/endlessm/eos-updater/pull/217,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/217#issuecomment-396558703,"In metadata_fetch_internal(), there are two code paths for getting
metadata, a ""new"" one that supports pulling from peer sources, and a
fallback one that only fetches from the Internet. On the fallback code
path, we are passing to run_fetchers() only one fetcher but the complete
configured list of sources. Since the fallback path is supposed to only
be used for fetching from the Internet, we should only pass that source
to run_fetchers(). This commit does that, which avoids an assertion
failure from the line ""g_return_val_if_fail (fetchers->len ==
sources->len, NULL);"".","Cherry picked to eos3.4 and eos3.3. The eos3.4 build failed, but it seems to be unrelated. I’m investigating.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,217,2018-06-12T02:40:09Z,2018-06-12T11:26:53Z,2018-06-12T13:15:40Z,MERGED,True,8,2,1,https://github.com/mwleeds,poll: Fix an assertion failure on the fallback code path,1,[],https://github.com/endlessm/eos-updater/pull/217,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/217#issuecomment-396585039,"In metadata_fetch_internal(), there are two code paths for getting
metadata, a ""new"" one that supports pulling from peer sources, and a
fallback one that only fetches from the Internet. On the fallback code
path, we are passing to run_fetchers() only one fetcher but the complete
configured list of sources. Since the fallback path is supposed to only
be used for fetching from the Internet, we should only pass that source
to run_fetchers(). This commit does that, which avoids an assertion
failure from the line ""g_return_val_if_fail (fetchers->len ==
sources->len, NULL);"".",Seems it was a transient failure: retrying the eos3.4 build succeeded. The eos3.3 build succeeded first time round.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,218,2018-06-12T17:03:39Z,2018-06-12T20:38:29Z,2018-06-12T20:38:43Z,MERGED,True,8,0,1,https://github.com/mwleeds,test-common: Set LD_LIBRARY_PATH when running e-u-p-v,1,[],https://github.com/endlessm/eos-updater/pull/218,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/218,"Currently the ARM OBS build is failing with the message:
(process:24961): WARNING **: Failed to load shared library
'libeos-updater-util-0.so.0' referenced by the typelib:
libeos-updater-util-0.so.0: cannot open shared object file: No such file
or directory
This commit adds the libeos-updater-util to LD_LIBRARY_PATH so that the
built .so file can be found when running the tests.
https://phabricator.endlessm.com/T21756","Currently the ARM OBS build is failing with the message:
(process:24961): WARNING **: Failed to load shared library
'libeos-updater-util-0.so.0' referenced by the typelib:
libeos-updater-util-0.so.0: cannot open shared object file: No such file
or directory
This commit adds the libeos-updater-util to LD_LIBRARY_PATH so that the
built .so file can be found when running the tests.
https://phabricator.endlessm.com/T21756",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/219,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/219#issuecomment-396993989,,"Review of “poll: Don't leak the OstreeRepoFinderResult array” — Good catch. Did you find this with valgrind, or via inspection?

I didn't use valgrind; I just noticed it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/219#issuecomment-398952119,,The test that's failing on the CI server isn't failing on my machine :/,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/219#issuecomment-399041163,,"The direct failure is a bit of a red herring; the test only fails because eos-updater crashes:
# eos-updater-tests-DEBUG: Trying to cancel state None
# eos-updater-tests-DEBUG: Error cancelling None: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name com.endlessm.Updater was not provided by any .service files
# eos-updater-tests-DEBUG: State changed None
# eos-updater-tests:ERROR:../../../tests/test-update-direct.c:278:test_cancel_update: 'timed_out' should be FALSE

The crash is higher up in the log:
eos-updater-dbus-Message: Changing to error state: com.endlessm.Updater.Error.Cancelled, 19, Operation was cancelled
eos-updater-dbus-Message: Clearing error state and changing to state Polling
eos-updater-Message: Using product branch REF

(/build/src/eos-updater_1.3.0~rc3+dev1097.37bf036/_build/sub/eos-updater/.libs/eos-updater:7990): OSTree-CRITICAL **: ostree_repo_prepare_transaction: assertion 'self->in_transaction == FALSE' failed

This looks very similar to something I fixed recently in OSTree. The fix was merged into endlessm/ostree.git 20 hours ago, and this Jenkins run was 8 hours ago, so it’s likely the fix is incomplete, erroneous, or perhaps not actually relevant.
The fact that the test cancels various eos-updater states and then tries again means that the likely mechanism for hitting the OSTree assertion failure is that a pull transaction was started, cancelled, and then another transaction was attempted to be started (but self->in_transaction was still TRUE). So I’d be looking for places in the OSTree code where it could be possible to cancel a pull but (accidentally) not abort the transaction as well.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/mwleeds,5,https://github.com/endlessm/eos-updater/pull/219#issuecomment-399239260,,"The fix was merged into endlessm/ostree.git 20 hours ago, and this Jenkins run was 8 hours ago

Indeed, the build log says it's using commit d77e69c of libostree which is the latest commit.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/mwleeds,6,https://github.com/endlessm/eos-updater/pull/219#issuecomment-399251011,,So it appears there's some non-determinism in that unit test failure because it succeeded this time after I added a debug statement. That also means the failure is not necessarily unique to this branch.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/pwithnall,7,https://github.com/endlessm/eos-updater/pull/219#issuecomment-400004719,,"So it appears there's some non-determinism in that unit test failure because it succeeded this time after I added a debug statement. That also means the failure is not necessarily unique to this branch.

Yeah, I’ve just managed to reproduce the failure locally on master (without this branch). I’ve filed https://phabricator.endlessm.com/T23091 about it and will take a look.
I’ll review this branch soon, and will ignore the test failure for it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,219,2018-06-13T05:47:52Z,2018-06-27T16:12:39Z,2018-06-27T16:12:44Z,MERGED,True,479,205,6,https://github.com/mwleeds,T22192,11,[],https://github.com/endlessm/eos-updater/pull/219,https://github.com/pwithnall,8,https://github.com/endlessm/eos-updater/pull/219#issuecomment-400643400,,Looks good to merge once the fixups have been auto-squashed into the branch.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,220,2018-06-20T19:02:17Z,2018-06-20T20:21:51Z,2018-06-20T20:21:53Z,MERGED,True,1,0,1,https://github.com/mwleeds,debian/control: Add eos-updater gir dep for e-u-p-v,1,[],https://github.com/endlessm/eos-updater/pull/220,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/220,"The eos-updater-prepare-volume script now depends on the GObject
introspection bindings for eos-updater, so add a dependency on
gir1.2-eos-updater-0 to the eos-updater-tools package, so the bindings
will be installed into Endless.
https://phabricator.endlessm.com/T22895","The eos-updater-prepare-volume script now depends on the GObject
introspection bindings for eos-updater, so add a dependency on
gir1.2-eos-updater-0 to the eos-updater-tools package, so the bindings
will be installed into Endless.
https://phabricator.endlessm.com/T22895",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,221,2018-06-26T15:04:25Z,2019-03-27T16:19:17Z,2019-03-27T16:19:20Z,MERGED,True,20,15,1,https://github.com/pwithnall,Remove a pointless message spotted by Rob,2,[],https://github.com/endlessm/eos-updater/pull/221,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/221,"There’s no task for this one. Minor and inconsequential fix which doesn’t need backporting.
As spotted in logs https://phabricator.endlessm.com/F25729 and https://phabricator.endlessm.com/F25730.","There’s no task for this one. Minor and inconsequential fix which doesn’t need backporting.
As spotted in logs https://phabricator.endlessm.com/F25729 and https://phabricator.endlessm.com/F25730.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,221,2018-06-26T15:04:25Z,2019-03-27T16:19:17Z,2019-03-27T16:19:20Z,MERGED,True,20,15,1,https://github.com/pwithnall,Remove a pointless message spotted by Rob,2,[],https://github.com/endlessm/eos-updater/pull/221,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/221#issuecomment-477234834,"There’s no task for this one. Minor and inconsequential fix which doesn’t need backporting.
As spotted in logs https://phabricator.endlessm.com/F25729 and https://phabricator.endlessm.com/F25730.",Rebased and Jenkins is happy again now. Merging; thanks for the review.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,222,2018-07-04T18:06:39Z,2018-07-05T09:08:15Z,2018-07-06T08:19:34Z,MERGED,True,7,4,1,https://github.com/ramcq,eos-updater-flatpak-installer.service: loosen sandboxing for bwrap,1,[],https://github.com/endlessm/eos-updater/pull/222,https://github.com/ramcq,1,https://github.com/endlessm/eos-updater/pull/222,"The systemd service sandboxing for the boot-time Flatpak installer prevents the
Flatpak triggers from working correctly, because they are executed via bwrap.
One easily visible consequence is that the mime cache in the flatpak
export/share/applications folder is not updated, meaning that documents are not
associated with a newly-installed LibreOffice until an unrelated (and
unconstrained) Flatpak operation happens to re-run the triggers. Add the (sadly
quite broad) permissions necessary to allow bwrap to work correctly.
https://phabricator.endlessm.com/T22900","The systemd service sandboxing for the boot-time Flatpak installer prevents the
Flatpak triggers from working correctly, because they are executed via bwrap.
One easily visible consequence is that the mime cache in the flatpak
export/share/applications folder is not updated, meaning that documents are not
associated with a newly-installed LibreOffice until an unrelated (and
unconstrained) Flatpak operation happens to re-run the triggers. Add the (sadly
quite broad) permissions necessary to allow bwrap to work correctly.
https://phabricator.endlessm.com/T22900",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,222,2018-07-04T18:06:39Z,2018-07-05T09:08:15Z,2018-07-06T08:19:34Z,MERGED,True,7,4,1,https://github.com/ramcq,eos-updater-flatpak-installer.service: loosen sandboxing for bwrap,1,[],https://github.com/endlessm/eos-updater/pull/222,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/222#issuecomment-402589859,"The systemd service sandboxing for the boot-time Flatpak installer prevents the
Flatpak triggers from working correctly, because they are executed via bwrap.
One easily visible consequence is that the mime cache in the flatpak
export/share/applications folder is not updated, meaning that documents are not
associated with a newly-installed LibreOffice until an unrelated (and
unconstrained) Flatpak operation happens to re-run the triggers. Add the (sadly
quite broad) permissions necessary to allow bwrap to work correctly.
https://phabricator.endlessm.com/T22900","I'm ok with this, just had a question re implications for other parts of the stack",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,222,2018-07-04T18:06:39Z,2018-07-05T09:08:15Z,2018-07-06T08:19:34Z,MERGED,True,7,4,1,https://github.com/ramcq,eos-updater-flatpak-installer.service: loosen sandboxing for bwrap,1,[],https://github.com/endlessm/eos-updater/pull/222,https://github.com/ramcq,3,https://github.com/endlessm/eos-updater/pull/222#issuecomment-402658598,"The systemd service sandboxing for the boot-time Flatpak installer prevents the
Flatpak triggers from working correctly, because they are executed via bwrap.
One easily visible consequence is that the mime cache in the flatpak
export/share/applications folder is not updated, meaning that documents are not
associated with a newly-installed LibreOffice until an unrelated (and
unconstrained) Flatpak operation happens to re-run the triggers. Add the (sadly
quite broad) permissions necessary to allow bwrap to work correctly.
https://phabricator.endlessm.com/T22900","Does this also affect flatpaks when they are run? Maybe we need to adjust the companion app too?

Looks like the companion app doesn't use these confinement options: https://github.com/endlessm/eos-companion-app-integration/blob/master/data/eos-companion-app.service",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,222,2018-07-04T18:06:39Z,2018-07-05T09:08:15Z,2018-07-06T08:19:34Z,MERGED,True,7,4,1,https://github.com/ramcq,eos-updater-flatpak-installer.service: loosen sandboxing for bwrap,1,[],https://github.com/endlessm/eos-updater/pull/222,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/222#issuecomment-402894536,"The systemd service sandboxing for the boot-time Flatpak installer prevents the
Flatpak triggers from working correctly, because they are executed via bwrap.
One easily visible consequence is that the mime cache in the flatpak
export/share/applications folder is not updated, meaning that documents are not
associated with a newly-installed LibreOffice until an unrelated (and
unconstrained) Flatpak operation happens to re-run the triggers. Add the (sadly
quite broad) permissions necessary to allow bwrap to work correctly.
https://phabricator.endlessm.com/T22900","Ah, we did remove the sandboxing, as there was something deep in python that did not work with it. Perhaps I should still look into setting 'CapabilityBoundingSet' etc",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,222,2018-07-04T18:06:39Z,2018-07-05T09:08:15Z,2018-07-06T08:19:34Z,MERGED,True,7,4,1,https://github.com/ramcq,eos-updater-flatpak-installer.service: loosen sandboxing for bwrap,1,[],https://github.com/endlessm/eos-updater/pull/222,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/222#issuecomment-402962962,"The systemd service sandboxing for the boot-time Flatpak installer prevents the
Flatpak triggers from working correctly, because they are executed via bwrap.
One easily visible consequence is that the mime cache in the flatpak
export/share/applications folder is not updated, meaning that documents are not
associated with a newly-installed LibreOffice until an unrelated (and
unconstrained) Flatpak operation happens to re-run the triggers. Add the (sadly
quite broad) permissions necessary to allow bwrap to work correctly.
https://phabricator.endlessm.com/T22900","Perhaps I should still look into setting 'CapabilityBoundingSet' etc

⇒ https://phabricator.endlessm.com/T23201",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,223,2018-07-19T16:15:10Z,2018-07-25T07:53:25Z,2018-07-25T07:53:30Z,MERGED,True,174,4,2,https://github.com/smspillaz,flatpak: Don't search broken remotes for dependencies,1,[],https://github.com/endlessm/eos-updater/pull/223,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/223,"Instead of erroring out completely, blocking updates, just log
a message indicating that the remote is broken and don't search
it for things like runtimes or related refs. We require things
like summary files to be present on remotes and this will be broken
the moment a user installs a flatpak bundle since those don't have
summaries generated on their remote configuration.
https://phabricator.endlessm.com/T23347","Instead of erroring out completely, blocking updates, just log
a message indicating that the remote is broken and don't search
it for things like runtimes or related refs. We require things
like summary files to be present on remotes and this will be broken
the moment a user installs a flatpak bundle since those don't have
summaries generated on their remote configuration.
https://phabricator.endlessm.com/T23347",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,223,2018-07-19T16:15:10Z,2018-07-25T07:53:25Z,2018-07-25T07:53:30Z,MERGED,True,174,4,2,https://github.com/smspillaz,flatpak: Don't search broken remotes for dependencies,1,[],https://github.com/endlessm/eos-updater/pull/223,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/223#issuecomment-407562842,"Instead of erroring out completely, blocking updates, just log
a message indicating that the remote is broken and don't search
it for things like runtimes or related refs. We require things
like summary files to be present on remotes and this will be broken
the moment a user installs a flatpak bundle since those don't have
summaries generated on their remote configuration.
https://phabricator.endlessm.com/T23347",I rebased this on the latest master,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,224,2018-07-23T22:50:21Z,2018-07-25T20:09:11Z,2018-07-25T20:09:15Z,MERGED,True,24,97,1,https://github.com/mwleeds,eupv: Port to using flatpak create-usb,2,[],https://github.com/endlessm/eos-updater/pull/224,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/224,"Now that we have a flatpak create-usb tool that takes care of copying
flatpaks to USBs along with their dependencies, related refs, repo
metadata, etc. there's no reason for eos-updater-prepare-volume to try
to emulate that work. So this commit changes the syntax accepted by
e-u-p-v so that it's just flatpak refs (flatpak will figure out the
collection IDs on its own) and calls out to flatpak create-usb after
using ostree create-usb to copy the OS ref.
https://phabricator.endlessm.com/T23118","Now that we have a flatpak create-usb tool that takes care of copying
flatpaks to USBs along with their dependencies, related refs, repo
metadata, etc. there's no reason for eos-updater-prepare-volume to try
to emulate that work. So this commit changes the syntax accepted by
e-u-p-v so that it's just flatpak refs (flatpak will figure out the
collection IDs on its own) and calls out to flatpak create-usb after
using ostree create-usb to copy the OS ref.
https://phabricator.endlessm.com/T23118",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,224,2018-07-23T22:50:21Z,2018-07-25T20:09:11Z,2018-07-25T20:09:15Z,MERGED,True,24,97,1,https://github.com/mwleeds,eupv: Port to using flatpak create-usb,2,[],https://github.com/endlessm/eos-updater/pull/224,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/224#issuecomment-407225631,"Now that we have a flatpak create-usb tool that takes care of copying
flatpaks to USBs along with their dependencies, related refs, repo
metadata, etc. there's no reason for eos-updater-prepare-volume to try
to emulate that work. So this commit changes the syntax accepted by
e-u-p-v so that it's just flatpak refs (flatpak will figure out the
collection IDs on its own) and calls out to flatpak create-usb after
using ostree create-usb to copy the OS ref.
https://phabricator.endlessm.com/T23118","I haven't been able to test this yet because of the build error:
./configure: line 12890: syntax error near unexpected token `git-directory'
./configure: line 12890: `AX_IS_RELEASE(git-directory)'",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,224,2018-07-23T22:50:21Z,2018-07-25T20:09:11Z,2018-07-25T20:09:15Z,MERGED,True,24,97,1,https://github.com/mwleeds,eupv: Port to using flatpak create-usb,2,[],https://github.com/endlessm/eos-updater/pull/224,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/224#issuecomment-407549895,"Now that we have a flatpak create-usb tool that takes care of copying
flatpaks to USBs along with their dependencies, related refs, repo
metadata, etc. there's no reason for eos-updater-prepare-volume to try
to emulate that work. So this commit changes the syntax accepted by
e-u-p-v so that it's just flatpak refs (flatpak will figure out the
collection IDs on its own) and calls out to flatpak create-usb after
using ostree create-usb to copy the OS ref.
https://phabricator.endlessm.com/T23118","I haven't been able to test this yet because of the build error:
./configure: line 12890: syntax error near unexpected token git-directory' ./configure: line 12890: AX_IS_RELEASE(git-directory)'

For the record this was fixed by installing autoconf-archive. Now this is blocked on the broken eos-updater build which is preventing testing this (fixed in #225).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,224,2018-07-23T22:50:21Z,2018-07-25T20:09:11Z,2018-07-25T20:09:15Z,MERGED,True,24,97,1,https://github.com/mwleeds,eupv: Port to using flatpak create-usb,2,[],https://github.com/endlessm/eos-updater/pull/224,https://github.com/treitter,4,https://github.com/endlessm/eos-updater/pull/224#issuecomment-407858818,"Now that we have a flatpak create-usb tool that takes care of copying
flatpaks to USBs along with their dependencies, related refs, repo
metadata, etc. there's no reason for eos-updater-prepare-volume to try
to emulate that work. So this commit changes the syntax accepted by
e-u-p-v so that it's just flatpak refs (flatpak will figure out the
collection IDs on its own) and calls out to flatpak create-usb after
using ostree create-usb to copy the OS ref.
https://phabricator.endlessm.com/T23118","@mwleeds based on the Jenkins output, it looks like two test cases need to be updated to pass the ref(s) to flatpak create-usb. Currently, only --system and the mount point is being passed.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,225,2018-07-24T20:09:05Z,2018-07-24T20:53:54Z,2018-07-24T20:53:57Z,MERGED,True,2,0,1,https://github.com/mwleeds,test-common: Use the flatpak --asumeyes option,1,[],https://github.com/endlessm/eos-updater/pull/225,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/225,"Recent verisons of flatpak prompt the user for confirmation during
install/update/uninstall operations. So when the eos-updater unit tests
try to install the test runtime, there's an ""Is this ok? [y/n]:""
prompt, and no is assumed since there's no user input, which eventually
leads to a unit test failure.
So this commit adds the --asumeyes option when the tests call out to
flatpak install or flatpak uninstall, which is meant for the purpose
of scripting and answers yes to questions (or the default option if it's
multiple choice).
https://phabricator.endlessm.com/T23138","Recent verisons of flatpak prompt the user for confirmation during
install/update/uninstall operations. So when the eos-updater unit tests
try to install the test runtime, there's an ""Is this ok? [y/n]:""
prompt, and no is assumed since there's no user input, which eventually
leads to a unit test failure.
So this commit adds the --asumeyes option when the tests call out to
flatpak install or flatpak uninstall, which is meant for the purpose
of scripting and answers yes to questions (or the default option if it's
multiple choice).
https://phabricator.endlessm.com/T23138",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,225,2018-07-24T20:09:05Z,2018-07-24T20:53:54Z,2018-07-24T20:53:57Z,MERGED,True,2,0,1,https://github.com/mwleeds,test-common: Use the flatpak --asumeyes option,1,[],https://github.com/endlessm/eos-updater/pull/225,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/225#issuecomment-407548506,"Recent verisons of flatpak prompt the user for confirmation during
install/update/uninstall operations. So when the eos-updater unit tests
try to install the test runtime, there's an ""Is this ok? [y/n]:""
prompt, and no is assumed since there's no user input, which eventually
leads to a unit test failure.
So this commit adds the --asumeyes option when the tests call out to
flatpak install or flatpak uninstall, which is meant for the purpose
of scripting and answers yes to questions (or the default option if it's
multiple choice).
https://phabricator.endlessm.com/T23138",Seems like Will reviewed this so I'll merge it,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,226,2018-07-25T08:50:11Z,2018-07-27T01:05:41Z,2018-07-30T11:11:16Z,CLOSED,False,168,3,3,https://github.com/smspillaz,T23347: Drop old refspec and prune after following checkpoint,4,[],https://github.com/endlessm/eos-updater/pull/226,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/226,https://phabricator.endlessm.com/T23385,https://phabricator.endlessm.com/T23385,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,226,2018-07-25T08:50:11Z,2018-07-27T01:05:41Z,2018-07-30T11:11:16Z,CLOSED,False,168,3,3,https://github.com/smspillaz,T23347: Drop old refspec and prune after following checkpoint,4,[],https://github.com/endlessm/eos-updater/pull/226,https://github.com/ramcq,2,https://github.com/endlessm/eos-updater/pull/226#issuecomment-408156954,https://phabricator.endlessm.com/T23385,"I've had a quick look, I don't quite understand how the test is proving that the old ref gets pruned. Might just be being thick though. I think the prune commit can be dropped because ostree_sysroot_cleanup calls a prune for us.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,226,2018-07-25T08:50:11Z,2018-07-27T01:05:41Z,2018-07-30T11:11:16Z,CLOSED,False,168,3,3,https://github.com/smspillaz,T23347: Drop old refspec and prune after following checkpoint,4,[],https://github.com/endlessm/eos-updater/pull/226,https://github.com/smspillaz,3,https://github.com/endlessm/eos-updater/pull/226#issuecomment-408279975,https://phabricator.endlessm.com/T23385,"@ramcq you are probably most interested in https://github.com/endlessm/eos-updater/pull/226/files#diff-0140425ccfb636a439827974f267d1c8R358
+  ostree_repo_list_refs (repo, NULL, &refs, NULL, &error);
+  g_assert_no_error (error);
+
+  has_original_ref = g_hash_table_contains (refs, ""REMOTE:REF"");
+  has_new_ref = g_hash_table_contains (refs, ""REMOTE:REFv2"");
+
+  g_assert_true (has_new_ref);
+  g_assert_false (has_original_ref);

REMOTE:REF is the booted refspec, REMOTE:REFv2 is the checkpoint refspec. After updating from the checkpoint, we should only retain the latter, not the former.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,226,2018-07-25T08:50:11Z,2018-07-27T01:05:41Z,2018-07-30T11:11:16Z,CLOSED,False,168,3,3,https://github.com/smspillaz,T23347: Drop old refspec and prune after following checkpoint,4,[],https://github.com/endlessm/eos-updater/pull/226,https://github.com/smspillaz,4,https://github.com/endlessm/eos-updater/pull/226#issuecomment-408280310,https://phabricator.endlessm.com/T23385,"Considering that I pushed this to the wrong branch, continuing in #227",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,227,2018-07-27T01:05:12Z,2018-07-27T10:52:24Z,2018-07-27T10:52:27Z,MERGED,True,133,3,2,https://github.com/smspillaz,T23385: Drop old refspec and prune after following checkpoint,3,[],https://github.com/endlessm/eos-updater/pull/227,https://github.com/smspillaz,1,https://github.com/endlessm/eos-updater/pull/227,https://phabricator.endlessm.com/T23385,https://phabricator.endlessm.com/T23385,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,227,2018-07-27T01:05:12Z,2018-07-27T10:52:24Z,2018-07-27T10:52:27Z,MERGED,True,133,3,2,https://github.com/smspillaz,T23385: Drop old refspec and prune after following checkpoint,3,[],https://github.com/endlessm/eos-updater/pull/227,https://github.com/smspillaz,2,https://github.com/endlessm/eos-updater/pull/227#issuecomment-408280280,https://phabricator.endlessm.com/T23385,"This is the continuation of #226 , which was pushed to the wrong branch.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,228,2018-07-27T02:40:43Z,2018-07-27T03:39:39Z,2018-07-27T05:12:47Z,MERGED,True,1,1,1,https://github.com/mwleeds,eufi: Fix a mistake in the docs,1,[],https://github.com/endlessm/eos-updater/pull/228,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/228,The /var/lib/... directory is mentioned twice and /etc/ is left out.,The /var/lib/... directory is mentioned twice and /etc/ is left out.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,229,2018-07-27T04:23:51Z,2018-07-27T23:53:04Z,2018-07-30T08:46:48Z,MERGED,True,5,2,1,https://github.com/mwleeds,eupv: Exclude apps that are installed then uninstalled,1,[],https://github.com/endlessm/eos-updater/pull/229,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/229,"Currently eos-updater-prepare-volume looks at the flatpak autoinstall
lists and simply includes all the ones that are set to be installed or
updated and none of the ones set to be uninstalled. But some apps such
as com.endlessm.CompanionAppService//eos3 have an install action and a
later uninstall action. So currently eos-updater-prepare-volume tries to
include that app on a USB, which fails since it's not installed. So this
commit fixes e-u-p-v so that for each uninstall action, it removes any
previous install/update actions in the set with the same ID.
https://phabricator.endlessm.com/T21756","Currently eos-updater-prepare-volume looks at the flatpak autoinstall
lists and simply includes all the ones that are set to be installed or
updated and none of the ones set to be uninstalled. But some apps such
as com.endlessm.CompanionAppService//eos3 have an install action and a
later uninstall action. So currently eos-updater-prepare-volume tries to
include that app on a USB, which fails since it's not installed. So this
commit fixes e-u-p-v so that for each uninstall action, it removes any
previous install/update actions in the set with the same ID.
https://phabricator.endlessm.com/T21756",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,230,2018-07-30T22:51:51Z,2018-08-01T09:29:10Z,2018-08-01T09:29:14Z,MERGED,True,48,14,3,https://github.com/mwleeds,Follow-up from #229,3,[],https://github.com/endlessm/eos-updater/pull/230,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/230,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,230,2018-07-30T22:51:51Z,2018-08-01T09:29:10Z,2018-08-01T09:29:14Z,MERGED,True,48,14,3,https://github.com/mwleeds,Follow-up from #229,3,[],https://github.com/endlessm/eos-updater/pull/230,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/230#issuecomment-409180549,,"if you try to pass that to the second function that expects a GHashTable you get an error

What was the error? IIRC pygobject should always be able to transparently convert a dict to a GHashTable. Is it a problem with the boxed types within the hash table?
This all looks good to me, but ideally it should be possible to do without adding new API.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,230,2018-07-30T22:51:51Z,2018-08-01T09:29:10Z,2018-08-01T09:29:14Z,MERGED,True,48,14,3,https://github.com/mwleeds,Follow-up from #229,3,[],https://github.com/endlessm/eos-updater/pull/230,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/230#issuecomment-409299472,,"What was the error?

ValueError: Item 0: Pointer arguments are restricted to integers, capsules, and None. See: https://bugzilla.gnome.org/show_bug.cgi?id=683599",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,230,2018-07-30T22:51:51Z,2018-08-01T09:29:10Z,2018-08-01T09:29:14Z,MERGED,True,48,14,3,https://github.com/mwleeds,Follow-up from #229,3,[],https://github.com/endlessm/eos-updater/pull/230,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/230#issuecomment-409513000,,"I guess it’s because of the nested generics in @ref_actions_table: (element-type filename GPtrArray<EuuFlatpakRemoteRefAction>) :'-(
Guess we have to go with the wrapper API. Thanks for sorting this out.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,231,2018-08-08T04:03:55Z,2018-08-08T08:16:21Z,2018-08-08T08:16:26Z,MERGED,True,1,1,1,https://github.com/mwleeds,libeuu: Fix a gtk-doc annotation,1,[],https://github.com/endlessm/eos-updater/pull/231,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/231,"This commit fixes the gtk-doc annotation on the new function
euu_flattened_flatpak_ref_actions_from_paths() so it gets the
element-type correct and specifies (transfer container) instead of
(transfer full). With transfer full, the elements are freed too many
times, because Python tries to free them after freeing the pointer array
(which itself frees them).
This prevents a seg fault when running eos-updater-prepare-volume.
https://phabricator.endlessm.com/T21756","This commit fixes the gtk-doc annotation on the new function
euu_flattened_flatpak_ref_actions_from_paths() so it gets the
element-type correct and specifies (transfer container) instead of
(transfer full). With transfer full, the elements are freed too many
times, because Python tries to free them after freeing the pointer array
(which itself frees them).
This prevents a seg fault when running eos-updater-prepare-volume.
https://phabricator.endlessm.com/T21756",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,232,2018-09-03T13:58:17Z,2018-09-03T15:04:26Z,2018-09-03T15:04:29Z,MERGED,True,1,0,1,https://github.com/ramcq,eos-updater: set IO class to idle,1,[],https://github.com/endlessm/eos-updater/pull/232,https://github.com/ramcq,1,https://github.com/endlessm/eos-updater/pull/232,"Our benchmarks show this significantly reduces the interactivity impact of
ongoing ostree operations while the user is continuing other tasks on the
system. The effect is very pronounced with the default CFQ scheduler, and in
combination with BFQ, using the idle class improves the worst case to nearly
the same as an unloaded system.
https://phabricator.endlessm.com/T22479","Our benchmarks show this significantly reduces the interactivity impact of
ongoing ostree operations while the user is continuing other tasks on the
system. The effect is very pronounced with the default CFQ scheduler, and in
combination with BFQ, using the idle class improves the worst case to nearly
the same as an unloaded system.
https://phabricator.endlessm.com/T22479",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,233,2018-09-17T20:54:25Z,2018-09-18T15:53:28Z,2018-09-18T15:54:12Z,MERGED,True,1,1,1,https://github.com/mwleeds,eos-updater.conf: Check USB drives for updates,1,[],https://github.com/endlessm/eos-updater/pull/233,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/233,"This commit changes the default eos-updater.conf so that eos-updater
checks USB drives (technically mounted filesystems) for OS updates in
addition to checking the Internet. The USB OS update feature seems to be
in fairly good shape and it's slated for release in 3.4.8. Previously
we've been using a hook in the image builder to change eos-updater.conf
for testing LAN/USB updates, but now that we're ready to deploy them it
makes sense to make the change here.
This commit alone doesn't enable USB OS updates. The other requirement
is for the eos remote to have a collection ID configured on it, which
we will be doing in the image builder for non-OEM images (and eventually
for all images and in an update for existing users as well).
https://phabricator.endlessm.com/T23413","This commit changes the default eos-updater.conf so that eos-updater
checks USB drives (technically mounted filesystems) for OS updates in
addition to checking the Internet. The USB OS update feature seems to be
in fairly good shape and it's slated for release in 3.4.8. Previously
we've been using a hook in the image builder to change eos-updater.conf
for testing LAN/USB updates, but now that we're ready to deploy them it
makes sense to make the change here.
This commit alone doesn't enable USB OS updates. The other requirement
is for the eos remote to have a collection ID configured on it, which
we will be doing in the image builder for non-OEM images (and eventually
for all images and in an update for existing users as well).
https://phabricator.endlessm.com/T23413",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,233,2018-09-17T20:54:25Z,2018-09-18T15:53:28Z,2018-09-18T15:54:12Z,MERGED,True,1,1,1,https://github.com/mwleeds,eos-updater.conf: Check USB drives for updates,1,[],https://github.com/endlessm/eos-updater/pull/233,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/233#issuecomment-422449167,"This commit changes the default eos-updater.conf so that eos-updater
checks USB drives (technically mounted filesystems) for OS updates in
addition to checking the Internet. The USB OS update feature seems to be
in fairly good shape and it's slated for release in 3.4.8. Previously
we've been using a hook in the image builder to change eos-updater.conf
for testing LAN/USB updates, but now that we're ready to deploy them it
makes sense to make the change here.
This commit alone doesn't enable USB OS updates. The other requirement
is for the eos remote to have a collection ID configured on it, which
we will be doing in the image builder for non-OEM images (and eventually
for all images and in an update for existing users as well).
https://phabricator.endlessm.com/T23413",The hook in the image builder could now presumably be deleted.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,234,2018-09-18T22:55:11Z,2018-09-26T17:41:08Z,2018-09-26T17:41:11Z,MERGED,True,117,3,2,https://github.com/mwleeds,apply: Add a collection ID to the OS remote config,1,[],https://github.com/endlessm/eos-updater/pull/234,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/234,"This commit makes eos-updater add a collection ID to the OS remote
config during the apply stage, in a similar way that the ""branches""
config key is currently added. This has the effect of enabling LAN/USB
OS updates when the eos-updater config file has those sources enabled.
After the next checkpoint this patch can be dropped, because at that
point every user's config will have been updated.
https://phabricator.endlessm.com/T19363","This commit makes eos-updater add a collection ID to the OS remote
config during the apply stage, in a similar way that the ""branches""
config key is currently added. This has the effect of enabling LAN/USB
OS updates when the eos-updater config file has those sources enabled.
After the next checkpoint this patch can be dropped, because at that
point every user's config will have been updated.
https://phabricator.endlessm.com/T19363",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,234,2018-09-18T22:55:11Z,2018-09-26T17:41:08Z,2018-09-26T17:41:11Z,MERGED,True,117,3,2,https://github.com/mwleeds,apply: Add a collection ID to the OS remote config,1,[],https://github.com/endlessm/eos-updater/pull/234,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/234#issuecomment-422586684,"This commit makes eos-updater add a collection ID to the OS remote
config during the apply stage, in a similar way that the ""branches""
config key is currently added. This has the effect of enabling LAN/USB
OS updates when the eos-updater config file has those sources enabled.
After the next checkpoint this patch can be dropped, because at that
point every user's config will have been updated.
https://phabricator.endlessm.com/T19363","Hmm, just realized this will add a collection ID in the update after 3.4.8, e.g. 3.5.0, because the updater doing the 3.4.8 update doesn't have this patch.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,234,2018-09-18T22:55:11Z,2018-09-26T17:41:08Z,2018-09-26T17:41:11Z,MERGED,True,117,3,2,https://github.com/mwleeds,apply: Add a collection ID to the OS remote config,1,[],https://github.com/endlessm/eos-updater/pull/234,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/234#issuecomment-422899653,"This commit makes eos-updater add a collection ID to the OS remote
config during the apply stage, in a similar way that the ""branches""
config key is currently added. This has the effect of enabling LAN/USB
OS updates when the eos-updater config file has those sources enabled.
After the next checkpoint this patch can be dropped, because at that
point every user's config will have been updated.
https://phabricator.endlessm.com/T19363","Hmm, just realized this will add a collection ID in the update after 3.4.8, e.g. 3.5.0, because the updater doing the 3.4.8 update doesn't have this patch.

But I don't think this is a reason not to merge this patch. Enabling USB OS updates for reflashes in one release and for upgrade users in the next means they'll get more testing",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,235,2018-09-22T00:15:34Z,2018-09-25T15:19:49Z,2018-09-25T15:19:53Z,MERGED,True,2,0,1,https://github.com/mwleeds,T23391,1,[],https://github.com/endlessm/eos-updater/pull/235,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/235,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,235,2018-09-22T00:15:34Z,2018-09-25T15:19:49Z,2018-09-25T15:19:53Z,MERGED,True,2,0,1,https://github.com/mwleeds,T23391,1,[],https://github.com/endlessm/eos-updater/pull/235,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/235#issuecomment-423701756,,This is made possible by flatpak/flatpak#2124 and ostreedev/ostree#1733,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,236,2018-09-24T23:26:51Z,2018-09-25T15:34:48Z,2018-09-25T15:35:17Z,MERGED,True,14,5,1,https://github.com/mwleeds,T23851,3,[],https://github.com/endlessm/eos-updater/pull/236,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/236,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,236,2018-09-24T23:26:51Z,2018-09-25T15:34:48Z,2018-09-25T15:35:17Z,MERGED,True,14,5,1,https://github.com/mwleeds,T23851,3,[],https://github.com/endlessm/eos-updater/pull/236,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/236#issuecomment-424158190,,This also has a couple commits that fix comments in addition to https://phabricator.endlessm.com/T23851,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,236,2018-09-24T23:26:51Z,2018-09-25T15:34:48Z,2018-09-25T15:35:17Z,MERGED,True,14,5,1,https://github.com/mwleeds,T23851,3,[],https://github.com/endlessm/eos-updater/pull/236,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/236#issuecomment-424392747,,The Jenkins test failure was due to the --commit option not being supported yet due to ostreedev/ostree#1735 not yet being backported. Merged anyway.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/treitter,1,https://github.com/endlessm/eos-updater/pull/237,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425279090,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","The thing that worries me about this approach is that summary generation could still fail in the other places that it happens, like here and here.
Maybe we should instead set a value higher than 30 for core.lock-timeout-secs in the default repo config, or stop whatever process is holding the lock for so long from doing that?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/treitter,3,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425283440,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","I agree that a longer timeout would be preferable to this work-around (especially given it will never terminate if either the summary generation or create-usb fail though making it give up after a timeout or number of tries felt like another arbitrary number to deal with).
But if we do increase the timeout, it will likely have to be much longer (on the order of several minutes) to make the issue very hard to hit. And that carries the risk that we'll just trade this issue for another if we have implicit expectations that the timeout stays close to 30 seconds.
If there is another process holding the lock longer than it ""should"", it'd be good to fix that but we might have a hard time tracking that down and we'd retain the risk that any process that suddenly holds the lock for a longer-than-conventional time could re-trigger this bug.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/ramcq,4,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425397054,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","The most likely holder of the lock is a prune operation, which suggests that the updater has finished deploying a new ostree and is tidying up the previous rollback, or that flatpak has done an install/update and is clearing away stuff.
In the end upstream I think we actually need to split the lock between refs and commits/repo contents. What summary generation/updating/etc needs is a shared reader lock on the refs, which can be shared with a prune operation - the prune needs an exclusive lock on the commits (ie repo content) but just needs the refs to be unchanged - other people can read refs/commits in parallel to the prune. Maybe file an up to
Prunes can take effing ages though, so surely the best way to reduce the chance of the lock contention is to arrange for GNOME Software to suspend the processing of the queue of installs, and maybe even queue the USB creation operation at the head of this queue so it doesn't even start until the current operation has finished.
I also don't think that e-u-p-v can take the lock and inherit it in the summary creation / usb creation unless we add an --inherit-lock or something? Or we make those API rather than scripts, but it's a bit late in the day for that.
Finally... I also don't really like the idea of looping indefinitely. If something is wedged taking the lock, it's better to fail the operation eventually rather than just fall down a well.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/dbnicholson,5,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425409314,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","It would be better to take the lock once at a high level, explicitly, from e-u-p-v itself.

I tried to convince Colin that it would be useful to make the lock APIs public, but he didn't buy it. He might be more open to it now that the locking has been in for a while and has broken everything.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/ramcq,6,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425411247,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","It would be better to take the lock once at a high level, explicitly, from e-u-p-v itself.

I tried to convince Colin that it would be useful to make the lock APIs public, but he didn't buy it. He might be more open to it now that the locking has been in for a while and has broken everything.

Right, but this isn't even API calls, it's separate process invocations - the create USB is just a command, not an API.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/dbnicholson,7,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425413931,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).

I didn't see any description of the error here or in phabricator, so let me make sure I understand what's happening.


ostree summary -u is called in the system repo. This is likely to have contention because it takes an exclusive lock, so anything with a shared (pull) or exclusive (prune) lock is going to block it from happening. When @mwleeds proposed upstream to have summary generation take an exclusive lock (ostreedev/ostree#1681) I didn't envision it being run out of band by random applications. Quite possibly that should be eased to a shared lock. If the locking API was also public and you were paranoid about the repo contents, you could first take an exclusive lock before regenerating the summmary.


ostree create-usb is called to pull from the system repo to the USB repo and then updates the summary on the USB repo. I can't see this failing due to lock contention. Local pulls don't attempt to lock the source repo (although that wouldn't be a bad idea), and I can't see any contention on the USB repo. Are you actually seeing locking errors in ostree create-usb?


Did I understand that correctly?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/dbnicholson,8,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425414403,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","It would be better to take the lock once at a high level, explicitly, from e-u-p-v itself.

I tried to convince Colin that it would be useful to make the lock APIs public, but he didn't buy it. He might be more open to it now that the locking has been in for a while and has broken everything.

Right, but this isn't even API calls, it's separate process invocations - the create USB is just a command, not an API.

Right, I was talking about API, but this is something for a builtin. I actually had a fancy --lock-timeout option that got added to all the builtins in my original submittal - ostreedev/ostree@cf2824a.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425425976,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","I also don't think that e-u-p-v can take the lock and inherit it in the summary creation / usb creation unless we add an --inherit-lock or something?

Yes, that was implicit in my suggestion.

Finally... I also don't really like the idea of looping indefinitely. If something is wedged taking the lock, it's better to fail the operation eventually rather than just fall down a well.

Me too.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/treitter,10,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425490295,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","ostree summary -u is called in the system repo. This is likely to have contention because it takes an exclusive lock, so anything with a shared (pull) or exclusive (prune) lock is going to block it from happening. When @mwleeds proposed upstream to have summary generation take an exclusive lock (ostreedev/ostree#1681) I didn't envision it being run out of band by random applications. Quite possibly that should be eased to a shared lock. If the locking API was also public and you were paranoid about the repo contents, you could first take an exclusive lock before regenerating the summmary.


When I recreated the general issue, I only hit the error during a simultaneous long ostree commit and ostree summary -u.


ostree create-usb is called to pull from the system repo to the USB repo and then updates the summary on the USB repo. I can't see this failing due to lock contention. Local pulls don't attempt to lock the source repo (although that wouldn't be a bad idea), and I can't see any contention on the USB repo. Are you actually seeing locking errors in ostree create-usb?


I never hit this issue myself though it showed up in the original report which includes a log file indicating this happened: https://phabricator.endlessm.com/T23422 (see the eos-diagnostics log file and search for ""locking"". You'll see that e-u-p-v got to executing ostree create-usb before it failed which meant its call to ostree summary -u completed)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/treitter,11,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425492123,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","I don't think I've seen anyone discuss the idea of simply increasing the lock wait timeout (and skipping the script changes I've proposed) as a near-term work-around while we figure out a better locking solution upstream.
What do people think? Do we expect risks if we increase it to, eg, 8 minutes?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/mwleeds,12,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425493109,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","Prunes can take effing ages though, so surely the best way to reduce the chance of the lock contention is to arrange for GNOME Software to suspend the processing of the queue of installs, and maybe even queue the USB creation operation at the head of this queue so it doesn't even start until the current operation has finished.

Couldn't eos-updater be the one doing the prune, if you're updating at the same time that you're copying to the USB? I suppose that's a less likely scenario than gnome-software parallelizing install/update operations. Or is the OS update one of those operations since gnome-software orchestrates OS updates these days?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/ramcq,13,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425497343,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","I don't think I've seen anyone discuss the idea of simply increasing the lock wait timeout (and skipping the script changes I've proposed) as a near-term work-around while we figure out a better locking solution upstream.
What do people think? Do we expect risks if we increase it to, eg, 8 minutes?

Well... the risk is the experience is a bit ass, because it just sits there for ages rather than making any visible headway. But if we're not able to do anything to stop the other activity or show the user we're not doing anything - I guess it would work...? Can you preserve it, set it, restore it afterwards?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/ramcq,14,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425498578,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","Prunes can take effing ages though, so surely the best way to reduce the chance of the lock contention is to arrange for GNOME Software to suspend the processing of the queue of installs, and maybe even queue the USB creation operation at the head of this queue so it doesn't even start until the current operation has finished.

Couldn't eos-updater be the one doing the prune, if you're updating at the same time that you're copying to the USB? I suppose that's a less likely scenario than gnome-software parallelizing install/update operations. Or is the OS update one of those operations since gnome-software orchestrates OS updates these days?

I was writing with the assumption that gnome-software was controlling it for both - but now you ask, I don't know this 100% for sure. I actually don't see any changes to eos-updater to remove the timer, so maybe we're just scheduling the updates from g-s in addition to our 14 day timer?
Also - is it possible that this is a pretty unlikely race for normal users, but shows up in QA because the system is switched to dev and you start futzing around with it, so it's gonna be updating more often and pulling daily (or more frequent) builds from staging?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/dbnicholson,15,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425499843,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","I don't think I've seen anyone discuss the idea of simply increasing the lock wait timeout (and skipping the script changes I've proposed) as a near-term work-around while we figure out a better locking solution upstream.
What do people think? Do we expect risks if we increase it to, eg, 8 minutes?

I think you're going to be better off, but you're always going to see a lot of lock contention if regenerating a summary takes an exclusive lock. I think if you change this to a shared lock (as I did in my initial implementation in ostreedev/ostree@eba8a17), most of the contention will go away.
That said, increasing the default lock timeout a bit might be a good idea. I doubt most pruning operations could finish in less than 1 minute on our hardware.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/treitter,16,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425503538,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","I don't think I've seen anyone discuss the idea of simply increasing the lock wait timeout (and skipping the script changes I've proposed) as a near-term work-around while we figure out a better locking solution upstream.
What do people think? Do we expect risks if we increase it to, eg, 8 minutes?

Well... the risk is the experience is a bit ass, because it just sits there for ages rather than making any visible headway. But if we're not able to do anything to stop the other activity or show the user we're not doing anything - I guess it would work...? Can you preserve it, set it, restore it afterwards?

From the user's perspective, the copy duration will just be larger (and, without a frame of reference, if someone thinks 30 minutes is a long time, I don't think they'd think 22 minutes is a short time). I'd definitely prefer a very-reliable, slower OS copy to one that's unreliable.
And Dan's right, this isn't a total fix because we're just making it less likely to fail. I agree we should still come up with a better long-term fix with upstream.
I'll test out reading the value, bumping it up, doing the copy, then re-setting it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/mwleeds,17,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425545394,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","you're always going to see a lot of lock contention if regenerating a summary takes an exclusive lock. I think if you change this to a shared lock (as I did in my initial implementation in ostreedev/ostree@eba8a17), most of the contention will go away.

That would protect against commits being deleted but wouldn't protect against refs being added/removed/updated, right? Is the idea that the latter race doesn't often matter in practice?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/dbnicholson,18,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425563031,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","you're always going to see a lot of lock contention if regenerating a summary takes an exclusive lock. I think if you change this to a shared lock (as I did in my initial implementation in ostreedev/ostree@eba8a17), most of the contention will go away.

That would protect against commits being deleted but wouldn't protect against refs being added/removed/updated, right? Is the idea that the latter race doesn't often matter in practice?

Right. Currently exclusive locks are taken when pruning objects and deltas, but not refs. I think it would be more robust to require an exclusive lock when generating the summary to ensure the refs aren't changed. However, even if you were able to block refs from being updated, a subsequent ref update would immediately invalidate the summary. The summary generation is effectively 2 reads (refs and deltas) followed by an atomic write to the summary file. What the locking would gain you from this perspective is to help ensure you don't get failures traversing the repo. Perhaps the locking doesn't really gain anything in this context.
On the other hand, there is one case where I would advise having locking during summary generation. If you're going to sign the summary, then you really don't want the summary to change while you're generating the signature. Otherwise you could publish mismatched summary and signature. That just inflicts pain on clients. That's the real reason why I had shared lock for summary generation and exclusive lock for summary signing in my locking PR even though I don't think that's what I put in the commit message or comment.
So, circling back to this issue, I think it would be fine to reduce the summary generation locking to shared or remove it entirely until the summary signing gains locking.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/treitter,19,https://github.com/endlessm/eos-updater/pull/237#issuecomment-425601773,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","I've force-pushed a new version which increases the value of core.lock-timeouts-secs while the critical commands are running then restores afterward (or in case the process gets SIGINT).
It seems to work reliably in my testing.
If everyone is OK with this being the work-around for 3.4.8, I think we should merge it to master and eos3.4 and test. If that works, create a follow-up task to implement a longer-term fix.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,237,2018-09-27T23:50:52Z,2018-10-02T00:07:11Z,2018-10-02T00:07:11Z,CLOSED,False,173,4,3,https://github.com/treitter,eupv: cope with OSTree lock contention from other processes,3,[],https://github.com/endlessm/eos-updater/pull/237,https://github.com/treitter,20,https://github.com/endlessm/eos-updater/pull/237#issuecomment-426103560,"If another processes, such as ostree commit, has an exclusive lock on
the target repository, e-u-p-v will fail during ostree summary --update or ostree create-usb if it hits the timeout (which is
currently 30 seconds as defined in OSTree's ostree-repo.c).
This fix simply retries these commands indefinitely until they succeed.
Without this fix in place, USB OS copies in Gnome Software (the App
Center) may fail unexpectedly as we have some processes, launched
independently, which can take an exclusive lock of the OSTree repo.
https://phabricator.endlessm.com/T23422","@dbnicholson 's suggestion to simply skip summary generation here and in flatpak create-usb seems to work, and it's a cleaner solution, so I'm going to close this pull request in favor of these:
endlessm/flatpak#125
#238",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,238,2018-10-02T00:04:29Z,2018-10-02T19:10:59Z,2018-10-02T19:11:05Z,MERGED,True,0,3,1,https://github.com/treitter,eupv: don't manually generate the summary,2,[],https://github.com/endlessm/eos-updater/pull/238,https://github.com/treitter,1,https://github.com/endlessm/eos-updater/pull/238,"Generating the summary requires acquiring an exclusive lock on the
OSTree repository which risks this process failing if another process,
like ostree commit or ostree prune, holds an exclusive lock for
longer than OSTree's core.lock-timeout-secs config option (which
defaults to only 30 seconds which is not always sufficient).
In testing directly and with Gnome Software calling this script to copy
the OS and dependencies to USB, this step seems to be unnecessary, so
we're best off skipping it.
https://phabricator.endlessm.com/T23422","Generating the summary requires acquiring an exclusive lock on the
OSTree repository which risks this process failing if another process,
like ostree commit or ostree prune, holds an exclusive lock for
longer than OSTree's core.lock-timeout-secs config option (which
defaults to only 30 seconds which is not always sufficient).
In testing directly and with Gnome Software calling this script to copy
the OS and dependencies to USB, this step seems to be unnecessary, so
we're best off skipping it.
https://phabricator.endlessm.com/T23422",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,239,2018-10-13T00:03:12Z,2018-10-15T15:27:21Z,2018-10-15T15:27:27Z,MERGED,True,1,1,1,https://github.com/mwleeds,poll: Retry P2P code path on each Poll(),1,[],https://github.com/endlessm/eos-updater/pull/239,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/239,"Currently eos-updater has two code paths for fetching metadata (and
update payloads), a P2P one that checks LAN/USB sources if configured to
do so in addition to checking the Internet, and a fallback one that only
checks the Internet in the same way eos-updater did in pre-P2P times, in
case the P2P code fails. There's a static boolean variable
""use_new_code"" which is set to FALSE if the P2P fetch failed. However if
you're offline and don't have LAN/USB sources available, it will fail
every time, and since the variable is static its value persists to
subsequent Poll() operations for the lifetime of the eos-updater
process. So even if you have a USB drive plugged in for one of those
polls, eos-updater will only check the Internet and the update won't be
found unless eos-updater is restarted. The end result of this is that
users don't see USB OS updates show up in the App Center in the case
where they are (a) offline and (b) eos-updater did at least one Poll()
before the USB was plugged in.
So this commit simply takes away the static designation of the
""use_new_code"" variable, so that the P2P code is tried every time. In
combination with the code in gnome-software that calls eos-updater's
Poll() method on USB insertion, this should make USB OS updates appear
for users.
https://phabricator.endlessm.com/T23950","Currently eos-updater has two code paths for fetching metadata (and
update payloads), a P2P one that checks LAN/USB sources if configured to
do so in addition to checking the Internet, and a fallback one that only
checks the Internet in the same way eos-updater did in pre-P2P times, in
case the P2P code fails. There's a static boolean variable
""use_new_code"" which is set to FALSE if the P2P fetch failed. However if
you're offline and don't have LAN/USB sources available, it will fail
every time, and since the variable is static its value persists to
subsequent Poll() operations for the lifetime of the eos-updater
process. So even if you have a USB drive plugged in for one of those
polls, eos-updater will only check the Internet and the update won't be
found unless eos-updater is restarted. The end result of this is that
users don't see USB OS updates show up in the App Center in the case
where they are (a) offline and (b) eos-updater did at least one Poll()
before the USB was plugged in.
So this commit simply takes away the static designation of the
""use_new_code"" variable, so that the P2P code is tried every time. In
combination with the code in gnome-software that calls eos-updater's
Poll() method on USB insertion, this should make USB OS updates appear
for users.
https://phabricator.endlessm.com/T23950",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,239,2018-10-13T00:03:12Z,2018-10-15T15:27:21Z,2018-10-15T15:27:27Z,MERGED,True,1,1,1,https://github.com/mwleeds,poll: Retry P2P code path on each Poll(),1,[],https://github.com/endlessm/eos-updater/pull/239,https://github.com/ramcq,2,https://github.com/endlessm/eos-updater/pull/239#issuecomment-429900094,"Currently eos-updater has two code paths for fetching metadata (and
update payloads), a P2P one that checks LAN/USB sources if configured to
do so in addition to checking the Internet, and a fallback one that only
checks the Internet in the same way eos-updater did in pre-P2P times, in
case the P2P code fails. There's a static boolean variable
""use_new_code"" which is set to FALSE if the P2P fetch failed. However if
you're offline and don't have LAN/USB sources available, it will fail
every time, and since the variable is static its value persists to
subsequent Poll() operations for the lifetime of the eos-updater
process. So even if you have a USB drive plugged in for one of those
polls, eos-updater will only check the Internet and the update won't be
found unless eos-updater is restarted. The end result of this is that
users don't see USB OS updates show up in the App Center in the case
where they are (a) offline and (b) eos-updater did at least one Poll()
before the USB was plugged in.
So this commit simply takes away the static designation of the
""use_new_code"" variable, so that the P2P code is tried every time. In
combination with the code in gnome-software that calls eos-updater's
Poll() method on USB insertion, this should make USB OS updates appear
for users.
https://phabricator.endlessm.com/T23950",OH NO!,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,240,2018-10-15T23:17:12Z,2018-10-18T20:32:15Z,2018-10-22T19:44:18Z,MERGED,True,74,19,5,https://github.com/mwleeds,eos-updater: Avoid scheduler for offline updates,1,[],https://github.com/endlessm/eos-updater/pull/240,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/240,"Currently eos-updater asks the download scheduler (mogwai) before
fetching an update, so that the user's configured update schedule can be
respected. However that system is designed to help users with limited
Internet connections; it doesn't make sense to use it when the update
comes from local sources, such as the local network or a USB drive. So
this commit makes changes to eos-updater so that offline OS updates can
happen regardless of whether or not automatic updates are turned on.
The way this is implemented is that in the Poll() stage, we first check
offline sources for updates, and then only check the Internet if none
were found offline. If we simply check all the sources at once as we
previously were, you'd have to make significant changes to the Fetch()
stage, because the scheduler can't make a decision when the offline and
online results are mixed together.
There are two notable implications of this implementation:


This means that even if the LAN or USB drive has an older update than
what's available on the Internet, we update from it first (then on the
next check for updates the Internet would be used). In my opinion, this
is desired behavior because after the offline update is complete, the
delta for the online update may be smaller.


Before this commit if the fetch from an offline source fails we try
to fetch from the Internet (if they both provide the latest commit).
After this commit, if the offline fetch fails the whole update fails.
This might be less than ideal but I don't think it will matter in
practice. The alternative would be to rearchitect eos-updater or the
libostree API used for the fetch in significant ways.


A mounted filesystem or a peer on the network could conceivably prevent
you from updating, but that's true both before and after this commit;
see ostreedev/ostree#1527
https://phabricator.endlessm.com/T23972","Currently eos-updater asks the download scheduler (mogwai) before
fetching an update, so that the user's configured update schedule can be
respected. However that system is designed to help users with limited
Internet connections; it doesn't make sense to use it when the update
comes from local sources, such as the local network or a USB drive. So
this commit makes changes to eos-updater so that offline OS updates can
happen regardless of whether or not automatic updates are turned on.
The way this is implemented is that in the Poll() stage, we first check
offline sources for updates, and then only check the Internet if none
were found offline. If we simply check all the sources at once as we
previously were, you'd have to make significant changes to the Fetch()
stage, because the scheduler can't make a decision when the offline and
online results are mixed together.
There are two notable implications of this implementation:


This means that even if the LAN or USB drive has an older update than
what's available on the Internet, we update from it first (then on the
next check for updates the Internet would be used). In my opinion, this
is desired behavior because after the offline update is complete, the
delta for the online update may be smaller.


Before this commit if the fetch from an offline source fails we try
to fetch from the Internet (if they both provide the latest commit).
After this commit, if the offline fetch fails the whole update fails.
This might be less than ideal but I don't think it will matter in
practice. The alternative would be to rearchitect eos-updater or the
libostree API used for the fetch in significant ways.


A mounted filesystem or a peer on the network could conceivably prevent
you from updating, but that's true both before and after this commit;
see ostreedev/ostree#1527
https://phabricator.endlessm.com/T23972",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,240,2018-10-15T23:17:12Z,2018-10-18T20:32:15Z,2018-10-22T19:44:18Z,MERGED,True,74,19,5,https://github.com/mwleeds,eos-updater: Avoid scheduler for offline updates,1,[],https://github.com/endlessm/eos-updater/pull/240,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/240#issuecomment-430456483,"Currently eos-updater asks the download scheduler (mogwai) before
fetching an update, so that the user's configured update schedule can be
respected. However that system is designed to help users with limited
Internet connections; it doesn't make sense to use it when the update
comes from local sources, such as the local network or a USB drive. So
this commit makes changes to eos-updater so that offline OS updates can
happen regardless of whether or not automatic updates are turned on.
The way this is implemented is that in the Poll() stage, we first check
offline sources for updates, and then only check the Internet if none
were found offline. If we simply check all the sources at once as we
previously were, you'd have to make significant changes to the Fetch()
stage, because the scheduler can't make a decision when the offline and
online results are mixed together.
There are two notable implications of this implementation:


This means that even if the LAN or USB drive has an older update than
what's available on the Internet, we update from it first (then on the
next check for updates the Internet would be used). In my opinion, this
is desired behavior because after the offline update is complete, the
delta for the online update may be smaller.


Before this commit if the fetch from an offline source fails we try
to fetch from the Internet (if they both provide the latest commit).
After this commit, if the offline fetch fails the whole update fails.
This might be less than ideal but I don't think it will matter in
practice. The alternative would be to rearchitect eos-updater or the
libostree API used for the fetch in significant ways.


A mounted filesystem or a peer on the network could conceivably prevent
you from updating, but that's true both before and after this commit;
see ostreedev/ostree#1527
https://phabricator.endlessm.com/T23972","The second caveat sounds more serious, but am I right in thinking that the previous fallback-to-internet behaviour would only have happened in the case where the commit supposedly available via USB/Avahi was equal to the commit available over the internet?

Yes. Before the commit on this branch, you're only going to try to pull from the USB if it has something just as new as what's on the Internet so you would only benefit from the fallback pulling done by ostree_repo_pull_from_remotes_async in that case.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,240,2018-10-15T23:17:12Z,2018-10-18T20:32:15Z,2018-10-22T19:44:18Z,MERGED,True,74,19,5,https://github.com/mwleeds,eos-updater: Avoid scheduler for offline updates,1,[],https://github.com/endlessm/eos-updater/pull/240,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/240#issuecomment-431955008,"Currently eos-updater asks the download scheduler (mogwai) before
fetching an update, so that the user's configured update schedule can be
respected. However that system is designed to help users with limited
Internet connections; it doesn't make sense to use it when the update
comes from local sources, such as the local network or a USB drive. So
this commit makes changes to eos-updater so that offline OS updates can
happen regardless of whether or not automatic updates are turned on.
The way this is implemented is that in the Poll() stage, we first check
offline sources for updates, and then only check the Internet if none
were found offline. If we simply check all the sources at once as we
previously were, you'd have to make significant changes to the Fetch()
stage, because the scheduler can't make a decision when the offline and
online results are mixed together.
There are two notable implications of this implementation:


This means that even if the LAN or USB drive has an older update than
what's available on the Internet, we update from it first (then on the
next check for updates the Internet would be used). In my opinion, this
is desired behavior because after the offline update is complete, the
delta for the online update may be smaller.


Before this commit if the fetch from an offline source fails we try
to fetch from the Internet (if they both provide the latest commit).
After this commit, if the offline fetch fails the whole update fails.
This might be less than ideal but I don't think it will matter in
practice. The alternative would be to rearchitect eos-updater or the
libostree API used for the fetch in significant ways.


A mounted filesystem or a peer on the network could conceivably prevent
you from updating, but that's true both before and after this commit;
see ostreedev/ostree#1527
https://phabricator.endlessm.com/T23972","Mogwai should always be allowing download requests to file: URIs or URIs on the local network, though. If that’s not working, it needs to be fixed in Mogwai.
Implication 1 is a good enough reason for this PR to be accepted on its own merits, though.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,241,2018-10-23T19:32:16Z,2018-10-24T21:29:52Z,2018-10-24T21:32:30Z,MERGED,True,8,4,2,https://github.com/mwleeds,T23972 assertion failure and minor fix,2,[],https://github.com/endlessm/eos-updater/pull/241,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/241,,,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,242,2019-03-26T13:41:58Z,2019-03-27T15:52:52Z,2019-03-27T16:01:56Z,MERGED,True,526,312,27,https://github.com/pwithnall,T16499 Add documentation to D-Bus interface,26,[],https://github.com/endlessm/eos-updater/pull/242,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/242,https://phabricator.endlessm.com/T16499,https://phabricator.endlessm.com/T16499,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,242,2019-03-26T13:41:58Z,2019-03-27T15:52:52Z,2019-03-27T16:01:56Z,MERGED,True,526,312,27,https://github.com/pwithnall,T16499 Add documentation to D-Bus interface,26,[],https://github.com/endlessm/eos-updater/pull/242,https://github.com/wjt,2,https://github.com/endlessm/eos-updater/pull/242#issuecomment-476648833,https://phabricator.endlessm.com/T16499,"Build is failing because of the GCC 8 transition:
eos-updater/fetch.c: In function ‘check_scheduler’:
eos-updater/fetch.c:1026:46: error: cast between incompatible function types from ‘gboolean (*)(GCancellable *, void *)’ {aka ‘int (*)(struct _GCancellable *, void *)’} to ‘gboolean (*)(void *)’ {aka ‘int (*)(void *)’} [-Werror=cast-function-type]
   g_source_set_callback (cancellable_source, (GSourceFunc) cancellable_source_cb, NULL, NULL);
                                              ^
mv -f eos-updater/.deps/eos_updater-live-boot.Tpo eos-updater/.deps/eos_updater-live-boot.Po

One for a G_SOURCE_FUNC() cast?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,242,2019-03-26T13:41:58Z,2019-03-27T15:52:52Z,2019-03-27T16:01:56Z,MERGED,True,526,312,27,https://github.com/pwithnall,T16499 Add documentation to D-Bus interface,26,[],https://github.com/endlessm/eos-updater/pull/242,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/242#issuecomment-476743027,https://phabricator.endlessm.com/T16499,"One for a G_SOURCE_FUNC() cast?

Indeed, done.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,242,2019-03-26T13:41:58Z,2019-03-27T15:52:52Z,2019-03-27T16:01:56Z,MERGED,True,526,312,27,https://github.com/pwithnall,T16499 Add documentation to D-Bus interface,26,[],https://github.com/endlessm/eos-updater/pull/242,https://github.com/wjt,4,https://github.com/endlessm/eos-updater/pull/242#issuecomment-476746696,https://phabricator.endlessm.com/T16499,Looks fine… but the build is now failing for new reasons :(,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,242,2019-03-26T13:41:58Z,2019-03-27T15:52:52Z,2019-03-27T16:01:56Z,MERGED,True,526,312,27,https://github.com/pwithnall,T16499 Add documentation to D-Bus interface,26,[],https://github.com/endlessm/eos-updater/pull/242,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/242#issuecomment-476881312,https://phabricator.endlessm.com/T16499,"I think this implicitly assumes that sizeof (guint) < sizeof (gint64).

It does. I’m finding it quite frustrating that I can’t think of a way to add an int to an unsigned int without getting either a -Wsign-conversion warning, or a -Wduplicated-branches warning.
I’ve reworked it as per your suggestion, thanks. Not 100% happy with that either, since it makes the function less general. Oh well.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,243,2019-03-26T13:52:03Z,2019-03-27T16:13:41Z,2019-03-27T16:13:45Z,MERGED,True,3,4,1,https://github.com/pwithnall,eos-updater-prepare-volume: Update man page to fix an error,1,[],https://github.com/endlessm/eos-updater/pull/243,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/243,"Commit e4114d8 changed the format of the command line arguments
accepted by eos-updater-prepare-volume. Change its man page to
reflect that.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T22822","Commit e4114d8 changed the format of the command line arguments
accepted by eos-updater-prepare-volume. Change its man page to
reflect that.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T22822",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,243,2019-03-26T13:52:03Z,2019-03-27T16:13:41Z,2019-03-27T16:13:45Z,MERGED,True,3,4,1,https://github.com/pwithnall,eos-updater-prepare-volume: Update man page to fix an error,1,[],https://github.com/endlessm/eos-updater/pull/243,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/243#issuecomment-476785842,"Commit e4114d8 changed the format of the command line arguments
accepted by eos-updater-prepare-volume. Change its man page to
reflect that.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T22822",I'll hold off on merging this until after #242 which is attempting to fix the Jenkins build.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,243,2019-03-26T13:52:03Z,2019-03-27T16:13:41Z,2019-03-27T16:13:45Z,MERGED,True,3,4,1,https://github.com/pwithnall,eos-updater-prepare-volume: Update man page to fix an error,1,[],https://github.com/endlessm/eos-updater/pull/243,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/243#issuecomment-477232161,"Commit e4114d8 changed the format of the command line arguments
accepted by eos-updater-prepare-volume. Change its man page to
reflect that.
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T22822",Rebased and Jenkins now passes. Thanks for the review.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,244,2019-03-28T15:25:09Z,,2019-05-23T16:34:42Z,OPEN,False,415,0,2,https://github.com/pwithnall,WIP: tests: Add mock eos-updater service,1,[],https://github.com/endlessm/eos-updater/pull/244,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/244,"This is a mock implementation of eos-updater written using
python-dbusmock. It’s distributed by default, but not used by anything
at the moment; eventually some automated tests for eos-updater clients
could be written with it (using python-unittest), but for the moment
it’s only being used manually (using python3 -m dbusmock --template ./path/to/mock-eos-updater.py).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T26011","This is a mock implementation of eos-updater written using
python-dbusmock. It’s distributed by default, but not used by anything
at the moment; eventually some automated tests for eos-updater clients
could be written with it (using python-unittest), but for the moment
it’s only being used manually (using python3 -m dbusmock --template ./path/to/mock-eos-updater.py).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T26011",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,244,2019-03-28T15:25:09Z,,2019-05-23T16:34:42Z,OPEN,False,415,0,2,https://github.com/pwithnall,WIP: tests: Add mock eos-updater service,1,[],https://github.com/endlessm/eos-updater/pull/244,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/244#issuecomment-477643972,"This is a mock implementation of eos-updater written using
python-dbusmock. It’s distributed by default, but not used by anything
at the moment; eventually some automated tests for eos-updater clients
could be written with it (using python-unittest), but for the moment
it’s only being used manually (using python3 -m dbusmock --template ./path/to/mock-eos-updater.py).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T26011","This is marked as WIP until the gnome-software plugin lands upstream; I don’t want to merge this to eos-updater until I’m sure it’s the final version we’re using.
This PR is essentially a reminder for that.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,244,2019-03-28T15:25:09Z,,2019-05-23T16:34:42Z,OPEN,False,415,0,2,https://github.com/pwithnall,WIP: tests: Add mock eos-updater service,1,[],https://github.com/endlessm/eos-updater/pull/244,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/244#issuecomment-495292727,"This is a mock implementation of eos-updater written using
python-dbusmock. It’s distributed by default, but not used by anything
at the moment; eventually some automated tests for eos-updater clients
could be written with it (using python-unittest), but for the moment
it’s only being used manually (using python3 -m dbusmock --template ./path/to/mock-eos-updater.py).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T26011",Updated with the latest state of the mock service from https://gitlab.gnome.org/GNOME/gnome-software/merge_requests/197. This fixes a problem where FinishFetch() would block any incoming Cancel() calls until it finished.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,245,2019-04-10T00:43:37Z,2019-04-12T12:22:11Z,2019-04-12T12:22:14Z,MERGED,True,13,7,1,https://github.com/mwleeds,eupv: Use collection ID from commit metadata,1,[],https://github.com/endlessm/eos-updater/pull/245,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/245,"Currently eos-updater-prepare-volume uses the collection ID from the
remote config when deciding how to specify the OS ref to ostree create-usb. However this is not always accurate since for example an
image built using a staging ostree (com.endlessm.Dev.Os) will still have the production URL
and collection ID configured for updates (com.endlessm.Os). So this
commit changes e-u-p-v to use the collection ID from the commit metadata
instead, which is always the correct one.
When I wrote this I thought it wouldn't matter because I thought ostree create-usb uses the collection ID from the local repo summary file,
which would still be the wrong one. However I later found out (thanks to
Dan) that the local repo summary is not needed or used for pulls between
local repos (in this case from the system repo to the one on the USB
drive).
So now copying a USB OS update on a staging image should work regardless
of where the eos remote is pointed, as long as the computer receiving
the update is pointed at staging.
https://phabricator.endlessm.com/T24034","Currently eos-updater-prepare-volume uses the collection ID from the
remote config when deciding how to specify the OS ref to ostree create-usb. However this is not always accurate since for example an
image built using a staging ostree (com.endlessm.Dev.Os) will still have the production URL
and collection ID configured for updates (com.endlessm.Os). So this
commit changes e-u-p-v to use the collection ID from the commit metadata
instead, which is always the correct one.
When I wrote this I thought it wouldn't matter because I thought ostree create-usb uses the collection ID from the local repo summary file,
which would still be the wrong one. However I later found out (thanks to
Dan) that the local repo summary is not needed or used for pulls between
local repos (in this case from the system repo to the one on the USB
drive).
So now copying a USB OS update on a staging image should work regardless
of where the eos remote is pointed, as long as the computer receiving
the update is pointed at staging.
https://phabricator.endlessm.com/T24034",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,245,2019-04-10T00:43:37Z,2019-04-12T12:22:11Z,2019-04-12T12:22:14Z,MERGED,True,13,7,1,https://github.com/mwleeds,eupv: Use collection ID from commit metadata,1,[],https://github.com/endlessm/eos-updater/pull/245,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/245#issuecomment-482554258,"Currently eos-updater-prepare-volume uses the collection ID from the
remote config when deciding how to specify the OS ref to ostree create-usb. However this is not always accurate since for example an
image built using a staging ostree (com.endlessm.Dev.Os) will still have the production URL
and collection ID configured for updates (com.endlessm.Os). So this
commit changes e-u-p-v to use the collection ID from the commit metadata
instead, which is always the correct one.
When I wrote this I thought it wouldn't matter because I thought ostree create-usb uses the collection ID from the local repo summary file,
which would still be the wrong one. However I later found out (thanks to
Dan) that the local repo summary is not needed or used for pulls between
local repos (in this case from the system repo to the one on the USB
drive).
So now copying a USB OS update on a staging image should work regardless
of where the eos remote is pointed, as long as the computer receiving
the update is pointed at staging.
https://phabricator.endlessm.com/T24034",LGTM.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,246,2019-04-16T11:14:19Z,2019-04-16T11:49:54Z,2019-04-17T10:29:07Z,MERGED,True,9,6,2,https://github.com/pwithnall,debian: Update to compat level 12,1,[],https://github.com/endlessm/eos-updater/pull/246,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/246,"From https://manpages.debian.org/testing/debhelper/debhelper.7.en.html:
• dh_systemd_start has been replaced by dh_installsystemd.
• dh_install --fail-missing has been replaced by dh_missing.
• dh autoreconf and systemd helpers are enabled by default.
• dh uses --parallel by default for build systems which support it.
Signed-off-by: Philip Withnall withnall@endlessm.com","From https://manpages.debian.org/testing/debhelper/debhelper.7.en.html:
• dh_systemd_start has been replaced by dh_installsystemd.
• dh_install --fail-missing has been replaced by dh_missing.
• dh autoreconf and systemd helpers are enabled by default.
• dh uses --parallel by default for build systems which support it.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,247,2019-04-16T11:46:34Z,2019-04-23T18:55:08Z,2019-04-23T18:55:13Z,MERGED,True,113,48,25,https://github.com/pwithnall,T26056 Fix and re-enable tests,17,[],https://github.com/endlessm/eos-updater/pull/247,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/247,"This potentially fixes the tests. Still pending some test runs and Jenkins results.
https://phabricator.endlessm.com/T26056","This potentially fixes the tests. Still pending some test runs and Jenkins results.
https://phabricator.endlessm.com/T26056",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,247,2019-04-16T11:46:34Z,2019-04-23T18:55:08Z,2019-04-23T18:55:13Z,MERGED,True,113,48,25,https://github.com/pwithnall,T26056 Fix and re-enable tests,17,[],https://github.com/endlessm/eos-updater/pull/247,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/247#issuecomment-484473476,"This potentially fixes the tests. Still pending some test runs and Jenkins results.
https://phabricator.endlessm.com/T26056",Finally ready for review now.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,247,2019-04-16T11:46:34Z,2019-04-23T18:55:08Z,2019-04-23T18:55:13Z,MERGED,True,113,48,25,https://github.com/pwithnall,T26056 Fix and re-enable tests,17,[],https://github.com/endlessm/eos-updater/pull/247,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/247#issuecomment-484491099,"This potentially fixes the tests. Still pending some test runs and Jenkins results.
https://phabricator.endlessm.com/T26056","bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,247,2019-04-16T11:46:34Z,2019-04-23T18:55:08Z,2019-04-23T18:55:13Z,MERGED,True,113,48,25,https://github.com/pwithnall,T26056 Fix and re-enable tests,17,[],https://github.com/endlessm/eos-updater/pull/247,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/247#issuecomment-485015160,"This potentially fixes the tests. Still pending some test runs and Jenkins results.
https://phabricator.endlessm.com/T26056",The debian/control file has the line Maintainer: John Hiesey <john@endlessm.com>. Might as well have your name there even if no one apparently uses it.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,247,2019-04-16T11:46:34Z,2019-04-23T18:55:08Z,2019-04-23T18:55:13Z,MERGED,True,113,48,25,https://github.com/pwithnall,T26056 Fix and re-enable tests,17,[],https://github.com/endlessm/eos-updater/pull/247,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/247#issuecomment-485784265,"This potentially fixes the tests. Still pending some test runs and Jenkins results.
https://phabricator.endlessm.com/T26056","The debian/control file has the line Maintainer: John Hiesey <john@endlessm.com>. Might as well have your name there even if no one apparently uses it.

I’ll push a couple of commits to update this and debian/copyright.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,248,2019-04-17T10:28:57Z,2019-04-17T14:12:27Z,2019-04-17T14:12:31Z,MERGED,True,1,3,2,https://github.com/pwithnall,More Debian compatibility updates,2,[],https://github.com/endlessm/eos-updater/pull/248,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/248,Following up from #246 (review).,Following up from #246 (review).,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,249,2019-04-18T12:44:13Z,2019-04-18T15:22:15Z,2019-04-18T15:22:33Z,CLOSED,False,110,45,24,https://github.com/pwithnall,WIP: T26056 Make tests fail sooner in future,15,[],https://github.com/endlessm/eos-updater/pull/249,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/249,Not ready for review yet.,Not ready for review yet.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,249,2019-04-18T12:44:13Z,2019-04-18T15:22:15Z,2019-04-18T15:22:33Z,CLOSED,False,110,45,24,https://github.com/pwithnall,WIP: T26056 Make tests fail sooner in future,15,[],https://github.com/endlessm/eos-updater/pull/249,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/249#issuecomment-484559531,Not ready for review yet.,"Pulled the two relevant commits into #247, so this is redundant now.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,250,2019-04-23T21:28:12Z,2019-04-23T21:34:49Z,2019-04-23T21:34:52Z,MERGED,True,7,7,4,https://github.com/pwithnall,debian: Use libexecdir as /usr/libexec as allowed by FHS 3.0,1,[],https://github.com/endlessm/eos-updater/pull/250,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/250,"Following such illustrious guidance as:

https://salsa.debian.org/debian/flatpak-builder/commit/d525fb2f3024db21e9169605e4ab30e3cc203523
https://manpages.debian.org/unstable/debhelper/debhelper.7.en.html
(v12 compatibility)

Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T26056","Following such illustrious guidance as:

https://salsa.debian.org/debian/flatpak-builder/commit/d525fb2f3024db21e9169605e4ab30e3cc203523
https://manpages.debian.org/unstable/debhelper/debhelper.7.en.html
(v12 compatibility)

Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T26056",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,251,2019-04-25T00:27:45Z,2019-04-25T12:36:38Z,2019-04-25T12:36:42Z,MERGED,True,26,31,1,https://github.com/mwleeds,eupv: Use ref(s) from commit metadata,1,[],https://github.com/endlessm/eos-updater/pull/251,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/251,"Currently eos-updater-prepare-volume checks the deployment's origin
refspec to decide what ref to pass to ""ostree create-usb"" to copy the OS
onto a USB drive. This is not always correct; for example images built
from development OSTrees will have the production ref (e.g.
os/eos/amd64/eos3a) set as the origin so that it will be used for
updates, but the booted commit will have a different associated ref
(e.g. os/eos/amd64/master). In that case the ""ostree create-usb"" command
will fail. So this commit changes e-u-p-v so that it checks the commit
metadata to find the list of associated refs and copies each of those. I
think it makes more sense to copy all of them than to try to determine
which will be used on the receiving computer, and the additional disk
space usage is trivial.
In other words, this commit should ensure that e-u-p-v works on
development images, not just production ones (where the booted and
update refs often match).
https://phabricator.endlessm.com/T24034","Currently eos-updater-prepare-volume checks the deployment's origin
refspec to decide what ref to pass to ""ostree create-usb"" to copy the OS
onto a USB drive. This is not always correct; for example images built
from development OSTrees will have the production ref (e.g.
os/eos/amd64/eos3a) set as the origin so that it will be used for
updates, but the booted commit will have a different associated ref
(e.g. os/eos/amd64/master). In that case the ""ostree create-usb"" command
will fail. So this commit changes e-u-p-v so that it checks the commit
metadata to find the list of associated refs and copies each of those. I
think it makes more sense to copy all of them than to try to determine
which will be used on the receiving computer, and the additional disk
space usage is trivial.
In other words, this commit should ensure that e-u-p-v works on
development images, not just production ones (where the booted and
update refs often match).
https://phabricator.endlessm.com/T24034",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,252,2019-04-25T01:02:02Z,2019-04-25T12:39:06Z,2019-04-30T19:33:10Z,MERGED,True,3,1,1,https://github.com/mwleeds,eupv: Work when the user ID differs on the destination computer,1,[],https://github.com/endlessm/eos-updater/pull/252,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/252,"Currently if the USB drive used for USB updates uses a filesystem that
preserves Linux permissions (such as ext4) and its toplevel directory
doesn't give read and execute permission to other users, and the user ID
who owns the flash drive is different than the logged in user's ID on
the receiving computer where the drive is used, gnome-software will
crash and fail to display the apps on the USB drive. For example if I
use the shared user with user ID 1001 to format a drive ext4, copy apps
to it, and then put it in a computer logged in as the primary user with
user ID 1000, that user will be unable to open the drive or receive
updates from it.
We already do a recursive chmod on the "".ostree"" directory on the drive
after the copy, so this commit just adds another chmod command before
that which sets the permissions to 755 on the drive's toplevel directory
(in other words the owner has full permissions and group/other users
have read and execute permissions).
This issue shouldn't appear for most users since most flash drives are
formatted with a filesystem that doesn't care about linux permissions
like FAT.
https://phabricator.endlessm.com/T25940","Currently if the USB drive used for USB updates uses a filesystem that
preserves Linux permissions (such as ext4) and its toplevel directory
doesn't give read and execute permission to other users, and the user ID
who owns the flash drive is different than the logged in user's ID on
the receiving computer where the drive is used, gnome-software will
crash and fail to display the apps on the USB drive. For example if I
use the shared user with user ID 1001 to format a drive ext4, copy apps
to it, and then put it in a computer logged in as the primary user with
user ID 1000, that user will be unable to open the drive or receive
updates from it.
We already do a recursive chmod on the "".ostree"" directory on the drive
after the copy, so this commit just adds another chmod command before
that which sets the permissions to 755 on the drive's toplevel directory
(in other words the owner has full permissions and group/other users
have read and execute permissions).
This issue shouldn't appear for most users since most flash drives are
formatted with a filesystem that doesn't care about linux permissions
like FAT.
https://phabricator.endlessm.com/T25940",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,253,2019-04-30T19:33:37Z,2019-05-02T04:51:18Z,2019-05-02T04:51:22Z,MERGED,True,16,4,2,https://github.com/mwleeds,Add a --preserve-permissions option for e-u-p-v,2,[],https://github.com/endlessm/eos-updater/pull/253,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/253,https://phabricator.endlessm.com/T25940,https://phabricator.endlessm.com/T25940,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,254,2019-05-22T02:15:21Z,2019-05-24T11:17:29Z,2019-05-24T11:18:44Z,MERGED,True,23,3,3,https://github.com/mwleeds,T26806 Fix tests running locally,5,[],https://github.com/endlessm/eos-updater/pull/254,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/254,https://phabricator.endlessm.com/T26806,https://phabricator.endlessm.com/T26806,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,255,2019-05-23T20:43:18Z,2019-05-29T03:28:12Z,2019-05-29T03:28:44Z,MERGED,True,15,8,2,https://github.com/mwleeds,libeos-updater-util: Check for new flatpak error code,1,[],https://github.com/endlessm/eos-updater/pull/255,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/255,"libflatpak now returns FLATPAK_ERROR_REF_NOT_FOUND instead
of G_IO_ERROR_NOT_FOUND (and sometimes other errors) when a
ref can't be found either locally or in a remote. So update
some code which checks for G_IO_ERROR_NOT_FOUND.
See these commits:
flatpak/flatpak@c0d5f1b
flatpak/flatpak@c028e0d
https://phabricator.endlessm.com/T26678","libflatpak now returns FLATPAK_ERROR_REF_NOT_FOUND instead
of G_IO_ERROR_NOT_FOUND (and sometimes other errors) when a
ref can't be found either locally or in a remote. So update
some code which checks for G_IO_ERROR_NOT_FOUND.
See these commits:
flatpak/flatpak@c0d5f1b
flatpak/flatpak@c028e0d
https://phabricator.endlessm.com/T26678",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,255,2019-05-23T20:43:18Z,2019-05-29T03:28:12Z,2019-05-29T03:28:44Z,MERGED,True,15,8,2,https://github.com/mwleeds,libeos-updater-util: Check for new flatpak error code,1,[],https://github.com/endlessm/eos-updater/pull/255,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/255#issuecomment-495377812,"libflatpak now returns FLATPAK_ERROR_REF_NOT_FOUND instead
of G_IO_ERROR_NOT_FOUND (and sometimes other errors) when a
ref can't be found either locally or in a remote. So update
some code which checks for G_IO_ERROR_NOT_FOUND.
See these commits:
flatpak/flatpak@c0d5f1b
flatpak/flatpak@c028e0d
https://phabricator.endlessm.com/T26678",This is dependent on endlessm/flatpak#158,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,255,2019-05-23T20:43:18Z,2019-05-29T03:28:12Z,2019-05-29T03:28:44Z,MERGED,True,15,8,2,https://github.com/mwleeds,libeos-updater-util: Check for new flatpak error code,1,[],https://github.com/endlessm/eos-updater/pull/255,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/255#issuecomment-495582700,"libflatpak now returns FLATPAK_ERROR_REF_NOT_FOUND instead
of G_IO_ERROR_NOT_FOUND (and sometimes other errors) when a
ref can't be found either locally or in a remote. So update
some code which checks for G_IO_ERROR_NOT_FOUND.
See these commits:
flatpak/flatpak@c0d5f1b
flatpak/flatpak@c028e0d
https://phabricator.endlessm.com/T26678","This is dependent on endlessm/flatpak#158

Could bump the version dependency in debian/control to reflect that.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,255,2019-05-23T20:43:18Z,2019-05-29T03:28:12Z,2019-05-29T03:28:44Z,MERGED,True,15,8,2,https://github.com/mwleeds,libeos-updater-util: Check for new flatpak error code,1,[],https://github.com/endlessm/eos-updater/pull/255,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/255#issuecomment-495745837,"libflatpak now returns FLATPAK_ERROR_REF_NOT_FOUND instead
of G_IO_ERROR_NOT_FOUND (and sometimes other errors) when a
ref can't be found either locally or in a remote. So update
some code which checks for G_IO_ERROR_NOT_FOUND.
See these commits:
flatpak/flatpak@c0d5f1b
flatpak/flatpak@c028e0d
https://phabricator.endlessm.com/T26678","This is dependent on endlessm/flatpak#158

Could bump the version dependency in debian/control to reflect that.

I think this would require doing a release of our fork of Flatpak which doesn't seem worth it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,255,2019-05-23T20:43:18Z,2019-05-29T03:28:12Z,2019-05-29T03:28:44Z,MERGED,True,15,8,2,https://github.com/mwleeds,libeos-updater-util: Check for new flatpak error code,1,[],https://github.com/endlessm/eos-updater/pull/255,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/255#issuecomment-496110791,"libflatpak now returns FLATPAK_ERROR_REF_NOT_FOUND instead
of G_IO_ERROR_NOT_FOUND (and sometimes other errors) when a
ref can't be found either locally or in a remote. So update
some code which checks for G_IO_ERROR_NOT_FOUND.
See these commits:
flatpak/flatpak@c0d5f1b
flatpak/flatpak@c028e0d
https://phabricator.endlessm.com/T26678","I think this would require doing a release of our fork of Flatpak which doesn't seem worth it.

Shouldn’t do — if the fork already has the right API in it, then just use the current flatpak package version from OBS (1.3.3+dev33.49c8941-0). Next time we update the fork, that version number should increase monotonically.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,255,2019-05-23T20:43:18Z,2019-05-29T03:28:12Z,2019-05-29T03:28:44Z,MERGED,True,15,8,2,https://github.com/mwleeds,libeos-updater-util: Check for new flatpak error code,1,[],https://github.com/endlessm/eos-updater/pull/255,https://github.com/mwleeds,6,https://github.com/endlessm/eos-updater/pull/255#issuecomment-496733123,"libflatpak now returns FLATPAK_ERROR_REF_NOT_FOUND instead
of G_IO_ERROR_NOT_FOUND (and sometimes other errors) when a
ref can't be found either locally or in a remote. So update
some code which checks for G_IO_ERROR_NOT_FOUND.
See these commits:
flatpak/flatpak@c0d5f1b
flatpak/flatpak@c028e0d
https://phabricator.endlessm.com/T26678","I think this would require doing a release of our fork of Flatpak which doesn't seem worth it.

Shouldn’t do — if the fork already has the right API in it, then just use the current flatpak package version from OBS (1.3.3+dev33.49c8941-0). Next time we update the fork, that version number should increase monotonically.

Okay, I made that change to debian/control so after OBS publishes the new build of flatpak we can merge this.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,256,2019-08-06T10:00:18Z,2019-08-14T10:35:54Z,2019-08-14T10:35:57Z,MERGED,True,3,3,3,https://github.com/wjt,Move eos-updater executable to /usr/libexec,1,[],https://github.com/endlessm/eos-updater/pull/256,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/256,"I constantly run eos-updater update rather than eos-updater-ctl update thanks to tab completion. There's no reason for this executable
to be in $PATH.
https://phabricator.endlessm.com/T27471","I constantly run eos-updater update rather than eos-updater-ctl update thanks to tab completion. There's no reason for this executable
to be in $PATH.
https://phabricator.endlessm.com/T27471",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,256,2019-08-06T10:00:18Z,2019-08-14T10:35:54Z,2019-08-14T10:35:57Z,MERGED,True,3,3,3,https://github.com/wjt,Move eos-updater executable to /usr/libexec,1,[],https://github.com/endlessm/eos-updater/pull/256,https://github.com/wjt,2,https://github.com/endlessm/eos-updater/pull/256#issuecomment-518602487,"I constantly run eos-updater update rather than eos-updater-ctl update thanks to tab completion. There's no reason for this executable
to be in $PATH.
https://phabricator.endlessm.com/T27471","Tested as follows:

Built the package locally
eos-dev-unlock
dpkg -i eos-updater_0-1_amd64.deb eos-updater-tools_0-1_amd64.deb gir1.2-eos-updater-0_0-1_amd64.deb
systemctl restart eos-updater.service
Verified with pgrep -a eos-updater that it is running from /usr/libexec/eos-updater
eos-updater-ctl update
Booted into the update",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,256,2019-08-06T10:00:18Z,2019-08-14T10:35:54Z,2019-08-14T10:35:57Z,MERGED,True,3,3,3,https://github.com/wjt,Move eos-updater executable to /usr/libexec,1,[],https://github.com/endlessm/eos-updater/pull/256,https://github.com/wjt,3,https://github.com/endlessm/eos-updater/pull/256#issuecomment-520255795,"I constantly run eos-updater update rather than eos-updater-ctl update thanks to tab completion. There's no reason for this executable
to be in $PATH.
https://phabricator.endlessm.com/T27471","The only one which comes to mind is:
wjt@camille:~$ cat /proc/`pidof eos-updater`/cgroup 
12:memory:/system.slice/eos-updater.service
11:rdma:/
10:pids:/system.slice/eos-updater.service
9:freezer:/
8:devices:/system.slice/eos-updater.service
7:cpuset:/
6:perf_event:/
5:net_cls,net_prio:/
4:blkio:/
3:cpu,cpuacct:/
2:hugetlb:/
1:name=systemd:/system.slice/eos-updater.service
0::/system.slice/eos-updater.service

Probably harder to forge?
.oO( should D-Bus grow GetConnectionUnixPidfd() → (h)? cf https://lwn.net/Articles/794707/ )",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,256,2019-08-06T10:00:18Z,2019-08-14T10:35:54Z,2019-08-14T10:35:57Z,MERGED,True,3,3,3,https://github.com/wjt,Move eos-updater executable to /usr/libexec,1,[],https://github.com/endlessm/eos-updater/pull/256,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/256#issuecomment-520361843,"I constantly run eos-updater update rather than eos-updater-ctl update thanks to tab completion. There's no reason for this executable
to be in $PATH.
https://phabricator.endlessm.com/T27471","Probably harder to forge?

The issue is not forging the identifying information; it’s the race between dbus-daemon returning an identifier, and the client process then looking that identifier up again. Particularly with PIDs, this is wide open to races with PID reuse. Currently, we can only get a limited amount of information about a peer race-free.
Supporting pidfds is a nice idea. I’ve filed an issue.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,256,2019-08-06T10:00:18Z,2019-08-14T10:35:54Z,2019-08-14T10:35:57Z,MERGED,True,3,3,3,https://github.com/wjt,Move eos-updater executable to /usr/libexec,1,[],https://github.com/endlessm/eos-updater/pull/256,https://github.com/wjt,5,https://github.com/endlessm/eos-updater/pull/256#issuecomment-521011652,"I constantly run eos-updater update rather than eos-updater-ctl update thanks to tab completion. There's no reason for this executable
to be in $PATH.
https://phabricator.endlessm.com/T27471","Probably harder to forge?

The issue is not forging the identifying information; it’s the race between dbus-daemon returning an identifier, and the client process then looking that identifier up again. Particularly with PIDs, this is wide open to races with PID reuse. Currently, we can only get a limited amount of information about a peer race-free.

Oh, right!",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,257,2019-09-06T21:59:29Z,2019-09-20T00:03:50Z,2019-09-20T00:04:02Z,CLOSED,False,19,0,5,https://github.com/mwleeds,eos-autoupdater: Add a timer for PAYG systems,1,[],https://github.com/endlessm/eos-updater/pull/257,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/257,"On PAYG Endless images, if eos-paygd hits a fatal error condition (such
as a seg fault), the whole system is brought down. This creates a
reliability issue, because if we ever have such a bug, and it happens on
every boot, and it happens early enough in the boot, it may prevent the
machine from ever updating and receiving the bug fix. The automatic
updater is currently configured to run 15 minutes after boot up, to give
NTP a chance to correct the clock. But this shouldn't be a concern for
PAYG computers, which should have their clocks set correctly during
provisioning. So introduce a new timer, eos-autoupdater-payg.timer,
which activates eos-autoupdater.service immediately after boot (really
after the network comes up since the service has After=network.target).
Use a kernel command line parameter to ensure the new timer only runs on
PAYG images, and the existing timer only runs on non-PAYG images.
Both timers also have RandomizedDelaySec=30m, to reduce the chances that
many computers on the same network will update at once and overload the
network. This means the update won't often happen immediately after the
network comes up, but seems like a worthwhile trade-off.
https://phabricator.endlessm.com/T27051","On PAYG Endless images, if eos-paygd hits a fatal error condition (such
as a seg fault), the whole system is brought down. This creates a
reliability issue, because if we ever have such a bug, and it happens on
every boot, and it happens early enough in the boot, it may prevent the
machine from ever updating and receiving the bug fix. The automatic
updater is currently configured to run 15 minutes after boot up, to give
NTP a chance to correct the clock. But this shouldn't be a concern for
PAYG computers, which should have their clocks set correctly during
provisioning. So introduce a new timer, eos-autoupdater-payg.timer,
which activates eos-autoupdater.service immediately after boot (really
after the network comes up since the service has After=network.target).
Use a kernel command line parameter to ensure the new timer only runs on
PAYG images, and the existing timer only runs on non-PAYG images.
Both timers also have RandomizedDelaySec=30m, to reduce the chances that
many computers on the same network will update at once and overload the
network. This means the update won't often happen immediately after the
network comes up, but seems like a worthwhile trade-off.
https://phabricator.endlessm.com/T27051",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,257,2019-09-06T21:59:29Z,2019-09-20T00:03:50Z,2019-09-20T00:04:02Z,CLOSED,False,19,0,5,https://github.com/mwleeds,eos-autoupdater: Add a timer for PAYG systems,1,[],https://github.com/endlessm/eos-updater/pull/257,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/257#issuecomment-529036748,"On PAYG Endless images, if eos-paygd hits a fatal error condition (such
as a seg fault), the whole system is brought down. This creates a
reliability issue, because if we ever have such a bug, and it happens on
every boot, and it happens early enough in the boot, it may prevent the
machine from ever updating and receiving the bug fix. The automatic
updater is currently configured to run 15 minutes after boot up, to give
NTP a chance to correct the clock. But this shouldn't be a concern for
PAYG computers, which should have their clocks set correctly during
provisioning. So introduce a new timer, eos-autoupdater-payg.timer,
which activates eos-autoupdater.service immediately after boot (really
after the network comes up since the service has After=network.target).
Use a kernel command line parameter to ensure the new timer only runs on
PAYG images, and the existing timer only runs on non-PAYG images.
Both timers also have RandomizedDelaySec=30m, to reduce the chances that
many computers on the same network will update at once and overload the
network. This means the update won't often happen immediately after the
network comes up, but seems like a worthwhile trade-off.
https://phabricator.endlessm.com/T27051",I filed this task about the deprecation warnings causing the Jenkins build to fail: https://phabricator.endlessm.com/T27723,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,257,2019-09-06T21:59:29Z,2019-09-20T00:03:50Z,2019-09-20T00:04:02Z,CLOSED,False,19,0,5,https://github.com/mwleeds,eos-autoupdater: Add a timer for PAYG systems,1,[],https://github.com/endlessm/eos-updater/pull/257,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/257#issuecomment-531176962,"On PAYG Endless images, if eos-paygd hits a fatal error condition (such
as a seg fault), the whole system is brought down. This creates a
reliability issue, because if we ever have such a bug, and it happens on
every boot, and it happens early enough in the boot, it may prevent the
machine from ever updating and receiving the bug fix. The automatic
updater is currently configured to run 15 minutes after boot up, to give
NTP a chance to correct the clock. But this shouldn't be a concern for
PAYG computers, which should have their clocks set correctly during
provisioning. So introduce a new timer, eos-autoupdater-payg.timer,
which activates eos-autoupdater.service immediately after boot (really
after the network comes up since the service has After=network.target).
Use a kernel command line parameter to ensure the new timer only runs on
PAYG images, and the existing timer only runs on non-PAYG images.
Both timers also have RandomizedDelaySec=30m, to reduce the chances that
many computers on the same network will update at once and overload the
network. This means the update won't often happen immediately after the
network comes up, but seems like a worthwhile trade-off.
https://phabricator.endlessm.com/T27051","Rather than add a new timer which is used for PAYG, I think we could probably fix this by fixing https://phabricator.endlessm.com/T16671, which is a way of removing the arbitrary 15 minute timeout on the main timer.
https://phabricator.endlessm.com/T16600 could also be investigated at the same time, since it looks quite simple and will require much of the same testing and context.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,257,2019-09-06T21:59:29Z,2019-09-20T00:03:50Z,2019-09-20T00:04:02Z,CLOSED,False,19,0,5,https://github.com/mwleeds,eos-autoupdater: Add a timer for PAYG systems,1,[],https://github.com/endlessm/eos-updater/pull/257,https://github.com/treitter,4,https://github.com/endlessm/eos-updater/pull/257#issuecomment-531980931,"On PAYG Endless images, if eos-paygd hits a fatal error condition (such
as a seg fault), the whole system is brought down. This creates a
reliability issue, because if we ever have such a bug, and it happens on
every boot, and it happens early enough in the boot, it may prevent the
machine from ever updating and receiving the bug fix. The automatic
updater is currently configured to run 15 minutes after boot up, to give
NTP a chance to correct the clock. But this shouldn't be a concern for
PAYG computers, which should have their clocks set correctly during
provisioning. So introduce a new timer, eos-autoupdater-payg.timer,
which activates eos-autoupdater.service immediately after boot (really
after the network comes up since the service has After=network.target).
Use a kernel command line parameter to ensure the new timer only runs on
PAYG images, and the existing timer only runs on non-PAYG images.
Both timers also have RandomizedDelaySec=30m, to reduce the chances that
many computers on the same network will update at once and overload the
network. This means the update won't often happen immediately after the
network comes up, but seems like a worthwhile trade-off.
https://phabricator.endlessm.com/T27051","Rather than add a new timer which is used for PAYG, I think we could probably fix this by fixing https://phabricator.endlessm.com/T16671, which is a way of removing the arbitrary 15 minute timeout on the main timer.

I agree this sounds like a better fix than adding another arbitrary timer.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,258,2019-09-24T12:25:51Z,2019-09-25T23:22:28Z,2019-09-25T23:22:31Z,MERGED,True,536,199,17,https://github.com/pwithnall,T27723 Fix GTimeVal deprecation warnings,3,[],https://github.com/endlessm/eos-updater/pull/258,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/258,https://phabricator.endlessm.com/T27723,https://phabricator.endlessm.com/T27723,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,258,2019-09-24T12:25:51Z,2019-09-25T23:22:28Z,2019-09-25T23:22:31Z,MERGED,True,536,199,17,https://github.com/pwithnall,T27723 Fix GTimeVal deprecation warnings,3,[],https://github.com/endlessm/eos-updater/pull/258,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/258#issuecomment-534699896,https://phabricator.endlessm.com/T27723,"Looks like the jenkins build fails because we only have glib 2.61.3:
The following packages have unmet dependencies:
 builddeps:/build : Depends: libglib2.0-dev (>= 2.62.0) but 2.61.3+dev16.56ea7e8-0bem1 is to be installed",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,258,2019-09-24T12:25:51Z,2019-09-25T23:22:28Z,2019-09-25T23:22:31Z,MERGED,True,536,199,17,https://github.com/pwithnall,T27723 Fix GTimeVal deprecation warnings,3,[],https://github.com/endlessm/eos-updater/pull/258,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/258#issuecomment-535071536,https://phabricator.endlessm.com/T27723,"bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,258,2019-09-24T12:25:51Z,2019-09-25T23:22:28Z,2019-09-25T23:22:31Z,MERGED,True,536,199,17,https://github.com/pwithnall,T27723 Fix GTimeVal deprecation warnings,3,[],https://github.com/endlessm/eos-updater/pull/258,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/258#issuecomment-535096666,https://phabricator.endlessm.com/T27723,"The updated GLib has landed, and I’ve fixed a few more warnings in this branch, so it needs re-reviewing.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,258,2019-09-24T12:25:51Z,2019-09-25T23:22:28Z,2019-09-25T23:22:31Z,MERGED,True,536,199,17,https://github.com/pwithnall,T27723 Fix GTimeVal deprecation warnings,3,[],https://github.com/endlessm/eos-updater/pull/258,https://github.com/mwleeds,5,https://github.com/endlessm/eos-updater/pull/258#issuecomment-535262580,https://phabricator.endlessm.com/T27723,"Unfortunate that we're adding so much boilerplate code, but LGTM",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,259,2019-10-03T15:03:18Z,2019-10-08T14:25:26Z,2019-10-08T14:25:26Z,MERGED,True,7,0,2,https://github.com/valentindavid,Allow compilation against upstream OSTree,1,[],https://github.com/endlessm/eos-updater/pull/259,https://github.com/valentindavid,1,https://github.com/endlessm/eos-updater/pull/259,"ostree_repo_get_commit_sizes is not available on upstream OSTree. As
a result, it failed to compile against it.  When the function is not
available, only the fallback to the call to
ostree_repo_get_commit_sizes is executed.","ostree_repo_get_commit_sizes is not available on upstream OSTree. As
a result, it failed to compile against it.  When the function is not
available, only the fallback to the call to
ostree_repo_get_commit_sizes is executed.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,259,2019-10-03T15:03:18Z,2019-10-08T14:25:26Z,2019-10-08T14:25:26Z,MERGED,True,7,0,2,https://github.com/valentindavid,Allow compilation against upstream OSTree,1,[],https://github.com/endlessm/eos-updater/pull/259,https://github.com/eos-shell-build,2,https://github.com/endlessm/eos-updater/pull/259#issuecomment-537985410,"ostree_repo_get_commit_sizes is not available on upstream OSTree. As
a result, it failed to compile against it.  When the function is not
available, only the fallback to the call to
ostree_repo_get_commit_sizes is executed.",I don't recognize the submitter as a member of @endlessm. Can somebody in @endlessm verify the patch? See https://phabricator.endlessm.com/w/software/build/ci-integration/#pull-requests for more details.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,259,2019-10-03T15:03:18Z,2019-10-08T14:25:26Z,2019-10-08T14:25:26Z,MERGED,True,7,0,2,https://github.com/valentindavid,Allow compilation against upstream OSTree,1,[],https://github.com/endlessm/eos-updater/pull/259,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/259#issuecomment-539530628,"ostree_repo_get_commit_sizes is not available on upstream OSTree. As
a result, it failed to compile against it.  When the function is not
available, only the fallback to the call to
ostree_repo_get_commit_sizes is executed.","@eos-shell-build, test this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,259,2019-10-03T15:03:18Z,2019-10-08T14:25:26Z,2019-10-08T14:25:26Z,MERGED,True,7,0,2,https://github.com/valentindavid,Allow compilation against upstream OSTree,1,[],https://github.com/endlessm/eos-updater/pull/259,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/259#issuecomment-539530669,"ostree_repo_get_commit_sizes is not available on upstream OSTree. As
a result, it failed to compile against it.  When the function is not
available, only the fallback to the call to
ostree_repo_get_commit_sizes is executed.",This looks OK to me.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,260,2019-10-05T23:39:28Z,2019-10-16T11:17:24Z,2019-10-16T11:17:42Z,MERGED,True,3,1,1,https://github.com/mwleeds,eos-autoupdater: Lower OnBootSec from 15m to 3m,1,[],https://github.com/endlessm/eos-updater/pull/260,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/260,"This commit makes eos-autoupdater.timer potentially start 3 minutes
after boot, rather than 15 minutes after boot. Because we have
RandomizedDelaySec=30m, in practice it will start between 3 and 33
minutes after boot. The primary reason for the change is that we will
soon be shipping PAYG Endless computers, on which if the eos-paygd
daemon crashes or exits with an error code, the whole computer shuts
down after a 20 minute grace period. This poses a risk of making
computers stuck in a boot loop and never receiving an update which might
fix the problem, in case the hypothetical crash happens before
eos-updater runs. So make such a boot loop less likely by having the
updater run automatically earlier after boot.
The reason the updater currently runs 15 minutes after boot is to give
ntp a chance to update an incorrect clock to the correct time, because a
sufficiently incorrect clock would prevent GPG signature verification
from working.[1] One might think this problem could be solved by adding
After=time-sync.target to the unit, but in practice that target is
reached before the clock is synchronized.[2] And if we were to enable
systemd-time-wait-sync.service to make time-sync.target work as
advertised, it's not clear when updates would be triggered on offline
machines, and according to the man page, systemd-time-wait-sync.service
is unreliable when used in conjunction with ntp rather than
systemd-timesyncd.service (and Endless uses ntp).[3] I think we should
just accept that there's some chance updates will fail due to a wrong
clock or for other reasons, and the updater will just try again when
OnUnitInactiveSec=1h is reached or a reboot occurs.
By starting 3 minutes after boot, we're giving the machine some time to
get online and get the clock corrected, without blocking on the
completion of either of those tasks. It wouldn't make sense to wait for
an Internet connection because we want LAN/USB updates to happen
automatically.[4] Also note that After=network-online.target doesn't
guarantee a working Internet connection, because
NetworkManager-wait-online.service only waits until NetworkManager has
started up.
[1] https://github.com/endlessm/eos-shell/issues/1478
[2] systemd/systemd#5097
[3] https://www.freedesktop.org/software/systemd/man/systemd-time-wait-sync.service.html
[4] https://phabricator.endlessm.com/T21250
https://phabricator.endlessm.com/T27051","This commit makes eos-autoupdater.timer potentially start 3 minutes
after boot, rather than 15 minutes after boot. Because we have
RandomizedDelaySec=30m, in practice it will start between 3 and 33
minutes after boot. The primary reason for the change is that we will
soon be shipping PAYG Endless computers, on which if the eos-paygd
daemon crashes or exits with an error code, the whole computer shuts
down after a 20 minute grace period. This poses a risk of making
computers stuck in a boot loop and never receiving an update which might
fix the problem, in case the hypothetical crash happens before
eos-updater runs. So make such a boot loop less likely by having the
updater run automatically earlier after boot.
The reason the updater currently runs 15 minutes after boot is to give
ntp a chance to update an incorrect clock to the correct time, because a
sufficiently incorrect clock would prevent GPG signature verification
from working.[1] One might think this problem could be solved by adding
After=time-sync.target to the unit, but in practice that target is
reached before the clock is synchronized.[2] And if we were to enable
systemd-time-wait-sync.service to make time-sync.target work as
advertised, it's not clear when updates would be triggered on offline
machines, and according to the man page, systemd-time-wait-sync.service
is unreliable when used in conjunction with ntp rather than
systemd-timesyncd.service (and Endless uses ntp).[3] I think we should
just accept that there's some chance updates will fail due to a wrong
clock or for other reasons, and the updater will just try again when
OnUnitInactiveSec=1h is reached or a reboot occurs.
By starting 3 minutes after boot, we're giving the machine some time to
get online and get the clock corrected, without blocking on the
completion of either of those tasks. It wouldn't make sense to wait for
an Internet connection because we want LAN/USB updates to happen
automatically.[4] Also note that After=network-online.target doesn't
guarantee a working Internet connection, because
NetworkManager-wait-online.service only waits until NetworkManager has
started up.
[1] https://github.com/endlessm/eos-shell/issues/1478
[2] systemd/systemd#5097
[3] https://www.freedesktop.org/software/systemd/man/systemd-time-wait-sync.service.html
[4] https://phabricator.endlessm.com/T21250
https://phabricator.endlessm.com/T27051",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,260,2019-10-05T23:39:28Z,2019-10-16T11:17:24Z,2019-10-16T11:17:42Z,MERGED,True,3,1,1,https://github.com/mwleeds,eos-autoupdater: Lower OnBootSec from 15m to 3m,1,[],https://github.com/endlessm/eos-updater/pull/260,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/260#issuecomment-539607269,"This commit makes eos-autoupdater.timer potentially start 3 minutes
after boot, rather than 15 minutes after boot. Because we have
RandomizedDelaySec=30m, in practice it will start between 3 and 33
minutes after boot. The primary reason for the change is that we will
soon be shipping PAYG Endless computers, on which if the eos-paygd
daemon crashes or exits with an error code, the whole computer shuts
down after a 20 minute grace period. This poses a risk of making
computers stuck in a boot loop and never receiving an update which might
fix the problem, in case the hypothetical crash happens before
eos-updater runs. So make such a boot loop less likely by having the
updater run automatically earlier after boot.
The reason the updater currently runs 15 minutes after boot is to give
ntp a chance to update an incorrect clock to the correct time, because a
sufficiently incorrect clock would prevent GPG signature verification
from working.[1] One might think this problem could be solved by adding
After=time-sync.target to the unit, but in practice that target is
reached before the clock is synchronized.[2] And if we were to enable
systemd-time-wait-sync.service to make time-sync.target work as
advertised, it's not clear when updates would be triggered on offline
machines, and according to the man page, systemd-time-wait-sync.service
is unreliable when used in conjunction with ntp rather than
systemd-timesyncd.service (and Endless uses ntp).[3] I think we should
just accept that there's some chance updates will fail due to a wrong
clock or for other reasons, and the updater will just try again when
OnUnitInactiveSec=1h is reached or a reboot occurs.
By starting 3 minutes after boot, we're giving the machine some time to
get online and get the clock corrected, without blocking on the
completion of either of those tasks. It wouldn't make sense to wait for
an Internet connection because we want LAN/USB updates to happen
automatically.[4] Also note that After=network-online.target doesn't
guarantee a working Internet connection, because
NetworkManager-wait-online.service only waits until NetworkManager has
started up.
[1] https://github.com/endlessm/eos-shell/issues/1478
[2] systemd/systemd#5097
[3] https://www.freedesktop.org/software/systemd/man/systemd-time-wait-sync.service.html
[4] https://phabricator.endlessm.com/T21250
https://phabricator.endlessm.com/T27051","I didn't realize the purpose of that was for ntp. Thanks for digging that up. I always thought it was just so we didn't start immediately hogging your bandwidth as soon as the system starts. I guess in general I don't think there's any real harm in trying to start earlier. As @mwleeds notes, there will always be a possibility that updates fail because of clock skew, and the autoupdater will just try again later.
I think @dsd would have more information about how this would affect slow booting machines. One thing that might help on slow booting machines is using OnActiveSec rather than OnBootSec. This would not include the super slow early booting part in the timing. So, if you had a machine that took several minutes to boot, OnBootSec might trigger the update immediately. But that change is a bit orthogonal and I don't know exactly how that interacts with the paygd timing.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,260,2019-10-05T23:39:28Z,2019-10-16T11:17:24Z,2019-10-16T11:17:42Z,MERGED,True,3,1,1,https://github.com/mwleeds,eos-autoupdater: Lower OnBootSec from 15m to 3m,1,[],https://github.com/endlessm/eos-updater/pull/260,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/260#issuecomment-539610998,"This commit makes eos-autoupdater.timer potentially start 3 minutes
after boot, rather than 15 minutes after boot. Because we have
RandomizedDelaySec=30m, in practice it will start between 3 and 33
minutes after boot. The primary reason for the change is that we will
soon be shipping PAYG Endless computers, on which if the eos-paygd
daemon crashes or exits with an error code, the whole computer shuts
down after a 20 minute grace period. This poses a risk of making
computers stuck in a boot loop and never receiving an update which might
fix the problem, in case the hypothetical crash happens before
eos-updater runs. So make such a boot loop less likely by having the
updater run automatically earlier after boot.
The reason the updater currently runs 15 minutes after boot is to give
ntp a chance to update an incorrect clock to the correct time, because a
sufficiently incorrect clock would prevent GPG signature verification
from working.[1] One might think this problem could be solved by adding
After=time-sync.target to the unit, but in practice that target is
reached before the clock is synchronized.[2] And if we were to enable
systemd-time-wait-sync.service to make time-sync.target work as
advertised, it's not clear when updates would be triggered on offline
machines, and according to the man page, systemd-time-wait-sync.service
is unreliable when used in conjunction with ntp rather than
systemd-timesyncd.service (and Endless uses ntp).[3] I think we should
just accept that there's some chance updates will fail due to a wrong
clock or for other reasons, and the updater will just try again when
OnUnitInactiveSec=1h is reached or a reboot occurs.
By starting 3 minutes after boot, we're giving the machine some time to
get online and get the clock corrected, without blocking on the
completion of either of those tasks. It wouldn't make sense to wait for
an Internet connection because we want LAN/USB updates to happen
automatically.[4] Also note that After=network-online.target doesn't
guarantee a working Internet connection, because
NetworkManager-wait-online.service only waits until NetworkManager has
started up.
[1] https://github.com/endlessm/eos-shell/issues/1478
[2] systemd/systemd#5097
[3] https://www.freedesktop.org/software/systemd/man/systemd-time-wait-sync.service.html
[4] https://phabricator.endlessm.com/T21250
https://phabricator.endlessm.com/T27051","One thing that might help on slow booting machines is using OnActiveSec rather than OnBootSec. This would not include the super slow early booting part in the timing. So, if you had a machine that took several minutes to boot, OnBootSec might trigger the update immediately. But that change is a bit orthogonal and I don't know exactly how that interacts with the paygd timing.

If that interacts OK with the payg stuff, that does sound like a good improvement to make. That’s something new learned today :D",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,260,2019-10-05T23:39:28Z,2019-10-16T11:17:24Z,2019-10-16T11:17:42Z,MERGED,True,3,1,1,https://github.com/mwleeds,eos-autoupdater: Lower OnBootSec from 15m to 3m,1,[],https://github.com/endlessm/eos-updater/pull/260,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/260#issuecomment-540057544,"This commit makes eos-autoupdater.timer potentially start 3 minutes
after boot, rather than 15 minutes after boot. Because we have
RandomizedDelaySec=30m, in practice it will start between 3 and 33
minutes after boot. The primary reason for the change is that we will
soon be shipping PAYG Endless computers, on which if the eos-paygd
daemon crashes or exits with an error code, the whole computer shuts
down after a 20 minute grace period. This poses a risk of making
computers stuck in a boot loop and never receiving an update which might
fix the problem, in case the hypothetical crash happens before
eos-updater runs. So make such a boot loop less likely by having the
updater run automatically earlier after boot.
The reason the updater currently runs 15 minutes after boot is to give
ntp a chance to update an incorrect clock to the correct time, because a
sufficiently incorrect clock would prevent GPG signature verification
from working.[1] One might think this problem could be solved by adding
After=time-sync.target to the unit, but in practice that target is
reached before the clock is synchronized.[2] And if we were to enable
systemd-time-wait-sync.service to make time-sync.target work as
advertised, it's not clear when updates would be triggered on offline
machines, and according to the man page, systemd-time-wait-sync.service
is unreliable when used in conjunction with ntp rather than
systemd-timesyncd.service (and Endless uses ntp).[3] I think we should
just accept that there's some chance updates will fail due to a wrong
clock or for other reasons, and the updater will just try again when
OnUnitInactiveSec=1h is reached or a reboot occurs.
By starting 3 minutes after boot, we're giving the machine some time to
get online and get the clock corrected, without blocking on the
completion of either of those tasks. It wouldn't make sense to wait for
an Internet connection because we want LAN/USB updates to happen
automatically.[4] Also note that After=network-online.target doesn't
guarantee a working Internet connection, because
NetworkManager-wait-online.service only waits until NetworkManager has
started up.
[1] https://github.com/endlessm/eos-shell/issues/1478
[2] systemd/systemd#5097
[3] https://www.freedesktop.org/software/systemd/man/systemd-time-wait-sync.service.html
[4] https://phabricator.endlessm.com/T21250
https://phabricator.endlessm.com/T27051","In any case, I think there should be some follow-up tasks about fixing those systemd issues so that we can trigger an update check when the clock has settled, and get rid of the hard-coded value permanently.

I don't think so. If we ever have to wait for the clock to settle, that means we're not allowing offline updates to happen. An offline machine might never reach an NTP server, but should still be allowed to automatically update from LAN/USB. I don't think a hard-coded value is such a bad thing in this case.


One thing that might help on slow booting machines is using OnActiveSec rather than OnBootSec. This would not include the super slow early booting part in the timing. So, if you had a machine that took several minutes to boot, OnBootSec might trigger the update immediately. But that change is a bit orthogonal and I don't know exactly how that interacts with the paygd timing.

If that interacts OK with the payg stuff, that does sound like a good improvement to make. That’s something new learned today :D

Using OnActiveSec does mean we'll be starting later relative to when eos-paygd starts (in the initramfs), but it also means the update is more likely to be successful (since it's more likely that we're online). I'll change the PR.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,260,2019-10-05T23:39:28Z,2019-10-16T11:17:24Z,2019-10-16T11:17:42Z,MERGED,True,3,1,1,https://github.com/mwleeds,eos-autoupdater: Lower OnBootSec from 15m to 3m,1,[],https://github.com/endlessm/eos-updater/pull/260,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/260#issuecomment-540690412,"This commit makes eos-autoupdater.timer potentially start 3 minutes
after boot, rather than 15 minutes after boot. Because we have
RandomizedDelaySec=30m, in practice it will start between 3 and 33
minutes after boot. The primary reason for the change is that we will
soon be shipping PAYG Endless computers, on which if the eos-paygd
daemon crashes or exits with an error code, the whole computer shuts
down after a 20 minute grace period. This poses a risk of making
computers stuck in a boot loop and never receiving an update which might
fix the problem, in case the hypothetical crash happens before
eos-updater runs. So make such a boot loop less likely by having the
updater run automatically earlier after boot.
The reason the updater currently runs 15 minutes after boot is to give
ntp a chance to update an incorrect clock to the correct time, because a
sufficiently incorrect clock would prevent GPG signature verification
from working.[1] One might think this problem could be solved by adding
After=time-sync.target to the unit, but in practice that target is
reached before the clock is synchronized.[2] And if we were to enable
systemd-time-wait-sync.service to make time-sync.target work as
advertised, it's not clear when updates would be triggered on offline
machines, and according to the man page, systemd-time-wait-sync.service
is unreliable when used in conjunction with ntp rather than
systemd-timesyncd.service (and Endless uses ntp).[3] I think we should
just accept that there's some chance updates will fail due to a wrong
clock or for other reasons, and the updater will just try again when
OnUnitInactiveSec=1h is reached or a reboot occurs.
By starting 3 minutes after boot, we're giving the machine some time to
get online and get the clock corrected, without blocking on the
completion of either of those tasks. It wouldn't make sense to wait for
an Internet connection because we want LAN/USB updates to happen
automatically.[4] Also note that After=network-online.target doesn't
guarantee a working Internet connection, because
NetworkManager-wait-online.service only waits until NetworkManager has
started up.
[1] https://github.com/endlessm/eos-shell/issues/1478
[2] systemd/systemd#5097
[3] https://www.freedesktop.org/software/systemd/man/systemd-time-wait-sync.service.html
[4] https://phabricator.endlessm.com/T21250
https://phabricator.endlessm.com/T27051","An offline machine might never reach an NTP server, but should still be allowed to automatically update from LAN/USB. I don't think a hard-coded value is such a bad thing in this case.

I wonder if offline machines should always advertise their clocks as synchronised, in the sense that they are as synchronised as they are ever going to get? Because otherwise systemd-time-wait-sync.service is useless, and that will (eventually, if it doesn’t now) affect services other than eos-paygd which are ordered based on systemd-time-wait-sync.service.
So I’m proposing that eos-paygd does depend on systemd-time-wait-sync.service, and we add another service, only on known-offline machines, which touches /run/systemd/timesync/synchronized on boot.
Yes/No?
(If ‘yes’, https://phabricator.endlessm.com/T16671 should probably be reopened.)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,260,2019-10-05T23:39:28Z,2019-10-16T11:17:24Z,2019-10-16T11:17:42Z,MERGED,True,3,1,1,https://github.com/mwleeds,eos-autoupdater: Lower OnBootSec from 15m to 3m,1,[],https://github.com/endlessm/eos-updater/pull/260,https://github.com/mwleeds,6,https://github.com/endlessm/eos-updater/pull/260#issuecomment-541190490,"This commit makes eos-autoupdater.timer potentially start 3 minutes
after boot, rather than 15 minutes after boot. Because we have
RandomizedDelaySec=30m, in practice it will start between 3 and 33
minutes after boot. The primary reason for the change is that we will
soon be shipping PAYG Endless computers, on which if the eos-paygd
daemon crashes or exits with an error code, the whole computer shuts
down after a 20 minute grace period. This poses a risk of making
computers stuck in a boot loop and never receiving an update which might
fix the problem, in case the hypothetical crash happens before
eos-updater runs. So make such a boot loop less likely by having the
updater run automatically earlier after boot.
The reason the updater currently runs 15 minutes after boot is to give
ntp a chance to update an incorrect clock to the correct time, because a
sufficiently incorrect clock would prevent GPG signature verification
from working.[1] One might think this problem could be solved by adding
After=time-sync.target to the unit, but in practice that target is
reached before the clock is synchronized.[2] And if we were to enable
systemd-time-wait-sync.service to make time-sync.target work as
advertised, it's not clear when updates would be triggered on offline
machines, and according to the man page, systemd-time-wait-sync.service
is unreliable when used in conjunction with ntp rather than
systemd-timesyncd.service (and Endless uses ntp).[3] I think we should
just accept that there's some chance updates will fail due to a wrong
clock or for other reasons, and the updater will just try again when
OnUnitInactiveSec=1h is reached or a reboot occurs.
By starting 3 minutes after boot, we're giving the machine some time to
get online and get the clock corrected, without blocking on the
completion of either of those tasks. It wouldn't make sense to wait for
an Internet connection because we want LAN/USB updates to happen
automatically.[4] Also note that After=network-online.target doesn't
guarantee a working Internet connection, because
NetworkManager-wait-online.service only waits until NetworkManager has
started up.
[1] https://github.com/endlessm/eos-shell/issues/1478
[2] systemd/systemd#5097
[3] https://www.freedesktop.org/software/systemd/man/systemd-time-wait-sync.service.html
[4] https://phabricator.endlessm.com/T21250
https://phabricator.endlessm.com/T27051","An offline machine might never reach an NTP server, but should still be allowed to automatically update from LAN/USB. I don't think a hard-coded value is such a bad thing in this case.

I wonder if offline machines should always advertise their clocks as synchronised, in the sense that they are as synchronised as they are ever going to get? Because otherwise systemd-time-wait-sync.service is useless, and that will (eventually, if it doesn’t now) affect services other than eos-paygd which are ordered based on systemd-time-wait-sync.service.
So I’m proposing that eos-paygd does depend on systemd-time-wait-sync.service, and we add another service, only on known-offline machines, which touches /run/systemd/timesync/synchronized on boot.
Yes/No?
(If ‘yes’, https://phabricator.endlessm.com/T16671 should probably be reopened.)

To be clear I don't know what the behavior is if you order your service after systemd-time-wait-sync.service and you're offline. But even if currently it's okay (e.g. there's a timeout and your service is started after 90 seconds or something) that seems like the type of thing that isn't guaranteed to continue to be the case; systemd could decide to change that behavior.
I don't agree that systemd-time-wait-sync.service has to work offline and otherwise it's a bug. Perhaps services should only require that one if they expect to only work in an online environment and truly require a synchronized clock to work. I would argue that eos-updater doesn't strictly require a synchronized clock to work; if the clock is a bit off the update will still work and if the clock is far off from reality we hit a non-fatal error and try again later. It's not as if we're providing a service like Time-based OTP that only works if the clock is correct.
I also don't think it's a good idea to make a service that's only used on offline machines and have it pretend the clock is synchronized because (a) it's not feasible to know which computers will be offline at image build time (we only sometimes know and even then don't need the extra burden of keeping that config option accurate) and (b) maybe some OS component actually does need the clock to be synchronized, and falsely claiming it is by touching /run/systemd/timesync/synchronized might cause that component to malfunction.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,261,2019-11-06T16:10:59Z,2019-11-06T16:31:49Z,2019-11-06T20:34:03Z,MERGED,True,5,0,1,https://github.com/wjt,eos-updater-flatpak-installer: skip parental controls checks,1,[],https://github.com/endlessm/eos-updater/pull/261,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/261,"Without this, deploying Flatpaks after a reboot fails with the following
in the journal (line-wrapped for legibility):
Attempting to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3
Failed to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3:
  Could not connect: No such file or directory
eos-updater-flatpak-installer: Couldn’t apply some flatpak update actions for this boot:
  Could not connect: No such file or directory

This problem does not occur if I trigger this service once the system is
fully booted.
I believe this is because deploying a Flatpak now involves a parental
controls check, which involves talking to accountsservice on the system
bus, neither of which are running at the point where this service runs.
Work around this by using the same workaround we used in the image
builder to skip the parental controls check.
https://phabricator.endlessm.com/T28530","Without this, deploying Flatpaks after a reboot fails with the following
in the journal (line-wrapped for legibility):
Attempting to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3
Failed to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3:
  Could not connect: No such file or directory
eos-updater-flatpak-installer: Couldn’t apply some flatpak update actions for this boot:
  Could not connect: No such file or directory

This problem does not occur if I trigger this service once the system is
fully booted.
I believe this is because deploying a Flatpak now involves a parental
controls check, which involves talking to accountsservice on the system
bus, neither of which are running at the point where this service runs.
Work around this by using the same workaround we used in the image
builder to skip the parental controls check.
https://phabricator.endlessm.com/T28530",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,261,2019-11-06T16:10:59Z,2019-11-06T16:31:49Z,2019-11-06T20:34:03Z,MERGED,True,5,0,1,https://github.com/wjt,eos-updater-flatpak-installer: skip parental controls checks,1,[],https://github.com/endlessm/eos-updater/pull/261,https://github.com/wjt,2,https://github.com/endlessm/eos-updater/pull/261#issuecomment-550383042,"Without this, deploying Flatpaks after a reboot fails with the following
in the journal (line-wrapped for legibility):
Attempting to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3
Failed to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3:
  Could not connect: No such file or directory
eos-updater-flatpak-installer: Couldn’t apply some flatpak update actions for this boot:
  Could not connect: No such file or directory

This problem does not occur if I trigger this service once the system is
fully booted.
I believe this is because deploying a Flatpak now involves a parental
controls check, which involves talking to accountsservice on the system
bus, neither of which are running at the point where this service runs.
Work around this by using the same workaround we used in the image
builder to skip the parental controls check.
https://phabricator.endlessm.com/T28530","I tested this change by adding that line to a copy of the file in /etc/systemd/system, deleting /var/.updated then rebooting. Hack appeared on my desktop.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,261,2019-11-06T16:10:59Z,2019-11-06T16:31:49Z,2019-11-06T20:34:03Z,MERGED,True,5,0,1,https://github.com/wjt,eos-updater-flatpak-installer: skip parental controls checks,1,[],https://github.com/endlessm/eos-updater/pull/261,https://github.com/ramcq,3,https://github.com/endlessm/eos-updater/pull/261#issuecomment-550488678,"Without this, deploying Flatpaks after a reboot fails with the following
in the journal (line-wrapped for legibility):
Attempting to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3
Failed to install eos-apps:app/com.hack_computer.Clubhouse/x86_64/eos3:
  Could not connect: No such file or directory
eos-updater-flatpak-installer: Couldn’t apply some flatpak update actions for this boot:
  Could not connect: No such file or directory

This problem does not occur if I trigger this service once the system is
fully booted.
I believe this is because deploying a Flatpak now involves a parental
controls check, which involves talking to accountsservice on the system
bus, neither of which are running at the point where this service runs.
Work around this by using the same workaround we used in the image
builder to skip the parental controls check.
https://phabricator.endlessm.com/T28530","LGTM - maybe in the future we should reorder the service to run after the required deps though.

We use this system (hopefully) very rarely and only when we Really Want To, so I think it's reasonable for the system to circumvent the parental checks. The risk of not doing that is that we get into the danger zone of having boot dependency cycles where fixup jobs are trying to run on the config files / state of services which have been started. The ""needs update"" jobs run very early for this reason.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,262,2019-12-06T01:59:39Z,2019-12-11T20:25:32Z,2019-12-11T20:25:36Z,MERGED,True,93,28,4,https://github.com/mwleeds,Fix updates from 3.3.19,3,[],https://github.com/endlessm/eos-updater/pull/262,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/262,https://phabricator.endlessm.com/T28626,https://phabricator.endlessm.com/T28626,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,262,2019-12-06T01:59:39Z,2019-12-11T20:25:32Z,2019-12-11T20:25:36Z,MERGED,True,93,28,4,https://github.com/mwleeds,Fix updates from 3.3.19,3,[],https://github.com/endlessm/eos-updater/pull/262,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/262#issuecomment-562399384,https://phabricator.endlessm.com/T28626,"I know adding a debug message print on an old stable branch might seem strange, but if for some reason this doesn't fully fix updates from 3.3.19, it will be helpful to have.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,262,2019-12-06T01:59:39Z,2019-12-11T20:25:32Z,2019-12-11T20:25:36Z,MERGED,True,93,28,4,https://github.com/mwleeds,Fix updates from 3.3.19,3,[],https://github.com/endlessm/eos-updater/pull/262,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/262#issuecomment-562589768,https://phabricator.endlessm.com/T28626,"This looks like a good collection of fixes to me, aside from my question above.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,262,2019-12-06T01:59:39Z,2019-12-11T20:25:32Z,2019-12-11T20:25:36Z,MERGED,True,93,28,4,https://github.com/mwleeds,Fix updates from 3.3.19,3,[],https://github.com/endlessm/eos-updater/pull/262,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/262#issuecomment-562762636,https://phabricator.endlessm.com/T28626,I checked that updates still work from 3.3.19 with the fixup commit.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,262,2019-12-06T01:59:39Z,2019-12-11T20:25:32Z,2019-12-11T20:25:36Z,MERGED,True,93,28,4,https://github.com/mwleeds,Fix updates from 3.3.19,3,[],https://github.com/endlessm/eos-updater/pull/262,https://github.com/pwithnall,5,https://github.com/endlessm/eos-updater/pull/262#issuecomment-564571406,https://phabricator.endlessm.com/T28626,"I recommend that the extra unit test coverage is added, but I’m not going to block on that.
In any case, the fixup commits need to be squashed in; feel free to merge once that’s done.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,263,2019-12-06T02:11:22Z,2019-12-11T20:41:27Z,2019-12-11T20:41:35Z,MERGED,True,93,28,4,https://github.com/mwleeds,T28626 forwardport,3,[],https://github.com/endlessm/eos-updater/pull/263,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/263,"Cherry-pick of commits from #262. Only one minor difference which is noted in the commit message.
https://phabricator.endlessm.com/T28626","Cherry-pick of commits from #262. Only one minor difference which is noted in the commit message.
https://phabricator.endlessm.com/T28626",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,263,2019-12-06T02:11:22Z,2019-12-11T20:41:27Z,2019-12-11T20:41:35Z,MERGED,True,93,28,4,https://github.com/mwleeds,T28626 forwardport,3,[],https://github.com/endlessm/eos-updater/pull/263,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/263#issuecomment-562734513,"Cherry-pick of commits from #262. Only one minor difference which is noted in the commit message.
https://phabricator.endlessm.com/T28626",(this will need to be updated when #262 is finalized),True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,263,2019-12-06T02:11:22Z,2019-12-11T20:41:27Z,2019-12-11T20:41:35Z,MERGED,True,93,28,4,https://github.com/mwleeds,T28626 forwardport,3,[],https://github.com/endlessm/eos-updater/pull/263,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/263#issuecomment-564720643,"Cherry-pick of commits from #262. Only one minor difference which is noted in the commit message.
https://phabricator.endlessm.com/T28626",Now this matches the commits on the eos3.3 branch.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,264,2019-12-16T19:46:22Z,2019-12-17T16:04:21Z,2019-12-17T16:04:24Z,MERGED,True,138,2,2,https://github.com/mwleeds,T23385 backport to eos3.3,3,[],https://github.com/endlessm/eos-updater/pull/264,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/264,"This is a backport of #227 to the eos3.3 branch for the purpose of QA. See the discussion in the ticket.
https://phabricator.endlessm.com/T23385","This is a backport of #227 to the eos3.3 branch for the purpose of QA. See the discussion in the ticket.
https://phabricator.endlessm.com/T23385",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,264,2019-12-16T19:46:22Z,2019-12-17T16:04:21Z,2019-12-17T16:04:24Z,MERGED,True,138,2,2,https://github.com/mwleeds,T23385 backport to eos3.3,3,[],https://github.com/endlessm/eos-updater/pull/264,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/264#issuecomment-566214138,"This is a backport of #227 to the eos3.3 branch for the purpose of QA. See the discussion in the ticket.
https://phabricator.endlessm.com/T23385","For anyone who's curious, the actual cleaning up of the pre-checkpoint ref occurs in apply_internal in eos-updater-apply.c.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,264,2019-12-16T19:46:22Z,2019-12-17T16:04:21Z,2019-12-17T16:04:24Z,MERGED,True,138,2,2,https://github.com/mwleeds,T23385 backport to eos3.3,3,[],https://github.com/endlessm/eos-updater/pull/264,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/264#issuecomment-566339639,"This is a backport of #227 to the eos3.3 branch for the purpose of QA. See the discussion in the ticket.
https://phabricator.endlessm.com/T23385",Had to make a few changes to account for differences between eos3.3 and master. They're noted in the commit messages.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,265,2020-01-07T00:36:11Z,2020-01-07T18:15:18Z,2020-01-07T18:15:37Z,MERGED,True,9,5,1,https://github.com/mwleeds,eufi: Fix example JSON in docs,1,[],https://github.com/endlessm/eos-updater/pull/265,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/265,"Fix a few problems with the example JSON:

The collection-id and remote fields are both required for install
actions.
The collection-id field is not allowed for uninstall actions.
The collection ID for Endless runtimes is com.endlessm.Os not
com.endlessm.Runtimes","Fix a few problems with the example JSON:

The collection-id and remote fields are both required for install
actions.
The collection-id field is not allowed for uninstall actions.
The collection ID for Endless runtimes is com.endlessm.Os not
com.endlessm.Runtimes",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,266,2020-01-27T19:19:14Z,2020-01-31T18:28:58Z,2020-01-31T18:29:05Z,MERGED,True,196,24,4,https://github.com/dbnicholson,poll: Use ostree_commit_get_object_sizes if available,3,[],https://github.com/endlessm/eos-updater/pull/266,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/266,"OSTree upstream recently gained an API to return the parsed entries in
the ostree.sizes metadata[1]. Split out a helper function and use it
if it's available to sum the various commit size properies. There is one
slight behavior change here - the updater only continues on error if the
error is G_IO_ERROR_NOT_FOUND. This is what both APIs return when
ostree.sizes does not exist as well as what's now set when neither
APIs are available.

ostreedev/ostree#1957

https://phabricator.endlessm.com/T18171","OSTree upstream recently gained an API to return the parsed entries in
the ostree.sizes metadata[1]. Split out a helper function and use it
if it's available to sum the various commit size properies. There is one
slight behavior change here - the updater only continues on error if the
error is G_IO_ERROR_NOT_FOUND. This is what both APIs return when
ostree.sizes does not exist as well as what's now set when neither
APIs are available.

ostreedev/ostree#1957

https://phabricator.endlessm.com/T18171",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,266,2020-01-27T19:19:14Z,2020-01-31T18:28:58Z,2020-01-31T18:29:05Z,MERGED,True,196,24,4,https://github.com/dbnicholson,poll: Use ostree_commit_get_object_sizes if available,3,[],https://github.com/endlessm/eos-updater/pull/266,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/266#issuecomment-579975211,"OSTree upstream recently gained an API to return the parsed entries in
the ostree.sizes metadata[1]. Split out a helper function and use it
if it's available to sum the various commit size properies. There is one
slight behavior change here - the updater only continues on error if the
error is G_IO_ERROR_NOT_FOUND. This is what both APIs return when
ostree.sizes does not exist as well as what's now set when neither
APIs are available.

ostreedev/ostree#1957

https://phabricator.endlessm.com/T18171","After adding the saturating math I found out there was no testing for this, so I added the necessary infrastructure. I'm glad I did because I initially had the saturating math backwards...
Let me know if you had something else in mind.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,267,2020-02-04T14:08:37Z,2020-02-04T14:17:44Z,2020-02-04T14:17:47Z,MERGED,True,3,12,3,https://github.com/dbnicholson,poll: Drop support for downstream ostree_repo_get_commit_sizes API,1,[],https://github.com/endlessm/eos-updater/pull/267,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/267,"We've backported upstream's ostree_commit_get_object_sizes's to our
ostree and dropped ostree_repo_get_commit_sizes[1]. Drop support for
the latter since the Endless downstream ostree is the only place it
existed.

endlessm/ostree#164

https://phabricator.endlessm.com/T18171","We've backported upstream's ostree_commit_get_object_sizes's to our
ostree and dropped ostree_repo_get_commit_sizes[1]. Drop support for
the latter since the Endless downstream ostree is the only place it
existed.

endlessm/ostree#164

https://phabricator.endlessm.com/T18171",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,268,2020-05-13T13:59:32Z,2020-05-18T18:28:28Z,2020-05-18T18:28:36Z,MERGED,True,1162,2241,63,https://github.com/pwithnall,T22069 Port to Meson,12,[],https://github.com/endlessm/eos-updater/pull/268,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/268,"Whew, what a rollercoaster.
Testing I’ve done on this:

Unit tests pass locally
Debian package builds (using deb-build-snapshot to build on a freshly-unlocked master system from a few days ago)
Debian packages install and can fetch and apply an OS update
diffoscope differences between the automake build and Meson build are explainable (see comment below)
Grepping for conf and dir in a diff of the strings output from each pair of automake and Meson binaries shows that none of the compiled-in paths have changed

https://phabricator.endlessm.com/T22069","Whew, what a rollercoaster.
Testing I’ve done on this:

Unit tests pass locally
Debian package builds (using deb-build-snapshot to build on a freshly-unlocked master system from a few days ago)
Debian packages install and can fetch and apply an OS update
diffoscope differences between the automake build and Meson build are explainable (see comment below)
Grepping for conf and dir in a diff of the strings output from each pair of automake and Meson binaries shows that none of the compiled-in paths have changed

https://phabricator.endlessm.com/T22069",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,268,2020-05-13T13:59:32Z,2020-05-18T18:28:28Z,2020-05-18T18:28:36Z,MERGED,True,1162,2241,63,https://github.com/pwithnall,T22069 Port to Meson,12,[],https://github.com/endlessm/eos-updater/pull/268,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/268#issuecomment-628010965,"Whew, what a rollercoaster.
Testing I’ve done on this:

Unit tests pass locally
Debian package builds (using deb-build-snapshot to build on a freshly-unlocked master system from a few days ago)
Debian packages install and can fetch and apply an OS update
diffoscope differences between the automake build and Meson build are explainable (see comment below)
Grepping for conf and dir in a diff of the strings output from each pair of automake and Meson binaries shows that none of the compiled-in paths have changed

https://phabricator.endlessm.com/T22069","Here’s the diff output from the two builds:
ninja.diff.log
Differences:

eos-updater-prepare-volume because the automake build was of master, and this branch includes exactly those flake8 formatting changes
Binary files differ because that’s how these things play out
.a and .la files have disappeared because Meson doesn’t use libtool (thankfully)
Source code paths have changed in .gir files because Meson runs in a different directory and handles paths a bit differently — I think this is harmless
--tap argument has been dropped from installed-tests .test files because it’s not needed with GLib 2.62 (it’s enabled by default), and eos-updater depends on GLib 2.62 already",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,268,2020-05-13T13:59:32Z,2020-05-18T18:28:28Z,2020-05-18T18:28:36Z,MERGED,True,1162,2241,63,https://github.com/pwithnall,T22069 Port to Meson,12,[],https://github.com/endlessm/eos-updater/pull/268,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/268#issuecomment-628860177,"Whew, what a rollercoaster.
Testing I’ve done on this:

Unit tests pass locally
Debian package builds (using deb-build-snapshot to build on a freshly-unlocked master system from a few days ago)
Debian packages install and can fetch and apply an OS update
diffoscope differences between the automake build and Meson build are explainable (see comment below)
Grepping for conf and dir in a diff of the strings output from each pair of automake and Meson binaries shows that none of the compiled-in paths have changed

https://phabricator.endlessm.com/T22069",Looks like the README needs updating; it mentions make check.,True,{'THUMBS_UP': ['https://github.com/pwithnall']}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,269,2020-05-13T15:43:32Z,2020-05-18T18:34:05Z,2020-05-18T18:34:17Z,MERGED,True,1184,2243,63,https://github.com/pwithnall,T29311 Release scheduler entry after fetch is complete,14,[],https://github.com/endlessm/eos-updater/pull/269,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/269,"See https://phabricator.endlessm.com/T29311 for analysis.
This is based on #268 to make development simpler. Only the top two commits actually need reviewing in this PR.
https://phabricator.endlessm.com/T29311","See https://phabricator.endlessm.com/T29311 for analysis.
This is based on #268 to make development simpler. Only the top two commits actually need reviewing in this PR.
https://phabricator.endlessm.com/T29311",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,269,2020-05-13T15:43:32Z,2020-05-18T18:34:05Z,2020-05-18T18:34:17Z,MERGED,True,1184,2243,63,https://github.com/pwithnall,T29311 Release scheduler entry after fetch is complete,14,[],https://github.com/endlessm/eos-updater/pull/269,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/269#issuecomment-630088731,"See https://phabricator.endlessm.com/T29311 for analysis.
This is based on #268 to make development simpler. Only the top two commits actually need reviewing in this PR.
https://phabricator.endlessm.com/T29311","bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,270,2020-05-19T10:43:29Z,2020-05-21T22:32:03Z,2020-05-21T22:32:10Z,MERGED,True,5,3,1,https://github.com/pwithnall,tests: Update libexec path for eos-update-server installed tests,1,[],https://github.com/endlessm/eos-updater/pull/270,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/270,"Since a recent debhelper compat level, libexec is /usr/libexec rather
than /lib/${arch}. The tests didn’t keep in sync with that change
(because currently these installed-only tests are only run manually).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T30183","Since a recent debhelper compat level, libexec is /usr/libexec rather
than /lib/${arch}. The tests didn’t keep in sync with that change
(because currently these installed-only tests are only run manually).
Signed-off-by: Philip Withnall withnall@endlessm.com
https://phabricator.endlessm.com/T30183",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,271,2020-06-18T13:01:45Z,2020-06-18T18:50:12Z,2020-06-18T18:50:15Z,MERGED,True,11,11,7,https://github.com/pwithnall,all: Fix various typos and incorrect terminology,1,[],https://github.com/endlessm/eos-updater/pull/271,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/271,"Done using:
codespell \
    --builtin clear,rare,usage \
    --skip './po/*' --skip './help/*/*.po' --skip './.git/*' --skip './NEWS*' \
    --write-changes .

and then some manual checking and editing.
Signed-off-by: Philip Withnall withnall@endlessm.com","Done using:
codespell \
    --builtin clear,rare,usage \
    --skip './po/*' --skip './help/*/*.po' --skip './.git/*' --skip './NEWS*' \
    --write-changes .

and then some manual checking and editing.
Signed-off-by: Philip Withnall withnall@endlessm.com",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/272,https://phabricator.endlessm.com/T23150,https://phabricator.endlessm.com/T23150,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/272#issuecomment-662221981,https://phabricator.endlessm.com/T23150,"Planning to re-implement the last commit ""tests: Add more debug output"" by breaking out a helper function for cases where the update fails.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/272#issuecomment-665225763,https://phabricator.endlessm.com/T23150,"Planning to re-implement the last commit ""tests: Add more debug output"" by breaking out a helper function for cases where the update fails.

This is now done, and I made some changes to account for the changes implemented in flatpak/flatpak#3751.
This PR can be reviewed, but not merged until we have Flatpak 1.8.x along with the patches in these PRs:

flatpak/flatpak#3751
flatpak/flatpak#3757",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/272#issuecomment-674278451,https://phabricator.endlessm.com/T23150,"From the commit message of “Re-implement flatpak dependency logic using transactions”:

Flatpak needs the
cache dir for flatpak_dir_create_child_repo(). Sharing this with the
host seems unlikely to cause problems; the remote names are different.

I don’t think that second sentence is actually relevant. When G_TEST_OPTION_ISOLATE_DIRS is used, the value returned by g_get_user_cache_dir() is a per-test tmp dir rather than the normal global cache dir belonging to the user. So propagating it to child processes by setting it in their environment (as you’ve done) is exactly the right thing to do, and should result in the whole process tree using the isolated dirs.

Good point. I dropped that sentence from the commit message.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,5,https://github.com/endlessm/eos-updater/pull/272#issuecomment-674299332,https://phabricator.endlessm.com/T23150,Fixed a couple compiler warnings and opened endlessm/flatpak#229 to fix the tests.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,6,https://github.com/endlessm/eos-updater/pull/272#issuecomment-674320426,https://phabricator.endlessm.com/T23150,"Added one more commit that needs review, ""libeos-updater-util: Set no-interaction on transactions"".",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,7,https://github.com/endlessm/eos-updater/pull/272#issuecomment-675033850,https://phabricator.endlessm.com/T23150,"bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,8,https://github.com/endlessm/eos-updater/pull/272#issuecomment-678382865,https://phabricator.endlessm.com/T23150,I squashed the fixups.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,272,2020-07-15T22:29:41Z,2020-08-21T17:11:11Z,2020-08-21T17:11:15Z,MERGED,True,486,1285,12,https://github.com/mwleeds,T23150 Use FlatpakTransaction API,7,[],https://github.com/endlessm/eos-updater/pull/272,https://github.com/mwleeds,9,https://github.com/endlessm/eos-updater/pull/272#issuecomment-678387826,https://phabricator.endlessm.com/T23150,"bot, retest this please
(OBS now has flatpak built with endlessm/flatpak#230)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,273,2020-08-19T09:52:26Z,2020-08-19T10:19:29Z,2020-08-19T10:19:33Z,MERGED,True,21,3,2,https://github.com/wjt,ctl: Pretty-print sizes,2,[],https://github.com/endlessm/eos-updater/pull/273,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/273,"Here's a diff:
            State: UpdateApplied
        CurrentID: '4f09a3945a3fffcaf5d9a3361b7dbc37b621d1201404a0753db874d78f0eedfb'
-    DownloadSize: int64 223547830
- DownloadedBytes: int64 223549376
+    DownloadSize: 223.5 MB (223547830 bytes)
+ DownloadedBytes: 223.5 MB (223549376 bytes)
        ErrorCode: uint32 0
     ErrorMessage: ''
        ErrorName: ''
-FullDownloadSize: int64 1755678232
-FullUnpackedSize: int64 4088847909
+FullDownloadSize: 1.8 GB (1755678232 bytes)
+FullUnpackedSize: 4.1 GB (4088847909 bytes)
  OriginalRefspec: 'eos:os/eos/amd64/master'
-    UnpackedSize: int64 452314713
+    UnpackedSize: 452.3 MB (452314713 bytes)
         UpdateID: '16b7353e8e87bf05421481940152098aefa0f25a3026b8cbbcb9c01a57f0378d'
      UpdateLabel: '200819-063538'
    UpdateMessage: 'Built with eos-ostree-builder Release_3.8.5'","Here's a diff:
            State: UpdateApplied
        CurrentID: '4f09a3945a3fffcaf5d9a3361b7dbc37b621d1201404a0753db874d78f0eedfb'
-    DownloadSize: int64 223547830
- DownloadedBytes: int64 223549376
+    DownloadSize: 223.5 MB (223547830 bytes)
+ DownloadedBytes: 223.5 MB (223549376 bytes)
        ErrorCode: uint32 0
     ErrorMessage: ''
        ErrorName: ''
-FullDownloadSize: int64 1755678232
-FullUnpackedSize: int64 4088847909
+FullDownloadSize: 1.8 GB (1755678232 bytes)
+FullUnpackedSize: 4.1 GB (4088847909 bytes)
  OriginalRefspec: 'eos:os/eos/amd64/master'
-    UnpackedSize: int64 452314713
+    UnpackedSize: 452.3 MB (452314713 bytes)
         UpdateID: '16b7353e8e87bf05421481940152098aefa0f25a3026b8cbbcb9c01a57f0378d'
      UpdateLabel: '200819-063538'
    UpdateMessage: 'Built with eos-ostree-builder Release_3.8.5'",True,{'HEART': ['https://github.com/mwleeds']}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,274,2020-09-09T14:19:59Z,2020-09-15T13:38:34Z,2020-09-15T13:38:44Z,MERGED,True,147,17,6,https://github.com/pwithnall,T25765 Fix transaction operation error handling in eufi,4,[],https://github.com/endlessm/eos-updater/pull/274,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/274,"Turns out that the operation-error signal needs to be handled in order for transactions to behave as you’d expect them to (for example, not failing on skipped operations, returning the error code from a failed operation).
See the individual commit messages for details.
This branch should improve our error reporting from EUFI. It may fix the upgrade-time installation of Totem, but I haven’t explicitly tested that (yet).
https://phabricator.endlessm.com/T25765","Turns out that the operation-error signal needs to be handled in order for transactions to behave as you’d expect them to (for example, not failing on skipped operations, returning the error code from a failed operation).
See the individual commit messages for details.
This branch should improve our error reporting from EUFI. It may fix the upgrade-time installation of Totem, but I haven’t explicitly tested that (yet).
https://phabricator.endlessm.com/T25765",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,274,2020-09-09T14:19:59Z,2020-09-15T13:38:34Z,2020-09-15T13:38:44Z,MERGED,True,147,17,6,https://github.com/pwithnall,T25765 Fix transaction operation error handling in eufi,4,[],https://github.com/endlessm/eos-updater/pull/274,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/274#issuecomment-689595360,"Turns out that the operation-error signal needs to be handled in order for transactions to behave as you’d expect them to (for example, not failing on skipped operations, returning the error code from a failed operation).
See the individual commit messages for details.
This branch should improve our error reporting from EUFI. It may fix the upgrade-time installation of Totem, but I haven’t explicitly tested that (yet).
https://phabricator.endlessm.com/T25765","Marking as a draft as I haven’t tested this beyond running the (new and old) unit tests yet. It shouldn’t be merged until I’ve done some testing on images, and tested that it fixes the Totem issue on T25765.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,274,2020-09-09T14:19:59Z,2020-09-15T13:38:34Z,2020-09-15T13:38:44Z,MERGED,True,147,17,6,https://github.com/pwithnall,T25765 Fix transaction operation error handling in eufi,4,[],https://github.com/endlessm/eos-updater/pull/274,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/274#issuecomment-692720554,"Turns out that the operation-error signal needs to be handled in order for transactions to behave as you’d expect them to (for example, not failing on skipped operations, returning the error code from a failed operation).
See the individual commit messages for details.
This branch should improve our error reporting from EUFI. It may fix the upgrade-time installation of Totem, but I haven’t explicitly tested that (yet).
https://phabricator.endlessm.com/T25765","Done some testing (see the task) and it seems OK, so merging as per the review and testing. Thanks",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,275,2020-09-09T14:22:07Z,2020-09-16T09:34:53Z,2020-09-16T09:34:58Z,MERGED,True,119,22,7,https://github.com/pwithnall,T29247 Add failure metric reporting,3,[],https://github.com/endlessm/eos-updater/pull/275,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/275,"Report a metric when eos-updater or eos-updater-flatpak-installer fails.
Azafea changes in endlessm/azafea#123.
https://phabricator.endlessm.com/T29247","Report a metric when eos-updater or eos-updater-flatpak-installer fails.
Azafea changes in endlessm/azafea#123.
https://phabricator.endlessm.com/T29247",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,275,2020-09-09T14:22:07Z,2020-09-16T09:34:53Z,2020-09-16T09:34:58Z,MERGED,True,119,22,7,https://github.com/pwithnall,T29247 Add failure metric reporting,3,[],https://github.com/endlessm/eos-updater/pull/275,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/275#issuecomment-692125010,"Report a metric when eos-updater or eos-updater-flatpak-installer fails.
Azafea changes in endlessm/azafea#123.
https://phabricator.endlessm.com/T29247",Updated to ignore cancellation errors.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/276,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692731639,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","This might fix the OBS build failure. Weird, because it builds locally for me with debhelper 13.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692752625,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692753335,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/wjt,5,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692753917,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","bot, retest this please

If you were hoping to pick up the change on endlessm/eos-build#1173, it needs to be manually deployed to Jenkins by an appropriately privileged person.
I have now done so but I think you reran the job before that update :)",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/wjt,6,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692754115,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","yep
retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,7,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692754496,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","If you were hoping to pick up the change on endlessm/eos-build#1173, it needs to be manually deployed to Jenkins by an appropriately privileged person.

I was just coming to that realisation 🤦 thanks",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,8,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692755216,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","Seems to still be pulling in gnome-common
bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692755710,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","Hmm, the latest run doesn’t pull in gnome-common but still fails. I am out of ideas 😢",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,10,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692800567,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765","bot, retest this please",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,276,2020-09-15T13:55:47Z,2020-09-15T15:57:19Z,2020-09-15T15:57:23Z,MERGED,True,1,4,2,https://github.com/pwithnall,debian: Bump to debhelper-compat level 13,1,[],https://github.com/endlessm/eos-updater/pull/276,https://github.com/pwithnall,11,https://github.com/endlessm/eos-updater/pull/276#issuecomment-692801607,"dh_missing now defaults to --fail-missing, so we can drop our
override there.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T25765",https://obs-master.endlessm-sf.com/request/show/21691 seems to have fixed the debhelper dependency (it needed to be pulled in from bullseye in parallel with the util-linux update I pulled in earlier today; the failure we saw here was affecting multiple modules and wasn’t eos-updater specific).,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,277,2020-09-18T12:52:56Z,2020-09-19T02:50:23Z,2020-09-19T02:55:18Z,MERGED,True,4,9,4,https://github.com/pwithnall,T29247 Metrics fix,2,[],https://github.com/endlessm/eos-updater/pull/277,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/277,https://phabricator.endlessm.com/T29247,https://phabricator.endlessm.com/T29247,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,278,2020-10-21T22:40:00Z,2020-10-22T12:07:26Z,2020-10-22T17:15:28Z,MERGED,True,143,26,8,https://github.com/mwleeds,T30846 backport failure metric to eos3.3,5,[],https://github.com/endlessm/eos-updater/pull/278,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/278,"The first commit ""eos-updater: Don’t send metrics if EOS_DISABLE_METRICS is set"" is there to prevent merge conflicts (and because it's useful). The rest of the commits are backports from T29247.
https://phabricator.endlessm.com/T30846","The first commit ""eos-updater: Don’t send metrics if EOS_DISABLE_METRICS is set"" is there to prevent merge conflicts (and because it's useful). The rest of the commits are backports from T29247.
https://phabricator.endlessm.com/T30846",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,278,2020-10-21T22:40:00Z,2020-10-22T12:07:26Z,2020-10-22T17:15:28Z,MERGED,True,143,26,8,https://github.com/mwleeds,T30846 backport failure metric to eos3.3,5,[],https://github.com/endlessm/eos-updater/pull/278,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/278#issuecomment-714093425,"The first commit ""eos-updater: Don’t send metrics if EOS_DISABLE_METRICS is set"" is there to prevent merge conflicts (and because it's useful). The rest of the commits are backports from T29247.
https://phabricator.endlessm.com/T30846","This should be ready for review now. I had to fix a few things because eos-updater on the eos3.3 branch uses automake rather than meson, and doesn't have EOS_UPDATER_ERROR_METERED_CONNECTION defined. There were also merge conflicts due to other minor differences between master and eos3.3.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,279,2020-11-24T00:17:38Z,2020-11-25T19:06:06Z,2020-11-25T19:06:11Z,MERGED,True,21,11,1,https://github.com/mwleeds,eupv: Don't error out on missing flatpaks,2,[],https://github.com/endlessm/eos-updater/pull/279,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/279,"In a perfect world, USB drives created with eos-updater-prepare-volume
could be used to update Endless computers on any previous OS versions,
but alas, this is not a perfect world. One of the reasons we can't keep
that promise is checkpoints (""eos.checkpoint-target""), but we also can't
guarantee we'll have all the flatpaks needed by
eos-updater-flatpak-installer on the target machine receiving the
update. This is because flatpaks may be uninstalled by the user after
being auto-installed, or they may be installed and later uninstalled by
eos-updater-flatpak-installer, as will be the case for
com.hack_computer.ProjectLibrary in 3.9.1.
So make failures of the flatpak create-usb command non-fatal for
flatpaks not explicitly specified by the user. We may also want to
install any missing flatpaks before doing the copy when we have an
Internet connection, but that improvement is left as an exercise for the
reader.
https://phabricator.endlessm.com/T30368","In a perfect world, USB drives created with eos-updater-prepare-volume
could be used to update Endless computers on any previous OS versions,
but alas, this is not a perfect world. One of the reasons we can't keep
that promise is checkpoints (""eos.checkpoint-target""), but we also can't
guarantee we'll have all the flatpaks needed by
eos-updater-flatpak-installer on the target machine receiving the
update. This is because flatpaks may be uninstalled by the user after
being auto-installed, or they may be installed and later uninstalled by
eos-updater-flatpak-installer, as will be the case for
com.hack_computer.ProjectLibrary in 3.9.1.
So make failures of the flatpak create-usb command non-fatal for
flatpaks not explicitly specified by the user. We may also want to
install any missing flatpaks before doing the copy when we have an
Internet connection, but that improvement is left as an exercise for the
reader.
https://phabricator.endlessm.com/T30368",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,279,2020-11-24T00:17:38Z,2020-11-25T19:06:06Z,2020-11-25T19:06:11Z,MERGED,True,21,11,1,https://github.com/mwleeds,eupv: Don't error out on missing flatpaks,2,[],https://github.com/endlessm/eos-updater/pull/279,https://github.com/mwleeds,2,https://github.com/endlessm/eos-updater/pull/279#issuecomment-733244246,"In a perfect world, USB drives created with eos-updater-prepare-volume
could be used to update Endless computers on any previous OS versions,
but alas, this is not a perfect world. One of the reasons we can't keep
that promise is checkpoints (""eos.checkpoint-target""), but we also can't
guarantee we'll have all the flatpaks needed by
eos-updater-flatpak-installer on the target machine receiving the
update. This is because flatpaks may be uninstalled by the user after
being auto-installed, or they may be installed and later uninstalled by
eos-updater-flatpak-installer, as will be the case for
com.hack_computer.ProjectLibrary in 3.9.1.
So make failures of the flatpak create-usb command non-fatal for
flatpaks not explicitly specified by the user. We may also want to
install any missing flatpaks before doing the copy when we have an
Internet connection, but that improvement is left as an exercise for the
reader.
https://phabricator.endlessm.com/T30368","If I understand correctly, this will allow the OS commit D on the USB stick to be used to update a machine from some previous commit C provided that the autoinstall file changes between C and D do not require any of the missing Flatpaks to be installed. But if C → D requires that one of the missing Flatpaks be installed, that update will still fail. Right?

Right

So, this seems like an improvement, but it's another nail in the box of ""we should make e-u-f-i failures non-fatal"" IMO.

I would tend to agree

In the specific example you hit: ProjectLibrary was previously installed as part of an old update, and is now removed in 3.9.1. So this is a non-issue: it's missing, but 3.9.1 requires it be removed, so that's OK. If we had removed the old stanza that installed it from the autoinstall, would this change have been necessary?

No, it wouldn't have been necessary for this case (though as you point out it's still a useful change for the case when something has been manually uninstalled).

Also, does _get_autoinstall_flatpaks() ignore install actions which are subsequently countermanded by an uninstall action?

No, but that would be an easy change to make. I'll do that.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,279,2020-11-24T00:17:38Z,2020-11-25T19:06:06Z,2020-11-25T19:06:11Z,MERGED,True,21,11,1,https://github.com/mwleeds,eupv: Don't error out on missing flatpaks,2,[],https://github.com/endlessm/eos-updater/pull/279,https://github.com/mwleeds,3,https://github.com/endlessm/eos-updater/pull/279#issuecomment-733253891,"In a perfect world, USB drives created with eos-updater-prepare-volume
could be used to update Endless computers on any previous OS versions,
but alas, this is not a perfect world. One of the reasons we can't keep
that promise is checkpoints (""eos.checkpoint-target""), but we also can't
guarantee we'll have all the flatpaks needed by
eos-updater-flatpak-installer on the target machine receiving the
update. This is because flatpaks may be uninstalled by the user after
being auto-installed, or they may be installed and later uninstalled by
eos-updater-flatpak-installer, as will be the case for
com.hack_computer.ProjectLibrary in 3.9.1.
So make failures of the flatpak create-usb command non-fatal for
flatpaks not explicitly specified by the user. We may also want to
install any missing flatpaks before doing the copy when we have an
Internet connection, but that improvement is left as an exercise for the
reader.
https://phabricator.endlessm.com/T30368","There is an edge case that's quite hard to support: if there's a checkpoint commit at or before a flatpak is auto-installed, and that flatpak is later auto-uninstalled, the update USB won't be able to provide the flatpak for a receiving computer that needs to follow the checkpoint. However, the USB also won't have the checkpoint itself, so it's a broader problem than we can fix here.
Probably another reason to avoid checkpoints unless truly necessary, for now.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,279,2020-11-24T00:17:38Z,2020-11-25T19:06:06Z,2020-11-25T19:06:11Z,MERGED,True,21,11,1,https://github.com/mwleeds,eupv: Don't error out on missing flatpaks,2,[],https://github.com/endlessm/eos-updater/pull/279,https://github.com/mwleeds,4,https://github.com/endlessm/eos-updater/pull/279#issuecomment-733335797,"In a perfect world, USB drives created with eos-updater-prepare-volume
could be used to update Endless computers on any previous OS versions,
but alas, this is not a perfect world. One of the reasons we can't keep
that promise is checkpoints (""eos.checkpoint-target""), but we also can't
guarantee we'll have all the flatpaks needed by
eos-updater-flatpak-installer on the target machine receiving the
update. This is because flatpaks may be uninstalled by the user after
being auto-installed, or they may be installed and later uninstalled by
eos-updater-flatpak-installer, as will be the case for
com.hack_computer.ProjectLibrary in 3.9.1.
So make failures of the flatpak create-usb command non-fatal for
flatpaks not explicitly specified by the user. We may also want to
install any missing flatpaks before doing the copy when we have an
Internet connection, but that improvement is left as an exercise for the
reader.
https://phabricator.endlessm.com/T30368",Checked that this script still behaves as expected with the new minor changes,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,279,2020-11-24T00:17:38Z,2020-11-25T19:06:06Z,2020-11-25T19:06:11Z,MERGED,True,21,11,1,https://github.com/mwleeds,eupv: Don't error out on missing flatpaks,2,[],https://github.com/endlessm/eos-updater/pull/279,https://github.com/mwleeds,5,https://github.com/endlessm/eos-updater/pull/279#issuecomment-733831510,"In a perfect world, USB drives created with eos-updater-prepare-volume
could be used to update Endless computers on any previous OS versions,
but alas, this is not a perfect world. One of the reasons we can't keep
that promise is checkpoints (""eos.checkpoint-target""), but we also can't
guarantee we'll have all the flatpaks needed by
eos-updater-flatpak-installer on the target machine receiving the
update. This is because flatpaks may be uninstalled by the user after
being auto-installed, or they may be installed and later uninstalled by
eos-updater-flatpak-installer, as will be the case for
com.hack_computer.ProjectLibrary in 3.9.1.
So make failures of the flatpak create-usb command non-fatal for
flatpaks not explicitly specified by the user. We may also want to
install any missing flatpaks before doing the copy when we have an
Internet connection, but that improvement is left as an exercise for the
reader.
https://phabricator.endlessm.com/T30368","So, this seems like an improvement, but it's another nail in the box of ""we should make e-u-f-i failures non-fatal"" IMO.

I would tend to agree

Filed https://phabricator.endlessm.com/T31149",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,280,2020-12-18T23:50:26Z,2021-01-05T19:37:24Z,2021-01-05T19:37:29Z,MERGED,True,104,5,8,https://github.com/pwithnall,T31190 eos-updater-flatpak-installer: Add a fallback service and timer,3,[],https://github.com/endlessm/eos-updater/pull/280,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/280,"This service will be run once a day during normal system use (not just
during the first boot after an upgrade, as e-u-f-i is normally run),
just in case there were errors in downloading or installing the updates
during the most recent system upgrade.
The fallback runs e-u-f-i with --pull, so it will download flatpaks,
runtimes, etc. if necessary. For this reason it needs to be slightly
less constrained in its systemd sandbox than
eos-updater-flatpak-installer.service. Other than that the service
files are almost identical.
This could be considered a hack, but could also be considered as a
safety fallback in case of mistakes in previous OS versions. Otherwise,
the e-u-f-i process is only run with the eos-updater/OSTree/flatpak code
from release X just after upgrading to release X, or just before
upgrading to release X+Y. If there are problems in any of that code, the
user has to do a successful OS upgrade to get a fixed version of the
code, and it’s a month (or more) between OS releases.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31190","This service will be run once a day during normal system use (not just
during the first boot after an upgrade, as e-u-f-i is normally run),
just in case there were errors in downloading or installing the updates
during the most recent system upgrade.
The fallback runs e-u-f-i with --pull, so it will download flatpaks,
runtimes, etc. if necessary. For this reason it needs to be slightly
less constrained in its systemd sandbox than
eos-updater-flatpak-installer.service. Other than that the service
files are almost identical.
This could be considered a hack, but could also be considered as a
safety fallback in case of mistakes in previous OS versions. Otherwise,
the e-u-f-i process is only run with the eos-updater/OSTree/flatpak code
from release X just after upgrading to release X, or just before
upgrading to release X+Y. If there are problems in any of that code, the
user has to do a successful OS upgrade to get a fixed version of the
code, and it’s a month (or more) between OS releases.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31190",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,281,2021-02-08T21:34:34Z,2021-03-31T09:23:02Z,2021-03-31T09:23:05Z,MERGED,True,21,2,2,https://github.com/dbnicholson,test-common: Use standalone ostree-trivial-httpd,1,[],https://github.com/endlessm/eos-updater/pull/281,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/281,"The trivial-httpd builtin for the ostree command has been deprecated
for a couple years and is not included on default builds of ostree. On
the other hand, the standalone ostree-trivial-httpd has been available
since ostree 2017.1 in <libexecdir>/libostree/ostree-trivial-httpd.
Try to use that instead of the builtin.
https://phabricator.endlessm.com/T31384","The trivial-httpd builtin for the ostree command has been deprecated
for a couple years and is not included on default builds of ostree. On
the other hand, the standalone ostree-trivial-httpd has been available
since ostree 2017.1 in <libexecdir>/libostree/ostree-trivial-httpd.
Try to use that instead of the builtin.
https://phabricator.endlessm.com/T31384",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,281,2021-02-08T21:34:34Z,2021-03-31T09:23:02Z,2021-03-31T09:23:05Z,MERGED,True,21,2,2,https://github.com/dbnicholson,test-common: Use standalone ostree-trivial-httpd,1,[],https://github.com/endlessm/eos-updater/pull/281,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/281#issuecomment-775910171,"The trivial-httpd builtin for the ostree command has been deprecated
for a couple years and is not included on default builds of ostree. On
the other hand, the standalone ostree-trivial-httpd has been available
since ostree 2017.1 in <libexecdir>/libostree/ostree-trivial-httpd.
Try to use that instead of the builtin.
https://phabricator.endlessm.com/T31384","You may want to comment on this upstream PR and point out that we use ostree-trivial-httpd. The PR’s a bit old, but they were proposing to make it builddir-only.

Thanks. Yeah, telling upstream that we no longer use it was a follow up. I already had to unbreak this case once in the past when someone else waded into this area",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,281,2021-02-08T21:34:34Z,2021-03-31T09:23:02Z,2021-03-31T09:23:05Z,MERGED,True,21,2,2,https://github.com/dbnicholson,test-common: Use standalone ostree-trivial-httpd,1,[],https://github.com/endlessm/eos-updater/pull/281,https://github.com/dbnicholson,3,https://github.com/endlessm/eos-updater/pull/281#issuecomment-801162085,"The trivial-httpd builtin for the ostree command has been deprecated
for a couple years and is not included on default builds of ostree. On
the other hand, the standalone ostree-trivial-httpd has been available
since ostree 2017.1 in <libexecdir>/libostree/ostree-trivial-httpd.
Try to use that instead of the builtin.
https://phabricator.endlessm.com/T31384","You may want to comment on this upstream PR and point out that we use ostree-trivial-httpd. The PR’s a bit old, but they were proposing to make it builddir-only.

Thanks. Yeah, telling upstream that we no longer use it was a follow up. I already had to unbreak this case once in the past when someone else waded into this area

I was looking at this again in the context of rebasing ostree. It actually would still be installed so long as you build with --enable-installed-tests, which debian does. In that case it would be in $libexecdir/installed-tests/libostree/ostree-trivial-httpd and part of the ostree-tests debian package. I think the point still stands about letting upstream know we use it.
Alternatively, I could just drop the dependency and use python's http.server which I've used many times in the past.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,281,2021-02-08T21:34:34Z,2021-03-31T09:23:02Z,2021-03-31T09:23:05Z,MERGED,True,21,2,2,https://github.com/dbnicholson,test-common: Use standalone ostree-trivial-httpd,1,[],https://github.com/endlessm/eos-updater/pull/281,https://github.com/pwithnall,4,https://github.com/endlessm/eos-updater/pull/281#issuecomment-805020058,"The trivial-httpd builtin for the ostree command has been deprecated
for a couple years and is not included on default builds of ostree. On
the other hand, the standalone ostree-trivial-httpd has been available
since ostree 2017.1 in <libexecdir>/libostree/ostree-trivial-httpd.
Try to use that instead of the builtin.
https://phabricator.endlessm.com/T31384","I was looking at this again in the context of rebasing ostree. It actually would still be installed so long as you build with --enable-installed-tests, which debian does. In that case it would be in $libexecdir/installed-tests/libostree/ostree-trivial-httpd and part of the ostree-tests debian package. I think the point still stands about letting upstream know we use it.

So should the installed-tests path be added to the search path for the httpd server?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,281,2021-02-08T21:34:34Z,2021-03-31T09:23:02Z,2021-03-31T09:23:05Z,MERGED,True,21,2,2,https://github.com/dbnicholson,test-common: Use standalone ostree-trivial-httpd,1,[],https://github.com/endlessm/eos-updater/pull/281,https://github.com/dbnicholson,5,https://github.com/endlessm/eos-updater/pull/281#issuecomment-805113627,"The trivial-httpd builtin for the ostree command has been deprecated
for a couple years and is not included on default builds of ostree. On
the other hand, the standalone ostree-trivial-httpd has been available
since ostree 2017.1 in <libexecdir>/libostree/ostree-trivial-httpd.
Try to use that instead of the builtin.
https://phabricator.endlessm.com/T31384","I was looking at this again in the context of rebasing ostree. It actually would still be installed so long as you build with --enable-installed-tests, which debian does. In that case it would be in $libexecdir/installed-tests/libostree/ostree-trivial-httpd and part of the ostree-tests debian package. I think the point still stands about letting upstream know we use it.

So should the installed-tests path be added to the search path for the httpd server?

Sure. If the upstream PR ever goes in it would still find it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,282,2021-03-03T22:21:06Z,2021-03-04T12:28:34Z,2021-03-04T12:28:36Z,MERGED,True,0,1,1,https://github.com/wjt,e-u-f-i: Unset RemainAfterExit on -fallback.service,1,[],https://github.com/endlessm/eos-updater/pull/282,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/282,"Quoth systemd.timer(5):

[…] services with RemainAfterExit= set […] are usually not suitable
for activation via repetitive timers, as they will only be activated
once, and then stay around forever.

And indeed before this patch,
eos-updater-flatpak-installer-fallback.timer would only fire once
(assuming the .service succeeds) because the .service is considered to
be still running after it exits.
https://phabricator.endlessm.com/T31564","Quoth systemd.timer(5):

[…] services with RemainAfterExit= set […] are usually not suitable
for activation via repetitive timers, as they will only be activated
once, and then stay around forever.

And indeed before this patch,
eos-updater-flatpak-installer-fallback.timer would only fire once
(assuming the .service succeeds) because the .service is considered to
be still running after it exits.
https://phabricator.endlessm.com/T31564",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,282,2021-03-03T22:21:06Z,2021-03-04T12:28:34Z,2021-03-04T12:28:36Z,MERGED,True,0,1,1,https://github.com/wjt,e-u-f-i: Unset RemainAfterExit on -fallback.service,1,[],https://github.com/endlessm/eos-updater/pull/282,https://github.com/wjt,2,https://github.com/endlessm/eos-updater/pull/282#issuecomment-790115625,"Quoth systemd.timer(5):

[…] services with RemainAfterExit= set […] are usually not suitable
for activation via repetitive timers, as they will only be activated
once, and then stay around forever.

And indeed before this patch,
eos-updater-flatpak-installer-fallback.timer would only fire once
(assuming the .service succeeds) because the .service is considered to
be still running after it exits.
https://phabricator.endlessm.com/T31564","Tested by adding an override:
# /etc/systemd/system/eos-updater-flatpak-installer-fallback.service.d/override.conf
[Service]
RemainAfterExit=false

and verifying that the timer still planned to fire – but I confess that I didn't wait for the first timer to actually expire. I'll un-draft this tomorrow once that's happened ""organically"".",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,282,2021-03-03T22:21:06Z,2021-03-04T12:28:34Z,2021-03-04T12:28:36Z,MERGED,True,0,1,1,https://github.com/wjt,e-u-f-i: Unset RemainAfterExit on -fallback.service,1,[],https://github.com/endlessm/eos-updater/pull/282,https://github.com/wjt,3,https://github.com/endlessm/eos-updater/pull/282#issuecomment-790544671,"Quoth systemd.timer(5):

[…] services with RemainAfterExit= set […] are usually not suitable
for activation via repetitive timers, as they will only be activated
once, and then stay around forever.

And indeed before this patch,
eos-updater-flatpak-installer-fallback.timer would only fire once
(assuming the .service succeeds) because the .service is considered to
be still running after it exits.
https://phabricator.endlessm.com/T31564","NEXT                        LEFT         LAST                        PASSED       UNIT                                         ACTIVATES                                     
Fri 2021-03-05 09:49:45 GMT 22h left     Thu 2021-03-04 09:30:15 GMT 1h 55min ago eos-updater-flatpak-installer-fallback.timer eos-updater-flatpak-installer-fallback.service

System seems to work",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/283,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918","See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/283#issuecomment-857825848,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918","Currently wrestling with the flatpak test failures, which I think are unrelated but we should fix anyway. So far, all I’ve been able to determine is that it’s something to do with the new summary code in flatpak not finding a summary for the ostree-metadata branch, and therefore being unhappy. Consequently, I am also unhappy. Will continue to sink life energy into this tomorrow.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/283#issuecomment-859628753,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918",See endlessm/flatpak#268 for the flatpak test failures. I don’t think the fix requires changes in eos-updater.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/dbnicholson,4,https://github.com/endlessm/eos-updater/pull/283#issuecomment-859731595,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918",Changes look good now. I'll wait until the flatpak build is completed and kick the CI here again.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/dbnicholson,5,https://github.com/endlessm/eos-updater/pull/283#issuecomment-859758773,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918",retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/dbnicholson,6,https://github.com/endlessm/eos-updater/pull/283#issuecomment-859759692,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918","The CI is running again with the updated flatpak:
Get:73 http://obs-master.endlessm-sf.com:82/shared/eos master/endless amd64 flatpak amd64 1.10.2+dev35.5b28741-0bem1 [1281 kB]",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/dbnicholson,7,https://github.com/endlessm/eos-updater/pull/283#issuecomment-859784509,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918","Still hitting an issue in the flatpak tests. I'm not sure if the issue is related, but if you want to split that off to a separate task, I'm pretty sure these changes are working correctly.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/pwithnall,8,https://github.com/endlessm/eos-updater/pull/283#issuecomment-863314155,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918",Rebased and fixup squashed in. Let’s see if this passes the tests now that #285 is in.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,283,2021-06-04T16:10:46Z,2021-06-17T16:45:10Z,2021-06-17T16:45:13Z,MERGED,True,562,0,4,https://github.com/pwithnall,T31918 Teach eos-updater not to cross eos3a→eos4 checkpoint on certain systems,2,[],https://github.com/endlessm/eos-updater/pull/283,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/283#issuecomment-863334823,"See the commit messages.
This adds a load of checks for systems which should not be migrated to eos4. The checks are based on searching around tasks and code for ways to distinguish these systems, rather than actual testing on these systems. The basis for the checks still needs to be checked against the actual systems.
https://phabricator.endlessm.com/T31918","woohoo, tests passed 🥳",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/284,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918","Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/284#issuecomment-860625033,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918","Sigh, tests still fail but in a different way this time. Looking into it.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/284#issuecomment-860816228,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918","I think the latest test failure is caused by flatpak/flatpak#4316, which is an additional fix related to the previous set of flatpak fixes I backported. I’ll comment on the Phab task to tie this all together.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/dbnicholson,4,https://github.com/endlessm/eos-updater/pull/284#issuecomment-862673299,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918",Merged the flatpak backport in endlessm/flatpak#269. I'll wait until that gets built and restart this test.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/dbnicholson,5,https://github.com/endlessm/eos-updater/pull/284#issuecomment-862707885,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918","I was curious about how the collection ID was handled with the new index summary partially for a personal preview of what will happen when a newer flatpak is deployed to the server and starts generating the new indexed summaries.
It appears that the collection ID is only validated when the full summary is fetched (state->summary is only set when the full summary is downloaded). I think that the eos-updater tests only generate the full summary, so I'm not sure why this doesn't fail.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/dbnicholson,6,https://github.com/endlessm/eos-updater/pull/284#issuecomment-862707952,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918",retest this please,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/dbnicholson,7,https://github.com/endlessm/eos-updater/pull/284#issuecomment-862724295,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918","Oh, it's because the tests use flatpak build-export, which by default updates the summary, which in turn generates summary.idx. So, it is indeed not fetching the full summary. Incidentally, the tests make another OS commit (to ship the autoinstall.json update?) after the flatpak is built, which then regenerates a summary with ostree summary --update.
I think the tests would be a little more robust if they used flatpak build-update-repo instead of ostree summary --update when the repo contained flatpaks so that the summary data is consistent. This would also allow passing --no-summary-index (which removes stale summary.idx files), which would allow being explicit about whether a full summary or indexed summary would be fetched by the client.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/dbnicholson,8,https://github.com/endlessm/eos-updater/pull/284#issuecomment-862812644,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918","Well, since our server will continue to use full summaries for some time, removing this test does hide a bug. I created #285 to continue simulating the behavior with older flatpak on the server.",True,"{'ROCKET': ['https://github.com/pwithnall'], 'HOORAY': ['https://github.com/pwithnall']}"
endlessm/eos-updater,https://github.com/endlessm/eos-updater,284,2021-06-14T11:45:24Z,2021-06-17T14:56:27Z,2021-06-17T14:56:36Z,CLOSED,False,0,80,1,https://github.com/pwithnall,tests: Drop test for collection ID not being set on the remote server,1,[],https://github.com/endlessm/eos-updater/pull/284,https://github.com/pwithnall,9,https://github.com/endlessm/eos-updater/pull/284#issuecomment-863311400,"Since flatpak has almost entirely dropped collection ID support, this
test is no longer relevant.
It was originally added in T20812.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918",Closing strongly in favour of #285,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,285,2021-06-17T00:03:43Z,2021-06-17T14:56:40Z,2021-06-17T14:56:42Z,MERGED,True,29,0,1,https://github.com/dbnicholson,tests: Remove indexed summary for invalid collection ID test,1,[],https://github.com/endlessm/eos-updater/pull/285,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/285,"With newer flatpak, an indexed summary file will be created on the
server and the client will try to download summary.idx first. This
breaks the test that expects to fail when there's no collection ID in
the remote summary since flatpak only validates its presence on a full
summary file.
Since the Endless servers aren't providing indexed summaries yet, it's
useful to continue simulating this test with a full summary that doesn't
contain a collection ID. If the summary index exists, delete it to go
back to older flatpak behavior.
https://phabricator.endlessm.com/T31918","With newer flatpak, an indexed summary file will be created on the
server and the client will try to download summary.idx first. This
breaks the test that expects to fail when there's no collection ID in
the remote summary since flatpak only validates its presence on a full
summary file.
Since the Endless servers aren't providing indexed summaries yet, it's
useful to continue simulating this test with a full summary that doesn't
contain a collection ID. If the summary index exists, delete it to go
back to older flatpak behavior.
https://phabricator.endlessm.com/T31918",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,285,2021-06-17T00:03:43Z,2021-06-17T14:56:40Z,2021-06-17T14:56:42Z,MERGED,True,29,0,1,https://github.com/dbnicholson,tests: Remove indexed summary for invalid collection ID test,1,[],https://github.com/endlessm/eos-updater/pull/285,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/285#issuecomment-862812317,"With newer flatpak, an indexed summary file will be created on the
server and the client will try to download summary.idx first. This
breaks the test that expects to fail when there's no collection ID in
the remote summary since flatpak only validates its presence on a full
summary file.
Since the Endless servers aren't providing indexed summaries yet, it's
useful to continue simulating this test with a full summary that doesn't
contain a collection ID. If the summary index exists, delete it to go
back to older flatpak behavior.
https://phabricator.endlessm.com/T31918",An alternative to #284. It passed that particular test for me locally but a later one failed. Let's see if the full test suite passes.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,286,2021-06-24T14:23:16Z,2021-06-24T18:17:40Z,2021-06-24T18:17:43Z,MERGED,True,13,1,1,https://github.com/pwithnall,eos-updater: Tweak eos3a → eos4 checkpoint tests on aarch64 hosts,1,[],https://github.com/endlessm/eos-updater/pull/286,https://github.com/pwithnall,1,https://github.com/endlessm/eos-updater/pull/286,"Since the checkpoint redirect should not be followed on aarch64 hosts,
the tests are going to behave slightly differently on that architecture:
we should expect the checkpoint to never be followed unless the
architecture is mocked, or following redirects is forced.
The alternative approach would be to always mock the architecture, and
set it to something other than aarch64 (unless explicitly testing the
architecture checks), but then we’d be throwing away an opportunity to
test the checkpoint code on exactly the platform it’s meant to catch.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918","Since the checkpoint redirect should not be followed on aarch64 hosts,
the tests are going to behave slightly differently on that architecture:
we should expect the checkpoint to never be followed unless the
architecture is mocked, or following redirects is forced.
The alternative approach would be to always mock the architecture, and
set it to something other than aarch64 (unless explicitly testing the
architecture checks), but then we’d be throwing away an opportunity to
test the checkpoint code on exactly the platform it’s meant to catch.
Signed-off-by: Philip Withnall pwithnall@endlessos.org
https://phabricator.endlessm.com/T31918",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,287,2021-07-19T19:24:07Z,2021-07-20T08:26:27Z,2021-07-20T08:26:32Z,MERGED,True,4,4,2,https://github.com/dbnicholson,flatpak-installer: Drop dependency on eos-extra-settled.target,1,[],https://github.com/endlessm/eos-updater/pull/287,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/287,"Split disk support has been dropped for EOS 4 and the
eos-extra-settled.target unit is no longer installed. Don't require or
wait for it when installing flatpaks.
https://phabricator.endlessm.com/T32298","Split disk support has been dropped for EOS 4 and the
eos-extra-settled.target unit is no longer installed. Don't require or
wait for it when installing flatpaks.
https://phabricator.endlessm.com/T32298",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,288,2021-08-03T14:08:57Z,2021-08-03T14:13:50Z,2021-08-03T14:13:54Z,MERGED,True,6,3,1,https://github.com/wjt,ctl: Handle size properties being negative,1,[],https://github.com/endlessm/eos-updater/pull/288,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/288,"Spotted on GNOME OS:
======= Properties =======
           State: Fetching
       CurrentID: 'fc691d2fdcd5f7d44062a301888d1a86f00f48d803d1c3278915b4460e70a617'
Traceback (most recent call last):
  File ""/usr/bin/eos-updater-ctl"", line 124, in name_appeared_cb
    dump_daemon_properties(proxy)
  File ""/usr/bin/eos-updater-ctl"", line 94, in dump_daemon_properties
    value = GLib.format_size_full(
OverflowError: -1 not in range 0 to 18446744073709551615

This is because on GNOME OS the necessary OSTree metadata is not
available to tell eos-updater the download size and unpacked size, only
the number of bytes that have been downloaded so far:
[gnome@linux ~]$ gdbus introspect --system --dest com.endlessm.Updater --object-path /com/endlessm/Updater --only-properties
node /com/endlessm/Updater {
  interface com.endlessm.Updater {
    properties:
      readonly u State = 5;
      readonly s UpdateID = '2341da03b41ba5f1b11376b7d5bbb1f5ed2d2b6c093f275e0bf1a173e39a3610';
      readonly s UpdateRefspec = 'gnome-os:gnome-os/master/x86_64-user';
      readonly s OriginalRefspec = 'gnome-os:gnome-os/master/x86_64-user';
      readonly s CurrentID = 'fc691d2fdcd5f7d44062a301888d1a86f00f48d803d1c3278915b4460e70a617';
      readonly s UpdateLabel = '';
      readonly s UpdateMessage = '';
      readonly s Version = '';
      readonly x DownloadSize = -1;
      readonly x DownloadedBytes = 214456258;
      readonly x UnpackedSize = -1;
      readonly x FullDownloadSize = -1;
      readonly x FullUnpackedSize = -1;
      @org.freedesktop.DBus.Deprecated(""true"")
      readonly u ErrorCode = 0;
      readonly s ErrorName = '';
      readonly s ErrorMessage = '';
  };
};","Spotted on GNOME OS:
======= Properties =======
           State: Fetching
       CurrentID: 'fc691d2fdcd5f7d44062a301888d1a86f00f48d803d1c3278915b4460e70a617'
Traceback (most recent call last):
  File ""/usr/bin/eos-updater-ctl"", line 124, in name_appeared_cb
    dump_daemon_properties(proxy)
  File ""/usr/bin/eos-updater-ctl"", line 94, in dump_daemon_properties
    value = GLib.format_size_full(
OverflowError: -1 not in range 0 to 18446744073709551615

This is because on GNOME OS the necessary OSTree metadata is not
available to tell eos-updater the download size and unpacked size, only
the number of bytes that have been downloaded so far:
[gnome@linux ~]$ gdbus introspect --system --dest com.endlessm.Updater --object-path /com/endlessm/Updater --only-properties
node /com/endlessm/Updater {
  interface com.endlessm.Updater {
    properties:
      readonly u State = 5;
      readonly s UpdateID = '2341da03b41ba5f1b11376b7d5bbb1f5ed2d2b6c093f275e0bf1a173e39a3610';
      readonly s UpdateRefspec = 'gnome-os:gnome-os/master/x86_64-user';
      readonly s OriginalRefspec = 'gnome-os:gnome-os/master/x86_64-user';
      readonly s CurrentID = 'fc691d2fdcd5f7d44062a301888d1a86f00f48d803d1c3278915b4460e70a617';
      readonly s UpdateLabel = '';
      readonly s UpdateMessage = '';
      readonly s Version = '';
      readonly x DownloadSize = -1;
      readonly x DownloadedBytes = 214456258;
      readonly x UnpackedSize = -1;
      readonly x FullDownloadSize = -1;
      readonly x FullUnpackedSize = -1;
      @org.freedesktop.DBus.Deprecated(""true"")
      readonly u ErrorCode = 0;
      readonly s ErrorName = '';
      readonly s ErrorMessage = '';
  };
};",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,288,2021-08-03T14:08:57Z,2021-08-03T14:13:50Z,2021-08-03T14:13:54Z,MERGED,True,6,3,1,https://github.com/wjt,ctl: Handle size properties being negative,1,[],https://github.com/endlessm/eos-updater/pull/288,https://github.com/wjt,2,https://github.com/endlessm/eos-updater/pull/288#issuecomment-891880860,"Spotted on GNOME OS:
======= Properties =======
           State: Fetching
       CurrentID: 'fc691d2fdcd5f7d44062a301888d1a86f00f48d803d1c3278915b4460e70a617'
Traceback (most recent call last):
  File ""/usr/bin/eos-updater-ctl"", line 124, in name_appeared_cb
    dump_daemon_properties(proxy)
  File ""/usr/bin/eos-updater-ctl"", line 94, in dump_daemon_properties
    value = GLib.format_size_full(
OverflowError: -1 not in range 0 to 18446744073709551615

This is because on GNOME OS the necessary OSTree metadata is not
available to tell eos-updater the download size and unpacked size, only
the number of bytes that have been downloaded so far:
[gnome@linux ~]$ gdbus introspect --system --dest com.endlessm.Updater --object-path /com/endlessm/Updater --only-properties
node /com/endlessm/Updater {
  interface com.endlessm.Updater {
    properties:
      readonly u State = 5;
      readonly s UpdateID = '2341da03b41ba5f1b11376b7d5bbb1f5ed2d2b6c093f275e0bf1a173e39a3610';
      readonly s UpdateRefspec = 'gnome-os:gnome-os/master/x86_64-user';
      readonly s OriginalRefspec = 'gnome-os:gnome-os/master/x86_64-user';
      readonly s CurrentID = 'fc691d2fdcd5f7d44062a301888d1a86f00f48d803d1c3278915b4460e70a617';
      readonly s UpdateLabel = '';
      readonly s UpdateMessage = '';
      readonly s Version = '';
      readonly x DownloadSize = -1;
      readonly x DownloadedBytes = 214456258;
      readonly x UnpackedSize = -1;
      readonly x FullDownloadSize = -1;
      readonly x FullUnpackedSize = -1;
      @org.freedesktop.DBus.Deprecated(""true"")
      readonly u ErrorCode = 0;
      readonly s ErrorName = '';
      readonly s ErrorMessage = '';
  };
};","In action:

@valentindavid Not sure to what extent GNOME OS tracks updates to eos-updater, but if you do this might be of interest.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,289,2021-08-18T18:53:23Z,2021-08-19T14:14:13Z,2021-08-19T14:14:16Z,MERGED,True,574,0,4,https://github.com/dbnicholson,Backport eos3a → eos4 conditional checkpoint work,3,[],https://github.com/endlessm/eos-updater/pull/289,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/289,"These are the 3 commits representing the conditional checkpoint implementation and tests. On my local machine none of the flatpak fixes were needed since 3.9 is still using flatpak 1.8. We'll see if Jenkins agrees.
https://phabricator.endlessm.com/T32162","These are the 3 commits representing the conditional checkpoint implementation and tests. On my local machine none of the flatpak fixes were needed since 3.9 is still using flatpak 1.8. We'll see if Jenkins agrees.
https://phabricator.endlessm.com/T32162",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,290,2021-08-20T00:28:29Z,2021-08-20T09:57:13Z,2021-08-20T09:57:15Z,MERGED,True,55,36,2,https://github.com/dbnicholson,eos-updater: Fix ref matching for eos3a → eos4 checkpoint tests,1,[],https://github.com/endlessm/eos-updater/pull/290,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/290,"The eos3a → eos4 checkpoint tests were only being applied when the refs
were literally eos3a and eos4. Unfortunately, our refs actually look
like os/eos/<arch>/<branch>. Expand the matches so they also accept
/<branch> at the end of the ref.
https://phabricator.endlessm.com/T32162","The eos3a → eos4 checkpoint tests were only being applied when the refs
were literally eos3a and eos4. Unfortunately, our refs actually look
like os/eos/<arch>/<branch>. Expand the matches so they also accept
/<branch> at the end of the ref.
https://phabricator.endlessm.com/T32162",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,291,2021-08-20T20:26:06Z,2021-08-20T21:10:20Z,2021-08-20T21:10:22Z,MERGED,True,15,14,1,https://github.com/dbnicholson,eos-updater: Mock architecture for eos3a → eos4 ref matching tests,1,[],https://github.com/endlessm/eos-updater/pull/291,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/291,"When the test host is aarch64, the expected results of these tests are
effectively ignored unless architecture itself is being mocked. See
17e9b62 for details.
This caused a problem for the ref matching tests when run on aarch64.
These cases set a condition that would cause the checkpoint to be
ignored and then use different refs to check if the condition is
actually used. When the host arch is aarch64, the test later decides
that the expected result is an ignored checkpoint regardless of what the
test case said the expected result is.
To workaround this, change the ref matching cases to override the
architecture to aarch64. This prepares the checkpoint to be ignored
when the refs match as it was previously using the split disk override
for. However, now it skips past the condition that adjusts the expected
outcome if the host itself is aarch64.
https://phabricator.endlessm.com/T32162","When the test host is aarch64, the expected results of these tests are
effectively ignored unless architecture itself is being mocked. See
17e9b62 for details.
This caused a problem for the ref matching tests when run on aarch64.
These cases set a condition that would cause the checkpoint to be
ignored and then use different refs to check if the condition is
actually used. When the host arch is aarch64, the test later decides
that the expected result is an ignored checkpoint regardless of what the
test case said the expected result is.
To workaround this, change the ref matching cases to override the
architecture to aarch64. This prepares the checkpoint to be ignored
when the refs match as it was previously using the split disk override
for. However, now it skips past the condition that adjusts the expected
outcome if the host itself is aarch64.
https://phabricator.endlessm.com/T32162",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,291,2021-08-20T20:26:06Z,2021-08-20T21:10:20Z,2021-08-20T21:10:22Z,MERGED,True,15,14,1,https://github.com/dbnicholson,eos-updater: Mock architecture for eos3a → eos4 ref matching tests,1,[],https://github.com/endlessm/eos-updater/pull/291,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/291#issuecomment-902939201,"When the test host is aarch64, the expected results of these tests are
effectively ignored unless architecture itself is being mocked. See
17e9b62 for details.
This caused a problem for the ref matching tests when run on aarch64.
These cases set a condition that would cause the checkpoint to be
ignored and then use different refs to check if the condition is
actually used. When the host arch is aarch64, the test later decides
that the expected result is an ignored checkpoint regardless of what the
test case said the expected result is.
To workaround this, change the ref matching cases to override the
architecture to aarch64. This prepares the checkpoint to be ignored
when the refs match as it was previously using the split disk override
for. However, now it skips past the condition that adjusts the expected
outcome if the host itself is aarch64.
https://phabricator.endlessm.com/T32162",This time I actually did a scratch test on OBS and saw that it succeeded for aarch64 (https://obs-master.endlessm-sf.com/package/show/home:dbn:branches:eos:3.9:endless/eos-updater).,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,292,2021-09-24T02:59:06Z,2021-10-05T20:12:18Z,2021-10-05T20:12:29Z,MERGED,True,18,10,2,https://github.com/starnight,eos-updater: Fix for upgrading to eos4 and newer's ref,2,[],https://github.com/endlessm/eos-updater/pull/292,https://github.com/starnight,1,https://github.com/endlessm/eos-updater/pull/292,"Users may upgrading system from booted ref eos3a to both eos4, or even
newer target ref in the future. The newer target ref is defined as
""latest1"" in T32550.
This PR allows eos3.9 nexthw upgrading to eos4 or newer ref as well.
https://phabricator.endlessm.com/T32552
https://phabricator.endlessm.com/T32542","Users may upgrading system from booted ref eos3a to both eos4, or even
newer target ref in the future. The newer target ref is defined as
""latest1"" in T32550.
This PR allows eos3.9 nexthw upgrading to eos4 or newer ref as well.
https://phabricator.endlessm.com/T32552
https://phabricator.endlessm.com/T32542",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,292,2021-09-24T02:59:06Z,2021-10-05T20:12:18Z,2021-10-05T20:12:29Z,MERGED,True,18,10,2,https://github.com/starnight,eos-updater: Fix for upgrading to eos4 and newer's ref,2,[],https://github.com/endlessm/eos-updater/pull/292,https://github.com/pwithnall,2,https://github.com/endlessm/eos-updater/pull/292#issuecomment-926657075,"Users may upgrading system from booted ref eos3a to both eos4, or even
newer target ref in the future. The newer target ref is defined as
""latest1"" in T32550.
This PR allows eos3.9 nexthw upgrading to eos4 or newer ref as well.
https://phabricator.endlessm.com/T32552
https://phabricator.endlessm.com/T32542","Once you’ve got the tests passing, I think it would add confidence to add a couple of new test entries in the tests array in test_update_refspec_checkpoint_eos3a_eos4() which check the os/eos/arm64/eos3a → os/eos/arm64/latest1 transition (for T32552) and the os/eos/nexthw/eos3.9 → os/eos/amd64/eos4 transition (for T32542).",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,293,2021-10-06T06:40:35Z,2021-10-06T09:47:08Z,2021-10-06T09:47:10Z,MERGED,True,18,10,2,https://github.com/starnight,eos-updater: Fix for upgrading to eos4 and newer's ref (cherry-pick),2,[],https://github.com/endlessm/eos-updater/pull/293,https://github.com/starnight,1,https://github.com/endlessm/eos-updater/pull/293,"Users may upgrading system from booted ref eos3a to both eos4, or even
newer target ref in the future. The newer target ref is defined as
""latest1"" in T32550.
This PR allows eos3.9 nexthw upgrading to eos4 or newer ref as well.
https://phabricator.endlessm.com/T32552
https://phabricator.endlessm.com/T32542","Users may upgrading system from booted ref eos3a to both eos4, or even
newer target ref in the future. The newer target ref is defined as
""latest1"" in T32550.
This PR allows eos3.9 nexthw upgrading to eos4 or newer ref as well.
https://phabricator.endlessm.com/T32552
https://phabricator.endlessm.com/T32542",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,294,2021-10-06T06:48:50Z,2021-10-06T08:19:54Z,2021-10-06T08:42:59Z,MERGED,True,69,41,2,https://github.com/starnight,eos-updater: Fix for upgrading to eos4 and newer's ref (sync with master),7,[],https://github.com/endlessm/eos-updater/pull/294,https://github.com/starnight,1,https://github.com/endlessm/eos-updater/pull/294,"Users may upgrading system from booted ref eos3a to both eos4, or even
newer target ref in the future. The newer target ref is defined as
""latest1"" in T32550.
This PR allows eos3.9 nexthw upgrading to eos4 or newer ref as well.
https://phabricator.endlessm.com/T32552
https://phabricator.endlessm.com/T32542","Users may upgrading system from booted ref eos3a to both eos4, or even
newer target ref in the future. The newer target ref is defined as
""latest1"" in T32550.
This PR allows eos3.9 nexthw upgrading to eos4 or newer ref as well.
https://phabricator.endlessm.com/T32552
https://phabricator.endlessm.com/T32542",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,295,2021-12-02T07:25:50Z,2021-12-02T08:30:47Z,2021-12-02T08:30:47Z,MERGED,True,0,3,3,https://github.com/abderrahim,build: remove 'version' parameter from static libraries,1,[],https://github.com/endlessm/eos-updater/pull/295,https://github.com/abderrahim,1,https://github.com/endlessm/eos-updater/pull/295,it is invalid and fails to build with meson 0.60,it is invalid and fails to build with meson 0.60,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,295,2021-12-02T07:25:50Z,2021-12-02T08:30:47Z,2021-12-02T08:30:47Z,MERGED,True,0,3,3,https://github.com/abderrahim,build: remove 'version' parameter from static libraries,1,[],https://github.com/endlessm/eos-updater/pull/295,https://github.com/eos-shell-build,2,https://github.com/endlessm/eos-updater/pull/295#issuecomment-984359079,it is invalid and fails to build with meson 0.60,I don't recognize the submitter as a member of @endlessm. Can somebody in @endlessm verify the patch? See https://phabricator.endlessm.com/w/software/build/ci-integration/#pull-requests for more details.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,296,2021-12-15T01:21:22Z,,2022-01-05T11:28:20Z,OPEN,False,695,123,11,https://github.com/dbnicholson,Add prune-ref flatpak-installer action,5,[],https://github.com/endlessm/eos-updater/pull/296,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/296,"The purpose of this PR is to add an action for the flatpak installer to cleanup dangling OSTree refs for uninstalled Flatpaks. This is primarily for cleaning up from bugs here or in other software (the image builder).
The PR could be split up some if preferred. The first 4 commits are entirely independent things I came across when making tests. The last commit could be broken up by component. It also might need a couple more tests.
https://phabricator.endlessm.com/T32791","The purpose of this PR is to add an action for the flatpak installer to cleanup dangling OSTree refs for uninstalled Flatpaks. This is primarily for cleaning up from bugs here or in other software (the image builder).
The PR could be split up some if preferred. The first 4 commits are entirely independent things I came across when making tests. The last commit could be broken up by component. It also might need a couple more tests.
https://phabricator.endlessm.com/T32791",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,296,2021-12-15T01:21:22Z,,2022-01-05T11:28:20Z,OPEN,False,695,123,11,https://github.com/dbnicholson,Add prune-ref flatpak-installer action,5,[],https://github.com/endlessm/eos-updater/pull/296,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/296#issuecomment-995247826,"The purpose of this PR is to add an action for the flatpak installer to cleanup dangling OSTree refs for uninstalled Flatpaks. This is primarily for cleaning up from bugs here or in other software (the image builder).
The PR could be split up some if preferred. The first 4 commits are entirely independent things I came across when making tests. The last commit could be broken up by component. It also might need a couple more tests.
https://phabricator.endlessm.com/T32791",I broke out the unrelated fixes to #296 and will rebase if that's merged.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,297,2021-12-15T22:01:14Z,2022-01-05T10:30:57Z,2022-01-05T10:31:01Z,MERGED,True,79,60,5,https://github.com/dbnicholson,Assorted test fixes,4,[],https://github.com/endlessm/eos-updater/pull/297,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/297,Here are a few fixes I accumulated while working on #296. See the commit messages for details.,Here are a few fixes I accumulated while working on #296. See the commit messages for details.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/298,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1005985825,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","I tested this in a VM and it works. However, one thing I noticed that's lost is the repo pruning. The deployment is now written out in the shutdown path and ostree makes the decision not to trigger pruning there. I think we want to add a call to ostree_sysroot_cleanup_prune_repo somewhere, but I don't know where yet. I'm going to see where they do this in rpm-ostree.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,3,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006103738,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","Hmm, CI hit a test timeout, which I'd also seen in OBS. There's currently a 360 second timeout for the slower tests and I routinely see the flatpak install test take nearly 300 seconds on my fast laptop. I think I'll add a commit to bump that to 600 seconds.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,4,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006106403,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","More detail in phabricator, but for pruning it appears that rpm-ostree just does the normal cleanup once the deployment is staged. Since the rollback deployment hasn't been deleted at that point (it's deleted when finalizing), you don't get the disk space back immediately. That would happen the next time you apply an update (with the current code).
If we want to be more aggressive about reclaiming the disk space, we'd have to add another ostree_sysroot_cleanup in an earlier state. One thought I had was to do it when polling indicates no updates. But that could thrash the disk unnecessarily often.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/wjt,5,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006109656,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","An idea I haven't thought through:

eos-updater-cleanup.service, which (calls a D-Bus method on eos-updater which) runs ostree_sysroot_cleanup, and is disabled by default
eos-updater-trigger-cleanup.service, enabled with ConditionNeedsUpdate=/etc, which just runs systemctl enable --runtime eos-updater-cleanup.service",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/wjt,6,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006110093,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","I'm sure the answer is ""not easily"" but can the Flatpak install test be made to take less than 300 seconds, perhaps with a crude implement such as eatmydata or running entirely on tmpfs?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,7,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006111205,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","I'm sure the answer is ""not easily"" but can the Flatpak install test be made to take less than 300 seconds, perhaps with a crude implement such as eatmydata or running entirely on tmpfs.

I would like that since the test suite turnaround is slow for development. I need to figure out where it's taking so much time. I added the commit here which we can banter about. I also punted on the more aggressive pruning, which we can also discuss.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,8,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006119420,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","An idea I haven't thought through:

eos-updater-cleanup.service, which (calls a D-Bus method on eos-updater which) runs ostree_sysroot_cleanup, and is disabled by default
eos-updater-trigger-cleanup.service, enabled with ConditionNeedsUpdate=/etc, which just runs systemctl enable --runtime eos-updater-cleanup.service


I like this. It could be even simpler since ostree admin cleanup is just a wrapper around ostree_sysroot_cleanup. Any reason not to eos-updater-cleanup.service have the ConditionNeedsUpdate=/etc directly?",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/wjt,9,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006127783,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","My thinking was that don't want it to block the boot process, c.f. eos-split-flatpak-repos.service, so it wouldn't be triggered early enough. But perhaps it could be Type=simple so systemd doesn't wait for it to finish. Add a sprinkling of IOSchedulingClass=idle, ...",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,10,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006137064,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","My thinking was that don't want it to block the boot process, c.f. eos-split-flatpak-repos.service, so it wouldn't be triggered early enough. But perhaps it could be Type=simple so systemd doesn't wait for it to finish. Add a sprinkling of IOSchedulingClass=idle, ...

Ah, right. Especially since this has to run Before=systemd-update-done.service, so it definitely would block early boot.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,11,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006597861,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","Another idea that's a little simpler to avoid ConditionNeedsUpdate is to use a separate stamp file. After all, eos-updater knows exactly when the system is updated. For instance, it could create /sysroot/.cleanup and then we would have a systemd unit like so:
[Unit]
ConditionPathExists=/sysroot/.cleanup

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/bin/ostree admin cleanup
ExecStartPost=/bin/rm -f /sysroot/.cleanup

In order to not get it to block multi-user.target, you could use path unit. Or we could just set DefaultDependencies=no so that multi-user.target doesn't automatically add After to it.
I actually think the above would be useful upstream as a complement to the existing ostree-finalize-staged.service.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/wjt,12,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006602969,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","Perhaps it should put the stamp file into /etc in the new deployment? Otherwise, consider these steps:

Boot into deployment A
Stage deployment B, write stamp file
Unclean shutdown
Boot into deployment A
ostree admin cleanup runs, stamp file removed
Shut down cleanly. This causes B to be finalized
Boot into B. No cleanup",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,13,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1006720336,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","Good point about /etc and an unclean shutdown. I opened ostreedev/ostree#2510 upstream. If the file was written out by the ostree finalization routine, then it could be in /sysroot.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,14,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1009124675,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","It looks like ostreedev/ostree#2510 is probably not imminent, so I'm going to do something similar downstream. I think I'm going to try to address it here, but if I get stuck I think we can merge this and fix the pruning in a follow up.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,15,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1010247188,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","I added a commit to handle cleanup with a drop-in for ostree-finalize-staged.service + a new eos-updater-autocleanup.service unit. For the latter it's just running ostree admin cleanup and rm -f /sysroot/.cleanup, but I could also write a small utility in eos-updater that handles /sysroot/.cleanup itself.
I tested this in a VM and it seems to DTRT. On my SSD system it took 5 seconds and didn't block gdm:
Jan 11 11:22:14 endless systemd[1]: Starting Automatically cleanup after staged Endless OS Updater deployment...
...
Jan 11 11:22:18 endless systemd[1]: Reached target Multi-User System.
Jan 11 11:22:18 endless systemd[1]: Reached target Graphical Interface.
...
Jan 11 11:22:19 endless systemd[1]: Finished Automatically cleanup after staged Endless OS Updater deployment.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,298,2022-01-05T18:42:51Z,2022-01-13T09:20:06Z,2022-01-13T09:20:09Z,MERGED,True,127,32,7,https://github.com/dbnicholson,apply: Use staged deployment on booted systems,3,[],https://github.com/endlessm/eos-updater/pull/298,https://github.com/dbnicholson,16,https://github.com/endlessm/eos-updater/pull/298#issuecomment-1011304946,"When finalizing an OSTree deployment, the current /etc is merged with
the new commit's /usr/etc. Any changes that happen in the current
/etc after the deployment has been finalized will not appear in the
new deployment. Since eos-updater is often run in the background, it's
likely the user will make changes in /etc (such as creating a new
user) long before the new deployment is booted into.
To address this issue, OSTree has provided the concept of a staged
deployment since 2018.5. The new deployment is initialized but not
finalized during shutdown via the ostree-finalize-staged.service
systemd unit. Since staged deployments only work on OSTree booted
systems that can initiate systemd units, this can't really work in the
current test suite. The old full deployment method is kept for that
case.
Note that staged deployment finalization depends on the
ostree-finalize-staged.path systemd unit being activated. Currently,
OSTree does this on demand but in the future it may require the OS to
explicitly activate the unit via a systemd preset or similar mechanism.
https://phabricator.endlessm.com/T5658","Something I thought of later is that the ostree_sysroot_cleanup run after the deployment is initially staged has basically no effect with the addition of the autocleanup handling. In particular, it will run a repo prune that is unlikely to prune anything since the refs for the old rollback deployment haven't been deleted yet. I added a comment that it could be skipped in that case. There's no harm to keeping it except that there's a process hammering your disk for likely no gain.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,299,2022-02-08T00:18:37Z,2022-02-08T10:40:32Z,2022-02-08T10:40:32Z,MERGED,True,3,3,1,https://github.com/mwleeds,Don't use volatile qualifier for quark,1,[],https://github.com/endlessm/eos-updater/pull/299,https://github.com/mwleeds,1,https://github.com/endlessm/eos-updater/pull/299,It is not needed per the g_dbus_error_register_error_domain() docs.,It is not needed per the g_dbus_error_register_error_domain() docs.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,299,2022-02-08T00:18:37Z,2022-02-08T10:40:32Z,2022-02-08T10:40:32Z,MERGED,True,3,3,1,https://github.com/mwleeds,Don't use volatile qualifier for quark,1,[],https://github.com/endlessm/eos-updater/pull/299,https://github.com/eos-shell-build,2,https://github.com/endlessm/eos-updater/pull/299#issuecomment-1032077697,It is not needed per the g_dbus_error_register_error_domain() docs.,I don't recognize the submitter as a member of @endlessm. Can somebody in @endlessm verify the patch? See https://phabricator.endlessm.com/w/software/build/ci-integration/#pull-requests for more details.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,299,2022-02-08T00:18:37Z,2022-02-08T10:40:32Z,2022-02-08T10:40:32Z,MERGED,True,3,3,1,https://github.com/mwleeds,Don't use volatile qualifier for quark,1,[],https://github.com/endlessm/eos-updater/pull/299,https://github.com/pwithnall,3,https://github.com/endlessm/eos-updater/pull/299#issuecomment-1032430591,It is not needed per the g_dbus_error_register_error_domain() docs.,ok to test,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,300,2022-02-16T19:35:05Z,2022-02-16T21:36:21Z,2022-02-16T21:36:24Z,MERGED,True,30,54,1,https://github.com/dbnicholson,"Revert ""apply: Use staged deployment on booted systems""",1,[],https://github.com/endlessm/eos-updater/pull/300,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/300,"This reverts commit 12d263b. On systems
such as PAYG where /boot is an automount,
ostree-finalize-staged.service fails to work correctly if the
automount expires before shutdown. Until a solution to that issue is
found, go back to the non-staged deployments we've used for years.
https://phabricator.endlessm.com/T5658
systemd/systemd#22528
ostreedev/ostree#2543","This reverts commit 12d263b. On systems
such as PAYG where /boot is an automount,
ostree-finalize-staged.service fails to work correctly if the
automount expires before shutdown. Until a solution to that issue is
found, go back to the non-staged deployments we've used for years.
https://phabricator.endlessm.com/T5658
systemd/systemd#22528
ostreedev/ostree#2543",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,300,2022-02-16T19:35:05Z,2022-02-16T21:36:21Z,2022-02-16T21:36:24Z,MERGED,True,30,54,1,https://github.com/dbnicholson,"Revert ""apply: Use staged deployment on booted systems""",1,[],https://github.com/endlessm/eos-updater/pull/300,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/300#issuecomment-1042091858,"This reverts commit 12d263b. On systems
such as PAYG where /boot is an automount,
ostree-finalize-staged.service fails to work correctly if the
automount expires before shutdown. Until a solution to that issue is
found, go back to the non-staged deployments we've used for years.
https://phabricator.endlessm.com/T5658
systemd/systemd#22528
ostreedev/ostree#2543","I'm proposing that we only revert on eos4.0 and not on master. Also, I left the sysroot autocleanup change in since it has no effect if staged deployments aren't in use.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,301,2022-03-03T23:01:56Z,2022-03-10T20:46:39Z,2022-03-11T10:14:16Z,MERGED,True,169,4,6,https://github.com/dbnicholson,apply: Don't use staged deployments when /boot is automounted,2,[],https://github.com/endlessm/eos-updater/pull/301,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/301,"The ostree staged deployment process works by waiting until shutdown to
swap the /boot symlinks to make the new deployment the default.
However, when /boot is the EFI System Partition and there's no fstab
entry, systemd-gpt-auto-generator sets up an automount so that the
VFAT filesystem is only exposed when needed.
Unfortunately, there are 2 bugs that make this process very fragile:


Once a systemd automount unit is scheduled to be stopped, it ignores
notifications from autofs that the target filesystem should be
mounted. Therefore, if /boot isn't mounted when shutdown begins,
ostree admin finalize-staged will fail. See
systemd/systemd#22528.


autofs is not mount namespace aware, so it will begin the expiration
timer for a mount unit unless a process in the root namespace is
keeping it active. Since ostree admin finalize-staged is run from a
mount namespace (either via systemd or its own to ensure /sysroot
and /boot are mounted read-write), the automount daemon (systemd)
will try to unmount the filesystem if it expires during this process.
See https://bugzilla.redhat.com/show_bug.cgi?id=2056090.


Therefore, if /boot is an autofs filesystem, use a full deployment
instead of a staged deployment. Since systems with an automounted
/boot are not common, we want to retain the benefit of staged
deployments for more normal systems. See
ostreedev/ostree#2543 for potential future
fixes in ostree.
https://phabricator.endlessm.com/T33136","The ostree staged deployment process works by waiting until shutdown to
swap the /boot symlinks to make the new deployment the default.
However, when /boot is the EFI System Partition and there's no fstab
entry, systemd-gpt-auto-generator sets up an automount so that the
VFAT filesystem is only exposed when needed.
Unfortunately, there are 2 bugs that make this process very fragile:


Once a systemd automount unit is scheduled to be stopped, it ignores
notifications from autofs that the target filesystem should be
mounted. Therefore, if /boot isn't mounted when shutdown begins,
ostree admin finalize-staged will fail. See
systemd/systemd#22528.


autofs is not mount namespace aware, so it will begin the expiration
timer for a mount unit unless a process in the root namespace is
keeping it active. Since ostree admin finalize-staged is run from a
mount namespace (either via systemd or its own to ensure /sysroot
and /boot are mounted read-write), the automount daemon (systemd)
will try to unmount the filesystem if it expires during this process.
See https://bugzilla.redhat.com/show_bug.cgi?id=2056090.


Therefore, if /boot is an autofs filesystem, use a full deployment
instead of a staged deployment. Since systems with an automounted
/boot are not common, we want to retain the benefit of staged
deployments for more normal systems. See
ostreedev/ostree#2543 for potential future
fixes in ostree.
https://phabricator.endlessm.com/T33136",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,301,2022-03-03T23:01:56Z,2022-03-10T20:46:39Z,2022-03-11T10:14:16Z,MERGED,True,169,4,6,https://github.com/dbnicholson,apply: Don't use staged deployments when /boot is automounted,2,[],https://github.com/endlessm/eos-updater/pull/301,https://github.com/dbnicholson,2,https://github.com/endlessm/eos-updater/pull/301#issuecomment-1058617209,"The ostree staged deployment process works by waiting until shutdown to
swap the /boot symlinks to make the new deployment the default.
However, when /boot is the EFI System Partition and there's no fstab
entry, systemd-gpt-auto-generator sets up an automount so that the
VFAT filesystem is only exposed when needed.
Unfortunately, there are 2 bugs that make this process very fragile:


Once a systemd automount unit is scheduled to be stopped, it ignores
notifications from autofs that the target filesystem should be
mounted. Therefore, if /boot isn't mounted when shutdown begins,
ostree admin finalize-staged will fail. See
systemd/systemd#22528.


autofs is not mount namespace aware, so it will begin the expiration
timer for a mount unit unless a process in the root namespace is
keeping it active. Since ostree admin finalize-staged is run from a
mount namespace (either via systemd or its own to ensure /sysroot
and /boot are mounted read-write), the automount daemon (systemd)
will try to unmount the filesystem if it expires during this process.
See https://bugzilla.redhat.com/show_bug.cgi?id=2056090.


Therefore, if /boot is an autofs filesystem, use a full deployment
instead of a staged deployment. Since systems with an automounted
/boot are not common, we want to retain the benefit of staged
deployments for more normal systems. See
ostreedev/ostree#2543 for potential future
fixes in ostree.
https://phabricator.endlessm.com/T33136","I haven't tested this yet but wanted to get it out there. I have another version that instead checks if /boot is VFAT, but I think this is better since automounting is the real problem, not VFAT.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,301,2022-03-03T23:01:56Z,2022-03-10T20:46:39Z,2022-03-11T10:14:16Z,MERGED,True,169,4,6,https://github.com/dbnicholson,apply: Don't use staged deployments when /boot is automounted,2,[],https://github.com/endlessm/eos-updater/pull/301,https://github.com/dbnicholson,3,https://github.com/endlessm/eos-updater/pull/301#issuecomment-1063433154,"The ostree staged deployment process works by waiting until shutdown to
swap the /boot symlinks to make the new deployment the default.
However, when /boot is the EFI System Partition and there's no fstab
entry, systemd-gpt-auto-generator sets up an automount so that the
VFAT filesystem is only exposed when needed.
Unfortunately, there are 2 bugs that make this process very fragile:


Once a systemd automount unit is scheduled to be stopped, it ignores
notifications from autofs that the target filesystem should be
mounted. Therefore, if /boot isn't mounted when shutdown begins,
ostree admin finalize-staged will fail. See
systemd/systemd#22528.


autofs is not mount namespace aware, so it will begin the expiration
timer for a mount unit unless a process in the root namespace is
keeping it active. Since ostree admin finalize-staged is run from a
mount namespace (either via systemd or its own to ensure /sysroot
and /boot are mounted read-write), the automount daemon (systemd)
will try to unmount the filesystem if it expires during this process.
See https://bugzilla.redhat.com/show_bug.cgi?id=2056090.


Therefore, if /boot is an autofs filesystem, use a full deployment
instead of a staged deployment. Since systems with an automounted
/boot are not common, we want to retain the benefit of staged
deployments for more normal systems. See
ostreedev/ostree#2543 for potential future
fixes in ostree.
https://phabricator.endlessm.com/T33136",I tested this on a PAYG system and could see that it did a finalized deployment instead of a staged deployment. I ended up splitting out the method to the util library so I could unit test it.,True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,301,2022-03-03T23:01:56Z,2022-03-10T20:46:39Z,2022-03-11T10:14:16Z,MERGED,True,169,4,6,https://github.com/dbnicholson,apply: Don't use staged deployments when /boot is automounted,2,[],https://github.com/endlessm/eos-updater/pull/301,https://github.com/jprvita,4,https://github.com/endlessm/eos-updater/pull/301#issuecomment-1063464538,"The ostree staged deployment process works by waiting until shutdown to
swap the /boot symlinks to make the new deployment the default.
However, when /boot is the EFI System Partition and there's no fstab
entry, systemd-gpt-auto-generator sets up an automount so that the
VFAT filesystem is only exposed when needed.
Unfortunately, there are 2 bugs that make this process very fragile:


Once a systemd automount unit is scheduled to be stopped, it ignores
notifications from autofs that the target filesystem should be
mounted. Therefore, if /boot isn't mounted when shutdown begins,
ostree admin finalize-staged will fail. See
systemd/systemd#22528.


autofs is not mount namespace aware, so it will begin the expiration
timer for a mount unit unless a process in the root namespace is
keeping it active. Since ostree admin finalize-staged is run from a
mount namespace (either via systemd or its own to ensure /sysroot
and /boot are mounted read-write), the automount daemon (systemd)
will try to unmount the filesystem if it expires during this process.
See https://bugzilla.redhat.com/show_bug.cgi?id=2056090.


Therefore, if /boot is an autofs filesystem, use a full deployment
instead of a staged deployment. Since systems with an automounted
/boot are not common, we want to retain the benefit of staged
deployments for more normal systems. See
ostreedev/ostree#2543 for potential future
fixes in ostree.
https://phabricator.endlessm.com/T33136","I tested this on a PAYG system and could see that it did a finalized deployment instead of a staged deployment. I ended up splitting out the method to the util library so I could unit test it.

The new changes look good to me -- not sure if you want an extra pair of eyes on this, since this is critical code. In any case, master PAYG systems are currently failing to boot, so we won't be able to test it on ostrees until that is fixed.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,301,2022-03-03T23:01:56Z,2022-03-10T20:46:39Z,2022-03-11T10:14:16Z,MERGED,True,169,4,6,https://github.com/dbnicholson,apply: Don't use staged deployments when /boot is automounted,2,[],https://github.com/endlessm/eos-updater/pull/301,https://github.com/dbnicholson,5,https://github.com/endlessm/eos-updater/pull/301#issuecomment-1063579609,"The ostree staged deployment process works by waiting until shutdown to
swap the /boot symlinks to make the new deployment the default.
However, when /boot is the EFI System Partition and there's no fstab
entry, systemd-gpt-auto-generator sets up an automount so that the
VFAT filesystem is only exposed when needed.
Unfortunately, there are 2 bugs that make this process very fragile:


Once a systemd automount unit is scheduled to be stopped, it ignores
notifications from autofs that the target filesystem should be
mounted. Therefore, if /boot isn't mounted when shutdown begins,
ostree admin finalize-staged will fail. See
systemd/systemd#22528.


autofs is not mount namespace aware, so it will begin the expiration
timer for a mount unit unless a process in the root namespace is
keeping it active. Since ostree admin finalize-staged is run from a
mount namespace (either via systemd or its own to ensure /sysroot
and /boot are mounted read-write), the automount daemon (systemd)
will try to unmount the filesystem if it expires during this process.
See https://bugzilla.redhat.com/show_bug.cgi?id=2056090.


Therefore, if /boot is an autofs filesystem, use a full deployment
instead of a staged deployment. Since systems with an automounted
/boot are not common, we want to retain the benefit of staged
deployments for more normal systems. See
ostreedev/ostree#2543 for potential future
fixes in ostree.
https://phabricator.endlessm.com/T33136","I think it's good, but if @pwithnall has a moment to review the util side and tests that would be nice. I'll wait a day and merge if he doesn't. It's still useful master to check that normal Endless systems still get staged deployments.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,301,2022-03-03T23:01:56Z,2022-03-10T20:46:39Z,2022-03-11T10:14:16Z,MERGED,True,169,4,6,https://github.com/dbnicholson,apply: Don't use staged deployments when /boot is automounted,2,[],https://github.com/endlessm/eos-updater/pull/301,https://github.com/dbnicholson,6,https://github.com/endlessm/eos-updater/pull/301#issuecomment-1064488174,"The ostree staged deployment process works by waiting until shutdown to
swap the /boot symlinks to make the new deployment the default.
However, when /boot is the EFI System Partition and there's no fstab
entry, systemd-gpt-auto-generator sets up an automount so that the
VFAT filesystem is only exposed when needed.
Unfortunately, there are 2 bugs that make this process very fragile:


Once a systemd automount unit is scheduled to be stopped, it ignores
notifications from autofs that the target filesystem should be
mounted. Therefore, if /boot isn't mounted when shutdown begins,
ostree admin finalize-staged will fail. See
systemd/systemd#22528.


autofs is not mount namespace aware, so it will begin the expiration
timer for a mount unit unless a process in the root namespace is
keeping it active. Since ostree admin finalize-staged is run from a
mount namespace (either via systemd or its own to ensure /sysroot
and /boot are mounted read-write), the automount daemon (systemd)
will try to unmount the filesystem if it expires during this process.
See https://bugzilla.redhat.com/show_bug.cgi?id=2056090.


Therefore, if /boot is an autofs filesystem, use a full deployment
instead of a staged deployment. Since systems with an automounted
/boot are not common, we want to retain the benefit of staged
deployments for more normal systems. See
ostreedev/ostree#2543 for potential future
fixes in ostree.
https://phabricator.endlessm.com/T33136","I think @pwithnall is too deep in gnome-software land to take a look, so I'm going to go ahead and merge.",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,302,2022-03-11T19:32:48Z,2022-03-14T09:27:15Z,2022-03-14T09:27:17Z,MERGED,True,219,30,6,https://github.com/dbnicholson,Restore staged deployments for eos4.0,3,[],https://github.com/endlessm/eos-updater/pull/302,https://github.com/dbnicholson,1,https://github.com/endlessm/eos-updater/pull/302,"Bring back staged deployments for eos4.0 with the workaround to not use them on an automounted /boot.
https://phabricator.endlessm.com/T33136","Bring back staged deployments for eos4.0 with the workaround to not use them on an automounted /boot.
https://phabricator.endlessm.com/T33136",True,{}
endlessm/eos-updater,https://github.com/endlessm/eos-updater,303,2022-04-20T12:30:32Z,2022-04-20T13:43:17Z,2022-04-20T13:43:20Z,MERGED,True,3,0,1,https://github.com/wjt,Document that an empty autoinstall file is legal,1,[],https://github.com/endlessm/eos-updater/pull/303,https://github.com/wjt,1,https://github.com/endlessm/eos-updater/pull/303,"This has been true since the very first commit of this functionality,
but was previously undocumented except in a source-code comment.","This has been true since the very first commit of this functionality,
but was previously undocumented except in a source-code comment.",True,{}
