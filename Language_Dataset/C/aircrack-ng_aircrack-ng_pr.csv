aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1838,2018-03-23T22:26:10Z,2018-03-23T22:27:13Z,2018-03-23T22:27:21Z,MERGED,True,0,18,1,https://github.com/jbenden,sha1-sse2.S: Always PRELOAD values via the macro.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1838,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1838,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/ChunshengZhao,1,https://github.com/aircrack-ng/aircrack-ng/pull/1840,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.","Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/ChunshengZhao,2,https://github.com/aircrack-ng/aircrack-ng/pull/1840#issuecomment-377421999,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.","Just for aireplay-ng and airodump-ng, other programs also need to be modified. But I'm not sure if that will happen, because I don't know much about it.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/ChunshengZhao,3,https://github.com/aircrack-ng/aircrack-ng/pull/1840#issuecomment-378822505,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.","@jbenden
Sorry, I rechecked the code and found no possibility of overflow.
The last character of a normal string is definitely 0x00.
e.g.
{0xe4,0x00};
If ""c"" is a utf8-flag(0xe4), s[i] is 0x00. Return 0.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/jbenden,4,https://github.com/aircrack-ng/aircrack-ng/pull/1840#issuecomment-379330919,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.","The problem isn't what you're thinking, but rather that the string length is never tested and you've used s[i+1] a lot. It could read an invalid position of memory.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/ChunshengZhao,5,https://github.com/aircrack-ng/aircrack-ng/pull/1840#issuecomment-379435769,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.",,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/jbenden,6,https://github.com/aircrack-ng/aircrack-ng/pull/1840#issuecomment-379478483,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.","Hello,
What I was proposing was to simply test lengths, too; like this:
int verifyssid(const unsigned char *s)
{
    int i;
    unsigned char c;
    int l = 0;

    if( !s || (l = (int) strlen((const char*)s)) > 32 ){//32 characters
        return 0;
    }

    for (i = 0; i < l && (c = s[i++]) != 0;) {
        if ((c & 0x80) == 0) {//ascii flag
            if(c < 0x20 || c == 0x7f){
                return 0;
            }
        } else if ((c & 0xe0) == 0xc0) {//utf8 flag
            if (i+1 < l && (s[i++] & 0xc0) != 0x80) {
                return 0;
            }
        } else if ((c & 0xf0) == 0xe0) {//utf8 flag
            if ((i+1 < l && (s[i++] & 0xc0) != 0x80) || (i+1 < l && (s[i++] & 0xc0) != 0x80)) {
                return 0;
            }
        } else if ((c & 0xf8) == 0xf0) {//utf8 flag
            if ((i+1 < l && (s[i++] & 0xc0) != 0x80) || (i+1 < l && (s[i++] & 0xc0) != 0x80) || (i+1 < l && (s[i++] & 0xc0) != 0x80)) {
                return 0;
            }
        } else {
            return 0;
        }
    }
    return 1;
}

I did not check for function correctness, but did check this code with a few static analyzers.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/ChunshengZhao,7,https://github.com/aircrack-ng/aircrack-ng/pull/1840#issuecomment-379515656,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.","If you want to detect the length of the string it should be written like this:
But I don't think it is necessary, because accidental '\0' or invalid utf8-char will immediately break of the code and avoid illegal memory access.
int verifyssid(const unsigned char *s)
{
	int i;
	unsigned char c;
	int l = 0;

	if (!s || (l = (int)strlen((const char*)s)) > 32) {//32 characters
		return 0;
	}

	for (i = 0; i < l && (c = s[i++]) != 0;) {
		if ((c & 0x80) == 0) {//ascii flag
			if (c < 0x20 || c == 0x7f) {
				return 0;
			}
		}
		else if ((c & 0xe0) == 0xc0) {//utf8 flag
			if (i <= l && (s[i++] & 0xc0) != 0x80) {
				return 0;
			}
		}
		else if ((c & 0xf0) == 0xe0) {//utf8 flag
			if ((i <= l && (s[i++] & 0xc0) != 0x80) || (i <= l && (s[i++] & 0xc0) != 0x80)) {
				return 0;
			}
		}
		else if ((c & 0xf8) == 0xf0) {//utf8 flag
			if ((i <= l && (s[i++] & 0xc0) != 0x80) || (i <= l && (s[i++] & 0xc0) != 0x80) || (i <= l && (s[i++] & 0xc0) != 0x80)) {
				return 0;
			}
		}
		else {
			return 0;
		}
	}
	return 1;
}",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1840,2018-03-29T12:17:08Z,2018-04-10T18:08:17Z,2018-05-30T23:53:14Z,MERGED,True,118,22,5,https://github.com/ChunshengZhao,Supporting UTF8-SSID,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1840,https://github.com/MPX4132,8,https://github.com/aircrack-ng/aircrack-ng/pull/1840#issuecomment-393355812,"Known issues: ""kismet.netxml"" file is not supporting UTF8-SSID.","@ChunshengZhao Thanks for taking the time to debug, man, not many people bother.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1844,2018-04-02T00:00:11Z,2018-04-19T22:12:27Z,2018-04-19T22:12:28Z,MERGED,True,167,45,3,https://github.com/ChrisLundquist,[aircrack] allow loading of hccapx files to target,4,[],https://github.com/aircrack-ng/aircrack-ng/pull/1844,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1844,"Closes #1841
I tried to do it in the existing style, but my fd was getting advanced without my consent, so I hacked it in with the ""new style"" proposed.","Closes #1841
I tried to do it in the existing style, but my fd was getting advanced without my consent, so I hacked it in with the ""new style"" proposed.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1845,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".","before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/psyborg55,2,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-405411061,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".","don't use capital, -c is for channel not -C",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-405415823,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".","@psyborg55, -c already exists in aireplay-ng",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/ChrisLundquist,4,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-405416237,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".","for clarification, -c exists, as something other than setting channel.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/psyborg55,5,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-405484315,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".",use -ch or --channel switch,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/ChrisLundquist,6,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-405490185,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".",@psyborg55 why are you so passionate about this?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/psyborg55,7,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-405494312,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".","there are -c and -C flags in airodump-ng that i both use, a need to run updated aireplay-ng after your commit could easily bring up some confusion",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/kcdtv,8,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-411915192,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".","there are -c and -C flags in airodump-ng that i both use, a need to run updated aireplay-ng after your commit could easily bring up some confusion

Well, -a means  -a                    : Filter unassociated clients in airodump-ng and means -a bssid  : set Access Point MAC address in aireplay-ng and etc... etc...
Isn't this argument irrelevant?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/ChrisLundquist,9,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-411918318,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".","I agree that it would be ideal to have a consistent interface for common options. Given that we are pretty far from that state, I think the ""add a nice feature for now"" is probably the way to go.
It seems to me that we should probably wait for a ""2.0"" release before reworking/standardizing all the flags for all the different tools as it would likely break any automation.",True,"{'THUMBS_UP': ['https://github.com/kcdtv', 'https://github.com/VanBuren77', 'https://github.com/buzzdeee', 'https://github.com/pbartruff']}"
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1845,2018-04-02T04:08:23Z,,2021-08-23T03:07:51Z,OPEN,False,12,2,1,https://github.com/ChrisLundquist,[Aireplay] add -C flag to set channel,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1845,https://github.com/aircrack-ng,10,https://github.com/aircrack-ng/aircrack-ng/pull/1845#issuecomment-411920323,"before:
aireplay-ng --deauth 10 -e ""<redacted>""  wlp3s0
21:03:22  Waiting for beacon frame (ESSID: <redacted> ) on channel 7
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".
21:03:24  wlp3s0 is on channel 7, but the AP uses channel 10

after:
 ./aireplay-ng --deauth 10 -e ""<redacted>""  -C 10 wlp3s0 
21:03:41  Waiting for beacon frame (ESSID: <redacted>) on channel 10
Found BSSID ""CA:FE:00:00:BA:BE"" to given ESSID ""<redacted>"".",@ChrisLundquist has a good point. The other reason for not changing the options is that scripts and other tools rely on Aircrack-ng. Changing an option after a release would break scripts and tools.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1848,2018-04-04T05:38:17Z,2018-04-04T17:28:46Z,2018-06-04T00:17:58Z,MERGED,True,3,3,1,https://github.com/ryandesign,Fix aircrack_ng_pcap.m4,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1848,https://github.com/ryandesign,1,https://github.com/aircrack-ng/aircrack-ng/pull/1848,"This fixes two problems with aircrack_ng_pcap.m4, which appear when using the configure arguments --with-libpcap-include=/somewhere/include and --with-libpcap-lib=/somewhere/lib.

libtool:   error: require no space between '-L' and '/somewhere/lib'
checking pcap header directories... /usr/include/pcap","This fixes two problems with aircrack_ng_pcap.m4, which appear when using the configure arguments --with-libpcap-include=/somewhere/include and --with-libpcap-lib=/somewhere/lib.

libtool:   error: require no space between '-L' and '/somewhere/lib'
checking pcap header directories... /usr/include/pcap",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1853,2018-04-06T17:52:41Z,2018-04-12T22:22:19Z,2018-04-12T22:22:31Z,MERGED,True,62,49,1,https://github.com/jbenden,32-bit macOS build failure,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1853,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1853,Fix for #1850,Fix for #1850,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1853,2018-04-06T17:52:41Z,2018-04-12T22:22:19Z,2018-04-12T22:22:31Z,MERGED,True,62,49,1,https://github.com/jbenden,32-bit macOS build failure,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1853,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/1853#issuecomment-380906006,Fix for #1850,"This can be tested on 64 bit with env CFLAGS=""-arch i386"" CXXFLAGS=""-arch i386"" ./configure",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1855,2018-04-09T06:21:03Z,2018-07-01T01:22:04Z,2018-07-01T01:22:04Z,CLOSED,False,204,7,3,https://github.com/ChrisLundquist,[Aireplay] support darwin,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1855,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1855,"So this ""works"" as a proof of concept.

Doesn't honor interface, just gets the default
Super slow example code re-opens the interface over and over each time you read/write a packet.
Fix build stuff like automake/autoconf

$ sudo ./src/aireplay-ng --test en1
I am on darwin, trying to open the wifi interface
23:13:15  Trying broadcast probe requests...
23:13:18  No Answer...
23:13:18  Found 1 AP 

23:13:18  Trying directed probe requests...
23:13:18  CA:FE:00:00:BA:BE - channel: 157 - '<redacted>'
23:13:35   0/30:   0%

We're leveraging libpcap to read/write packets, and we still have to deal with the radiotap headers.
libpcap doesn't seem to have the ability to change the channel of the adapter or some of the other parts of the osdep interface.
There are Objective-C bindings to manage things like channel as show in:
https://github.com/unixpickle/JamWiFi
Docs for the OSX framework at:
https://developer.apple.com/documentation/corewlan
A quick search didn't turn up any C bindings. Doing FFI into objective C is an option, but less than ideal.","So this ""works"" as a proof of concept.

Doesn't honor interface, just gets the default
Super slow example code re-opens the interface over and over each time you read/write a packet.
Fix build stuff like automake/autoconf

$ sudo ./src/aireplay-ng --test en1
I am on darwin, trying to open the wifi interface
23:13:15  Trying broadcast probe requests...
23:13:18  No Answer...
23:13:18  Found 1 AP 

23:13:18  Trying directed probe requests...
23:13:18  CA:FE:00:00:BA:BE - channel: 157 - '<redacted>'
23:13:35   0/30:   0%

We're leveraging libpcap to read/write packets, and we still have to deal with the radiotap headers.
libpcap doesn't seem to have the ability to change the channel of the adapter or some of the other parts of the osdep interface.
There are Objective-C bindings to manage things like channel as show in:
https://github.com/unixpickle/JamWiFi
Docs for the OSX framework at:
https://developer.apple.com/documentation/corewlan
A quick search didn't turn up any C bindings. Doing FFI into objective C is an option, but less than ideal.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1855,2018-04-09T06:21:03Z,2018-07-01T01:22:04Z,2018-07-01T01:22:04Z,CLOSED,False,204,7,3,https://github.com/ChrisLundquist,[Aireplay] support darwin,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1855,https://github.com/ChrisLundquist,2,https://github.com/aircrack-ng/aircrack-ng/pull/1855#issuecomment-379959413,"So this ""works"" as a proof of concept.

Doesn't honor interface, just gets the default
Super slow example code re-opens the interface over and over each time you read/write a packet.
Fix build stuff like automake/autoconf

$ sudo ./src/aireplay-ng --test en1
I am on darwin, trying to open the wifi interface
23:13:15  Trying broadcast probe requests...
23:13:18  No Answer...
23:13:18  Found 1 AP 

23:13:18  Trying directed probe requests...
23:13:18  CA:FE:00:00:BA:BE - channel: 157 - '<redacted>'
23:13:35   0/30:   0%

We're leveraging libpcap to read/write packets, and we still have to deal with the radiotap headers.
libpcap doesn't seem to have the ability to change the channel of the adapter or some of the other parts of the osdep interface.
There are Objective-C bindings to manage things like channel as show in:
https://github.com/unixpickle/JamWiFi
Docs for the OSX framework at:
https://developer.apple.com/documentation/corewlan
A quick search didn't turn up any C bindings. Doing FFI into objective C is an option, but less than ideal.","I now see #1044 has a patch attached to it. This offers another way. Going the iface fd route of the other patch probably offers some lower level control which I like, adding Objective C and execve into airport isn't my favorite though, but does at least implement channel changing.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1855,2018-04-09T06:21:03Z,2018-07-01T01:22:04Z,2018-07-01T01:22:04Z,CLOSED,False,204,7,3,https://github.com/ChrisLundquist,[Aireplay] support darwin,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1855,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1855#issuecomment-401576753,"So this ""works"" as a proof of concept.

Doesn't honor interface, just gets the default
Super slow example code re-opens the interface over and over each time you read/write a packet.
Fix build stuff like automake/autoconf

$ sudo ./src/aireplay-ng --test en1
I am on darwin, trying to open the wifi interface
23:13:15  Trying broadcast probe requests...
23:13:18  No Answer...
23:13:18  Found 1 AP 

23:13:18  Trying directed probe requests...
23:13:18  CA:FE:00:00:BA:BE - channel: 157 - '<redacted>'
23:13:35   0/30:   0%

We're leveraging libpcap to read/write packets, and we still have to deal with the radiotap headers.
libpcap doesn't seem to have the ability to change the channel of the adapter or some of the other parts of the osdep interface.
There are Objective-C bindings to manage things like channel as show in:
https://github.com/unixpickle/JamWiFi
Docs for the OSX framework at:
https://developer.apple.com/documentation/corewlan
A quick search didn't turn up any C bindings. Doing FFI into objective C is an option, but less than ideal.",It doesn't work on High Sierra. Using the framework foundation functions is the way to go.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1857,2018-04-11T17:23:47Z,2018-04-11T18:49:38Z,2018-04-11T19:04:03Z,MERGED,True,67,52,22,https://github.com/jbenden,Reworked how both Svn and Git versioning are formatted.,7,"['enhancement', '@minor']",https://github.com/aircrack-ng/aircrack-ng/pull/1857,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1857,Added support for formatting both Svn and Git versioning information.,Added support for formatting both Svn and Git versioning information.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1857,2018-04-11T17:23:47Z,2018-04-11T18:49:38Z,2018-04-11T19:04:03Z,MERGED,True,67,52,22,https://github.com/jbenden,Reworked how both Svn and Git versioning are formatted.,7,"['enhancement', '@minor']",https://github.com/aircrack-ng/aircrack-ng/pull/1857,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/1857#issuecomment-380534568,Added support for formatting both Svn and Git versioning information.,It fails compiling when there is no source control used such as when doing svn export.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1857,2018-04-11T17:23:47Z,2018-04-11T18:49:38Z,2018-04-11T19:04:03Z,MERGED,True,67,52,22,https://github.com/jbenden,Reworked how both Svn and Git versioning are formatted.,7,"['enhancement', '@minor']",https://github.com/aircrack-ng/aircrack-ng/pull/1857,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1857#issuecomment-380560069,Added support for formatting both Svn and Git versioning information.,"I had added an ""unknown"" for that case in #e15a4a5. Does it still? What's the export command, so I can locally test and fix?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1857,2018-04-11T17:23:47Z,2018-04-11T18:49:38Z,2018-04-11T19:04:03Z,MERGED,True,67,52,22,https://github.com/jbenden,Reworked how both Svn and Git versioning are formatted.,7,"['enhancement', '@minor']",https://github.com/aircrack-ng/aircrack-ng/pull/1857,https://github.com/jbenden,4,https://github.com/aircrack-ng/aircrack-ng/pull/1857#issuecomment-380560654,Added support for formatting both Svn and Git versioning information.,"Nevermind, I reproduced the problem.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1857,2018-04-11T17:23:47Z,2018-04-11T18:49:38Z,2018-04-11T19:04:03Z,MERGED,True,67,52,22,https://github.com/jbenden,Reworked how both Svn and Git versioning are formatted.,7,"['enhancement', '@minor']",https://github.com/aircrack-ng/aircrack-ng/pull/1857,https://github.com/jbenden,5,https://github.com/aircrack-ng/aircrack-ng/pull/1857#issuecomment-380561807,Added support for formatting both Svn and Git versioning information.,Fixed.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1863,2018-04-16T17:38:37Z,2018-04-17T15:55:13Z,2018-04-17T15:55:17Z,MERGED,True,55,10,6,https://github.com/jbenden,wpaclean: Do not crash on invalid prism2 pcap.,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/1863,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1863,"Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859","Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1863,2018-04-16T17:38:37Z,2018-04-17T15:55:13Z,2018-04-17T15:55:17Z,MERGED,True,55,10,6,https://github.com/jbenden,wpaclean: Do not crash on invalid prism2 pcap.,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/1863,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/1863#issuecomment-381719426,"Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859","2 things:

Not sure if on purpose but you change blank space in another condition
Could you add a second test again wpa.pcap (in test/): https://github.com/aircrack-ng/aircrack-ng/blob/master/test/wpa.cap",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1863,2018-04-16T17:38:37Z,2018-04-17T15:55:13Z,2018-04-17T15:55:17Z,MERGED,True,55,10,6,https://github.com/jbenden,wpaclean: Do not crash on invalid prism2 pcap.,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/1863,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1863#issuecomment-381744926,"Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859","I've undone the formatting changes, with a reverse patch. It'll squash on merge to a simple and clean commit.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1863,2018-04-16T17:38:37Z,2018-04-17T15:55:13Z,2018-04-17T15:55:17Z,MERGED,True,55,10,6,https://github.com/jbenden,wpaclean: Do not crash on invalid prism2 pcap.,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/1863,https://github.com/ChunshengZhao,4,https://github.com/aircrack-ng/aircrack-ng/pull/1863#issuecomment-381786153,"Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859","1: Why (rc < 0) check again after assert(rc> = 0) ?
2: If ""rc"" is an invalid value, code has assert->Aborted, ""off"" is an invalid value too, code has return 0->Continue?
I think if the file with potential safety hazards, it is better to stop work immediately after verification.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1863,2018-04-16T17:38:37Z,2018-04-17T15:55:13Z,2018-04-17T15:55:17Z,MERGED,True,55,10,6,https://github.com/jbenden,wpaclean: Do not crash on invalid prism2 pcap.,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/1863,https://github.com/jbenden,5,https://github.com/aircrack-ng/aircrack-ng/pull/1863#issuecomment-381787463,"Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859","If assert does not catch it, it SEGV. Already shown, via the bug report. Asserts are stripped on non-development builds (ie: release builds or when -DNDEBUG is defined)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1863,2018-04-16T17:38:37Z,2018-04-17T15:55:13Z,2018-04-17T15:55:17Z,MERGED,True,55,10,6,https://github.com/jbenden,wpaclean: Do not crash on invalid prism2 pcap.,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/1863,https://github.com/jbenden,6,https://github.com/aircrack-ng/aircrack-ng/pull/1863#issuecomment-381789658,"Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859",Should the test (if statement) return a -1 instead of 0?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1863,2018-04-16T17:38:37Z,2018-04-17T15:55:13Z,2018-04-17T15:55:17Z,MERGED,True,55,10,6,https://github.com/jbenden,wpaclean: Do not crash on invalid prism2 pcap.,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/1863,https://github.com/ChunshengZhao,7,https://github.com/aircrack-ng/aircrack-ng/pull/1863#issuecomment-381794067,"Do not crash on an invalid prism 2 pcap file.
Improved cross-platform support by using le32_to_cpu.
Added unit-test for wpaclean.
Fixes #1859","If assert() is likely to fail, it should all be replaced. Found a problem, return  -1. Sorry my english.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1864,2018-04-16T18:03:48Z,2018-04-16T18:26:24Z,2018-04-16T18:26:29Z,MERGED,True,16,12,1,https://github.com/jbenden,autotools: The flag --without-opt should skip stack protector flags.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1864,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1864,Fix for #1862,Fix for #1862,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1868,2018-04-20T08:04:03Z,2019-01-26T23:27:02Z,2019-01-26T23:27:02Z,CLOSED,False,24,33,1,https://github.com/ChunshengZhao,[airodump-ng.c] Repair obfuscated security types,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1868,https://github.com/ChunshengZhao,1,https://github.com/aircrack-ng/aircrack-ng/pull/1868,"[airodump-ng.c:dump_write_csv() && dump_write_kismet_csv()] Repair obfuscated security types
Bug:
https://forum.aircrack-ng.org/index.php/topic,1543.0.html
The information provided is from a CSV file. Here is my guess.
#define	STD_OPN	0x0001
#define	STD_WPA2 0x0008
If ap_cur->security = 0x0009 or 0x000b or 0x000d and more...
ap_cur->security & STD_WPA2
ap_cur->security & STD_OPN
return WPA2 and OPN.
It may be a new encryption method (or damaged packet?), but I did not find the relevant information.
Sorry my English again.","[airodump-ng.c:dump_write_csv() && dump_write_kismet_csv()] Repair obfuscated security types
Bug:
https://forum.aircrack-ng.org/index.php/topic,1543.0.html
The information provided is from a CSV file. Here is my guess.
#define	STD_OPN	0x0001
#define	STD_WPA2 0x0008
If ap_cur->security = 0x0009 or 0x000b or 0x000d and more...
ap_cur->security & STD_WPA2
ap_cur->security & STD_OPN
return WPA2 and OPN.
It may be a new encryption method (or damaged packet?), but I did not find the relevant information.
Sorry my English again.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1868,2018-04-20T08:04:03Z,2019-01-26T23:27:02Z,2019-01-26T23:27:02Z,CLOSED,False,24,33,1,https://github.com/ChunshengZhao,[airodump-ng.c] Repair obfuscated security types,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1868,https://github.com/binarymaster,2,https://github.com/aircrack-ng/aircrack-ng/pull/1868#issuecomment-383067214,"[airodump-ng.c:dump_write_csv() && dump_write_kismet_csv()] Repair obfuscated security types
Bug:
https://forum.aircrack-ng.org/index.php/topic,1543.0.html
The information provided is from a CSV file. Here is my guess.
#define	STD_OPN	0x0001
#define	STD_WPA2 0x0008
If ap_cur->security = 0x0009 or 0x000b or 0x000d and more...
ap_cur->security & STD_WPA2
ap_cur->security & STD_OPN
return WPA2 and OPN.
It may be a new encryption method (or damaged packet?), but I did not find the relevant information.
Sorry my English again.","return WPA2 and OPN.
It may be a new encryption method (or damaged packet?), but I did not find the relevant information.

When AP is WPS-enabled, Open association is allowed (along with WPA and/or WPA2) to transfer unencrypted EAP packets between AP and client.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1868,2018-04-20T08:04:03Z,2019-01-26T23:27:02Z,2019-01-26T23:27:02Z,CLOSED,False,24,33,1,https://github.com/ChunshengZhao,[airodump-ng.c] Repair obfuscated security types,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1868,https://github.com/ChunshengZhao,3,https://github.com/aircrack-ng/aircrack-ng/pull/1868#issuecomment-385562330,"[airodump-ng.c:dump_write_csv() && dump_write_kismet_csv()] Repair obfuscated security types
Bug:
https://forum.aircrack-ng.org/index.php/topic,1543.0.html
The information provided is from a CSV file. Here is my guess.
#define	STD_OPN	0x0001
#define	STD_WPA2 0x0008
If ap_cur->security = 0x0009 or 0x000b or 0x000d and more...
ap_cur->security & STD_WPA2
ap_cur->security & STD_OPN
return WPA2 and OPN.
It may be a new encryption method (or damaged packet?), but I did not find the relevant information.
Sorry my English again.","@binarymaster
So, this is a normal return value, but there is an error in the logical interpretation?
If if -> if “else if”",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1868,2018-04-20T08:04:03Z,2019-01-26T23:27:02Z,2019-01-26T23:27:02Z,CLOSED,False,24,33,1,https://github.com/ChunshengZhao,[airodump-ng.c] Repair obfuscated security types,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1868,https://github.com/binarymaster,4,https://github.com/aircrack-ng/aircrack-ng/pull/1868#issuecomment-385563375,"[airodump-ng.c:dump_write_csv() && dump_write_kismet_csv()] Repair obfuscated security types
Bug:
https://forum.aircrack-ng.org/index.php/topic,1543.0.html
The information provided is from a CSV file. Here is my guess.
#define	STD_OPN	0x0001
#define	STD_WPA2 0x0008
If ap_cur->security = 0x0009 or 0x000b or 0x000d and more...
ap_cur->security & STD_WPA2
ap_cur->security & STD_OPN
return WPA2 and OPN.
It may be a new encryption method (or damaged packet?), but I did not find the relevant information.
Sorry my English again.",Probably.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1877,2018-05-07T20:33:12Z,2019-01-26T23:43:03Z,2019-10-05T16:29:54Z,CLOSED,False,82,0,2,https://github.com/scorpius,Airodump-ng: Automatically colorize airodump.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1877,https://github.com/scorpius,1,https://github.com/aircrack-ng/aircrack-ng/pull/1877,"I've patched airodump so that upon a key press it automatically adds colors only to the APs that have associated clients. Also clients that are not associated are greyed out. This makes it much easier to see who's-connected-to-who and who-is-probing-for-who.
Press o to turn the color on, and p to turn it off.","I've patched airodump so that upon a key press it automatically adds colors only to the APs that have associated clients. Also clients that are not associated are greyed out. This makes it much easier to see who's-connected-to-who and who-is-probing-for-who.
Press o to turn the color on, and p to turn it off.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1877,2018-05-07T20:33:12Z,2019-01-26T23:43:03Z,2019-10-05T16:29:54Z,CLOSED,False,82,0,2,https://github.com/scorpius,Airodump-ng: Automatically colorize airodump.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1877,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1877#issuecomment-405352695,"I've patched airodump so that upon a key press it automatically adds colors only to the APs that have associated clients. Also clients that are not associated are greyed out. This makes it much easier to see who's-connected-to-who and who-is-probing-for-who.
Press o to turn the color on, and p to turn it off.",Coverage decreased (-0.07%) to 36.036% when pulling 5fefd2c on scorpius:colorize into d545e24 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1878,2018-05-08T18:43:32Z,2018-05-08T18:47:58Z,2018-05-08T18:48:01Z,MERGED,True,6,6,3,https://github.com/jbenden,"Support paths containing spaces, during autoreconf.",1,['bug'],https://github.com/aircrack-ng/aircrack-ng/pull/1878,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1878,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1878,2018-05-08T18:43:32Z,2018-05-08T18:47:58Z,2018-05-08T18:48:01Z,MERGED,True,6,6,3,https://github.com/jbenden,"Support paths containing spaces, during autoreconf.",1,['bug'],https://github.com/aircrack-ng/aircrack-ng/pull/1878,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/1878#issuecomment-387502542,,Fix for #1870,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1879,2018-05-08T18:46:17Z,2018-05-08T18:49:22Z,2018-05-08T18:49:27Z,MERGED,True,18,0,2,https://github.com/jbenden,Autoconf: Added NEON intrinsic support.,4,['bug'],https://github.com/aircrack-ng/aircrack-ng/pull/1879,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1879,"Perform NEON intrinsic support using Autoconf, instead of failing to build on older ARM processors without NEON features.","Perform NEON intrinsic support using Autoconf, instead of failing to build on older ARM processors without NEON features.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1884,2018-05-12T13:56:21Z,2018-05-12T14:18:51Z,2018-05-12T14:18:51Z,MERGED,True,1,1,1,https://github.com/tjt263,Update versuck-ng,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1884,https://github.com/tjt263,1,https://github.com/aircrack-ng/aircrack-ng/pull/1884,Minor edit.,Minor edit.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1885,2018-05-13T09:35:04Z,2018-08-29T18:46:04Z,2018-08-29T18:46:04Z,CLOSED,False,0,1,1,https://github.com/precla,Removed redundant 'break',1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1885,https://github.com/precla,1,https://github.com/aircrack-ng/aircrack-ng/pull/1885,Removed redundant 'break',Removed redundant 'break',True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1885,2018-05-13T09:35:04Z,2018-08-29T18:46:04Z,2018-08-29T18:46:04Z,CLOSED,False,0,1,1,https://github.com/precla,Removed redundant 'break',1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1885,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/1885#issuecomment-388639102,Removed redundant 'break',You should open the PR on https://github.com/radiotap/radiotap-library since that's where it comes from.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1885,2018-05-13T09:35:04Z,2018-08-29T18:46:04Z,2018-08-29T18:46:04Z,CLOSED,False,0,1,1,https://github.com/precla,Removed redundant 'break',1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1885,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1885#issuecomment-417062972,Removed redundant 'break',Closing it for now. Reopen it when PR is submitted and accepted in radiotap-library repository.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1889,2018-05-17T17:37:30Z,2018-05-18T22:32:56Z,2018-11-21T18:45:38Z,CLOSED,False,10,24,1,https://github.com/jbenden,Increased CPU scaling slightly (thanks Intel VTune.),2,['#aircrack-ng'],https://github.com/aircrack-ng/aircrack-ng/pull/1889,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1889,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1889,2018-05-17T17:37:30Z,2018-05-18T22:32:56Z,2018-11-21T18:45:38Z,CLOSED,False,10,24,1,https://github.com/jbenden,Increased CPU scaling slightly (thanks Intel VTune.),2,['#aircrack-ng'],https://github.com/aircrack-ng/aircrack-ng/pull/1889,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/1889#issuecomment-390012367,,"On less than 8 CPUs, it's about the same; like you've shown. However; with >= 8 CPUs, it's better.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1889,2018-05-17T17:37:30Z,2018-05-18T22:32:56Z,2018-11-21T18:45:38Z,CLOSED,False,10,24,1,https://github.com/jbenden,Increased CPU scaling slightly (thanks Intel VTune.),2,['#aircrack-ng'],https://github.com/aircrack-ng/aircrack-ng/pull/1889,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1889#issuecomment-390012591,,"Still optimizing, too... Will post benchmark updates...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1889,2018-05-17T17:37:30Z,2018-05-18T22:32:56Z,2018-11-21T18:45:38Z,CLOSED,False,10,24,1,https://github.com/jbenden,Increased CPU scaling slightly (thanks Intel VTune.),2,['#aircrack-ng'],https://github.com/aircrack-ng/aircrack-ng/pull/1889,https://github.com/jbenden,4,https://github.com/aircrack-ng/aircrack-ng/pull/1889#issuecomment-390261365,,"New benchmark data, for these changes applied. It should be noted that the x86_64 has 4 CPUs, with HT enabled to get 8 available - so a perf. drop isn't completely unexpected at 8 CPUs.
x86_64,generic,1,1285
x86_64,generic,2,2539
x86_64,generic,4,4385
x86_64,generic,8,3401
x86_64,sse2,1,1427
x86_64,sse2,2,2637
x86_64,sse2,4,4242
x86_64,sse2,8,5541
x86_64,avx2,1,3550
x86_64,avx2,2,6698
x86_64,avx2,4,12788
x86_64,avx2,8,10380
ppc64le,generic,1,279
ppc64le,generic,2,310
ppc64le,generic,4,718
ppc64le,generic,8,1696
ppc64le,generic,16,2477
ppc64le,generic,32,2243
ppc64le,generic,64,5865
ppc64le,generic,128,6370
ppc64le,altivec,1,268
ppc64le,altivec,2,434
ppc64le,altivec,4,899
ppc64le,altivec,8,1652
ppc64le,altivec,16,2267
ppc64le,altivec,32,1976
ppc64le,altivec,64,3724
ppc64le,altivec,128,4297
ppc64le,power8,1,282
ppc64le,power8,2,451
ppc64le,power8,4,972
ppc64le,power8,8,1870
ppc64le,power8,16,2105
ppc64le,power8,32,2244
ppc64le,power8,64,3464
ppc64le,power8,128,3958
aarch64,generic,1,70
aarch64,generic,2,135
aarch64,generic,4,263
aarch64,generic,8,457
aarch64,neon,1,71
aarch64,neon,2,136
aarch64,neon,4,244
aarch64,neon,8,465
aarch64,asimd,1,70
aarch64,asimd,2,136
aarch64,asimd,4,258
aarch64,asimd,8,463

x86_64 machine specs:
vendor_id	: GenuineIntel
cpu family	: 6
model		: 158
model name	: Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz
stepping	: 9
microcode	: 0x84
cpu MHz		: 1000.029
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 3
cpu cores	: 4
apicid		: 7
initial apicid	: 7
fpu		: yes
fpu_exception	: yes
cpuid level	: 22
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti retpoline intel_pt rsb_ctxsw spec_ctrl tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp
bugs		: cpu_meltdown spectre_v1 spectre_v2
bogomips	: 7200.00
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual

ppc64le machine specs:
cpu		: POWER8E (raw), altivec supported
clock		: 2061.000000MHz
revision	: 2.1 (pvr 004b 0201)

timebase	: 512000000
platform	: PowerNV
model		: 8247-22L
machine		: PowerNV 8247-22L
firmware	: OPAL v3

aarch64 machine specs:
BogoMIPS	: 100.00
Features	: fp asimd evtstrm 
CPU implementer	: 0x50
CPU architecture: AArch64
CPU variant	: 0x0
CPU part	: 0x000
CPU revision	: 1

Hardware	: APM X-Gene Mustang board

Prior to these changes, it seemed to taper at 4-8 CPUs. With these changes, it now tapers around 16 CPUs.
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1891,2018-05-21T10:10:22Z,2018-05-22T00:36:00Z,2018-05-22T08:00:49Z,MERGED,True,102,61,1,https://github.com/myst404,hostapd-wpe: Added Response-Identity logging and hashcat format,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1891,https://github.com/myst404,1,https://github.com/aircrack-ng/aircrack-ng/pull/1891,"Hello,
Here is a PR with 2 improvements on hostapd-wpe.patch:

the NETNTLM hash is printed in the hashcat format too
the Response-Identity is printed so that even if the user does not accept the certificate, we still obtain the username (for example on an iPhone)

Thanks!","Hello,
Here is a PR with 2 improvements on hostapd-wpe.patch:

the NETNTLM hash is printed in the hashcat format too
the Response-Identity is printed so that even if the user does not accept the certificate, we still obtain the username (for example on an iPhone)

Thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1894,2018-05-26T21:44:48Z,2018-05-27T00:32:30Z,2018-05-27T00:32:31Z,MERGED,True,1,1,1,https://github.com/almnX,[airodump-ng.c] Fix WPA handshake capture notice for out-of-scope ESSIDs,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1894,https://github.com/almnX,1,https://github.com/aircrack-ng/aircrack-ng/pull/1894,"Issue:
#1814","Issue:
#1814",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1895,2018-05-27T03:55:12Z,,2021-08-23T03:07:51Z,OPEN,False,18,13,1,https://github.com/mikeryan,perform improved bounds checking in airodump,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1895,https://github.com/mikeryan,1,https://github.com/aircrack-ng/aircrack-ng/pull/1895,"A handful of code paths could read past the end of the buffer holding
incoming packets from the wireless adapter. This improves the bounds
checking to ensure that the code never reads past the end of the buffer.
Malformed packets will still be written to PCAP.
These bugs were found by fuzzing with AFL: http://lcamtuf.coredump.cx/afl","A handful of code paths could read past the end of the buffer holding
incoming packets from the wireless adapter. This improves the bounds
checking to ensure that the code never reads past the end of the buffer.
Malformed packets will still be written to PCAP.
These bugs were found by fuzzing with AFL: http://lcamtuf.coredump.cx/afl",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1895,2018-05-27T03:55:12Z,,2021-08-23T03:07:51Z,OPEN,False,18,13,1,https://github.com/mikeryan,perform improved bounds checking in airodump,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1895,https://github.com/ZeroChaos-,2,https://github.com/aircrack-ng/aircrack-ng/pull/1895#issuecomment-398085105,"A handful of code paths could read past the end of the buffer holding
incoming packets from the wireless adapter. This improves the bounds
checking to ensure that the code never reads past the end of the buffer.
Malformed packets will still be written to PCAP.
These bugs were found by fuzzing with AFL: http://lcamtuf.coredump.cx/afl","he found it with a fuzzer, so I'm assuming the answer is no.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1895,2018-05-27T03:55:12Z,,2021-08-23T03:07:51Z,OPEN,False,18,13,1,https://github.com/mikeryan,perform improved bounds checking in airodump,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1895,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1895#issuecomment-398126148,"A handful of code paths could read past the end of the buffer holding
incoming packets from the wireless adapter. This improves the bounds
checking to ensure that the code never reads past the end of the buffer.
Malformed packets will still be written to PCAP.
These bugs were found by fuzzing with AFL: http://lcamtuf.coredump.cx/afl","@ZeroChaos- , the fuzzer generates files.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1895,2018-05-27T03:55:12Z,,2021-08-23T03:07:51Z,OPEN,False,18,13,1,https://github.com/mikeryan,perform improved bounds checking in airodump,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1895,https://github.com/mikeryan,4,https://github.com/aircrack-ng/aircrack-ng/pull/1895#issuecomment-398127257,"A handful of code paths could read past the end of the buffer holding
incoming packets from the wireless adapter. This improves the bounds
checking to ensure that the code never reads past the end of the buffer.
Malformed packets will still be written to PCAP.
These bugs were found by fuzzing with AFL: http://lcamtuf.coredump.cx/afl","I don't have a test file for this specific branch. The fuzzer pointed me to this general neighborhood of code, and upon manually reviewing things I found that the bounds handling was incorrect throughout. This patchset reflects a manual review of every possible branch, ensuring that each buffer was the correct minimum size for reading at a given offset.
I can manually generate some test files that reach this branch if that would help you merge this patchset.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1895,2018-05-27T03:55:12Z,,2021-08-23T03:07:51Z,OPEN,False,18,13,1,https://github.com/mikeryan,perform improved bounds checking in airodump,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1895,https://github.com/aircrack-ng,5,https://github.com/aircrack-ng/aircrack-ng/pull/1895#issuecomment-398129142,"A handful of code paths could read past the end of the buffer holding
incoming packets from the wireless adapter. This improves the bounds
checking to ensure that the code never reads past the end of the buffer.
Malformed packets will still be written to PCAP.
These bugs were found by fuzzing with AFL: http://lcamtuf.coredump.cx/afl","It definitely would help a lot. The rest is good to go but those 2 cases are a bit trickier.
Thanks",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1896,2018-05-27T18:45:08Z,2018-05-27T19:40:48Z,2018-05-27T19:40:49Z,MERGED,True,8,0,2,https://github.com/ffontaine,Fix compilation without getauxval,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1896,https://github.com/ffontaine,1,https://github.com/aircrack-ng/aircrack-ng/pull/1896,"Protect getauxval call and sys/auxv.h include by #ifdef HAS_AUXV in
trampoline_arm.c and trampoline_ppc.c.
Indeed, auxv is not available on some toolchains such as uclibc
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Protect getauxval call and sys/auxv.h include by #ifdef HAS_AUXV in
trampoline_arm.c and trampoline_ppc.c.
Indeed, auxv is not available on some toolchains such as uclibc
Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1897,2018-05-28T14:28:49Z,2018-05-28T15:23:34Z,2018-05-28T15:23:35Z,CLOSED,False,0,0,0,https://github.com/k-kaminskas,aireplay-ng multi target,0,[],https://github.com/aircrack-ng/aircrack-ng/pull/1897,https://github.com/k-kaminskas,1,https://github.com/aircrack-ng/aircrack-ng/pull/1897,"#1811  (Beta version enhancement, no lines were deleted, added multiple target support in deauth mode.)","#1811  (Beta version enhancement, no lines were deleted, added multiple target support in deauth mode.)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1898,2018-05-28T15:33:28Z,,2021-08-23T03:07:51Z,OPEN,False,203,87,1,https://github.com/k-kaminskas,[aireplay-ng] multi target beta for deauth,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1898,https://github.com/k-kaminskas,1,https://github.com/aircrack-ng/aircrack-ng/pull/1898,#1811 [aireplay-ng] multi target beta for aireplay-ng deauth mode,#1811 [aireplay-ng] multi target beta for aireplay-ng deauth mode,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1898,2018-05-28T15:33:28Z,,2021-08-23T03:07:51Z,OPEN,False,203,87,1,https://github.com/k-kaminskas,[aireplay-ng] multi target beta for deauth,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1898,https://github.com/ChrisLundquist,2,https://github.com/aircrack-ng/aircrack-ng/pull/1898#issuecomment-403314616,#1811 [aireplay-ng] multi target beta for aireplay-ng deauth mode,"https://github.com/aircrack-ng/aircrack-ng/compare/master...ChrisLundquist:clundquist/aireplay-deauth-all?expand=1
I did something similar here. My approach was just to listen for beacons for a time frame, then deauth any clients on that network if I detected any, or fallback to the broadcast deauth if I didn't detect a specific client.
Looks like the code format hit us both",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1899,2018-05-29T00:52:40Z,2018-05-31T17:11:54Z,2018-05-31T17:12:05Z,MERGED,True,782,21,9,https://github.com/Mister-X-,Aircrack-ng: Create/Restore session,45,[],https://github.com/aircrack-ng/aircrack-ng/pull/1899,https://github.com/Mister-X-,1,https://github.com/aircrack-ng/aircrack-ng/pull/1899,"Cracking is can be a time consuming task and sometimes needs to be paused and restarted later on.
This PR allows to create and restore/continue session ONLY when one or more wordlists are used. It works with WEP and WPA (and WPA2). Limitations:

None of the wordlists provided can be stdin (aka '-' parameter for -w).
It doesn't work with airolib-ng databases.

When creating a session (or restoring one), a separate thread will be created so it disturb the cracking process as little as possible. This thread will save the session every 10 minutes.
Manpage has also been updated and a test created (make check).
See #22.","Cracking is can be a time consuming task and sometimes needs to be paused and restarted later on.
This PR allows to create and restore/continue session ONLY when one or more wordlists are used. It works with WEP and WPA (and WPA2). Limitations:

None of the wordlists provided can be stdin (aka '-' parameter for -w).
It doesn't work with airolib-ng databases.

When creating a session (or restoring one), a separate thread will be created so it disturb the cracking process as little as possible. This thread will save the session every 10 minutes.
Manpage has also been updated and a test created (make check).
See #22.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1904,2018-06-07T17:29:26Z,2018-06-07T20:44:25Z,2018-06-07T20:44:32Z,MERGED,True,443,389,22,https://github.com/Mister-X-,Add and fix prototypes (part 1),19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1904,https://github.com/Mister-X-,1,https://github.com/aircrack-ng/aircrack-ng/pull/1904,See #1798,See #1798,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1907,2018-06-13T00:38:36Z,,2021-08-23T03:07:51Z,OPEN,False,286,10,2,https://github.com/TheRinger,[airodump-ng] - added support for json file export,4,[],https://github.com/aircrack-ng/aircrack-ng/pull/1907,https://github.com/TheRinger,1,https://github.com/aircrack-ng/aircrack-ng/pull/1907,"[airodump-ng] - added support for json file export
-- added 'json' option to --output-format
files modified:
src/airodump-ng.c
src/airodump-ng.h","[airodump-ng] - added support for json file export
-- added 'json' option to --output-format
files modified:
src/airodump-ng.c
src/airodump-ng.h",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1907,2018-06-13T00:38:36Z,,2021-08-23T03:07:51Z,OPEN,False,286,10,2,https://github.com/TheRinger,[airodump-ng] - added support for json file export,4,[],https://github.com/aircrack-ng/aircrack-ng/pull/1907,https://github.com/TheRinger,2,https://github.com/aircrack-ng/aircrack-ng/pull/1907#issuecomment-397167809,"[airodump-ng] - added support for json file export
-- added 'json' option to --output-format
files modified:
src/airodump-ng.c
src/airodump-ng.h","Compiles and runs but getting this error on rpi3, any ideas?
CC       airodump_ng-airodump-ng.o
airodump-ng.c: In function ‘dump_write_json’:
airodump-ng.c:4567:37: warning: pointer targets in passing argument 1 of ‘format_text_for_csv’ differ in signedness [-Wpointer-sign]
temp = format_text_for_csv(st_cur->probes[i], st_cur->ssid_length[i]);
^~~~~~
airodump-ng.c:4292:7: note: expected ‘const unsigned char *’ but argument is of type ‘char *’
char *format_text_for_csv(const unsigned char *input, int len)
^~~~~~~~~~~~~~~~~~~
CCLD     airodump-ng",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1923,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.","Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-403617975,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.",Coverage increased (+0.06%) to 36.036% when pulling 534033c on ChrisLundquist:clundquist/fast-decap into fc35d55 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/ChrisLundquist,3,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-404342610,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.","tests are flaking for various unrelated reasons. one was a fork failure, another was failing to download things.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-404345543,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.","Tests will be checked manually and re-run before merging if needed, don't worry about AppVeyor for now.",True,{'THUMBS_UP': ['https://github.com/ChrisLundquist']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/aircrack-ng,5,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-404707267,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.",Looks good so far. Don't forget to address the remarks in e4426d4,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/ChrisLundquist,6,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-404707441,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.",Oh I missed those comments. For some reason they didn't email or show up https://github.com/aircrack-ng/aircrack-ng/pull/1923/files,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/ChrisLundquist,7,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-404720613,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.",Done,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/jbenden,8,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-406014897,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.","Please fix your memory leaks.
======================================================
   aircrack-ng 1.3_rev-dc38b01: test/test-suite.log
======================================================

# TOTAL: 14
# PASS:  10
# SKIP:  0
# XFAIL: 0
# FAIL:  4
# XPASS: 0
# ERROR: 0

.. contents:: :depth: 2

FAIL: test-airdecap-ng-0001.sh
==============================

=================================================================
==25208==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffd22f1ef0 at pc 0x000000528893 bp 0x7fffd22f1dd0 sp 0x7fffd22f1dc8
WRITE of size 8 at 0x7fffd22f1ef0 thread T0
    #0 0x528892 in c_avl_pick /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8
    #1 0x51493e in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:1056:9
    #2 0x7f22cfcd082f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291
    #3 0x41a218 in _start (/home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng+0x41a218)

Address 0x7fffd22f1ef0 is located in stack of thread T0 at offset 240 in frame
    #0 0x5112ef in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:211

  This frame has 9 object(s):
    [32, 160) 'buf' (line 214)
    [192, 196) 'n' (line 217)
    [208, 214) 'bssid' (line 220)
    [240, 246) 'stmac' (line 220) <== Memory access at offset 240 partially overflows this variable
    [272, 280) 'st_cur' (line 223)
    [304, 328) 'pfh' (line 224)
    [368, 384) 'pkh' (line 225)
    [400, 404) 'option_index' (line 240)
    [416, 480) 'K' (line 852)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8 in c_avl_pick
Shadow bytes around the buggy address:
  0x10007a456380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007a456390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007a4563a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007a4563b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007a4563c0: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007a4563d0: 00 00 00 00 f2 f2 f2 f2 04 f2 06 f2 f2 f2[06]f2
  0x10007a4563e0: f2 f2 00 f2 f2 f2 00 00 00 f2 f2 f2 f2 f2 00 00
  0x10007a4563f0: f2 f2 f8 f2 f8 f8 f8 f8 f8 f8 f8 f8 f3 f3 f3 f3
  0x10007a456400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007a456410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007a456420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==25208==ABORTING
FAIL test-airdecap-ng-0001.sh (exit status: 1)

FAIL: test-airdecap-ng-0002.sh
==============================

=================================================================
==25224==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc3844f590 at pc 0x000000528893 bp 0x7ffc3844f470 sp 0x7ffc3844f468
WRITE of size 8 at 0x7ffc3844f590 thread T0
    #0 0x528892 in c_avl_pick /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8
    #1 0x51493e in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:1056:9
    #2 0x7f4c1be7d82f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291
    #3 0x41a218 in _start (/home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng+0x41a218)

Address 0x7ffc3844f590 is located in stack of thread T0 at offset 240 in frame
    #0 0x5112ef in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:211

  This frame has 9 object(s):
    [32, 160) 'buf' (line 214)
    [192, 196) 'n' (line 217)
    [208, 214) 'bssid' (line 220)
    [240, 246) 'stmac' (line 220) <== Memory access at offset 240 partially overflows this variable
    [272, 280) 'st_cur' (line 223)
    [304, 328) 'pfh' (line 224)
    [368, 384) 'pkh' (line 225)
    [400, 404) 'option_index' (line 240)
    [416, 480) 'K' (line 852)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8 in c_avl_pick
Shadow bytes around the buggy address:
  0x100007081e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007081e70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007081e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007081e90: 00 00 00 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00
  0x100007081ea0: 00 00 00 00 00 00 00 00 f2 f2 f2 f2 04 f2 06 f2
=>0x100007081eb0: f2 f2[06]f2 f2 f2 00 f2 f2 f2 00 00 00 f2 f2 f2
  0x100007081ec0: f2 f2 00 00 f2 f2 f8 f2 f8 f8 f8 f8 f8 f8 f8 f8
  0x100007081ed0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007081ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007081ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007081f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==25224==ABORTING
FAIL test-airdecap-ng-0002.sh (exit status: 1)

FAIL: test-airdecap-ng-0003.sh
==============================

=================================================================
==25240==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc32f9bd10 at pc 0x000000528893 bp 0x7ffc32f9bbf0 sp 0x7ffc32f9bbe8
WRITE of size 8 at 0x7ffc32f9bd10 thread T0
    #0 0x528892 in c_avl_pick /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8
    #1 0x51493e in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:1056:9
    #2 0x7f2cc8a9a82f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291
    #3 0x41a218 in _start (/home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng+0x41a218)

Address 0x7ffc32f9bd10 is located in stack of thread T0 at offset 240 in frame
    #0 0x5112ef in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:211

  This frame has 9 object(s):
    [32, 160) 'buf' (line 214)
    [192, 196) 'n' (line 217)
    [208, 214) 'bssid' (line 220)
    [240, 246) 'stmac' (line 220) <== Memory access at offset 240 partially overflows this variable
    [272, 280) 'st_cur' (line 223)
    [304, 328) 'pfh' (line 224)
    [368, 384) 'pkh' (line 225)
    [400, 404) 'option_index' (line 240)
    [416, 480) 'K' (line 852)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8 in c_avl_pick
Shadow bytes around the buggy address:
  0x1000065eb750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000065eb760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000065eb770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000065eb780: 00 00 00 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00
  0x1000065eb790: 00 00 00 00 00 00 00 00 f2 f2 f2 f2 04 f2 06 f2
=>0x1000065eb7a0: f2 f2[06]f2 f2 f2 00 f2 f2 f2 00 00 00 f2 f2 f2
  0x1000065eb7b0: f2 f2 00 00 f2 f2 f8 f2 f8 f8 f8 f8 f8 f8 f8 f8
  0x1000065eb7c0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000065eb7d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000065eb7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000065eb7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==25240==ABORTING
FAIL test-airdecap-ng-0003.sh (exit status: 1)

FAIL: test-airdecap-ng-0004.sh
==============================

=================================================================
==25262==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffe0991730 at pc 0x000000528893 bp 0x7fffe0991610 sp 0x7fffe0991608
WRITE of size 8 at 0x7fffe0991730 thread T0
    #0 0x528892 in c_avl_pick /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8
    #1 0x51493e in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:1056:9
    #2 0x7fd87a34382f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291
    #3 0x41a218 in _start (/home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng+0x41a218)

Address 0x7fffe0991730 is located in stack of thread T0 at offset 240 in frame
    #0 0x5112ef in main /home/jbenden/Source/us.benden/aircrack-ng-git/src/airdecap-ng.c:211

  This frame has 9 object(s):
    [32, 160) 'buf' (line 214)
    [192, 196) 'n' (line 217)
    [208, 214) 'bssid' (line 220)
    [240, 246) 'stmac' (line 220) <== Memory access at offset 240 partially overflows this variable
    [272, 280) 'st_cur' (line 223)
    [304, 328) 'pfh' (line 224)
    [368, 384) 'pkh' (line 225)
    [400, 404) 'option_index' (line 240)
    [416, 480) 'K' (line 852)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/jbenden/Source/us.benden/aircrack-ng-git/src/aircrack-util/avl_tree.c:568:8 in c_avl_pick
Shadow bytes around the buggy address:
  0x10007c12a290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c12a2a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c12a2b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c12a2c0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 00
  0x10007c12a2d0: 00 00 00 00 00 00 00 00 00 00 00 00 f2 f2 f2 f2
=>0x10007c12a2e0: 04 f2 06 f2 f2 f2[06]f2 f2 f2 00 f2 f2 f2 00 00
  0x10007c12a2f0: 00 f2 f2 f2 f2 f2 00 00 f2 f2 f8 f2 f8 f8 f8 f8
  0x10007c12a300: f8 f8 f8 f8 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10007c12a310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c12a320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c12a330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==25262==ABORTING
FAIL test-airdecap-ng-0004.sh (exit status: 1)

You can reproduce this report by using Clang and enabling ASAN configure option.
Thanks,
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1923,2018-07-09T20:46:26Z,2018-07-15T21:29:57Z,2018-07-18T20:43:51Z,MERGED,True,863,35,4,https://github.com/ChrisLundquist,[airdecap] Speed up airdecap,8,[],https://github.com/aircrack-ng/aircrack-ng/pull/1923,https://github.com/ChrisLundquist,9,https://github.com/aircrack-ng/aircrack-ng/pull/1923#issuecomment-406067656,"Using a tree to find our stations will make this packets * log(stations) time instead of packets * stations
$ ls -lah /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
 7.8G Jul  9 13:44 /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump

Existing master:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31514113
# ...

real	1m3.403s
user	1m1.866s
sys	0m1.536s

This Branch:
$ time ./airdecap-ng -p <redacted> -e <redacted>  /srv/wifi/Kismet-20180704-11-52-58-1.pcapdump
Total number of packets read      31505034
# ...

real	0m24.520s
user	0m23.263s
sys	0m1.256s

This borrows an AVL tree implementation from collectd which is far more suited for searching than our previous linked list implementation. Changing the station lookup complexity to O(log(n)) from O(n).
For context this was ran on a nuc6i7kyk which is basically a fast laptop.",Done in #1931,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1931,2018-07-18T20:42:32Z,2018-07-18T21:49:52Z,2018-07-18T21:50:32Z,MERGED,True,22,21,1,https://github.com/ChrisLundquist,Clundquist/fix memory,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1931,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1931,"98149c9 fixes #1923 (comment)
6a52a78 is for extra credit.","98149c9 fixes #1923 (comment)
6a52a78 is for extra credit.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1931,2018-07-18T20:42:32Z,2018-07-18T21:49:52Z,2018-07-18T21:50:32Z,MERGED,True,22,21,1,https://github.com/ChrisLundquist,Clundquist/fix memory,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1931,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1931#issuecomment-406070434,"98149c9 fixes #1923 (comment)
6a52a78 is for extra credit.",Coverage increased (+0.08%) to 36.085% when pulling 90ec474 on ChrisLundquist:clundquist/fix-memory into 3d02ecb on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1931,2018-07-18T20:42:32Z,2018-07-18T21:49:52Z,2018-07-18T21:50:32Z,MERGED,True,22,21,1,https://github.com/ChrisLundquist,Clundquist/fix memory,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1931,https://github.com/ChrisLundquist,3,https://github.com/aircrack-ng/aircrack-ng/pull/1931#issuecomment-406073910,"98149c9 fixes #1923 (comment)
6a52a78 is for extra credit.","FWIW: valgrind says there are no memory leaks without these changes. We do get an overlapping memcpy warning though. (on master and with these changes)
I paused for a moment to think of why 98149c9 would ""fix"" the leak and I am at a loss.
The only thing i could think of would be st_cur holds a temporary value that still needs to be cleaned.
That doesn't appear to be the case though since mallocs == frees.
$ valgrind --leak-check=full --show-leak-kinds=all  ./src/airdecap-ng -e <redacted>  -p <redacted> /srv/wifi/home-02.pcapdump
==9213== Memcheck, a memory error detector
==9213== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9213== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==9213== Command: ./src/airdecap-ng -e <redacted> -p <redacted> /srv/wifi/home-02.pcapdump
==9213== 
==9213== Source and destination overlap in memcpy_chk(0x33890c, 0x338920, 50)
==9213==    at 0x4C37660: __memcpy_chk (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9213==    by 0x109B3F: write_packet (in /home/clundquist/aircrack-ng/src/airdecap-ng)
==9213==    by 0x10ADBA: main (in /home/clundquist/aircrack-ng/src/airdecap-ng)
==9213== 
Total number of stations seen         1277
Total number of packets read      19740955
Total number of WEP data packets       654
Total number of WPA data packets   4438627
Number of plaintext data packets      7871
Number of decrypted WEP  packets         0
Number of corrupted WEP  packets         0
Number of decrypted WPA  packets        24
Number of bad TKIP (WPA) packets         0
Number of bad CCMP (WPA) packets       176
==9213== 
==9213== HEAP SUMMARY:
==9213==     in use at exit: 0 bytes in 0 blocks
==9213==   total heap usage: 51,679 allocs, 51,679 frees, 5,062,764 bytes allocated
==9213== 
==9213== All heap blocks were freed -- no leaks are possible
==9213== 
==9213== For counts of detected and suppressed errors, rerun with: -v
==9213== ERROR SUMMARY: 24 errors from 1 contexts (suppressed: 0 from 0)
clundquist@nuc:~/aircrack-ng$ git log
commit 3d02ecb26e7b6653d83b87e0ea197a255137ce94 (HEAD -> master, origin/master, origin/HEAD)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1931,2018-07-18T20:42:32Z,2018-07-18T21:49:52Z,2018-07-18T21:50:32Z,MERGED,True,22,21,1,https://github.com/ChrisLundquist,Clundquist/fix memory,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1931,https://github.com/ChrisLundquist,4,https://github.com/aircrack-ng/aircrack-ng/pull/1931#issuecomment-406078882,"98149c9 fixes #1923 (comment)
6a52a78 is for extra credit.","Looks like the overlap error is ~fine.
==13047== WARNING: new redirection conflicts with existing -- ignoring it
--13047--     old: 0x05661ac0 (__memcpy_chk_avx_una) R-> (2030.0) 0x04c375e0 __memcpy_chk
--13047--     new: 0x05661ac0 (__memcpy_chk_avx_una) R-> (2024.0) 0x04c36fa0 __memmove_chk

we're using memmove there as appropriate, but valgrind was treating it as memcpy.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1931,2018-07-18T20:42:32Z,2018-07-18T21:49:52Z,2018-07-18T21:50:32Z,MERGED,True,22,21,1,https://github.com/ChrisLundquist,Clundquist/fix memory,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1931,https://github.com/jbenden,5,https://github.com/aircrack-ng/aircrack-ng/pull/1931#issuecomment-406081043,"98149c9 fixes #1923 (comment)
6a52a78 is for extra credit.","Thank you! Feel free to merge with these fixes. 👍
On an aside, no one tool is completely correct. Valgrind reporting no errors is not actually indicative of ""correct""ness. It's annoying, I know. Thank you for your efforts!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1931,2018-07-18T20:42:32Z,2018-07-18T21:49:52Z,2018-07-18T21:50:32Z,MERGED,True,22,21,1,https://github.com/ChrisLundquist,Clundquist/fix memory,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1931,https://github.com/ChrisLundquist,6,https://github.com/aircrack-ng/aircrack-ng/pull/1931#issuecomment-406082375,"98149c9 fixes #1923 (comment)
6a52a78 is for extra credit.","no one tool is completely correct

For sure. In school we had to test C++99 against borland, visual studios, and gcc because no one implementation was completely correct.
I mean I didn't ""see"" how the leak was occurring, and was somewhat perplexed that using a different variable fixed it. I could only come up with ""maybe casting, maybe st_cur has a dangling malloc..., maybe..."" but none of those seemed to hold up.
I don't think I have merge powers.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1933,2018-07-19T23:32:15Z,2018-08-07T16:35:06Z,2018-08-07T16:39:32Z,CLOSED,False,73,37,2,https://github.com/SemiSkimmedSteve,GPS coordinates to stations in NetXML,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1933,https://github.com/SemiSkimmedSteve,1,https://github.com/aircrack-ng/aircrack-ng/pull/1933,"These changes implement GPS for stations resolves #1565.
Also captures best power for station to be able to get nearest (best) gps location.
I've basically copied and reused the code for the APs GPS.
Hope everything ok, I'm a Github Noob so go easy!","These changes implement GPS for stations resolves #1565.
Also captures best power for station to be able to get nearest (best) gps location.
I've basically copied and reused the code for the APs GPS.
Hope everything ok, I'm a Github Noob so go easy!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1933,2018-07-19T23:32:15Z,2018-08-07T16:35:06Z,2018-08-07T16:39:32Z,CLOSED,False,73,37,2,https://github.com/SemiSkimmedSteve,GPS coordinates to stations in NetXML,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1933,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1933#issuecomment-406446402,"These changes implement GPS for stations resolves #1565.
Also captures best power for station to be able to get nearest (best) gps location.
I've basically copied and reused the code for the APs GPS.
Hope everything ok, I'm a Github Noob so go easy!",Coverage decreased (-0.03%) to 35.999% when pulling fac54d1 on SemiSkimmedSteve:master into 593cc75 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1933,2018-07-19T23:32:15Z,2018-08-07T16:35:06Z,2018-08-07T16:39:32Z,CLOSED,False,73,37,2,https://github.com/SemiSkimmedSteve,GPS coordinates to stations in NetXML,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1933,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1933#issuecomment-411122115,"These changes implement GPS for stations resolves #1565.
Also captures best power for station to be able to get nearest (best) gps location.
I've basically copied and reused the code for the APs GPS.
Hope everything ok, I'm a Github Noob so go easy!","Thanks for your contributions.
I had to modify your changes slightly, before accepting them. There were two issues:

Extra trailing whitespace. Please be certain (typically by using git diff) that changes are free of them, before submitting to OSS projects.
Instead of using sizeof(float) * 5, simply use the form sizeof(structure). Reviewing the commit above will show you how it was modified. The reason this form is preferred is it protects the source code down the road, from structure changes and mismatched sizes. It's a form of DRY principle.

Thank you for your contributions!
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1934,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-406895354,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Would it be possible to split it up in 2 PR: first one to fix the issue and the second one, adding AVL?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,3,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-406895529,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",they are incompatible fixes. One is an issue traversing a linked list. The other replaces it.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407095587,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",Could you fix the issues reported by travis/appveyor?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/jbenden,5,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407192466,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",FYI: All of the buildbot's are crashing with the newer session support of aircrack; so please be sure to check locally that this works OK.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,6,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407193783,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Replace the linked_list with an AVL tree. Previously we spent a lot of time traversing the list.
Fixes segfaults related to traversing the linked list
Fixes race condition in ac_aplist_free causing segfault.
Sort the includes for aircrack-ng.c
clang-format
Fixes signed/unsigned compares

This branch can process 500MM packets across multiple files in a reasonable amount of time now.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,7,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407196240,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","@jbenden this is a pretty big change so we should probably merge in any fixes we need for CI.
I have done some testing locally tracking down the segfaults, but there are a ton of use cases and code paths I haven't tried / don't know about.
I also was trying to make ./configure CFLAGS=""-Wall -Wextra -pedantic"" the default cflags but couldn't quite figure out the autotools side. Though, it looks like clang starts to complain about some of our macros.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,8,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407197877,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Ah I see: FAIL: test-aircrack-ng-0005.sh
Yeah, I haven't figured out the magic command to actually run these tests locally.
test-driver doesn't seem to work if I set the 3 things it wants, or more likely I'm doing it wrong.
The env vars don't seem to be set if I run them directly, etc.
What's the best way to run tests? I had hoped make test would do it, so I'm at a loss short of hacking the files",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,9,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407199346,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",looks like make check,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/jbenden,10,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407200071,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",make check,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/aircrack-ng,11,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407200225,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Check the file test/test-suite.log for details.
The command in this case would be:
./src/aircrack-ng test/wep_64_ptw.cap -l /dev/null | grep ""KEY FOUND"" | grep ""1F:1F:1F:1F:1F""
echo $?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,12,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407216468,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","For some reason the WEP state (ptw_vague) isn't being setup. I need some food then I'll keep digging.
Process 22586 launched: './src/aircrack-ng' (x86_64)
Opening test/wep_64_ptw.cap
Read 65282 packets.

   #  BSSID              ESSID                     Encryption

   1  00:12:BF:12:32:29  Appart                    WEP (30566 IVs)

Choosing first network as target.

Opening test/wep_64_ptw.cap
1 potential targetsease wait...

Attack will be restarted every 5000 captured ivs.
Starting PTW attack with 0 ivs.
Process 22586 stopped
* thread #1, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x270298)
    frame #0: aircrack-ng`PTW_computeKey(state=0x0000000000000000, keybuf="""", keylen=5, testlimit=1000, bf=0x000055555577f820, validchars=0x0000555555857fd0, attacks=0) at aircrack-ptw-lib.c:762
   759 			exit(-1);
   760 		}
   761 	
-> 762 		if (!(attacks & NO_KLEIN))
   763 		{
   764 			// Try the original klein attack first
   765 			for (i = 0; i < keylen; i++)
(lldb) bt
* thread #1, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x270298)
  * frame #0: aircrack-ng`PTW_computeKey(state=0x0000000000000000, keybuf="""", keylen=5, testlimit=1000, bf=0x000055555577f820, validchars=0x0000555555857fd0, attacks=0) at aircrack-ptw-lib.c:762
    frame #1: aircrack-ng`main at aircrack-ng.c:5566
    frame #2: aircrack-ng`main(argc=<unavailable>, argv=<unavailable>) at aircrack-ng.c:6796
    frame #3: libc.so.6`__libc_start_main(main=(aircrack-ng`main at aircrack-ng.c:5623), argc=4, argv=0x00007fffffffe438, init=<unavailable>, fini=<unavailable>, rtld_fini=<unavailable>, stack_end=0x00007fffffffe428) at libc-start.c:310
    frame #4: 0x000055555555c25a aircrack-ng`_start + 42

(lldb) frame select 1
frame #1: aircrack-ng`main at aircrack-ng.c:5566
   5563			else
   5564			{
   5565				/* try 1000 40bit keys first, to find the key ""instantly"" and you don't need to wait for 104bit to fail */
-> 5566				if (PTW_computeKey(ap_cur->ptw_vague,
   5567								   wep.key,
   5568								   5,
   5569								   1000,",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/jbenden,13,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407235624,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","I'd check the state variable, as it's NULL:
* frame #0: aircrack-ng`PTW_computeKey(state=0x0000000000000000, keybuf="""", keylen=5, testlimit=1000, bf=0x000055555577f820, validchars=0x0000555555857fd0, attacks=0) at aircrack-ptw-lib.c:762",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,14,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407235840,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","yes, that's what I was seeing too and was aiming at with:

For some reason the WEP state (ptw_vague) isn't being setup.

I'm just not sure why it isn't being initialized, and what is supposed to initialize it.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,15,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407247754,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","It is ""fixed"", but it isn't super great. (I'd love to understand the original flow better, and the intent)
I believe in the old world we destroyed and rebuilt our data structure between invocations of check_thread and read_thread and now we keep the data, so we had a dependency of it getting reinitialized. I'm not 100% sure though because I don't completely follow why we have check_thread and read_thread and why they have so much duplicate code.
My model of the code flow is roughly:

parse options
open each file from argv, parse each in a thread looking for WPA handshakes/WEP IVs
(do the above again in check_thread or read_thread?)
pick a target, spin up cracking threads as appropriate
find key and exit or exhaust dictionaries",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/coveralls,16,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407249124,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",Coverage increased (+0.4%) to 36.511% when pulling 01ac11e on ChrisLundquist:clundquist/more-avl-tree into 7a48137 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,17,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-407850598,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",Let me know if anything else needs to be done here,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/jbenden,18,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408285253,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","I'm not fond of mixing functionality and code formatting changes, but the changes do seem OK,
I think we should wait for @Mister-X- approval on merging this, though...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,19,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408302396,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","I'm not fond of mixing functionality and code formatting changes, but the changes do seem OK,

Yeah, from what I gathered clang-format was The Way To Happiness^TM here. So, if I formatted this using clang-format, I may actually have fewer format conflicts since we're using an auto-formatter.

I think we should wait for @Mister-X- approval on merging this, though...

yep yep, this is a pretty involved change so I'd appreciate all the eyes possible.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/aircrack-ng,20,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408559181,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Agreed with @jbenden regarding formatting changes, please use our clang-format.
You pushed a not-so-great fix in a set of great changes. We'll document check_thread and read_thread in the next few days (to also avoid confusion in the future), so you can improve/fix the fix.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,21,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408559336,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Yeah, this should be using your .clang-format unless I missed something in the usage.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,22,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408559671,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","You pushed a not-so-great fix in a set of great changes.

Yeah, I think that ""had"" to happen based on my understanding on the previous dependency of relying on the other thread. I could easily be missing something though.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/jbenden,23,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408560461,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Clang format would be ran like: clang-format -i -style=file <filename> from the root of the project.
@Mister-X- We could have Travis verify all changes meet the formatting style, if you like the idea.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,24,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408566951,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","clundquist@nuc:~/aircrack-ng$ clang-format -i --style=file src/aircrack-ng.c
clundquist@nuc:~/aircrack-ng$ git diff
clundquist@nuc:~/aircrack-ng$ clang-format -i src/aircrack-ng.c 
clundquist@nuc:~/aircrack-ng$ git diff
clundquist@nuc:~/aircrack-ng$ 

Yep, this seems to be using your format.
clundquist@nuc:~/aircrack-ng$ strace clang-format -i src/aircrack-ng.c  2>&1 | grep "".clang-format""
execve(""/usr/bin/clang-format"", [""clang-format"", ""-i"", ""src/aircrack-ng.c""], 0x7ffcf9db2220 /* 24 vars */) = 0
stat(""/home/clundquist/aircrack-ng/src/.clang-format"", 0x7ffdc6697e70) = -1 ENOENT (No such file or directory)
stat(""/home/clundquist/aircrack-ng/src/_clang-format"", 0x7ffdc6697e70) = -1 ENOENT (No such file or directory)
stat(""/home/clundquist/aircrack-ng/.clang-format"", {st_mode=S_IFREG|0664, st_size=857, ...}) = 0
openat(AT_FDCWD, ""/home/clundquist/aircrack-ng/.clang-format"", O_RDONLY|O_CLOEXEC) = 3

It looks for .clang-format by default",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,25,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408571946,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Turns out our label exit_main was dead code.
I've fixed all but one leak detected by valgrind:
==16037== HEAP SUMMARY:
==16037==     in use at exit: 32 bytes in 1 blocks
==16037==   total heap usage: 105,104 allocs, 105,103 frees, 25,172,402 bytes allocated
==16037== 
==16037== 32 bytes in 1 blocks are still reachable in loss record 1 of 1
==16037==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16037==    by 0x56F17E4: _dlerror_run (dlerror.c:140)
==16037==    by 0x56F1050: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==16037==    by 0x417F33: ac_crypto_engine_loader_load (crypto_engine_loader.c:356)
==16037==    by 0x403B70: load_aircrack_crypto_dso (aircrack-ng.c:5657)
==16037==    by 0x403B70: main (aircrack-ng.c:5725)

I don't quite see it.
# crypto_engine_loader.c:356
356     module = dlopen (module_filename, RTLD_LAZY);

It looks like this should get cleaned up on error or by ac_crypto_engine_loader_unload
In other news, --enable-asan runs clean on a ""open the file and control+C"" test which is a nice win over master!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,26,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408573334,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","appears to be a valgrind false positive:
https://stackoverflow.com/questions/1542457/memory-leak-reported-by-valgrind-in-dlopen",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/jbenden,27,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408573862,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","@ChrisLundquist I'm fixing the BSD configure problem, stay tuned...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/jbenden,28,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-408574214,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",@ChrisLundquist I've resolved the BSD configure problem.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,29,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-410080251,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",Just checking in and making sure there weren't any notes I missed.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/aircrack-ng,30,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-410318082,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","both threads take care of reading the files and are very similar.

check_thread is only used when preparing the list of networks for the user to choose from. It won't be called if the BSSID is already set
read_thread is used when actually loading the files for cracking",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,31,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-410771324,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",I've simplified the area where we ensure ap_cur is setup for WEP.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/aircrack-ng,32,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-410786871,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done",Travis failed on a test. Are you sure it's a good idea to append before initializing PTW?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1934,2018-07-22T20:36:51Z,2018-08-07T16:09:43Z,2018-08-07T16:09:43Z,MERGED,True,332,354,4,https://github.com/ChrisLundquist,"Aircrack-ng parsing speed up, fix segfaults",19,[],https://github.com/aircrack-ng/aircrack-ng/pull/1934,https://github.com/ChrisLundquist,33,https://github.com/aircrack-ng/aircrack-ng/pull/1934#issuecomment-410789650,"Current master / 1.3 release segfaults
$ lldb aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""aircrack-ng""
Current executable set to 'aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13675 launched: '/usr/local/bin/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13675 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0x689a010f1e00)
    frame #0: aircrack-ng`check_thread(arg=<unavailable>) at aircrack-ng.c:2324
   2321			while (ap_cur != NULL)
   2322			{
   2323				if (!memcmp(ap_cur->bssid, bssid, 6)) break;
-> 2324	
   2325				ap_prv = ap_cur;
   2326				ap_cur = ap_cur->next;
   2327			}
(lldb) ^Cclundquist@nuc:~/aircrack-ng$ lldb ./src/aircrack-ng /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
(lldb) target create ""./src/aircrack-ng""
Current executable set to './src/aircrack-ng' (x86_64).
(lldb) settings set -- target.run-args  ""/srv/wifi/Kismet-20180709-18-38-41-1.pcapdump""
(lldb) run
Process 13692 launched: './src/aircrack-ng' (x86_64)
Opening /srv/wifi/Kismet-20180709-18-38-41-1.pcapdump
Process 13692 stoppedse wait...
* thread #2, name = 'aircrack-ng', stop reason = signal SIGSEGV: invalid address (fault address: 0xb)
    frame #0: aircrack-ng`ac_aplist_free(ap_1st=0x00007ffff00993e0) at aircrack-ng.c:364
   361 			while (ap_cur->st_1st != NULL)
   362 			{
   363 				st_tmp = ap_cur->st_1st;
-> 364 				ap_cur->st_1st = ap_cur->st_1st->next;
   365 				free(st_tmp);
   366 				st_tmp = NULL;
   367 			}

if we use a different file with 1.3 (debug symbols):
 time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
# 45 minutes later I give up
13716 clundqu+  20   0  101832  10424   3944 S 100.0  0.0  45:28.37 ./src/aircrack-ng /srv/wifi/home-02.pcapdump 

This branch:
$ time ./src/aircrack-ng /srv/wifi/home-02.pcapdump
Opening /srv/wifi/home-02.pcapdump
Read 19740955 packets.

Index number of target network ? ^C
Quitting aircrack-ng...
pthread_join: Success

real	0m4.268s
user	0m1.437s
sys	0m1.235s

TODO memory cleanup. done","Are you sure it's a good idea to append before initializing PTW?

Yeah, that's why I had it the other way before. To be more atomic.
I can revert that last change and just leave a comment. Darn.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1936,2018-08-03T17:34:04Z,2018-08-07T16:05:56Z,2018-10-13T21:20:48Z,MERGED,True,618,41,19,https://github.com/jbenden,aircrack-ng: Support for 802.11w,40,"['enhancement', '#aircrack-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/1936,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1936,This PR permits the aircrack-ng tool to process and crack 802.11w.,This PR permits the aircrack-ng tool to process and crack 802.11w.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1936,2018-08-03T17:34:04Z,2018-08-07T16:05:56Z,2018-10-13T21:20:48Z,MERGED,True,618,41,19,https://github.com/jbenden,aircrack-ng: Support for 802.11w,40,"['enhancement', '#aircrack-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/1936,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1936#issuecomment-410326518,This PR permits the aircrack-ng tool to process and crack 802.11w.,Coverage increased (+0.8%) to 36.915% when pulling 53dcf7b on aes-cmac-mic into 7a48137 on master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1936,2018-08-03T17:34:04Z,2018-08-07T16:05:56Z,2018-10-13T21:20:48Z,MERGED,True,618,41,19,https://github.com/jbenden,aircrack-ng: Support for 802.11w,40,"['enhancement', '#aircrack-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/1936,https://github.com/ZeroChaos-,3,https://github.com/aircrack-ng/aircrack-ng/pull/1936#issuecomment-410332222,This PR permits the aircrack-ng tool to process and crack 802.11w.,"I think this needs a little more documentation.  Perhaps a basic explanation of what key we are cracking (PSK, PMK, etc)?  I don't think most people even know what 802.11w is.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1936,2018-08-03T17:34:04Z,2018-08-07T16:05:56Z,2018-10-13T21:20:48Z,MERGED,True,618,41,19,https://github.com/jbenden,aircrack-ng: Support for 802.11w,40,"['enhancement', '#aircrack-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/1936,https://github.com/jbenden,4,https://github.com/aircrack-ng/aircrack-ng/pull/1936#issuecomment-410341070,This PR permits the aircrack-ng tool to process and crack 802.11w.,"Perhaps the source is documented enough, by way of the function names surrounding each step of cracking? eg: The PMK is as-is. The PTK is a bit different, and the MIC is completely different.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1936,2018-08-03T17:34:04Z,2018-08-07T16:05:56Z,2018-10-13T21:20:48Z,MERGED,True,618,41,19,https://github.com/jbenden,aircrack-ng: Support for 802.11w,40,"['enhancement', '#aircrack-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/1936,https://github.com/jbenden,5,https://github.com/aircrack-ng/aircrack-ng/pull/1936#issuecomment-410344204,This PR permits the aircrack-ng tool to process and crack 802.11w.,"It might need a wiki note, though...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1936,2018-08-03T17:34:04Z,2018-08-07T16:05:56Z,2018-10-13T21:20:48Z,MERGED,True,618,41,19,https://github.com/jbenden,aircrack-ng: Support for 802.11w,40,"['enhancement', '#aircrack-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/1936,https://github.com/ZeroChaos-,6,https://github.com/aircrack-ng/aircrack-ng/pull/1936#issuecomment-410348750,This PR permits the aircrack-ng tool to process and crack 802.11w.,"I disagree, ""read the code"" isn't documentation.  This should be put in a man page or something at least.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1939,2018-08-11T17:04:54Z,2018-08-11T18:14:10Z,2018-08-11T18:14:10Z,MERGED,True,2,2,1,https://github.com/kimocoder,[airmon-ng] fix the 88XXau support,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1939,https://github.com/kimocoder,1,https://github.com/aircrack-ng/aircrack-ng/pull/1939,"We've enabled all chipsets to be supported under 1 name if they all are enabled, instead of compiling them separated they all are supported under the ""88XXau"" or ""rtl88xxau"" solution.
Left the other names ""8812"", ""8814"" and ""8821"" be there, in case users simply want to compile them separated.","We've enabled all chipsets to be supported under 1 name if they all are enabled, instead of compiling them separated they all are supported under the ""88XXau"" or ""rtl88xxau"" solution.
Left the other names ""8812"", ""8814"" and ""8821"" be there, in case users simply want to compile them separated.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1939,2018-08-11T17:04:54Z,2018-08-11T18:14:10Z,2018-08-11T18:14:10Z,MERGED,True,2,2,1,https://github.com/kimocoder,[airmon-ng] fix the 88XXau support,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1939,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1939#issuecomment-412288995,"We've enabled all chipsets to be supported under 1 name if they all are enabled, instead of compiling them separated they all are supported under the ""88XXau"" or ""rtl88xxau"" solution.
Left the other names ""8812"", ""8814"" and ""8821"" be there, in case users simply want to compile them separated.",Coverage decreased (-0.01%) to 37.959% when pulling b30a962 on kimocoder:master into 836ef12 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/ffontaine,1,https://github.com/aircrack-ng/aircrack-ng/pull/1943,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1943#issuecomment-415127400,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",Coverage increased (+0.01%) to 37.959% when pulling 37078a4 on ffontaine:master into 91ea647 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1943#issuecomment-415927382,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Is there any currently supported Linux distribution that still handles such CPU, assuming it's using P5 microarchitecture (based on the toolchain being 586)?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/ffontaine,4,https://github.com/aircrack-ng/aircrack-ng/pull/1943#issuecomment-416054932,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","This toolchain is still in the buildroot's autobuilders (http://autobuild.buildroot.net/toolchains/tarballs/br-i386-pentium-mmx-musl-2018.05.tar.bz2) but I suppose there is not a lot of users.
If you don't like removing this code from aircrack-ng, an other option would be disable aircrack-ng on CPUs with MMU support.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/aircrack-ng,5,https://github.com/aircrack-ng/aircrack-ng/pull/1943#issuecomment-416096414,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","It compiles and runs on FreeBSD on a Pentium MMX. The only SIMD that works is 'generic'.
I'd love to see a use case for such toolchain though.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/ZeroChaos-,6,https://github.com/aircrack-ng/aircrack-ng/pull/1943#issuecomment-416254785,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","gentoo officially supports i386, i486, and i586",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/aircrack-ng,7,https://github.com/aircrack-ng/aircrack-ng/pull/1943#issuecomment-416280978,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",Is there any good tutorial on setting up a i586 version?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1943,2018-08-22T18:03:16Z,2018-08-27T20:16:19Z,2018-08-27T20:17:44Z,MERGED,True,0,15,3,https://github.com/ffontaine,Fix build with mmx,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1943,https://github.com/jbenden,8,https://github.com/aircrack-ng/aircrack-ng/pull/1943#issuecomment-416354395,"Commit 39387fc removed mmx support
however aircrack-ng fails to build on platforms with mmx because an
error is raised if MMX is defined.
Fixes:

http://autobuild.buildroot.net/results/b7362b69435e9ef6fb2aedc50743e88dbd7a5c72

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","I've accepted the patch, as-is, because it shouldn't have failed to build; it should have just built a generic binary.
Thanks!
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1946,2018-08-31T04:25:03Z,2018-09-11T18:14:10Z,2018-09-11T18:14:10Z,MERGED,True,13,9,3,https://github.com/ChrisLundquist,Cleanup OpenSSL includes,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1946,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1946,"Pushes our OpenSSL includes down into the C file so that our other utilities don’t have to import a bunch of headers. This is possible because we don’t expose any OpenSSL types in the header.
We also don’t actually use sys/types in this file.
We also had a hidden dep that got pulled in from this. Turns out we need Malloc and Free in ivstool. (Which pulling in OpenSSL headers gave us before)","Pushes our OpenSSL includes down into the C file so that our other utilities don’t have to import a bunch of headers. This is possible because we don’t expose any OpenSSL types in the header.
We also don’t actually use sys/types in this file.
We also had a hidden dep that got pulled in from this. Turns out we need Malloc and Free in ivstool. (Which pulling in OpenSSL headers gave us before)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1946,2018-08-31T04:25:03Z,2018-09-11T18:14:10Z,2018-09-11T18:14:10Z,MERGED,True,13,9,3,https://github.com/ChrisLundquist,Cleanup OpenSSL includes,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1946,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1946#issuecomment-417549776,"Pushes our OpenSSL includes down into the C file so that our other utilities don’t have to import a bunch of headers. This is possible because we don’t expose any OpenSSL types in the header.
We also don’t actually use sys/types in this file.
We also had a hidden dep that got pulled in from this. Turns out we need Malloc and Free in ivstool. (Which pulling in OpenSSL headers gave us before)",Coverage remained the same at 37.959% when pulling 34c8901 on ChrisLundquist:clundquist/crypto-includes into c0a215c on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1946,2018-08-31T04:25:03Z,2018-09-11T18:14:10Z,2018-09-11T18:14:10Z,MERGED,True,13,9,3,https://github.com/ChrisLundquist,Cleanup OpenSSL includes,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1946,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1946#issuecomment-417738517,"Pushes our OpenSSL includes down into the C file so that our other utilities don’t have to import a bunch of headers. This is possible because we don’t expose any OpenSSL types in the header.
We also don’t actually use sys/types in this file.
We also had a hidden dep that got pulled in from this. Turns out we need Malloc and Free in ivstool. (Which pulling in OpenSSL headers gave us before)",Both Travis (all 4) and AppVeyor fail (immediately),True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1946,2018-08-31T04:25:03Z,2018-09-11T18:14:10Z,2018-09-11T18:14:10Z,MERGED,True,13,9,3,https://github.com/ChrisLundquist,Cleanup OpenSSL includes,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1946,https://github.com/ChrisLundquist,4,https://github.com/aircrack-ng/aircrack-ng/pull/1946#issuecomment-417739196,"Pushes our OpenSSL includes down into the C file so that our other utilities don’t have to import a bunch of headers. This is possible because we don’t expose any OpenSSL types in the header.
We also don’t actually use sys/types in this file.
We also had a hidden dep that got pulled in from this. Turns out we need Malloc and Free in ivstool. (Which pulling in OpenSSL headers gave us before)","Huh, I’ll take a look tonight. Make clean seemed to work locally. I must
have missed something.
…
On Fri, Aug 31, 2018 at 10:38 AM Aircrack-ng ***@***.***> wrote:
 Both Travis (all 4) and AppVeyor fail (immediately)

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1946 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AALECE5s0ulMrDIrToiG038V8jRGQNePks5uWXSIgaJpZM4WUlJ9>
 .",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1946,2018-08-31T04:25:03Z,2018-09-11T18:14:10Z,2018-09-11T18:14:10Z,MERGED,True,13,9,3,https://github.com/ChrisLundquist,Cleanup OpenSSL includes,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1946,https://github.com/ChrisLundquist,5,https://github.com/aircrack-ng/aircrack-ng/pull/1946#issuecomment-420097437,"Pushes our OpenSSL includes down into the C file so that our other utilities don’t have to import a bunch of headers. This is possible because we don’t expose any OpenSSL types in the header.
We also don’t actually use sys/types in this file.
We also had a hidden dep that got pulled in from this. Turns out we need Malloc and Free in ivstool. (Which pulling in OpenSSL headers gave us before)","Just wanted to follow up here to see if there is anything else I can do.
The tests passed great for the lats commit, turns out I missed grcypt initially.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1953,2018-09-15T20:32:48Z,2018-09-16T18:52:03Z,2018-09-16T18:52:03Z,MERGED,True,17,0,4,https://github.com/ChrisLundquist,Clundquist/more tests,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1953,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1953,"Test case for: #1947
Ensure test 5 doesn't hang on failure (before it would sit there waiting for more IVs)","Test case for: #1947
Ensure test 5 doesn't hang on failure (before it would sit there waiting for more IVs)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1954,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,2,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421666762,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","ok, this fixes the segfault as reported in #1947 but there are some other issues that are related.
I have to git revert 1221bef55a8aaffc0ea2558a164e928fcaa290f1 and resolve the conflict (doesn't really matter how from what I see).
then ./src/aircrack-ng -q -b 00:11:95:91:78:8C -K ./test/test.ivs will work, but you'll sometimes see an extra bogus answer like this:
clundquist@nuc:~/aircrack-ng$ ./src/aircrack-ng -q -b 00:11:95:91:78:8C -K ./test/test.ivs
1 potential targets

KEY FOUND! [ AE:5B:7F:3A:03:D0:AF:9B:F6:8D:A5:E2:C7 ] 
	Decrypted correctly: 100%

clundquist@nuc:~/aircrack-ng$ ./src/aircrack-ng -q -b 00:11:95:91:78:8C -K ./test/test.ivs
1 potential targets

KEY FOUND! [ AE:5B:7F:3A:03:D0:AF:9B:F6:8D:A5:E2:C7 ] 
	Decrypted correctly: 100%

KEY FOUND! [ AE:5B:7F:3A:03:D0:AF:9B:F6:8D:A5:BB:CC ] 
	Decrypted correctly: 0%


Note, -q -b ... will make it use read_thread. Things will ""work"" using check_thread but without -q you'll only see the last answer, which is often the bogus one.
I suspect 1221bef is in fact more correct, and we have something like an ""off by one"" else where that 1221bef detects.
I think I've taken this about as far as I'm willing. the TL;DR is read_thread and check_thread have drifted substantially. read_thread seems to be more correct. Swapping to the avl_tree just surfaced how much these methods have drifted.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421678049,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947",Looks like you added src/tags file by mistake,True,{'THUMBS_UP': ['https://github.com/ChrisLundquist']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,4,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421679145,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","I finally get why check_thread and read_thread both exist and are different.
In check_thread, the goal (of check_thread) was to read ""just enough"" to print the chooser, then reload the data with read_thread. This saved memory because otherwise we have to allocate a bunch of WEP attack buffers and IVs and all sorts of things that we may not even care about if we're doing a WPA attack, or vice versa.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,5,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421680155,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","This branch seems reasonably stable. It survives a stress test with ~200GB of data.
# ...
995891  FF:F9:11:5E:91:A3                            WPA (0 handshake)
995892  FF:F9:11:6E:4C:7E                            WEP (1 IVs)
995893  FF:F9:11:6E:FE:78                            WEP (1 IVs)
995894  FF:F9:11:BE:46:73                            WPA (0 handshake)
995895  FF:F9:24:0C:48:7E                            WEP (1 IVs)

With that many APs and clients, the hot loop becomes searching for a client on an AP:
2468         while (st_cur != NULL)
2469         {
2470             if (!memcmp(st_cur->stmac, stmac, 6)) break;
2471 
2472             st_prv = st_cur;
2473             st_cur = st_cur->next;
2474         }",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/jbenden,6,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421797922,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","In master @ 8d76f43 I've really fixed the pipes problem. Apparently, they cannot be closed at all; however, they can be released during cleanup.
I am unsure of why there are incorrect results displayed, but I do know it seems to be only the last byte that is incorrect. So however the result is returned might not be sending the value across a pipe correctly...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/jbenden,7,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421801120,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","FWIW: It seems key_found is called when opt.probability is even zero. If I filter that out, it seems to work. However, in looking some; I see that the bf_pipe is used to send over possible answers where the last two bytes need to be bruteforced. Because of this, the pipe has ""extra"" content after a fully probable key is found - thus leading to extra outputs.... It may be that shutdown code is missing to skip processing for more keys....",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,8,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421806978,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","So, I'm not entirely in love with this PR, but I do think it is an improvement in a few regards such as adding a test, not seg faulting, removing the global buffer, etc.
The part that I'm struggling with is that it is a significant design decision change, that I'm not entirely sure I have complete context on. As I mentioned before, from what I've gleaned, check_thread was originally a first pass to load ' just enough data' to show the chooser. 'read_thread' was a second pass to fill in the desired target.
The upside of this approach was a notably smaller memory footprint, the downside was making multiple passes, and increased complexity.
This PR now brings check_thread much closer to read_thread in that it loads and initializes all the data it finds. The upside here is that it is single pass, and we could get rid of read_thread. Another plus is that we could more easily support a ""multi target"" mode if we load all the required data in one pass. The downside is it used ~8GB of memory when parsing ~200GB of packets caps. (This would be lower if specified a target as we'd skip other nodes)
So yeah, this is something to consider. I'm not sure how else I'd fix the segfault, I'd have to start over from master if we wanted to keep the idea of read_thread and check_thread. I know previously we said we wanted to collapse them into one. Now that I have worked with them more, I have a better understanding of why they are here.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/coveralls,9,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421807248,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947",Coverage increased (+0.9%) to 39.045% when pulling 2c70a50 on ChrisLundquist:clundquist/segfault-fix into 8d76f43 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/jbenden,10,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421808485,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","Given the memory usage (and the requirement that the project run on small devices) I'd say to turn the combination of both threads into a singular (taking a parameter for SCAN vs. READ). The parameter is then used to determine what all is loaded. At the end of this function, if the mode was SCAN then recursively call itself again with READ set.
How's that sound?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/jbenden,11,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421808826,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947",PS: Travis failed probably due to test.ivs or test-aircrack-ng-0010.sh being missing from the EXTRA_DIST define inside of the Makefile.am script.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,12,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421809212,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","I thought I added it to automake. Half the Travis builds passed.
…
On Sun, Sep 16, 2018 at 11:27 AM Joseph Benden ***@***.***> wrote:
 PS: Travis failed probably due to test.ivs or test-aircrack-ng-0010.sh
 being missing from the EXTRA_DIST define inside of the Makefile.am script.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1954 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AALECEP1fTE_QUCUa9wER-EG2RdUls0aks5ubpgYgaJpZM4WqiF6>
 .",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/aircrack-ng,13,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421815605,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947",#1953 was merged,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/aircrack-ng,14,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421816172,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","The scanning is not always done, it is only done when BSSID and maybe some other info is not available. So, in some cases, it will never be run.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/jbenden,15,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421822084,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","@ChrisLundquist did you wish to continue the battle, or should one of us pick up from here?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,16,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421833524,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","I probably can’t push on this much more in the near term. I had to get a
job. The funny part is that it was about build tools and cross compiling.
Your name came to mind for someone who knew what they were doing when it
came to cross compiling and static linking OpenSSL for arm32.

Anyway, I’m happy to help as I can, as available. I didn’t want to leave
you all hanging with a segfault having introduced it.
…
On Sun, Sep 16, 2018 at 12:54 PM Joseph Benden ***@***.***> wrote:
 @ChrisLundquist <https://github.com/ChrisLundquist> did you wish to
 continue the battle, or should one of us pick up from here?

 —
 You are receiving this because you were mentioned.


 Reply to this email directly, view it on GitHub
 <#1954 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AALECG7JCBRO2KjDNMPA0KE3trdbjUQbks5ubqxmgaJpZM4WqiF6>
 .",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/aircrack-ng,17,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421834826,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947",@ChrisLundquist Thanks a lot for the help,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,18,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421835653,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","Given the memory usage (and the requirement that the project run on small devices) I'd say to turn the combination of both threads into a singular (taking a parameter for SCAN vs. READ). The parameter is then used to determine what all is loaded. At the end of this function, if the mode was SCAN then recursively call itself again with READ set.
How's that sound?

I'm not sure that will buy us too much. That's more or less what check_thread + read_thread aims to do. There is a subtly that took me a long time to finally get, and I don't quite understand it well enough to communicate it.

The scanning is not always done, it is only done when BSSID and maybe some other info is not available. So, in some cases, it will never be run.

I think Mr.X is pointing at this subtly with this statement.
The task of summarizing vs loading is different ""just enough"" that it made sense to have two different functions. As Mr.X said, if the user passes -b <mac> or -e <essid check_thread isn't needed, and we can jump straight to read_thread. However on the flip side, if we don't know what we're looking for we either need to stat it and ask the user, or load it all, and ask the user.
@Mister-X- sure thing. If there is anything to wrap this up I'm happy to do it. (I'll fix the merge conflict shortly)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/Mister-X-,19,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421840498,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","@ChrisLundquist I don't think there is anything else, unless @jbenden can think of anything.
At first, #1947 sounded like an easy fix (like a misplaced free() or missing initialization) and since you knew the AVL changes very well, it would be easy to find, but it turned out much more complex than expected.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/ChrisLundquist,20,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421841001,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","Roger. If you don't want to go this route that's perfectly OK, and feel
free to close this PR.
If nothing else, I think we've shed a lot of light on the issue.
…
On Sun, Sep 16, 2018 at 2:57 PM Mister X ***@***.***> wrote:
 @ChrisLundquist <https://github.com/ChrisLundquist> I don't think there
 is anything else, unless @jbenden <https://github.com/jbenden> can think
 of anything.

 At first, #1947 <#1947>
 sounded like an easy fix (like a misplaced free() or missing
 initialization) and since you knew the AVL changes very well, it would be
 easy to find, but it turned out much more complex than expected.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#1954 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AALECNx-Tm1APemvNuroMNc8aCmQ4pb9ks5ubskxgaJpZM4WqiF6>
 .",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/jbenden,21,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421856141,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947","Thanks everyone!
@ChrisLundquist if you need build system hints, let me know. :)
@Mister-X- Should I create a new branch and aggregate all of this, plus the changes I feel would work best? It seems this is priority as we're a tad broken currently...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1954,2018-09-15T20:40:19Z,2018-09-20T16:29:45Z,2018-09-20T16:29:45Z,MERGED,True,342,404,4,https://github.com/ChrisLundquist,Fixes for wep segfault,11,[],https://github.com/aircrack-ng/aircrack-ng/pull/1954,https://github.com/Mister-X-,22,https://github.com/aircrack-ng/aircrack-ng/pull/1954#issuecomment-421857045,"ensures we only call read_thread xor check_thread.
Factors out duplication and starts to bring them closer.
for #1947",@jbenden  Go ahead,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1956,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.","This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422459257,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.","A future change might be to always call packet_reader_thread with PACKET_READER_READ_MODE, and use the PACKET_READER_CHECK_MODE to simply determine an AP's BSSID to load, populating opt.bssid so that the later call using PACKET_READER_READ_MODE functions to load all data associated with the AP. This is a better way to permit AP selection without loading all data up front.
At least for now, the PACKET_READER_CHECK_MODE discards all unused struct AP_info data, once a selection is made.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422549044,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.","From the above, it introduces the requirement to read the entire packet capture file, twice; when going through the path that uses PACKET_CAPTURE_CHECK_MODE to display the available APs (or auto-select the only one) to select from.
It might be a better idea to have the PACKET_CAPTURE_CHECK_MODE save all file offsets for the packets in to a linked-list. Then upon selecting the desired AP, it simply seeks to these offsets, reads it, and continues until the linked-list is empty. This change isn't too difficult, but does add at least another element to struct AP_info.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422553818,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.",Adding another element is fine.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/jbenden,5,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422560212,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.","Before ever heading down this implementation path: is it even really necessary?
How many times does one process simply huge files; to read the entire thing, to manually select a BSSID, and continue?
Is it possible in this case to simply stick with the use of a secondary method of acquiring the desired BSSID and running aircrack-ng with the -b option?
In other words, how important is it that this functionality use the least amount of run-time memory? It ends up still using a lot of CPU after to crack...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/aircrack-ng,6,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422567312,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.",Huge files are probably not used very often.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/jbenden,7,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422570218,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.","Ok, sounds good. I'll hold on it, for now.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/jbenden,8,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422597434,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.",Please review for a merge to master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1956,2018-09-17T20:31:47Z,2018-09-20T16:29:43Z,2018-09-20T16:30:01Z,MERGED,True,981,1630,6,https://github.com/jbenden,Merge check and read threads,25,[],https://github.com/aircrack-ng/aircrack-ng/pull/1956,https://github.com/ChrisLundquist,9,https://github.com/aircrack-ng/aircrack-ng/pull/1956#issuecomment-422613290,"This PR resolves the problems of #1947, #1953, and #1954 by merging the operations of check_thread and read_thread in to a singular thread that performs both operations. This PR additionally fixes a few problems seen during code reading.","First off, nice work!

From the above, it introduces the requirement to read the entire packet capture file, twice; when going through the path that uses PACKET_CAPTURE_CHECK_MODE to display the available APs (or auto-select the only one) to select from.

Yep, that's how the previous approach worked when calling check_thread it would read everything, show the stats, then read_thread would read everything again and filter for bssid/essid

How many times does one process simply huge files; to read the entire thing, to manually select a BSSID, and continue?

I only ever do this to peek at the data. How many IVs, handshakes, etc.
I probably would have been better served by writing a --stats thing in hindsight.

In other words, how important is it that this functionality use the least amount of run-time memory? It ends up still using a lot of CPU after to crack...

It isn't super important to me. a high water mark of 8GB after reading 200GB of data seemed acceptable. That means we only kept 4-5% of the data.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1959,2018-09-21T05:29:19Z,2018-09-22T01:18:33Z,2018-09-22T01:31:33Z,MERGED,True,60,61,1,https://github.com/ChrisLundquist,go back to the two pass method to lower memory,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1959,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1959,"Without this method I can't load 40GB pcaps with 32GB of memory (no swap).
This is more or less what we are doing before in the read_thread and check_thread days, but we've greatly benefitted from the work of unifying the two code paths.
The commenting of else at the bottom is the key. We can/should reindent it, but I wanted to gather thoughts.
This is more or less what @jbenden mentioned in the comments of the other PR.
Nice to haves that crossed my mind:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)
after the user finishes check_thread, print a helpful ""next time use aircrack-ng -b <the mac they chose> to start faster"" or at least tell them the mac/essid as picking 312231 isn't terribly helpful in the prompt.
right now packet_reader__update_ap_info switches on format. We should break out these a parsers as we shouldn't have to check the format for each packet within a file (as I think we have always been doing). This will get rid of some branching / help improve pipelining. (<-- This is possible now that we have this in one place!)","Without this method I can't load 40GB pcaps with 32GB of memory (no swap).
This is more or less what we are doing before in the read_thread and check_thread days, but we've greatly benefitted from the work of unifying the two code paths.
The commenting of else at the bottom is the key. We can/should reindent it, but I wanted to gather thoughts.
This is more or less what @jbenden mentioned in the comments of the other PR.
Nice to haves that crossed my mind:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)
after the user finishes check_thread, print a helpful ""next time use aircrack-ng -b <the mac they chose> to start faster"" or at least tell them the mac/essid as picking 312231 isn't terribly helpful in the prompt.
right now packet_reader__update_ap_info switches on format. We should break out these a parsers as we shouldn't have to check the format for each packet within a file (as I think we have always been doing). This will get rid of some branching / help improve pipelining. (<-- This is possible now that we have this in one place!)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1959,2018-09-21T05:29:19Z,2018-09-22T01:18:33Z,2018-09-22T01:31:33Z,MERGED,True,60,61,1,https://github.com/ChrisLundquist,go back to the two pass method to lower memory,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1959,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1959#issuecomment-423419344,"Without this method I can't load 40GB pcaps with 32GB of memory (no swap).
This is more or less what we are doing before in the read_thread and check_thread days, but we've greatly benefitted from the work of unifying the two code paths.
The commenting of else at the bottom is the key. We can/should reindent it, but I wanted to gather thoughts.
This is more or less what @jbenden mentioned in the comments of the other PR.
Nice to haves that crossed my mind:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)
after the user finishes check_thread, print a helpful ""next time use aircrack-ng -b <the mac they chose> to start faster"" or at least tell them the mac/essid as picking 312231 isn't terribly helpful in the prompt.
right now packet_reader__update_ap_info switches on format. We should break out these a parsers as we shouldn't have to check the format for each packet within a file (as I think we have always been doing). This will get rid of some branching / help improve pipelining. (<-- This is possible now that we have this in one place!)",Coverage increased (+0.2%) to 37.797% when pulling 9222e01 on ChrisLundquist:clundquist/low-mem-two-pass into 1c8dc46 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1959,2018-09-21T05:29:19Z,2018-09-22T01:18:33Z,2018-09-22T01:31:33Z,MERGED,True,60,61,1,https://github.com/ChrisLundquist,go back to the two pass method to lower memory,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1959,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1959#issuecomment-423601044,"Without this method I can't load 40GB pcaps with 32GB of memory (no swap).
This is more or less what we are doing before in the read_thread and check_thread days, but we've greatly benefitted from the work of unifying the two code paths.
The commenting of else at the bottom is the key. We can/should reindent it, but I wanted to gather thoughts.
This is more or less what @jbenden mentioned in the comments of the other PR.
Nice to haves that crossed my mind:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)
after the user finishes check_thread, print a helpful ""next time use aircrack-ng -b <the mac they chose> to start faster"" or at least tell them the mac/essid as picking 312231 isn't terribly helpful in the prompt.
right now packet_reader__update_ap_info switches on format. We should break out these a parsers as we shouldn't have to check the format for each packet within a file (as I think we have always been doing). This will get rid of some branching / help improve pipelining. (<-- This is possible now that we have this in one place!)","Please fix the CI failure and fix the else indent (do not do other formatting changes - I realize it borked, but wanted a whole commit fixing everything at some point).
After those are done, I'll merge this. Then those other items can become PRs to contend with. :)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1959,2018-09-21T05:29:19Z,2018-09-22T01:18:33Z,2018-09-22T01:31:33Z,MERGED,True,60,61,1,https://github.com/ChrisLundquist,go back to the two pass method to lower memory,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1959,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/1959#issuecomment-423622170,"Without this method I can't load 40GB pcaps with 32GB of memory (no swap).
This is more or less what we are doing before in the read_thread and check_thread days, but we've greatly benefitted from the work of unifying the two code paths.
The commenting of else at the bottom is the key. We can/should reindent it, but I wanted to gather thoughts.
This is more or less what @jbenden mentioned in the comments of the other PR.
Nice to haves that crossed my mind:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)
after the user finishes check_thread, print a helpful ""next time use aircrack-ng -b <the mac they chose> to start faster"" or at least tell them the mac/essid as picking 312231 isn't terribly helpful in the prompt.
right now packet_reader__update_ap_info switches on format. We should break out these a parsers as we shouldn't have to check the format for each packet within a file (as I think we have always been doing). This will get rid of some branching / help improve pipelining. (<-- This is possible now that we have this in one place!)",There can be multiple DLT in pcap-ng AFAIK but that's the exception,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1959,2018-09-21T05:29:19Z,2018-09-22T01:18:33Z,2018-09-22T01:31:33Z,MERGED,True,60,61,1,https://github.com/ChrisLundquist,go back to the two pass method to lower memory,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1959,https://github.com/ChrisLundquist,5,https://github.com/aircrack-ng/aircrack-ng/pull/1959#issuecomment-423692617,"Without this method I can't load 40GB pcaps with 32GB of memory (no swap).
This is more or less what we are doing before in the read_thread and check_thread days, but we've greatly benefitted from the work of unifying the two code paths.
The commenting of else at the bottom is the key. We can/should reindent it, but I wanted to gather thoughts.
This is more or less what @jbenden mentioned in the comments of the other PR.
Nice to haves that crossed my mind:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)
after the user finishes check_thread, print a helpful ""next time use aircrack-ng -b <the mac they chose> to start faster"" or at least tell them the mac/essid as picking 312231 isn't terribly helpful in the prompt.
right now packet_reader__update_ap_info switches on format. We should break out these a parsers as we shouldn't have to check the format for each packet within a file (as I think we have always been doing). This will get rid of some branching / help improve pipelining. (<-- This is possible now that we have this in one place!)","There can be multiple DLT in pcap-ng AFAIK but that's the exception

Sure, I meant switching on file type like this:
 if (fmt == FORMAT_IVS)
   // ...
 else if (fmt == FORMAT_IVS2)
   // ... 
 else 
   // parse pcap

We just need to factor out the pcap parsing into a function like the others are, and then we won't have to pass fmt to packet_reader__update_ap_info",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1959,2018-09-21T05:29:19Z,2018-09-22T01:18:33Z,2018-09-22T01:31:33Z,MERGED,True,60,61,1,https://github.com/ChrisLundquist,go back to the two pass method to lower memory,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1959,https://github.com/ChrisLundquist,6,https://github.com/aircrack-ng/aircrack-ng/pull/1959#issuecomment-423693169,"Without this method I can't load 40GB pcaps with 32GB of memory (no swap).
This is more or less what we are doing before in the read_thread and check_thread days, but we've greatly benefitted from the work of unifying the two code paths.
The commenting of else at the bottom is the key. We can/should reindent it, but I wanted to gather thoughts.
This is more or less what @jbenden mentioned in the comments of the other PR.
Nice to haves that crossed my mind:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)
after the user finishes check_thread, print a helpful ""next time use aircrack-ng -b <the mac they chose> to start faster"" or at least tell them the mac/essid as picking 312231 isn't terribly helpful in the prompt.
right now packet_reader__update_ap_info switches on format. We should break out these a parsers as we shouldn't have to check the format for each packet within a file (as I think we have always been doing). This will get rid of some branching / help improve pipelining. (<-- This is possible now that we have this in one place!)","After those are done, I'll merge this. Then those other items can become PRs to contend with. :)

Should be fixed up, builds are cooking now!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1960,2018-09-22T01:18:39Z,2018-09-23T16:43:58Z,2018-09-23T16:43:58Z,MERGED,True,17,30,3,https://github.com/ChrisLundquist,[aircrack-ng] faster station lookups,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1960,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1960,"Includes #1959 needed for testing.
As mentioned in the other PR this does:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)

The hot instructions are still getting the station/AP (c_avl_get) and comparing MACs (compare_stations) used for traversing the tree.
This does it in log(n) time though instead of linear.
The approach here is to go piecewise as each binary/tool will have to be updated to use a tree, thus deprecating the linked list and adding the new element.
So until the other PR is merged, this may be a more useful diff:
https://github.com/ChrisLundquist/aircrack-ng/compare/clundquist/low-mem-two-pass...ChrisLundquist:clundquist/faster-stations?expand=1
Unscientific testing shows it finishes before I give up.
Ballpark, 200 / 6 min means we average parsing 550MB/s.
NOTE: when -b is set we seem to get disk limited, which is where we want to be.
without -b we're CPU/memory latency limited.
Device            r/s     w/s     rMB/s     wMB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
# ...
nvme0n1       9057.50    9.30   1129.50      0.07     0.00     7.20   0.00  43.64    0.51    0.65   3.99   127.70     8.09   0.11  99.08

du -h -d0 /srv/wifi/
201G	/srv/wifi/

$ time  ./src/aircrack-ng /srv/wifi/*.pcapdump

 CC=clang CFLAGS=-g -O0 CXX=clang++ --no-create --no-recursion
# Gave up
Quitting aircrack-ng...
EXIT
real    9m50.619s
user    14m14.887s
sys 19m3.744s


# Finished with AVL tree
Quitting aircrack-ng...
EXIT
real    8m38.445s
user    12m43.133s
sys 20m14.234s


CXX=clang++ CC=clang CFLAGS=""-g -O3 -march=skylake""
# Gave up
real    9m57.406s
user    13m19.697s
sys 15m50.740s


# Finished with AVL tree
real    6m14.828s
user    9m3.712s
sys 16m33.883s","Includes #1959 needed for testing.
As mentioned in the other PR this does:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)

The hot instructions are still getting the station/AP (c_avl_get) and comparing MACs (compare_stations) used for traversing the tree.
This does it in log(n) time though instead of linear.
The approach here is to go piecewise as each binary/tool will have to be updated to use a tree, thus deprecating the linked list and adding the new element.
So until the other PR is merged, this may be a more useful diff:
https://github.com/ChrisLundquist/aircrack-ng/compare/clundquist/low-mem-two-pass...ChrisLundquist:clundquist/faster-stations?expand=1
Unscientific testing shows it finishes before I give up.
Ballpark, 200 / 6 min means we average parsing 550MB/s.
NOTE: when -b is set we seem to get disk limited, which is where we want to be.
without -b we're CPU/memory latency limited.
Device            r/s     w/s     rMB/s     wMB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
# ...
nvme0n1       9057.50    9.30   1129.50      0.07     0.00     7.20   0.00  43.64    0.51    0.65   3.99   127.70     8.09   0.11  99.08

du -h -d0 /srv/wifi/
201G	/srv/wifi/

$ time  ./src/aircrack-ng /srv/wifi/*.pcapdump

 CC=clang CFLAGS=-g -O0 CXX=clang++ --no-create --no-recursion
# Gave up
Quitting aircrack-ng...
EXIT
real    9m50.619s
user    14m14.887s
sys 19m3.744s


# Finished with AVL tree
Quitting aircrack-ng...
EXIT
real    8m38.445s
user    12m43.133s
sys 20m14.234s


CXX=clang++ CC=clang CFLAGS=""-g -O3 -march=skylake""
# Gave up
real    9m57.406s
user    13m19.697s
sys 15m50.740s


# Finished with AVL tree
real    6m14.828s
user    9m3.712s
sys 16m33.883s",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1960,2018-09-22T01:18:39Z,2018-09-23T16:43:58Z,2018-09-23T16:43:58Z,MERGED,True,17,30,3,https://github.com/ChrisLundquist,[aircrack-ng] faster station lookups,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1960,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1960#issuecomment-423707685,"Includes #1959 needed for testing.
As mentioned in the other PR this does:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)

The hot instructions are still getting the station/AP (c_avl_get) and comparing MACs (compare_stations) used for traversing the tree.
This does it in log(n) time though instead of linear.
The approach here is to go piecewise as each binary/tool will have to be updated to use a tree, thus deprecating the linked list and adding the new element.
So until the other PR is merged, this may be a more useful diff:
https://github.com/ChrisLundquist/aircrack-ng/compare/clundquist/low-mem-two-pass...ChrisLundquist:clundquist/faster-stations?expand=1
Unscientific testing shows it finishes before I give up.
Ballpark, 200 / 6 min means we average parsing 550MB/s.
NOTE: when -b is set we seem to get disk limited, which is where we want to be.
without -b we're CPU/memory latency limited.
Device            r/s     w/s     rMB/s     wMB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
# ...
nvme0n1       9057.50    9.30   1129.50      0.07     0.00     7.20   0.00  43.64    0.51    0.65   3.99   127.70     8.09   0.11  99.08

du -h -d0 /srv/wifi/
201G	/srv/wifi/

$ time  ./src/aircrack-ng /srv/wifi/*.pcapdump

 CC=clang CFLAGS=-g -O0 CXX=clang++ --no-create --no-recursion
# Gave up
Quitting aircrack-ng...
EXIT
real    9m50.619s
user    14m14.887s
sys 19m3.744s


# Finished with AVL tree
Quitting aircrack-ng...
EXIT
real    8m38.445s
user    12m43.133s
sys 20m14.234s


CXX=clang++ CC=clang CFLAGS=""-g -O3 -march=skylake""
# Gave up
real    9m57.406s
user    13m19.697s
sys 15m50.740s


# Finished with AVL tree
real    6m14.828s
user    9m3.712s
sys 16m33.883s",Coverage decreased (-0.1%) to 37.79% when pulling 39c2e3f on ChrisLundquist:clundquist/faster-stations into 58f5733 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1960,2018-09-22T01:18:39Z,2018-09-23T16:43:58Z,2018-09-23T16:43:58Z,MERGED,True,17,30,3,https://github.com/ChrisLundquist,[aircrack-ng] faster station lookups,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1960,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1960#issuecomment-423769958,"Includes #1959 needed for testing.
As mentioned in the other PR this does:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)

The hot instructions are still getting the station/AP (c_avl_get) and comparing MACs (compare_stations) used for traversing the tree.
This does it in log(n) time though instead of linear.
The approach here is to go piecewise as each binary/tool will have to be updated to use a tree, thus deprecating the linked list and adding the new element.
So until the other PR is merged, this may be a more useful diff:
https://github.com/ChrisLundquist/aircrack-ng/compare/clundquist/low-mem-two-pass...ChrisLundquist:clundquist/faster-stations?expand=1
Unscientific testing shows it finishes before I give up.
Ballpark, 200 / 6 min means we average parsing 550MB/s.
NOTE: when -b is set we seem to get disk limited, which is where we want to be.
without -b we're CPU/memory latency limited.
Device            r/s     w/s     rMB/s     wMB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
# ...
nvme0n1       9057.50    9.30   1129.50      0.07     0.00     7.20   0.00  43.64    0.51    0.65   3.99   127.70     8.09   0.11  99.08

du -h -d0 /srv/wifi/
201G	/srv/wifi/

$ time  ./src/aircrack-ng /srv/wifi/*.pcapdump

 CC=clang CFLAGS=-g -O0 CXX=clang++ --no-create --no-recursion
# Gave up
Quitting aircrack-ng...
EXIT
real    9m50.619s
user    14m14.887s
sys 19m3.744s


# Finished with AVL tree
Quitting aircrack-ng...
EXIT
real    8m38.445s
user    12m43.133s
sys 20m14.234s


CXX=clang++ CC=clang CFLAGS=""-g -O3 -march=skylake""
# Gave up
real    9m57.406s
user    13m19.697s
sys 15m50.740s


# Finished with AVL tree
real    6m14.828s
user    9m3.712s
sys 16m33.883s",Good to go? Shall I look at merging this?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1960,2018-09-22T01:18:39Z,2018-09-23T16:43:58Z,2018-09-23T16:43:58Z,MERGED,True,17,30,3,https://github.com/ChrisLundquist,[aircrack-ng] faster station lookups,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/1960,https://github.com/ChrisLundquist,4,https://github.com/aircrack-ng/aircrack-ng/pull/1960#issuecomment-423770110,"Includes #1959 needed for testing.
As mentioned in the other PR this does:

replace st_cur linked list with avl_tree (this is still the hot instruction for large pcaps)

The hot instructions are still getting the station/AP (c_avl_get) and comparing MACs (compare_stations) used for traversing the tree.
This does it in log(n) time though instead of linear.
The approach here is to go piecewise as each binary/tool will have to be updated to use a tree, thus deprecating the linked list and adding the new element.
So until the other PR is merged, this may be a more useful diff:
https://github.com/ChrisLundquist/aircrack-ng/compare/clundquist/low-mem-two-pass...ChrisLundquist:clundquist/faster-stations?expand=1
Unscientific testing shows it finishes before I give up.
Ballpark, 200 / 6 min means we average parsing 550MB/s.
NOTE: when -b is set we seem to get disk limited, which is where we want to be.
without -b we're CPU/memory latency limited.
Device            r/s     w/s     rMB/s     wMB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
# ...
nvme0n1       9057.50    9.30   1129.50      0.07     0.00     7.20   0.00  43.64    0.51    0.65   3.99   127.70     8.09   0.11  99.08

du -h -d0 /srv/wifi/
201G	/srv/wifi/

$ time  ./src/aircrack-ng /srv/wifi/*.pcapdump

 CC=clang CFLAGS=-g -O0 CXX=clang++ --no-create --no-recursion
# Gave up
Quitting aircrack-ng...
EXIT
real    9m50.619s
user    14m14.887s
sys 19m3.744s


# Finished with AVL tree
Quitting aircrack-ng...
EXIT
real    8m38.445s
user    12m43.133s
sys 20m14.234s


CXX=clang++ CC=clang CFLAGS=""-g -O3 -march=skylake""
# Gave up
real    9m57.406s
user    13m19.697s
sys 15m50.740s


# Finished with AVL tree
real    6m14.828s
user    9m3.712s
sys 16m33.883s",Yep!,True,{'HOORAY': ['https://github.com/kimocoder']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1962,2018-09-22T23:48:22Z,,2021-08-23T03:07:51Z,OPEN,False,23,5,1,https://github.com/ChrisLundquist,print a helpful breadcrumb when we print the chooser,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1962,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1962,"This makes it easier for users to take the fast path / single pass
# When I don't know what networks there are in a pcap
$ ./src/aircrack-ng /srv/wifi/home-01.pcapdump
# ...
Index number of target network ? 675
Use ./src/aircrack-ng -b F8:1D:0F:01:88:08 to load this target faster
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).

# When I know the target
 $ ./src/aircrack-ng  /srv/wifi/home-01.pcapdump -b F8:1D:0F:01:88:08
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).","This makes it easier for users to take the fast path / single pass
# When I don't know what networks there are in a pcap
$ ./src/aircrack-ng /srv/wifi/home-01.pcapdump
# ...
Index number of target network ? 675
Use ./src/aircrack-ng -b F8:1D:0F:01:88:08 to load this target faster
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).

# When I know the target
 $ ./src/aircrack-ng  /srv/wifi/home-01.pcapdump -b F8:1D:0F:01:88:08
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1962,2018-09-22T23:48:22Z,,2021-08-23T03:07:51Z,OPEN,False,23,5,1,https://github.com/ChrisLundquist,print a helpful breadcrumb when we print the chooser,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1962,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1962#issuecomment-423781735,"This makes it easier for users to take the fast path / single pass
# When I don't know what networks there are in a pcap
$ ./src/aircrack-ng /srv/wifi/home-01.pcapdump
# ...
Index number of target network ? 675
Use ./src/aircrack-ng -b F8:1D:0F:01:88:08 to load this target faster
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).

# When I know the target
 $ ./src/aircrack-ng  /srv/wifi/home-01.pcapdump -b F8:1D:0F:01:88:08
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).",Coverage increased (+0.2%) to 38.597% when pulling c5ad41b on ChrisLundquist:clundquist/forward-breadcrumbs into 93c7468 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1962,2018-09-22T23:48:22Z,,2021-08-23T03:07:51Z,OPEN,False,23,5,1,https://github.com/ChrisLundquist,print a helpful breadcrumb when we print the chooser,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1962,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1962#issuecomment-423784047,"This makes it easier for users to take the fast path / single pass
# When I don't know what networks there are in a pcap
$ ./src/aircrack-ng /srv/wifi/home-01.pcapdump
# ...
Index number of target network ? 675
Use ./src/aircrack-ng -b F8:1D:0F:01:88:08 to load this target faster
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).

# When I know the target
 $ ./src/aircrack-ng  /srv/wifi/home-01.pcapdump -b F8:1D:0F:01:88:08
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).","The tip should only be displayed if it takes more than a few seconds to parse the capture file(s). Something like 2-3 seconds.
Please add a newline before Opening /srv/wifi/home-01.pcapdump.
What is the purpose of displaying the essid and bssid again after selecting the network as well as the amount of potential target (which seems incorrect in the first output considering there are at least 675 networks)?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1962,2018-09-22T23:48:22Z,,2021-08-23T03:07:51Z,OPEN,False,23,5,1,https://github.com/ChrisLundquist,print a helpful breadcrumb when we print the chooser,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1962,https://github.com/ChrisLundquist,4,https://github.com/aircrack-ng/aircrack-ng/pull/1962#issuecomment-423786156,"This makes it easier for users to take the fast path / single pass
# When I don't know what networks there are in a pcap
$ ./src/aircrack-ng /srv/wifi/home-01.pcapdump
# ...
Index number of target network ? 675
Use ./src/aircrack-ng -b F8:1D:0F:01:88:08 to load this target faster
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).

# When I know the target
 $ ./src/aircrack-ng  /srv/wifi/home-01.pcapdump -b F8:1D:0F:01:88:08
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).","What is the purpose of displaying the essid and bssid again after selecting the network

Feedback for the user in case they misread the number, or so they could -e or -b .

amount of potential target (which seems incorrect in the first output considering there are at least 675 networks)?

We don't have to print that, but it is the number of networks that matched BSSID or ESSID (for multi target support)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1962,2018-09-22T23:48:22Z,,2021-08-23T03:07:51Z,OPEN,False,23,5,1,https://github.com/ChrisLundquist,print a helpful breadcrumb when we print the chooser,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/1962,https://github.com/aircrack-ng,5,https://github.com/aircrack-ng/aircrack-ng/pull/1962#issuecomment-423788574,"This makes it easier for users to take the fast path / single pass
# When I don't know what networks there are in a pcap
$ ./src/aircrack-ng /srv/wifi/home-01.pcapdump
# ...
Index number of target network ? 675
Use ./src/aircrack-ng -b F8:1D:0F:01:88:08 to load this target faster
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).

# When I know the target
 $ ./src/aircrack-ng  /srv/wifi/home-01.pcapdump -b F8:1D:0F:01:88:08
Opening /srv/wifi/home-01.pcapdump
Read 11246612 packets.

1 potential targets

essid: ""<redacted>"" bssid: ""F8:1D:0F:01:88:08""
Please specify a dictionary (option -w).","Let's remove the ESSID/BSSID printout.
For potential target, just add a warning if there is more than 1 BSSID that match the ESSID provided (it's up to you if you want to provide the list of BSSID)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1963,2018-09-23T18:20:18Z,2018-09-25T17:20:56Z,2018-09-25T17:20:56Z,MERGED,True,77,4,6,https://github.com/ChrisLundquist,add test for hccapx and fix bad c_avl_destoy in this case,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1963,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1963,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1963,2018-09-23T18:20:18Z,2018-09-25T17:20:56Z,2018-09-25T17:20:56Z,MERGED,True,77,4,6,https://github.com/ChrisLundquist,add test for hccapx and fix bad c_avl_destoy in this case,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1963,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1963#issuecomment-423837051,,Coverage increased (+1.5%) to 40.073% when pulling 6e83593 on ChrisLundquist:clundquist/hccpx-test into 6901a17 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1963,2018-09-23T18:20:18Z,2018-09-25T17:20:56Z,2018-09-25T17:20:56Z,MERGED,True,77,4,6,https://github.com/ChrisLundquist,add test for hccapx and fix bad c_avl_destoy in this case,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1963,https://github.com/ChrisLundquist,3,https://github.com/aircrack-ng/aircrack-ng/pull/1963#issuecomment-423837477,,"The command ""./build/travis-format.sh OpenSSL ""Building with OpenSSL..."" ./build/openssl.sh"" exited with 1.
0.13s$ ./build/travis-format.sh Dist ""Creating a dist tarball and then building from it..."" ./build/dist_check.sh
Dist
\e[0K\e[33;1mCreating a dist tarball and then building from it...\e[0m
0.08s+'[' osx == osx ']'
+exit 0

I'm missing something here for Travis. It looks like parts have been disabled for osx.
I don't see how exit 0 returns exist code 1
+exit 0 -> exited with 1.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1963,2018-09-23T18:20:18Z,2018-09-25T17:20:56Z,2018-09-25T17:20:56Z,MERGED,True,77,4,6,https://github.com/ChrisLundquist,add test for hccapx and fix bad c_avl_destoy in this case,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1963,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/1963#issuecomment-423838424,,The way it is displayed is misleading and it's the above one you have to look at. It failed test-aircrack-ng-0001.sh,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1963,2018-09-23T18:20:18Z,2018-09-25T17:20:56Z,2018-09-25T17:20:56Z,MERGED,True,77,4,6,https://github.com/ChrisLundquist,add test for hccapx and fix bad c_avl_destoy in this case,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1963,https://github.com/aircrack-ng,5,https://github.com/aircrack-ng/aircrack-ng/pull/1963#issuecomment-423855336,,There is a typo in the file extension. Could you also rename it to StayAlfred.hccapx and remove the commented out line in the test?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1963,2018-09-23T18:20:18Z,2018-09-25T17:20:56Z,2018-09-25T17:20:56Z,MERGED,True,77,4,6,https://github.com/ChrisLundquist,add test for hccapx and fix bad c_avl_destoy in this case,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1963,https://github.com/ChrisLundquist,6,https://github.com/aircrack-ng/aircrack-ng/pull/1963#issuecomment-424171756,,"Looks like the travis ci tests got re-run and passed?

Could you also rename it to StayAlfred.hccapx and remove the commented out line in the test?

done!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1963,2018-09-23T18:20:18Z,2018-09-25T17:20:56Z,2018-09-25T17:20:56Z,MERGED,True,77,4,6,https://github.com/ChrisLundquist,add test for hccapx and fix bad c_avl_destoy in this case,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/1963,https://github.com/aircrack-ng,7,https://github.com/aircrack-ng/aircrack-ng/pull/1963#issuecomment-424192679,,"Correct, testing it multiple times outside travis was successful, so probably a fluke",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1964,2018-09-24T19:50:48Z,2018-09-26T14:47:44Z,2018-09-26T14:49:25Z,CLOSED,False,504,14,3,https://github.com/emente,"comprehensive json-output, record rx-power per interface",6,[],https://github.com/aircrack-ng/aircrack-ng/pull/1964,https://github.com/emente,1,https://github.com/aircrack-ng/aircrack-ng/pull/1964,"did a patch that adds very comprehensible json output (that dumps received power per interface, too) for some experiments i currently do. maybe you will find it useful.
changes:
-added dump_write_json() plus supporting glue code
-json also writes rx powers per interfaces, had to add some glue code too (like interface name array)
-also dump non-associated info into json
-changed unknown and unassociated strings to something more unique (some clown here is actually using those)
-json-export obeys --berlin (another clown here is pseudo-randomizing macs)
-powers[] array, pkt_cnt, manufacturer now exists in all ap,st,na structs
-upped MAX_CARDS and increased ring buffers slightly
missing:
-reset powers[] arrays after channel wrap around (eg, if scanner moves)","did a patch that adds very comprehensible json output (that dumps received power per interface, too) for some experiments i currently do. maybe you will find it useful.
changes:
-added dump_write_json() plus supporting glue code
-json also writes rx powers per interfaces, had to add some glue code too (like interface name array)
-also dump non-associated info into json
-changed unknown and unassociated strings to something more unique (some clown here is actually using those)
-json-export obeys --berlin (another clown here is pseudo-randomizing macs)
-powers[] array, pkt_cnt, manufacturer now exists in all ap,st,na structs
-upped MAX_CARDS and increased ring buffers slightly
missing:
-reset powers[] arrays after channel wrap around (eg, if scanner moves)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1964,2018-09-24T19:50:48Z,2018-09-26T14:47:44Z,2018-09-26T14:49:25Z,CLOSED,False,504,14,3,https://github.com/emente,"comprehensive json-output, record rx-power per interface",6,[],https://github.com/aircrack-ng/aircrack-ng/pull/1964,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1964#issuecomment-424105799,"did a patch that adds very comprehensible json output (that dumps received power per interface, too) for some experiments i currently do. maybe you will find it useful.
changes:
-added dump_write_json() plus supporting glue code
-json also writes rx powers per interfaces, had to add some glue code too (like interface name array)
-also dump non-associated info into json
-changed unknown and unassociated strings to something more unique (some clown here is actually using those)
-json-export obeys --berlin (another clown here is pseudo-randomizing macs)
-powers[] array, pkt_cnt, manufacturer now exists in all ap,st,na structs
-upped MAX_CARDS and increased ring buffers slightly
missing:
-reset powers[] arrays after channel wrap around (eg, if scanner moves)",Coverage decreased (-0.1%) to 38.45% when pulling 0516fe2 on emente:master into 6901a17 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1964,2018-09-24T19:50:48Z,2018-09-26T14:47:44Z,2018-09-26T14:49:25Z,CLOSED,False,504,14,3,https://github.com/emente,"comprehensive json-output, record rx-power per interface",6,[],https://github.com/aircrack-ng/aircrack-ng/pull/1964,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/1964#issuecomment-424130815,"did a patch that adds very comprehensible json output (that dumps received power per interface, too) for some experiments i currently do. maybe you will find it useful.
changes:
-added dump_write_json() plus supporting glue code
-json also writes rx powers per interfaces, had to add some glue code too (like interface name array)
-also dump non-associated info into json
-changed unknown and unassociated strings to something more unique (some clown here is actually using those)
-json-export obeys --berlin (another clown here is pseudo-randomizing macs)
-powers[] array, pkt_cnt, manufacturer now exists in all ap,st,na structs
-upped MAX_CARDS and increased ring buffers slightly
missing:
-reset powers[] arrays after channel wrap around (eg, if scanner moves)","A few important notes:

Please don't change the CSV format, it will break existing tools
If there are issues to fix, open a separate PR
--berlin option is a display option, so it doesn't affect output files, unless the output format is about providing updates

Initial review:

Could you use comments instead of long strings of /?
Format (--output-format) is missing from the help screen, parsing and the man page
While JSON is valid, there are some weird values in the powers item when using a single adapter (which is supposed to represent the adapter name)
GPS coordinates are not handled in the JSON",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1964,2018-09-24T19:50:48Z,2018-09-26T14:47:44Z,2018-09-26T14:49:25Z,CLOSED,False,504,14,3,https://github.com/emente,"comprehensive json-output, record rx-power per interface",6,[],https://github.com/aircrack-ng/aircrack-ng/pull/1964,https://github.com/emente,4,https://github.com/aircrack-ng/aircrack-ng/pull/1964#issuecomment-424744600,"did a patch that adds very comprehensible json output (that dumps received power per interface, too) for some experiments i currently do. maybe you will find it useful.
changes:
-added dump_write_json() plus supporting glue code
-json also writes rx powers per interfaces, had to add some glue code too (like interface name array)
-also dump non-associated info into json
-changed unknown and unassociated strings to something more unique (some clown here is actually using those)
-json-export obeys --berlin (another clown here is pseudo-randomizing macs)
-powers[] array, pkt_cnt, manufacturer now exists in all ap,st,na structs
-upped MAX_CARDS and increased ring buffers slightly
missing:
-reset powers[] arrays after channel wrap around (eg, if scanner moves)",no time to review the collisions the reformatting in the master caused,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1966,2018-10-01T03:20:30Z,2018-10-02T16:36:54Z,2018-10-02T16:36:54Z,MERGED,True,5,5,3,https://github.com/samueloph,fix spelling errors detected on Debian,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1966,https://github.com/samueloph,1,https://github.com/aircrack-ng/aircrack-ng/pull/1966,"Some typos detected while packaging 1.4 for Debian.
Thanks for your attention.","Some typos detected while packaging 1.4 for Debian.
Thanks for your attention.",True,{'THUMBS_UP': ['https://github.com/ChrisLundquist']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1966,2018-10-01T03:20:30Z,2018-10-02T16:36:54Z,2018-10-02T16:36:54Z,MERGED,True,5,5,3,https://github.com/samueloph,fix spelling errors detected on Debian,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1966,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1966#issuecomment-425780596,"Some typos detected while packaging 1.4 for Debian.
Thanks for your attention.",Coverage increased (+0.04%) to 40.234% when pulling 89f407a on Debian:master into 320b6db on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1970,2018-10-06T22:42:31Z,2018-10-10T17:41:34Z,2018-10-13T21:20:33Z,MERGED,True,68,0,2,https://github.com/aircrack-ng,Issue templates - Bug report and feature request,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1970,https://github.com/aircrack-ng,1,https://github.com/aircrack-ng/aircrack-ng/pull/1970,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1970,2018-10-06T22:42:31Z,2018-10-10T17:41:34Z,2018-10-13T21:20:33Z,MERGED,True,68,0,2,https://github.com/aircrack-ng,Issue templates - Bug report and feature request,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1970,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1970#issuecomment-427612209,,Coverage increased (+0.08%) to 40.224% when pulling 7fb37c8 on issue-templates into 22bfa74 on master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1980,2018-10-20T03:10:26Z,2018-12-01T19:02:10Z,2018-12-01T19:02:11Z,CLOSED,False,316,203,2,https://github.com/nathanh2011,[airodump-ng] Revamped the GPS logging functionality,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1980,https://github.com/nathanh2011,1,https://github.com/aircrack-ng/aircrack-ng/pull/1980,"This is my first contribution so please be gentle.
As a bit of background I have been using Aircrack (airodump specifically) for many years for WIFI survey and mapping. I have made the following changes several times over the years but thought I would offer it to the main branch to save me having to add it after every update and if other people can get use from it. Essentially I found the GPS logging and default file formats for recording actual locations of WIFI APs to be lacking and incorrect (especially if you lose GPS signal). The majority of my work is dedicated to accurately map signal strengths of APs so I modified the Airodump program to give me the details and resolution I needed.
I hope someone else finds this helpful. Below are the actual changes.
Revamped the GPS logging functionality

Changed the GPS logging function to be a thread instead of a separate process for closer integration
Wrapped the GPSd socket reader in a while loop to reconnect if we lose connection to the service
Fixed the GPS to only provide a valid fix and reset if no valid fix is found in 5 seconds (prevents incorrect GPS data being used)

Added a new output format 'logcsv'

The logcsv will write a CSV line on each refresh to output the seen APs with basic info and the current GPS fix. This format is ideal for wardriving and gives a more accurate map of APs and signal strengths compared to the max/avg/min you get from the other formats.","This is my first contribution so please be gentle.
As a bit of background I have been using Aircrack (airodump specifically) for many years for WIFI survey and mapping. I have made the following changes several times over the years but thought I would offer it to the main branch to save me having to add it after every update and if other people can get use from it. Essentially I found the GPS logging and default file formats for recording actual locations of WIFI APs to be lacking and incorrect (especially if you lose GPS signal). The majority of my work is dedicated to accurately map signal strengths of APs so I modified the Airodump program to give me the details and resolution I needed.
I hope someone else finds this helpful. Below are the actual changes.
Revamped the GPS logging functionality

Changed the GPS logging function to be a thread instead of a separate process for closer integration
Wrapped the GPSd socket reader in a while loop to reconnect if we lose connection to the service
Fixed the GPS to only provide a valid fix and reset if no valid fix is found in 5 seconds (prevents incorrect GPS data being used)

Added a new output format 'logcsv'

The logcsv will write a CSV line on each refresh to output the seen APs with basic info and the current GPS fix. This format is ideal for wardriving and gives a more accurate map of APs and signal strengths compared to the max/avg/min you get from the other formats.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1980,2018-10-20T03:10:26Z,2018-12-01T19:02:10Z,2018-12-01T19:02:11Z,CLOSED,False,316,203,2,https://github.com/nathanh2011,[airodump-ng] Revamped the GPS logging functionality,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1980,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1980#issuecomment-431544348,"This is my first contribution so please be gentle.
As a bit of background I have been using Aircrack (airodump specifically) for many years for WIFI survey and mapping. I have made the following changes several times over the years but thought I would offer it to the main branch to save me having to add it after every update and if other people can get use from it. Essentially I found the GPS logging and default file formats for recording actual locations of WIFI APs to be lacking and incorrect (especially if you lose GPS signal). The majority of my work is dedicated to accurately map signal strengths of APs so I modified the Airodump program to give me the details and resolution I needed.
I hope someone else finds this helpful. Below are the actual changes.
Revamped the GPS logging functionality

Changed the GPS logging function to be a thread instead of a separate process for closer integration
Wrapped the GPSd socket reader in a while loop to reconnect if we lose connection to the service
Fixed the GPS to only provide a valid fix and reset if no valid fix is found in 5 seconds (prevents incorrect GPS data being used)

Added a new output format 'logcsv'

The logcsv will write a CSV line on each refresh to output the seen APs with basic info and the current GPS fix. This format is ideal for wardriving and gives a more accurate map of APs and signal strengths compared to the max/avg/min you get from the other formats.",Coverage decreased (-0.04%) to 40.178% when pulling beb6ba8 on nathanh2011:master into 155b9af on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1980,2018-10-20T03:10:26Z,2018-12-01T19:02:10Z,2018-12-01T19:02:11Z,CLOSED,False,316,203,2,https://github.com/nathanh2011,[airodump-ng] Revamped the GPS logging functionality,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1980,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1980#issuecomment-443449661,"This is my first contribution so please be gentle.
As a bit of background I have been using Aircrack (airodump specifically) for many years for WIFI survey and mapping. I have made the following changes several times over the years but thought I would offer it to the main branch to save me having to add it after every update and if other people can get use from it. Essentially I found the GPS logging and default file formats for recording actual locations of WIFI APs to be lacking and incorrect (especially if you lose GPS signal). The majority of my work is dedicated to accurately map signal strengths of APs so I modified the Airodump program to give me the details and resolution I needed.
I hope someone else finds this helpful. Below are the actual changes.
Revamped the GPS logging functionality

Changed the GPS logging function to be a thread instead of a separate process for closer integration
Wrapped the GPSd socket reader in a while loop to reconnect if we lose connection to the service
Fixed the GPS to only provide a valid fix and reset if no valid fix is found in 5 seconds (prevents incorrect GPS data being used)

Added a new output format 'logcsv'

The logcsv will write a CSV line on each refresh to output the seen APs with basic info and the current GPS fix. This format is ideal for wardriving and gives a more accurate map of APs and signal strengths compared to the max/avg/min you get from the other formats.","Merged, with slight changes. Thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1982,2018-10-25T05:45:18Z,2018-12-01T18:48:12Z,2018-12-01T18:48:12Z,MERGED,True,61,20,7,https://github.com/alonbl,ax_ext_have_static_lib.m4: allow overriding lib name,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1982,https://github.com/alonbl,1,https://github.com/aircrack-ng/aircrack-ng/pull/1982,"introduce AX_EXT_HAVE_STATIC_LIB_DETECT macro to detect the location of the
lib directories, allow to specify the lib component (lib, lib64) and use the
detected host instead of gcc explicit command.
the change requires converting the DEFAULT_STATIC_LIB_SEARCH_PATHS from m4
macro to environment variable.
Signed-off-by: Alon Bar-Lev alon.barlev@gmail.com","introduce AX_EXT_HAVE_STATIC_LIB_DETECT macro to detect the location of the
lib directories, allow to specify the lib component (lib, lib64) and use the
detected host instead of gcc explicit command.
the change requires converting the DEFAULT_STATIC_LIB_SEARCH_PATHS from m4
macro to environment variable.
Signed-off-by: Alon Bar-Lev alon.barlev@gmail.com",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1982,2018-10-25T05:45:18Z,2018-12-01T18:48:12Z,2018-12-01T18:48:12Z,MERGED,True,61,20,7,https://github.com/alonbl,ax_ext_have_static_lib.m4: allow overriding lib name,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1982,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1982#issuecomment-432923850,"introduce AX_EXT_HAVE_STATIC_LIB_DETECT macro to detect the location of the
lib directories, allow to specify the lib component (lib, lib64) and use the
detected host instead of gcc explicit command.
the change requires converting the DEFAULT_STATIC_LIB_SEARCH_PATHS from m4
macro to environment variable.
Signed-off-by: Alon Bar-Lev alon.barlev@gmail.com",Coverage decreased (-0.05%) to 40.471% when pulling ebb0c84 on alonbl:build into ef4a093 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1982,2018-10-25T05:45:18Z,2018-12-01T18:48:12Z,2018-12-01T18:48:12Z,MERGED,True,61,20,7,https://github.com/alonbl,ax_ext_have_static_lib.m4: allow overriding lib name,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1982,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1982#issuecomment-438028649,"introduce AX_EXT_HAVE_STATIC_LIB_DETECT macro to detect the location of the
lib directories, allow to specify the lib component (lib, lib64) and use the
detected host instead of gcc explicit command.
the change requires converting the DEFAULT_STATIC_LIB_SEARCH_PATHS from m4
macro to environment variable.
Signed-off-by: Alon Bar-Lev alon.barlev@gmail.com","Hello, thanks for the contribution!
Unfortunately, this PR breaks the existing packaging infrastructure; as all OSes in use, use the gcc reported output as the path component inside of /usr/lib.
This PR uses: /usr/lib/x86_64-pc-linux-gnu
But the OS uses: /usr/lib/x86_64-linux-gnu
Could this be modified to also (or only) use the gcc reported path?
Thanks,
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1982,2018-10-25T05:45:18Z,2018-12-01T18:48:12Z,2018-12-01T18:48:12Z,MERGED,True,61,20,7,https://github.com/alonbl,ax_ext_have_static_lib.m4: allow overriding lib name,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1982,https://github.com/alonbl,4,https://github.com/aircrack-ng/aircrack-ng/pull/1982#issuecomment-438165532,"introduce AX_EXT_HAVE_STATIC_LIB_DETECT macro to detect the location of the
lib directories, allow to specify the lib component (lib, lib64) and use the
detected host instead of gcc explicit command.
the change requires converting the DEFAULT_STATIC_LIB_SEARCH_PATHS from m4
macro to environment variable.
Signed-off-by: Alon Bar-Lev alon.barlev@gmail.com","Hi!
Interesting... I thought that gcc always has a matching $host.
I pushed another version of the patch which includes gcc specific code.
Thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1984,2018-11-01T22:06:48Z,2019-01-27T01:51:35Z,2019-01-27T01:51:35Z,CLOSED,False,49,0,3,https://github.com/ChrisLundquist,add clang-tidy as an optional linter and run lint via make check,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1984,https://github.com/ChrisLundquist,1,https://github.com/aircrack-ng/aircrack-ng/pull/1984,"@jbenden you may know a sexier way to implement this. I thought you may like it though!
Most of the lint is noise about unused stores/variables and strcat/strcpy
Some are about memory issues, null pointers, and garbage values.
Original inspiration:
https://stackoverflow.com/questions/29811970/adding-linting-to-autotools-based-build-system/53109982#53109982","@jbenden you may know a sexier way to implement this. I thought you may like it though!
Most of the lint is noise about unused stores/variables and strcat/strcpy
Some are about memory issues, null pointers, and garbage values.
Original inspiration:
https://stackoverflow.com/questions/29811970/adding-linting-to-autotools-based-build-system/53109982#53109982",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1984,2018-11-01T22:06:48Z,2019-01-27T01:51:35Z,2019-01-27T01:51:35Z,CLOSED,False,49,0,3,https://github.com/ChrisLundquist,add clang-tidy as an optional linter and run lint via make check,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1984,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1984#issuecomment-435208739,"@jbenden you may know a sexier way to implement this. I thought you may like it though!
Most of the lint is noise about unused stores/variables and strcat/strcpy
Some are about memory issues, null pointers, and garbage values.
Original inspiration:
https://stackoverflow.com/questions/29811970/adding-linting-to-autotools-based-build-system/53109982#53109982",Coverage decreased (-0.08%) to 40.129% when pulling ae5359a on ChrisLundquist:clundquist/clang-tidy-lint into 1de8fb7 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1984,2018-11-01T22:06:48Z,2019-01-27T01:51:35Z,2019-01-27T01:51:35Z,CLOSED,False,49,0,3,https://github.com/ChrisLundquist,add clang-tidy as an optional linter and run lint via make check,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1984,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1984#issuecomment-438030183,"@jbenden you may know a sexier way to implement this. I thought you may like it though!
Most of the lint is noise about unused stores/variables and strcat/strcpy
Some are about memory issues, null pointers, and garbage values.
Original inspiration:
https://stackoverflow.com/questions/29811970/adding-linting-to-autotools-based-build-system/53109982#53109982","Nice!
It currently (as through the CI) ran true on each entry, see:
make[3]: Entering directory '/buildbot/local-alpine-worker/aircrack-ng-alpine/build/src'
true aircrack-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee aircrack-ng.c.lint
true airdecap-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airdecap-ng.c.lint
true packetforge-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee packetforge-ng.c.lint
true aireplay-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee aireplay-ng.c.lint
true airodump-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airodump-ng.c.lint
true airserv-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airserv-ng.c.lint
true airtun-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airtun-ng.c.lint
true ivstools.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee ivstools.c.lint
true kstats.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee kstats.c.lint
true wesside-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee wesside-ng.c.lint
true easside-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee easside-ng.c.lint
true buddy-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee buddy-ng.c.lint
true besside-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee besside-ng.c.lint
true besside-ng-crawler.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee besside-ng-crawler.c.lint
true makeivs-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee makeivs-ng.c.lint
true airolib-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airolib-ng.c.lint
true airbase-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airbase-ng.c.lint
true airdecloak-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airdecloak-ng.c.lint
true tkiptun-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee tkiptun-ng.c.lint
true wpaclean.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee wpaclean.c.lint
true airventriloquist-ng.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee airventriloquist-ng.c.lint
true crypto.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee crypto.c.lint
true uniqueiv.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee uniqueiv.c.lint
true session.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee session.c.lint
true cowpatty.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee cowpatty.c.lint
true aircrack-ptw-lib.c -- -I. -I.. -I../src/include  -DPACKAGE_NAME=\""aircrack-ng\"" -DPACKAGE_TARNAME=\""aircrack-ng\"" -DPACKAGE_VERSION=\""1.4_rev-08efb68\"" -DPACKAGE_STRING=\""aircrack-ng\ 1.4_rev-08efb68\"" -DPACKAGE_BUGREPORT=\""https://forum.aircrack-ng.org\"" -DPACKAGE_URL=\""\"" -DPACKAGE=\""aircrack-ng\"" -DVERSION=\""1.4_rev-08efb68\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\"".libs/\"" -D_REVISION=\""1.4_rev-08efb68\"" -DHAVE_OPENSSL_CRYPTO_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_OPENSSL_CMAC_H=1 -DHAVE_HWLOC=1 -DHAVE_ZLIB=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -D_REENTRANT=1 -DCACHELINE_SIZE=64 -DINTEL_ASM=1 -DCACHELINE_SIZE=64 | tee aircrack-ptw-lib.c.lint
make[3]: Leaving directory '/buildbot/local-alpine-worker/aircrack-ng-alpine/build/src'

It might be nicer to use an AM_CONDITIONAL so that the whole block of lint code is skipped, unless clang-tidy is present on the machine.
If you're not up to this, I would be willing to add that in...
Thoughts, comments, and suggestions are always welcomed.
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1984,2018-11-01T22:06:48Z,2019-01-27T01:51:35Z,2019-01-27T01:51:35Z,CLOSED,False,49,0,3,https://github.com/ChrisLundquist,add clang-tidy as an optional linter and run lint via make check,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1984,https://github.com/jbenden,4,https://github.com/aircrack-ng/aircrack-ng/pull/1984#issuecomment-457881810,"@jbenden you may know a sexier way to implement this. I thought you may like it though!
Most of the lint is noise about unused stores/variables and strcat/strcpy
Some are about memory issues, null pointers, and garbage values.
Original inspiration:
https://stackoverflow.com/questions/29811970/adding-linting-to-autotools-based-build-system/53109982#53109982",Closing because we have a number of checks and balances in place.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1986,2018-11-07T01:00:35Z,2018-11-07T01:05:17Z,2018-11-07T01:05:17Z,CLOSED,False,1,1,1,https://github.com/XMB5,Change ti_rate from int to int32_t,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1986,https://github.com/XMB5,1,https://github.com/aircrack-ng/aircrack-ng/pull/1986,"sizeof(int) varies on different compilers with different platforms, causing the size of a tx_info struct to vary. Even though tx_info isn't used, it's size still matters, because airserv-ng uses the struct. If one version of aircrack is compiled with 16 bit ints, and it connects to airserv-ng compiled with 32 bit ints, writing packets breaks.","sizeof(int) varies on different compilers with different platforms, causing the size of a tx_info struct to vary. Even though tx_info isn't used, it's size still matters, because airserv-ng uses the struct. If one version of aircrack is compiled with 16 bit ints, and it connects to airserv-ng compiled with 32 bit ints, writing packets breaks.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1987,2018-11-07T01:13:46Z,2018-11-09T22:02:34Z,2018-11-09T22:02:34Z,MERGED,True,1,1,1,https://github.com/XMB5,Change ti_rate from unsigned int to uint32_t,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1987,https://github.com/XMB5,1,https://github.com/aircrack-ng/aircrack-ng/pull/1987,"sizeof(int) varies on different compilers with different platforms, causing the size of a tx_info struct to vary. Even though tx_info isn't used, it's size still matters, because airserv-ng uses the struct. If one version of aircrack is compiled with 16 bit ints, and it connects to airserv-ng compiled with 32 bit ints, writing packets breaks.","sizeof(int) varies on different compilers with different platforms, causing the size of a tx_info struct to vary. Even though tx_info isn't used, it's size still matters, because airserv-ng uses the struct. If one version of aircrack is compiled with 16 bit ints, and it connects to airserv-ng compiled with 32 bit ints, writing packets breaks.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1987,2018-11-07T01:13:46Z,2018-11-09T22:02:34Z,2018-11-09T22:02:34Z,MERGED,True,1,1,1,https://github.com/XMB5,Change ti_rate from unsigned int to uint32_t,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1987,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1987#issuecomment-436470146,"sizeof(int) varies on different compilers with different platforms, causing the size of a tx_info struct to vary. Even though tx_info isn't used, it's size still matters, because airserv-ng uses the struct. If one version of aircrack is compiled with 16 bit ints, and it connects to airserv-ng compiled with 32 bit ints, writing packets breaks.",Coverage decreased (-0.04%) to 40.168% when pulling b4c5165 on XMB5:master into 1de8fb7 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1988,2018-11-07T12:16:18Z,2018-12-01T19:07:07Z,2018-12-01T19:07:07Z,MERGED,True,86,175,2,https://github.com/maroviher,Airodump: fix AP selection slip issue.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1988,https://github.com/maroviher,1,https://github.com/aircrack-ng/aircrack-ng/pull/1988,"When you select an AP by pressing TAB and then UP/DOWN arrows,
your selection will slip as soon as new AP will be found and inserted to the list (above your selected AP).
This commit fixes that issue, you will never loose a selected AP.","When you select an AP by pressing TAB and then UP/DOWN arrows,
your selection will slip as soon as new AP will be found and inserted to the list (above your selected AP).
This commit fixes that issue, you will never loose a selected AP.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1988,2018-11-07T12:16:18Z,2018-12-01T19:07:07Z,2018-12-01T19:07:07Z,MERGED,True,86,175,2,https://github.com/maroviher,Airodump: fix AP selection slip issue.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1988,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1988#issuecomment-436607267,"When you select an AP by pressing TAB and then UP/DOWN arrows,
your selection will slip as soon as new AP will be found and inserted to the list (above your selected AP).
This commit fixes that issue, you will never loose a selected AP.",Coverage decreased (-0.08%) to 40.129% when pulling e4d260d on maroviher:master into 1de8fb7 on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/neheb,1,https://github.com/aircrack-ng/aircrack-ng/pull/1991,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1991#issuecomment-439546916,,Coverage increased (+0.1%) to 41.54% when pulling 291b248 on neheb:n into 94d381b on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/neheb,3,https://github.com/aircrack-ng/aircrack-ng/pull/1991#issuecomment-439554780,,One benefit is that the dependency on gnu99 can now be removed.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/1991#issuecomment-440774306,,It currently breaks compilation,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/neheb,5,https://github.com/aircrack-ng/aircrack-ng/pull/1991#issuecomment-440786104,,Yeah the second commit is faulty. I'll remove it soon.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/aircrack-ng,6,https://github.com/aircrack-ng/aircrack-ng/pull/1991#issuecomment-440847737,,Still breaks on Travis and AppVeyor,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/neheb,7,https://github.com/aircrack-ng/aircrack-ng/pull/1991#issuecomment-440867095,,Yeah I'll fix it. I accidentally added unrelated stuff.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1991,2018-11-16T22:10:16Z,2018-12-10T19:34:22Z,2018-12-10T19:34:22Z,MERGED,True,49,46,6,https://github.com/neheb,Fix a few warnings,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/1991,https://github.com/neheb,8,https://github.com/aircrack-ng/aircrack-ng/pull/1991#issuecomment-445496748,,Rebased. Single buildbot failure seems to be due to some license thing.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1992,2018-11-24T22:40:54Z,2018-11-27T23:59:00Z,2018-11-28T00:04:34Z,CLOSED,False,1542,536,23,https://github.com/jbenden,aircrack-ng: Refactored wordlist producer/consumer queue,13,[],https://github.com/aircrack-ng/aircrack-ng/pull/1992,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/1992,"This refactoring improves the overall operation of the wordlist producer/consumer queueing, during WPA  cracking.","This refactoring improves the overall operation of the wordlist producer/consumer queueing, during WPA  cracking.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1992,2018-11-24T22:40:54Z,2018-11-27T23:59:00Z,2018-11-28T00:04:34Z,CLOSED,False,1542,536,23,https://github.com/jbenden,aircrack-ng: Refactored wordlist producer/consumer queue,13,[],https://github.com/aircrack-ng/aircrack-ng/pull/1992,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/1992#issuecomment-441401850,"This refactoring improves the overall operation of the wordlist producer/consumer queueing, during WPA  cracking.",Coverage increased (+0.7%) to 41.237% when pulling 2186972 on jbenden/fix-cqueue into 2a26f3c on master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,1992,2018-11-24T22:40:54Z,2018-11-27T23:59:00Z,2018-11-28T00:04:34Z,CLOSED,False,1542,536,23,https://github.com/jbenden,aircrack-ng: Refactored wordlist producer/consumer queue,13,[],https://github.com/aircrack-ng/aircrack-ng/pull/1992,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/1992#issuecomment-442264963,"This refactoring improves the overall operation of the wordlist producer/consumer queueing, during WPA  cracking.",Merged.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2000,2018-12-14T10:52:49Z,2018-12-21T21:56:59Z,2018-12-21T21:56:59Z,CLOSED,False,63,2,1,https://github.com/RaulCalvoLaorden,APs and clients in  'logcsv',2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2000,https://github.com/RaulCalvoLaorden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2000,Modification of the new output format 'logcsv' to log APs and clients.,Modification of the new output format 'logcsv' to log APs and clients.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2000,2018-12-14T10:52:49Z,2018-12-21T21:56:59Z,2018-12-21T21:56:59Z,CLOSED,False,63,2,1,https://github.com/RaulCalvoLaorden,APs and clients in  'logcsv',2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2000,https://github.com/coveralls,2,https://github.com/aircrack-ng/aircrack-ng/pull/2000#issuecomment-447292524,Modification of the new output format 'logcsv' to log APs and clients.,Coverage decreased (-0.04%) to 16.026% when pulling 51ed2cc on T1GR3S:master into 6fcdf8f on aircrack-ng:master.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2000,2018-12-14T10:52:49Z,2018-12-21T21:56:59Z,2018-12-21T21:56:59Z,CLOSED,False,63,2,1,https://github.com/RaulCalvoLaorden,APs and clients in  'logcsv',2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2000,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/2000#issuecomment-447394247,Modification of the new output format 'logcsv' to log APs and clients.,"Like this, if anybody implements a tool to parse the current version, this will break it. Could you put the type at the end of it, so breakage wouldn't happen (if the parser splits on comma and uses position).
Looking at the other items, each of them has its first character uppercase, so could you do the same for Type",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2000,2018-12-14T10:52:49Z,2018-12-21T21:56:59Z,2018-12-21T21:56:59Z,CLOSED,False,63,2,1,https://github.com/RaulCalvoLaorden,APs and clients in  'logcsv',2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2000,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/2000#issuecomment-449508180,Modification of the new output format 'logcsv' to log APs and clients.,Thanks,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2009,2018-12-31T21:50:37Z,2019-01-04T01:06:52Z,2019-01-04T01:07:03Z,MERGED,True,3938,3225,52,https://github.com/jbenden,Initial round of code cleaning,12,[],https://github.com/aircrack-ng/aircrack-ng/pull/2009,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2009,"General cleanup, normalization, and the addition of ""design-by-contract"" checks of: REQUIRE, ENSURE, INVARIANT, and ALLEGE.","General cleanup, normalization, and the addition of ""design-by-contract"" checks of: REQUIRE, ENSURE, INVARIANT, and ALLEGE.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2010,2019-01-05T01:56:47Z,2019-03-07T15:48:06Z,2021-07-24T21:11:57Z,MERGED,True,8790,9484,96,https://github.com/jbenden,De-duplicate functions; with other minor tweaks,191,[],https://github.com/aircrack-ng/aircrack-ng/pull/2010,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2010,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2010,2019-01-05T01:56:47Z,2019-03-07T15:48:06Z,2021-07-24T21:11:57Z,MERGED,True,8790,9484,96,https://github.com/jbenden,De-duplicate functions; with other minor tweaks,191,[],https://github.com/aircrack-ng/aircrack-ng/pull/2010,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2010#issuecomment-455828252,,Re #1958; we would now output the timestamps (as is) from the input pcap files.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2015,2019-01-17T21:14:20Z,2019-01-17T21:48:15Z,2019-01-17T21:48:15Z,MERGED,True,1,1,1,https://github.com/kylesferrazza,Aircrack-ng: fix typo in manpage,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2015,https://github.com/kylesferrazza,1,https://github.com/aircrack-ng/aircrack-ng/pull/2015,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2016,2019-01-21T21:51:41Z,2019-01-22T16:41:18Z,2019-01-23T01:34:38Z,MERGED,True,51,72,6,https://github.com/alonbl,Build cleanups,4,"['bug', 'enhancement', '#general']",https://github.com/aircrack-ng/aircrack-ng/pull/2016,https://github.com/alonbl,1,https://github.com/aircrack-ng/aircrack-ng/pull/2016,"Introduce some build cleanups.

Fix tests to work under make distcheck
Remove libtool archives from sources as incorrect and blocks make dist
Use libtool archives instead of explicit flags to follow libtool best practice

After this set the make dist and make distcheck finally works, and you are able to publish a distribution tarball to help upstream to avoid having to generate the build with possibility incompatible environment.","Introduce some build cleanups.

Fix tests to work under make distcheck
Remove libtool archives from sources as incorrect and blocks make dist
Use libtool archives instead of explicit flags to follow libtool best practice

After this set the make dist and make distcheck finally works, and you are able to publish a distribution tarball to help upstream to avoid having to generate the build with possibility incompatible environment.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2016,2019-01-21T21:51:41Z,2019-01-22T16:41:18Z,2019-01-23T01:34:38Z,MERGED,True,51,72,6,https://github.com/alonbl,Build cleanups,4,"['bug', 'enhancement', '#general']",https://github.com/aircrack-ng/aircrack-ng/pull/2016,https://github.com/alonbl,2,https://github.com/aircrack-ng/aircrack-ng/pull/2016#issuecomment-456473484,"Introduce some build cleanups.

Fix tests to work under make distcheck
Remove libtool archives from sources as incorrect and blocks make dist
Use libtool archives instead of explicit flags to follow libtool best practice

After this set the make dist and make distcheck finally works, and you are able to publish a distribution tarball to help upstream to avoid having to generate the build with possibility incompatible environment.",@jbenden : thanks! will you add the make dist tarball to next release as an artifact?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2016,2019-01-21T21:51:41Z,2019-01-22T16:41:18Z,2019-01-23T01:34:38Z,MERGED,True,51,72,6,https://github.com/alonbl,Build cleanups,4,"['bug', 'enhancement', '#general']",https://github.com/aircrack-ng/aircrack-ng/pull/2016,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2016#issuecomment-456537566,"Introduce some build cleanups.

Fix tests to work under make distcheck
Remove libtool archives from sources as incorrect and blocks make dist
Use libtool archives instead of explicit flags to follow libtool best practice

After this set the make dist and make distcheck finally works, and you are able to publish a distribution tarball to help upstream to avoid having to generate the build with possibility incompatible environment.","I believe there are problems with doing so, in a portable manner, across all supported platforms. I had tried long ago and it wasn't working.
If you could test this across at least two platforms, I'd reconsider. Or if you strongly believe it would work, I'll schedule some time to test myself.
Thanks,
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2016,2019-01-21T21:51:41Z,2019-01-22T16:41:18Z,2019-01-23T01:34:38Z,MERGED,True,51,72,6,https://github.com/alonbl,Build cleanups,4,"['bug', 'enhancement', '#general']",https://github.com/aircrack-ng/aircrack-ng/pull/2016,https://github.com/alonbl,4,https://github.com/aircrack-ng/aircrack-ng/pull/2016#issuecomment-456542309,"Introduce some build cleanups.

Fix tests to work under make distcheck
Remove libtool archives from sources as incorrect and blocks make dist
Use libtool archives instead of explicit flags to follow libtool best practice

After this set the make dist and make distcheck finally works, and you are able to publish a distribution tarball to help upstream to avoid having to generate the build with possibility incompatible environment.","Based on my experience it is the opposite :)
The package is self contained and in worse case scenario autoreconf should be run again.
I am the Gentoo maintainer of this package, using the distribution tarball will make our lives much easier, Once you release, I will modify builds to use the distribution package and help you to resolve issues if happens.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2024,2019-02-24T19:44:27Z,2019-03-15T20:31:34Z,2021-07-24T21:12:38Z,CLOSED,False,1040,1267,56,https://github.com/jbenden,autotools: Convert to non-recursive Make.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2024,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2024,"Converts the majority of the build to a non-recursive make syntax.
Also fixes code coverage and Valgrind targets.
Currently, CentOS 7 fails to build. This is due to it not supporting Automake 1.14, which was released in 2013.","Converts the majority of the build to a non-recursive make syntax.
Also fixes code coverage and Valgrind targets.
Currently, CentOS 7 fails to build. This is due to it not supporting Automake 1.14, which was released in 2013.",True,{'THUMBS_UP': ['https://github.com/talicz']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2025,2019-02-25T16:49:17Z,2019-03-15T20:31:28Z,2021-07-24T21:12:06Z,CLOSED,False,665,343,90,https://github.com/jbenden,autotools: Switch to the use of autoheader.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2025,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2025,"Instead of passing defines via compiler switches, use config.h.","Instead of passing defines via compiler switches, use config.h.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2027,2019-02-27T21:24:09Z,2019-03-15T20:31:21Z,2021-07-24T21:12:04Z,CLOSED,False,165,126,36,https://github.com/jbenden,Condense version information to a singular location,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2027,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2027,"This patches the whole system to use a singular location for the version. It is then Autotools which propagates the versioning information throughout the sources and build. This includes handling of the library (SO/DLL) versioning, as well.","This patches the whole system to use a singular location for the version. It is then Autotools which propagates the versioning information throughout the sources and build. This includes handling of the library (SO/DLL) versioning, as well.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2030,2019-03-07T22:16:09Z,2019-03-18T00:28:02Z,2019-03-18T00:28:02Z,CLOSED,False,4,1,1,https://github.com/buzzdeee,"Fix wpaclean to write all, and not only the last captured handshake to the output file.",1,"['enhancement', '#wpaclean']",https://github.com/aircrack-ng/aircrack-ng/pull/2030,https://github.com/buzzdeee,1,https://github.com/aircrack-ng/aircrack-ng/pull/2030,"In save_network(), open_pcap() is called for each detected network
in the input capture files. open_pcap() truncates the existing
file, and starts from zero with each network it finds.
So only call open_pcap() on the first network/handshake it detects,
so that subsequtent handshakes are added to the output capture file.","In save_network(), open_pcap() is called for each detected network
in the input capture files. open_pcap() truncates the existing
file, and starts from zero with each network it finds.
So only call open_pcap() on the first network/handshake it detects,
so that subsequtent handshakes are added to the output capture file.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2030,2019-03-07T22:16:09Z,2019-03-18T00:28:02Z,2019-03-18T00:28:02Z,CLOSED,False,4,1,1,https://github.com/buzzdeee,"Fix wpaclean to write all, and not only the last captured handshake to the output file.",1,"['enhancement', '#wpaclean']",https://github.com/aircrack-ng/aircrack-ng/pull/2030,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2030#issuecomment-473731655,"In save_network(), open_pcap() is called for each detected network
in the input capture files. open_pcap() truncates the existing
file, and starts from zero with each network it finds.
So only call open_pcap() on the first network/handshake it detects,
so that subsequtent handshakes are added to the output capture file.","This pull request has been rebased via git hub pull rebase. Original pull request HEAD was e359963, new (rebased) HEAD is 2bf1dcb",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2031,2019-03-15T14:40:32Z,2019-03-15T18:08:55Z,2019-03-15T18:08:55Z,MERGED,True,8,8,5,https://github.com/laffer1,Add MidnightBSD support to aircrack-ng,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2031,https://github.com/laffer1,1,https://github.com/aircrack-ng/aircrack-ng/pull/2031,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2032,2019-03-15T20:30:21Z,2019-03-17T00:22:28Z,2021-07-24T21:11:54Z,MERGED,True,2988,3266,272,https://github.com/jbenden,"File-system layout reorganization, with autotools improvements",79,[],https://github.com/aircrack-ng/aircrack-ng/pull/2032,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2032,"This sweeping patch organizes all files within the project, while also switching to Automake 1.14+ non-recursive make and improved version detail handling.

Versioning is now consistent, due to now being located in a single location/file.
Non-recursive Make; supporting further parallel build potential.
Use of autoheader
Fixed Valgrind targets
Fixed code coverage targets
Third-parties would now be able to utilize our libraries, as there are now public headers available.
Misc. improvements","This sweeping patch organizes all files within the project, while also switching to Automake 1.14+ non-recursive make and improved version detail handling.

Versioning is now consistent, due to now being located in a single location/file.
Non-recursive Make; supporting further parallel build potential.
Use of autoheader
Fixed Valgrind targets
Fixed code coverage targets
Third-parties would now be able to utilize our libraries, as there are now public headers available.
Misc. improvements",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2034,2019-03-19T23:09:22Z,2019-03-25T18:25:02Z,2019-03-25T19:34:58Z,MERGED,True,150,72,34,https://github.com/jbenden,Use upstream radiotap library; as sub-tree,67,[],https://github.com/aircrack-ng/aircrack-ng/pull/2034,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2034,"This uses a sub-tree merge to bring in the dependency, and allows
for easier integration of future radiotap project updates.","This uses a sub-tree merge to bring in the dependency, and allows
for easier integration of future radiotap project updates.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/rofl0r,1,https://github.com/aircrack-ng/aircrack-ng/pull/2039,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).","if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).",True,{'THUMBS_UP': ['https://github.com/DJDan']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/rofl0r,2,https://github.com/aircrack-ng/aircrack-ng/pull/2039#issuecomment-483890262,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).","the appveyor build failure seems to be due to a wrong cygwin version isntalled:
      1 [main] bash (612) C:\cygwin\bin\bash.exe: *** fatal error - cygheap base mismatch detected - 0x13D2410/0xF22410.
This problem is probably due to using incompatible versions of the cygwin DLL.
Search for cygwin1.dll using the Windows Start->Find/Search facility",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2039#issuecomment-483893393,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).","I've restarted the failed sub-builds.
AppVeyor is notoriously flakey....",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/rofl0r,4,https://github.com/aircrack-ng/aircrack-ng/pull/2039#issuecomment-483908024,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).","hmm, now the build and the tests passed, yet it is still listed as fail...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/rofl0r,5,https://github.com/aircrack-ng/aircrack-ng/pull/2039#issuecomment-485007028,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).","so everything seems fine, right ? as the other spot in the file already uses -lssl -lcrypto, merging this should be a no-brainer",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/rofl0r,6,https://github.com/aircrack-ng/aircrack-ng/pull/2039#issuecomment-485290941,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).",ping @jbenden,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/rofl0r,7,https://github.com/aircrack-ng/aircrack-ng/pull/2039#issuecomment-485594080,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).",ping @aircrack-ng,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2039,2019-04-16T23:33:48Z,2019-04-23T16:41:11Z,2019-04-23T16:41:11Z,MERGED,True,1,1,1,https://github.com/rofl0r,autoconf: fix openssl static library order,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2039,https://github.com/DJDan,8,https://github.com/aircrack-ng/aircrack-ng/pull/2039#issuecomment-485772390,"if installed only as static libs, the order of the link command line matters,
and -lssl requires symbols which -lcrypto provides.
the second spot in this file had it right.
(it doesn't matter with dynamic libs due to DT_DYN tab containing all
required library names per shared object).","@jbenden @aircrack-ng
Since this commit have already been successfully passed can this please get merged back to the main aircrack-ng source code? That way I dont need to keep manually editing the file to cross compile. Thanks.",True,{'THUMBS_UP': ['https://github.com/rofl0r']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2046,2019-05-03T04:09:40Z,2019-05-06T09:37:10Z,2019-05-06T09:37:10Z,CLOSED,False,3,6,1,https://github.com/allentree,Fix timing jump from [08:38:36] to [09:39:18] within 40 seconds.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2046,https://github.com/allentree,1,https://github.com/aircrack-ng/aircrack-ng/pull/2046,"lrintf() function doesn't set its rounding direction,
resulting in 0.501 hour or so equal to 1 hour, not 0 hour.
E.g: [00:29:59] jumps to [01:00:01]","lrintf() function doesn't set its rounding direction,
resulting in 0.501 hour or so equal to 1 hour, not 0 hour.
E.g: [00:29:59] jumps to [01:00:01]",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2048,2019-05-06T09:36:47Z,2019-06-12T03:08:39Z,2019-06-12T03:08:39Z,CLOSED,False,3,6,1,https://github.com/allentree,Fix timing jump from [08:38:36] to [09:39:18] within 40 seconds.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2048,https://github.com/allentree,1,https://github.com/aircrack-ng/aircrack-ng/pull/2048,"Here is the log:
Apr 18 23:46:26 allen-virtual-machine aircrack-ng[4065]: [08:37:55] 4359832/98732991 keys tested (142.40 k/s) allen1
Apr 18 23:47:07 allen-virtual-machine aircrack-ng[4065]: [08:38:36] 4365840/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:47:47 allen-virtual-machine aircrack-ng[4065]: [09:39:18] 4371860/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:48:28 allen-virtual-machine aircrack-ng[4065]: [09:40:00] 4377876/98732991 keys tested (142.42 k/s) allen1
Apr 18 23:49:09 allen-virtual-machine aircrack-ng[4065]: [09:40:41] 4383884/98732991 keys tested (142.43 k/s) allen1


where is the error in the log?
Timing information printed by aircrack-ng is in the [::]. And, [08:38:36] is jumped to [09:39:18] in 40 seconds , with clock time from 23:47:47 to 23:47:07


what causes the error?
It is caused by lrintf() . lrintf() function doesn't set its rounding direction, resulting in 0.501 hour or so
equal to 1 hour, not 0 hour.  There’s no need of lrintf(), that will make the timing code easier, and it will be ok by use of casting data type from float to int.


how to reproduce the problem and to save time?
I change the current time by using 'date -s' shell command, instead of running aircrack-ng second by second.","Here is the log:
Apr 18 23:46:26 allen-virtual-machine aircrack-ng[4065]: [08:37:55] 4359832/98732991 keys tested (142.40 k/s) allen1
Apr 18 23:47:07 allen-virtual-machine aircrack-ng[4065]: [08:38:36] 4365840/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:47:47 allen-virtual-machine aircrack-ng[4065]: [09:39:18] 4371860/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:48:28 allen-virtual-machine aircrack-ng[4065]: [09:40:00] 4377876/98732991 keys tested (142.42 k/s) allen1
Apr 18 23:49:09 allen-virtual-machine aircrack-ng[4065]: [09:40:41] 4383884/98732991 keys tested (142.43 k/s) allen1


where is the error in the log?
Timing information printed by aircrack-ng is in the [::]. And, [08:38:36] is jumped to [09:39:18] in 40 seconds , with clock time from 23:47:47 to 23:47:07


what causes the error?
It is caused by lrintf() . lrintf() function doesn't set its rounding direction, resulting in 0.501 hour or so
equal to 1 hour, not 0 hour.  There’s no need of lrintf(), that will make the timing code easier, and it will be ok by use of casting data type from float to int.


how to reproduce the problem and to save time?
I change the current time by using 'date -s' shell command, instead of running aircrack-ng second by second.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2048,2019-05-06T09:36:47Z,2019-06-12T03:08:39Z,2019-06-12T03:08:39Z,CLOSED,False,3,6,1,https://github.com/allentree,Fix timing jump from [08:38:36] to [09:39:18] within 40 seconds.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2048,https://github.com/allentree,2,https://github.com/aircrack-ng/aircrack-ng/pull/2048#issuecomment-490137466,"Here is the log:
Apr 18 23:46:26 allen-virtual-machine aircrack-ng[4065]: [08:37:55] 4359832/98732991 keys tested (142.40 k/s) allen1
Apr 18 23:47:07 allen-virtual-machine aircrack-ng[4065]: [08:38:36] 4365840/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:47:47 allen-virtual-machine aircrack-ng[4065]: [09:39:18] 4371860/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:48:28 allen-virtual-machine aircrack-ng[4065]: [09:40:00] 4377876/98732991 keys tested (142.42 k/s) allen1
Apr 18 23:49:09 allen-virtual-machine aircrack-ng[4065]: [09:40:41] 4383884/98732991 keys tested (142.43 k/s) allen1


where is the error in the log?
Timing information printed by aircrack-ng is in the [::]. And, [08:38:36] is jumped to [09:39:18] in 40 seconds , with clock time from 23:47:47 to 23:47:07


what causes the error?
It is caused by lrintf() . lrintf() function doesn't set its rounding direction, resulting in 0.501 hour or so
equal to 1 hour, not 0 hour.  There’s no need of lrintf(), that will make the timing code easier, and it will be ok by use of casting data type from float to int.


how to reproduce the problem and to save time?
I change the current time by using 'date -s' shell command, instead of running aircrack-ng second by second.","Hello , aircrack-ng team,
""AppVeyor build failed"" --- It leaves the error state for days, without building any more.
Facing the build failed, I've no idea what causes it, and what should I do ?
Hello , aircrack-ng team,
May I have your suggestion that what to do with the build failed ?
thank you everyone.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2051,2019-05-24T15:20:52Z,2019-06-08T05:04:46Z,2019-06-08T05:04:46Z,CLOSED,False,7,2,1,https://github.com/kimocoder,Add support for the rtl8188eus driver stack,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2051,https://github.com/kimocoder,1,https://github.com/aircrack-ng/aircrack-ng/pull/2051,"Realtek base v5.3.9 with monitor mode & frame injection, supporting lots of cards.","Realtek base v5.3.9 with monitor mode & frame injection, supporting lots of cards.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2052,2019-05-24T15:23:32Z,2019-05-25T02:27:58Z,2019-05-25T02:36:14Z,CLOSED,False,3,0,1,https://github.com/kimocoder,Missing some support for rtl8188eus,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2052,https://github.com/kimocoder,1,https://github.com/aircrack-ng/aircrack-ng/pull/2052,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2052,2019-05-24T15:23:32Z,2019-05-25T02:27:58Z,2019-05-25T02:36:14Z,CLOSED,False,3,0,1,https://github.com/kimocoder,Missing some support for rtl8188eus,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2052,https://github.com/ZeroChaos-,2,https://github.com/aircrack-ng/aircrack-ng/pull/2052#issuecomment-495829149,,"why are you trying to redundantly set DRIVER to DRIVER?  this section of code is for normalizing output, and you didn't change anything...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2052,2019-05-24T15:23:32Z,2019-05-25T02:27:58Z,2019-05-25T02:36:14Z,CLOSED,False,3,0,1,https://github.com/kimocoder,Missing some support for rtl8188eus,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2052,https://github.com/kimocoder,3,https://github.com/aircrack-ng/aircrack-ng/pull/2052#issuecomment-495829719,,"Messed up lots of stuff this weekend, but the new rtl8812au v5.6.4 is great though!
Sorry for the hazzle. I'll add frame injection to your 8822B soon as a gest 🥇",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2055,2019-06-01T20:41:53Z,2019-06-04T02:29:46Z,2019-06-04T02:29:46Z,MERGED,True,8,6,1,https://github.com/CarterFendley,Prevents deprecated drivers from entering findFreeInterface function,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2055,https://github.com/CarterFendley,1,https://github.com/aircrack-ng/aircrack-ng/pull/2055,"findFreeInterface function uses the iw command to add new interfaces. Because iw supports only mac80211 drivers, unexpected behavior could happen when deprecated drivers are sent to this function.
The commit moves the check for deprecated drivers above the statement checking for interfaces with long names. As the startDeprecatedIface doesn't append ""mon"" to the end, the check of name length does not seem to be necessary for deprecated drivers.","findFreeInterface function uses the iw command to add new interfaces. Because iw supports only mac80211 drivers, unexpected behavior could happen when deprecated drivers are sent to this function.
The commit moves the check for deprecated drivers above the statement checking for interfaces with long names. As the startDeprecatedIface doesn't append ""mon"" to the end, the check of name length does not seem to be necessary for deprecated drivers.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2055,2019-06-01T20:41:53Z,2019-06-04T02:29:46Z,2019-06-04T02:29:46Z,MERGED,True,8,6,1,https://github.com/CarterFendley,Prevents deprecated drivers from entering findFreeInterface function,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2055,https://github.com/ZeroChaos-,2,https://github.com/aircrack-ng/aircrack-ng/pull/2055#issuecomment-498495197,"findFreeInterface function uses the iw command to add new interfaces. Because iw supports only mac80211 drivers, unexpected behavior could happen when deprecated drivers are sent to this function.
The commit moves the check for deprecated drivers above the statement checking for interfaces with long names. As the startDeprecatedIface doesn't append ""mon"" to the end, the check of name length does not seem to be necessary for deprecated drivers.","this change is fine, although next time please try to be a bit nicer to the whitespace :-)
thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2058,2019-06-08T05:09:33Z,2019-08-11T22:48:19Z,2019-08-11T22:48:19Z,CLOSED,False,1,1,1,https://github.com/kimocoder,Added support for dirty rtl8188eus chipset,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2058,https://github.com/kimocoder,1,https://github.com/aircrack-ng/aircrack-ng/pull/2058,"Added support for dirty (nl80211/cfg80211 mixed) rtl8188eus drivers
Supports lots of adapters
Monitor mode & frame injection supported","Added support for dirty (nl80211/cfg80211 mixed) rtl8188eus drivers
Supports lots of adapters
Monitor mode & frame injection supported",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2058,2019-06-08T05:09:33Z,2019-08-11T22:48:19Z,2019-08-11T22:48:19Z,CLOSED,False,1,1,1,https://github.com/kimocoder,Added support for dirty rtl8188eus chipset,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2058,https://github.com/ZeroChaos-,2,https://github.com/aircrack-ng/aircrack-ng/pull/2058#issuecomment-500122145,"Added support for dirty (nl80211/cfg80211 mixed) rtl8188eus drivers
Supports lots of adapters
Monitor mode & frame injection supported","Please don't remove 8814, just because it isn't current doesn't mean no one has it installed",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2060,2019-06-12T03:12:55Z,,2021-08-23T03:07:51Z,OPEN,False,3,6,1,https://github.com/allentree,Fix timing jump from [08:38:36] to [09:39:18] within 40 seconds.,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2060,https://github.com/allentree,1,https://github.com/aircrack-ng/aircrack-ng/pull/2060,"Here is the log:
Apr 18 23:46:26 allen-virtual-machine aircrack-ng[4065]: [08:37:55] 4359832/98732991 keys tested (142.40 k/s) allen1
Apr 18 23:47:07 allen-virtual-machine aircrack-ng[4065]: [08:38:36] 4365840/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:47:47 allen-virtual-machine aircrack-ng[4065]: [09:39:18] 4371860/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:48:28 allen-virtual-machine aircrack-ng[4065]: [09:40:00] 4377876/98732991 keys tested (142.42 k/s) allen1
Apr 18 23:49:09 allen-virtual-machine aircrack-ng[4065]: [09:40:41] 4383884/98732991 keys tested (142.43 k/s) allen1


where is the error in the log?
Timing information printed by aircrack-ng is in the [::]. And, [08:38:36] is jumped to [09:39:18] in 40 seconds , with clock time from 23:47:47 to 23:47:07


what causes the error?
It is caused by lrintf() . lrintf() function doesn't set its rounding direction, resulting in 0.501 hour or so
equal to 1 hour, not 0 hour. There’s no need of lrintf(), that will make the timing code easier, and it will be ok by use of casting data type from float to int.


how to reproduce the problem and to save time?
I change the current time by using 'date -s' shell command, instead of running aircrack-ng second by second.","Here is the log:
Apr 18 23:46:26 allen-virtual-machine aircrack-ng[4065]: [08:37:55] 4359832/98732991 keys tested (142.40 k/s) allen1
Apr 18 23:47:07 allen-virtual-machine aircrack-ng[4065]: [08:38:36] 4365840/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:47:47 allen-virtual-machine aircrack-ng[4065]: [09:39:18] 4371860/98732991 keys tested (142.41 k/s) allen1
Apr 18 23:48:28 allen-virtual-machine aircrack-ng[4065]: [09:40:00] 4377876/98732991 keys tested (142.42 k/s) allen1
Apr 18 23:49:09 allen-virtual-machine aircrack-ng[4065]: [09:40:41] 4383884/98732991 keys tested (142.43 k/s) allen1


where is the error in the log?
Timing information printed by aircrack-ng is in the [::]. And, [08:38:36] is jumped to [09:39:18] in 40 seconds , with clock time from 23:47:47 to 23:47:07


what causes the error?
It is caused by lrintf() . lrintf() function doesn't set its rounding direction, resulting in 0.501 hour or so
equal to 1 hour, not 0 hour. There’s no need of lrintf(), that will make the timing code easier, and it will be ok by use of casting data type from float to int.


how to reproduce the problem and to save time?
I change the current time by using 'date -s' shell command, instead of running aircrack-ng second by second.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2066,2019-07-25T23:37:52Z,2019-07-26T02:40:32Z,2019-07-26T03:07:03Z,CLOSED,False,129,137,1,https://github.com/neheb,Shellcheck warnings,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2066,https://github.com/neheb,1,https://github.com/aircrack-ng/aircrack-ng/pull/2066,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2066,2019-07-25T23:37:52Z,2019-07-26T02:40:32Z,2019-07-26T03:07:03Z,CLOSED,False,129,137,1,https://github.com/neheb,Shellcheck warnings,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2066,https://github.com/ZeroChaos-,2,https://github.com/aircrack-ng/aircrack-ng/pull/2066#issuecomment-515286382,,"Honestly it ruins readability to change the way the printfs are, and I haven't found a shell that can't handle the current syntax.  NACK",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2066,2019-07-25T23:37:52Z,2019-07-26T02:40:32Z,2019-07-26T03:07:03Z,CLOSED,False,129,137,1,https://github.com/neheb,Shellcheck warnings,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2066,https://github.com/ZeroChaos-,3,https://github.com/aircrack-ng/aircrack-ng/pull/2066#issuecomment-515289661,,"okay, so I mostly committed the real fixes, everything but the %s stuff and pgrep.  thanks a bunch for finding that stuff.  I will take a look at if openwrt has pgrep by default, but if so I'll merge that too.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2066,2019-07-25T23:37:52Z,2019-07-26T02:40:32Z,2019-07-26T03:07:03Z,CLOSED,False,129,137,1,https://github.com/neheb,Shellcheck warnings,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2066,https://github.com/neheb,4,https://github.com/aircrack-ng/aircrack-ng/pull/2066#issuecomment-515290935,,"Current SNAPSHOT does. Not sure about previous releases.
edit: The current supported releases (18 and 19 do. 17 should as well.)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2073,2019-08-21T16:26:47Z,2019-09-07T20:52:39Z,2019-09-07T20:52:39Z,MERGED,True,36,4,1,https://github.com/jacobopantoja,[airdecap-ng] Decrypt both directions of WDS,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2073,https://github.com/jacobopantoja,1,https://github.com/aircrack-ng/aircrack-ng/pull/2073,"BSSID and STA in WDS mode can only be properly identified if BSSID is pre-known. Therefore, we use the BSSID parameter in the command line to properly identify STA and BSSID. If no BSSID is provided, previous behaviour is reproduced (only traffic destined to AP is decrypted), and a warning is given.","BSSID and STA in WDS mode can only be properly identified if BSSID is pre-known. Therefore, we use the BSSID parameter in the command line to properly identify STA and BSSID. If no BSSID is provided, previous behaviour is reproduced (only traffic destined to AP is decrypted), and a warning is given.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2073,2019-08-21T16:26:47Z,2019-09-07T20:52:39Z,2019-09-07T20:52:39Z,MERGED,True,36,4,1,https://github.com/jacobopantoja,[airdecap-ng] Decrypt both directions of WDS,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2073,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2073#issuecomment-523703920,"BSSID and STA in WDS mode can only be properly identified if BSSID is pre-known. Therefore, we use the BSSID parameter in the command line to properly identify STA and BSSID. If no BSSID is provided, previous behaviour is reproduced (only traffic destined to AP is decrypted), and a warning is given.",Would you be able to provide test data?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2073,2019-08-21T16:26:47Z,2019-09-07T20:52:39Z,2019-09-07T20:52:39Z,MERGED,True,36,4,1,https://github.com/jacobopantoja,[airdecap-ng] Decrypt both directions of WDS,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2073,https://github.com/jacobopantoja,3,https://github.com/aircrack-ng/aircrack-ng/pull/2073#issuecomment-523769116,"BSSID and STA in WDS mode can only be properly identified if BSSID is pre-known. Therefore, we use the BSSID parameter in the command line to properly identify STA and BSSID. If no BSSID is provided, previous behaviour is reproduced (only traffic destined to AP is decrypted), and a warning is given.","Would you be able to provide test data?

Yes, sorry. Here is the original capture (captured with airodump-ng --channel 140 -w capture_wds --output-format pcap wlp1s0mon), plus decrypted with Arch Linux airdecap-ng 1.5.2, plus decrypted with current master modified with my patch.
Both AP and STA are OpenWRT boxes with 4-address set (so to make a wireless bridge), containing VLANs. I made tests with and without VLANs to ensure there was no influence, and results are identical regardless of the VLANs.
SSID: test1
Passphrase: 12345678
capture-wds-01.cap -> Original capture
capture-wds-01-dec_vanilla_1.5.2.cap -> Decrypted with vanilla 1.5.2, with airdecap-ng /tmp/capture_wds-01.cap -e test1 -p 12345678 -l
43 out of 46 packets are decrypted (the 3 remaining are from the AP to the STA). Additionally, I'm seeing that in the stats, Total number of stations seen is 2 (I guess should be only 1).
capture-wds-01-dec-patched_1.5.2.cap -> Decrypted with patched 1.5.2, with airdecap-ng /tmp/capture_wds-01.cap -e test1 -p 12345678 -l -b 00:11:22:00:00:00
46 out of 46 packets are decrypted, and Total number of stations seen is 1. If decrypted without -b, results are identical to the vanilla ones.
Looking forward for your comments.
captures.zip",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2078,2019-09-05T06:08:09Z,,2021-08-23T03:07:51Z,OPEN,False,354,4,7,https://github.com/esguti,Add JSON outuput,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2078,https://github.com/esguti,1,https://github.com/aircrack-ng/aircrack-ng/pull/2078,"Solve Issue #1631
The output includes manufacturers list.","Solve Issue #1631
The output includes manufacturers list.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2078,2019-09-05T06:08:09Z,,2021-08-23T03:07:51Z,OPEN,False,354,4,7,https://github.com/esguti,Add JSON outuput,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2078,https://github.com/esguti,2,https://github.com/aircrack-ng/aircrack-ng/pull/2078#issuecomment-698902888,"Solve Issue #1631
The output includes manufacturers list.",@ZeroChaos- Are you interested in this feature?,True,{'THUMBS_UP': ['https://github.com/lowk3y']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2080,2019-09-06T23:56:31Z,2019-10-12T03:56:54Z,2019-10-12T03:56:54Z,CLOSED,False,11663,6681,83,https://github.com/ChrisNisbet01,Refactoring of airodump-ng and other related files,253,[],https://github.com/aircrack-ng/aircrack-ng/pull/2080,https://github.com/ChrisNisbet01,1,https://github.com/aircrack-ng/aircrack-ng/pull/2080,"This is a fairly significant change, so I appreciate that you may be reluctant to take this without some serious thought and/or testing. I'm just bringing it to your attention. Do with it what you will.
Note that I had added some UBUS support and another output format for my own purposes, but removed all of that in this branch so that it more closely follows the support in your project.
The general idea from my perspective was to (hopefully) make the code a little clearer and modular.
Everything still builds on my local machine, and airodump-ng still appears to work, but I haven't checked any of the other applications to ensure they're still operational; I wouldn't know what they're used for anyway.
I haven't made any attempt to follow your own coding standards, but I figure that if you're interested in these changes, it wouldn't take too much effort to run a formatter over them.
I know that at least a couple of the new headers files are probably in the wrong place.","This is a fairly significant change, so I appreciate that you may be reluctant to take this without some serious thought and/or testing. I'm just bringing it to your attention. Do with it what you will.
Note that I had added some UBUS support and another output format for my own purposes, but removed all of that in this branch so that it more closely follows the support in your project.
The general idea from my perspective was to (hopefully) make the code a little clearer and modular.
Everything still builds on my local machine, and airodump-ng still appears to work, but I haven't checked any of the other applications to ensure they're still operational; I wouldn't know what they're used for anyway.
I haven't made any attempt to follow your own coding standards, but I figure that if you're interested in these changes, it wouldn't take too much effort to run a formatter over them.
I know that at least a couple of the new headers files are probably in the wrong place.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2080,2019-09-06T23:56:31Z,2019-10-12T03:56:54Z,2019-10-12T03:56:54Z,CLOSED,False,11663,6681,83,https://github.com/ChrisNisbet01,Refactoring of airodump-ng and other related files,253,[],https://github.com/aircrack-ng/aircrack-ng/pull/2080,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2080#issuecomment-529057210,"This is a fairly significant change, so I appreciate that you may be reluctant to take this without some serious thought and/or testing. I'm just bringing it to your attention. Do with it what you will.
Note that I had added some UBUS support and another output format for my own purposes, but removed all of that in this branch so that it more closely follows the support in your project.
The general idea from my perspective was to (hopefully) make the code a little clearer and modular.
Everything still builds on my local machine, and airodump-ng still appears to work, but I haven't checked any of the other applications to ensure they're still operational; I wouldn't know what they're used for anyway.
I haven't made any attempt to follow your own coding standards, but I figure that if you're interested in these changes, it wouldn't take too much effort to run a formatter over them.
I know that at least a couple of the new headers files are probably in the wrong place.","After a quick check, here are the initial remarks:

The OUI file is not mandatory and there is a tool to download it
There are a lot of unrelated commits, it would be preferable if this had just the related commits, to make it easier to review them
You removed a lot of ""const"" from the code, why is that?
Are the .gitignore changes all necessary?
Style can be checked easily, we have a .clang-format file, that can be loaded with a lot of code editors or just used in the command line with clang-format. Ideally, with clang-3.9
Travis noted an error, and it feels like it's just a missing header in one of the Makefiles:

/home/travis/build/aircrack-ng/aircrack-ng/dist_build/aircrack-ng-1.5.2_rev-b9ea99c/include/aircrack-ng/support/communications.h:51:42: fatal error: aircrack-ng/osdep/mac_header.h: No such file or directory",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2080,2019-09-06T23:56:31Z,2019-10-12T03:56:54Z,2019-10-12T03:56:54Z,CLOSED,False,11663,6681,83,https://github.com/ChrisNisbet01,Refactoring of airodump-ng and other related files,253,[],https://github.com/aircrack-ng/aircrack-ng/pull/2080,https://github.com/ChrisNisbet01,3,https://github.com/aircrack-ng/aircrack-ng/pull/2080#issuecomment-529061512,"This is a fairly significant change, so I appreciate that you may be reluctant to take this without some serious thought and/or testing. I'm just bringing it to your attention. Do with it what you will.
Note that I had added some UBUS support and another output format for my own purposes, but removed all of that in this branch so that it more closely follows the support in your project.
The general idea from my perspective was to (hopefully) make the code a little clearer and modular.
Everything still builds on my local machine, and airodump-ng still appears to work, but I haven't checked any of the other applications to ensure they're still operational; I wouldn't know what they're used for anyway.
I haven't made any attempt to follow your own coding standards, but I figure that if you're interested in these changes, it wouldn't take too much effort to run a formatter over them.
I know that at least a couple of the new headers files are probably in the wrong place.","I have removed airodump-ng-oui.txt from the repo and removed some of those changes to .gitignore.
I think you'll find I have added a lot of consts to the code. You would need to point me to the consts you think I have removed.
Yes, there are a lot of commits, but they are all related.
I really don't know enough about the make system to know if I was making the appropriate changes to get all the required headers into the tarball, which is where I think things went wrong.
If these changes are interesting to anybody, they might like to lend a hand and resolve some of the issues.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/samueloph,1,https://github.com/aircrack-ng/aircrack-ng/pull/2087,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-544303014,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","Thank you for pointing all the files. 2to3 is good at giving pointers how to fix it.
However, for anybody else using it, it has bugs with print duplicating parenthesis, and not handling imports when there is an if checking for python3, and finally, changing the env to python3, which is going to be taken care of by packager, depending on what the distro chooses. In the case of dcrack, using python3 used chunked encoding when doing POST, and the library didn't support it, so had to add support for that manually.
Commits: 7a944ee, bf21509, 1c0e33e, 8df899c, 52e0db2, 1eba2a4 and f7f4b39",True,{'THUMBS_UP': ['https://github.com/samueloph']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/samueloph,3,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-569760047,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","@aircrack-ng thank you for the details on the changes made, I appreciate it.
Are there plans of making a new release? We could package a git snapshot for Debian/Kali to switch to python3 but having a proper upstream release is better, the last one seem to have happened December last year.
Regards,",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-569849047,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","Yes, very soon",True,{'THUMBS_UP': ['https://github.com/samueloph']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/rhertzog,5,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-574111611,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","Thanks for your work! How soon is very soon? In Debian, we have a deadline in two weeks. If the release is not going to happen in the next week, I'd rather package a git snapshot to avoid a temporary removal from Debian testing. See https://tracker.debian.org/pkg/aircrack-ng for details.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/aircrack-ng,6,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-574292768,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.",It will happen within a week.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/aircrack-ng,7,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-578457010,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.",1.6 was finally released today,True,"{'THUMBS_UP': ['https://github.com/kimocoder', 'https://github.com/samueloph']}"
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/samueloph,8,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-578462499,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","that' s great news, I already did the very initial packaging work, we should have it up-to-date in debian/kali repos soon",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/kimocoder,9,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-578463291,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","Just don't thrust the 2to3(-3.8) to it's fully.. it's far for flawless that one. And congratulations with a new release, can't wait to look into it!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/kimocoder,10,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-578466230,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","@samueloph have to admit I cheated there..
I need to see right away if it plays nice with wifite2 💯
https://packages.aircrack-ng.org/artifacts/aircrack-ng/stable/1.6/deb/",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2087,2019-10-02T23:21:34Z,2019-10-20T23:17:17Z,2020-01-26T18:20:28Z,CLOSED,False,87,86,11,https://github.com/samueloph,Python3 support with 2to3 to all .py files,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2087,https://github.com/aircrack-ng,11,https://github.com/aircrack-ng/aircrack-ng/pull/2087#issuecomment-578528577,"Just executed python's 2to3 script on all of the .py files and changed the shebang,
this is the first iteration for python3 support of aircrack-ng, there's a chance no
other changes will be required, but this PR needs to be properly tested and reviewed
before merging it.","2to3 is not perfect, but it's a good way to start, then make adjustments from its modifications; it's easy to see what it changed when using source control. That's how this was done.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2088,2019-10-05T17:21:31Z,2020-06-07T20:11:09Z,2020-06-07T20:11:35Z,CLOSED,False,1,3,1,https://github.com/scorpius,airodump-ng: bug fix colorize option,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2088,https://github.com/scorpius,1,https://github.com/aircrack-ng/aircrack-ng/pull/2088,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2088,2019-10-05T17:21:31Z,2020-06-07T20:11:09Z,2020-06-07T20:11:35Z,CLOSED,False,1,3,1,https://github.com/scorpius,airodump-ng: bug fix colorize option,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2088,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2088#issuecomment-546743818,,Could you give more details: when it happens and how to reproduce the bug,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2088,2019-10-05T17:21:31Z,2020-06-07T20:11:09Z,2020-06-07T20:11:35Z,CLOSED,False,1,3,1,https://github.com/scorpius,airodump-ng: bug fix colorize option,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2088,https://github.com/scorpius,3,https://github.com/aircrack-ng/aircrack-ng/pull/2088#issuecomment-546967242,,"If you activate the feature by pressing the o key, all clients have the same color. But with the fix, each client matches the color of the AP it is associated to.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2088,2019-10-05T17:21:31Z,2020-06-07T20:11:09Z,2020-06-07T20:11:35Z,CLOSED,False,1,3,1,https://github.com/scorpius,airodump-ng: bug fix colorize option,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2088,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/2088#issuecomment-568934116,,"With this patch, existing clients not linked to AP in the top section become hidden when hitting 'o'. This could be due to a bug in the auto-coloring - See #2019",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2088,2019-10-05T17:21:31Z,2020-06-07T20:11:09Z,2020-06-07T20:11:35Z,CLOSED,False,1,3,1,https://github.com/scorpius,airodump-ng: bug fix colorize option,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2088,https://github.com/scorpius,5,https://github.com/aircrack-ng/aircrack-ng/pull/2088#issuecomment-587928954,,"On my system the non-linked-to-ap clients are visible and have a grey color. I think it is not a bug, but different terminal colors can make it look hidden.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2090,2019-10-22T20:16:30Z,2019-10-29T05:12:02Z,2019-10-29T05:12:06Z,CLOSED,False,6,38,1,https://github.com/neheb,Replace ps | grep with a simple pgrep,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2090,https://github.com/neheb,1,https://github.com/aircrack-ng/aircrack-ng/pull/2090,Eliminates busybox hacks and allows it to work properly with busybox.,Eliminates busybox hacks and allows it to work properly with busybox.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2090,2019-10-22T20:16:30Z,2019-10-29T05:12:02Z,2019-10-29T05:12:06Z,CLOSED,False,6,38,1,https://github.com/neheb,Replace ps | grep with a simple pgrep,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2090,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2090#issuecomment-546743605,Eliminates busybox hacks and allows it to work properly with busybox.,"Doesn't work on Kali (and probably other distros that don't use busybox). Output is empty with a patched airmon-ng, and reports processes on unpatched.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2090,2019-10-22T20:16:30Z,2019-10-29T05:12:02Z,2019-10-29T05:12:06Z,CLOSED,False,6,38,1,https://github.com/neheb,Replace ps | grep with a simple pgrep,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2090,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2090#issuecomment-546745632,Eliminates busybox hacks and allows it to work properly with busybox.,"I may be wrong, but I believe that pgrep is not available across the wide range of supported operating systems. That said, for Debian-based distros, the pgrep tool is provided by the procps package.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2090,2019-10-22T20:16:30Z,2019-10-29T05:12:02Z,2019-10-29T05:12:06Z,CLOSED,False,6,38,1,https://github.com/neheb,Replace ps | grep with a simple pgrep,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2090,https://github.com/neheb,4,https://github.com/aircrack-ng/aircrack-ng/pull/2090#issuecomment-547259237,Eliminates busybox hacks and allows it to work properly with busybox.,"I see the problem... pgrep can only handle one expression at a time. It does not support the | syntax used in PROCESSES . Meaning a loop would need to be created...
I doubt that would simplify the script. Closing.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/dmfreemon,1,https://github.com/aircrack-ng/aircrack-ng/pull/2094,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/dmfreemon,2,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-552245149,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","Looking at the Travis output, I don't see what the problem might be.  make check works fine on my machine.  Please advise if there is something I should do for this.  Thanks.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-552245476,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","It may have been an intermittent thing, on Travis's part. The macOS image hung with no response after 10 minutes. I've restarted the job.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/dmfreemon,4,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-590089015,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","Looking at the Travis output, I'm not sure I know what the problem is.  make check works fine on my machine.  But my machine is linux, and I think the build failure is on osx.
I do see this in Travis:

checking whether build environment is sane... configure: error: newly created file is older than distributed files!
Check your system clock

It's not clear if that is causing the non-zero return code.  But I am wondering if this could be indicating a problem with the build machine.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/mgaflip,5,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-597567847,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.",see #2062 (comment),True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/dmfreemon,6,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-597760752,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","@mgaflip Thanks for taking the time to share your comments above.  Can you confirm that you were not using this PR when experiencing this crash and that your code change suggestions above are referring to the current master code and not code in this PR?
I believe the existing code in this PR has already fixed this bug.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/mcampana,7,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-597775772,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","Hi, I'm using the master code. The big is there",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/mcampana,8,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-597775880,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","Bug, I mean",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/RafaelLeeImg,9,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-648342681,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","Pretty good, this PR fixes the double double free error, works well on my Debian.
I confimed the base 491526f has double free problem.
I checked the modified lines, it solved the problem.
All dynamically allocated resources are freed in lib/osdep/linux.c, line 2279
static void do_free(struct wif * wi)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2094,2019-11-10T21:38:32Z,2020-11-15T21:14:55Z,2020-11-15T21:14:55Z,CLOSED,False,16,18,2,https://github.com/dmfreemon,fix for crash (double free) when libnl3-devel (for HT channel support…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2094,https://github.com/jbenden,10,https://github.com/aircrack-ng/aircrack-ng/pull/2094#issuecomment-727637971,"…) is not installed (fedora).
The configure script unsets CONFIG_LIBNL, which leads to the double free.","I have added missing pieces from this PR to current master.
Thanks!
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2095,2019-11-19T06:27:21Z,2020-02-29T19:03:10Z,2020-03-11T16:02:13Z,MERGED,True,1,1,1,https://github.com/dmfreemon,fix src/Makefile.inc to get --enable-static --disable-shared and opti…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2095,https://github.com/dmfreemon,1,https://github.com/aircrack-ng/aircrack-ng/pull/2095,…onally --with-static-simd=xxx to build successfully,…onally --with-static-simd=xxx to build successfully,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2095,2019-11-19T06:27:21Z,2020-02-29T19:03:10Z,2020-03-11T16:02:13Z,MERGED,True,1,1,1,https://github.com/dmfreemon,fix src/Makefile.inc to get --enable-static --disable-shared and opti…,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2095,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2095#issuecomment-592982164,…onally --with-static-simd=xxx to build successfully,"In the future, do not merge to your PR branch; but rather, use rebase.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2099,2019-11-22T17:21:50Z,2019-12-07T21:22:42Z,2019-12-07T21:22:42Z,CLOSED,False,209,375,42,https://github.com/dmfreemon,Remove support for building aircrack libraries as dynamic shared objects,6,[],https://github.com/aircrack-ng/aircrack-ng/pull/2099,https://github.com/dmfreemon,1,https://github.com/aircrack-ng/aircrack-ng/pull/2099,"This PR removes the option to build the aircrack libraries as dynamic shared objects.
The motivation is that supporting building DSO's makes the build system more complicated, without offering any benefits (in this case).
Although more simplifications are possible, this set of changes works and is good enough to commit.
For more background and details, see issue #2096:
#2096","This PR removes the option to build the aircrack libraries as dynamic shared objects.
The motivation is that supporting building DSO's makes the build system more complicated, without offering any benefits (in this case).
Although more simplifications are possible, this set of changes works and is good enough to commit.
For more background and details, see issue #2096:
#2096",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2100,2019-11-22T17:45:35Z,2019-12-07T21:01:44Z,2019-12-07T21:08:46Z,CLOSED,False,503,472,49,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,15,[],https://github.com/aircrack-ng/aircrack-ng/pull/2100,https://github.com/dmfreemon,1,https://github.com/aircrack-ng/aircrack-ng/pull/2100,"Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings
Important note: This PR depends on PR 2099 (I'm not entirely sure I understand how github handles this).  This dependency is due to circular linker library dependencies that occur without PR 2099.  There are certainly other approaches to solve the circular linker library references, but this is what i'm proposing.","Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings
Important note: This PR depends on PR 2099 (I'm not entirely sure I understand how github handles this).  This dependency is due to circular linker library dependencies that occur without PR 2099.  There are certainly other approaches to solve the circular linker library references, but this is what i'm proposing.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2102,2019-12-03T20:24:44Z,,2021-08-23T03:07:51Z,OPEN,False,73,25,1,https://github.com/dmfreemon,bugfix: fix memory references in dump_print() after main thread has...,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/2102,https://github.com/dmfreemon,1,https://github.com/aircrack-ng/aircrack-ng/pull/2102,free() the memory and also prevent corruption if another thread changes the elapsed_time string during the sprintf.,free() the memory and also prevent corruption if another thread changes the elapsed_time string during the sprintf.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2102,2019-12-03T20:24:44Z,,2021-08-23T03:07:51Z,OPEN,False,73,25,1,https://github.com/dmfreemon,bugfix: fix memory references in dump_print() after main thread has...,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/2102,https://github.com/dmfreemon,2,https://github.com/aircrack-ng/aircrack-ng/pull/2102#issuecomment-562211618,free() the memory and also prevent corruption if another thread changes the elapsed_time string during the sprintf.,I have no idea why this PR is failing in Travis,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2102,2019-12-03T20:24:44Z,,2021-08-23T03:07:51Z,OPEN,False,73,25,1,https://github.com/dmfreemon,bugfix: fix memory references in dump_print() after main thread has...,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/2102,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2102#issuecomment-562272373,free() the memory and also prevent corruption if another thread changes the elapsed_time string during the sprintf.,"Hi!
It's because the source code is not properly formatted with clang-format 3.8.
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2102,2019-12-03T20:24:44Z,,2021-08-23T03:07:51Z,OPEN,False,73,25,1,https://github.com/dmfreemon,bugfix: fix memory references in dump_print() after main thread has...,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/2102,https://github.com/dmfreemon,4,https://github.com/aircrack-ng/aircrack-ng/pull/2102#issuecomment-562381933,free() the memory and also prevent corruption if another thread changes the elapsed_time string during the sprintf.,"I appreciate the timely reply, but I've been through the Travis output several times, and I don't see any information about a formatting error, what formatting rule was violated, or which source code line number has the problem.  Nothing.  So there is nothing I can do about this.  In reviewing my changes associated with this PR, I'm comfortable with what I am presenting to you guys.  So at this point, I'll just leave this PR with you for your consideration, to either commit, defer, reject, or commit with whatever formatting (or other) changes you want.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2102,2019-12-03T20:24:44Z,,2021-08-23T03:07:51Z,OPEN,False,73,25,1,https://github.com/dmfreemon,bugfix: fix memory references in dump_print() after main thread has...,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/2102,https://github.com/aircrack-ng,5,https://github.com/aircrack-ng/aircrack-ng/pull/2102#issuecomment-569167633,free() the memory and also prevent corruption if another thread changes the elapsed_time string during the sprintf.,"Just click on the Travis Build, which will lead to 4 items, click on the one that is red, and expand ""Checking source code style..."", then go to the end of it.
It's marked failed because codestyle but the build is succesfull.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2102,2019-12-03T20:24:44Z,,2021-08-23T03:07:51Z,OPEN,False,73,25,1,https://github.com/dmfreemon,bugfix: fix memory references in dump_print() after main thread has...,7,[],https://github.com/aircrack-ng/aircrack-ng/pull/2102,https://github.com/dmfreemon,6,https://github.com/aircrack-ng/aircrack-ng/pull/2102#issuecomment-590094063,free() the memory and also prevent corruption if another thread changes the elapsed_time string during the sprintf.,"There may be a problem with Travis.  For this PR, the code (I think) conforms to the formatting standards.  In particular, there are some if statements with the opening braces on the same line.  See:
https://github.com/aircrack-ng/aircrack-ng/pull/2102/files
But Travis, when it performs the code formatting check, gets it backwards, and thinks I'm putting the opening brace on a new line. See:
https://travis-ci.org/aircrack-ng/aircrack-ng/jobs/654115815?utm_medium=notification&utm_source=github_status",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/dmfreemon,1,https://github.com/aircrack-ng/aircrack-ng/pull/2105,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/dmfreemon,2,https://github.com/aircrack-ng/aircrack-ng/pull/2105#issuecomment-590096597,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,"Here is another example of two things:

""make check"" tests that pass on my machine but fail on the build machines
build failures cause by code formatting issues, but no indication in the Travis output which lines of code violated the formatting rules, nor even which rules were violated.  How can I get better output from the formatting checker?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/2105#issuecomment-590101083,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,"Click on the one that fails on Travis, then click on the yellow ""Checking source code style..."". It will open it. Scroll down, and you'll see a diff showing what's wrong.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/dmfreemon,4,https://github.com/aircrack-ng/aircrack-ng/pull/2105#issuecomment-590103160,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,"Click on the one that fails on Travis, then click on the yellow ""Checking source code style..."". It will open it. Scroll down, and you'll see a diff showing what's wrong.

I do get that far, and I do see the diff.  But there are a lot of lines on the diff, with no indication of what lines are being flags as errors.  There is also no indication of what rule is being violated, or how many rules are being violated.  I took a quick look, at did not see an obvious way for me to run these code formatting checks myself (in my local workspace).  Is there a way to do that?  What is the normal process for fixing these?  I am guessing it's not supposed to be: guess, commit, push, guess, commit, push...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/aircrack-ng,5,https://github.com/aircrack-ng/aircrack-ng/pull/2105#issuecomment-590109747,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,"What's in red is the problem, what's in green corrected.
Yes, use clang 3.6 (or 3.8) and use the provided .clang-format file. You can also use .editorconfig",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/dmfreemon,6,https://github.com/aircrack-ng/aircrack-ng/pull/2105#issuecomment-590120827,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,"Ok, well, I install the clang tools and run the code formatter with the rules provided in the aircrack repository (.clang-format file), and the build still fails, due to formatting problems.  See this PR, commit dfca6bb.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/aircrack-ng,7,https://github.com/aircrack-ng/aircrack-ng/pull/2105#issuecomment-590121160,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,"It's not just any clang-format, it's a specific version, as they change from one version to another. As mentioned earlier it is clang-3.8",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2105,2019-12-07T21:05:29Z,,2021-08-23T03:07:51Z,OPEN,False,291,93,14,https://github.com/dmfreemon,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,5,[],https://github.com/aircrack-ng/aircrack-ng/pull/2105,https://github.com/dmfreemon,8,https://github.com/aircrack-ng/aircrack-ng/pull/2105#issuecomment-590123646,Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings,"I am on Fedora 31, which provides clang versions 7.0.1, 8.0.0, and 9.0.0 in the dnf repositories.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2107,2019-12-18T13:55:39Z,2019-12-25T22:26:44Z,2019-12-25T22:26:44Z,MERGED,True,56,35,2,https://github.com/cdeletre,Minor updates on airgraph-ng,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2107,https://github.com/cdeletre,1,https://github.com/aircrack-ng/aircrack-ng/pull/2107,"Hi,
I've done few changes for my needs in airgraph-ng like adding -d option to keep the dot file and also a ""smarter"" output file auto-naming. In the same time I've also switched the script to use the library argparse instead of optparse. Maybe it can be useful to the community, I let you decide.
Cyril","Hi,
I've done few changes for my needs in airgraph-ng like adding -d option to keep the dot file and also a ""smarter"" output file auto-naming. In the same time I've also switched the script to use the library argparse instead of optparse. Maybe it can be useful to the community, I let you decide.
Cyril",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2107,2019-12-18T13:55:39Z,2019-12-25T22:26:44Z,2019-12-25T22:26:44Z,MERGED,True,56,35,2,https://github.com/cdeletre,Minor updates on airgraph-ng,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2107,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2107#issuecomment-567305172,"Hi,
I've done few changes for my needs in airgraph-ng like adding -d option to keep the dot file and also a ""smarter"" output file auto-naming. In the same time I've also switched the script to use the library argparse instead of optparse. Maybe it can be useful to the community, I let you decide.
Cyril",Looks good. One detail: could you remove the README.md change?,True,{'THUMBS_UP': ['https://github.com/cdeletre']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2107,2019-12-18T13:55:39Z,2019-12-25T22:26:44Z,2019-12-25T22:26:44Z,MERGED,True,56,35,2,https://github.com/cdeletre,Minor updates on airgraph-ng,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2107,https://github.com/cdeletre,3,https://github.com/aircrack-ng/aircrack-ng/pull/2107#issuecomment-567434218,"Hi,
I've done few changes for my needs in airgraph-ng like adding -d option to keep the dot file and also a ""smarter"" output file auto-naming. In the same time I've also switched the script to use the library argparse instead of optparse. Maybe it can be useful to the community, I let you decide.
Cyril","Looks good. One detail: could you remove the README.md change?

Hi
Thank for accepting my update. Do you need me to remove the README.md changes ? If so, how do I do ? Sorry about these stupid questions, I don't pull a lot ;)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2107,2019-12-18T13:55:39Z,2019-12-25T22:26:44Z,2019-12-25T22:26:44Z,MERGED,True,56,35,2,https://github.com/cdeletre,Minor updates on airgraph-ng,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2107,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/2107#issuecomment-568932104,"Hi,
I've done few changes for my needs in airgraph-ng like adding -d option to keep the dot file and also a ""smarter"" output file auto-naming. In the same time I've also switched the script to use the library argparse instead of optparse. Maybe it can be useful to the community, I let you decide.
Cyril",Commit the change in your master branch.,True,{'THUMBS_UP': ['https://github.com/cdeletre']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2107,2019-12-18T13:55:39Z,2019-12-25T22:26:44Z,2019-12-25T22:26:44Z,MERGED,True,56,35,2,https://github.com/cdeletre,Minor updates on airgraph-ng,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2107,https://github.com/cdeletre,5,https://github.com/aircrack-ng/aircrack-ng/pull/2107#issuecomment-568934223,"Hi,
I've done few changes for my needs in airgraph-ng like adding -d option to keep the dot file and also a ""smarter"" output file auto-naming. In the same time I've also switched the script to use the library argparse instead of optparse. Maybe it can be useful to the community, I let you decide.
Cyril","Commit the change in your master branch.

Ok, I got it now :)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2112,2019-12-28T11:27:47Z,2019-12-28T18:02:57Z,2021-07-24T21:12:08Z,CLOSED,False,827,277,27,https://github.com/yusufsayar,is aircrack combatible edup ed 200 wifi adapter? ,17,[],https://github.com/aircrack-ng/aircrack-ng/pull/2112,https://github.com/yusufsayar,1,https://github.com/aircrack-ng/aircrack-ng/pull/2112,is aircrack combatible edup ed 200 network wifi adapter on rpi3? thanks,is aircrack combatible edup ed 200 network wifi adapter on rpi3? thanks,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2112,2019-12-28T11:27:47Z,2019-12-28T18:02:57Z,2021-07-24T21:12:08Z,CLOSED,False,827,277,27,https://github.com/yusufsayar,is aircrack combatible edup ed 200 wifi adapter? ,17,[],https://github.com/aircrack-ng/aircrack-ng/pull/2112,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2112#issuecomment-569438830,is aircrack combatible edup ed 200 network wifi adapter on rpi3? thanks,"What you are asking is for the forum, not for github, as it is a support request.
May I also suggest to read the documentation, we have plenty in the wiki that helps determining the chipset, and thus if the card will work.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2115,2020-01-26T20:00:00Z,2020-02-29T18:22:07Z,2020-02-29T18:22:07Z,CLOSED,False,18,18,1,https://github.com/ffontaine,build/m4/ax_check_openssl.m4: prefer pkg-config over AC_CHECK_LIB,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2115,https://github.com/ffontaine,1,https://github.com/aircrack-ng/aircrack-ng/pull/2115,"When searching for openssl, pkg-config should be preferred over
AC_CHECK_LIB to retrieve openssl static dependencies and avoid the
following build failure on architecture that links with -latomic such as
sparc v8 32bits:
configure:13813: checking whether compiling and linking against OpenSSL works
Trying link with OPENSSL_LDFLAGS=; OPENSSL_LIBS=-lssl -lcrypto; OPENSSL_INCLUDES=
configure:13835: /home/fabrice/buildroot/output/host/bin/sparc-linux-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -static  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -static  conftest.c -lssl -lcrypto -L/home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/bin/../../../../sparc-buildroot-linux-uclibc/sysroot/usr/lib/.libs -lnl-genl-3 -lnl-3  >&5
/home/fabrice/buildroot/output/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/8.3.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: /home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/lib/libssl.a(ssl_lib.o): in function `CRYPTO_UP_REF.isra.6':
ssl_lib.c:(.text+0x3c8): undefined reference to `__atomic_fetch_add_4'

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","When searching for openssl, pkg-config should be preferred over
AC_CHECK_LIB to retrieve openssl static dependencies and avoid the
following build failure on architecture that links with -latomic such as
sparc v8 32bits:
configure:13813: checking whether compiling and linking against OpenSSL works
Trying link with OPENSSL_LDFLAGS=; OPENSSL_LIBS=-lssl -lcrypto; OPENSSL_INCLUDES=
configure:13835: /home/fabrice/buildroot/output/host/bin/sparc-linux-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -static  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -static  conftest.c -lssl -lcrypto -L/home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/bin/../../../../sparc-buildroot-linux-uclibc/sysroot/usr/lib/.libs -lnl-genl-3 -lnl-3  >&5
/home/fabrice/buildroot/output/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/8.3.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: /home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/lib/libssl.a(ssl_lib.o): in function `CRYPTO_UP_REF.isra.6':
ssl_lib.c:(.text+0x3c8): undefined reference to `__atomic_fetch_add_4'

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2115,2020-01-26T20:00:00Z,2020-02-29T18:22:07Z,2020-02-29T18:22:07Z,CLOSED,False,18,18,1,https://github.com/ffontaine,build/m4/ax_check_openssl.m4: prefer pkg-config over AC_CHECK_LIB,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2115,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2115#issuecomment-578537763,"When searching for openssl, pkg-config should be preferred over
AC_CHECK_LIB to retrieve openssl static dependencies and avoid the
following build failure on architecture that links with -latomic such as
sparc v8 32bits:
configure:13813: checking whether compiling and linking against OpenSSL works
Trying link with OPENSSL_LDFLAGS=; OPENSSL_LIBS=-lssl -lcrypto; OPENSSL_INCLUDES=
configure:13835: /home/fabrice/buildroot/output/host/bin/sparc-linux-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -static  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -static  conftest.c -lssl -lcrypto -L/home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/bin/../../../../sparc-buildroot-linux-uclibc/sysroot/usr/lib/.libs -lnl-genl-3 -lnl-3  >&5
/home/fabrice/buildroot/output/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/8.3.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: /home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/lib/libssl.a(ssl_lib.o): in function `CRYPTO_UP_REF.isra.6':
ssl_lib.c:(.text+0x3c8): undefined reference to `__atomic_fetch_add_4'

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Hi,
Unfortunately, it's not that simple. Autoconf's support of static libraries via pkg-config is very broken.
Additionally, these static bits are only intended for our own package builds and are not really documented.
FYI: If you wish this to build on your system, you should be able to set LIBS=-latomic and get it all to link.
Best regards,
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2115,2020-01-26T20:00:00Z,2020-02-29T18:22:07Z,2020-02-29T18:22:07Z,CLOSED,False,18,18,1,https://github.com/ffontaine,build/m4/ax_check_openssl.m4: prefer pkg-config over AC_CHECK_LIB,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2115,https://github.com/ffontaine,3,https://github.com/aircrack-ng/aircrack-ng/pull/2115#issuecomment-578538432,"When searching for openssl, pkg-config should be preferred over
AC_CHECK_LIB to retrieve openssl static dependencies and avoid the
following build failure on architecture that links with -latomic such as
sparc v8 32bits:
configure:13813: checking whether compiling and linking against OpenSSL works
Trying link with OPENSSL_LDFLAGS=; OPENSSL_LIBS=-lssl -lcrypto; OPENSSL_INCLUDES=
configure:13835: /home/fabrice/buildroot/output/host/bin/sparc-linux-gcc -o conftest -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -static  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -static  conftest.c -lssl -lcrypto -L/home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/bin/../../../../sparc-buildroot-linux-uclibc/sysroot/usr/lib/.libs -lnl-genl-3 -lnl-3  >&5
/home/fabrice/buildroot/output/host/opt/ext-toolchain/bin/../lib/gcc/sparc-buildroot-linux-uclibc/8.3.0/../../../../sparc-buildroot-linux-uclibc/bin/ld: /home/fabrice/buildroot/output/host/sparc-buildroot-linux-uclibc/sysroot/usr/lib/libssl.a(ssl_lib.o): in function `CRYPTO_UP_REF.isra.6':
ssl_lib.c:(.text+0x3c8): undefined reference to `__atomic_fetch_add_4'

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","I know that I can get it to work by overriding LIBS but I wanted to try to push an upstreamable solution before doing so (my goal was to enable back static build of aircrack-ng in buildroot). Following your feedback, should I close this PR?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2127,2020-02-22T19:46:53Z,2020-02-29T18:17:53Z,2020-02-29T18:17:54Z,CLOSED,False,192,356,41,https://github.com/dmfreemon,Remove support for building aircrack libraries as dynamic shared objects,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2127,https://github.com/dmfreemon,1,https://github.com/aircrack-ng/aircrack-ng/pull/2127,"This PR removes the option to build the aircrack libraries as dynamic shared objects.
The motivation is that supporting building DSO's makes the build system more complicated, without offering any benefits (in this case).
Although more simplifications are possible, this set of changes works and is good enough to commit.
For more background and details, see issue #2096:
#2096","This PR removes the option to build the aircrack libraries as dynamic shared objects.
The motivation is that supporting building DSO's makes the build system more complicated, without offering any benefits (in this case).
Although more simplifications are possible, this set of changes works and is good enough to commit.
For more background and details, see issue #2096:
#2096",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2127,2020-02-22T19:46:53Z,2020-02-29T18:17:53Z,2020-02-29T18:17:54Z,CLOSED,False,192,356,41,https://github.com/dmfreemon,Remove support for building aircrack libraries as dynamic shared objects,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2127,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2127#issuecomment-592976300,"This PR removes the option to build the aircrack libraries as dynamic shared objects.
The motivation is that supporting building DSO's makes the build system more complicated, without offering any benefits (in this case).
Although more simplifications are possible, this set of changes works and is good enough to commit.
For more background and details, see issue #2096:
#2096","This is a significant change which should have been discussed prior to performing programming work.
Tossing aside the failed CI builds; this PR cannot be accepted.
The purpose of the multiple dynamic libraries is to support ""single compilation"" and ""multiple machine use"". This is common with Linux distributions, as they build the packages and many different people on different machines use the software.
The area in which the multiple dynamic libraries exists is to handle cryptographic calculations, which are the perfect candidate for the added complexities involved. This is typical and the norm - see openssl, etc. They all have modules split on architecture and features of certain architectures, such as AVX, SSE2, ASIMD, NEON, etc....",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/CGarces,1,https://github.com/aircrack-ng/aircrack-ng/pull/2140,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?","OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/CGarces,2,https://github.com/aircrack-ng/aircrack-ng/pull/2140#issuecomment-619555052,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?","Another question.
cpp-coveralls is installed on linux targets, but ¿where is used?
Looks like was removed on version 1.6

  
    
      aircrack-ng/ChangeLog
    
    
         Line 44
      in
      e708c21
    
  
  
    

        
          
           * General: Removed coveralls.io",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/2140#issuecomment-619580256,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?","That is correct, it's not used. It was used at some point but removed since we were not using it.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/CGarces,4,https://github.com/aircrack-ng/aircrack-ng/pull/2140#issuecomment-619605392,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?","That is correct, it's not used. It was used at some point but removed since we were not using it.

It's not used cpp-coveralls or the entite .travis.yml?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/CGarces,5,https://github.com/aircrack-ng/aircrack-ng/pull/2140#issuecomment-625504560,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?","Removed custom code to download clang-format-3.8
I'm not sure if the OSX dependencies are really needed, script build fine without it.
Ready for review in any case.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/jbenden,6,https://github.com/aircrack-ng/aircrack-ng/pull/2140#issuecomment-648460312,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?","Hi,
I've been bitten in the past by NOT specifying all dependencies; so I'd prefer that they all be included (as they are currently).
As for the rest, it looks great!
Thanks,
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/CGarces,7,https://github.com/aircrack-ng/aircrack-ng/pull/2140#issuecomment-649426545,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?","I have restored the dependencies, as requested.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2140,2020-04-25T19:49:30Z,2020-06-26T22:47:43Z,2020-06-26T22:49:41Z,MERGED,True,23,9,2,https://github.com/CGarces,Update Travis CI,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2140,https://github.com/jbenden,8,https://github.com/aircrack-ng/aircrack-ng/pull/2140#issuecomment-650437329,"OSX custom code replaced with homebrew addon.
Removed packages that already exist on current linux and OSX image
Enabled ccache.

I'm not sure if Travis CI is really used, I have several questions before set this PR as ready to merge.


Code looks outdated, maybe the original code was designed for pangolin, as I see at:
https://github.com/aircrack-ng/aircrack-ng/blob/master/build/travis-formatting.sh#L17
There is no distro tag set to is using Xenial. ¿can I update to Bionic?


OSX image is using xcode9.4 that has one bug on brew addon. The bug is fixed on xcode11. ¿can I update to xcode11? I'm not familiar with OSX.


I fact in this PR the OSX build not install cmocka and libpcap, and looks like is working fine. ¿this dependencies are needed?",Thanks a bunch!,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2143,2020-05-07T16:00:14Z,2020-06-23T18:57:53Z,2020-06-23T18:57:53Z,MERGED,True,5,0,1,https://github.com/xpz3,"WEP - If tail mode is enabled, wait for valid data from pcap file until close_aircrack is called (Fixes #2018)",2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2143,https://github.com/xpz3,1,https://github.com/aircrack-ng/aircrack-ng/pull/2143,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2143,2020-05-07T16:00:14Z,2020-06-23T18:57:53Z,2020-06-23T18:57:53Z,MERGED,True,5,0,1,https://github.com/xpz3,"WEP - If tail mode is enabled, wait for valid data from pcap file until close_aircrack is called (Fixes #2018)",2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2143,https://github.com/OscarAkaElvis,2,https://github.com/aircrack-ng/aircrack-ng/pull/2143#issuecomment-638510832,,what more is needed to review this pr? @jbenden,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2143,2020-05-07T16:00:14Z,2020-06-23T18:57:53Z,2020-06-23T18:57:53Z,MERGED,True,5,0,1,https://github.com/xpz3,"WEP - If tail mode is enabled, wait for valid data from pcap file until close_aircrack is called (Fixes #2018)",2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2143,https://github.com/ZeroChaos-,3,https://github.com/aircrack-ng/aircrack-ng/pull/2143#issuecomment-644395720,,"@Mister-X- @jbenden this seems like a fairly significant regression, can someone take a look please?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2146,2020-05-22T02:28:43Z,,2021-08-23T03:07:51Z,OPEN,False,19,6,1,https://github.com/beansrus,airbase: add -R (bssid randomization),1,"['enhancement', '#airbase-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2146,https://github.com/beansrus,1,https://github.com/aircrack-ng/aircrack-ng/pull/2146,"Hello, this is a small little patch to add a '-R' argument to airbase to be able to pick a random bssid.
The OUI of the generated mac has the locally administered and unicast bits set.
I also changed adhoc to use the same function since it was doing the same thing (minus enforceing  the local admin bit).
This is my first pull-request to the project, please let me know if I'm missing anything.","Hello, this is a small little patch to add a '-R' argument to airbase to be able to pick a random bssid.
The OUI of the generated mac has the locally administered and unicast bits set.
I also changed adhoc to use the same function since it was doing the same thing (minus enforceing  the local admin bit).
This is my first pull-request to the project, please let me know if I'm missing anything.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2146,2020-05-22T02:28:43Z,,2021-08-23T03:07:51Z,OPEN,False,19,6,1,https://github.com/beansrus,airbase: add -R (bssid randomization),1,"['enhancement', '#airbase-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2146,https://github.com/beansrus,2,https://github.com/aircrack-ng/aircrack-ng/pull/2146#issuecomment-632923966,"Hello, this is a small little patch to add a '-R' argument to airbase to be able to pick a random bssid.
The OUI of the generated mac has the locally administered and unicast bits set.
I also changed adhoc to use the same function since it was doing the same thing (minus enforceing  the local admin bit).
This is my first pull-request to the project, please let me know if I'm missing anything.","Hmm, doesn't look like these check failures are due to my changes",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2146,2020-05-22T02:28:43Z,,2021-08-23T03:07:51Z,OPEN,False,19,6,1,https://github.com/beansrus,airbase: add -R (bssid randomization),1,"['enhancement', '#airbase-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2146,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2146#issuecomment-693173592,"Hello, this is a small little patch to add a '-R' argument to airbase to be able to pick a random bssid.
The OUI of the generated mac has the locally administered and unicast bits set.
I also changed adhoc to use the same function since it was doing the same thing (minus enforceing  the local admin bit).
This is my first pull-request to the project, please let me know if I'm missing anything.",@Mister-X- Is this acceptable for merge?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2152,2020-06-07T20:30:15Z,2021-08-23T08:06:28Z,2021-08-23T08:06:29Z,MERGED,True,1,3,1,https://github.com/scorpius,Colorize airodump new bug fix,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2152,https://github.com/scorpius,1,https://github.com/aircrack-ng/aircrack-ng/pull/2152,"This finally fixes the previous terminal issue: ""existing clients not linked to AP in the top section become hidden when hitting 'o'. This could be...""
Now those clients are displayed in red, and each other client matches the color of the AP it is associated to.","This finally fixes the previous terminal issue: ""existing clients not linked to AP in the top section become hidden when hitting 'o'. This could be...""
Now those clients are displayed in red, and each other client matches the color of the AP it is associated to.",True,{'THUMBS_UP': ['https://github.com/jakubpartyka']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2152,2020-06-07T20:30:15Z,2021-08-23T08:06:28Z,2021-08-23T08:06:29Z,MERGED,True,1,3,1,https://github.com/scorpius,Colorize airodump new bug fix,2,[],https://github.com/aircrack-ng/aircrack-ng/pull/2152,https://github.com/hixio-mh,2,https://github.com/aircrack-ng/aircrack-ng/pull/2152#issuecomment-645394782,"This finally fixes the previous terminal issue: ""existing clients not linked to AP in the top section become hidden when hitting 'o'. This could be...""
Now those clients are displayed in red, and each other client matches the color of the AP it is associated to.",Pull merged,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2153,2020-06-23T00:01:36Z,2020-06-23T00:29:35Z,2020-06-23T00:29:35Z,MERGED,True,2,2,1,https://github.com/cstml,UPDATE: corrected typo,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2153,https://github.com/cstml,1,https://github.com/aircrack-ng/aircrack-ng/pull/2153,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2155,2020-06-23T08:21:45Z,2020-07-03T07:12:48Z,2020-07-03T07:12:48Z,CLOSED,False,2,0,1,https://github.com/RafaelLeeImg,Fix a double-free problem of dev->iwpriv,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2155,https://github.com/RafaelLeeImg,1,https://github.com/aircrack-ng/aircrack-ng/pull/2155,"Details are described in:
#2154","Details are described in:
#2154",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2155,2020-06-23T08:21:45Z,2020-07-03T07:12:48Z,2020-07-03T07:12:48Z,CLOSED,False,2,0,1,https://github.com/RafaelLeeImg,Fix a double-free problem of dev->iwpriv,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2155,https://github.com/dmfreemon,2,https://github.com/aircrack-ng/aircrack-ng/pull/2155#issuecomment-648133256,"Details are described in:
#2154",See #2094 (from November 2019),True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2155,2020-06-23T08:21:45Z,2020-07-03T07:12:48Z,2020-07-03T07:12:48Z,CLOSED,False,2,0,1,https://github.com/RafaelLeeImg,Fix a double-free problem of dev->iwpriv,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2155,https://github.com/RafaelLeeImg,3,https://github.com/aircrack-ng/aircrack-ng/pull/2155#issuecomment-648266809,"Details are described in:
#2154","Thanks.
I saw that, actually the pointer not referring to a static array.
The free of iwpriv is required. It is not pointing to the element of the static array.
// aircrack-ng/lib/osdep/linux.c, line 1869
iwpriv = wiToolsPath(""iwpriv"");


// aircrack-ng/lib/osdep/linux.c, line 255
static char * wiToolsPath(const char * tool)
{
    static const char * paths[] = {""/sbin"",
                                   ...};
    for (i = 0; i < nbelems; i++)
    {
        path = searchInside(paths[i], tool);
        if (path != NULL) return path;
    }
}


// aircrack-ng/lib/osdep/linux.c, line 194
static char * searchInside(const char * dir, const char * filename)
{
    ...
    curfile = (char *) calloc(1, lentot);

    while (searching)
    {
        if (match)
        {
            // not freed here
            return curfile;
        }
    }

    (void) closedir(dp);
    // free only if curfile not return
    free(curfile);
    ...
}",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2155,2020-06-23T08:21:45Z,2020-07-03T07:12:48Z,2020-07-03T07:12:48Z,CLOSED,False,2,0,1,https://github.com/RafaelLeeImg,Fix a double-free problem of dev->iwpriv,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2155,https://github.com/dmfreemon,4,https://github.com/aircrack-ng/aircrack-ng/pull/2155#issuecomment-648287186,"Details are described in:
#2154","I saw that, actually the pointer not referring to a static array.

Looking at PR #2094 , there is a comment at the top of the wiToolsPath function in linux.c that says:  ""Note: The returned string is a new allocation from the heap.""
I believe you may be referring to a comment from someone else.

The free of iwpriv is required.

Are you sure that do_free() via linux_close..() doesn't take care of that free (after PR #2094 is applied)?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2155,2020-06-23T08:21:45Z,2020-07-03T07:12:48Z,2020-07-03T07:12:48Z,CLOSED,False,2,0,1,https://github.com/RafaelLeeImg,Fix a double-free problem of dev->iwpriv,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2155,https://github.com/RafaelLeeImg,5,https://github.com/aircrack-ng/aircrack-ng/pull/2155#issuecomment-648325296,"Details are described in:
#2154","The code I wrote above is only pseudo code describing the work flow, not from any file from project.
I checked #2094 , the way @dmfreemon deals with device pointer is consistent.
I think if that PR merges, the problem will be solved in a systematic method. Then my PR should be invalid and not required.
I will spend more time checking #2094",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2155,2020-06-23T08:21:45Z,2020-07-03T07:12:48Z,2020-07-03T07:12:48Z,CLOSED,False,2,0,1,https://github.com/RafaelLeeImg,Fix a double-free problem of dev->iwpriv,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2155,https://github.com/RafaelLeeImg,6,https://github.com/aircrack-ng/aircrack-ng/pull/2155#issuecomment-653391741,"Details are described in:
#2154",Same to #2094,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2159,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...","This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2159#issuecomment-655254943,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...","@Mister-X- Would you mind reviewing this PR, for possible merge?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/Mister-X-,3,https://github.com/aircrack-ng/aircrack-ng/pull/2159#issuecomment-657135862,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...","Looks great.
Just one question, why removing Fortify? In 6f11718",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/jbenden,4,https://github.com/aircrack-ng/aircrack-ng/pull/2159#issuecomment-657146987,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...","Thanks!
It was removed to fix macOS compilations (Travis CI). So this fact, along with most distributions choosing to enable this flag by default, led to a decision to just remove it - as opposed to excluding macOS.
Thoughts or a LGTM?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/jbenden,5,https://github.com/aircrack-ng/aircrack-ng/pull/2159#issuecomment-658953309,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...",@Mister-X- Thoughts or a vote for merge?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/neheb,6,https://github.com/aircrack-ng/aircrack-ng/pull/2159#issuecomment-659051797,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...",I hit this with OpenWrt as well as GCC10 is now available there.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/jbenden,7,https://github.com/aircrack-ng/aircrack-ng/pull/2159#issuecomment-659052445,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...","@neheb Did it compile without any warnings emitted? If not, please post the log. Thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2159,2020-07-07T00:53:11Z,2020-07-23T00:16:47Z,2020-07-23T00:16:48Z,MERGED,True,484,212,33,https://github.com/jbenden,Support for clean builds with GCC 10.,39,[],https://github.com/aircrack-ng/aircrack-ng/pull/2159,https://github.com/neheb,8,https://github.com/aircrack-ng/aircrack-ng/pull/2159#issuecomment-659057129,"This PR fixes the source code to compile cleanly on an x86-64 GCC10 compiler. It also fixes any source code warnings that were shown.
@Mister-X- On hold for a bit, need to run...","Well, I haven't tested this patchset. I only tried compiling aircrack-ng as is in the packages feed.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2165,2020-07-23T12:42:29Z,2020-07-24T00:09:20Z,2020-07-24T00:09:21Z,MERGED,True,1,1,1,https://github.com/elig0n,aireplay-ng manpage typo,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2165,https://github.com/elig0n,1,https://github.com/aircrack-ng/aircrack-ng/pull/2165,s/that/than/,s/that/than/,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2167,2020-07-26T13:59:21Z,,2021-08-23T03:07:51Z,OPEN,False,25,4,1,https://github.com/chinarulezzz,airodump-ng: add manufacturer column to the clients list,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2167,https://github.com/chinarulezzz,1,https://github.com/aircrack-ng/aircrack-ng/pull/2167,"Aircrack's airodump utility has an option --manufacturer:
--manufacturer : Display manufacturer from IEEE OUI list

Currently, it shows only AP (BSSID) manufacturer, but will be come in handy to see also connected stations manufacturer.
For example, sometimes due pentesting purposes is necessary to view stations manufacturer and to not disconnecting all clients from the AP, but only one/two/etc (the most vulnerable from the point of view of Social Engineering).
For example.
Before patching:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            XXX,XXXXX,XXXXXX
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43

After:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Manufacturer                    Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            Hon Hai Precision Ind. Co.,Ltd. XXX,XXXXX,XXXXXX

 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43           Liteon Technology Corporation

This PR adds manufacturer column to the clients list. It shows STATION's manufacturer.
Kind Regards,
A.","Aircrack's airodump utility has an option --manufacturer:
--manufacturer : Display manufacturer from IEEE OUI list

Currently, it shows only AP (BSSID) manufacturer, but will be come in handy to see also connected stations manufacturer.
For example, sometimes due pentesting purposes is necessary to view stations manufacturer and to not disconnecting all clients from the AP, but only one/two/etc (the most vulnerable from the point of view of Social Engineering).
For example.
Before patching:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            XXX,XXXXX,XXXXXX
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43

After:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Manufacturer                    Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            Hon Hai Precision Ind. Co.,Ltd. XXX,XXXXX,XXXXXX

 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43           Liteon Technology Corporation

This PR adds manufacturer column to the clients list. It shows STATION's manufacturer.
Kind Regards,
A.",True,"{'THUMBS_UP': ['https://github.com/elig0n', 'https://github.com/Osmiogrzesznik', 'https://github.com/thienandangthanh']}"
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2167,2020-07-26T13:59:21Z,,2021-08-23T03:07:51Z,OPEN,False,25,4,1,https://github.com/chinarulezzz,airodump-ng: add manufacturer column to the clients list,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2167,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2167#issuecomment-664070499,"Aircrack's airodump utility has an option --manufacturer:
--manufacturer : Display manufacturer from IEEE OUI list

Currently, it shows only AP (BSSID) manufacturer, but will be come in handy to see also connected stations manufacturer.
For example, sometimes due pentesting purposes is necessary to view stations manufacturer and to not disconnecting all clients from the AP, but only one/two/etc (the most vulnerable from the point of view of Social Engineering).
For example.
Before patching:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            XXX,XXXXX,XXXXXX
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43

After:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Manufacturer                    Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            Hon Hai Precision Ind. Co.,Ltd. XXX,XXXXX,XXXXXX

 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43           Liteon Technology Corporation

This PR adds manufacturer column to the clients list. It shows STATION's manufacturer.
Kind Regards,
A.",Could you fix the codestyle issues pointed by Travis?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2167,2020-07-26T13:59:21Z,,2021-08-23T03:07:51Z,OPEN,False,25,4,1,https://github.com/chinarulezzz,airodump-ng: add manufacturer column to the clients list,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2167,https://github.com/chinarulezzz,3,https://github.com/aircrack-ng/aircrack-ng/pull/2167#issuecomment-664458887,"Aircrack's airodump utility has an option --manufacturer:
--manufacturer : Display manufacturer from IEEE OUI list

Currently, it shows only AP (BSSID) manufacturer, but will be come in handy to see also connected stations manufacturer.
For example, sometimes due pentesting purposes is necessary to view stations manufacturer and to not disconnecting all clients from the AP, but only one/two/etc (the most vulnerable from the point of view of Social Engineering).
For example.
Before patching:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            XXX,XXXXX,XXXXXX
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43

After:
 BSSID             STATION            PWR    Rate   Lost  Frames Notes Manufacturer                    Probes
 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -54    0 - 0e  0     1            Hon Hai Precision Ind. Co.,Ltd. XXX,XXXXX,XXXXXX

 XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -38    0 - 0e  155   43           Liteon Technology Corporation

This PR adds manufacturer column to the clients list. It shows STATION's manufacturer.
Kind Regards,
A.","Done.
Sorry for the delay, I built clang locally on my current netbook to make sure I fixed it correctly :)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2168,2020-07-27T21:50:29Z,,2022-03-22T21:11:30Z,OPEN,False,21,1,2,https://github.com/elig0n,airodump-ng: Sort by uptime,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2168,https://github.com/elig0n,1,https://github.com/aircrack-ng/aircrack-ng/pull/2168,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2170,2020-07-28T21:47:23Z,2020-08-04T18:51:11Z,2020-08-04T18:51:11Z,MERGED,True,82,5,8,https://github.com/jbenden,aircrack-ng: Fix replay counter logic,3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2170,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2170,"According to 802.11i-2004, the replay counter is set in the first EAPOL message and matched in the second EAPOL message (or recovered from M2).
The third message must have a replay counter value larger than was used in the M1/M2 sequence.
And the final, fourth EAPOL message must match against the third.
See: https://en.wikipedia.org/wiki/IEEE_802.11i-2004
GH: #2169
Signed-off-by: Joseph Benden joe@benden.us","According to 802.11i-2004, the replay counter is set in the first EAPOL message and matched in the second EAPOL message (or recovered from M2).
The third message must have a replay counter value larger than was used in the M1/M2 sequence.
And the final, fourth EAPOL message must match against the third.
See: https://en.wikipedia.org/wiki/IEEE_802.11i-2004
GH: #2169
Signed-off-by: Joseph Benden joe@benden.us",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2171,2020-07-29T18:13:26Z,,2021-08-23T03:07:51Z,OPEN,False,22,0,2,https://github.com/elig0n,Introduce Home & End keys to AP keyboard navigation,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2171,https://github.com/elig0n,1,https://github.com/aircrack-ng/aircrack-ng/pull/2171,,,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2174,2020-08-18T19:04:15Z,2020-10-31T17:00:20Z,2020-10-31T17:00:20Z,MERGED,True,1665,1391,71,https://github.com/jbenden,Build using `-pedantic`; in Autoconf maintainer mode,66,[],https://github.com/aircrack-ng/aircrack-ng/pull/2174,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2174,"This patch series goes through the source code to enable builds, without warnings or errors, under the strictness of -pedantic compiler flag. Additionally, some of the shell scripts were fixed with shellcheck.
This patch series introduces the selection of a C++ standard (non-required) to assess the availability across the CI infrastructure.
This patch series fixes the great majority of outstanding PVS-Studio warnings.
Finally, and most important for other developers, is that we all must enable maintainer mode during our development; pass --enable-maintainer-mode to the configure script. This Autoconf flag is what enables the -pedantic warnings.","This patch series goes through the source code to enable builds, without warnings or errors, under the strictness of -pedantic compiler flag. Additionally, some of the shell scripts were fixed with shellcheck.
This patch series introduces the selection of a C++ standard (non-required) to assess the availability across the CI infrastructure.
This patch series fixes the great majority of outstanding PVS-Studio warnings.
Finally, and most important for other developers, is that we all must enable maintainer mode during our development; pass --enable-maintainer-mode to the configure script. This Autoconf flag is what enables the -pedantic warnings.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2174,2020-08-18T19:04:15Z,2020-10-31T17:00:20Z,2020-10-31T17:00:20Z,MERGED,True,1665,1391,71,https://github.com/jbenden,Build using `-pedantic`; in Autoconf maintainer mode,66,[],https://github.com/aircrack-ng/aircrack-ng/pull/2174,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2174#issuecomment-678845070,"This patch series goes through the source code to enable builds, without warnings or errors, under the strictness of -pedantic compiler flag. Additionally, some of the shell scripts were fixed with shellcheck.
This patch series introduces the selection of a C++ standard (non-required) to assess the availability across the CI infrastructure.
This patch series fixes the great majority of outstanding PVS-Studio warnings.
Finally, and most important for other developers, is that we all must enable maintainer mode during our development; pass --enable-maintainer-mode to the configure script. This Autoconf flag is what enables the -pedantic warnings.","Could you document the new configure flag (--enable-maintainer-mode) in README.md and INSTALLING?
Could you update the case of PCRE to make it uppercase in besside-ng usage?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2174,2020-08-18T19:04:15Z,2020-10-31T17:00:20Z,2020-10-31T17:00:20Z,MERGED,True,1665,1391,71,https://github.com/jbenden,Build using `-pedantic`; in Autoconf maintainer mode,66,[],https://github.com/aircrack-ng/aircrack-ng/pull/2174,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2174#issuecomment-678917339,"This patch series goes through the source code to enable builds, without warnings or errors, under the strictness of -pedantic compiler flag. Additionally, some of the shell scripts were fixed with shellcheck.
This patch series introduces the selection of a C++ standard (non-required) to assess the availability across the CI infrastructure.
This patch series fixes the great majority of outstanding PVS-Studio warnings.
Finally, and most important for other developers, is that we all must enable maintainer mode during our development; pass --enable-maintainer-mode to the configure script. This Autoconf flag is what enables the -pedantic warnings.","On 8/23/20 5:15 PM, Aircrack-ng wrote:

 Could you document the new configure flag (|--enable-maintainer-mode|)
 in README.md and INSTALLING?

 Could you update the case of PCRE to make it uppercase in besside-ng
 usage?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#2174 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AAASAJ6UFUVACRCJRVI3QQDSCGWK7ANCNFSM4QD6KITA>.

I have just published additional commits which tackle these items.

Let me know if I missed something.

Suggestions, comments, and ideas are always welcomed,
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2174,2020-08-18T19:04:15Z,2020-10-31T17:00:20Z,2020-10-31T17:00:20Z,MERGED,True,1665,1391,71,https://github.com/jbenden,Build using `-pedantic`; in Autoconf maintainer mode,66,[],https://github.com/aircrack-ng/aircrack-ng/pull/2174,https://github.com/jbenden,4,https://github.com/aircrack-ng/aircrack-ng/pull/2174#issuecomment-686799068,"This patch series goes through the source code to enable builds, without warnings or errors, under the strictness of -pedantic compiler flag. Additionally, some of the shell scripts were fixed with shellcheck.
This patch series introduces the selection of a C++ standard (non-required) to assess the availability across the CI infrastructure.
This patch series fixes the great majority of outstanding PVS-Studio warnings.
Finally, and most important for other developers, is that we all must enable maintainer mode during our development; pass --enable-maintainer-mode to the configure script. This Autoconf flag is what enables the -pedantic warnings.",@Mister-X- Would you mind reviewing this for a merge to the master branch?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2177,2020-08-25T23:25:29Z,,2021-08-23T03:07:51Z,OPEN,False,170,160,1,https://github.com/beansrus,airbase: fix beacon interval timing,1,"['bug', '#airbase-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2177,https://github.com/beansrus,1,https://github.com/aircrack-ng/aircrack-ng/pull/2177,"Hello.  This pull request tries to fix up some of the beacon timing in airbase that I came across.  Please let me know if there is anything I need to fixup to be accepted.

The current implementation had a few problems.

the beacons timing would not scale correctly for multiple ssids.  If
the time was 100 ms, and 5 ssids were beaconing, each ssid would beacon
every 500ms instead of every 100ms.
The beacon timing would drift after some time.
The gettimeofday() is affected by discontinuous jumps in the system
time (NTP adjustments and such).
the rtc code seemed to over complicate the timing code.  Beacon
frames are usually 100ms.  A timer that takes into account small
amounts of jitter should be sufficient for beacon timing.

Tested with 50 ssids, on a ARMv7 @ 400mhz and didn't have any problem
keeping up.  I saw jitter somewhere between 400us-1.5ms","Hello.  This pull request tries to fix up some of the beacon timing in airbase that I came across.  Please let me know if there is anything I need to fixup to be accepted.

The current implementation had a few problems.

the beacons timing would not scale correctly for multiple ssids.  If
the time was 100 ms, and 5 ssids were beaconing, each ssid would beacon
every 500ms instead of every 100ms.
The beacon timing would drift after some time.
The gettimeofday() is affected by discontinuous jumps in the system
time (NTP adjustments and such).
the rtc code seemed to over complicate the timing code.  Beacon
frames are usually 100ms.  A timer that takes into account small
amounts of jitter should be sufficient for beacon timing.

Tested with 50 ssids, on a ARMv7 @ 400mhz and didn't have any problem
keeping up.  I saw jitter somewhere between 400us-1.5ms",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2177,2020-08-25T23:25:29Z,,2021-08-23T03:07:51Z,OPEN,False,170,160,1,https://github.com/beansrus,airbase: fix beacon interval timing,1,"['bug', '#airbase-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2177,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2177#issuecomment-723514827,"Hello.  This pull request tries to fix up some of the beacon timing in airbase that I came across.  Please let me know if there is anything I need to fixup to be accepted.

The current implementation had a few problems.

the beacons timing would not scale correctly for multiple ssids.  If
the time was 100 ms, and 5 ssids were beaconing, each ssid would beacon
every 500ms instead of every 100ms.
The beacon timing would drift after some time.
The gettimeofday() is affected by discontinuous jumps in the system
time (NTP adjustments and such).
the rtc code seemed to over complicate the timing code.  Beacon
frames are usually 100ms.  A timer that takes into account small
amounts of jitter should be sufficient for beacon timing.

Tested with 50 ssids, on a ARMv7 @ 400mhz and didn't have any problem
keeping up.  I saw jitter somewhere between 400us-1.5ms","Hi,
Would you mind rebasing on top of the lastest master branch?
Thanks!
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2186,2020-09-23T13:08:25Z,2020-10-31T18:17:02Z,2020-10-31T18:17:02Z,MERGED,True,2,0,1,https://github.com/dracode,fixes double free() reported in #2185,1,"['bug', '#osdep']",https://github.com/aircrack-ng/aircrack-ng/pull/2186,https://github.com/dracode,1,https://github.com/aircrack-ng/aircrack-ng/pull/2186,"When CONFIG_LIBNL is defined, iwpriv is free()d in do_linux_open and also in linux_close.
This fix will prevent the free() in do_linux_open if CONFIG_LIBNL is not defined, preventing the double free.
This fixes the issue reported in #2185","When CONFIG_LIBNL is defined, iwpriv is free()d in do_linux_open and also in linux_close.
This fix will prevent the free() in do_linux_open if CONFIG_LIBNL is not defined, preventing the double free.
This fixes the issue reported in #2185",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2193,2020-10-28T20:44:11Z,2020-10-31T19:11:40Z,2020-10-31T19:11:40Z,MERGED,True,50,4,1,https://github.com/pect0ral,Support ALL Channels for 5GHz - ported from @moonrk,1,"['bug', '#besside-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2193,https://github.com/pect0ral,1,https://github.com/aircrack-ng/aircrack-ng/pull/2193,"Ported changes proposed by @moonrk to support and detect all channels in Auto-Channel mode against current latest code.
Tested working with AWUS036ACH and working great!","Ported changes proposed by @moonrk to support and detect all channels in Auto-Channel mode against current latest code.
Tested working with AWUS036ACH and working great!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2193,2020-10-28T20:44:11Z,2020-10-31T19:11:40Z,2020-10-31T19:11:40Z,MERGED,True,50,4,1,https://github.com/pect0ral,Support ALL Channels for 5GHz - ported from @moonrk,1,"['bug', '#besside-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2193,https://github.com/pect0ral,2,https://github.com/aircrack-ng/aircrack-ng/pull/2193#issuecomment-718288309,"Ported changes proposed by @moonrk to support and detect all channels in Auto-Channel mode against current latest code.
Tested working with AWUS036ACH and working great!","This should fix issue #1795 and #1796 -- I've updated the code from @moonrk to fit the latest code base.
This PR specifically targets besside-ng, and nothing else. Builds clean.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2194,2020-11-06T17:16:15Z,2020-11-07T05:30:58Z,2020-11-07T05:30:58Z,MERGED,True,1,1,1,https://github.com/brunoR500,Fix session saving time,1,"['#aircrack-ng', '#manpages']",https://github.com/aircrack-ng/aircrack-ng/pull/2194,https://github.com/brunoR500,1,https://github.com/aircrack-ng/aircrack-ng/pull/2194,"Version 1.6 saves every 10 minutes instead of 5 minutes.
This is also documented on the aircrack-ng.org cracking session website.","Version 1.6 saves every 10 minutes instead of 5 minutes.
This is also documented on the aircrack-ng.org cracking session website.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2194,2020-11-06T17:16:15Z,2020-11-07T05:30:58Z,2020-11-07T05:30:58Z,MERGED,True,1,1,1,https://github.com/brunoR500,Fix session saving time,1,"['#aircrack-ng', '#manpages']",https://github.com/aircrack-ng/aircrack-ng/pull/2194,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2194#issuecomment-723394911,"Version 1.6 saves every 10 minutes instead of 5 minutes.
This is also documented on the aircrack-ng.org cracking session website.",Thanks!,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2195,2020-11-06T21:25:52Z,2020-11-07T18:47:51Z,2020-11-07T18:47:51Z,MERGED,True,76,35,5,https://github.com/jbenden,fix(aircrack-ng): multiple size definitions,1,"['bug', '#aircrack-ng']",https://github.com/aircrack-ng/aircrack-ng/pull/2195,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2195,"Use the type size_t for all large, unsigned values.
Have Autoconf determine and attempt to fix a size mismatch
between the C and C++ compilers, for the off_t type.
Moved a magic number to a definition.
Switch from fseek to fseeko.

Fixes: #2192
Signed-off-by: Joseph Benden joe@benden.us","Use the type size_t for all large, unsigned values.
Have Autoconf determine and attempt to fix a size mismatch
between the C and C++ compilers, for the off_t type.
Moved a magic number to a definition.
Switch from fseek to fseeko.

Fixes: #2192
Signed-off-by: Joseph Benden joe@benden.us",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2196,2020-11-14T13:35:42Z,2020-11-15T00:16:02Z,2020-11-15T00:19:13Z,CLOSED,False,177,106,2,https://github.com/matssoderhall,"Fixed issue causing ""No such BSSID available."" on higher 5GHz-channels",1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2196,https://github.com/matssoderhall,1,https://github.com/aircrack-ng/aircrack-ng/pull/2196,"If the normal channel-tag does not exist we look for channel-info in the HT-info.
Also, made some changes that i hope will make it easier to understand what is happening in the code.","If the normal channel-tag does not exist we look for channel-info in the HT-info.
Also, made some changes that i hope will make it easier to understand what is happening in the code.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2196,2020-11-14T13:35:42Z,2020-11-15T00:16:02Z,2020-11-15T00:19:13Z,CLOSED,False,177,106,2,https://github.com/matssoderhall,"Fixed issue causing ""No such BSSID available."" on higher 5GHz-channels",1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2196,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2196#issuecomment-727285440,"If the normal channel-tag does not exist we look for channel-info in the HT-info.
Also, made some changes that i hope will make it easier to understand what is happening in the code.","Thanks for your submission! After some successful local testing, I've committed a modified version of your change; fixing some spelling mistakes and single-character test logic.
Thanks again,
-Joe",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2199,2020-12-06T17:47:04Z,2020-12-06T20:53:42Z,2020-12-06T20:53:42Z,MERGED,True,1,1,1,https://github.com/samueloph,"Fix ""genration"" typo",1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2199,https://github.com/samueloph,1,https://github.com/aircrack-ng/aircrack-ng/pull/2199,Small typo picked by lintian while packaging the latest snapshot of this git repo on Debian,Small typo picked by lintian while packaging the latest snapshot of this git repo on Debian,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2206,2020-12-25T21:59:42Z,2021-05-29T17:42:34Z,2021-05-29T17:42:34Z,CLOSED,False,117,38,4,https://github.com/mehw,"airgraph-ng, airdrop-ng: add ability to parse ESSIDs containing commas from .csv files",3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2206,https://github.com/mehw,1,https://github.com/aircrack-ng/aircrack-ng/pull/2206,"Hello,
Here I propose some amendments to allow airgraph-ng and airdrop-ng to parse ESSIDs containing commas from .csv files.
Summary of bugs found

airgraph-ng ... -g CAPR: entries with an ESSID containing commas in its name being discarded.
airgraph-ng ... -g CPG: Probed ESSIDs are truncated when their name contains commas.

See bottom about the dump-01.txt test file (aka dump-01.csv).
Description
Calling airgraph-ng ... -g CAPR I could see entries with an ESSID containing commas in its name being discarded. This is due to requirements/processing in airgraphviz/libDumpParse.py (which are in airdrop/libDumpParse.py too):

The entry with the offending ESSID is read from the csv-comma-separated file;
the read entry is then comma-split (string_list = entry.split(','));
the number of fields are expected to be 15 or 11 (if len(string_list) == 15 or if len(string_list) == 11);
an ESSID containing commas may exceed the number of expected fields or even give corrupted values (think of an entry of 11 fields, where the ESSID contains enough commas to produce 15 fields when it is comma-split, the resulting 15-fields holds corrupted values).

See also #1707 as reference (the author commented about a cap-01.csv comma-related problem...).
There's also a problem calling airgraph-ng ... -g CPG. The Probed ESSIDs are truncated when their name contains commas. This is due to string_list = entry.split(','). Since probed ESSID names are comma separated, you could easily see how a name containing commas is split (like this is, my ap is split into this is and my ap).
Solution
I made some changes to {airgraphviz,airdrop}/libDumpParse.py and airodump-ng/dump_write.c to address the problems described above. In the former there's some regex used to determine the ESSID position in the entry, and in the latter each ESSID probe wrote in the .csv file (aka Probed ESSIDs) is preceded by its length. The ESSID length is used to grab the whole ESSID name without exception (there's also a fallback on entry.split(',') fields for .csv files that are in the old or wrong format):

this is, my ap ESSID name should not be discarded when producing a CAPR.
name with , comma ESSID probe should not be truncated when producing a CPG.
AP entries may end with the previous format ""lan_ip, essid"" (one space after the comma).
AP entries may end with the current format ""essid_length, essid, key"" (one space after the comma).
Probed ESSIDs should follow the NEW FORMAT ""essid_length,essid[,...]"" (no spaces after the comma).

Tests
The file dump-01.txt is conceived to test the amendments.
PS: I renamed dump-01.csv to dump-01.txt, because .csv files cannot currently be attached to posts.
$ airgraph-ng -i dump-01.txt -o dump-01-cpg.png -g CPG
$ airgraph-ng -i dump-01.txt -o dump-01-capr.png -g CAPR

Let me know what you think.
Thanks!","Hello,
Here I propose some amendments to allow airgraph-ng and airdrop-ng to parse ESSIDs containing commas from .csv files.
Summary of bugs found

airgraph-ng ... -g CAPR: entries with an ESSID containing commas in its name being discarded.
airgraph-ng ... -g CPG: Probed ESSIDs are truncated when their name contains commas.

See bottom about the dump-01.txt test file (aka dump-01.csv).
Description
Calling airgraph-ng ... -g CAPR I could see entries with an ESSID containing commas in its name being discarded. This is due to requirements/processing in airgraphviz/libDumpParse.py (which are in airdrop/libDumpParse.py too):

The entry with the offending ESSID is read from the csv-comma-separated file;
the read entry is then comma-split (string_list = entry.split(','));
the number of fields are expected to be 15 or 11 (if len(string_list) == 15 or if len(string_list) == 11);
an ESSID containing commas may exceed the number of expected fields or even give corrupted values (think of an entry of 11 fields, where the ESSID contains enough commas to produce 15 fields when it is comma-split, the resulting 15-fields holds corrupted values).

See also #1707 as reference (the author commented about a cap-01.csv comma-related problem...).
There's also a problem calling airgraph-ng ... -g CPG. The Probed ESSIDs are truncated when their name contains commas. This is due to string_list = entry.split(','). Since probed ESSID names are comma separated, you could easily see how a name containing commas is split (like this is, my ap is split into this is and my ap).
Solution
I made some changes to {airgraphviz,airdrop}/libDumpParse.py and airodump-ng/dump_write.c to address the problems described above. In the former there's some regex used to determine the ESSID position in the entry, and in the latter each ESSID probe wrote in the .csv file (aka Probed ESSIDs) is preceded by its length. The ESSID length is used to grab the whole ESSID name without exception (there's also a fallback on entry.split(',') fields for .csv files that are in the old or wrong format):

this is, my ap ESSID name should not be discarded when producing a CAPR.
name with , comma ESSID probe should not be truncated when producing a CPG.
AP entries may end with the previous format ""lan_ip, essid"" (one space after the comma).
AP entries may end with the current format ""essid_length, essid, key"" (one space after the comma).
Probed ESSIDs should follow the NEW FORMAT ""essid_length,essid[,...]"" (no spaces after the comma).

Tests
The file dump-01.txt is conceived to test the amendments.
PS: I renamed dump-01.csv to dump-01.txt, because .csv files cannot currently be attached to posts.
$ airgraph-ng -i dump-01.txt -o dump-01-cpg.png -g CPG
$ airgraph-ng -i dump-01.txt -o dump-01-capr.png -g CAPR

Let me know what you think.
Thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2206,2020-12-25T21:59:42Z,2021-05-29T17:42:34Z,2021-05-29T17:42:34Z,CLOSED,False,117,38,4,https://github.com/mehw,"airgraph-ng, airdrop-ng: add ability to parse ESSIDs containing commas from .csv files",3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2206,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2206#issuecomment-848395146,"Hello,
Here I propose some amendments to allow airgraph-ng and airdrop-ng to parse ESSIDs containing commas from .csv files.
Summary of bugs found

airgraph-ng ... -g CAPR: entries with an ESSID containing commas in its name being discarded.
airgraph-ng ... -g CPG: Probed ESSIDs are truncated when their name contains commas.

See bottom about the dump-01.txt test file (aka dump-01.csv).
Description
Calling airgraph-ng ... -g CAPR I could see entries with an ESSID containing commas in its name being discarded. This is due to requirements/processing in airgraphviz/libDumpParse.py (which are in airdrop/libDumpParse.py too):

The entry with the offending ESSID is read from the csv-comma-separated file;
the read entry is then comma-split (string_list = entry.split(','));
the number of fields are expected to be 15 or 11 (if len(string_list) == 15 or if len(string_list) == 11);
an ESSID containing commas may exceed the number of expected fields or even give corrupted values (think of an entry of 11 fields, where the ESSID contains enough commas to produce 15 fields when it is comma-split, the resulting 15-fields holds corrupted values).

See also #1707 as reference (the author commented about a cap-01.csv comma-related problem...).
There's also a problem calling airgraph-ng ... -g CPG. The Probed ESSIDs are truncated when their name contains commas. This is due to string_list = entry.split(','). Since probed ESSID names are comma separated, you could easily see how a name containing commas is split (like this is, my ap is split into this is and my ap).
Solution
I made some changes to {airgraphviz,airdrop}/libDumpParse.py and airodump-ng/dump_write.c to address the problems described above. In the former there's some regex used to determine the ESSID position in the entry, and in the latter each ESSID probe wrote in the .csv file (aka Probed ESSIDs) is preceded by its length. The ESSID length is used to grab the whole ESSID name without exception (there's also a fallback on entry.split(',') fields for .csv files that are in the old or wrong format):

this is, my ap ESSID name should not be discarded when producing a CAPR.
name with , comma ESSID probe should not be truncated when producing a CPG.
AP entries may end with the previous format ""lan_ip, essid"" (one space after the comma).
AP entries may end with the current format ""essid_length, essid, key"" (one space after the comma).
Probed ESSIDs should follow the NEW FORMAT ""essid_length,essid[,...]"" (no spaces after the comma).

Tests
The file dump-01.txt is conceived to test the amendments.
PS: I renamed dump-01.csv to dump-01.txt, because .csv files cannot currently be attached to posts.
$ airgraph-ng -i dump-01.txt -o dump-01-cpg.png -g CPG
$ airgraph-ng -i dump-01.txt -o dump-01-capr.png -g CAPR

Let me know what you think.
Thanks!","Actually, the issue starts in airodump-ng, who should escape the SSID if it contains a comma, according to the Wikipedia page about CSV
Basically, the whole field need to be enclosed with double quotes. So an ESSID of test, should be ""test,"". And if there is a double quote in there, it should be escaped as well with a double quote, test,"" should become ""test,"""""". Same goes if there is a line break.
However, we might have another problem as there apparently shouldn't be a space character between the comma and the start of the field. Which means, we should check other wireless tools making use of this CSV and see how they handle it, and discuss the appropriate way to fix this.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2206,2020-12-25T21:59:42Z,2021-05-29T17:42:34Z,2021-05-29T17:42:34Z,CLOSED,False,117,38,4,https://github.com/mehw,"airgraph-ng, airdrop-ng: add ability to parse ESSIDs containing commas from .csv files",3,[],https://github.com/aircrack-ng/aircrack-ng/pull/2206,https://github.com/aircrack-ng,3,https://github.com/aircrack-ng/aircrack-ng/pull/2206#issuecomment-850871189,"Hello,
Here I propose some amendments to allow airgraph-ng and airdrop-ng to parse ESSIDs containing commas from .csv files.
Summary of bugs found

airgraph-ng ... -g CAPR: entries with an ESSID containing commas in its name being discarded.
airgraph-ng ... -g CPG: Probed ESSIDs are truncated when their name contains commas.

See bottom about the dump-01.txt test file (aka dump-01.csv).
Description
Calling airgraph-ng ... -g CAPR I could see entries with an ESSID containing commas in its name being discarded. This is due to requirements/processing in airgraphviz/libDumpParse.py (which are in airdrop/libDumpParse.py too):

The entry with the offending ESSID is read from the csv-comma-separated file;
the read entry is then comma-split (string_list = entry.split(','));
the number of fields are expected to be 15 or 11 (if len(string_list) == 15 or if len(string_list) == 11);
an ESSID containing commas may exceed the number of expected fields or even give corrupted values (think of an entry of 11 fields, where the ESSID contains enough commas to produce 15 fields when it is comma-split, the resulting 15-fields holds corrupted values).

See also #1707 as reference (the author commented about a cap-01.csv comma-related problem...).
There's also a problem calling airgraph-ng ... -g CPG. The Probed ESSIDs are truncated when their name contains commas. This is due to string_list = entry.split(','). Since probed ESSID names are comma separated, you could easily see how a name containing commas is split (like this is, my ap is split into this is and my ap).
Solution
I made some changes to {airgraphviz,airdrop}/libDumpParse.py and airodump-ng/dump_write.c to address the problems described above. In the former there's some regex used to determine the ESSID position in the entry, and in the latter each ESSID probe wrote in the .csv file (aka Probed ESSIDs) is preceded by its length. The ESSID length is used to grab the whole ESSID name without exception (there's also a fallback on entry.split(',') fields for .csv files that are in the old or wrong format):

this is, my ap ESSID name should not be discarded when producing a CAPR.
name with , comma ESSID probe should not be truncated when producing a CPG.
AP entries may end with the previous format ""lan_ip, essid"" (one space after the comma).
AP entries may end with the current format ""essid_length, essid, key"" (one space after the comma).
Probed ESSIDs should follow the NEW FORMAT ""essid_length,essid[,...]"" (no spaces after the comma).

Tests
The file dump-01.txt is conceived to test the amendments.
PS: I renamed dump-01.csv to dump-01.txt, because .csv files cannot currently be attached to posts.
$ airgraph-ng -i dump-01.txt -o dump-01-cpg.png -g CPG
$ airgraph-ng -i dump-01.txt -o dump-01-capr.png -g CAPR

Let me know what you think.
Thanks!","Let's close this as it needs to be fixed differently.
However, that is a well written/structured (Summary of bugs found, Description, Solution, Tests) PR.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2213,2021-01-05T18:18:24Z,2021-08-23T08:03:04Z,2021-12-19T22:34:34Z,MERGED,True,11,0,1,https://github.com/Grimler91,byteorder.h: add section for android,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2213,https://github.com/Grimler91,1,https://github.com/aircrack-ng/aircrack-ng/pull/2213,Fixes some warnings about macros being re-defined.,Fixes some warnings about macros being re-defined.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2213,2021-01-05T18:18:24Z,2021-08-23T08:03:04Z,2021-12-19T22:34:34Z,MERGED,True,11,0,1,https://github.com/Grimler91,byteorder.h: add section for android,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2213,https://github.com/kimocoder,2,https://github.com/aircrack-ng/aircrack-ng/pull/2213#issuecomment-762088827,Fixes some warnings about macros being re-defined.,@Mister-X- This commit made my 2020 🥇,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2220,2021-01-23T00:53:40Z,2021-07-04T19:21:13Z,2021-07-04T19:21:55Z,MERGED,True,265,250,11,https://github.com/jbenden,Add support for VS Code's devcontainers + pre-commit,5,['enhancement'],https://github.com/aircrack-ng/aircrack-ng/pull/2220,https://github.com/jbenden,1,https://github.com/aircrack-ng/aircrack-ng/pull/2220,"This PR brings in support for Visual Studio Code & Github Codespaces. This makes developing a breeze, as all the tools are pre-configured!
This PR was developed to help me; as well as provide help to all those whom have asked for help in setting up a development environment.","This PR brings in support for Visual Studio Code & Github Codespaces. This makes developing a breeze, as all the tools are pre-configured!
This PR was developed to help me; as well as provide help to all those whom have asked for help in setting up a development environment.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2220,2021-01-23T00:53:40Z,2021-07-04T19:21:13Z,2021-07-04T19:21:55Z,MERGED,True,265,250,11,https://github.com/jbenden,Add support for VS Code's devcontainers + pre-commit,5,['enhancement'],https://github.com/aircrack-ng/aircrack-ng/pull/2220,https://github.com/Mister-X-,2,https://github.com/aircrack-ng/aircrack-ng/pull/2220#issuecomment-774562260,"This PR brings in support for Visual Studio Code & Github Codespaces. This makes developing a breeze, as all the tools are pre-configured!
This PR was developed to help me; as well as provide help to all those whom have asked for help in setting up a development environment.","Looks good. The conflicts with .gitignore need to be resolved, and then it can be merged.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2220,2021-01-23T00:53:40Z,2021-07-04T19:21:13Z,2021-07-04T19:21:55Z,MERGED,True,265,250,11,https://github.com/jbenden,Add support for VS Code's devcontainers + pre-commit,5,['enhancement'],https://github.com/aircrack-ng/aircrack-ng/pull/2220,https://github.com/jbenden,3,https://github.com/aircrack-ng/aircrack-ng/pull/2220#issuecomment-873647182,"This PR brings in support for Visual Studio Code & Github Codespaces. This makes developing a breeze, as all the tools are pre-configured!
This PR was developed to help me; as well as provide help to all those whom have asked for help in setting up a development environment.",Here's an article about using this sort of workflow.,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2238,2021-05-10T17:15:15Z,2021-05-29T17:49:25Z,2021-05-29T17:49:25Z,MERGED,True,2,1,1,https://github.com/n0w1re,airodump-ng: fix dropping of Management frames with zeroed timestamp,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2238,https://github.com/n0w1re,1,https://github.com/aircrack-ng/aircrack-ng/pull/2238,"Management frames like Beacons and Probe Responses that have a zeroed timestamp in their Fixed Parameters are wrongfully dropped.
This PR fixes this by making sure

only frames of type Data will be checked for Null LLC and dropped if necessary,
non-Data frames having zeroed fields at the respective position will be processed as expected.

This PR fixes #2237
A test case is included in linked issue.","Management frames like Beacons and Probe Responses that have a zeroed timestamp in their Fixed Parameters are wrongfully dropped.
This PR fixes this by making sure

only frames of type Data will be checked for Null LLC and dropped if necessary,
non-Data frames having zeroed fields at the respective position will be processed as expected.

This PR fixes #2237
A test case is included in linked issue.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2239,2021-05-17T20:09:21Z,2021-05-18T20:02:27Z,2021-05-18T20:02:27Z,CLOSED,False,14,55,1,https://github.com/ShadowwLol,Updated syntax and slight optimization,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2239,https://github.com/ShadowwLol,1,https://github.com/aircrack-ng/aircrack-ng/pull/2239,"Updated syntax and slight optimization
By using the ternary operators, we get a much more simple syntax aswell as a performance boost.","Updated syntax and slight optimization
By using the ternary operators, we get a much more simple syntax aswell as a performance boost.",True,{'EYES': ['https://github.com/binarymaster']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2239,2021-05-17T20:09:21Z,2021-05-18T20:02:27Z,2021-05-18T20:02:27Z,CLOSED,False,14,55,1,https://github.com/ShadowwLol,Updated syntax and slight optimization,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2239,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2239#issuecomment-842616579,"Updated syntax and slight optimization
By using the ternary operators, we get a much more simple syntax aswell as a performance boost.",Could you elaborate on the performace boost?,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2239,2021-05-17T20:09:21Z,2021-05-18T20:02:27Z,2021-05-18T20:02:27Z,CLOSED,False,14,55,1,https://github.com/ShadowwLol,Updated syntax and slight optimization,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2239,https://github.com/HBelusca,3,https://github.com/aircrack-ng/aircrack-ng/pull/2239#issuecomment-842617775,"Updated syntax and slight optimization
By using the ternary operators, we get a much more simple syntax aswell as a performance boost.",It seems to compile much faster as well 🤣🤣,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2239,2021-05-17T20:09:21Z,2021-05-18T20:02:27Z,2021-05-18T20:02:27Z,CLOSED,False,14,55,1,https://github.com/ShadowwLol,Updated syntax and slight optimization,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2239,https://github.com/aircrack-ng,4,https://github.com/aircrack-ng/aircrack-ng/pull/2239#issuecomment-842632921,"Updated syntax and slight optimization
By using the ternary operators, we get a much more simple syntax aswell as a performance boost.","It failed compiling. You can get the details by looking at the buildbot output. Here is an excerpt:
  CC       src/aireplay-ng/aireplay_ng-aireplay-ng.o
In file included from src/aireplay-ng/aireplay-ng.c:76:
src/aireplay-ng/aireplay-ng.c: In function ‘do_attack_arp_resend’:
/buildbot/local-kali-worker/aircrack-ng-kali/build/include/aircrack-ng/defs.h:43:2: error: expected expression before ‘do’
   43 |  do                                                                         \
      |  ^~
src/aireplay-ng/aireplay-ng.c:1668:95: note: in expansion of macro ‘ALLEGE’
 1668 |  (opt.ringbuffer) ? arp = (struct ARP_req *) malloc(opt.ringbuffer * sizeof(struct ARP_req)), ALLEGE(arp != NULL)
      |                                                                                               ^~~~~~",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2249,2021-07-18T10:33:27Z,2021-07-18T19:10:02Z,2021-07-18T19:10:02Z,CLOSED,False,1,1,1,https://github.com/v45145,Update INSTALLING,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2249,https://github.com/v45145,1,https://github.com/aircrack-ng/aircrack-ng/pull/2249,plugin info,plugin info,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2249,2021-07-18T10:33:27Z,2021-07-18T19:10:02Z,2021-07-18T19:10:02Z,CLOSED,False,1,1,1,https://github.com/v45145,Update INSTALLING,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2249,https://github.com/aircrack-ng,2,https://github.com/aircrack-ng/aircrack-ng/pull/2249#issuecomment-882103844,plugin info,"While it probably should (and that would be a PR by itself), airoscript isn't installed with with that flag, so this PR will be closed.
Dependencies are listed in the README of the individual directories (airdrop-ng, airgraph-ng, and versuck-ng). Adding that information (not each of the dependencies but a sentence similar to the previous sentence) in the README.md is acceptable.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2262,2021-08-25T11:55:42Z,2021-08-25T20:00:20Z,2021-08-25T20:00:20Z,MERGED,True,19,19,1,https://github.com/sbrun,convert airodump-join to Python 3,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2262,https://github.com/sbrun,1,https://github.com/aircrack-ng/aircrack-ng/pull/2262,"Use print() instead of print
Fix indentation errors (inconsistent use of tabs and spaces in indentation)","Use print() instead of print
Fix indentation errors (inconsistent use of tabs and spaces in indentation)",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2273,2021-11-03T22:24:30Z,2021-11-05T19:33:25Z,2021-11-05T19:33:26Z,MERGED,True,2,2,1,https://github.com/prash42135,added Wi-Fi 6E 6GHz channels,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2273,https://github.com/prash42135,1,https://github.com/aircrack-ng/aircrack-ng/pull/2273,"Can be used to capture 6GHz using Intel AX210 as:
sudo airmon-ng check kill
sudo airmon-ng start wlan1
sudo airodump-ng wlan1mon -w 6E_test -C 6115
is tested and working in:
Ubuntu 20.04.3 LTS
Linux Kernel 5.15.0-051500-generic","Can be used to capture 6GHz using Intel AX210 as:
sudo airmon-ng check kill
sudo airmon-ng start wlan1
sudo airodump-ng wlan1mon -w 6E_test -C 6115
is tested and working in:
Ubuntu 20.04.3 LTS
Linux Kernel 5.15.0-051500-generic",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2273,2021-11-03T22:24:30Z,2021-11-05T19:33:25Z,2021-11-05T19:33:26Z,MERGED,True,2,2,1,https://github.com/prash42135,added Wi-Fi 6E 6GHz channels,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2273,https://github.com/ZeroChaos-,2,https://github.com/aircrack-ng/aircrack-ng/pull/2273#issuecomment-960362908,"Can be used to capture 6GHz using Intel AX210 as:
sudo airmon-ng check kill
sudo airmon-ng start wlan1
sudo airodump-ng wlan1mon -w 6E_test -C 6115
is tested and working in:
Ubuntu 20.04.3 LTS
Linux Kernel 5.15.0-051500-generic",#2205,True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2273,2021-11-03T22:24:30Z,2021-11-05T19:33:25Z,2021-11-05T19:33:26Z,MERGED,True,2,2,1,https://github.com/prash42135,added Wi-Fi 6E 6GHz channels,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2273,https://github.com/ZeroChaos-,3,https://github.com/aircrack-ng/aircrack-ng/pull/2273#issuecomment-960363238,"Can be used to capture 6GHz using Intel AX210 as:
sudo airmon-ng check kill
sudo airmon-ng start wlan1
sudo airodump-ng wlan1mon -w 6E_test -C 6115
is tested and working in:
Ubuntu 20.04.3 LTS
Linux Kernel 5.15.0-051500-generic","This seems fine to me, but I'll wait for @Mister-X- to approve it, probably.",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2273,2021-11-03T22:24:30Z,2021-11-05T19:33:25Z,2021-11-05T19:33:26Z,MERGED,True,2,2,1,https://github.com/prash42135,added Wi-Fi 6E 6GHz channels,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2273,https://github.com/ZeroChaos-,4,https://github.com/aircrack-ng/aircrack-ng/pull/2273#issuecomment-962165150,"Can be used to capture 6GHz using Intel AX210 as:
sudo airmon-ng check kill
sudo airmon-ng start wlan1
sudo airodump-ng wlan1mon -w 6E_test -C 6115
is tested and working in:
Ubuntu 20.04.3 LTS
Linux Kernel 5.15.0-051500-generic","This only extends ""-C 0"" support but it is the right change so, accepted.  Thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2275,2021-11-06T17:22:38Z,,2022-03-19T14:28:23Z,OPEN,False,1,1,1,https://github.com/ParadoxInfinite,fix(besside-ng): bad beacon error,4,[],https://github.com/aircrack-ng/aircrack-ng/pull/2275,https://github.com/ParadoxInfinite,1,https://github.com/aircrack-ng/aircrack-ng/pull/2275,"The initial value for buf was 2048 in 
  
    
      aircrack-ng/src/besside-ng/besside-ng.c
    
    
         Line 2612
      in
      8e55278
    
  
  
    

        
          
           unsigned char buf[2048]; 
        
    
  


However, in b8828cb, it was changed to 
  
    
      aircrack-ng/src/besside-ng/besside-ng.c
    
    
         Line 2606
      in
      b8828cb
    
  
  
    

        
          
           unsigned char buf[sizeof(struct ieee80211_frame) * 8]; 
        
    
  


This causes the check if (totlen < l) goto __bad; in line 1848 of besside-ng.c become true as totlen is derived from the sizeof(*wh), which in turn is dependent on buf.
The size of ieee80211_frame is 24, so 24 * 32 still only results in 768, not 2048. I've tested this to be working with * 16 as well, but as a tradeoff between future possibility and memory conservation, I settled on 32.
Let me know if I should increase/decrease the value.

Fixes: #2268
Fixes: #2203","The initial value for buf was 2048 in 
  
    
      aircrack-ng/src/besside-ng/besside-ng.c
    
    
         Line 2612
      in
      8e55278
    
  
  
    

        
          
           unsigned char buf[2048]; 
        
    
  


However, in b8828cb, it was changed to 
  
    
      aircrack-ng/src/besside-ng/besside-ng.c
    
    
         Line 2606
      in
      b8828cb
    
  
  
    

        
          
           unsigned char buf[sizeof(struct ieee80211_frame) * 8]; 
        
    
  


This causes the check if (totlen < l) goto __bad; in line 1848 of besside-ng.c become true as totlen is derived from the sizeof(*wh), which in turn is dependent on buf.
The size of ieee80211_frame is 24, so 24 * 32 still only results in 768, not 2048. I've tested this to be working with * 16 as well, but as a tradeoff between future possibility and memory conservation, I settled on 32.
Let me know if I should increase/decrease the value.

Fixes: #2268
Fixes: #2203",True,"{'THUMBS_UP': ['https://github.com/themustafaomar'], 'HOORAY': ['https://github.com/themustafaomar']}"
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2275,2021-11-06T17:22:38Z,,2022-03-19T14:28:23Z,OPEN,False,1,1,1,https://github.com/ParadoxInfinite,fix(besside-ng): bad beacon error,4,[],https://github.com/aircrack-ng/aircrack-ng/pull/2275,https://github.com/ParadoxInfinite,2,https://github.com/aircrack-ng/aircrack-ng/pull/2275#issuecomment-971940427,"The initial value for buf was 2048 in 
  
    
      aircrack-ng/src/besside-ng/besside-ng.c
    
    
         Line 2612
      in
      8e55278
    
  
  
    

        
          
           unsigned char buf[2048]; 
        
    
  


However, in b8828cb, it was changed to 
  
    
      aircrack-ng/src/besside-ng/besside-ng.c
    
    
         Line 2606
      in
      b8828cb
    
  
  
    

        
          
           unsigned char buf[sizeof(struct ieee80211_frame) * 8]; 
        
    
  


This causes the check if (totlen < l) goto __bad; in line 1848 of besside-ng.c become true as totlen is derived from the sizeof(*wh), which in turn is dependent on buf.
The size of ieee80211_frame is 24, so 24 * 32 still only results in 768, not 2048. I've tested this to be working with * 16 as well, but as a tradeoff between future possibility and memory conservation, I settled on 32.
Let me know if I should increase/decrease the value.

Fixes: #2268
Fixes: #2203","@aircrack-ng Hey, sorry for the ping, but could you take a look at this please? I think there are a couple of other places where the memory allocation could be lower(causing bad beacon issue, but this is the major one), I'll update them as well if this looks good. What do you think would be the right value?",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2277,2021-11-08T18:27:38Z,,2021-12-01T18:20:44Z,OPEN,False,32,3,1,https://github.com/n0w1re,airodump-ng: fix hang on quit while GPSD is down or no device messages appear,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2277,https://github.com/n0w1re,1,https://github.com/aircrack-ng/aircrack-ng/pull/2277,"When airodump-ng is exiting, the main thread waits for the gps thread to finnish when the exit flag is set.
If GPSD is not delivering any message to the connected socket, that thread hangs in a blocking recv call until some data is received, possibly indefinitely so the program doesn't exit.
Fix:

a select waits for available data on the socket before recv is called
when the select timeouts every 500ms the global exit flag is checked
both code paths for newer JSON based and old non-JSON based GPSD are fixed

This PR fixes #2276","When airodump-ng is exiting, the main thread waits for the gps thread to finnish when the exit flag is set.
If GPSD is not delivering any message to the connected socket, that thread hangs in a blocking recv call until some data is received, possibly indefinitely so the program doesn't exit.
Fix:

a select waits for available data on the socket before recv is called
when the select timeouts every 500ms the global exit flag is checked
both code paths for newer JSON based and old non-JSON based GPSD are fixed

This PR fixes #2276",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2277,2021-11-08T18:27:38Z,,2021-12-01T18:20:44Z,OPEN,False,32,3,1,https://github.com/n0w1re,airodump-ng: fix hang on quit while GPSD is down or no device messages appear,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2277,https://github.com/jbenden,2,https://github.com/aircrack-ng/aircrack-ng/pull/2277#issuecomment-963520827,"When airodump-ng is exiting, the main thread waits for the gps thread to finnish when the exit flag is set.
If GPSD is not delivering any message to the connected socket, that thread hangs in a blocking recv call until some data is received, possibly indefinitely so the program doesn't exit.
Fix:

a select waits for available data on the socket before recv is called
when the select timeouts every 500ms the global exit flag is checked
both code paths for newer JSON based and old non-JSON based GPSD are fixed

This PR fixes #2276","Hi, could you please rebase from master and push PR again? Changes were made to fix macOS and the PVS-Studio analyzer. Thanks!",True,{'THUMBS_UP': ['https://github.com/n0w1re']}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2286,2021-11-25T17:30:31Z,2021-11-25T18:45:43Z,2021-11-25T18:45:43Z,MERGED,True,1,0,1,https://github.com/floppym,airodump-ng: look for oui.txt in /usr/share/hwdata,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2286,https://github.com/floppym,1,https://github.com/aircrack-ng/aircrack-ng/pull/2286,"This location is used by the hwdata package on various distros.
https://github.com/vcrhonek/hwdata","This location is used by the hwdata package on various distros.
https://github.com/vcrhonek/hwdata",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2286,2021-11-25T17:30:31Z,2021-11-25T18:45:43Z,2021-11-25T18:45:43Z,MERGED,True,1,0,1,https://github.com/floppym,airodump-ng: look for oui.txt in /usr/share/hwdata,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2286,https://github.com/ZeroChaos-,2,https://github.com/aircrack-ng/aircrack-ng/pull/2286#issuecomment-979420638,"This location is used by the hwdata package on various distros.
https://github.com/vcrhonek/hwdata","ACK, thanks!",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2298,2022-03-13T15:45:45Z,2022-03-13T18:41:05Z,2022-03-13T18:41:06Z,MERGED,True,1,1,1,https://github.com/itzsimplysurya,Back ticks removed,1,[],https://github.com/aircrack-ng/aircrack-ng/pull/2298,https://github.com/itzsimplysurya,1,https://github.com/aircrack-ng/aircrack-ng/pull/2298,"Hey there,
Removed the backticks from the arch Linux install command. Although nothing wrong will happen because of the backticks just in case noobs copy-paste it.
Thank you","Hey there,
Removed the backticks from the arch Linux install command. Although nothing wrong will happen because of the backticks just in case noobs copy-paste it.
Thank you",True,{}
aircrack-ng/aircrack-ng,https://github.com/aircrack-ng/aircrack-ng,2310,2022-04-30T20:24:06Z,2022-05-02T23:34:41Z,2022-05-02T23:34:42Z,MERGED,True,1,1,1,https://github.com/ffontaine,lib/crypto/crypto.c: fx build with libressl >= 3.5.0,1,['bug'],https://github.com/aircrack-ng/aircrack-ng/pull/2310,https://github.com/ffontaine,1,https://github.com/aircrack-ng/aircrack-ng/pull/2310,"Fix the following build failure with libressl >= 3.5.0:
lib/crypto/crypto.c: In function 'calc_mic':
lib/crypto/crypto.c:203:2: error: variable 'ctx' has initializer but incomplete type
  203 |  HMAC_CTX ctx = {0};
      |  ^~~~~~~~

Fixes:

http://autobuild.buildroot.org/results/d8444dada84a54205273ac627d3e4f4692a55364

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Fix the following build failure with libressl >= 3.5.0:
lib/crypto/crypto.c: In function 'calc_mic':
lib/crypto/crypto.c:203:2: error: variable 'ctx' has initializer but incomplete type
  203 |  HMAC_CTX ctx = {0};
      |  ^~~~~~~~

Fixes:

http://autobuild.buildroot.org/results/d8444dada84a54205273ac627d3e4f4692a55364

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
