djcb/mu,https://github.com/djcb/mu,813,2016-03-05T18:02:34Z,2016-03-15T05:42:24Z,2016-03-15T05:42:32Z,MERGED,True,2,2,1,https://github.com/jsitnicki,Update calls to mu:get-parts after name change,1,[],https://github.com/djcb/mu/pull/813,https://github.com/jsitnicki,1,https://github.com/djcb/mu/pull/813,"In commit 8e3fbe3 mu:get-parts was renamed to mu:c:get-parts but
get-parts method was not updated. Fix it.","In commit 8e3fbe3 mu:get-parts was renamed to mu:c:get-parts but
get-parts method was not updated. Fix it.",True,{}
djcb/mu,https://github.com/djcb/mu,813,2016-03-05T18:02:34Z,2016-03-15T05:42:24Z,2016-03-15T05:42:32Z,MERGED,True,2,2,1,https://github.com/jsitnicki,Update calls to mu:get-parts after name change,1,[],https://github.com/djcb/mu/pull/813,https://github.com/djcb,2,https://github.com/djcb/mu/pull/813#issuecomment-196674655,"In commit 8e3fbe3 mu:get-parts was renamed to mu:c:get-parts but
get-parts method was not updated. Fix it.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,816,2016-03-14T15:13:55Z,2016-03-14T20:38:12Z,2016-03-14T20:38:28Z,MERGED,True,1,1,1,https://github.com/j-hao,mu4e: quote user-full-name according to rfc822 when construct from field,1,[],https://github.com/djcb/mu/pull/816,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/816,"If user-full-name is set to this format: Last Name, First Name, without proper quotation, SMTP will use Last Name for from field which is wrong.","If user-full-name is set to this format: Last Name, First Name, without proper quotation, SMTP will use Last Name for from field which is wrong.",True,{}
djcb/mu,https://github.com/djcb/mu,816,2016-03-14T15:13:55Z,2016-03-14T20:38:12Z,2016-03-14T20:38:28Z,MERGED,True,1,1,1,https://github.com/j-hao,mu4e: quote user-full-name according to rfc822 when construct from field,1,[],https://github.com/djcb/mu/pull/816,https://github.com/djcb,2,https://github.com/djcb/mu/pull/816#issuecomment-196511778,"If user-full-name is set to this format: Last Name, First Name, without proper quotation, SMTP will use Last Name for from field which is wrong.","Looks goods, merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,820,2016-03-21T22:16:39Z,2016-04-26T17:13:07Z,2016-04-26T17:43:33Z,MERGED,True,15,4,1,https://github.com/tmalsburg,Mu4e: Added missing menu items.,1,[],https://github.com/djcb/mu/pull/820,https://github.com/tmalsburg,1,https://github.com/djcb/mu/pull/820,Menu items for threading and include-related in header view.,Menu items for threading and include-related in header view.,True,{}
djcb/mu,https://github.com/djcb/mu,820,2016-03-21T22:16:39Z,2016-04-26T17:13:07Z,2016-04-26T17:43:33Z,MERGED,True,15,4,1,https://github.com/tmalsburg,Mu4e: Added missing menu items.,1,[],https://github.com/djcb/mu/pull/820,https://github.com/djcb,2,https://github.com/djcb/mu/pull/820#issuecomment-200185322,Menu items for threading and include-related in header view.,"Oh, what would be even nicer to have the items shown as toggles - ie., like some of the items in the emacs ""Options"" menu. Can you do that?",True,{}
djcb/mu,https://github.com/djcb/mu,820,2016-03-21T22:16:39Z,2016-04-26T17:13:07Z,2016-04-26T17:43:33Z,MERGED,True,15,4,1,https://github.com/tmalsburg,Mu4e: Added missing menu items.,1,[],https://github.com/djcb/mu/pull/820,https://github.com/tmalsburg,3,https://github.com/djcb/mu/pull/820#issuecomment-200200641,Menu items for threading and include-related in header view.,I'll find out how to do it.  But I won't be able to work on it until the end of next week.,True,{}
djcb/mu,https://github.com/djcb/mu,820,2016-03-21T22:16:39Z,2016-04-26T17:13:07Z,2016-04-26T17:43:33Z,MERGED,True,15,4,1,https://github.com/tmalsburg,Mu4e: Added missing menu items.,1,[],https://github.com/djcb/mu/pull/820,https://github.com/tmalsburg,4,https://github.com/djcb/mu/pull/820#issuecomment-200203271,Menu items for threading and include-related in header view.,"Wait, this is easy.  I'll amend the PR.",True,{}
djcb/mu,https://github.com/djcb/mu,820,2016-03-21T22:16:39Z,2016-04-26T17:13:07Z,2016-04-26T17:43:33Z,MERGED,True,15,4,1,https://github.com/tmalsburg,Mu4e: Added missing menu items.,1,[],https://github.com/djcb/mu/pull/820,https://github.com/tmalsburg,5,https://github.com/djcb/mu/pull/820#issuecomment-200206333,Menu items for threading and include-related in header view.,"Ok, I updated the PR.",True,{}
djcb/mu,https://github.com/djcb/mu,820,2016-03-21T22:16:39Z,2016-04-26T17:13:07Z,2016-04-26T17:43:33Z,MERGED,True,15,4,1,https://github.com/tmalsburg,Mu4e: Added missing menu items.,1,[],https://github.com/djcb/mu/pull/820,https://github.com/djcb,6,https://github.com/djcb/mu/pull/820#issuecomment-214815274,Menu items for threading and include-related in header view.,Finally merged this -- sorry for the delay. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,820,2016-03-21T22:16:39Z,2016-04-26T17:13:07Z,2016-04-26T17:43:33Z,MERGED,True,15,4,1,https://github.com/tmalsburg,Mu4e: Added missing menu items.,1,[],https://github.com/djcb/mu/pull/820,https://github.com/tmalsburg,7,https://github.com/djcb/mu/pull/820#issuecomment-214824300,Menu items for threading and include-related in header view.,"No problem, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,821,2016-03-22T10:00:26Z,2016-03-23T05:12:59Z,2016-03-23T05:12:59Z,CLOSED,False,1,1,1,https://github.com/hinrik,Align table of marks in docs,1,[],https://github.com/djcb/mu/pull/821,https://github.com/hinrik,1,https://github.com/djcb/mu/pull/821,Small aesthetic fix.,Small aesthetic fix.,True,{}
djcb/mu,https://github.com/djcb/mu,821,2016-03-22T10:00:26Z,2016-03-23T05:12:59Z,2016-03-23T05:12:59Z,CLOSED,False,1,1,1,https://github.com/hinrik,Align table of marks in docs,1,[],https://github.com/djcb/mu/pull/821,https://github.com/djcb,2,https://github.com/djcb/mu/pull/821#issuecomment-200185149,Small aesthetic fix.,"Ah, thanks for noticing. There's should be a + at the beginning, but I've fixed the table.",True,{}
djcb/mu,https://github.com/djcb/mu,831,2016-04-16T15:19:31Z,2016-05-07T09:27:46Z,2016-05-07T09:27:53Z,MERGED,True,49,6,5,https://github.com/j-hao,Handle attached images when write msg body to html,2,[],https://github.com/djcb/mu/pull/831,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/831,This will make view in browse works with attached images,This will make view in browse works with attached images,True,{}
djcb/mu,https://github.com/djcb/mu,831,2016-04-16T15:19:31Z,2016-05-07T09:27:46Z,2016-05-07T09:27:53Z,MERGED,True,49,6,5,https://github.com/j-hao,Handle attached images when write msg body to html,2,[],https://github.com/djcb/mu/pull/831,https://github.com/djcb,2,https://github.com/djcb/mu/pull/831#issuecomment-217534308,This will make view in browse works with attached images,"Looks good, but the ""cid"" in ""each_part"" must be g_free'd.
I actually noticed that some of the other variables need freeing as well, so I've updated the code.",True,{}
djcb/mu,https://github.com/djcb/mu,831,2016-04-16T15:19:31Z,2016-05-07T09:27:46Z,2016-05-07T09:27:53Z,MERGED,True,49,6,5,https://github.com/j-hao,Handle attached images when write msg body to html,2,[],https://github.com/djcb/mu/pull/831,https://github.com/j-hao,3,https://github.com/djcb/mu/pull/831#issuecomment-217595796,This will make view in browse works with attached images,Updated to g_free cid,True,{}
djcb/mu,https://github.com/djcb/mu,831,2016-04-16T15:19:31Z,2016-05-07T09:27:46Z,2016-05-07T09:27:53Z,MERGED,True,49,6,5,https://github.com/j-hao,Handle attached images when write msg body to html,2,[],https://github.com/djcb/mu/pull/831,https://github.com/djcb,4,https://github.com/djcb/mu/pull/831#issuecomment-217622441,This will make view in browse works with attached images,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,832,2016-04-19T07:48:42Z,2016-04-26T17:12:11Z,2016-04-26T17:12:21Z,MERGED,True,1,1,1,https://github.com/jsrjenkins,Fix minor typo on line 1486,1,[],https://github.com/djcb/mu/pull/832,https://github.com/jsrjenkins,1,https://github.com/djcb/mu/pull/832,Fixing the small typo which caused cosmetic errors in the Editor View Section.,Fixing the small typo which caused cosmetic errors in the Editor View Section.,True,{}
djcb/mu,https://github.com/djcb/mu,832,2016-04-19T07:48:42Z,2016-04-26T17:12:11Z,2016-04-26T17:12:21Z,MERGED,True,1,1,1,https://github.com/jsrjenkins,Fix minor typo on line 1486,1,[],https://github.com/djcb/mu/pull/832,https://github.com/djcb,2,https://github.com/djcb/mu/pull/832#issuecomment-214814982,Fixing the small typo which caused cosmetic errors in the Editor View Section.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/odi,1,https://github.com/djcb/mu/pull/833,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.","I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",True,"{'THUMBS_UP': ['https://github.com/Chris00', 'https://github.com/jlombera', 'https://github.com/xuhdev', 'https://github.com/antoine-levitt', 'https://github.com/peterwvj', 'https://github.com/jboyens']}"
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/davidcsterratt,2,https://github.com/djcb/mu/pull/833#issuecomment-263254237,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.","Thanks for the work, odi. This would be a feature I would like to see.",True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/Ambrevar,3,https://github.com/djcb/mu/pull/833#issuecomment-388893802,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",Anything blocking a merge?,True,{'THUMBS_UP': ['https://github.com/progfolio']}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/antoine-levitt,4,https://github.com/djcb/mu/pull/833#issuecomment-397529143,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",+1 for a merge!,True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/antoine-levitt,5,https://github.com/djcb/mu/pull/833#issuecomment-860438194,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.","Can you explain the close? It looks like this is something quite a few people want, and I don't think it's implemented in master?",True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/djcb,6,https://github.com/djcb/mu/pull/833#issuecomment-860530929,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",It's obsolete for the gnus-based view.,True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/antoine-levitt,7,https://github.com/djcb/mu/pull/833#issuecomment-860532333,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",Is the old view going to be removed in future versions then? I like it better (and don't want to take the time to configure the gnus view to my liking),True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/djcb,8,https://github.com/djcb/mu/pull/833#issuecomment-860578641,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",Yes.,True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/antoine-levitt,9,https://github.com/djcb/mu/pull/833#issuecomment-860579882,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",:(,True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/Chris00,10,https://github.com/djcb/mu/pull/833#issuecomment-860583116,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.",@antoine-levitt What don't you like in the Gnus based view?  It supports many messages that were improperly decoded by the old version.,True,{}
djcb/mu,https://github.com/djcb/mu,833,2016-04-19T14:26:20Z,2021-06-12T15:36:16Z,2021-06-14T12:21:40Z,CLOSED,False,8,1,2,https://github.com/odi,Add new face for subject in mu4e-view,2,[],https://github.com/djcb/mu/pull/833,https://github.com/antoine-levitt,11,https://github.com/djcb/mu/pull/833#issuecomment-860640598,"I would like to have a different face for the subject line in the mu4e-view.
This adds a new face for the subject in the mu4e-view. The default configuration inherits from mu4e-header-value-face, that means that there is no visual difference to the old configuration.","Oh it's fine but I don't like the faces and it messes up with my hardwired patterns. More generally I feel like mu4e is breaking a lot of stuff and it's taking a lot of my energy to try to keep up - it's nice to see it move forward, but it does take time to adapt.",True,{}
djcb/mu,https://github.com/djcb/mu,834,2016-04-19T18:30:58Z,2016-04-26T17:10:33Z,2016-04-26T17:10:44Z,MERGED,True,21,4,1,https://github.com/Chris00,Add spam-filtering functions suitable for the view mode,2,[],https://github.com/djcb/mu/pull/834,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/834,In mu4e-contrib there were spam-filtering functions suitable for the headers mode but not for the view mode.  This alleviate this asymmetry...,In mu4e-contrib there were spam-filtering functions suitable for the headers mode but not for the view mode.  This alleviate this asymmetry...,True,{}
djcb/mu,https://github.com/djcb/mu,834,2016-04-19T18:30:58Z,2016-04-26T17:10:33Z,2016-04-26T17:10:44Z,MERGED,True,21,4,1,https://github.com/Chris00,Add spam-filtering functions suitable for the view mode,2,[],https://github.com/djcb/mu/pull/834,https://github.com/djcb,2,https://github.com/djcb/mu/pull/834#issuecomment-214814501,In mu4e-contrib there were spam-filtering functions suitable for the headers mode but not for the view mode.  This alleviate this asymmetry...,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,841,2016-05-03T15:08:58Z,2016-05-06T19:12:19Z,2016-05-06T19:12:26Z,MERGED,True,1,1,1,https://github.com/liweitianux,"Only ignore the ""/mu/mu"" executable",1,[],https://github.com/djcb/mu/pull/841,https://github.com/liweitianux,1,https://github.com/djcb/mu/pull/841,"Currently the whole directory ""/mu"" are ignored, thus we have to force git to track the files in that directory.","Currently the whole directory ""/mu"" are ignored, thus we have to force git to track the files in that directory.",True,{}
djcb/mu,https://github.com/djcb/mu,841,2016-05-03T15:08:58Z,2016-05-06T19:12:19Z,2016-05-06T19:12:26Z,MERGED,True,1,1,1,https://github.com/liweitianux,"Only ignore the ""/mu/mu"" executable",1,[],https://github.com/djcb/mu/pull/841,https://github.com/djcb,2,https://github.com/djcb/mu/pull/841#issuecomment-217533229,"Currently the whole directory ""/mu"" are ignored, thus we have to force git to track the files in that directory.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,842,2016-05-06T00:39:24Z,2016-05-29T17:36:42Z,2016-05-29T17:36:42Z,CLOSED,False,7,5,1,https://github.com/Chris00,Remove the backup file of a draft message when sending it,2,[],https://github.com/djcb/mu/pull/842,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/842,"Fixes #837
The solution is a bit unsatisfactory because it only removes the most recent backup file (while one would like to remove all associated backups to the file) but it works well in practice.","Fixes #837
The solution is a bit unsatisfactory because it only removes the most recent backup file (while one would like to remove all associated backups to the file) but it works well in practice.",True,{}
djcb/mu,https://github.com/djcb/mu,842,2016-05-06T00:39:24Z,2016-05-29T17:36:42Z,2016-05-29T17:36:42Z,CLOSED,False,7,5,1,https://github.com/Chris00,Remove the backup file of a draft message when sending it,2,[],https://github.com/djcb/mu/pull/842,https://github.com/djcb,2,https://github.com/djcb/mu/pull/842#issuecomment-219272906,"Fixes #837
The solution is a bit unsatisfactory because it only removes the most recent backup file (while one would like to remove all associated backups to the file) but it works well in practice.","I think backup of e-mail message can be treated like other files and honor emacs settings for that, I'd be a bit hesitant to work around that.
The only things is the question where it keeps those backups/auto-saves; you might want to set backup-directory-alist and auto-save-file-name-transforms for that.",True,{}
djcb/mu,https://github.com/djcb/mu,842,2016-05-06T00:39:24Z,2016-05-29T17:36:42Z,2016-05-29T17:36:42Z,CLOSED,False,7,5,1,https://github.com/Chris00,Remove the backup file of a draft message when sending it,2,[],https://github.com/djcb/mu/pull/842,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/842#issuecomment-219275555,"Fixes #837
The solution is a bit unsatisfactory because it only removes the most recent backup file (while one would like to remove all associated backups to the file) but it works well in practice.","honor emacs settings for that, I'd be a bit hesitant to work around that.

I agree that the above proposed solution is not the ideal one but the difference here with other buffers is that Emacs will remove the underlying file upon sending the email (thus, if mu4e is responsible for the existence of the file, shouldn't it also be responsible for its siblings?).  Maybe one way out is to create the auto-save and backup files for draft files into the trash folder (maybe prefixing them with draft-)?",True,{}
djcb/mu,https://github.com/djcb/mu,844,2016-05-06T14:15:08Z,2016-05-09T20:08:44Z,2016-05-14T13:41:59Z,MERGED,True,78,12,2,https://github.com/Chris00,Compose mails with format=flowed by default,6,[],https://github.com/djcb/mu/pull/844,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/844,"The default is expressed by the variable mu4e-compose-format-flowed, so it is easy to change.  However, given the variety of devices people use to read mails, I've considered that a format that respect that is better (however some important services — gmail, github — do not understand format=flowed so maybe we want the ""long lines"" mode to be the default).","The default is expressed by the variable mu4e-compose-format-flowed, so it is easy to change.  However, given the variety of devices people use to read mails, I've considered that a format that respect that is better (however some important services — gmail, github — do not understand format=flowed so maybe we want the ""long lines"" mode to be the default).",True,{}
djcb/mu,https://github.com/djcb/mu,844,2016-05-06T14:15:08Z,2016-05-09T20:08:44Z,2016-05-14T13:41:59Z,MERGED,True,78,12,2,https://github.com/Chris00,Compose mails with format=flowed by default,6,[],https://github.com/djcb/mu/pull/844,https://github.com/djcb,2,https://github.com/djcb/mu/pull/844#issuecomment-217536867,"The default is expressed by the variable mu4e-compose-format-flowed, so it is easy to change.  However, given the variety of devices people use to read mails, I've considered that a format that respect that is better (however some important services — gmail, github — do not understand format=flowed so maybe we want the ""long lines"" mode to be the default).","Looks good -- but could you add a little update for the manual as well? (mu4e.texi). There's an existing FAQ about that, so I suppose you could simply update that. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,844,2016-05-06T14:15:08Z,2016-05-09T20:08:44Z,2016-05-14T13:41:59Z,MERGED,True,78,12,2,https://github.com/Chris00,Compose mails with format=flowed by default,6,[],https://github.com/djcb/mu/pull/844,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/844#issuecomment-217594543,"The default is expressed by the variable mu4e-compose-format-flowed, so it is easy to change.  However, given the variety of devices people use to read mails, I've considered that a format that respect that is better (however some important services — gmail, github — do not understand format=flowed so maybe we want the ""long lines"" mode to be the default).","I wonder whether M-q shouldn't unwrap paragraphs into a single line regardless of the values of use-hard-newlines.  Or maybe, when use-hard-newlines evals to false, M-q should be something like compact-uncompact-block?",True,{}
djcb/mu,https://github.com/djcb/mu,844,2016-05-06T14:15:08Z,2016-05-09T20:08:44Z,2016-05-14T13:41:59Z,MERGED,True,78,12,2,https://github.com/Chris00,Compose mails with format=flowed by default,6,[],https://github.com/djcb/mu/pull/844,https://github.com/djcb,4,https://github.com/djcb/mu/pull/844#issuecomment-217622994,"The default is expressed by the variable mu4e-compose-format-flowed, so it is easy to change.  However, given the variety of devices people use to read mails, I've considered that a format that respect that is better (however some important services — gmail, github — do not understand format=flowed so maybe we want the ""long lines"" mode to be the default).","One more change request -- at least for now, I'd like to have mu4e-compose-format-flowed default to nil.
format=flowed is a behavioral change that makes things work less well in some common cases (like gmail), and I'd like to avoid unpleasantyl surprising users.",True,{}
djcb/mu,https://github.com/djcb/mu,844,2016-05-06T14:15:08Z,2016-05-09T20:08:44Z,2016-05-14T13:41:59Z,MERGED,True,78,12,2,https://github.com/Chris00,Compose mails with format=flowed by default,6,[],https://github.com/djcb/mu/pull/844,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/844#issuecomment-217648221,"The default is expressed by the variable mu4e-compose-format-flowed, so it is easy to change.  However, given the variety of devices people use to read mails, I've considered that a format that respect that is better (however some important services — gmail, github — do not understand format=flowed so maybe we want the ""long lines"" mode to be the default).",Done.,True,{}
djcb/mu,https://github.com/djcb/mu,844,2016-05-06T14:15:08Z,2016-05-09T20:08:44Z,2016-05-14T13:41:59Z,MERGED,True,78,12,2,https://github.com/Chris00,Compose mails with format=flowed by default,6,[],https://github.com/djcb/mu/pull/844,https://github.com/djcb,6,https://github.com/djcb/mu/pull/844#issuecomment-217974416,"The default is expressed by the variable mu4e-compose-format-flowed, so it is easy to change.  However, given the variety of devices people use to read mails, I've considered that a format that respect that is better (however some important services — gmail, github — do not understand format=flowed so maybe we want the ""long lines"" mode to be the default).",Thanks -- merged!,True,{}
djcb/mu,https://github.com/djcb/mu,845,2016-05-06T19:45:33Z,2016-06-29T16:00:52Z,2016-06-29T16:00:52Z,CLOSED,False,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/845,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/845,"This avoids prompting the user over and over if the directory hasn't
changed.","This avoids prompting the user over and over if the directory hasn't
changed.",True,{}
djcb/mu,https://github.com/djcb/mu,845,2016-05-06T19:45:33Z,2016-06-29T16:00:52Z,2016-06-29T16:00:52Z,CLOSED,False,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/845,https://github.com/djcb,2,https://github.com/djcb/mu/pull/845#issuecomment-217622616,"This avoids prompting the user over and over if the directory hasn't
changed.","Ah, looks useful -- but can you quote the paths passed to the shell, ie. shell-quote-argument? And MSG doesn't need quoting in the docstring. Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,845,2016-05-06T19:45:33Z,2016-06-29T16:00:52Z,2016-06-29T16:00:52Z,CLOSED,False,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/845,https://github.com/stsquad,3,https://github.com/djcb/mu/pull/845#issuecomment-229403257,"This avoids prompting the user over and over if the directory hasn't
changed.",I've submitted a new pull request with the update and another fix.,True,{}
djcb/mu,https://github.com/djcb/mu,847,2016-05-10T19:59:18Z,2016-05-14T12:15:07Z,2016-05-14T13:41:12Z,MERGED,True,9,0,1,https://github.com/Chris00,Add a menu entry to attach captured messages,1,[],https://github.com/djcb/mu/pull/847,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/847,"Without this menu entry, one has to remember the command name which is
not convenient.  This entry also helps to discover the ""capture"" feature.","Without this menu entry, one has to remember the command name which is
not convenient.  This entry also helps to discover the ""capture"" feature.",True,{}
djcb/mu,https://github.com/djcb/mu,847,2016-05-10T19:59:18Z,2016-05-14T12:15:07Z,2016-05-14T13:41:12Z,MERGED,True,9,0,1,https://github.com/Chris00,Add a menu entry to attach captured messages,1,[],https://github.com/djcb/mu/pull/847,https://github.com/djcb,2,https://github.com/djcb/mu/pull/847#issuecomment-219217156,"Without this menu entry, one has to remember the command name which is
not convenient.  This entry also helps to discover the ""capture"" feature.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,848,2016-05-11T14:53:16Z,2016-05-15T07:53:32Z,2016-05-15T07:53:42Z,MERGED,True,1,0,1,https://github.com/j-hao,Ignore auto generated mu/mu-help-strings.h,1,[],https://github.com/djcb/mu/pull/848,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/848,,,True,{}
djcb/mu,https://github.com/djcb/mu,848,2016-05-11T14:53:16Z,2016-05-15T07:53:32Z,2016-05-15T07:53:42Z,MERGED,True,1,0,1,https://github.com/j-hao,Ignore auto generated mu/mu-help-strings.h,1,[],https://github.com/djcb/mu/pull/848,https://github.com/djcb,2,https://github.com/djcb/mu/pull/848#issuecomment-219271683,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,850,2016-05-15T10:25:31Z,2016-05-15T12:56:47Z,2016-05-15T22:44:20Z,MERGED,True,1,1,1,https://github.com/Chris00,Improve the description of C-c C-k in compose mode,1,[],https://github.com/djcb/mu/pull/850,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/850,"Fixes #843
But not the only possible way out — please comment.","Fixes #843
But not the only possible way out — please comment.",True,{}
djcb/mu,https://github.com/djcb/mu,850,2016-05-15T10:25:31Z,2016-05-15T12:56:47Z,2016-05-15T22:44:20Z,MERGED,True,1,1,1,https://github.com/Chris00,Improve the description of C-c C-k in compose mode,1,[],https://github.com/djcb/mu/pull/850,https://github.com/djcb,2,https://github.com/djcb/mu/pull/850#issuecomment-219284344,"Fixes #843
But not the only possible way out — please comment.",Merged -- thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,852,2016-05-19T17:09:44Z,2016-06-11T06:54:08Z,2016-06-11T06:54:10Z,MERGED,True,6,2,1,https://github.com/jschwab,Improve behavior of mu4e-action-show-thread,1,[],https://github.com/djcb/mu/pull/852,https://github.com/jschwab,1,https://github.com/djcb/mu/pull/852,"This patch improves the behavior of mu4e-action-show-thread.  This
action now leaves the point on the message where the action was invoked,
which helps prevent losing ones' place in a long thread.  When invoked
in view mode, it continues to display the message that was being viewed,
instead of returning to a header-only view.","This patch improves the behavior of mu4e-action-show-thread.  This
action now leaves the point on the message where the action was invoked,
which helps prevent losing ones' place in a long thread.  When invoked
in view mode, it continues to display the message that was being viewed,
instead of returning to a header-only view.",True,{}
djcb/mu,https://github.com/djcb/mu,852,2016-05-19T17:09:44Z,2016-06-11T06:54:08Z,2016-06-11T06:54:10Z,MERGED,True,6,2,1,https://github.com/jschwab,Improve behavior of mu4e-action-show-thread,1,[],https://github.com/djcb/mu/pull/852,https://github.com/djcb,2,https://github.com/djcb/mu/pull/852#issuecomment-225340952,"This patch improves the behavior of mu4e-action-show-thread.  This
action now leaves the point on the message where the action was invoked,
which helps prevent losing ones' place in a long thread.  When invoked
in view mode, it continues to display the message that was being viewed,
instead of returning to a header-only view.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,853,2016-05-23T11:29:34Z,2016-06-05T14:41:07Z,2016-06-05T14:41:11Z,MERGED,True,19,8,1,https://github.com/liweitianux,Use Unicode characters when cleaning up attachment filename,1,[],https://github.com/djcb/mu/pull/853,https://github.com/liweitianux,1,https://github.com/djcb/mu/pull/853,"Improve the function cleanup_filename() of lib/mu-msg-part.c to use Unicode characters when replacing the control characters, slashes and colons with -.
Originally, this function just use plain C characters (i.e., assuming ASCII string) when checking each character is or not a control character, slash or colon.  However, when the attachment filename contains non-ASCII (e.g., Chinese characters), all the non-ASCII characters are replaced with -.
For example:

Before:

> mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '------------.txt', '-------test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.


After:

> ./build/mu/mu/mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '测试附件.txt', '附件-test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.","Improve the function cleanup_filename() of lib/mu-msg-part.c to use Unicode characters when replacing the control characters, slashes and colons with -.
Originally, this function just use plain C characters (i.e., assuming ASCII string) when checking each character is or not a control character, slash or colon.  However, when the attachment filename contains non-ASCII (e.g., Chinese characters), all the non-ASCII characters are replaced with -.
For example:

Before:

> mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '------------.txt', '-------test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.


After:

> ./build/mu/mu/mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '测试附件.txt', '附件-test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.",True,{}
djcb/mu,https://github.com/djcb/mu,853,2016-05-23T11:29:34Z,2016-06-05T14:41:07Z,2016-06-05T14:41:11Z,MERGED,True,19,8,1,https://github.com/liweitianux,Use Unicode characters when cleaning up attachment filename,1,[],https://github.com/djcb/mu/pull/853,https://github.com/liweitianux,2,https://github.com/djcb/mu/pull/853#issuecomment-223790134,"Improve the function cleanup_filename() of lib/mu-msg-part.c to use Unicode characters when replacing the control characters, slashes and colons with -.
Originally, this function just use plain C characters (i.e., assuming ASCII string) when checking each character is or not a control character, slash or colon.  However, when the attachment filename contains non-ASCII (e.g., Chinese characters), all the non-ASCII characters are replaced with -.
For example:

Before:

> mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '------------.txt', '-------test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.


After:

> ./build/mu/mu/mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '测试附件.txt', '附件-test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.","Hello, @djcb
How about my pull request? Is there any problem that needs improvement?  Wish this can be merged, as I'm a Chinese user and it is annoying that all the Chinese characters in the attachment filename are replaced by the -.  Thanks!
P.S.: I checked the continuous integration test failure, and it seems due to the environment bootstrap.  I think this pull request can be cleanly merged.  (I do not know how to re-trigger the continuous integration test.)
Regards!",True,{}
djcb/mu,https://github.com/djcb/mu,853,2016-05-23T11:29:34Z,2016-06-05T14:41:07Z,2016-06-05T14:41:11Z,MERGED,True,19,8,1,https://github.com/liweitianux,Use Unicode characters when cleaning up attachment filename,1,[],https://github.com/djcb/mu/pull/853,https://github.com/djcb,3,https://github.com/djcb/mu/pull/853#issuecomment-223816796,"Improve the function cleanup_filename() of lib/mu-msg-part.c to use Unicode characters when replacing the control characters, slashes and colons with -.
Originally, this function just use plain C characters (i.e., assuming ASCII string) when checking each character is or not a control character, slash or colon.  However, when the attachment filename contains non-ASCII (e.g., Chinese characters), all the non-ASCII characters are replaced with -.
For example:

Before:

> mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '------------.txt', '-------test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.


After:

> ./build/mu/mu/mu view test_chinese_attachment_filename.eml
From: Tester <tester@example.com>
To: Example <example@example.com>
Subject: Test email with attachment of Chinese filename
Date: Mon 23 May 2016 05:22:09 PM CST
Attachments: 'attachment-test.txt', '测试附件.txt', '附件-test.txt'
Hello,

This is a simple test email with three attachments:

1. `attachment:test.txt`: filename is all English;
2. `测试附件.txt`: filename is all Chinese (exclude the extension);
3. `附件-test.txt`: filename mixes Chinese and English.","Hi @liweitianux: thanks for your PR -- was a bit busy, so only got to it now!
Anyway, looks like a useful improvement, thanks! So let's merge it.",True,{}
djcb/mu,https://github.com/djcb/mu,858,2016-05-30T15:34:59Z,2016-06-01T06:07:31Z,2016-06-01T06:07:40Z,MERGED,True,3,3,1,https://github.com/j-hao,mu4e: Make dvipng optional when convert from org to html,1,[],https://github.com/djcb/mu/pull/858,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/858,For users don't have latex installed but still want to use org-mu4e-compose-org-mode,For users don't have latex installed but still want to use org-mu4e-compose-org-mode,True,{}
djcb/mu,https://github.com/djcb/mu,858,2016-05-30T15:34:59Z,2016-06-01T06:07:31Z,2016-06-01T06:07:40Z,MERGED,True,3,3,1,https://github.com/j-hao,mu4e: Make dvipng optional when convert from org to html,1,[],https://github.com/djcb/mu/pull/858,https://github.com/djcb,2,https://github.com/djcb/mu/pull/858#issuecomment-222595168,For users don't have latex installed but still want to use org-mu4e-compose-org-mode,"Looks good, except that ""latex"" should be spelled ""LaTeX"" in the docstring. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,858,2016-05-30T15:34:59Z,2016-06-01T06:07:31Z,2016-06-01T06:07:40Z,MERGED,True,3,3,1,https://github.com/j-hao,mu4e: Make dvipng optional when convert from org to html,1,[],https://github.com/djcb/mu/pull/858,https://github.com/j-hao,3,https://github.com/djcb/mu/pull/858#issuecomment-222674019,For users don't have latex installed but still want to use org-mu4e-compose-org-mode,Updated,True,{}
djcb/mu,https://github.com/djcb/mu,858,2016-05-30T15:34:59Z,2016-06-01T06:07:31Z,2016-06-01T06:07:40Z,MERGED,True,3,3,1,https://github.com/j-hao,mu4e: Make dvipng optional when convert from org to html,1,[],https://github.com/djcb/mu/pull/858,https://github.com/djcb,4,https://github.com/djcb/mu/pull/858#issuecomment-222901548,For users don't have latex installed but still want to use org-mu4e-compose-org-mode,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,861,2016-06-03T07:52:21Z,2016-06-05T15:55:49Z,2016-07-09T22:04:48Z,MERGED,True,5,3,1,https://github.com/remvee,Make `mu4e-hide-index-messages' customizable,1,[],https://github.com/djcb/mu/pull/861,https://github.com/remvee,1,https://github.com/djcb/mu/pull/861,,,True,{}
djcb/mu,https://github.com/djcb/mu,861,2016-06-03T07:52:21Z,2016-06-05T15:55:49Z,2016-07-09T22:04:48Z,MERGED,True,5,3,1,https://github.com/remvee,Make `mu4e-hide-index-messages' customizable,1,[],https://github.com/djcb/mu/pull/861,https://github.com/djcb,2,https://github.com/djcb/mu/pull/861#issuecomment-223820929,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,867,2016-06-09T05:25:13Z,2016-06-09T06:23:55Z,2016-06-09T06:48:07Z,MERGED,True,6,4,1,https://github.com/thierryvolpiatto,Fix window restoration when C-g'ing on reply.,1,[],https://github.com/djcb/mu/pull/867,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/867,"mu4e/mu4e-compose.el (mu4e~compose-handler):
Save and restore window config.","mu4e/mu4e-compose.el (mu4e~compose-handler):
Save and restore window config.",True,{}
djcb/mu,https://github.com/djcb/mu,867,2016-06-09T05:25:13Z,2016-06-09T06:23:55Z,2016-06-09T06:48:07Z,MERGED,True,6,4,1,https://github.com/thierryvolpiatto,Fix window restoration when C-g'ing on reply.,1,[],https://github.com/djcb/mu/pull/867,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/867#issuecomment-224803258,"mu4e/mu4e-compose.el (mu4e~compose-handler):
Save and restore window config.","Hi,
when replying to a mail (R) and then aborting with C-g the header buffer is duplicated, this patch fix this problem.",True,{}
djcb/mu,https://github.com/djcb/mu,867,2016-06-09T05:25:13Z,2016-06-09T06:23:55Z,2016-06-09T06:48:07Z,MERGED,True,6,4,1,https://github.com/thierryvolpiatto,Fix window restoration when C-g'ing on reply.,1,[],https://github.com/djcb/mu/pull/867,https://github.com/djcb,3,https://github.com/djcb/mu/pull/867#issuecomment-224810208,"mu4e/mu4e-compose.el (mu4e~compose-handler):
Save and restore window config.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,871,2016-06-21T17:58:13Z,2016-07-03T07:17:04Z,2016-07-21T02:56:18Z,MERGED,True,2,2,1,https://github.com/arthurl,[FIX] references header dropped bug,1,[],https://github.com/djcb/mu/pull/871,https://github.com/arthurl,1,https://github.com/djcb/mu/pull/871,"Hi Dirk,
I was wondering why threading in mu suddenly stopped working sporadically since about 2 weeks ago… so after some bisecting, here it the fix. Basically, the “References” header have been erroneously dropped for all messages composed with less than mu4e~max-reference-num number of reference.
I guess there are really too many parenthesis in lisp :p
Arthur","Hi Dirk,
I was wondering why threading in mu suddenly stopped working sporadically since about 2 weeks ago… so after some bisecting, here it the fix. Basically, the “References” header have been erroneously dropped for all messages composed with less than mu4e~max-reference-num number of reference.
I guess there are really too many parenthesis in lisp :p
Arthur",True,{}
djcb/mu,https://github.com/djcb/mu,871,2016-06-21T17:58:13Z,2016-07-03T07:17:04Z,2016-07-21T02:56:18Z,MERGED,True,2,2,1,https://github.com/arthurl,[FIX] references header dropped bug,1,[],https://github.com/djcb/mu/pull/871,https://github.com/djcb,2,https://github.com/djcb/mu/pull/871#issuecomment-230139532,"Hi Dirk,
I was wondering why threading in mu suddenly stopped working sporadically since about 2 weeks ago… so after some bisecting, here it the fix. Basically, the “References” header have been erroneously dropped for all messages composed with less than mu4e~max-reference-num number of reference.
I guess there are really too many parenthesis in lisp :p
Arthur",Merged -- thanks! What a silly bug...,True,{}
djcb/mu,https://github.com/djcb/mu,871,2016-06-21T17:58:13Z,2016-07-03T07:17:04Z,2016-07-21T02:56:18Z,MERGED,True,2,2,1,https://github.com/arthurl,[FIX] references header dropped bug,1,[],https://github.com/djcb/mu/pull/871,https://github.com/arthurl,3,https://github.com/djcb/mu/pull/871#issuecomment-230140294,"Hi Dirk,
I was wondering why threading in mu suddenly stopped working sporadically since about 2 weeks ago… so after some bisecting, here it the fix. Basically, the “References” header have been erroneously dropped for all messages composed with less than mu4e~max-reference-num number of reference.
I guess there are really too many parenthesis in lisp :p
Arthur","Haha it happens. Thanks for the good work!
Arthur",True,{}
djcb/mu,https://github.com/djcb/mu,871,2016-06-21T17:58:13Z,2016-07-03T07:17:04Z,2016-07-21T02:56:18Z,MERGED,True,2,2,1,https://github.com/arthurl,[FIX] references header dropped bug,1,[],https://github.com/djcb/mu/pull/871,https://github.com/mankoff,4,https://github.com/djcb/mu/pull/871#issuecomment-234139761,"Hi Dirk,
I was wondering why threading in mu suddenly stopped working sporadically since about 2 weeks ago… so after some bisecting, here it the fix. Basically, the “References” header have been erroneously dropped for all messages composed with less than mu4e~max-reference-num number of reference.
I guess there are really too many parenthesis in lisp :p
Arthur","If we now have a month of messages with threads broken because of this bug, is there any way to recover the thread? Upgrading and sending a new email it seems the bug is fixed for the new email, but not for existing ones :(.",True,{}
djcb/mu,https://github.com/djcb/mu,871,2016-06-21T17:58:13Z,2016-07-03T07:17:04Z,2016-07-21T02:56:18Z,MERGED,True,2,2,1,https://github.com/arthurl,[FIX] references header dropped bug,1,[],https://github.com/djcb/mu/pull/871,https://github.com/arthurl,5,https://github.com/djcb/mu/pull/871#issuecomment-234143151,"Hi Dirk,
I was wondering why threading in mu suddenly stopped working sporadically since about 2 weeks ago… so after some bisecting, here it the fix. Basically, the “References” header have been erroneously dropped for all messages composed with less than mu4e~max-reference-num number of reference.
I guess there are really too many parenthesis in lisp :p
Arthur","Unfortunately, the problem occurs when composing messages (specifically, the creation of the references header). It's not simply a problem with display.
As such, I'm not even sure ""fixing"" it makes sense, because it will involve changing historic data. Keep in mind that the email is also mangled for your recipient, and you certainly can't fix it on their end.",True,{}
djcb/mu,https://github.com/djcb/mu,875,2016-06-29T16:00:25Z,2016-08-02T05:08:34Z,2016-08-02T06:43:54Z,MERGED,True,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/875,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/875,"This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.","This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.",True,{}
djcb/mu,https://github.com/djcb/mu,875,2016-06-29T16:00:25Z,2016-08-02T05:08:34Z,2016-08-02T06:43:54Z,MERGED,True,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/875,https://github.com/stsquad,2,https://github.com/djcb/mu/pull/875#issuecomment-229582807,"This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.","I forgot to check outstanding pull requests, I note the references fix in in pull #871.",True,{}
djcb/mu,https://github.com/djcb/mu,875,2016-06-29T16:00:25Z,2016-08-02T05:08:34Z,2016-08-02T06:43:54Z,MERGED,True,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/875,https://github.com/djcb,3,https://github.com/djcb/mu/pull/875#issuecomment-230139612,"This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.","I took pull #871, can you update for the actions changes? Thank!",True,{}
djcb/mu,https://github.com/djcb/mu,875,2016-06-29T16:00:25Z,2016-08-02T05:08:34Z,2016-08-02T06:43:54Z,MERGED,True,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/875,https://github.com/stsquad,4,https://github.com/djcb/mu/pull/875#issuecomment-230140233,"This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.","@djcb : sure, done.",True,{}
djcb/mu,https://github.com/djcb/mu,875,2016-06-29T16:00:25Z,2016-08-02T05:08:34Z,2016-08-02T06:43:54Z,MERGED,True,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/875,https://github.com/djcb,5,https://github.com/djcb/mu/pull/875#issuecomment-233197674,"This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.",Thanks -- but can you give them a  bit more descriptive summary-line?,True,{}
djcb/mu,https://github.com/djcb/mu,875,2016-06-29T16:00:25Z,2016-08-02T05:08:34Z,2016-08-02T06:43:54Z,MERGED,True,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/875,https://github.com/stsquad,6,https://github.com/djcb/mu/pull/875#issuecomment-233254751,"This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.",I've updated with the commit message as there is no longer two fixes in this PR.,True,{}
djcb/mu,https://github.com/djcb/mu,875,2016-06-29T16:00:25Z,2016-08-02T05:08:34Z,2016-08-02T06:43:54Z,MERGED,True,14,8,1,https://github.com/stsquad,mu4e-actions: improve mbox handling for multiple marks,1,[],https://github.com/djcb/mu/pull/875,https://github.com/djcb,7,https://github.com/djcb/mu/pull/875#issuecomment-236799701,"This contains 2 fixes. An update from the previous pull request #845 and a fix to drafting of messages which explains why some of my ""related messages"" started disappearing.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,877,2016-07-08T12:18:15Z,2016-07-09T21:04:26Z,2016-07-09T22:00:25Z,MERGED,True,5,1,1,https://github.com/remvee,Handle mbsync output in mu4e-update buffer,1,[],https://github.com/djcb/mu/pull/877,https://github.com/remvee,1,https://github.com/djcb/mu/pull/877,The mbsync command uses carriage return characters to go to the beginning of the line.  This change does the same for the mu4e-update buffer.  See also #827.,The mbsync command uses carriage return characters to go to the beginning of the line.  This change does the same for the mu4e-update buffer.  See also #827.,True,{}
djcb/mu,https://github.com/djcb/mu,877,2016-07-08T12:18:15Z,2016-07-09T21:04:26Z,2016-07-09T22:00:25Z,MERGED,True,5,1,1,https://github.com/remvee,Handle mbsync output in mu4e-update buffer,1,[],https://github.com/djcb/mu/pull/877,https://github.com/djcb,2,https://github.com/djcb/mu/pull/877#issuecomment-231555854,The mbsync command uses carriage return characters to go to the beginning of the line.  This change does the same for the mu4e-update buffer.  See also #827.,"Merged, looks useful -- thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/avar,1,https://github.com/djcb/mu/pull/886,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done","I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done",True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/djcb,2,https://github.com/djcb/mu/pull/886#issuecomment-234066424,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done",mu4e-get-mail-command already is the hook-mechanism you can use for that -- use a shellscript that does whatever killing / mail fetching you need.,True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/avar,3,https://github.com/djcb/mu/pull/886#issuecomment-234068551,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done","I may be missing something, but isn't mu4e-get-mail-command different? That's the thing that's invoked every N seconds where N = mu4e-update-interval.
For this ""index in background but be responsive"" approach to work I can't be killing mu from that, I need to be killing it from the bit in mu4e that goes ""hang on, I don't have a mu-server process, better make one"", which is why I'm hooking into mu4e~proc-start.",True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/djcb,4,https://github.com/djcb/mu/pull/886#issuecomment-236809557,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done","Hmmm... such hacks really shouldn't be necessary... Did you try the recent tricks for making indexing a bit quicker? Ie. --nocleanup and --lazycheck (or their mu4e counterparts).
If you really want to hook into arbitrary functions, I'd recommend using the ""advise"" mechanism, which exists there for such things.",True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/avar,5,https://github.com/djcb/mu/pull/886#issuecomment-236852080,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done","Yeah let's just close this pull request. I've since stopped using my hack since while it worked most of the time there were some extra nasty race conditions where a mu process would be left locked.
I didn't try the new --nocleanup or --lazycheck but I read the patch for the latter. It looks like it's just using stat() on the directory, in my case I have one huge INBOX folder which is always going to be modified by the time mu4e runs (I get a lot of mail) so it wouldn't do anything as an optimization for me, but I'll check out --nocleanup.
One thing that would make this really much more performant would be if mu-index could be fed a list of files that have been removed/added/changed since last time, which e.g. offlineimap could be patched to emit.",True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/avar,6,https://github.com/djcb/mu/pull/886#issuecomment-237030804,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done",FWIW I'm asking that this gets implemented in offlineimap: OfflineIMAP/offlineimap#367 / might implement it myself.,True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/djcb,7,https://github.com/djcb/mu/pull/886#issuecomment-242926073,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done","Okay, closing this. Thanks for the effort - hope you get it fixed in offlineimap.
Indeed, the stat-shortcut doesn't help much for the huge-inbox case. No-cleanup should still give you some speedups. I actually try to keep my inbox as small as possible, and move messages elsewhere when I've dealt with them.",True,{}
djcb/mu,https://github.com/djcb/mu,886,2016-07-20T19:54:20Z,2016-08-27T16:14:54Z,2016-08-27T17:23:45Z,CLOSED,False,4,0,1,https://github.com/avar,mu4e-proc: Add a hook before we call start-command in mu4e~proc-start,1,[],https://github.com/djcb/mu/pull/886,https://github.com/avar,8,https://github.com/djcb/mu/pull/886#issuecomment-242929610,"I'm using this to ""killall mu"" before I start mu again, see
CACBZZX6ntW2uF5MPr-LaPM5HMiQzTgbUHyu6njJ1iX0pT+mGfA@mail.gmail.com (The
dreaded ""Waiting for message..."" message and what to do about it"")
message on the mu mailing list for more details.
The hook I'm using is:
(add-hook
'mu4eproc-start-hook ; (setq mu4eproc-start-hook nil)
'(lambda ()
(message ""Now running the 'killall mu' hook!"")
(shell-command ""killall mu"")
(sleep-for 0 250)))
Coupled with:
(setq mu4e-update-interval nil)
And this monitoring script:
https://github.com/avar/dotemacs/blob/master/scripts/mu-monitor.pl
While running these two concurrently in a screen session:
while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done
while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done","Yeah thanks, I don't think this should be included. I do think there's probably room for some functionality in mu-daemon similar to e.g. emacs-daemon where multiple things can connect to it, and it'll go ""oh a background index is running and someone wants a foreground command? Screw that, let's kill the background thing and serve the interactive command'.
What I had was a very bad buggy hack to make that happen, but I think the general concept makes sense.
I'll probably experiment with indexing via run-with-idle-timer as a workaround.",True,{}
djcb/mu,https://github.com/djcb/mu,889,2016-07-25T19:58:16Z,2016-07-26T06:59:50Z,2016-07-26T06:59:59Z,MERGED,True,8,4,1,https://github.com/sje30,Add --expr flag to constrain search when looking for duplicates,1,[],https://github.com/djcb/mu/pull/889,https://github.com/sje30,1,https://github.com/djcb/mu/pull/889,"(mu:for-each-message ...) allows an optional expression to be passed
so that only messages matching that expression are searched when
looking for duplicates.
This patch adds a --expr flag so that e.g.
find-dups.scm --expr d:6m..3m

will reduce the range of messages to those between 3 and 6 months ago
to search for duplicates.  I found this useful when using expressions
to find messages in a particular year, rather than searching the whole
database.  This is often quicker and less worrying than searching the
whole database.
If --expr is not provided, expr should default to #t so that the whole
database is searched as before.","(mu:for-each-message ...) allows an optional expression to be passed
so that only messages matching that expression are searched when
looking for duplicates.
This patch adds a --expr flag so that e.g.
find-dups.scm --expr d:6m..3m

will reduce the range of messages to those between 3 and 6 months ago
to search for duplicates.  I found this useful when using expressions
to find messages in a particular year, rather than searching the whole
database.  This is often quicker and less worrying than searching the
whole database.
If --expr is not provided, expr should default to #t so that the whole
database is searched as before.",True,{}
djcb/mu,https://github.com/djcb/mu,889,2016-07-25T19:58:16Z,2016-07-26T06:59:50Z,2016-07-26T06:59:59Z,MERGED,True,8,4,1,https://github.com/sje30,Add --expr flag to constrain search when looking for duplicates,1,[],https://github.com/djcb/mu/pull/889,https://github.com/djcb,2,https://github.com/djcb/mu/pull/889#issuecomment-235179562,"(mu:for-each-message ...) allows an optional expression to be passed
so that only messages matching that expression are searched when
looking for duplicates.
This patch adds a --expr flag so that e.g.
find-dups.scm --expr d:6m..3m

will reduce the range of messages to those between 3 and 6 months ago
to search for duplicates.  I found this useful when using expressions
to find messages in a particular year, rather than searching the whole
database.  This is often quicker and less worrying than searching the
whole database.
If --expr is not provided, expr should default to #t so that the whole
database is searched as before.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,891,2016-07-27T10:40:34Z,2016-08-02T06:01:18Z,2020-05-15T14:35:24Z,CLOSED,False,4,1,1,https://github.com/remvee,Fix kill ring clobbering by get mail filter,1,[],https://github.com/djcb/mu/pull/891,https://github.com/remvee,1,https://github.com/djcb/mu/pull/891,"The kill ring fills up with lines like:
C: 0/1  B: 28/29  M: +0/0 *0/0 #0/0  S: +2/2 *1/1 #0/0
when using mbsync or another tool using carriage return for progress.","The kill ring fills up with lines like:
C: 0/1  B: 28/29  M: +0/0 *0/0 #0/0  S: +2/2 *1/1 #0/0
when using mbsync or another tool using carriage return for progress.",True,{}
djcb/mu,https://github.com/djcb/mu,891,2016-07-27T10:40:34Z,2016-08-02T06:01:18Z,2020-05-15T14:35:24Z,CLOSED,False,4,1,1,https://github.com/remvee,Fix kill ring clobbering by get mail filter,1,[],https://github.com/djcb/mu/pull/891,https://github.com/djcb,2,https://github.com/djcb/mu/pull/891#issuecomment-236807770,"The kill ring fills up with lines like:
C: 0/1  B: 28/29  M: +0/0 *0/0 #0/0  S: +2/2 *1/1 #0/0
when using mbsync or another tool using carriage return for progress.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,893,2016-07-29T17:14:43Z,2016-08-13T20:01:50Z,2016-08-13T20:02:14Z,MERGED,True,34,0,1,https://github.com/j-hao,mu4e: Allow header fields with more than one lines to fold to one,1,[],https://github.com/djcb/mu/pull/893,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/893,Press TAB within header field key to toggle,Press TAB within header field key to toggle,True,{}
djcb/mu,https://github.com/djcb/mu,893,2016-07-29T17:14:43Z,2016-08-13T20:01:50Z,2016-08-13T20:02:14Z,MERGED,True,34,0,1,https://github.com/j-hao,mu4e: Allow header fields with more than one lines to fold to one,1,[],https://github.com/djcb/mu/pull/893,https://github.com/djcb,2,https://github.com/djcb/mu/pull/893#issuecomment-239638844,Press TAB within header field key to toggle,Finally had some time to check this out... works great! Thanks a lot.,True,{}
djcb/mu,https://github.com/djcb/mu,895,2016-07-31T21:30:11Z,2016-08-01T05:22:28Z,2018-05-23T12:50:00Z,MERGED,True,1,1,1,https://github.com/avar,Fix a regression in pull request #831,1,[],https://github.com/djcb/mu/pull/895,https://github.com/avar,1,https://github.com/djcb/mu/pull/895,"The mu4e-message-field function was called in a way that would never
work, fix that by calling it correctly.
There's the additional follow-up TODO here that the mu4e-message-field
function itself should probably die on this sort of invocation, but I
don't know enough about elisp idioms to know how that should look.
This fixes my issue #894.","The mu4e-message-field function was called in a way that would never
work, fix that by calling it correctly.
There's the additional follow-up TODO here that the mu4e-message-field
function itself should probably die on this sort of invocation, but I
don't know enough about elisp idioms to know how that should look.
This fixes my issue #894.",True,{}
djcb/mu,https://github.com/djcb/mu,895,2016-07-31T21:30:11Z,2016-08-01T05:22:28Z,2018-05-23T12:50:00Z,MERGED,True,1,1,1,https://github.com/avar,Fix a regression in pull request #831,1,[],https://github.com/djcb/mu/pull/895,https://github.com/djcb,2,https://github.com/djcb/mu/pull/895#issuecomment-236491973,"The mu4e-message-field function was called in a way that would never
work, fix that by calling it correctly.
There's the additional follow-up TODO here that the mu4e-message-field
function itself should probably die on this sort of invocation, but I
don't know enough about elisp idioms to know how that should look.
This fixes my issue #894.","Yes, that's clearly a good fix. Thanks a lot!",True,{}
djcb/mu,https://github.com/djcb/mu,896,2016-08-01T19:17:28Z,2016-08-02T05:05:43Z,2018-05-23T12:49:49Z,MERGED,True,3,2,1,https://github.com/avar,"Actually make the ""write attachments"" feature in d16957d work",1,[],https://github.com/djcb/mu/pull/896,https://github.com/avar,1,https://github.com/djcb/mu/pull/896,"This is a follow-up to my pull request #895 which fixes another bug in
pull request #831 (d16957d).
The code to write out the attachments would never work, for what it's
worth it's clear from the issue I fixed in #895 that the codepath had
never been executed as-is.
It would find the attachments and try to write them out to /tmp/, just
that, no /tmp/NAME, just the directory itself. That would yield an
error of trying to write to a directory.
Fix that, now we create a temporary name as a function of the
attachment and both save it and extract it.
This makes the mu4e-action-view-in-browser function finally work for
me. It'll now write out the attachments to /tmp, and rewrite the HTML
so that I'll see the attachments in my browser.","This is a follow-up to my pull request #895 which fixes another bug in
pull request #831 (d16957d).
The code to write out the attachments would never work, for what it's
worth it's clear from the issue I fixed in #895 that the codepath had
never been executed as-is.
It would find the attachments and try to write them out to /tmp/, just
that, no /tmp/NAME, just the directory itself. That would yield an
error of trying to write to a directory.
Fix that, now we create a temporary name as a function of the
attachment and both save it and extract it.
This makes the mu4e-action-view-in-browser function finally work for
me. It'll now write out the attachments to /tmp, and rewrite the HTML
so that I'll see the attachments in my browser.",True,{}
djcb/mu,https://github.com/djcb/mu,896,2016-08-01T19:17:28Z,2016-08-02T05:05:43Z,2018-05-23T12:49:49Z,MERGED,True,3,2,1,https://github.com/avar,"Actually make the ""write attachments"" feature in d16957d work",1,[],https://github.com/djcb/mu/pull/896,https://github.com/j-hao,2,https://github.com/djcb/mu/pull/896#issuecomment-236779284,"This is a follow-up to my pull request #895 which fixes another bug in
pull request #831 (d16957d).
The code to write out the attachments would never work, for what it's
worth it's clear from the issue I fixed in #895 that the codepath had
never been executed as-is.
It would find the attachments and try to write them out to /tmp/, just
that, no /tmp/NAME, just the directory itself. That would yield an
error of trying to write to a directory.
Fix that, now we create a temporary name as a function of the
attachment and both save it and extract it.
This makes the mu4e-action-view-in-browser function finally work for
me. It'll now write out the attachments to /tmp, and rewrite the HTML
so that I'll see the attachments in my browser.",Nice finding. I was wondering why sometimes this fails for me 👍,True,{}
djcb/mu,https://github.com/djcb/mu,896,2016-08-01T19:17:28Z,2016-08-02T05:05:43Z,2018-05-23T12:49:49Z,MERGED,True,3,2,1,https://github.com/avar,"Actually make the ""write attachments"" feature in d16957d work",1,[],https://github.com/djcb/mu/pull/896,https://github.com/djcb,3,https://github.com/djcb/mu/pull/896#issuecomment-236799272,"This is a follow-up to my pull request #895 which fixes another bug in
pull request #831 (d16957d).
The code to write out the attachments would never work, for what it's
worth it's clear from the issue I fixed in #895 that the codepath had
never been executed as-is.
It would find the attachments and try to write them out to /tmp/, just
that, no /tmp/NAME, just the directory itself. That would yield an
error of trying to write to a directory.
Fix that, now we create a temporary name as a function of the
attachment and both save it and extract it.
This makes the mu4e-action-view-in-browser function finally work for
me. It'll now write out the attachments to /tmp, and rewrite the HTML
so that I'll see the attachments in my browser.","Merged -- nice fix, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,897,2016-08-02T14:38:40Z,2016-09-03T08:30:19Z,2016-09-03T08:30:29Z,MERGED,True,3,4,1,https://github.com/liweitianux,"mu4e: use builtin function ""shr-render-region"" for simplicity",1,[],https://github.com/djcb/mu/pull/897,https://github.com/liweitianux,1,https://github.com/djcb/mu/pull/897,"Hi,
Emacs already has the function shr-render-region which requires Emacs been built with libxml2 option.  This built-in function also reports better error message if the libxml2 option was disabled.
Also some minor space fixes.
Please note, for unknown reason, Github does NOT show my changes correctly.   Please diff by yourself.  Thanks!
Cheers,
Aly","Hi,
Emacs already has the function shr-render-region which requires Emacs been built with libxml2 option.  This built-in function also reports better error message if the libxml2 option was disabled.
Also some minor space fixes.
Please note, for unknown reason, Github does NOT show my changes correctly.   Please diff by yourself.  Thanks!
Cheers,
Aly",True,{}
djcb/mu,https://github.com/djcb/mu,897,2016-08-02T14:38:40Z,2016-09-03T08:30:19Z,2016-09-03T08:30:29Z,MERGED,True,3,4,1,https://github.com/liweitianux,"mu4e: use builtin function ""shr-render-region"" for simplicity",1,[],https://github.com/djcb/mu/pull/897,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/897#issuecomment-241426541,"Hi,
Emacs already has the function shr-render-region which requires Emacs been built with libxml2 option.  This built-in function also reports better error message if the libxml2 option was disabled.
Also some minor space fixes.
Please note, for unknown reason, Github does NOT show my changes correctly.   Please diff by yourself.  Thanks!
Cheers,
Aly","P.S. I wrote to GitHub support about the diff problem but, after a couple of mails exchanged with them, I have not had a satisfactory answer (they do not even seem to see the problem...).",True,{}
djcb/mu,https://github.com/djcb/mu,897,2016-08-02T14:38:40Z,2016-09-03T08:30:19Z,2016-09-03T08:30:29Z,MERGED,True,3,4,1,https://github.com/liweitianux,"mu4e: use builtin function ""shr-render-region"" for simplicity",1,[],https://github.com/djcb/mu/pull/897,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/897#issuecomment-242184242,"Hi,
Emacs already has the function shr-render-region which requires Emacs been built with libxml2 option.  This built-in function also reports better error message if the libxml2 option was disabled.
Also some minor space fixes.
Please note, for unknown reason, Github does NOT show my changes correctly.   Please diff by yourself.  Thanks!
Cheers,
Aly","FYI, I got an answer.  Here is their explanation:

It seems the issue is coming from the carriage return at the line below:
https://github.com/liweitianux/mu/blob/9b54c2745eaedb11ab14a66bbe5b7b8227e60c1f/mu4e/mu4e-message.el#L204-L205
Currently, we are treating the carriage return as a line ending, which is throwing the line numbers off when displaying the diff.",True,{}
djcb/mu,https://github.com/djcb/mu,897,2016-08-02T14:38:40Z,2016-09-03T08:30:19Z,2016-09-03T08:30:29Z,MERGED,True,3,4,1,https://github.com/liweitianux,"mu4e: use builtin function ""shr-render-region"" for simplicity",1,[],https://github.com/djcb/mu/pull/897,https://github.com/djcb,4,https://github.com/djcb/mu/pull/897#issuecomment-244534483,"Hi,
Emacs already has the function shr-render-region which requires Emacs been built with libxml2 option.  This built-in function also reports better error message if the libxml2 option was disabled.
Also some minor space fixes.
Please note, for unknown reason, Github does NOT show my changes correctly.   Please diff by yourself.  Thanks!
Cheers,
Aly",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,898,2016-08-02T18:16:56Z,2016-08-03T20:58:59Z,2016-08-03T20:59:09Z,MERGED,True,1,1,1,https://github.com/ptroja,minor fix of unbalanced parens in doc,1,[],https://github.com/djcb/mu/pull/898,https://github.com/ptroja,1,https://github.com/djcb/mu/pull/898,,,True,{}
djcb/mu,https://github.com/djcb/mu,898,2016-08-02T18:16:56Z,2016-08-03T20:58:59Z,2016-08-03T20:59:09Z,MERGED,True,1,1,1,https://github.com/ptroja,minor fix of unbalanced parens in doc,1,[],https://github.com/djcb/mu/pull/898,https://github.com/djcb,2,https://github.com/djcb/mu/pull/898#issuecomment-237371587,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,906,2016-08-11T22:14:33Z,2016-08-13T06:15:22Z,2020-02-21T17:53:31Z,MERGED,True,7,2,3,https://github.com/Chris00,Add a face for displaying the context in the mode-line,2,[],https://github.com/djcb/mu/pull/906,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/906,"When the background is dark, the mode-line background may not be.  That means that the default color chosen to display the context (mu4e-title-face) may not be the best one (and may not be easily customizable because it is tied to the way titles are displayed on dark background).  This PR adds a new color for the context (initialized with the old face so nothing changes by default).","When the background is dark, the mode-line background may not be.  That means that the default color chosen to display the context (mu4e-title-face) may not be the best one (and may not be easily customizable because it is tied to the way titles are displayed on dark background).  This PR adds a new color for the context (initialized with the old face so nothing changes by default).",True,{}
djcb/mu,https://github.com/djcb/mu,906,2016-08-11T22:14:33Z,2016-08-13T06:15:22Z,2020-02-21T17:53:31Z,MERGED,True,7,2,3,https://github.com/Chris00,Add a face for displaying the context in the mode-line,2,[],https://github.com/djcb/mu/pull/906,https://github.com/djcb,2,https://github.com/djcb/mu/pull/906#issuecomment-239604994,"When the background is dark, the mode-line background may not be.  That means that the default color chosen to display the context (mu4e-title-face) may not be the best one (and may not be easily customizable because it is tied to the way titles are displayed on dark background).  This PR adds a new color for the context (initialized with the old face so nothing changes by default).",Looks good; merged. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,907,2016-08-16T08:41:06Z,2016-08-28T14:58:13Z,2016-08-28T14:58:24Z,MERGED,True,10,4,2,https://github.com/Chris00,Compare email addresses case insensitively,1,[],https://github.com/djcb/mu/pull/907,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/907,"The local part of email addresses is supposed to be case sensitive according to the standard but this is typically not respected (for good reasons).  The domain part, on the other hand, should be matched case insensitively.
This PR takes the stand that the whole address should be matched case insensitively because this is the common practice.","The local part of email addresses is supposed to be case sensitive according to the standard but this is typically not respected (for good reasons).  The domain part, on the other hand, should be matched case insensitively.
This PR takes the stand that the whole address should be matched case insensitively because this is the common practice.",True,{}
djcb/mu,https://github.com/djcb/mu,907,2016-08-16T08:41:06Z,2016-08-28T14:58:13Z,2016-08-28T14:58:24Z,MERGED,True,10,4,2,https://github.com/Chris00,Compare email addresses case insensitively,1,[],https://github.com/djcb/mu/pull/907,https://github.com/djcb,2,https://github.com/djcb/mu/pull/907#issuecomment-242923613,"The local part of email addresses is supposed to be case sensitive according to the standard but this is typically not respected (for good reasons).  The domain part, on the other hand, should be matched case insensitively.
This PR takes the stand that the whole address should be matched case insensitively because this is the common practice.","Oh, that looks useful... but can you make it lambda instead of a separate function?",True,{}
djcb/mu,https://github.com/djcb/mu,907,2016-08-16T08:41:06Z,2016-08-28T14:58:13Z,2016-08-28T14:58:24Z,MERGED,True,10,4,2,https://github.com/Chris00,Compare email addresses case insensitively,1,[],https://github.com/djcb/mu/pull/907,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/907#issuecomment-242944490,"The local part of email addresses is supposed to be case sensitive according to the standard but this is typically not respected (for good reasons).  The domain part, on the other hand, should be matched case insensitively.
This PR takes the stand that the whole address should be matched case insensitively because this is the common practice.",Done.,True,{}
djcb/mu,https://github.com/djcb/mu,907,2016-08-16T08:41:06Z,2016-08-28T14:58:13Z,2016-08-28T14:58:24Z,MERGED,True,10,4,2,https://github.com/Chris00,Compare email addresses case insensitively,1,[],https://github.com/djcb/mu/pull/907,https://github.com/djcb,4,https://github.com/djcb/mu/pull/907#issuecomment-242979286,"The local part of email addresses is supposed to be case sensitive according to the standard but this is typically not respected (for good reasons).  The domain part, on the other hand, should be matched case insensitively.
This PR takes the stand that the whole address should be matched case insensitively because this is the common practice.",Merged -- thanks,True,{}
djcb/mu,https://github.com/djcb/mu,909,2016-08-17T01:46:19Z,2016-09-03T08:27:49Z,2016-09-03T08:28:00Z,MERGED,True,62,1,2,https://github.com/sachdevaprash,Adding eshell/mu4e-attach allowing attachments from eshell.,2,[],https://github.com/djcb/mu/pull/909,https://github.com/sachdevaprash,1,https://github.com/djcb/mu/pull/909,Another way to attach files that I find useful.,Another way to attach files that I find useful.,True,{}
djcb/mu,https://github.com/djcb/mu,909,2016-08-17T01:46:19Z,2016-09-03T08:27:49Z,2016-09-03T08:28:00Z,MERGED,True,62,1,2,https://github.com/sachdevaprash,Adding eshell/mu4e-attach allowing attachments from eshell.,2,[],https://github.com/djcb/mu/pull/909,https://github.com/djcb,2,https://github.com/djcb/mu/pull/909#issuecomment-242923699,Another way to attach files that I find useful.,"This could be useful, but currently the code seems to be dependent on gnus... can you make it independent of that?",True,{}
djcb/mu,https://github.com/djcb/mu,909,2016-08-17T01:46:19Z,2016-09-03T08:27:49Z,2016-09-03T08:28:00Z,MERGED,True,62,1,2,https://github.com/sachdevaprash,Adding eshell/mu4e-attach allowing attachments from eshell.,2,[],https://github.com/djcb/mu/pull/909,https://github.com/sachdevaprash,3,https://github.com/djcb/mu/pull/909#issuecomment-242949702,Another way to attach files that I find useful.,"Updated. No more gnus dependencies. I had to get a util function from gnus to get active composition buffers, so a new function has been added to mu4e-utils.el.",True,{}
djcb/mu,https://github.com/djcb/mu,909,2016-08-17T01:46:19Z,2016-09-03T08:27:49Z,2016-09-03T08:28:00Z,MERGED,True,62,1,2,https://github.com/sachdevaprash,Adding eshell/mu4e-attach allowing attachments from eshell.,2,[],https://github.com/djcb/mu/pull/909,https://github.com/djcb,4,https://github.com/djcb/mu/pull/909#issuecomment-244534395,Another way to attach files that I find useful.,Thank you! Merged.,True,{}
djcb/mu,https://github.com/djcb/mu,911,2016-08-22T18:59:48Z,2016-09-03T08:26:47Z,2016-09-03T08:26:56Z,MERGED,True,20,5,1,https://github.com/aroig,add rudimentary completion support for retag action,1,[],https://github.com/djcb/mu/pull/911,https://github.com/aroig,1,https://github.com/djcb/mu/pull/911,"This adds a variable mu4e-action-tags-completion-list, that contains a list of commonly used tags to suggest as completion terms during a retag actions.
Along the way, the retag action accepts as argument a comma-separated list of +tag and -tag keywords, instead of a space-separated one, removing the need to quote tags with spaces in them, and making it consistent with the behaviour of completing-read-multiple.","This adds a variable mu4e-action-tags-completion-list, that contains a list of commonly used tags to suggest as completion terms during a retag actions.
Along the way, the retag action accepts as argument a comma-separated list of +tag and -tag keywords, instead of a space-separated one, removing the need to quote tags with spaces in them, and making it consistent with the behaviour of completing-read-multiple.",True,{}
djcb/mu,https://github.com/djcb/mu,911,2016-08-22T18:59:48Z,2016-09-03T08:26:47Z,2016-09-03T08:26:56Z,MERGED,True,20,5,1,https://github.com/aroig,add rudimentary completion support for retag action,1,[],https://github.com/djcb/mu/pull/911,https://github.com/djcb,2,https://github.com/djcb/mu/pull/911#issuecomment-244534352,"This adds a variable mu4e-action-tags-completion-list, that contains a list of commonly used tags to suggest as completion terms during a retag actions.
Along the way, the retag action accepts as argument a comma-separated list of +tag and -tag keywords, instead of a space-separated one, removing the need to quote tags with spaces in them, and making it consistent with the behaviour of completing-read-multiple.",Nice - thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,912,2016-08-25T02:17:29Z,2016-09-03T08:25:49Z,2016-09-03T08:25:49Z,MERGED,True,22,10,2,https://github.com/j-hao,mu4e: add mu4e-msg-changed-hook,1,[],https://github.com/djcb/mu/pull/912,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/912,"This PR is to add a hook that will be ran when users update and delete a message and mu4e-index-updated-hook invoked.
I'm using https://github.com/agpchil/mu4e-maildirs-extension to show maildirs summary and it currently uses mu4e-index-updated-hook to detect there is a change in db. It is not reliable for this use case. E.g. if I read/delete couple of messages in headers view and go back to main view, it doesn't know there are some changes that need to recalculate the summary.","This PR is to add a hook that will be ran when users update and delete a message and mu4e-index-updated-hook invoked.
I'm using https://github.com/agpchil/mu4e-maildirs-extension to show maildirs summary and it currently uses mu4e-index-updated-hook to detect there is a change in db. It is not reliable for this use case. E.g. if I read/delete couple of messages in headers view and go back to main view, it doesn't know there are some changes that need to recalculate the summary.",True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/haqistan,1,https://github.com/djcb/mu/pull/913,Many thanks to @avar for helping me with the git fu on IRC,Many thanks to @avar for helping me with the git fu on IRC,True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/djcb,2,https://github.com/djcb/mu/pull/913#issuecomment-244534202,Many thanks to @avar for helping me with the git fu on IRC,"Ah, great this got revived. There's a build-failure though, due to some missing AM_PERL_MODULE.",True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/haqistan,3,https://github.com/djcb/mu/pull/913#issuecomment-247807514,Many thanks to @avar for helping me with the git fu on IRC,"I'm sorry it took me so long to get back to this.  It appears that a
file got dropped from the commit: m4/perlmod.m4.  It looks like the
fact that m4/* appears in .gitignore screwed me a bit here and I
missed a file.  I've added it and pushed a second commit to my 639-redo
branch.  Sorry for the mess, is this okay?
I should also note that mup requires the Data::SExpression
CPAN module.  I don't know if you feel this should be noted somewhere
(README?).",True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/haqistan,4,https://github.com/djcb/mu/pull/913#issuecomment-249634529,Many thanks to @avar for helping me with the git fu on IRC,ping?,True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/avar,5,https://github.com/djcb/mu/pull/913#issuecomment-249635186,Many thanks to @avar for helping me with the git fu on IRC,"FWIW I intend to send some follow up fixes once this is merged. I think it
makes sense just to get it in first since it breaks no existing
functionality.
On Sep 26, 2016 19:14, ""attila"" notifications@github.com wrote:

ping?
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#913 (comment), or mute the
thread
https://github.com/notifications/unsubscribe-auth/AACw9Wersu0jgXABE0U02eNgzr7NIPmzks5qt_2JgaJpZM4Judl1
.",True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/haqistan,6,https://github.com/djcb/mu/pull/913#issuecomment-249636728,Many thanks to @avar for helping me with the git fu on IRC,thanks a ton. just wanted to make sure i didn't somehow drop the ball again :-),True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/avar,7,https://github.com/djcb/mu/pull/913#issuecomment-249646820,Many thanks to @avar for helping me with the git fu on IRC,"@StAlphonsos I'm not the mu maintainer. I'm hoping he'll merge it, just giving him more incentive to do so.",True,{}
djcb/mu,https://github.com/djcb/mu,913,2016-08-26T20:59:49Z,2016-09-27T15:50:08Z,2016-09-27T15:51:08Z,MERGED,True,2321,5,23,https://github.com/haqistan,perl: Integrate the mup interface from https://github.com/StAlphonsos/mup,2,[],https://github.com/djcb/mu/pull/913,https://github.com/djcb,8,https://github.com/djcb/mu/pull/913#issuecomment-249907851,Many thanks to @avar for helping me with the git fu on IRC,"Sorry for the delay -- traveling a bit. Anyway, very cool! Merging... Perhaps you can write a message to the mailing list with some details / examples?",True,{}
djcb/mu,https://github.com/djcb/mu,914,2016-08-28T02:48:04Z,2016-08-28T14:55:55Z,2016-08-28T14:56:05Z,MERGED,True,6,5,1,https://github.com/j-hao,mu4e: show '...' when header field folded and keep text-properties,1,[],https://github.com/djcb/mu/pull/914,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/914,Suggested by Christophe from 2507933#commitcomment-18804074,Suggested by Christophe from 2507933#commitcomment-18804074,True,{}
djcb/mu,https://github.com/djcb/mu,914,2016-08-28T02:48:04Z,2016-08-28T14:55:55Z,2016-08-28T14:56:05Z,MERGED,True,6,5,1,https://github.com/j-hao,mu4e: show '...' when header field folded and keep text-properties,1,[],https://github.com/djcb/mu/pull/914,https://github.com/djcb,2,https://github.com/djcb/mu/pull/914#issuecomment-242979167,Suggested by Christophe from 2507933#commitcomment-18804074,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,917,2016-09-04T12:14:16Z,2016-09-12T07:02:18Z,2016-09-13T12:57:09Z,MERGED,True,8,0,1,https://github.com/kkholst,"For the upcoming org-mode version 9 org-add-link-type is obsolete, so…",1,[],https://github.com/djcb/mu/pull/917,https://github.com/kkholst,1,https://github.com/djcb/mu/pull/917,… if org-link-set-parameters is bound we will use that instead.,… if org-link-set-parameters is bound we will use that instead.,True,{}
djcb/mu,https://github.com/djcb/mu,917,2016-09-04T12:14:16Z,2016-09-12T07:02:18Z,2016-09-13T12:57:09Z,MERGED,True,8,0,1,https://github.com/kkholst,"For the upcoming org-mode version 9 org-add-link-type is obsolete, so…",1,[],https://github.com/djcb/mu/pull/917,https://github.com/kkholst,2,https://github.com/djcb/mu/pull/917#issuecomment-244932021,… if org-link-set-parameters is bound we will use that instead.,Can see this has also been raised as an issue #918,True,{}
djcb/mu,https://github.com/djcb/mu,917,2016-09-04T12:14:16Z,2016-09-12T07:02:18Z,2016-09-13T12:57:09Z,MERGED,True,8,0,1,https://github.com/kkholst,"For the upcoming org-mode version 9 org-add-link-type is obsolete, so…",1,[],https://github.com/djcb/mu/pull/917,https://github.com/djcb,3,https://github.com/djcb/mu/pull/917#issuecomment-246264656,… if org-link-set-parameters is bound we will use that instead.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,917,2016-09-04T12:14:16Z,2016-09-12T07:02:18Z,2016-09-13T12:57:09Z,MERGED,True,8,0,1,https://github.com/kkholst,"For the upcoming org-mode version 9 org-add-link-type is obsolete, so…",1,[],https://github.com/djcb/mu/pull/917,https://github.com/andersjohansson,4,https://github.com/djcb/mu/pull/917#issuecomment-246672437,… if org-link-set-parameters is bound we will use that instead.,"Should it really do both org-add-link-type and org-link-set-parameters? Shouldn't it be:
;; org-add-link-type is obsolete as of org-mode 9.
;; Instead we will use the org-link-set-parameters method
(if (fboundp 'org-link-set-parameters)
    (org-link-set-parameters ""mu4e""
                             :follow #'org-mu4e-open
                             :store #'org-mu4e-store-link)
  (org-add-link-type ""mu4e"" 'org-mu4e-open)
  (add-hook 'org-store-link-functions 'org-mu4e-store-link))",True,{}
djcb/mu,https://github.com/djcb/mu,920,2016-09-13T13:09:43Z,2016-09-29T07:09:57Z,2016-09-29T07:10:13Z,MERGED,True,3,5,1,https://github.com/andersjohansson,Only call old org-link API if new unavailable,1,[],https://github.com/djcb/mu/pull/920,https://github.com/andersjohansson,1,https://github.com/djcb/mu/pull/920,Fix for #917,Fix for #917,True,{}
djcb/mu,https://github.com/djcb/mu,920,2016-09-13T13:09:43Z,2016-09-29T07:09:57Z,2016-09-29T07:10:13Z,MERGED,True,3,5,1,https://github.com/andersjohansson,Only call old org-link API if new unavailable,1,[],https://github.com/djcb/mu/pull/920,https://github.com/djcb,2,https://github.com/djcb/mu/pull/920#issuecomment-250388235,Fix for #917,Looks good -- thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,934,2016-10-26T06:21:26Z,2016-11-05T08:52:35Z,2016-11-05T08:52:35Z,MERGED,True,18,14,4,https://github.com/antoine-levitt,"Don't erase global-mode-string with context label, but add to it",2,[],https://github.com/djcb/mu/pull/934,https://github.com/antoine-levitt,1,https://github.com/djcb/mu/pull/934,See #929,See #929,True,{}
djcb/mu,https://github.com/djcb/mu,934,2016-10-26T06:21:26Z,2016-11-05T08:52:35Z,2016-11-05T08:52:35Z,MERGED,True,18,14,4,https://github.com/antoine-levitt,"Don't erase global-mode-string with context label, but add to it",2,[],https://github.com/djcb/mu/pull/934,https://github.com/antoine-levitt,2,https://github.com/djcb/mu/pull/934#issuecomment-257326201,See #929,"Ah, sorry, I added to this pull request instead of doing another one. Not very familiar with these yet.
Anyway, the second patch is because I kept wondering why, when I saved my draft titled ""hi"", I got ""hi<2>""  and ""hi"" alternatively. This fixes that, and it should not introduce any side effect.",True,{}
djcb/mu,https://github.com/djcb/mu,934,2016-10-26T06:21:26Z,2016-11-05T08:52:35Z,2016-11-05T08:52:35Z,MERGED,True,18,14,4,https://github.com/antoine-levitt,"Don't erase global-mode-string with context label, but add to it",2,[],https://github.com/djcb/mu/pull/934,https://github.com/djcb,3,https://github.com/djcb/mu/pull/934#issuecomment-258599206,See #929,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,936,2016-10-26T06:38:46Z,2016-10-26T18:03:36Z,2016-10-26T18:03:43Z,MERGED,True,2,2,1,https://github.com/darkfeline,Fix parentheses grouping typo,1,[],https://github.com/djcb/mu/pull/936,https://github.com/darkfeline,1,https://github.com/djcb/mu/pull/936,,,True,{}
djcb/mu,https://github.com/djcb/mu,936,2016-10-26T06:38:46Z,2016-10-26T18:03:36Z,2016-10-26T18:03:43Z,MERGED,True,2,2,1,https://github.com/darkfeline,Fix parentheses grouping typo,1,[],https://github.com/djcb/mu/pull/936,https://github.com/djcb,2,https://github.com/djcb/mu/pull/936#issuecomment-256429646,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,943,2016-10-31T11:32:58Z,2016-11-05T08:41:58Z,2016-11-05T09:51:17Z,MERGED,True,1,1,1,https://github.com/xuchunyang,Support Emacs 26 in configure.ac,1,[],https://github.com/djcb/mu/pull/943,https://github.com/xuchunyang,1,https://github.com/djcb/mu/pull/943,"The version under development is now 26. I installed Emacs from source
via Git recently, it gives:
emacs-version
=> ""26.0.50.2""","The version under development is now 26. I installed Emacs from source
via Git recently, it gives:
emacs-version
=> ""26.0.50.2""",True,{'HEART': ['https://github.com/j0ni']}
djcb/mu,https://github.com/djcb/mu,943,2016-10-31T11:32:58Z,2016-11-05T08:41:58Z,2016-11-05T09:51:17Z,MERGED,True,1,1,1,https://github.com/xuchunyang,Support Emacs 26 in configure.ac,1,[],https://github.com/djcb/mu/pull/943,https://github.com/j0ni,2,https://github.com/djcb/mu/pull/943#issuecomment-257650525,"The version under development is now 26. I installed Emacs from source
via Git recently, it gives:
emacs-version
=> ""26.0.50.2""",I hit this and had to install mu from source with this tweak to get it to build and install mu4e. This appears to be a workable solution for now - is there a better one? Or can you merge this so the downstream Arch AUR package mu-git works again?,True,{}
djcb/mu,https://github.com/djcb/mu,943,2016-10-31T11:32:58Z,2016-11-05T08:41:58Z,2016-11-05T09:51:17Z,MERGED,True,1,1,1,https://github.com/xuchunyang,Support Emacs 26 in configure.ac,1,[],https://github.com/djcb/mu/pull/943,https://github.com/djcb,3,https://github.com/djcb/mu/pull/943#issuecomment-258599315,"The version under development is now 26. I installed Emacs from source
via Git recently, it gives:
emacs-version
=> ""26.0.50.2""",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,948,2016-11-11T08:01:42Z,2021-06-12T15:36:29Z,2021-06-12T15:36:29Z,CLOSED,False,8,8,1,https://github.com/twoone3,Update mu4e~view-get-attach-num in mu4e-view.el,1,[],https://github.com/djcb/mu/pull/948,https://github.com/twoone3,1,https://github.com/djcb/mu/pull/948,"What is modified: if there is only one attachment, do not ask the user for attachment number (either or not MULTI is set) -- just ask for the action. Prompt the user only when there are multiple attachments.","What is modified: if there is only one attachment, do not ask the user for attachment number (either or not MULTI is set) -- just ask for the action. Prompt the user only when there are multiple attachments.",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/titaniumbones,1,https://github.com/djcb/mu/pull/952,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.",True,"{'THUMBS_UP': ['https://github.com/andrewsanchez', 'https://github.com/mankoff', 'https://github.com/A6GibKm', 'https://github.com/schoettl', 'https://github.com/andrew-hm']}"
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/stig,2,https://github.com/djcb/mu/pull/952#issuecomment-261745572,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","Hi @titaniumbones, I manually applied d60f58e to my setup (I don't use any hooks, so didn't bother applying that changeset) but I don't think it has made a difference. I'm still seeing the ""Message already sent, send again?"" question. I selected no, and went to the header part and hit C-c C-c and it sent without errors.",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/titaniumbones,3,https://github.com/djcb/mu/pull/952#issuecomment-261747098,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","Maybe that change is irrelevant. I was thinking it might be.
However, I also rewrote John's htmlize-and-send function -- see my blog
here:
http://matt.hackinghistory.ca/2016/11/18/sending-html-mail-with-mu4e/
What are you using to send your mail? Can you try my code and see if it
helps?
On 11/19/2016 06:00 PM, Stig Brautaset wrote:

Hi @titaniumbones https://github.com/titaniumbones, I manually
applied d60f58e
d60f58e
to my setup (I don't use any hooks, so didn't bother applying that
changeset) but I don't think it has made a difference. I'm still
seeing the ""Message already sent, send again?"" question. I selected
no, and went to the header part and hit |C-c C-c| and it sent without
errors.
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#952 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAWPNAhsayBm_uTlvRM-cHef3a_adlRWks5q_3-dgaJpZM4K3BKc.",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/stig,4,https://github.com/djcb/mu/pull/952#issuecomment-261767062,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","What are you using to send your mail? Can you try my code and
see if it helps?

My current setup is here:
https://github.com/stig/dot-files/blob/master/emacs.d/Email.org
I don't tend to actually send HTML mail, I just like to edit it in
org mode
(for footnotes etc). Because of that, moving to the header section
and
pressing C-c C-c works fine for me. Actually sending from the body
works fine
too, I just get that annoying warning.
As I don't want to send HTML emails automatically, I don't think
your code is
exactly what I need.",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/titaniumbones,5,https://github.com/djcb/mu/pull/952#issuecomment-261785590,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","I think that you will need to make sure org-mu4e-org-compose-mode has been turned OFF before you send the message.  One option might be to rewrite the toggle function with an optional parameter that allows you to specify turning it off, and add that as a hook to the send function. Or something like that. Anyway, try turning the mode off manually before sending and see if it works?
Stig Brautaset writes:


What are you using to send your mail? Can you try my code and
see if it helps?

My current setup is here:
https://github.com/stig/dot-files/blob/master/emacs.d/Email.org
I don't tend to actually send HTML mail, I just like to edit it in
org mode
(for footnotes etc). Because of that, moving to the header section
and
pressing C-c C-c works fine for me. Actually sending from the body
works fine
too, I just get that annoying warning.
As I don't want to send HTML emails automatically, I don't think
your code is
exactly what I need.",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/averter,6,https://github.com/djcb/mu/pull/952#issuecomment-652603954,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","For some reason I cannot get attachments right with this solution. Is there any particular trick to it? When I do M-x mml-attach I only get the typical mu4e code
<#part type=""image/jpeg"" filename=""~/example.jpeg"" disposition=attachment>
<#/part>

displayed in the html body.",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/Chris00,7,https://github.com/djcb/mu/pull/952#issuecomment-831421431,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.",I think OrgMsg is a good alternative to compose HTML emails.  I supports attachments.,True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/djcb,8,https://github.com/djcb/mu/pull/952#issuecomment-860583009,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","mu4e/org/compose has been deprecated for many years, closing this PR... perhaps OrgMsg can help?",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/Chris00,9,https://github.com/djcb/mu/pull/952#issuecomment-860584488,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","perhaps OrgMsg can help?

Absolutely (one may even write maths and have images be generated automatically).  Have not yet found the time to write something about it in the manual though.",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/peterhoeg,10,https://github.com/djcb/mu/pull/952#issuecomment-861182940,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","orgmsg is for writing in org and sending html. orgmsg also only kicks in when replying to an existing html mail (or when creating a new email).

My request was with regards to writing in org and sending either markdown or plain text (or html but orgmsg would handle that).",True,{}
djcb/mu,https://github.com/djcb/mu,952,2016-11-18T23:05:20Z,2021-06-14T10:38:04Z,2021-06-23T19:37:10Z,CLOSED,False,24,3,2,https://github.com/titaniumbones,Org mu4e compose stabilization,6,[],https://github.com/djcb/mu/pull/952,https://github.com/Chris00,11,https://github.com/djcb/mu/pull/952#issuecomment-867105940,"Hi Dirk-Jan,
Two small patches which I think fix some of the stability issuesi n org-mu4e-compose-org-mode.  With these patches, I can now add a hook to compose in html by default. I know this is not best practice, but I think there are many use cases for it, and while it would be better to fix org-mu4e-compose-org-mode entirely, this may help a fair number of people.","My request was with regards to writing in org and sending either markdown or plain text (or html but orgmsg would handle that).

Sending in plain text is no problem.  Just adapt the following to your liking:
  (setq org-msg-default-alternatives '((new		. (text html))
				       (reply-to-html	. (text html))
				       (reply-to-text	. (text))))
Sending in org format is also possible.  It may be possible to register the markdown exporter in org-msg-alternative-exporters.",True,{}
djcb/mu,https://github.com/djcb/mu,955,2016-11-21T23:05:54Z,2016-11-23T21:43:43Z,2016-11-23T21:43:49Z,MERGED,True,2,2,1,https://github.com/stig,Fix typo / grammar in mu4e-html2text-command doc,1,[],https://github.com/djcb/mu/pull/955,https://github.com/stig,1,https://github.com/djcb/mu/pull/955,,,True,{}
djcb/mu,https://github.com/djcb/mu,955,2016-11-21T23:05:54Z,2016-11-23T21:43:43Z,2016-11-23T21:43:49Z,MERGED,True,2,2,1,https://github.com/stig,Fix typo / grammar in mu4e-html2text-command doc,1,[],https://github.com/djcb/mu/pull/955,https://github.com/djcb,2,https://github.com/djcb/mu/pull/955#issuecomment-262637263,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,956,2016-11-23T10:15:55Z,2016-11-27T12:47:04Z,2016-11-27T12:47:04Z,CLOSED,False,6,4,1,https://github.com/panjie,logical error of choose text or html part of mail fixed,2,[],https://github.com/djcb/mu/pull/956,https://github.com/panjie,1,https://github.com/djcb/mu/pull/956,"The logic to decide whether text or html part of email will be used is wrong so that text part will always be choosed, even if html is forced to be used(using h in message view).","The logic to decide whether text or html part of email will be used is wrong so that text part will always be choosed, even if html is forced to be used(using h in message view).",True,{}
djcb/mu,https://github.com/djcb/mu,956,2016-11-23T10:15:55Z,2016-11-27T12:47:04Z,2016-11-27T12:47:04Z,CLOSED,False,6,4,1,https://github.com/panjie,logical error of choose text or html part of mail fixed,2,[],https://github.com/djcb/mu/pull/956,https://github.com/djcb,2,https://github.com/djcb/mu/pull/956#issuecomment-263112990,"The logic to decide whether text or html part of email will be used is wrong so that text part will always be choosed, even if html is forced to be used(using h in message view).","Hmm, this doesn't seem quite right... with html-only messages I get:
error in process filter: mu4e-view-message-text: Wrong type argument: char-or-string-p, nil
error in process filter: Wrong type argument: char-or-string-p, nil",True,{}
djcb/mu,https://github.com/djcb/mu,956,2016-11-23T10:15:55Z,2016-11-27T12:47:04Z,2016-11-27T12:47:04Z,CLOSED,False,6,4,1,https://github.com/panjie,logical error of choose text or html part of mail fixed,2,[],https://github.com/djcb/mu/pull/956,https://github.com/djcb,3,https://github.com/djcb/mu/pull/956#issuecomment-263120353,"The logic to decide whether text or html part of email will be used is wrong so that text part will always be choosed, even if html is forced to be used(using h in message view).",I've fixed it now in a slightly different way.,True,{}
djcb/mu,https://github.com/djcb/mu,957,2016-11-26T13:55:54Z,2016-11-27T08:58:52Z,2016-11-27T08:58:52Z,CLOSED,False,1,1,1,https://github.com/gambhiro,typo,1,[],https://github.com/djcb/mu/pull/957,https://github.com/gambhiro,1,https://github.com/djcb/mu/pull/957,,,True,{}
djcb/mu,https://github.com/djcb/mu,957,2016-11-26T13:55:54Z,2016-11-27T08:58:52Z,2016-11-27T08:58:52Z,CLOSED,False,1,1,1,https://github.com/gambhiro,typo,1,[],https://github.com/djcb/mu/pull/957,https://github.com/djcb,2,https://github.com/djcb/mu/pull/957#issuecomment-263110084,,"Ah, thanks -- but already fixed that one.",True,{}
djcb/mu,https://github.com/djcb/mu,960,2016-11-30T07:53:08Z,2016-12-03T09:39:41Z,2016-12-03T12:15:15Z,CLOSED,False,3,3,1,https://github.com/stig,mu4e: call enter-func after setting vars during context switch,1,[],https://github.com/djcb/mu/pull/960,https://github.com/stig,1,https://github.com/djcb/mu/pull/960,With this you can change bookmarks during context switch and have the menu redrawn by making your enter-func contain a call to mu4e~main-view-real.,With this you can change bookmarks during context switch and have the menu redrawn by making your enter-func contain a call to mu4e~main-view-real.,True,{}
djcb/mu,https://github.com/djcb/mu,960,2016-11-30T07:53:08Z,2016-12-03T09:39:41Z,2016-12-03T12:15:15Z,CLOSED,False,3,3,1,https://github.com/stig,mu4e: call enter-func after setting vars during context switch,1,[],https://github.com/djcb/mu/pull/960,https://github.com/djcb,2,https://github.com/djcb/mu/pull/960#issuecomment-264628861,With this you can change bookmarks during context switch and have the menu redrawn by making your enter-func contain a call to mu4e~main-view-real.,"Thanks,
The enter-func should be before setting those variables though, since want to allow for changing things before that kicks in.
If there's some problem with the menu, I think we should handle that in a different way.
(and I recommend not to use any functions/variables that start with mu4e~, those are internal to mu4e and can change at any moment),",True,{}
djcb/mu,https://github.com/djcb/mu,960,2016-11-30T07:53:08Z,2016-12-03T09:39:41Z,2016-12-03T12:15:15Z,CLOSED,False,3,3,1,https://github.com/stig,mu4e: call enter-func after setting vars during context switch,1,[],https://github.com/djcb/mu/pull/960,https://github.com/stig,3,https://github.com/djcb/mu/pull/960#issuecomment-264635817,With this you can change bookmarks during context switch and have the menu redrawn by making your enter-func contain a call to mu4e~main-view-real.,"No problems; thanks for the comments. I've opened #963 with an alternative solution that should solve the issue. (I like that one better, to be honest!)",True,{}
djcb/mu,https://github.com/djcb/mu,961,2016-11-30T12:47:25Z,2017-01-30T19:09:08Z,2017-01-31T08:10:02Z,CLOSED,False,5,1,1,https://github.com/mssola,mu4e: smarter initialization of mu4e-msg2pdf,1,[],https://github.com/djcb/mu/pull/961,https://github.com/mssola,1,https://github.com/djcb/mu/pull/961,"Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com","Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com",True,{}
djcb/mu,https://github.com/djcb/mu,961,2016-11-30T12:47:25Z,2017-01-30T19:09:08Z,2017-01-31T08:10:02Z,CLOSED,False,5,1,1,https://github.com/mssola,mu4e: smarter initialization of mu4e-msg2pdf,1,[],https://github.com/djcb/mu/pull/961,https://github.com/djcb,2,https://github.com/djcb/mu/pull/961#issuecomment-266863301,"Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com","msg2pdf is explicitly marked as noinst_, so it shouldn't be installed at all, I think.",True,{}
djcb/mu,https://github.com/djcb/mu,961,2016-11-30T12:47:25Z,2017-01-30T19:09:08Z,2017-01-31T08:10:02Z,CLOSED,False,5,1,1,https://github.com/mssola,mu4e: smarter initialization of mu4e-msg2pdf,1,[],https://github.com/djcb/mu/pull/961,https://github.com/mssola,3,https://github.com/djcb/mu/pull/961#issuecomment-266962066,"Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com","As far as I can see, it's not marked as noinst. Only test executables and test libraries are marked like that. If you think that it shouldn't be installed at all, maybe I can change this PR to make it so.",True,{}
djcb/mu,https://github.com/djcb/mu,961,2016-11-30T12:47:25Z,2017-01-30T19:09:08Z,2017-01-31T08:10:02Z,CLOSED,False,5,1,1,https://github.com/mssola,mu4e: smarter initialization of mu4e-msg2pdf,1,[],https://github.com/djcb/mu/pull/961,https://github.com/djcb,4,https://github.com/djcb/mu/pull/961#issuecomment-269307203,"Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com","https://github.com/djcb/mu/blob/master/toys/msg2pdf/Makefile.am#L31 says noinst_, or?
Perhaps it should be installed though.",True,{}
djcb/mu,https://github.com/djcb/mu,961,2016-11-30T12:47:25Z,2017-01-30T19:09:08Z,2017-01-31T08:10:02Z,CLOSED,False,5,1,1,https://github.com/mssola,mu4e: smarter initialization of mu4e-msg2pdf,1,[],https://github.com/djcb/mu/pull/961,https://github.com/mssola,5,https://github.com/djcb/mu/pull/961#issuecomment-269984797,"Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com","https://github.com/djcb/mu/blob/master/toys/msg2pdf/Makefile.am#L31 says noinst_, or?

Sigh... I was looking at the wrong Makefile.am ...

Perhaps it should be installed though.

Makes sense to me. I can update this PR so it's installed.",True,{}
djcb/mu,https://github.com/djcb/mu,961,2016-11-30T12:47:25Z,2017-01-30T19:09:08Z,2017-01-31T08:10:02Z,CLOSED,False,5,1,1,https://github.com/mssola,mu4e: smarter initialization of mu4e-msg2pdf,1,[],https://github.com/djcb/mu/pull/961,https://github.com/djcb,6,https://github.com/djcb/mu/pull/961#issuecomment-276158774,"Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com","I made change (similar to your change so that it will look outside the build-path... but I don't think msg2pdf is ready yet to be installed. Anyway, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,961,2016-11-30T12:47:25Z,2017-01-30T19:09:08Z,2017-01-31T08:10:02Z,CLOSED,False,5,1,1,https://github.com/mssola,mu4e: smarter initialization of mu4e-msg2pdf,1,[],https://github.com/djcb/mu/pull/961,https://github.com/mssola,7,https://github.com/djcb/mu/pull/961#issuecomment-276299946,"Before this commit the initialization of the mu4e-msg2pdf variable
assumed that the build directory was available. However, that's not the
case when installing mu from a distro package (in my case from OBS).
With this change, mu4e will look for the msg2pdf binary on the
exec-path first. If the binary exists, then this will be the initial
value. If the binary doesn't exist, then we fallback to the
mu4e-builddir approach.
Signed-off-by: Miquel Sabaté Solà msabate@suse.com","Oh, I can see this in commit 5a09733. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,962,2016-11-30T19:57:21Z,2016-12-04T16:11:46Z,2016-12-04T16:11:56Z,MERGED,True,4,1,1,https://github.com/titaniumbones,force use of strings for other-header in mu4e~compose-mail,1,[],https://github.com/djcb/mu/pull/962,https://github.com/titaniumbones,1,https://github.com/djcb/mu/pull/962,"org-mime and potentially other users of compose-mail' pass a parameter other-headers', an alist of the form ((symbol . string)).
`mu4e~compose-mail' sends this parameter to message-add-header, which
appears to expect a string instead.  We therefore loop through
other-headers and instead pass a string to message-add-header for each
element of other-headers.","org-mime and potentially other users of compose-mail' pass a parameter other-headers', an alist of the form ((symbol . string)).
`mu4e~compose-mail' sends this parameter to message-add-header, which
appears to expect a string instead.  We therefore loop through
other-headers and instead pass a string to message-add-header for each
element of other-headers.",True,{}
djcb/mu,https://github.com/djcb/mu,962,2016-11-30T19:57:21Z,2016-12-04T16:11:46Z,2016-12-04T16:11:56Z,MERGED,True,4,1,1,https://github.com/titaniumbones,force use of strings for other-header in mu4e~compose-mail,1,[],https://github.com/djcb/mu/pull/962,https://github.com/djcb,2,https://github.com/djcb/mu/pull/962#issuecomment-264712747,"org-mime and potentially other users of compose-mail' pass a parameter other-headers', an alist of the form ((symbol . string)).
`mu4e~compose-mail' sends this parameter to message-add-header, which
appears to expect a string instead.  We therefore loop through
other-headers and instead pass a string to message-add-header for each
element of other-headers.","Looks good! Thanks, merged.",True,{}
djcb/mu,https://github.com/djcb/mu,963,2016-12-03T12:14:10Z,2016-12-04T16:08:06Z,2016-12-04T17:17:54Z,MERGED,True,1,0,1,https://github.com/stig,mu4e: redraw menu after context switch,1,[],https://github.com/djcb/mu/pull/963,https://github.com/stig,1,https://github.com/djcb/mu/pull/963,"This is useful if you change e.g. bookmarks in the context vars and want your menu to reflect that.
Would this be an acceptable alternative to #960?","This is useful if you change e.g. bookmarks in the context vars and want your menu to reflect that.
Would this be an acceptable alternative to #960?",True,{}
djcb/mu,https://github.com/djcb/mu,963,2016-12-03T12:14:10Z,2016-12-04T16:08:06Z,2016-12-04T17:17:54Z,MERGED,True,1,0,1,https://github.com/stig,mu4e: redraw menu after context switch,1,[],https://github.com/djcb/mu/pull/963,https://github.com/djcb,2,https://github.com/djcb/mu/pull/963#issuecomment-264712496,"This is useful if you change e.g. bookmarks in the context vars and want your menu to reflect that.
Would this be an acceptable alternative to #960?",Looks good - merged. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,965,2016-12-03T23:20:37Z,2016-12-04T16:04:29Z,2016-12-04T17:18:09Z,MERGED,True,4,3,2,https://github.com/stig,mu: swap begin and end if begin is _numerically_ bigger than end,1,[],https://github.com/djcb/mu/pull/965,https://github.com/stig,1,https://github.com/djcb/mu/pull/965,"The old behaviour would compare the strings, so would swap the start and end ranges if start was 3K and end was 2M.
Fixes: #964","The old behaviour would compare the strings, so would swap the start and end ranges if start was 3K and end was 2M.
Fixes: #964",True,{}
djcb/mu,https://github.com/djcb/mu,965,2016-12-03T23:20:37Z,2016-12-04T16:04:29Z,2016-12-04T17:18:09Z,MERGED,True,4,3,2,https://github.com/stig,mu: swap begin and end if begin is _numerically_ bigger than end,1,[],https://github.com/djcb/mu/pull/965,https://github.com/djcb,2,https://github.com/djcb/mu/pull/965#issuecomment-264712290,"The old behaviour would compare the strings, so would swap the start and end ranges if start was 3K and end was 2M.
Fixes: #964","Oh, good catch! Thanks, merged.",True,{}
djcb/mu,https://github.com/djcb/mu,966,2016-12-03T23:39:07Z,2016-12-27T10:22:12Z,2016-12-27T10:22:12Z,CLOSED,False,1,1,1,https://github.com/stig,Remove comma in NEWS.org,1,[],https://github.com/djcb/mu/pull/966,https://github.com/stig,1,https://github.com/djcb/mu/pull/966,,,True,{}
djcb/mu,https://github.com/djcb/mu,969,2016-12-08T01:58:52Z,2016-12-28T11:52:10Z,2016-12-30T23:06:18Z,CLOSED,False,12,2,1,https://github.com/xuhdev,Child processes should be session leaders.,1,[],https://github.com/djcb/mu/pull/969,https://github.com/xuhdev,1,https://github.com/djcb/mu/pull/969,"If not, when the session of mu is killed, these child processes are also killed. This scenario shows up when using mu4e: a PDF attachment, for example, is opened by Evince, but as soon as Emacs exits, Evince is also killed.","If not, when the session of mu is killed, these child processes are also killed. This scenario shows up when using mu4e: a PDF attachment, for example, is opened by Evince, but as soon as Emacs exits, Evince is also killed.",True,{}
djcb/mu,https://github.com/djcb/mu,969,2016-12-08T01:58:52Z,2016-12-28T11:52:10Z,2016-12-30T23:06:18Z,CLOSED,False,12,2,1,https://github.com/xuhdev,Child processes should be session leaders.,1,[],https://github.com/djcb/mu/pull/969,https://github.com/djcb,2,https://github.com/djcb/mu/pull/969#issuecomment-269467076,"If not, when the session of mu is killed, these child processes are also killed. This scenario shows up when using mu4e: a PDF attachment, for example, is opened by Evince, but as soon as Emacs exits, Evince is also killed.",This h as been merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,972,2016-12-11T13:25:39Z,2016-12-11T17:03:58Z,2016-12-11T17:04:13Z,MERGED,True,1,1,1,https://github.com/j-hao,mu4e: add mu4e-msg-changed-hook to mu4e-index-updated-hook globally,1,[],https://github.com/djcb/mu/pull/972,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/972,"mu4e-msg-changed-hook should add to mu4e-index-updated-hook globally instead of header mode only. Otherwise, it causes issue like agpchil/mu4e-maildirs-extension#34","mu4e-msg-changed-hook should add to mu4e-index-updated-hook globally instead of header mode only. Otherwise, it causes issue like agpchil/mu4e-maildirs-extension#34",True,{}
djcb/mu,https://github.com/djcb/mu,972,2016-12-11T13:25:39Z,2016-12-11T17:03:58Z,2016-12-11T17:04:13Z,MERGED,True,1,1,1,https://github.com/j-hao,mu4e: add mu4e-msg-changed-hook to mu4e-index-updated-hook globally,1,[],https://github.com/djcb/mu/pull/972,https://github.com/djcb,2,https://github.com/djcb/mu/pull/972#issuecomment-266293452,"mu4e-msg-changed-hook should add to mu4e-index-updated-hook globally instead of header mode only. Otherwise, it causes issue like agpchil/mu4e-maildirs-extension#34","Makes sense -- merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/976,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.","As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.",True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/976#issuecomment-266826073,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.",The build is failing but this is unrelated to my change.,True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/976#issuecomment-266912956,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.",See #977 to make it pass the tests.,True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/976#issuecomment-266954515,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.",I may propose an alternative where attachments are always rewritten — so there should not be any need for msg as an argument...,True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/976#issuecomment-267046545,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.",The alternative is provided by PR #978,True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,6,https://github.com/djcb/mu/pull/976#issuecomment-267838423,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.","I think this PR is more versatile than #978 and should be preferred to it.  It allows to extract cid images through shr-content-function (I have additional code using this — at the moment, it goes through a file but it would be nice to get the image data directly into a buffer if mu allows it).",True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/djcb,7,https://github.com/djcb/mu/pull/976#issuecomment-274950326,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.","So, there's a bit of movement here; mu4e-message now has a mu4e-html2text-command that can take msg as a parameter (and uses introspection for backward compatibility).
Apart from that, I guess we don't need a special mu4e-view-show-cid-inline and use mu4e-view-show-images instead. Can you update your PR for that? Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,8,https://github.com/djcb/mu/pull/976#issuecomment-274969370,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.","So one assumes that, if mu4e-view-show-images is true, then mu4e-html2text-command displayed and we do not need to show them again at the end of the message?",True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/djcb,9,https://github.com/djcb/mu/pull/976#issuecomment-275220212,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.","Oh, that's a good point, I think that for cid:-images, indeed they shouldn't be shown (again) at the end of the message. Normal attached images should though, I think, or?",True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/Chris00,10,https://github.com/djcb/mu/pull/976#issuecomment-275235214,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.","On 2017-01-25, Dirk-Jan C. Binnema wrote:

 Normal attached images should though, I think, or?
That’s what I think.",True,{}
djcb/mu,https://github.com/djcb/mu,976,2016-12-13T18:38:42Z,2018-04-25T08:33:32Z,2018-04-25T08:33:32Z,CLOSED,False,60,25,6,https://github.com/Chris00,Allow `mu4e-html2text-command' to be given `msg' as argument,4,[],https://github.com/djcb/mu/pull/976,https://github.com/djcb,11,https://github.com/djcb/mu/pull/976#issuecomment-384205931,"As explained in mu4e.texi, this is the only way to change the ""cid:"" links to links to actual images.  The change is backward compatible.",This PR is superseded; closing.,True,{}
djcb/mu,https://github.com/djcb/mu,977,2016-12-14T00:58:32Z,2016-12-14T16:53:18Z,2017-10-29T21:25:26Z,MERGED,True,11,2,1,https://github.com/Chris00,Travis: use recent autoconf 2.69 and recent autoconf-archive,1,[],https://github.com/djcb/mu/pull/977,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/977,,,True,{}
djcb/mu,https://github.com/djcb/mu,977,2016-12-14T00:58:32Z,2016-12-14T16:53:18Z,2017-10-29T21:25:26Z,MERGED,True,11,2,1,https://github.com/Chris00,Travis: use recent autoconf 2.69 and recent autoconf-archive,1,[],https://github.com/djcb/mu/pull/977,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/977#issuecomment-266910980,,P.S. Note that the -bin are supposed to be deprecated.,True,{}
djcb/mu,https://github.com/djcb/mu,977,2016-12-14T00:58:32Z,2016-12-14T16:53:18Z,2017-10-29T21:25:26Z,MERGED,True,11,2,1,https://github.com/Chris00,Travis: use recent autoconf 2.69 and recent autoconf-archive,1,[],https://github.com/djcb/mu/pull/977,https://github.com/djcb,3,https://github.com/djcb/mu/pull/977#issuecomment-267088487,,Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,977,2016-12-14T00:58:32Z,2016-12-14T16:53:18Z,2017-10-29T21:25:26Z,MERGED,True,11,2,1,https://github.com/Chris00,Travis: use recent autoconf 2.69 and recent autoconf-archive,1,[],https://github.com/djcb/mu/pull/977,https://github.com/djcb,4,https://github.com/djcb/mu/pull/977#issuecomment-340249643,,"BTW, Travis broke since mu now requires c++14...  @Chris00: do you know how to fix this?",True,{}
djcb/mu,https://github.com/djcb/mu,977,2016-12-14T00:58:32Z,2016-12-14T16:53:18Z,2017-10-29T21:25:26Z,MERGED,True,11,2,1,https://github.com/Chris00,Travis: use recent autoconf 2.69 and recent autoconf-archive,1,[],https://github.com/djcb/mu/pull/977,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/977#issuecomment-340299475,,Does it help if you add the package that provides c++14 to BUILD_PKGS (in https://github.com/djcb/mu/blob/master/.travis.yml)?,True,{}
djcb/mu,https://github.com/djcb/mu,978,2016-12-14T14:24:42Z,2016-12-18T18:51:41Z,2020-02-21T17:55:18Z,CLOSED,False,31,16,3,https://github.com/Chris00,Convert cid: → file:// files before mu4e-html2text-command,3,[],https://github.com/djcb/mu/pull/978,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/978,"The cid: attachments are saved to disk and the file:// links point to
these files.","The cid: attachments are saved to disk and the file:// links point to
these files.",True,{}
djcb/mu,https://github.com/djcb/mu,978,2016-12-14T14:24:42Z,2016-12-18T18:51:41Z,2020-02-21T17:55:18Z,CLOSED,False,31,16,3,https://github.com/Chris00,Convert cid: → file:// files before mu4e-html2text-command,3,[],https://github.com/djcb/mu/pull/978,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/978#issuecomment-267046791,"The cid: attachments are saved to disk and the file:// links point to
these files.",Of course Travis fails — see #977,True,{}
djcb/mu,https://github.com/djcb/mu,978,2016-12-14T14:24:42Z,2016-12-18T18:51:41Z,2020-02-21T17:55:18Z,CLOSED,False,31,16,3,https://github.com/Chris00,Convert cid: → file:// files before mu4e-html2text-command,3,[],https://github.com/djcb/mu/pull/978,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/978#issuecomment-267838720,"The cid: attachments are saved to disk and the file:// links point to
these files.","I was favoring this PR initially but it did not play well with shr — images did not show up.  I have code that shows images in shr using #976, thus the latter is now favored.",True,{}
djcb/mu,https://github.com/djcb/mu,979,2016-12-14T17:35:55Z,2016-12-15T06:20:50Z,2016-12-15T06:20:50Z,CLOSED,False,3,21,1,https://github.com/jschwab,Defer compilation instructions to mu4e manual,1,[],https://github.com/djcb/mu/pull/979,https://github.com/jschwab,1,https://github.com/djcb/mu/pull/979,"The compilation information appeared in two places.  It will be easier
to keep up to date if it is only in one place.","The compilation information appeared in two places.  It will be easier
to keep up to date if it is only in one place.",True,{}
djcb/mu,https://github.com/djcb/mu,979,2016-12-14T17:35:55Z,2016-12-15T06:20:50Z,2016-12-15T06:20:50Z,CLOSED,False,3,21,1,https://github.com/jschwab,Defer compilation instructions to mu4e manual,1,[],https://github.com/djcb/mu/pull/979,https://github.com/djcb,2,https://github.com/djcb/mu/pull/979#issuecomment-267248835,"The compilation information appeared in two places.  It will be easier
to keep up to date if it is only in one place.","I'm not going to merge the two documents, they have a different purpose / target audience, but indeed, HACKING needed an update. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,981,2016-12-17T13:31:06Z,2016-12-27T10:17:44Z,2016-12-27T10:17:53Z,MERGED,True,4,4,2,https://github.com/stig,Two minor fixes to README,1,[],https://github.com/djcb/mu/pull/981,https://github.com/stig,1,https://github.com/djcb/mu/pull/981,,,True,{}
djcb/mu,https://github.com/djcb/mu,981,2016-12-17T13:31:06Z,2016-12-27T10:17:44Z,2016-12-27T10:17:53Z,MERGED,True,4,4,2,https://github.com/stig,Two minor fixes to README,1,[],https://github.com/djcb/mu/pull/981,https://github.com/djcb,2,https://github.com/djcb/mu/pull/981#issuecomment-269306348,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,982,2016-12-18T10:41:27Z,2016-12-27T10:19:07Z,2016-12-27T13:01:23Z,MERGED,True,3,3,1,https://github.com/tychobrailleur,mu4e: Fix outdated docstring for `mu4e-headers-actions',1,[],https://github.com/djcb/mu/pull/982,https://github.com/tychobrailleur,1,https://github.com/djcb/mu/pull/982,,,True,{}
djcb/mu,https://github.com/djcb/mu,982,2016-12-18T10:41:27Z,2016-12-27T10:19:07Z,2016-12-27T13:01:23Z,MERGED,True,3,3,1,https://github.com/tychobrailleur,mu4e: Fix outdated docstring for `mu4e-headers-actions',1,[],https://github.com/djcb/mu/pull/982,https://github.com/djcb,2,https://github.com/djcb/mu/pull/982#issuecomment-269306525,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,983,2016-12-18T19:50:36Z,2016-12-27T10:20:59Z,2016-12-27T10:20:59Z,MERGED,True,1,0,1,https://github.com/stig,Ignore xua,1,[],https://github.com/djcb/mu/pull/983,https://github.com/stig,1,https://github.com/djcb/mu/pull/983,,,True,{}
djcb/mu,https://github.com/djcb/mu,983,2016-12-18T19:50:36Z,2016-12-27T10:20:59Z,2016-12-27T10:20:59Z,MERGED,True,1,0,1,https://github.com/stig,Ignore xua,1,[],https://github.com/djcb/mu/pull/983,https://github.com/stig,2,https://github.com/djcb/mu/pull/983#issuecomment-268555994,,"There was a whole lot of extra commits on this PR for some reason... I've fixed it now, so it only contains the .gitignore addition.",True,{}
djcb/mu,https://github.com/djcb/mu,983,2016-12-18T19:50:36Z,2016-12-27T10:20:59Z,2016-12-27T10:20:59Z,MERGED,True,1,0,1,https://github.com/stig,Ignore xua,1,[],https://github.com/djcb/mu/pull/983,https://github.com/djcb,3,https://github.com/djcb/mu/pull/983#issuecomment-269306054,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,985,2016-12-19T08:40:32Z,2016-12-27T15:01:34Z,2017-02-12T06:57:24Z,MERGED,True,30,13,1,https://github.com/thierryvolpiatto,Add some improvements in attachment actions.,1,[],https://github.com/djcb/mu/pull/985,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/985,"mu4e/mu4e-view.el (mu4e-view-attachment-action):
Handle multi save in mu4e-view-attachment-action.


mu4e/mu4e-view.el (mu4e-view-attachment-actions):
Make mu4e-view-attachment-actions a defcustom and add some options.


New user variable mu4e-view-attachment-assoc.

mu4e/mu4e-view.el (mu4e-view-attachment-assoc): New.
(mu4e-view-open-attachment-with): Use it.","mu4e/mu4e-view.el (mu4e-view-attachment-action):
Handle multi save in mu4e-view-attachment-action.


mu4e/mu4e-view.el (mu4e-view-attachment-actions):
Make mu4e-view-attachment-actions a defcustom and add some options.


New user variable mu4e-view-attachment-assoc.

mu4e/mu4e-view.el (mu4e-view-attachment-assoc): New.
(mu4e-view-open-attachment-with): Use it.",True,{}
djcb/mu,https://github.com/djcb/mu,985,2016-12-19T08:40:32Z,2016-12-27T15:01:34Z,2017-02-12T06:57:24Z,MERGED,True,30,13,1,https://github.com/thierryvolpiatto,Add some improvements in attachment actions.,1,[],https://github.com/djcb/mu/pull/985,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/985#issuecomment-267910839,"mu4e/mu4e-view.el (mu4e-view-attachment-action):
Handle multi save in mu4e-view-attachment-action.


mu4e/mu4e-view.el (mu4e-view-attachment-actions):
Make mu4e-view-attachment-actions a defcustom and add some options.


New user variable mu4e-view-attachment-assoc.

mu4e/mu4e-view.el (mu4e-view-attachment-assoc): New.
(mu4e-view-open-attachment-with): Use it.","mu4e-view-attachment-assoc allow configuring which program to use by default with extension.
I added it as initial input in the read-string but could be added instead to the default arg and accessible with M-n (in this case more than one program can be added).",True,{}
djcb/mu,https://github.com/djcb/mu,985,2016-12-19T08:40:32Z,2016-12-27T15:01:34Z,2017-02-12T06:57:24Z,MERGED,True,30,13,1,https://github.com/thierryvolpiatto,Add some improvements in attachment actions.,1,[],https://github.com/djcb/mu/pull/985,https://github.com/djcb,3,https://github.com/djcb/mu/pull/985#issuecomment-269336949,"mu4e/mu4e-view.el (mu4e-view-attachment-action):
Handle multi save in mu4e-view-attachment-action.


mu4e/mu4e-view.el (mu4e-view-attachment-actions):
Make mu4e-view-attachment-actions a defcustom and add some options.


New user variable mu4e-view-attachment-assoc.

mu4e/mu4e-view.el (mu4e-view-attachment-assoc): New.
(mu4e-view-open-attachment-with): Use it.","Looks good, merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/stig,1,https://github.com/djcb/mu/pull/986,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.","This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.",True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/986#issuecomment-269352439,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.",I did not really dig into your code but it looks to me like a display issue so I am surprised there is quite a bit of C code involved.  Did you have a look to the recommendations for Gnus?  See also Emacs MIME.,True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/stig,3,https://github.com/djcb/mu/pull/986#issuecomment-269393878,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.","Hi @Chris00 there's quite a bit of C code because mu doesn't currently (as far as I could see) expose any of the content-type params to mu4e; it just gives the text and html bodies without any parameters. As I understand it, without the format=flowed and delsp=yes params mu4e can't determine whether to reflow a message.
I don't quite understand the relevance of the Gnus resource you linked to. It seems to be talking about long lines, which is not what I want. I am aiming for body text to be reflowed to my desired fill column, not wrapping at the frame width.",True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/986#issuecomment-269458058,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.","On 2016-12-27, Stig Brautaset wrote:

 Hi @Chris00 there's quite a bit of C code because mu doesn't currently
 (as far as I could see) expose any of the content-type params to mu4e;
 [...]
OK.
 I don't quite understand the relevance of the Gnus resource you linked
 to. It seems to be talking about long lines, which is not what I
 want. I am aiming for body text to be reflowed to my desired fill
 column, not wrapping at the frame width.
I read more your code and I see you use Gnus flow-fill which is good —
so the link does not add anything useful.",True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/stig,5,https://github.com/djcb/mu/pull/986#issuecomment-272317935,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.",Thanks for all the comments @djcb! I believe I have addressed all of them. Where do I take this from here?,True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/djcb,6,https://github.com/djcb/mu/pull/986#issuecomment-274957354,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.","Ah, sorry for the late response. I like the code and you even added tests, very good!
I would like to merge it sometime soon, but one thing I'd like to do before that is add some generic transform function hook,  and your flow-handling would could use that. So, give me a few days to add that; after that, I think we can get your change in (without need to further change mu4e-message-body-text. Cheers!",True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/djcb,7,https://github.com/djcb/mu/pull/986#issuecomment-276154368,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.","There's mu4e-message-body-rewrite-functions now (see mu4e-message-outlook-cleanup for an example); so if you can update your code for that, we can take it in, thanks!",True,{'THUMBS_UP': ['https://github.com/stig']}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/stig,8,https://github.com/djcb/mu/pull/986#issuecomment-276350082,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.","@djcb Thanks, I've rebased onto master and combined all the commits into one. Let me know if there's anything else you want from this!",True,{}
djcb/mu,https://github.com/djcb/mu,986,2016-12-19T23:42:16Z,2017-02-05T13:52:16Z,2017-02-05T13:52:20Z,MERGED,True,137,1,5,https://github.com/stig,POC: Respect format=flowed and delsp=yes for viewing plain-text messages,1,[],https://github.com/djcb/mu/pull/986,https://github.com/djcb,9,https://github.com/djcb/mu/pull/986#issuecomment-277521132,"This is my initial attempt at addressing #808, supporting format=flowed (and delsp=yes) when viewing mail.
While this does rewrap some test messages I've tried nicely, I wouldn't recommend merging it in its current form:

There are almost certainly may be memory leaks here. Update: may not be true any more, after the last few commits on this branch.
I also encountered a situation where some mails didn't load. Update: I was able to track down why, and plugged that particular hole. It's running fine for me now.
I suspect we would also want a toggle to say whether to honour reflow, much as we do for sending.

I fear this approach is too simplistic because of the way mu accumulates plain-text bodies. This approach could produce very nasty results if some plain-text bodies are marked format=flowed and others are not, but then everything is format-flowed. This body accumulation happens in C, but I don't relish the idea of re-implementing flow-fill.el in C so we can choose to reflow individual body chunks while accumulating. I feel a better solution would be to delay the accumulation and, instead of providing separate html and text strings in mu-msg-sexp.c, just provide an array of bodies, each with their own content type, and handle the accumulation in emacs-lisp.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/j-hao,1,https://github.com/djcb/mu/pull/991,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/991#issuecomment-269072305,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,"Jun Hao <notifications@github.com> writes:
 I think this is useful if there was any issue and update process was
 stuck forever. I have personally encountered the same issue with isync
 and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/
 and this allow me to workaround it.
Perhaps it would be better to kill process instead of interrupt in
`mu4e-interrupt-update-mail` ?

Most of the time when hitting ""S"" interrupt-process is not enough to
stop the process.

Sometimes the update process is just very slow and not stuck forever, a
timeout would stop it instead of letting it finishing...
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/j-hao,3,https://github.com/djcb/mu/pull/991#issuecomment-269119763,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,"This PR is actually will kill process (if process is in running state) instead of interrupt it. So I think it matches your use case as well.
Also thanks for the info about S key. Don't know that :)",True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/thierryvolpiatto,4,https://github.com/djcb/mu/pull/991#issuecomment-269123191,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,"Jun Hao <notifications@github.com> writes:
 This PR is actually will kill process (if process is in running state)
 instead of interrupt it. So I think it matches your use case as well.
Yes, sending SIGKILL is better indeed, but using a timeout is not the
good approach IMO, it will stop the update on slow connections even when
no particular problem happens during this connection.
 Also thanks for the info about S key. Don't know that :)
Is using the ""S"" key with SIGKILL instead of SIGINT would fit your needs
?

I have a PR ready for this that allow configuring which signal to send
to update process to stop it among other things.
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/j-hao,5,https://github.com/djcb/mu/pull/991#issuecomment-269126115,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,"Thierry Volpiatto <notifications@github.com> writes:
 Jun Hao ***@***.***> writes:

> This PR is actually will kill process (if process is in running state)
> instead of interrupt it. So I think it matches your use case as well.

 Yes, sending SIGKILL is better indeed, but using a timeout is not the
 good approach IMO, it will stop the update on slow connections even when
 no particular problem happens during this connection.

I don't think we can tell is either a slow connection or an actual
issue. Any idea/suggestion?
> Also thanks for the info about S key. Don't know that :)

 Is using the ""S"" key with SIGKILL instead of SIGINT would fit your needs
 ?

 I have a PR ready for this that allow configuring which signal to send
 to update process to stop it among other things.
Actually, ""S"" with SIGINT solves my issue and I just don't want to
manually run it every couple minutes. The connection appears to be
stuck forever. PS, by default, timeout won't run. I think these two
configuration doesn't conflict and can coexist.
…
-- 
Thanks - Jun",True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/thierryvolpiatto,6,https://github.com/djcb/mu/pull/991#issuecomment-269129103,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,"Jun Hao <notifications@github.com> writes:
 Thierry Volpiatto ***@***.***> writes:

> Jun Hao ***@***.***> writes:
>
>> This PR is actually will kill process (if process is in running state)
>> instead of interrupt it. So I think it matches your use case as well.
>
> Yes, sending SIGKILL is better indeed, but using a timeout is not the
> good approach IMO, it will stop the update on slow connections even when
> no particular problem happens during this connection.
>

 I don't think we can tell is either a slow connection or an actual
 issue. Any idea/suggestion?
Logging the process output (done in the ready PR I have here).
https://github.com/thierryvolpiatto/mu/tree/update_process

>> Also thanks for the info about S key. Don't know that :)
>
> Is using the ""S"" key with SIGKILL instead of SIGINT would fit your needs
> ?
>
> I have a PR ready for this that allow configuring which signal to send
> to update process to stop it among other things.

 Actually, ""S"" with SIGINT solves my issue and I just don't want to
 manually run it every couple minutes. The connection appears to be
 stuck forever. PS, by default, timeout won't run. I think these two
 configuration doesn't conflict and can coexist.
Yes sure, I have no problems with the timeout, it will work fine for me
99% of the time even when enabled, just wanted to point out that a valid
connection but slow can be aborted for no reason by the timeout.

BTW note that you can use with-timeout to implement timeout here:

    (with-timeout (mu4e-update-timeout
                   (let ((status (process-status proc)))
                     (when (eq status 'run)
                       (kill-process proc))))
      [...])

Something like this.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/djcb,7,https://github.com/djcb/mu/pull/991#issuecomment-269336191,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,"Hmmm, I can see how this is useful for some use-cases, but since this can quite easily be done in a external script, I don't think mu4e is the best place to add this. An external script also allows for arbitrary magic to distinguish between slow and hanging processes.
Sending sigkill when interrupting the mail process is a good idea though, so I'm going to add that.",True,{}
djcb/mu,https://github.com/djcb/mu,991,2016-12-23T16:55:06Z,2016-12-28T11:54:38Z,2016-12-28T11:54:38Z,CLOSED,False,15,1,2,https://github.com/j-hao,mu4e: add mu4e-update-timeout,1,[],https://github.com/djcb/mu/pull/991,https://github.com/djcb,8,https://github.com/djcb/mu/pull/991#issuecomment-269467329,I think this is useful if there was any issue and update process was stuck forever. I have personally encountered the same issue with isync and exchange 2016 just like https://sourceforge.net/p/isync/bugs/25/ and this allow me to workaround it.,"So, closing this. Thanks for the effort though!",True,{}
djcb/mu,https://github.com/djcb/mu,993,2016-12-27T18:37:45Z,2016-12-28T11:40:56Z,2016-12-28T11:41:04Z,MERGED,True,1,1,1,https://github.com/nnicandro,Use re-search-forward to find message signatures ,1,[],https://github.com/djcb/mu/pull/993,https://github.com/nnicandro,1,https://github.com/djcb/mu/pull/993,This is the fix for #989 as requested.,This is the fix for #989 as requested.,True,{}
djcb/mu,https://github.com/djcb/mu,993,2016-12-27T18:37:45Z,2016-12-28T11:40:56Z,2016-12-28T11:41:04Z,MERGED,True,1,1,1,https://github.com/nnicandro,Use re-search-forward to find message signatures ,1,[],https://github.com/djcb/mu/pull/993,https://github.com/djcb,2,https://github.com/djcb/mu/pull/993#issuecomment-269465966,This is the fix for #989 as requested.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1000,2016-12-31T16:08:02Z,2017-01-03T16:36:49Z,2017-01-03T16:36:49Z,CLOSED,False,160,158,1,https://github.com/tychobrailleur,mu4e: Improve mu4e manual.,2,[],https://github.com/djcb/mu/pull/1000,https://github.com/tychobrailleur,1,https://github.com/djcb/mu/pull/1000,"Fix some typos, improve formatting, and move down @documentencoding
otherwise causing issues on the PDF cover.","Fix some typos, improve formatting, and move down @documentencoding
otherwise causing issues on the PDF cover.",True,{}
djcb/mu,https://github.com/djcb/mu,1000,2016-12-31T16:08:02Z,2017-01-03T16:36:49Z,2017-01-03T16:36:49Z,CLOSED,False,160,158,1,https://github.com/tychobrailleur,mu4e: Improve mu4e manual.,2,[],https://github.com/djcb/mu/pull/1000,https://github.com/tychobrailleur,2,https://github.com/djcb/mu/pull/1000#issuecomment-269994337,"Fix some typos, improve formatting, and move down @documentencoding
otherwise causing issues on the PDF cover.","Thanks for the review!  Let me know if we want to switch to em-dashes, I'll do the change, and squash the commits together.",True,{}
djcb/mu,https://github.com/djcb/mu,1000,2016-12-31T16:08:02Z,2017-01-03T16:36:49Z,2017-01-03T16:36:49Z,CLOSED,False,160,158,1,https://github.com/tychobrailleur,mu4e: Improve mu4e manual.,2,[],https://github.com/djcb/mu/pull/1000,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1000#issuecomment-270158011,"Fix some typos, improve formatting, and move down @documentencoding
otherwise causing issues on the PDF cover.","This has been merged, thanks! Including @Chris00's --- suggestion.",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1003,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997","electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1003#issuecomment-270805115,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997","Since it is not possible to turn it off for certain portions of the text, I added a menu entry to toggle it—so one remembers how to do it when needed.",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1003#issuecomment-271074043,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997","Thanks. Are you planning on updating this so headers / mml parts (and, i guess, code-blocks) are not affected by the electric-quote mode? Also note, electric-quote-mode only appeared with (iirc) emacs 25.1, so some fboundb check is needed.",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/1003#issuecomment-271076006,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997",I do not think that it needs additional checks because :enable (functionp 'electric-quote-local-mode) will only enable it if electric-quote-local-mode is defined.  Or maybe you would like that the menu entry is not visible at all then electric-quote-local-mode is not defined?,True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/1003#issuecomment-271078497,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997","About headers, this is the same mode so I do not see how to turn electric quote selectively for them.
For mml parts, I am not sure what you want.  Since electric quote only changes quotes that one types, it will not affect mml parts.  May you be more precise?",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1003#issuecomment-271408483,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997","Well, it's a corner-case, but I sometimes edit the mime-blobs (say for the mime type or the disposition), and wouldn't want to see fancy headers there. Same for the headers.
Now, the question is if that can be prevented... if comment-start would allow for a regexp, we could simply match the unwanted areas, and only enable it for paragraphs. But I see now that it's not easily possible; also the other items (strings and paragraps) are not easy to manipulate either  :-/
So, sadly not much we can do about that. I'll take your change then, if you add a comment for  the setting of comment-use-syntax (i.e, why are we setting it), and not show the menu item if emacs is too old.",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/Chris00,7,https://github.com/djcb/mu/pull/1003#issuecomment-271426464,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997","If I got you right, for mime-blobs, you should not have too much trouble as electric quote does not change the behavior of "".
I also opened a bug against Emacs message mode.  Let's see if they think electric quote needs to be improved.
I guess another way is to have several modes in the buffer and activate electric quote only for the mode active when typing text.",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/djcb,8,https://github.com/djcb/mu/pull/1003#issuecomment-274950794,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997","Ah, so, I meant that we can't really do anything more fancy than in your patch; anyway, I can merge it if you  can add a comment for the setting of comment-use-syntax (i.e, why are we setting it), and not show the menu item if emacs is too old. Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/Chris00,9,https://github.com/djcb/mu/pull/1003#issuecomment-274958903,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997",Done.,True,{}
djcb/mu,https://github.com/djcb/mu,1003,2017-01-02T14:00:17Z,2017-01-30T18:49:57Z,2020-02-21T17:55:00Z,MERGED,True,23,10,1,https://github.com/Chris00,Make electric-quote-(local-)mode work when composing emails,3,[],https://github.com/djcb/mu/pull/1003,https://github.com/djcb,10,https://github.com/djcb/mu/pull/1003#issuecomment-276153424,"electric-quote-(local-)mode used to have no effect because
comment-use-syntax' was left to undecided' so the electric mode was
not enabled for paragraphs.
Fixes #997",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1004,2017-01-03T00:22:55Z,2017-01-03T16:35:53Z,2017-01-03T16:35:54Z,CLOSED,False,6,6,2,https://github.com/jschwab,"Replace ""focus"" with ""context""",1,[],https://github.com/djcb/mu/pull/1004,https://github.com/jschwab,1,https://github.com/djcb/mu/pull/1004,"There were a handful places, primarily in the main menu, where the
word ""focus"" seemed to be used as a synonym for ""context"".  This
changes all of those instances to ""context"".","There were a handful places, primarily in the main menu, where the
word ""focus"" seemed to be used as a synonym for ""context"".  This
changes all of those instances to ""context"".",True,{}
djcb/mu,https://github.com/djcb/mu,1004,2017-01-03T00:22:55Z,2017-01-03T16:35:53Z,2017-01-03T16:35:54Z,CLOSED,False,6,6,2,https://github.com/jschwab,"Replace ""focus"" with ""context""",1,[],https://github.com/djcb/mu/pull/1004,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1004#issuecomment-270157757,"There were a handful places, primarily in the main menu, where the
word ""focus"" seemed to be used as a synonym for ""context"".  This
changes all of those instances to ""context"".","This has been merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1008,2017-01-06T18:04:22Z,2017-01-16T21:54:11Z,2017-01-16T21:54:23Z,MERGED,True,31,18,5,https://github.com/KrzysiekJ,mu4e: Add possibility to forward messages as attachments,1,[],https://github.com/djcb/mu/pull/1008,https://github.com/KrzysiekJ,1,https://github.com/djcb/mu/pull/1008,"This commit adds a global variable mu4e-compose-forward-as-attachment. To enable choosing forwarding method on a per-message basis would probably require either:

changing the mu server backend so that it distinguishes between inline forwarding and forwarding as attachment;
changing the mu server backend so that it doesn’t return attachments at all and making both inline and as attachment forwarding via MIME (and also making mu4e actually display MIME-enclosed inline emails).","This commit adds a global variable mu4e-compose-forward-as-attachment. To enable choosing forwarding method on a per-message basis would probably require either:

changing the mu server backend so that it distinguishes between inline forwarding and forwarding as attachment;
changing the mu server backend so that it doesn’t return attachments at all and making both inline and as attachment forwarding via MIME (and also making mu4e actually display MIME-enclosed inline emails).",True,{}
djcb/mu,https://github.com/djcb/mu,1008,2017-01-06T18:04:22Z,2017-01-16T21:54:11Z,2017-01-16T21:54:23Z,MERGED,True,31,18,5,https://github.com/KrzysiekJ,mu4e: Add possibility to forward messages as attachments,1,[],https://github.com/djcb/mu/pull/1008,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1008#issuecomment-271073362,"This commit adds a global variable mu4e-compose-forward-as-attachment. To enable choosing forwarding method on a per-message basis would probably require either:

changing the mu server backend so that it distinguishes between inline forwarding and forwarding as attachment;
changing the mu server backend so that it doesn’t return attachments at all and making both inline and as attachment forwarding via MIME (and also making mu4e actually display MIME-enclosed inline emails).","Ah, thanks, looks interesting. See my comments in the code.",True,{}
djcb/mu,https://github.com/djcb/mu,1008,2017-01-06T18:04:22Z,2017-01-16T21:54:11Z,2017-01-16T21:54:23Z,MERGED,True,31,18,5,https://github.com/KrzysiekJ,mu4e: Add possibility to forward messages as attachments,1,[],https://github.com/djcb/mu/pull/1008,https://github.com/KrzysiekJ,3,https://github.com/djcb/mu/pull/1008#issuecomment-272471827,"This commit adds a global variable mu4e-compose-forward-as-attachment. To enable choosing forwarding method on a per-message basis would probably require either:

changing the mu server backend so that it distinguishes between inline forwarding and forwarding as attachment;
changing the mu server backend so that it doesn’t return attachments at all and making both inline and as attachment forwarding via MIME (and also making mu4e actually display MIME-enclosed inline emails).",I’ve updated the commit to use global variables (previous version was deliberately not doing it to make the code more pure) and also removed adding two newlines to message body when forwarding as attachment.,True,{}
djcb/mu,https://github.com/djcb/mu,1008,2017-01-06T18:04:22Z,2017-01-16T21:54:11Z,2017-01-16T21:54:23Z,MERGED,True,31,18,5,https://github.com/KrzysiekJ,mu4e: Add possibility to forward messages as attachments,1,[],https://github.com/djcb/mu/pull/1008,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1008#issuecomment-272970663,"This commit adds a global variable mu4e-compose-forward-as-attachment. To enable choosing forwarding method on a per-message basis would probably require either:

changing the mu server backend so that it distinguishes between inline forwarding and forwarding as attachment;
changing the mu server backend so that it doesn’t return attachments at all and making both inline and as attachment forwarding via MIME (and also making mu4e actually display MIME-enclosed inline emails).","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1017,2017-01-29T18:09:40Z,2021-06-12T15:37:18Z,2021-06-12T15:37:18Z,CLOSED,False,8,0,1,https://github.com/vancan1ty,add option mu4e-headers-keep-centered to keep headers view centered when navigating messages,2,[],https://github.com/djcb/mu/pull/1017,https://github.com/vancan1ty,1,https://github.com/djcb/mu/pull/1017,"I find it useful to be able to see some context around my selected message, therefore I have set my mu4e to keep the selected message centered as I scroll up and down.","I find it useful to be able to see some context around my selected message, therefore I have set my mu4e to keep the selected message centered as I scroll up and down.",True,{'THUMBS_UP': ['https://github.com/pkazmier']}
djcb/mu,https://github.com/djcb/mu,1021,2017-02-04T09:54:15Z,2017-02-05T13:50:34Z,2017-02-05T13:50:34Z,CLOSED,False,2,2,1,https://github.com/cmpitg,mu4e: fix typo when converting HTML to text,1,[],https://github.com/djcb/mu/pull/1021,https://github.com/cmpitg,1,https://github.com/djcb/mu/pull/1021,Fixes #1020.,Fixes #1020.,True,{}
djcb/mu,https://github.com/djcb/mu,1021,2017-02-04T09:54:15Z,2017-02-05T13:50:34Z,2017-02-05T13:50:34Z,CLOSED,False,2,2,1,https://github.com/cmpitg,mu4e: fix typo when converting HTML to text,1,[],https://github.com/djcb/mu/pull/1021,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1021#issuecomment-277521027,Fixes #1020.,Thanks! A silly typo...,True,{}
djcb/mu,https://github.com/djcb/mu,1030,2017-02-14T11:04:21Z,2017-02-21T05:56:52Z,2017-02-21T05:57:05Z,MERGED,True,4,0,2,https://github.com/tmalsburg,mu4e: Added menu items for untrash,1,[],https://github.com/djcb/mu/pull/1030,https://github.com/tmalsburg,1,https://github.com/djcb/mu/pull/1030,Addresses #1024.,Addresses #1024.,True,{}
djcb/mu,https://github.com/djcb/mu,1030,2017-02-14T11:04:21Z,2017-02-21T05:56:52Z,2017-02-21T05:57:05Z,MERGED,True,4,0,2,https://github.com/tmalsburg,mu4e: Added menu items for untrash,1,[],https://github.com/djcb/mu/pull/1030,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1030#issuecomment-281252486,Addresses #1024.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/avar,1,https://github.com/djcb/mu/pull/1031,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.","When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.",True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1031#issuecomment-284229197,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/daphniz,3,https://github.com/djcb/mu/pull/1031#issuecomment-565800927,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.","Has this been deleted?  I use
	alias mcfind='mu cfind --muhome=""$MUHOME""'
	alias mextract='mu extract --muhome=""$MUHOME""'
	alias mfind='mu find --muhome=""$MUHOME""'
	alias mhelp='mu help --muhome=""$MUHOME""'
	alias mindex='mu index --muhome=""$MUHOME""'
	alias mmkdir='mu mkdir --muhome=""$MUHOME""'
	alias mremove='mu remove --muhome=""$MUHOME""'
	alias mscript='mu script --muhome=""$MUHOME""'
	alias mserver='mu server --muhome=""$MUHOME""'
	alias mview='mu view --muhome=""$MUHOME""'

but this should be unnecessary.",True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1031#issuecomment-565804294,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.","Yeah, mu now (>= 1.3.x) uses the XDG Base Directory Specification, but you can override it by manipulating XDG_CACHE_HOME,",True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1031#issuecomment-565804395,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.","Ie. alias mindex=""XDG_CACHE_HOME=mypath mu index""",True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/daphniz,6,https://github.com/djcb/mu/pull/1031#issuecomment-565808635,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.",but isn't this going to affect other programmes?,True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/daphniz,7,https://github.com/djcb/mu/pull/1031#issuecomment-565809786,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.","ok, it won't in this case, but my point was that i don't want to have to create aliases.  it should be possible, i think, to set an env variable, and then use mu index as usually.",True,{}
djcb/mu,https://github.com/djcb/mu,1031,2017-02-17T10:38:52Z,2017-03-05T13:52:31Z,2019-12-15T13:30:33Z,MERGED,True,20,5,5,https://github.com/avar,Add support for specifying --muhome via MU_HOME in the environment,1,[],https://github.com/djcb/mu/pull/1031,https://github.com/daphniz,8,https://github.com/djcb/mu/pull/1031#issuecomment-565809907,"When you have multiple mu home directories, e.g. for the use case
detailed in my ""Changing mu4e-{maildir,mu-home} from a context hook""
post to the mailing list it's quite inconvenient to have to hammer out
""mu --muhome=.. find .."" every time you want to run some ad-hoc
command.
This allows me to set up a screen session where I do searches in mu
directory A in some screen panes, and searches in directory B in
others.
I initially called this MU_MUHOME but then I noticed that the perl
plugin has MUP_MU_HOME for analogous functionality, so I'm just
following its example.
The code I'm adding in mu-util.c is just a copy/paste & adjustment of
the same sort of already tested functionality in
mu_util_guess_maildir() just a few lines earlier.","ie., there should be a $MUHOME, and this should have
precedence over $XDG_CACHE_HOME.",True,{}
djcb/mu,https://github.com/djcb/mu,1032,2017-02-17T13:41:47Z,2017-03-05T13:54:43Z,2018-05-23T12:49:53Z,MERGED,True,1,1,1,https://github.com/avar,.gitignore: Update for the change made in ea409398,1,[],https://github.com/djcb/mu/pull/1032,https://github.com/avar,1,https://github.com/djcb/mu/pull/1032,,,True,{}
djcb/mu,https://github.com/djcb/mu,1032,2017-02-17T13:41:47Z,2017-03-05T13:54:43Z,2018-05-23T12:49:53Z,MERGED,True,1,1,1,https://github.com/avar,.gitignore: Update for the change made in ea409398,1,[],https://github.com/djcb/mu/pull/1032,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1032#issuecomment-284229331,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1033,2017-02-17T13:44:00Z,2017-03-05T13:54:14Z,2018-05-23T12:49:56Z,MERGED,True,2,0,1,https://github.com/avar,perl: Add a .gitignore file with the MYMETA build assets,1,[],https://github.com/djcb/mu/pull/1033,https://github.com/avar,1,https://github.com/djcb/mu/pull/1033,"These get created by ExtUtils::MakeMaker, so they won't be found by
grepping our own code, but they're created by the build process.","These get created by ExtUtils::MakeMaker, so they won't be found by
grepping our own code, but they're created by the build process.",True,{}
djcb/mu,https://github.com/djcb/mu,1033,2017-02-17T13:44:00Z,2017-03-05T13:54:14Z,2018-05-23T12:49:56Z,MERGED,True,2,0,1,https://github.com/avar,perl: Add a .gitignore file with the MYMETA build assets,1,[],https://github.com/djcb/mu/pull/1033,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1033#issuecomment-284229271,"These get created by ExtUtils::MakeMaker, so they won't be found by
grepping our own code, but they're created by the build process.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1034,2017-02-17T22:54:30Z,2017-02-21T05:59:31Z,2017-02-21T05:59:41Z,MERGED,True,4,4,1,https://github.com/jschwab,Add example of matching maildir and its sub-directories in contexts,1,[],https://github.com/djcb/mu/pull/1034,https://github.com/jschwab,1,https://github.com/djcb/mu/pull/1034,"Inspired by this mu-discuss thread:
https://groups.google.com/d/msg/mu-discuss/rAT2YJPEwsA/eYmoGJbUCgAJ","Inspired by this mu-discuss thread:
https://groups.google.com/d/msg/mu-discuss/rAT2YJPEwsA/eYmoGJbUCgAJ",True,{}
djcb/mu,https://github.com/djcb/mu,1034,2017-02-17T22:54:30Z,2017-02-21T05:59:31Z,2017-02-21T05:59:41Z,MERGED,True,4,4,1,https://github.com/jschwab,Add example of matching maildir and its sub-directories in contexts,1,[],https://github.com/djcb/mu/pull/1034,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1034#issuecomment-281252839,"Inspired by this mu-discuss thread:
https://groups.google.com/d/msg/mu-discuss/rAT2YJPEwsA/eYmoGJbUCgAJ",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1036,2017-02-19T23:48:43Z,2017-03-05T13:57:06Z,2017-03-05T13:57:16Z,MERGED,True,38,0,2,https://github.com/wavexx,Allow to ignore addresses when doing wide replies,1,[],https://github.com/djcb/mu/pull/1036,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1036,"Introduce a new variable, mu4e-compose-reply-ignore-address, which matches addresses to be skipped when doing wide replies.
This is identical in behavior to messages-dont-reply-to-names from message.el (which we default on). See RFE #915.
In fact, since it supports the same values, I would be tempted to defalias instead of defcustom, or use message-dont-reply-to-names directly. But I'm flexible here. An alternative would be to default to mu4e-compose-complete-ignore-address-regexp.
This finally fixes the ability to perform wide replies with noreply addresses. For instance, when replying to github issues with a ""\bnoreply\n"" regexp, mu4e will not even prompt for a wide reply anymore, since all Cc: addresses get removed (as they should).
Feedback appreciated.","Introduce a new variable, mu4e-compose-reply-ignore-address, which matches addresses to be skipped when doing wide replies.
This is identical in behavior to messages-dont-reply-to-names from message.el (which we default on). See RFE #915.
In fact, since it supports the same values, I would be tempted to defalias instead of defcustom, or use message-dont-reply-to-names directly. But I'm flexible here. An alternative would be to default to mu4e-compose-complete-ignore-address-regexp.
This finally fixes the ability to perform wide replies with noreply addresses. For instance, when replying to github issues with a ""\bnoreply\n"" regexp, mu4e will not even prompt for a wide reply anymore, since all Cc: addresses get removed (as they should).
Feedback appreciated.",True,{}
djcb/mu,https://github.com/djcb/mu,1036,2017-02-19T23:48:43Z,2017-03-05T13:57:06Z,2017-03-05T13:57:16Z,MERGED,True,38,0,2,https://github.com/wavexx,Allow to ignore addresses when doing wide replies,1,[],https://github.com/djcb/mu/pull/1036,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1036#issuecomment-284229476,"Introduce a new variable, mu4e-compose-reply-ignore-address, which matches addresses to be skipped when doing wide replies.
This is identical in behavior to messages-dont-reply-to-names from message.el (which we default on). See RFE #915.
In fact, since it supports the same values, I would be tempted to defalias instead of defcustom, or use message-dont-reply-to-names directly. But I'm flexible here. An alternative would be to default to mu4e-compose-complete-ignore-address-regexp.
This finally fixes the ability to perform wide replies with noreply addresses. For instance, when replying to github issues with a ""\bnoreply\n"" regexp, mu4e will not even prompt for a wide reply anymore, since all Cc: addresses get removed (as they should).
Feedback appreciated.","Looks useful, thanks! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1037,2017-02-20T17:46:13Z,2017-02-21T07:46:44Z,2017-02-21T10:28:30Z,MERGED,True,1,1,1,https://github.com/wavexx,Do not duplicate headers views in iconified/hidden frames,1,[],https://github.com/djcb/mu/pull/1037,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1037,"When the frame running mu4e is in another virtual desktop or iconified, but
still contains a visible headers buffer, do not attempt to create a new view.","When the frame running mu4e is in another virtual desktop or iconified, but
still contains a visible headers buffer, do not attempt to create a new view.",True,{}
djcb/mu,https://github.com/djcb/mu,1037,2017-02-20T17:46:13Z,2017-02-21T07:46:44Z,2017-02-21T10:28:30Z,MERGED,True,1,1,1,https://github.com/wavexx,Do not duplicate headers views in iconified/hidden frames,1,[],https://github.com/djcb/mu/pull/1037,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1037#issuecomment-281268697,"When the frame running mu4e is in another virtual desktop or iconified, but
still contains a visible headers buffer, do not attempt to create a new view.","Merged, thanks. Still a bit unsure about the best way to handle multiple view/windows/frames though",True,{}
djcb/mu,https://github.com/djcb/mu,1037,2017-02-20T17:46:13Z,2017-02-21T07:46:44Z,2017-02-21T10:28:30Z,MERGED,True,1,1,1,https://github.com/wavexx,Do not duplicate headers views in iconified/hidden frames,1,[],https://github.com/djcb/mu/pull/1037,https://github.com/wavexx,3,https://github.com/djcb/mu/pull/1037#issuecomment-281304233,"When the frame running mu4e is in another virtual desktop or iconified, but
still contains a visible headers buffer, do not attempt to create a new view.","On Tue, Feb 21 2017, Dirk-Jan C. Binnema wrote:
 Merged, thanks. Still a bit unsure about the best way to handle multiple
 view/windows/frames though
It's tricky. I also noticed there is some other strange interaction that
I couldn't trigger easily: sometimes the header buffer seem to be
populated from results of a previous query.",True,{}
djcb/mu,https://github.com/djcb/mu,1039,2017-02-28T12:18:12Z,2017-03-05T13:53:20Z,2017-03-05T13:53:28Z,MERGED,True,2,1,1,https://github.com/ian-kelling,mu4e: improve `mu4e-get-maildirs' docstring,1,[],https://github.com/djcb/mu/pull/1039,https://github.com/ian-kelling,1,https://github.com/djcb/mu/pull/1039,,,True,{}
djcb/mu,https://github.com/djcb/mu,1039,2017-02-28T12:18:12Z,2017-03-05T13:53:20Z,2017-03-05T13:53:28Z,MERGED,True,2,1,1,https://github.com/ian-kelling,mu4e: improve `mu4e-get-maildirs' docstring,1,[],https://github.com/djcb/mu/pull/1039,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1039#issuecomment-284229232,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1044,2017-03-06T09:57:23Z,2017-03-11T13:02:08Z,2017-03-11T13:02:17Z,MERGED,True,1,1,1,https://github.com/garaud,mu4e: update the org-contacts package link in the doc,1,[],https://github.com/djcb/mu/pull/1044,https://github.com/garaud,1,https://github.com/djcb/mu/pull/1044,"Hi,
The previous link didn't exist.
So I updated it!
Cheers,
Damien","Hi,
The previous link didn't exist.
So I updated it!
Cheers,
Damien",True,{}
djcb/mu,https://github.com/djcb/mu,1044,2017-03-06T09:57:23Z,2017-03-11T13:02:08Z,2017-03-11T13:02:17Z,MERGED,True,1,1,1,https://github.com/garaud,mu4e: update the org-contacts package link in the doc,1,[],https://github.com/djcb/mu/pull/1044,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1044#issuecomment-285865327,"Hi,
The previous link didn't exist.
So I updated it!
Cheers,
Damien",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1046,2017-03-12T06:28:53Z,2017-06-17T09:10:25Z,2017-06-17T09:10:44Z,MERGED,True,9,4,1,https://github.com/jwhitbeck,mu4e: fix sending emails with no body,1,[],https://github.com/djcb/mu/pull/1046,https://github.com/jwhitbeck,1,https://github.com/djcb/mu/pull/1046,"When trying to send an email with no body, message-narrow-to-headers can't find the mail-header-separator because it isn't followed by a newline. In that case, the narrowed region falls back to everything until (point-max), which includes the ""--text follows this line--"" string. In turn, when the message-send-mail function populates the required headers, these are added after the  ""--text follows this line--"" string.
Example output:
User-agent: mu4e 0.9.16; emacs 24.5.1
From: foo@foo.net
To: bar@bar.net
Subject: baz EOM
--text follows this line--Fcc: /path/to/foo
Date: Sat, 11 Mar 2017 22:27:11 -0800
Message-ID: <878tobau2o.fsf@foo.net>","When trying to send an email with no body, message-narrow-to-headers can't find the mail-header-separator because it isn't followed by a newline. In that case, the narrowed region falls back to everything until (point-max), which includes the ""--text follows this line--"" string. In turn, when the message-send-mail function populates the required headers, these are added after the  ""--text follows this line--"" string.
Example output:
User-agent: mu4e 0.9.16; emacs 24.5.1
From: foo@foo.net
To: bar@bar.net
Subject: baz EOM
--text follows this line--Fcc: /path/to/foo
Date: Sat, 11 Mar 2017 22:27:11 -0800
Message-ID: <878tobau2o.fsf@foo.net>",True,{}
djcb/mu,https://github.com/djcb/mu,1046,2017-03-12T06:28:53Z,2017-06-17T09:10:25Z,2017-06-17T09:10:44Z,MERGED,True,9,4,1,https://github.com/jwhitbeck,mu4e: fix sending emails with no body,1,[],https://github.com/djcb/mu/pull/1046,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1046#issuecomment-309203576,"When trying to send an email with no body, message-narrow-to-headers can't find the mail-header-separator because it isn't followed by a newline. In that case, the narrowed region falls back to everything until (point-max), which includes the ""--text follows this line--"" string. In turn, when the message-send-mail function populates the required headers, these are added after the  ""--text follows this line--"" string.
Example output:
User-agent: mu4e 0.9.16; emacs 24.5.1
From: foo@foo.net
To: bar@bar.net
Subject: baz EOM
--text follows this line--Fcc: /path/to/foo
Date: Sat, 11 Mar 2017 22:27:11 -0800
Message-ID: <878tobau2o.fsf@foo.net>","Seems useful, thanks! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1056,2017-03-26T19:53:06Z,2017-03-29T19:32:47Z,2017-03-29T19:32:55Z,MERGED,True,2,2,1,https://github.com/ronaldevers,Fix typo in mu4e-sent-messages-behavior docs,1,[],https://github.com/djcb/mu/pull/1056,https://github.com/ronaldevers,1,https://github.com/djcb/mu/pull/1056,(thanks for mu and mu4e!),(thanks for mu and mu4e!),True,{}
djcb/mu,https://github.com/djcb/mu,1056,2017-03-26T19:53:06Z,2017-03-29T19:32:47Z,2017-03-29T19:32:55Z,MERGED,True,2,2,1,https://github.com/ronaldevers,Fix typo in mu4e-sent-messages-behavior docs,1,[],https://github.com/djcb/mu/pull/1056,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1056#issuecomment-290200393,(thanks for mu and mu4e!),Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1066,2017-04-12T10:28:27Z,2017-05-06T09:03:03Z,2017-05-06T09:03:03Z,CLOSED,False,18,18,5,https://github.com/avar,s/defsubst/defun/ for all but the most trivial cases,1,[],https://github.com/djcb/mu/pull/1066,https://github.com/avar,1,https://github.com/djcb/mu/pull/1066,"Change various 'defsubst' to 'defun' for all cases except things where
the entire body of the function is something trivial like (plist-get msgpart field).
I want this because I'd like to override mu4e~headers-contact-str in
my .emacs to e.g. format E-Mail addresses without names like
foo.bar@example.com as ""Foo Bar"" in the headers view, but
mu4e~headers-contact-str itself is defsubst, so overriding it doesn't
help, and then it's used in /another/ defsubst'd function,
mu4e~headers-from-or-to, which in turn is used by the defun'd
mu4e~headers-field-apply-basic-properties.
So both need to be s/defsubst/defun/'d so you can override them.
More generally, when I asked about this on #emacs on Freenode one
advice was ""I have my doubts inlining pays off there"" [...] ""the
biggest wins are for OO-like access which you'd like to hide behind a
function"" [...] ""as calling the function takes more time than
accessing a slot, you use defsubst to avoid that"".
So I'm leaving the OO-like access as defsubst'd, but I very much doubt
that we're getting anything performance-wise out of having 10-20 line
functions be defsubst'd.","Change various 'defsubst' to 'defun' for all cases except things where
the entire body of the function is something trivial like (plist-get msgpart field).
I want this because I'd like to override mu4e~headers-contact-str in
my .emacs to e.g. format E-Mail addresses without names like
foo.bar@example.com as ""Foo Bar"" in the headers view, but
mu4e~headers-contact-str itself is defsubst, so overriding it doesn't
help, and then it's used in /another/ defsubst'd function,
mu4e~headers-from-or-to, which in turn is used by the defun'd
mu4e~headers-field-apply-basic-properties.
So both need to be s/defsubst/defun/'d so you can override them.
More generally, when I asked about this on #emacs on Freenode one
advice was ""I have my doubts inlining pays off there"" [...] ""the
biggest wins are for OO-like access which you'd like to hide behind a
function"" [...] ""as calling the function takes more time than
accessing a slot, you use defsubst to avoid that"".
So I'm leaving the OO-like access as defsubst'd, but I very much doubt
that we're getting anything performance-wise out of having 10-20 line
functions be defsubst'd.",True,{}
djcb/mu,https://github.com/djcb/mu,1066,2017-04-12T10:28:27Z,2017-05-06T09:03:03Z,2017-05-06T09:03:03Z,CLOSED,False,18,18,5,https://github.com/avar,s/defsubst/defun/ for all but the most trivial cases,1,[],https://github.com/djcb/mu/pull/1066,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1066#issuecomment-294931783,"Change various 'defsubst' to 'defun' for all cases except things where
the entire body of the function is something trivial like (plist-get msgpart field).
I want this because I'd like to override mu4e~headers-contact-str in
my .emacs to e.g. format E-Mail addresses without names like
foo.bar@example.com as ""Foo Bar"" in the headers view, but
mu4e~headers-contact-str itself is defsubst, so overriding it doesn't
help, and then it's used in /another/ defsubst'd function,
mu4e~headers-from-or-to, which in turn is used by the defun'd
mu4e~headers-field-apply-basic-properties.
So both need to be s/defsubst/defun/'d so you can override them.
More generally, when I asked about this on #emacs on Freenode one
advice was ""I have my doubts inlining pays off there"" [...] ""the
biggest wins are for OO-like access which you'd like to hide behind a
function"" [...] ""as calling the function takes more time than
accessing a slot, you use defsubst to avoid that"".
So I'm leaving the OO-like access as defsubst'd, but I very much doubt
that we're getting anything performance-wise out of having 10-20 line
functions be defsubst'd.",Anything against mu4e-header-info-custom? That's the recommended way to handle such things.,True,{}
djcb/mu,https://github.com/djcb/mu,1066,2017-04-12T10:28:27Z,2017-05-06T09:03:03Z,2017-05-06T09:03:03Z,CLOSED,False,18,18,5,https://github.com/avar,s/defsubst/defun/ for all but the most trivial cases,1,[],https://github.com/djcb/mu/pull/1066,https://github.com/avar,3,https://github.com/djcb/mu/pull/1066#issuecomment-294943776,"Change various 'defsubst' to 'defun' for all cases except things where
the entire body of the function is something trivial like (plist-get msgpart field).
I want this because I'd like to override mu4e~headers-contact-str in
my .emacs to e.g. format E-Mail addresses without names like
foo.bar@example.com as ""Foo Bar"" in the headers view, but
mu4e~headers-contact-str itself is defsubst, so overriding it doesn't
help, and then it's used in /another/ defsubst'd function,
mu4e~headers-from-or-to, which in turn is used by the defun'd
mu4e~headers-field-apply-basic-properties.
So both need to be s/defsubst/defun/'d so you can override them.
More generally, when I asked about this on #emacs on Freenode one
advice was ""I have my doubts inlining pays off there"" [...] ""the
biggest wins are for OO-like access which you'd like to hide behind a
function"" [...] ""as calling the function takes more time than
accessing a slot, you use defsubst to avoid that"".
So I'm leaving the OO-like access as defsubst'd, but I very much doubt
that we're getting anything performance-wise out of having 10-20 line
functions be defsubst'd.","I didn't know about it, and looking at it it seems to be something I can use to replace my evil hack. So I don't need this integrated for that reason.
Still, seems sensible to make these overridable for other reasons, and as noted substituting them inline probably isn't doing much anyway.",True,{}
djcb/mu,https://github.com/djcb/mu,1066,2017-04-12T10:28:27Z,2017-05-06T09:03:03Z,2017-05-06T09:03:03Z,CLOSED,False,18,18,5,https://github.com/avar,s/defsubst/defun/ for all but the most trivial cases,1,[],https://github.com/djcb/mu/pull/1066,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1066#issuecomment-295375658,"Change various 'defsubst' to 'defun' for all cases except things where
the entire body of the function is something trivial like (plist-get msgpart field).
I want this because I'd like to override mu4e~headers-contact-str in
my .emacs to e.g. format E-Mail addresses without names like
foo.bar@example.com as ""Foo Bar"" in the headers view, but
mu4e~headers-contact-str itself is defsubst, so overriding it doesn't
help, and then it's used in /another/ defsubst'd function,
mu4e~headers-from-or-to, which in turn is used by the defun'd
mu4e~headers-field-apply-basic-properties.
So both need to be s/defsubst/defun/'d so you can override them.
More generally, when I asked about this on #emacs on Freenode one
advice was ""I have my doubts inlining pays off there"" [...] ""the
biggest wins are for OO-like access which you'd like to hide behind a
function"" [...] ""as calling the function takes more time than
accessing a slot, you use defsubst to avoid that"".
So I'm leaving the OO-like access as defsubst'd, but I very much doubt
that we're getting anything performance-wise out of having 10-20 line
functions be defsubst'd.","They are all in the 'hot path', and should make running them a bit faster; that is why defsubst exists. I don't know much faster (and of course that may vary with emacs version and perhaps other factors), but see no reason for not using it.
Anyway, if experienced users don't know about mu4e-header-info-custom, we should probably advertise it a bit better!",True,{}
djcb/mu,https://github.com/djcb/mu,1071,2017-04-25T14:56:06Z,2017-05-06T09:02:22Z,2017-05-06T09:02:37Z,MERGED,True,7,1,1,https://github.com/akoehn,mu4e: advance after mark can now be disabled,1,[],https://github.com/djcb/mu/pull/1071,https://github.com/akoehn,1,https://github.com/djcb/mu/pull/1071,"The variable mu4e-headers-advance-after-mark can be set to nil if you
want to disable moving to the next mail after marking.","The variable mu4e-headers-advance-after-mark can be set to nil if you
want to disable moving to the next mail after marking.",True,{}
djcb/mu,https://github.com/djcb/mu,1071,2017-04-25T14:56:06Z,2017-05-06T09:02:22Z,2017-05-06T09:02:37Z,MERGED,True,7,1,1,https://github.com/akoehn,mu4e: advance after mark can now be disabled,1,[],https://github.com/djcb/mu/pull/1071,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1071#issuecomment-299626559,"The variable mu4e-headers-advance-after-mark can be set to nil if you
want to disable moving to the next mail after marking.","Looks useful, merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1082,2017-05-18T02:19:44Z,2017-06-01T03:59:11Z,2017-06-02T07:37:32Z,CLOSED,False,282,237,10,https://github.com/vsedach,Added new mu4e-split-view mode: single-window,5,[],https://github.com/djcb/mu/pull/1082,https://github.com/vsedach,1,https://github.com/djcb/mu/pull/1082,"Single-window mode is meant to minimize mu4e window operations (opening,
killing, resizing, etc) and buffer changes, while still retaining the
view and headers buffers. In addition, it replaces mu4e main view with a
minibuffer prompt containing the same information.
Eventually I would like to do a single buffer mode that can toggle between view and header mode. Single-buffer mode will make it convenient to have multiple mu4e search sessions going on at the same time. Doing a single buffer mode will entail changing mu4e to keep track of messages in a data structure instead of implicitly in the headers buffer, which is a major refactor. This will have the additional benefit of making it possible to write integrations for tools like helm and ivy for browsing the message list and selecting messages; essentially letting people use whatever tool they want instead of the headers buffer. My planned approach is to first provide the message list via imenu, as the package imenu-anywhere integrates helm, ivy, and a few others, which would give mu4e-ivy etc headers integrations ""for free."" It should also then be possible to integrate mu4e search with helm/ivy flex searching.","Single-window mode is meant to minimize mu4e window operations (opening,
killing, resizing, etc) and buffer changes, while still retaining the
view and headers buffers. In addition, it replaces mu4e main view with a
minibuffer prompt containing the same information.
Eventually I would like to do a single buffer mode that can toggle between view and header mode. Single-buffer mode will make it convenient to have multiple mu4e search sessions going on at the same time. Doing a single buffer mode will entail changing mu4e to keep track of messages in a data structure instead of implicitly in the headers buffer, which is a major refactor. This will have the additional benefit of making it possible to write integrations for tools like helm and ivy for browsing the message list and selecting messages; essentially letting people use whatever tool they want instead of the headers buffer. My planned approach is to first provide the message list via imenu, as the package imenu-anywhere integrates helm, ivy, and a few others, which would give mu4e-ivy etc headers integrations ""for free."" It should also then be possible to integrate mu4e search with helm/ivy flex searching.",True,{'THUMBS_UP': ['https://github.com/whirm']}
djcb/mu,https://github.com/djcb/mu,1082,2017-05-18T02:19:44Z,2017-06-01T03:59:11Z,2017-06-02T07:37:32Z,CLOSED,False,282,237,10,https://github.com/vsedach,Added new mu4e-split-view mode: single-window,5,[],https://github.com/djcb/mu/pull/1082,https://github.com/vsedach,2,https://github.com/djcb/mu/pull/1082#issuecomment-302497532,"Single-window mode is meant to minimize mu4e window operations (opening,
killing, resizing, etc) and buffer changes, while still retaining the
view and headers buffers. In addition, it replaces mu4e main view with a
minibuffer prompt containing the same information.
Eventually I would like to do a single buffer mode that can toggle between view and header mode. Single-buffer mode will make it convenient to have multiple mu4e search sessions going on at the same time. Doing a single buffer mode will entail changing mu4e to keep track of messages in a data structure instead of implicitly in the headers buffer, which is a major refactor. This will have the additional benefit of making it possible to write integrations for tools like helm and ivy for browsing the message list and selecting messages; essentially letting people use whatever tool they want instead of the headers buffer. My planned approach is to first provide the message list via imenu, as the package imenu-anywhere integrates helm, ivy, and a few others, which would give mu4e-ivy etc headers integrations ""for free."" It should also then be possible to integrate mu4e search with helm/ivy flex searching.","Found an issue, please hold off from merging.",True,{}
djcb/mu,https://github.com/djcb/mu,1082,2017-05-18T02:19:44Z,2017-06-01T03:59:11Z,2017-06-02T07:37:32Z,CLOSED,False,282,237,10,https://github.com/vsedach,Added new mu4e-split-view mode: single-window,5,[],https://github.com/djcb/mu/pull/1082,https://github.com/vsedach,3,https://github.com/djcb/mu/pull/1082#issuecomment-302984254,"Single-window mode is meant to minimize mu4e window operations (opening,
killing, resizing, etc) and buffer changes, while still retaining the
view and headers buffers. In addition, it replaces mu4e main view with a
minibuffer prompt containing the same information.
Eventually I would like to do a single buffer mode that can toggle between view and header mode. Single-buffer mode will make it convenient to have multiple mu4e search sessions going on at the same time. Doing a single buffer mode will entail changing mu4e to keep track of messages in a data structure instead of implicitly in the headers buffer, which is a major refactor. This will have the additional benefit of making it possible to write integrations for tools like helm and ivy for browsing the message list and selecting messages; essentially letting people use whatever tool they want instead of the headers buffer. My planned approach is to first provide the message list via imenu, as the package imenu-anywhere integrates helm, ivy, and a few others, which would give mu4e-ivy etc headers integrations ""for free."" It should also then be possible to integrate mu4e search with helm/ivy flex searching.","Alright, looks like 835d619 fixes the outstanding issues that I can see. Let me know what you think.",True,{}
djcb/mu,https://github.com/djcb/mu,1082,2017-05-18T02:19:44Z,2017-06-01T03:59:11Z,2017-06-02T07:37:32Z,CLOSED,False,282,237,10,https://github.com/vsedach,Added new mu4e-split-view mode: single-window,5,[],https://github.com/djcb/mu/pull/1082,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1082#issuecomment-305382760,"Single-window mode is meant to minimize mu4e window operations (opening,
killing, resizing, etc) and buffer changes, while still retaining the
view and headers buffers. In addition, it replaces mu4e main view with a
minibuffer prompt containing the same information.
Eventually I would like to do a single buffer mode that can toggle between view and header mode. Single-buffer mode will make it convenient to have multiple mu4e search sessions going on at the same time. Doing a single buffer mode will entail changing mu4e to keep track of messages in a data structure instead of implicitly in the headers buffer, which is a major refactor. This will have the additional benefit of making it possible to write integrations for tools like helm and ivy for browsing the message list and selecting messages; essentially letting people use whatever tool they want instead of the headers buffer. My planned approach is to first provide the message list via imenu, as the package imenu-anywhere integrates helm, ivy, and a few others, which would give mu4e-ivy etc headers integrations ""for free."" It should also then be possible to integrate mu4e search with helm/ivy flex searching.",Thanks! Looks useful and seems to work with a little testing. -- merged the code (manually -- not this PR). Maybe you want to announce / introduce this on the mailing list?,True,{}
djcb/mu,https://github.com/djcb/mu,1082,2017-05-18T02:19:44Z,2017-06-01T03:59:11Z,2017-06-02T07:37:32Z,CLOSED,False,282,237,10,https://github.com/vsedach,Added new mu4e-split-view mode: single-window,5,[],https://github.com/djcb/mu/pull/1082,https://github.com/vsedach,5,https://github.com/djcb/mu/pull/1082#issuecomment-305713422,"Single-window mode is meant to minimize mu4e window operations (opening,
killing, resizing, etc) and buffer changes, while still retaining the
view and headers buffers. In addition, it replaces mu4e main view with a
minibuffer prompt containing the same information.
Eventually I would like to do a single buffer mode that can toggle between view and header mode. Single-buffer mode will make it convenient to have multiple mu4e search sessions going on at the same time. Doing a single buffer mode will entail changing mu4e to keep track of messages in a data structure instead of implicitly in the headers buffer, which is a major refactor. This will have the additional benefit of making it possible to write integrations for tools like helm and ivy for browsing the message list and selecting messages; essentially letting people use whatever tool they want instead of the headers buffer. My planned approach is to first provide the message list via imenu, as the package imenu-anywhere integrates helm, ivy, and a few others, which would give mu4e-ivy etc headers integrations ""for free."" It should also then be possible to integrate mu4e search with helm/ivy flex searching.","Thank you! Good suggestion. I will make a post on the mailing list next
week when I have returned from traveling.

Vladimir

Dirk-Jan C. Binnema <notifications@github.com> writes:
…
 Thanks! Looks useful and seems to work with a little testing. -- merged the code (manually -- not this PR). Maybe you want to announce / introduce this on the mailing list?",True,{}
djcb/mu,https://github.com/djcb/mu,1088,2017-06-05T16:52:56Z,2017-06-05T22:59:43Z,2017-06-05T22:59:43Z,CLOSED,False,12,24,1,https://github.com/shaleh,Refactor read_key to use g_strrstr() and remove unneeded continues fr…,1,[],https://github.com/djcb/mu/pull/1088,https://github.com/shaleh,1,https://github.com/djcb/mu/pull/1088,"…om read_val
No functionality change, just code simplification.
g_strrstr() simplifies the logic of splitting the input on the colon.
The continue does nothing since the if/else logic contains all of the actions.","…om read_val
No functionality change, just code simplification.
g_strrstr() simplifies the logic of splitting the input on the colon.
The continue does nothing since the if/else logic contains all of the actions.",True,{}
djcb/mu,https://github.com/djcb/mu,1088,2017-06-05T16:52:56Z,2017-06-05T22:59:43Z,2017-06-05T22:59:43Z,CLOSED,False,12,24,1,https://github.com/shaleh,Refactor read_key to use g_strrstr() and remove unneeded continues fr…,1,[],https://github.com/djcb/mu/pull/1088,https://github.com/shaleh,2,https://github.com/djcb/mu/pull/1088#issuecomment-306332103,"…om read_val
No functionality change, just code simplification.
g_strrstr() simplifies the logic of splitting the input on the colon.
The continue does nothing since the if/else logic contains all of the actions.",Grumble. I dropped something when I rebased......,True,{}
djcb/mu,https://github.com/djcb/mu,1088,2017-06-05T16:52:56Z,2017-06-05T22:59:43Z,2017-06-05T22:59:43Z,CLOSED,False,12,24,1,https://github.com/shaleh,Refactor read_key to use g_strrstr() and remove unneeded continues fr…,1,[],https://github.com/djcb/mu/pull/1088,https://github.com/shaleh,3,https://github.com/djcb/mu/pull/1088#issuecomment-306334160,"…om read_val
No functionality change, just code simplification.
g_strrstr() simplifies the logic of splitting the input on the colon.
The continue does nothing since the if/else logic contains all of the actions.",No sense leaving a busted PR.,True,{}
djcb/mu,https://github.com/djcb/mu,1089,2017-06-05T22:43:34Z,2017-06-24T11:27:44Z,2017-06-24T11:27:45Z,CLOSED,False,33,18,2,https://github.com/shaleh,Simplify logic of mu_str_remove_ctrl_in_place. Add tests.,1,[],https://github.com/djcb/mu/pull/1089,https://github.com/shaleh,1,https://github.com/djcb/mu/pull/1089,,,True,{}
djcb/mu,https://github.com/djcb/mu,1089,2017-06-05T22:43:34Z,2017-06-24T11:27:44Z,2017-06-24T11:27:45Z,CLOSED,False,33,18,2,https://github.com/shaleh,Simplify logic of mu_str_remove_ctrl_in_place. Add tests.,1,[],https://github.com/djcb/mu/pull/1089,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1089#issuecomment-310833122,,"Merged, with a few stylistic fixes. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1090,2017-06-05T23:17:02Z,2017-06-24T11:02:31Z,2017-06-24T20:01:18Z,CLOSED,False,12,24,1,https://github.com/shaleh,Refactor read_key to use g_strstr_len(),1,[],https://github.com/djcb/mu/pull/1090,https://github.com/shaleh,1,https://github.com/djcb/mu/pull/1090,Remove unneeded continues from read_val,Remove unneeded continues from read_val,True,{}
djcb/mu,https://github.com/djcb/mu,1090,2017-06-05T23:17:02Z,2017-06-24T11:02:31Z,2017-06-24T20:01:18Z,CLOSED,False,12,24,1,https://github.com/shaleh,Refactor read_key to use g_strstr_len(),1,[],https://github.com/djcb/mu/pull/1090,https://github.com/shaleh,2,https://github.com/djcb/mu/pull/1090#issuecomment-306337162,Remove unneeded continues from read_val,Apologies for the last one. I had resolved the strrstr() issue locally and simply pushed without looking.,True,{}
djcb/mu,https://github.com/djcb/mu,1090,2017-06-05T23:17:02Z,2017-06-24T11:02:31Z,2017-06-24T20:01:18Z,CLOSED,False,12,24,1,https://github.com/shaleh,Refactor read_key to use g_strstr_len(),1,[],https://github.com/djcb/mu/pull/1090,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1090#issuecomment-310832067,Remove unneeded continues from read_val,"Thanks. However, I'm not going to merge it since it doesn't seem to substantially improve things, yet requires testing etc. to ensure that it does not break things. Also, it doesn't quite follow the mu coding style.
Still, appreciated, thanks for making the effort.",True,{}
djcb/mu,https://github.com/djcb/mu,1090,2017-06-05T23:17:02Z,2017-06-24T11:02:31Z,2017-06-24T20:01:18Z,CLOSED,False,12,24,1,https://github.com/shaleh,Refactor read_key to use g_strstr_len(),1,[],https://github.com/djcb/mu/pull/1090,https://github.com/shaleh,4,https://github.com/djcb/mu/pull/1090#issuecomment-310862526,Remove unneeded continues from read_val,"No worries. I refactor to learn code trees.
…
On June 24, 2017 4:02:33 AM PDT, ""Dirk-Jan C. Binnema"" ***@***.***> wrote:
Thanks. However, I'm not going to merge it since it doesn't seem to
substantially improve things, yet requires testing etc. to ensure that
it does not break things. Also, it doesn't quite follow the mu coding
style.

Still, appreciated, thanks for making the effort.

--
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub:
#1090 (comment)


-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.",True,{}
djcb/mu,https://github.com/djcb/mu,1094,2017-06-10T06:55:34Z,2017-06-17T09:08:38Z,2020-05-04T03:11:39Z,MERGED,True,0,1,1,https://github.com/wataash,mu4e: remove `realdelete' option of OfflineIMAP,1,[],https://github.com/djcb/mu/pull/1094,https://github.com/wataash,1,https://github.com/djcb/mu/pull/1094,"Quotation from the commit log:

offlineimap/Changelog.md says Gmail `realdelete' option is considered
harmful and was removed on OfflineIMAP v6.5.2.1 (2012-04-04).

so we should remove it.
See: https://github.com/OfflineIMAP/offlineimap/blob/master/Changelog.md#offlineimap-v6521-2012-04-04","Quotation from the commit log:

offlineimap/Changelog.md says Gmail `realdelete' option is considered
harmful and was removed on OfflineIMAP v6.5.2.1 (2012-04-04).

so we should remove it.
See: https://github.com/OfflineIMAP/offlineimap/blob/master/Changelog.md#offlineimap-v6521-2012-04-04",True,{}
djcb/mu,https://github.com/djcb/mu,1094,2017-06-10T06:55:34Z,2017-06-17T09:08:38Z,2020-05-04T03:11:39Z,MERGED,True,0,1,1,https://github.com/wataash,mu4e: remove `realdelete' option of OfflineIMAP,1,[],https://github.com/djcb/mu/pull/1094,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1094#issuecomment-309203497,"Quotation from the commit log:

offlineimap/Changelog.md says Gmail `realdelete' option is considered
harmful and was removed on OfflineIMAP v6.5.2.1 (2012-04-04).

so we should remove it.
See: https://github.com/OfflineIMAP/offlineimap/blob/master/Changelog.md#offlineimap-v6521-2012-04-04","Merged, thanks!",True,{'THUMBS_UP': ['https://github.com/wataash']}
djcb/mu,https://github.com/djcb/mu,1095,2017-06-13T03:09:35Z,2017-06-24T10:55:08Z,2017-06-24T10:55:08Z,CLOSED,False,26,19,2,https://github.com/vsedach,Updated single-window mu4e~headers-quit-buffer and mu4e~main-menu based on suggestions from Joost Kremers,1,[],https://github.com/djcb/mu/pull/1095,https://github.com/vsedach,1,https://github.com/djcb/mu/pull/1095,,,True,{}
djcb/mu,https://github.com/djcb/mu,1095,2017-06-13T03:09:35Z,2017-06-24T10:55:08Z,2017-06-24T10:55:08Z,CLOSED,False,26,19,2,https://github.com/vsedach,Updated single-window mu4e~headers-quit-buffer and mu4e~main-menu based on suggestions from Joost Kremers,1,[],https://github.com/djcb/mu/pull/1095,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1095#issuecomment-309203447,,"Can you imp[rove the commit message a bit -- ie. a short summary line, and then explain the changes? Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1095,2017-06-13T03:09:35Z,2017-06-24T10:55:08Z,2017-06-24T10:55:08Z,CLOSED,False,26,19,2,https://github.com/vsedach,Updated single-window mu4e~headers-quit-buffer and mu4e~main-menu based on suggestions from Joost Kremers,1,[],https://github.com/djcb/mu/pull/1095,https://github.com/vsedach,3,https://github.com/djcb/mu/pull/1095#issuecomment-309396181,,Changed. Let me know if this commit message is ok.,True,{}
djcb/mu,https://github.com/djcb/mu,1095,2017-06-13T03:09:35Z,2017-06-24T10:55:08Z,2017-06-24T10:55:08Z,CLOSED,False,26,19,2,https://github.com/vsedach,Updated single-window mu4e~headers-quit-buffer and mu4e~main-menu based on suggestions from Joost Kremers,1,[],https://github.com/djcb/mu/pull/1095,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1095#issuecomment-310831742,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1099,2017-06-16T13:22:02Z,2017-06-17T09:05:51Z,2017-06-19T08:35:15Z,MERGED,True,4,5,1,https://github.com/stsquad,mu4e: don't loose search history when editing search,1,[],https://github.com/djcb/mu/pull/1099,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/1099,"Even though the user may be editing this expression there is no reason
to not have the mu4e~headers-search-hist present for the prompt. Emacs
will only replace it with system wide history which would likely
contain irrelevant history for the action.","Even though the user may be editing this expression there is no reason
to not have the mu4e~headers-search-hist present for the prompt. Emacs
will only replace it with system wide history which would likely
contain irrelevant history for the action.",True,{}
djcb/mu,https://github.com/djcb/mu,1099,2017-06-16T13:22:02Z,2017-06-17T09:05:51Z,2017-06-19T08:35:15Z,MERGED,True,4,5,1,https://github.com/stsquad,mu4e: don't loose search history when editing search,1,[],https://github.com/djcb/mu/pull/1099,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1099#issuecomment-309203372,"Even though the user may be editing this expression there is no reason
to not have the mu4e~headers-search-hist present for the prompt. Emacs
will only replace it with system wide history which would likely
contain irrelevant history for the action.",Makes sense -- thanks. Merged.,True,{}
djcb/mu,https://github.com/djcb/mu,1099,2017-06-16T13:22:02Z,2017-06-17T09:05:51Z,2017-06-19T08:35:15Z,MERGED,True,4,5,1,https://github.com/stsquad,mu4e: don't loose search history when editing search,1,[],https://github.com/djcb/mu/pull/1099,https://github.com/stsquad,3,https://github.com/djcb/mu/pull/1099#issuecomment-309374682,"Even though the user may be editing this expression there is no reason
to not have the mu4e~headers-search-hist present for the prompt. Emacs
will only replace it with system wide history which would likely
contain irrelevant history for the action.",Is there a time when expr is handed in to the function?,True,{}
djcb/mu,https://github.com/djcb/mu,1100,2017-06-17T09:17:26Z,2017-06-24T10:39:48Z,2017-06-24T10:39:48Z,CLOSED,False,1,2,2,https://github.com/ptroja,mu: remove useless assignment in mu-extract,2,[],https://github.com/djcb/mu/pull/1100,https://github.com/ptroja,1,https://github.com/djcb/mu/pull/1100,"The filepath variable is assigned with NULL, but not read until reassigned few lines below.
Detected with cppcheck.","The filepath variable is assigned with NULL, but not read until reassigned few lines below.
Detected with cppcheck.",True,{}
djcb/mu,https://github.com/djcb/mu,1100,2017-06-17T09:17:26Z,2017-06-24T10:39:48Z,2017-06-24T10:39:48Z,CLOSED,False,1,2,2,https://github.com/ptroja,mu: remove useless assignment in mu-extract,2,[],https://github.com/djcb/mu/pull/1100,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1100#issuecomment-310831019,"The filepath variable is assigned with NULL, but not read until reassigned few lines below.
Detected with cppcheck.","Don't think removing the assignment improves things, but thank you  for the manual fix!",True,{}
djcb/mu,https://github.com/djcb/mu,1105,2017-07-15T15:15:53Z,2017-08-10T21:01:14Z,2019-06-29T05:08:13Z,CLOSED,False,1,1,1,https://github.com/cybercode,Only require html2text if emacs version supports it.,1,[],https://github.com/djcb/mu/pull/1105,https://github.com/cybercode,1,https://github.com/djcb/mu/pull/1105,"html2text has been obsoleted in emacs 26.  Only require the file if `emacs-version' < ""26.0""","html2text has been obsoleted in emacs 26.  Only require the file if `emacs-version' < ""26.0""",True,{'HOORAY': ['https://github.com/drielsma']}
djcb/mu,https://github.com/djcb/mu,1105,2017-07-15T15:15:53Z,2017-08-10T21:01:14Z,2019-06-29T05:08:13Z,CLOSED,False,1,1,1,https://github.com/cybercode,Only require html2text if emacs version supports it.,1,[],https://github.com/djcb/mu/pull/1105,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1105#issuecomment-321672160,"html2text has been obsoleted in emacs 26.  Only require the file if `emacs-version' < ""26.0""","Thanks! However, we can't remove that yet though, since it is still the default value for mu4e-html2text-command, and don't want to change that just yet.  Let's check again when emacs 26 has been released.",True,{}
djcb/mu,https://github.com/djcb/mu,1105,2017-07-15T15:15:53Z,2017-08-10T21:01:14Z,2019-06-29T05:08:13Z,CLOSED,False,1,1,1,https://github.com/cybercode,Only require html2text if emacs version supports it.,1,[],https://github.com/djcb/mu/pull/1105,https://github.com/cybercode,3,https://github.com/djcb/mu/pull/1105#issuecomment-321675774,"html2text has been obsoleted in emacs 26.  Only require the file if `emacs-version' < ""26.0""","If you look at the patch, you will see the current behavior is unchanged. the require is only skipped for emacs 26 and above, where it is never used and causes annoying deprecation warnings when the file is loaded. The initialization form mu4e-html2text-command looks for shr-insert-document before attempting to use html2text anyway, so the change works in all version of emacs.
I actually used the most conservative approach, specifically checking for emacs 26. I fact a better approach (which i think would no longer load html2text for emacs25 either) would be:
(or (fboundp 'shr-insert-document) (require 'html2text))
which is in alignment with the defcustom:
(defcustom mu4e-html2text-command
  (if (fboundp 'shr-insert-document) 'mu4e-shr2text 'html2text)",True,{}
djcb/mu,https://github.com/djcb/mu,1105,2017-07-15T15:15:53Z,2017-08-10T21:01:14Z,2019-06-29T05:08:13Z,CLOSED,False,1,1,1,https://github.com/cybercode,Only require html2text if emacs version supports it.,1,[],https://github.com/djcb/mu/pull/1105,https://github.com/jabranham,4,https://github.com/djcb/mu/pull/1105#issuecomment-359916203,"html2text has been obsoleted in emacs 26.  Only require the file if `emacs-version' < ""26.0""",I upgraded to the Emacs 26 pretest today. Loading mu4e 0.9.18 results in the message Package html2text is obsolete!. A quick check around and I happened on this PR. Any chance of changing this in the soon-to-be-released mu 1.0.0? @djcb,True,"{'THUMBS_UP': ['https://github.com/stig', 'https://github.com/akirakyle', 'https://github.com/valankar']}"
djcb/mu,https://github.com/djcb/mu,1105,2017-07-15T15:15:53Z,2017-08-10T21:01:14Z,2019-06-29T05:08:13Z,CLOSED,False,1,1,1,https://github.com/cybercode,Only require html2text if emacs version supports it.,1,[],https://github.com/djcb/mu/pull/1105,https://github.com/valankar,5,https://github.com/djcb/mu/pull/1105#issuecomment-506927444,"html2text has been obsoleted in emacs 26.  Only require the file if `emacs-version' < ""26.0""",Should this be re-opened now?,True,{}
djcb/mu,https://github.com/djcb/mu,1109,2017-07-19T11:02:25Z,2017-08-10T21:02:37Z,2017-08-11T23:54:17Z,MERGED,True,12,1,2,https://github.com/galaunay,Add info on update status in modeline,1,[],https://github.com/djcb/mu/pull/1109,https://github.com/galaunay,1,https://github.com/djcb/mu/pull/1109,"Pull purpose
Just add an indicator ""(updating)"" in the modeline when an update is running.
It is disabled by default and can be enabled through the custom variable mu4e-display-update-status-in-modeline.

Motivation
I use auto update in the background when displaying the mails of my inbox (to be sure to see the last messages).
It can be annoying to be unable to know when it's done.","Pull purpose
Just add an indicator ""(updating)"" in the modeline when an update is running.
It is disabled by default and can be enabled through the custom variable mu4e-display-update-status-in-modeline.

Motivation
I use auto update in the background when displaying the mails of my inbox (to be sure to see the last messages).
It can be annoying to be unable to know when it's done.",True,{}
djcb/mu,https://github.com/djcb/mu,1109,2017-07-19T11:02:25Z,2017-08-10T21:02:37Z,2017-08-11T23:54:17Z,MERGED,True,12,1,2,https://github.com/galaunay,Add info on update status in modeline,1,[],https://github.com/djcb/mu/pull/1109,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1109#issuecomment-321672512,"Pull purpose
Just add an indicator ""(updating)"" in the modeline when an update is running.
It is disabled by default and can be enabled through the custom variable mu4e-display-update-status-in-modeline.

Motivation
I use auto update in the background when displaying the mails of my inbox (to be sure to see the last messages).
It can be annoying to be unable to know when it's done.",Thanks! Let's give this a try...,True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1111,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.",True,"{'HEART': ['https://github.com/stig', 'https://github.com/ncopa'], 'THUMBS_UP': ['https://github.com/eklitzke', 'https://github.com/Chris00']}"
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/wavexx,2,https://github.com/djcb/mu/pull/1111#issuecomment-319155622,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","I don't see gmime 3.0 in any ubuntu version yet, and considering how slow travis images generally update, we would need to pull it in via an external source in order to test it there. Shame :/",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/dralves,3,https://github.com/djcb/mu/pull/1111#issuecomment-349742494,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.",Just dropped in to say thanks. Setting brew to use your gmime-3.0 branch was the only way that I could get mu to build on macOS high sierra. the included gmime 2.6 would always fail to build due to a missing gpg header and I couldn't solve it by installing mono or changing the build flags like some other posts suggest.,True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/wavexx,4,https://github.com/djcb/mu/pull/1111#issuecomment-349761612,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","On Wed, Dec 06 2017, David Ribeiro Alves wrote:
 Just dropped in to say thanks. Setting brew to use your gmime-3.0
 branch was the only way that I could get mu to build on macOS high
 sierra. the included gmime 2.6 would always fail to build due to a
 missing gpg header and I couldn't solve it by installing mono or
 changing the build flags like some other posts suggest.
It's currently a bit behind the master though.",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/dralves,5,https://github.com/djcb/mu/pull/1111#issuecomment-349763920,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","I noticed, was only looking for at least 0.9.16 though, so was recent enough for me. Thanks for pointing that out though.",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/norbusan,6,https://github.com/djcb/mu/pull/1111#issuecomment-378314623,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","Hi everyone,
any chance that this is getting updated or even better included into the main branch?
Thanks a lot
Norbert
(Debian maintainer of mu)",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/Chris00,7,https://github.com/djcb/mu/pull/1111#issuecomment-392724347,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.",@wavexx Ubuntu people should be able to use Debian packages to get gmime-3.0 — maybe they just need a word about how to do.,True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/wavexx,8,https://github.com/djcb/mu/pull/1111#issuecomment-392732573,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","On Tue, May 29 2018, Christophe Troestler wrote:
 @wavexx Ubuntu people should be able to use Debian packages to get
 gmime-3.0 — maybe they just need a word about how to do.
The latest ubuntu LTS 18.04 has both.

Keeping support for both would probably be quite a bit uglier, and gmime
3 does improve in some corners. It depends whether djcb wants to support
gmime <3 really.",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/rjhorniii,9,https://github.com/djcb/mu/pull/1111#issuecomment-393004024,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","I just had to rebuild mu because the latest LEAP 15 from OpenSuSE has some version mismatch issues with the mu package.  That distro has both versions, so you just need clarity in the build instructions and configure error messages.",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/djcb,10,https://github.com/djcb/mu/pull/1111#issuecomment-394162240,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","Tried this; with the gmime-3.0 code, we're not passing the unit-tests.
First, there's something like:
ERROR:test-mu-cmd.c:452:test_mu_extract_03: assertion failed (get_file_size(att1) == 15960): (15958 == 15960)

which is easy to fix, but then we get to:
/mu-cmd/test-mu-verify-good: mu: error verifying signature: Cannot verify multipart/signed part: unregistered signature protocol 'application/pgp-signature'.
**
ERROR:test-mu-cmd.c:814:test_mu_verify_good: assertion failed (retval == 0): (256 == 0)",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/wavexx,11,https://github.com/djcb/mu/pull/1111#issuecomment-394188005,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","On Sun, Jun 03 2018, Dirk-Jan C. Binnema wrote:
 ERROR:test-mu-cmd.c:814:test_mu_verify_good: assertion failed (retval == 0): (256 == 0)
It's been a while since I tested this, but it was passing to the end at
the time. I'm currently using gmime 2 as I needed a couple of various
fixes in the master branch, so I didn't use the branch for long.

Did you push any additional fix yet?",True,{}
djcb/mu,https://github.com/djcb/mu,1111,2017-07-30T15:03:50Z,2018-08-18T08:01:00Z,2018-08-18T08:01:00Z,MERGED,True,0,0,0,https://github.com/wavexx,Support for gmime 3.0,0,[],https://github.com/djcb/mu/pull/1111,https://github.com/rjhorniii,12,https://github.com/djcb/mu/pull/1111#issuecomment-399476427,"Since gmime 3.0 is available, here's an update for mu, with some notes relevant to mu:

Fetching from is now uniform with other address fields, making the code cleaner.
Message references and content parameter lists are now arrays, so no iterators are needed. For references, the code is cleaner. For content types, is on par.
internet_address_get_name can actually return """" as opposed to NULL, so an extra check is necessary.
GMIME_ENABLE_RFC2047_WORKAROUNDS is now the default.
Some functions got renamed or accept a nullable flags parameter. Nothing major.
Crypto is the biggest change and is the part where I have some doubts on:

decrypt and verify no longer require an explicit context, which is actually nice.
The agent is now required with the gpg2 machinery, as such the associated options got removed.
I don't see a way to specify the gpg path anymore. Some advice needed.
Likewise for automatic signature downloading.
Error flags are now returned directly in the GMimeSignatureStatus enum, requiring some extra work to get the signature validity and status. Please have a second look on how we remap the signature status.



100% test pass, including crypto (although I verified this by using my own messages).
There are still references to MU_GPG_PATH and MU_MSG_OPTION_AUTO_RETRIEVE to fix.","I'm not sure how my comment on OpenSuse LEAP 15.0 got attached to this.  It's a separate issue.  I reported it to OpenSuse so they could forward it to whoever packages mu for that distribution.  They must have attached it to this by mistake when passing it upstream.
The issue with OpenSuse is different.  The packages that were built for that release show dependencies on versions that are replaced, etc.  The packages won't install properly.  Xapian versions don't find dependencies, etc.
My fix was to take the v1.0  source from github and follow the INSTALL procedure.  That compiled, passed make check, and installed fine.  My assumption is that there is just a problem specific to the packaging instructions for OpenSuse LEAP 15.0.  I don't know enough about that to do any checking or suggest any fixes.",True,{}
djcb/mu,https://github.com/djcb/mu,1118,2017-08-27T05:47:37Z,2017-10-26T20:14:08Z,2017-10-26T20:14:15Z,MERGED,True,41,5,1,https://github.com/MaximeMaW,Allow to set the reply policy in a smart manner,3,[],https://github.com/djcb/mu/pull/1118,https://github.com/MaximeMaW,1,https://github.com/djcb/mu/pull/1118,"Depending on whether the original email was encrypted, one can set
different reply policies.
This fixes an issue raised in issue #865, when mu4e-compose-crypto-reply-policy conflicted with sign-by-default. Now, two variables replace the old mu4e-compose-crypto-reply-policy:

mu4e-compose-crypto-reply-encrypted-policy
mu4e-compose-crypto-reply-plain-policy

I'd be very happy to make any adjustment.","Depending on whether the original email was encrypted, one can set
different reply policies.
This fixes an issue raised in issue #865, when mu4e-compose-crypto-reply-policy conflicted with sign-by-default. Now, two variables replace the old mu4e-compose-crypto-reply-policy:

mu4e-compose-crypto-reply-encrypted-policy
mu4e-compose-crypto-reply-plain-policy

I'd be very happy to make any adjustment.",True,{'THUMBS_UP': ['https://github.com/geeklhem']}
djcb/mu,https://github.com/djcb/mu,1118,2017-08-27T05:47:37Z,2017-10-26T20:14:08Z,2017-10-26T20:14:15Z,MERGED,True,41,5,1,https://github.com/MaximeMaW,Allow to set the reply policy in a smart manner,3,[],https://github.com/djcb/mu/pull/1118,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1118#issuecomment-325212243,"Depending on whether the original email was encrypted, one can set
different reply policies.
This fixes an issue raised in issue #865, when mu4e-compose-crypto-reply-policy conflicted with sign-by-default. Now, two variables replace the old mu4e-compose-crypto-reply-policy:

mu4e-compose-crypto-reply-encrypted-policy
mu4e-compose-crypto-reply-plain-policy

I'd be very happy to make any adjustment.","Anyway, apart from those details, looks good!",True,{}
djcb/mu,https://github.com/djcb/mu,1118,2017-08-27T05:47:37Z,2017-10-26T20:14:08Z,2017-10-26T20:14:15Z,MERGED,True,41,5,1,https://github.com/MaximeMaW,Allow to set the reply policy in a smart manner,3,[],https://github.com/djcb/mu/pull/1118,https://github.com/MaximeMaW,3,https://github.com/djcb/mu/pull/1118#issuecomment-339069795,"Depending on whether the original email was encrypted, one can set
different reply policies.
This fixes an issue raised in issue #865, when mu4e-compose-crypto-reply-policy conflicted with sign-by-default. Now, two variables replace the old mu4e-compose-crypto-reply-policy:

mu4e-compose-crypto-reply-encrypted-policy
mu4e-compose-crypto-reply-plain-policy

I'd be very happy to make any adjustment.","@djcb, any comment on the updated commits (e761f74)?
Thank you very much!",True,{}
djcb/mu,https://github.com/djcb/mu,1118,2017-08-27T05:47:37Z,2017-10-26T20:14:08Z,2017-10-26T20:14:15Z,MERGED,True,41,5,1,https://github.com/MaximeMaW,Allow to set the reply policy in a smart manner,3,[],https://github.com/djcb/mu/pull/1118,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1118#issuecomment-339787410,"Depending on whether the original email was encrypted, one can set
different reply policies.
This fixes an issue raised in issue #865, when mu4e-compose-crypto-reply-policy conflicted with sign-by-default. Now, two variables replace the old mu4e-compose-crypto-reply-policy:

mu4e-compose-crypto-reply-encrypted-policy
mu4e-compose-crypto-reply-plain-policy

I'd be very happy to make any adjustment.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1134,2017-10-09T19:13:59Z,2018-01-23T20:56:32Z,2018-01-23T20:56:40Z,MERGED,True,2,10,2,https://github.com/jabranham,"mu4e: simplify what ""e"" does in mu4e-view mode",1,[],https://github.com/djcb/mu/pull/1134,https://github.com/jabranham,1,https://github.com/djcb/mu/pull/1134,"The default was to use e to save one attachment or C-u e to save multiple. This
simplifies it so that e simply offers to save one or many attachments.","The default was to use e to save one attachment or C-u e to save multiple. This
simplifies it so that e simply offers to save one or many attachments.",True,{'THUMBS_UP': ['https://github.com/MaximeMaW']}
djcb/mu,https://github.com/djcb/mu,1134,2017-10-09T19:13:59Z,2018-01-23T20:56:32Z,2018-01-23T20:56:40Z,MERGED,True,2,10,2,https://github.com/jabranham,"mu4e: simplify what ""e"" does in mu4e-view mode",1,[],https://github.com/djcb/mu/pull/1134,https://github.com/jabranham,2,https://github.com/djcb/mu/pull/1134#issuecomment-359917117,"The default was to use e to save one attachment or C-u e to save multiple. This
simplifies it so that e simply offers to save one or many attachments.",I've been using this for 3 months now without any bad side effects FWIW.,True,{}
djcb/mu,https://github.com/djcb/mu,1134,2017-10-09T19:13:59Z,2018-01-23T20:56:32Z,2018-01-23T20:56:40Z,MERGED,True,2,10,2,https://github.com/jabranham,"mu4e: simplify what ""e"" does in mu4e-view mode",1,[],https://github.com/djcb/mu/pull/1134,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1134#issuecomment-359927677,"The default was to use e to save one attachment or C-u e to save multiple. This
simplifies it so that e simply offers to save one or many attachments.",Merged -- thanks,True,{'THUMBS_UP': ['https://github.com/jabranham']}
djcb/mu,https://github.com/djcb/mu,1141,2017-10-29T06:01:28Z,2017-11-02T05:47:34Z,2019-09-16T17:01:34Z,MERGED,True,9,8,1,https://github.com/thierryvolpiatto,Ensure mu4e-view-mode-hook run after text insertion,3,[],https://github.com/djcb/mu/pull/1141,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1141,"mu4e/mu4e-view.el (mu4e-view): Do it.

In mu4e-view mu4e-view-mode run before any text is inserted, as a result all functions from
mu4e-view-mode-hook modifying text in message have no effect.","mu4e/mu4e-view.el (mu4e-view): Do it.

In mu4e-view mu4e-view-mode run before any text is inserted, as a result all functions from
mu4e-view-mode-hook modifying text in message have no effect.",True,{}
djcb/mu,https://github.com/djcb/mu,1141,2017-10-29T06:01:28Z,2017-11-02T05:47:34Z,2019-09-16T17:01:34Z,MERGED,True,9,8,1,https://github.com/thierryvolpiatto,Ensure mu4e-view-mode-hook run after text insertion,3,[],https://github.com/djcb/mu/pull/1141,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1141#issuecomment-340250883,"mu4e/mu4e-view.el (mu4e-view): Do it.

In mu4e-view mu4e-view-mode run before any text is inserted, as a result all functions from
mu4e-view-mode-hook modifying text in message have no effect.",thanks -- but can you change it to not affect the whitespace?,True,{}
djcb/mu,https://github.com/djcb/mu,1141,2017-10-29T06:01:28Z,2017-11-02T05:47:34Z,2019-09-16T17:01:34Z,MERGED,True,9,8,1,https://github.com/thierryvolpiatto,Ensure mu4e-view-mode-hook run after text insertion,3,[],https://github.com/djcb/mu/pull/1141,https://github.com/thierryvolpiatto,3,https://github.com/djcb/mu/pull/1141#issuecomment-340656175,"mu4e/mu4e-view.el (mu4e-view): Do it.

In mu4e-view mu4e-view-mode run before any text is inserted, as a result all functions from
mu4e-view-mode-hook modifying text in message have no effect.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 thanks -- but can you change it to not affect the whitespace?
Done.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1141,2017-10-29T06:01:28Z,2017-11-02T05:47:34Z,2019-09-16T17:01:34Z,MERGED,True,9,8,1,https://github.com/thierryvolpiatto,Ensure mu4e-view-mode-hook run after text insertion,3,[],https://github.com/djcb/mu/pull/1141,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1141#issuecomment-341323952,"mu4e/mu4e-view.el (mu4e-view): Do it.

In mu4e-view mu4e-view-mode run before any text is inserted, as a result all functions from
mu4e-view-mode-hook modifying text in message have no effect.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1141,2017-10-29T06:01:28Z,2017-11-02T05:47:34Z,2019-09-16T17:01:34Z,MERGED,True,9,8,1,https://github.com/thierryvolpiatto,Ensure mu4e-view-mode-hook run after text insertion,3,[],https://github.com/djcb/mu/pull/1141,https://github.com/wavexx,5,https://github.com/djcb/mu/pull/1141#issuecomment-341421033,"mu4e/mu4e-view.el (mu4e-view): Do it.

In mu4e-view mu4e-view-mode run before any text is inserted, as a result all functions from
mu4e-view-mode-hook modifying text in message have no effect.","Mmmh, this causes:
Debugger entered--Lisp error: (wrong-type-argument hash-table-p nil)
  hash-table-count(nil)
  mu4e~view-get-attach-num(....)

when opening attachments.",True,{}
djcb/mu,https://github.com/djcb/mu,1141,2017-10-29T06:01:28Z,2017-11-02T05:47:34Z,2019-09-16T17:01:34Z,MERGED,True,9,8,1,https://github.com/thierryvolpiatto,Ensure mu4e-view-mode-hook run after text insertion,3,[],https://github.com/djcb/mu/pull/1141,https://github.com/thierryvolpiatto,6,https://github.com/djcb/mu/pull/1141#issuecomment-341779825,"mu4e/mu4e-view.el (mu4e-view): Do it.

In mu4e-view mu4e-view-mode run before any text is inserted, as a result all functions from
mu4e-view-mode-hook modifying text in message have no effect.","Indeed this is because mu4e-view-message-text calls mu4e~view-construct-attachments-header which set mu4e~view-attach-map for current buffer, and then mu4e-view-mode which run after this clean local variables, so mu4e~view-attach-map is reset to nil.
So we must call the mode before calling mu4e-view-message-text.
@djcb I suggest you reverse this PR for now and we find something else.
A simple change would be calling the hook with run-mode-hooks at end of function, but hooks would be called twice, a workaround for this would be to let-bind mu4e-view-mode-hook to nil when calling the mode, like this:
(defun mu4e-view (msg)
  ""Display the message MSG in a new buffer, and keep in sync with HDRSBUF.
'In sync' here means that moving to the next/previous message in
the the message view affects HDRSBUF, as does marking etc.

As a side-effect, a message that is being viewed loses its 'unread'
marking if it still had that.""
  (let* ((embedded ;; is it as an embedded msg (ie. message/rfc822 att)?
	   (when (gethash (mu4e-message-field msg :path)
		   mu4e~path-parent-docid-map) t))
	  (buf
	    (if embedded
	      (mu4e~view-embedded-winbuf)
	      (get-buffer-create mu4e~view-buffer-name)))
         mode-enabled)
    (with-current-buffer buf
      (unless (setq mode-enabled (eq major-mode 'mu4e-view-mode))
        (let (mu4e-view-mode-hook) (mu4e-view-mode)))
      (setq mu4e~view-msg msg)
      ;; When MSG is unread, mu4e~view-mark-as-read-maybe will trigger
      ;; another call to mu4e-view (via mu4e~headers-update-handler as
      ;; the reply handler to mu4e~proc-move)
      (let ((inhibit-read-only t))
        (when (or embedded (not (mu4e~view-mark-as-read-maybe msg)))
	  (erase-buffer)
	  (mu4e~delete-all-overlays)
	  (insert (mu4e-view-message-text msg))
	  (goto-char (point-min))
	  (mu4e~fontify-cited)
	  (mu4e~fontify-signature)
	  (mu4e~view-show-images-maybe msg)
          (mu4e~view-make-urls-clickable)
	  (when embedded (local-set-key ""q"" 'kill-buffer-and-window))
          (unless mode-enabled (run-mode-hooks 'mu4e-view-mode-hook)))))
    (switch-to-buffer buf)))
Another solution would be to add a new hook...",True,{}
djcb/mu,https://github.com/djcb/mu,1146,2017-10-30T23:00:28Z,2017-11-02T06:10:32Z,2017-11-02T06:10:32Z,MERGED,True,2,2,1,None,mu4e: fix bug preventing mu4e-headers-change-sorting to sort by list,1,[],https://github.com/djcb/mu/pull/1146,None,1,https://github.com/djcb/mu/pull/1146,"The little bug was caused by a little confusion of the key for list-IDs.
Namely, we use :list and not :list-id for list-IDs.","The little bug was caused by a little confusion of the key for list-IDs.
Namely, we use :list and not :list-id for list-IDs.",True,{}
djcb/mu,https://github.com/djcb/mu,1146,2017-10-30T23:00:28Z,2017-11-02T06:10:32Z,2017-11-02T06:10:32Z,MERGED,True,2,2,1,None,mu4e: fix bug preventing mu4e-headers-change-sorting to sort by list,1,[],https://github.com/djcb/mu/pull/1146,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1146#issuecomment-341326967,"The little bug was caused by a little confusion of the key for list-IDs.
Namely, we use :list and not :list-id for list-IDs.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1148,2017-11-04T04:59:12Z,2018-01-06T13:01:33Z,2019-09-16T17:02:11Z,MERGED,True,9,7,1,https://github.com/thierryvolpiatto,Fix again #1141 (mu4e-view-mode-hook should run after text insertion),2,[],https://github.com/djcb/mu/pull/1148,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1148,"Run mu4e-view-mode without its hook (#1141)
before text insertion and run finally the hook at end.
This ensure local variables are not killed after being set.

mu4e/mu4e-view.el (mu4e-view): Do it.","Run mu4e-view-mode without its hook (#1141)
before text insertion and run finally the hook at end.
This ensure local variables are not killed after being set.

mu4e/mu4e-view.el (mu4e-view): Do it.",True,{}
djcb/mu,https://github.com/djcb/mu,1148,2017-11-04T04:59:12Z,2018-01-06T13:01:33Z,2019-09-16T17:02:11Z,MERGED,True,9,7,1,https://github.com/thierryvolpiatto,Fix again #1141 (mu4e-view-mode-hook should run after text insertion),2,[],https://github.com/djcb/mu/pull/1148,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1148#issuecomment-345928243,"Run mu4e-view-mode without its hook (#1141)
before text insertion and run finally the hook at end.
This ensure local variables are not killed after being set.

mu4e/mu4e-view.el (mu4e-view): Do it.",I am using this since 17 days now as an advice without any problems.,True,{}
djcb/mu,https://github.com/djcb/mu,1148,2017-11-04T04:59:12Z,2018-01-06T13:01:33Z,2019-09-16T17:02:11Z,MERGED,True,9,7,1,https://github.com/thierryvolpiatto,Fix again #1141 (mu4e-view-mode-hook should run after text insertion),2,[],https://github.com/djcb/mu/pull/1148,https://github.com/thierryvolpiatto,3,https://github.com/djcb/mu/pull/1148#issuecomment-354557352,"Run mu4e-view-mode without its hook (#1141)
before text insertion and run finally the hook at end.
This ensure local variables are not killed after being set.

mu4e/mu4e-view.el (mu4e-view): Do it.",ping,True,{}
djcb/mu,https://github.com/djcb/mu,1148,2017-11-04T04:59:12Z,2018-01-06T13:01:33Z,2019-09-16T17:02:11Z,MERGED,True,9,7,1,https://github.com/thierryvolpiatto,Fix again #1141 (mu4e-view-mode-hook should run after text insertion),2,[],https://github.com/djcb/mu/pull/1148,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1148#issuecomment-355745600,"Run mu4e-view-mode without its hook (#1141)
before text insertion and run finally the hook at end.
This ensure local variables are not killed after being set.

mu4e/mu4e-view.el (mu4e-view): Do it.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1149,2017-11-04T11:36:56Z,2017-11-04T11:37:08Z,2019-04-07T07:48:30Z,MERGED,True,8,9,1,https://github.com/djcb,"Revert ""Ensure mu4e-view-mode-hook run after text insertion""",1,[],https://github.com/djcb/mu/pull/1149,https://github.com/djcb,1,https://github.com/djcb/mu/pull/1149,Reverts #1141,Reverts #1141,True,{}
djcb/mu,https://github.com/djcb/mu,1151,2017-11-08T13:47:52Z,2018-07-11T18:35:58Z,2018-07-11T18:36:04Z,MERGED,True,1,1,1,https://github.com/gilbertw1,Fix region bounds checking when marking headers in mu4e,1,[],https://github.com/djcb/mu/pull/1151,https://github.com/gilbertw1,1,https://github.com/djcb/mu/pull/1151,"This a pull request to improve the region bounds checking when marking headers so that too many headers are not marked when a region is active.
For example, using evil I visually select the lines for two emails:

At this point, if I were press 'd' to mark these two emails for delete, then the third email from 'NETGEAR' would be marked for deletion as well.
I've tracked this down to the fact that (region-end) is not actually included in the region, so while the region only extends to the end of the second line, mu4e actually thinks it extends to the first position on the third line.
You can verify that (region-end) is outside the actual region by putting the cursor on the last character in a word, running (point), then selecting that word, running (region-end), and you'll notice that the result will be 1 greater than the point value was.
I've corrected this issue by verifying that the point is < (exclusive) the (region-end) instead of <= (inclusive).
Thanks!","This a pull request to improve the region bounds checking when marking headers so that too many headers are not marked when a region is active.
For example, using evil I visually select the lines for two emails:

At this point, if I were press 'd' to mark these two emails for delete, then the third email from 'NETGEAR' would be marked for deletion as well.
I've tracked this down to the fact that (region-end) is not actually included in the region, so while the region only extends to the end of the second line, mu4e actually thinks it extends to the first position on the third line.
You can verify that (region-end) is outside the actual region by putting the cursor on the last character in a word, running (point), then selecting that word, running (region-end), and you'll notice that the result will be 1 greater than the point value was.
I've corrected this issue by verifying that the point is < (exclusive) the (region-end) instead of <= (inclusive).
Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1151,2017-11-08T13:47:52Z,2018-07-11T18:35:58Z,2018-07-11T18:36:04Z,MERGED,True,1,1,1,https://github.com/gilbertw1,Fix region bounds checking when marking headers in mu4e,1,[],https://github.com/djcb/mu/pull/1151,https://github.com/gilbertw1,2,https://github.com/djcb/mu/pull/1151#issuecomment-402192189,"This a pull request to improve the region bounds checking when marking headers so that too many headers are not marked when a region is active.
For example, using evil I visually select the lines for two emails:

At this point, if I were press 'd' to mark these two emails for delete, then the third email from 'NETGEAR' would be marked for deletion as well.
I've tracked this down to the fact that (region-end) is not actually included in the region, so while the region only extends to the end of the second line, mu4e actually thinks it extends to the first position on the third line.
You can verify that (region-end) is outside the actual region by putting the cursor on the last character in a word, running (point), then selecting that word, running (region-end), and you'll notice that the result will be 1 greater than the point value was.
I've corrected this issue by verifying that the point is < (exclusive) the (region-end) instead of <= (inclusive).
Thanks!",Any possibility of getting this merged?,True,{}
djcb/mu,https://github.com/djcb/mu,1151,2017-11-08T13:47:52Z,2018-07-11T18:35:58Z,2018-07-11T18:36:04Z,MERGED,True,1,1,1,https://github.com/gilbertw1,Fix region bounds checking when marking headers in mu4e,1,[],https://github.com/djcb/mu/pull/1151,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1151#issuecomment-404269057,"This a pull request to improve the region bounds checking when marking headers so that too many headers are not marked when a region is active.
For example, using evil I visually select the lines for two emails:

At this point, if I were press 'd' to mark these two emails for delete, then the third email from 'NETGEAR' would be marked for deletion as well.
I've tracked this down to the fact that (region-end) is not actually included in the region, so while the region only extends to the end of the second line, mu4e actually thinks it extends to the first position on the third line.
You can verify that (region-end) is outside the actual region by putting the cursor on the last character in a word, running (point), then selecting that word, running (region-end), and you'll notice that the result will be 1 greater than the point value was.
I've corrected this issue by verifying that the point is < (exclusive) the (region-end) instead of <= (inclusive).
Thanks!","Oh, looks good, let's merge this. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1157,2017-11-26T14:53:25Z,2018-01-06T12:59:01Z,2018-01-06T12:59:07Z,MERGED,True,9,4,1,https://github.com/andersjohansson,Use defcustom for the customizable variables in mu4e-lists.el,1,[],https://github.com/djcb/mu/pull/1157,https://github.com/andersjohansson,1,https://github.com/djcb/mu/pull/1157,Kind of self-explanatory I hope!,Kind of self-explanatory I hope!,True,{}
djcb/mu,https://github.com/djcb/mu,1157,2017-11-26T14:53:25Z,2018-01-06T12:59:01Z,2018-01-06T12:59:07Z,MERGED,True,9,4,1,https://github.com/andersjohansson,Use defcustom for the customizable variables in mu4e-lists.el,1,[],https://github.com/djcb/mu/pull/1157,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1157#issuecomment-355745433,Kind of self-explanatory I hope!,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1161,2017-12-03T15:34:24Z,2018-04-25T08:32:16Z,2018-04-25T08:32:23Z,MERGED,True,21,2,2,https://github.com/gambhiro,shorten modeline str if longer than max-width,1,[],https://github.com/djcb/mu/pull/1161,https://github.com/gambhiro,1,https://github.com/djcb/mu/pull/1161,"This is a fix to limit the length of the query string displayed in the spaceline modeline.
The spaceline package displays the query in a segment of the modeline. When this is a long (perhaps bookmarked) query, the modeline either (a) becomes crowded or (b) another problem manifests where the whole spaceline modeline goes blank.
The variable mu4e-modeline-max-width is introduced to limit the length and mu4e~quote-for-modeline is extended a bit to shorten the query string if needed.","This is a fix to limit the length of the query string displayed in the spaceline modeline.
The spaceline package displays the query in a segment of the modeline. When this is a long (perhaps bookmarked) query, the modeline either (a) becomes crowded or (b) another problem manifests where the whole spaceline modeline goes blank.
The variable mu4e-modeline-max-width is introduced to limit the length and mu4e~quote-for-modeline is extended a bit to shorten the query string if needed.",True,{}
djcb/mu,https://github.com/djcb/mu,1161,2017-12-03T15:34:24Z,2018-04-25T08:32:16Z,2018-04-25T08:32:23Z,MERGED,True,21,2,2,https://github.com/gambhiro,shorten modeline str if longer than max-width,1,[],https://github.com/djcb/mu/pull/1161,https://github.com/JoeOsborn,2,https://github.com/djcb/mu/pull/1161#issuecomment-372324246,"This is a fix to limit the length of the query string displayed in the spaceline modeline.
The spaceline package displays the query in a segment of the modeline. When this is a long (perhaps bookmarked) query, the modeline either (a) becomes crowded or (b) another problem manifests where the whole spaceline modeline goes blank.
The variable mu4e-modeline-max-width is introduced to limit the length and mu4e~quote-for-modeline is extended a bit to shorten the query string if needed.",I've run into the issue that this PR fixes!  It would be a big help for Spaceline users.,True,{}
djcb/mu,https://github.com/djcb/mu,1161,2017-12-03T15:34:24Z,2018-04-25T08:32:16Z,2018-04-25T08:32:23Z,MERGED,True,21,2,2,https://github.com/gambhiro,shorten modeline str if longer than max-width,1,[],https://github.com/djcb/mu/pull/1161,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1161#issuecomment-384205577,"This is a fix to limit the length of the query string displayed in the spaceline modeline.
The spaceline package displays the query in a segment of the modeline. When this is a long (perhaps bookmarked) query, the modeline either (a) becomes crowded or (b) another problem manifests where the whole spaceline modeline goes blank.
The variable mu4e-modeline-max-width is introduced to limit the length and mu4e~quote-for-modeline is extended a bit to shorten the query string if needed.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1162,2017-12-05T08:57:38Z,2018-01-06T12:57:06Z,2018-01-06T12:57:06Z,CLOSED,False,3,5,1,https://github.com/eigengrau,mu4e: don’t use msgid as format template,1,[],https://github.com/djcb/mu/pull/1162,https://github.com/eigengrau,1,https://github.com/djcb/mu/pull/1162,"The Message-Id header may contain percent characters, which we don’t want to
pass on as format specifiers. Instead of escaping these characters too, we can
instead get rid of the call to format when a string has already been supplied.","The Message-Id header may contain percent characters, which we don’t want to
pass on as format specifiers. Instead of escaping these characters too, we can
instead get rid of the call to format when a string has already been supplied.",True,{}
djcb/mu,https://github.com/djcb/mu,1162,2017-12-05T08:57:38Z,2018-01-06T12:57:06Z,2018-01-06T12:57:06Z,CLOSED,False,3,5,1,https://github.com/eigengrau,mu4e: don’t use msgid as format template,1,[],https://github.com/djcb/mu/pull/1162,https://github.com/eigengrau,2,https://github.com/djcb/mu/pull/1162#issuecomment-349238663,"The Message-Id header may contain percent characters, which we don’t want to
pass on as format specifiers. Instead of escaping these characters too, we can
instead get rid of the call to format when a string has already been supplied.","Additionally, this fixes the reference to msgid, which should not have been bound here as a variable. For some reason, this didn’t trip an error for me (maybe the name crept in as a global variable?).",True,{}
djcb/mu,https://github.com/djcb/mu,1162,2017-12-05T08:57:38Z,2018-01-06T12:57:06Z,2018-01-06T12:57:06Z,CLOSED,False,3,5,1,https://github.com/eigengrau,mu4e: don’t use msgid as format template,1,[],https://github.com/djcb/mu/pull/1162,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1162#issuecomment-355745322,"The Message-Id header may contain percent characters, which we don’t want to
pass on as format specifiers. Instead of escaping these characters too, we can
instead get rid of the call to format when a string has already been supplied.","A very, very similar fix has gone in already. Anyway, thank you!",True,{}
djcb/mu,https://github.com/djcb/mu,1163,2017-12-05T22:56:06Z,2018-01-06T12:54:53Z,2018-01-06T12:55:01Z,MERGED,True,4,4,1,https://github.com/eqyiel,mu4e/mu4e-vars.el: replace references to mu4e-message-get-field,1,[],https://github.com/djcb/mu/pull/1163,https://github.com/eqyiel,1,https://github.com/djcb/mu/pull/1163,This is just a tiny fix for doc strings that confused me when I was looking for the function mu4e-message-field.,This is just a tiny fix for doc strings that confused me when I was looking for the function mu4e-message-field.,True,{}
djcb/mu,https://github.com/djcb/mu,1163,2017-12-05T22:56:06Z,2018-01-06T12:54:53Z,2018-01-06T12:55:01Z,MERGED,True,4,4,1,https://github.com/eqyiel,mu4e/mu4e-vars.el: replace references to mu4e-message-get-field,1,[],https://github.com/djcb/mu/pull/1163,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1163#issuecomment-355745214,This is just a tiny fix for doc strings that confused me when I was looking for the function mu4e-message-field.,Merged -- thanks!,True,{'LAUGH': ['https://github.com/eqyiel']}
djcb/mu,https://github.com/djcb/mu,1169,2017-12-19T16:11:00Z,2017-12-19T17:48:31Z,2017-12-19T17:48:47Z,MERGED,True,1,1,1,https://github.com/jschwab,Bump version string to 1.0-alpha3,1,[],https://github.com/djcb/mu/pull/1169,https://github.com/jschwab,1,https://github.com/djcb/mu/pull/1169,The value in configure.ac is out of sync with the git tags.,The value in configure.ac is out of sync with the git tags.,True,{}
djcb/mu,https://github.com/djcb/mu,1169,2017-12-19T16:11:00Z,2017-12-19T17:48:31Z,2017-12-19T17:48:47Z,MERGED,True,1,1,1,https://github.com/jschwab,Bump version string to 1.0-alpha3,1,[],https://github.com/djcb/mu/pull/1169,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1169#issuecomment-352834745,The value in configure.ac is out of sync with the git tags.,"Ah yes, forgot to push that. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1176,2018-01-12T13:08:20Z,2018-04-24T11:58:04Z,2018-04-24T15:51:03Z,MERGED,True,2,2,1,https://github.com/tarsius,No longer use obsolete alias speedbar-with-attached-buffer,1,[],https://github.com/djcb/mu/pull/1176,https://github.com/tarsius,1,https://github.com/djcb/mu/pull/1176,"Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.","Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.",True,{}
djcb/mu,https://github.com/djcb/mu,1176,2018-01-12T13:08:20Z,2018-04-24T11:58:04Z,2018-04-24T15:51:03Z,MERGED,True,2,2,1,https://github.com/tarsius,No longer use obsolete alias speedbar-with-attached-buffer,1,[],https://github.com/djcb/mu/pull/1176,https://github.com/tarsius,2,https://github.com/djcb/mu/pull/1176#issuecomment-357235540,"Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.","Didn't know you are still supporting 24.1.
Would you accept a patch that wrapped these forms with with-no-warnings instead?",True,{}
djcb/mu,https://github.com/djcb/mu,1176,2018-01-12T13:08:20Z,2018-04-24T11:58:04Z,2018-04-24T15:51:03Z,MERGED,True,2,2,1,https://github.com/tarsius,No longer use obsolete alias speedbar-with-attached-buffer,1,[],https://github.com/djcb/mu/pull/1176,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1176#issuecomment-359928162,"Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.",Let's look at this again after the mu 1.0 release. Perhaps then I should bump the emacs version requirement.,True,{}
djcb/mu,https://github.com/djcb/mu,1176,2018-01-12T13:08:20Z,2018-04-24T11:58:04Z,2018-04-24T15:51:03Z,MERGED,True,2,2,1,https://github.com/tarsius,No longer use obsolete alias speedbar-with-attached-buffer,1,[],https://github.com/djcb/mu/pull/1176,https://github.com/tarsius,4,https://github.com/djcb/mu/pull/1176#issuecomment-359933575,"Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.",Okay. Thanks for the heads up!,True,{}
djcb/mu,https://github.com/djcb/mu,1176,2018-01-12T13:08:20Z,2018-04-24T11:58:04Z,2018-04-24T15:51:03Z,MERGED,True,2,2,1,https://github.com/tarsius,No longer use obsolete alias speedbar-with-attached-buffer,1,[],https://github.com/djcb/mu/pull/1176,https://github.com/tarsius,5,https://github.com/djcb/mu/pull/1176#issuecomment-375145257,"Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.","Let's look at this again after the mu 1.0 release.

Could you please have another look now?

Perhaps then I should bump the emacs version requirement.

What's the plan here?",True,{}
djcb/mu,https://github.com/djcb/mu,1176,2018-01-12T13:08:20Z,2018-04-24T11:58:04Z,2018-04-24T15:51:03Z,MERGED,True,2,2,1,https://github.com/tarsius,No longer use obsolete alias speedbar-with-attached-buffer,1,[],https://github.com/djcb/mu/pull/1176,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1176#issuecomment-383904423,"Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1176,2018-01-12T13:08:20Z,2018-04-24T11:58:04Z,2018-04-24T15:51:03Z,MERGED,True,2,2,1,https://github.com/tarsius,No longer use obsolete alias speedbar-with-attached-buffer,1,[],https://github.com/djcb/mu/pull/1176,https://github.com/tarsius,7,https://github.com/djcb/mu/pull/1176#issuecomment-383983172,"Instead use the aliased variable dframe-with-attached-buffer.
The alias was established in Emacs 24.4.",Thanks to you too!,True,{}
djcb/mu,https://github.com/djcb/mu,1181,2018-01-25T03:51:19Z,2018-01-25T16:53:18Z,2018-01-25T16:53:23Z,MERGED,True,1,1,1,https://github.com/vsedach,Replace Bash-specific [[]] with POSIX sh [] in autogen.sh,1,[],https://github.com/djcb/mu/pull/1181,https://github.com/vsedach,1,https://github.com/djcb/mu/pull/1181,,,True,{}
djcb/mu,https://github.com/djcb/mu,1181,2018-01-25T03:51:19Z,2018-01-25T16:53:18Z,2018-01-25T16:53:23Z,MERGED,True,1,1,1,https://github.com/vsedach,Replace Bash-specific [[]] with POSIX sh [] in autogen.sh,1,[],https://github.com/djcb/mu/pull/1181,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1181#issuecomment-360528353,,Merged -- thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,1190,2018-02-09T04:40:19Z,2018-02-09T20:52:57Z,2018-02-09T20:53:08Z,MERGED,True,6,0,1,https://github.com/jwhitbeck,mu4e: ensure sent dir is created with proper maildir structure,1,[],https://github.com/djcb/mu/pull/1190,https://github.com/jwhitbeck,1,https://github.com/djcb/mu/pull/1190,"offlineimap will only sync directories that have 'cur', 'tmp', and
'new' sub-directories. Currently, mu4e can end up in a state where the
sent folder only has the 'cur' directory and is therefore not synced.
Upon saving a sent email, emacs' write-file will prompt to create
parent directories if the sent maildir does not already exist. This
results in the following directory structure:
<mu4e-maildir>/<sent>/cur/<email>
Note that the 'tmp' and 'new' directories are missing. This commit
ensures that they are always created.","offlineimap will only sync directories that have 'cur', 'tmp', and
'new' sub-directories. Currently, mu4e can end up in a state where the
sent folder only has the 'cur' directory and is therefore not synced.
Upon saving a sent email, emacs' write-file will prompt to create
parent directories if the sent maildir does not already exist. This
results in the following directory structure:
<mu4e-maildir>/<sent>/cur/<email>
Note that the 'tmp' and 'new' directories are missing. This commit
ensures that they are always created.",True,{}
djcb/mu,https://github.com/djcb/mu,1190,2018-02-09T04:40:19Z,2018-02-09T20:52:57Z,2018-02-09T20:53:08Z,MERGED,True,6,0,1,https://github.com/jwhitbeck,mu4e: ensure sent dir is created with proper maildir structure,1,[],https://github.com/djcb/mu/pull/1190,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1190#issuecomment-364563067,"offlineimap will only sync directories that have 'cur', 'tmp', and
'new' sub-directories. Currently, mu4e can end up in a state where the
sent folder only has the 'cur' directory and is therefore not synced.
Upon saving a sent email, emacs' write-file will prompt to create
parent directories if the sent maildir does not already exist. This
results in the following directory structure:
<mu4e-maildir>/<sent>/cur/<email>
Note that the 'tmp' and 'new' directories are missing. This commit
ensures that they are always created.","Looks good, merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1198,2018-02-19T12:21:41Z,2018-04-24T11:43:12Z,2018-04-24T11:43:22Z,MERGED,True,3,2,1,https://github.com/c-nixon,Only require html2text if it will be used,1,[],https://github.com/djcb/mu/pull/1198,https://github.com/c-nixon,1,https://github.com/djcb/mu/pull/1198,"html2text is deprecated in the emacs pretest, by unconditionally
importing it mu4e causes a mildly irritating yes/no prompt to appear
during startup.
This change ensures that html2text is not loaded unless the emacs
running is a version that does not have 'shr-insert-document","html2text is deprecated in the emacs pretest, by unconditionally
importing it mu4e causes a mildly irritating yes/no prompt to appear
during startup.
This change ensures that html2text is not loaded unless the emacs
running is a version that does not have 'shr-insert-document",True,{}
djcb/mu,https://github.com/djcb/mu,1198,2018-02-19T12:21:41Z,2018-04-24T11:43:12Z,2018-04-24T11:43:22Z,MERGED,True,3,2,1,https://github.com/c-nixon,Only require html2text if it will be used,1,[],https://github.com/djcb/mu/pull/1198,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1198#issuecomment-383900878,"html2text is deprecated in the emacs pretest, by unconditionally
importing it mu4e causes a mildly irritating yes/no prompt to appear
during startup.
This change ensures that html2text is not loaded unless the emacs
running is a version that does not have 'shr-insert-document","Looks good, merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1204,2018-03-10T20:12:33Z,2018-03-11T08:14:22Z,2018-03-11T08:14:30Z,MERGED,True,68,68,17,https://github.com/ian-kelling,doc: man reference fixes,2,[],https://github.com/djcb/mu/pull/1204,https://github.com/ian-kelling,1,https://github.com/djcb/mu/pull/1204,,,True,{}
djcb/mu,https://github.com/djcb/mu,1204,2018-03-10T20:12:33Z,2018-03-11T08:14:22Z,2018-03-11T08:14:30Z,MERGED,True,68,68,17,https://github.com/ian-kelling,doc: man reference fixes,2,[],https://github.com/djcb/mu/pull/1204,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1204#issuecomment-372097465,,"Nice, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1207,2018-03-18T01:55:17Z,2018-03-18T07:22:17Z,2018-03-18T07:22:29Z,MERGED,True,1,1,1,https://github.com/eklitzke,Fix a typo in the mu-query man page,1,[],https://github.com/djcb/mu/pull/1207,https://github.com/eklitzke,1,https://github.com/djcb/mu/pull/1207,,,True,{}
djcb/mu,https://github.com/djcb/mu,1207,2018-03-18T01:55:17Z,2018-03-18T07:22:17Z,2018-03-18T07:22:29Z,MERGED,True,1,1,1,https://github.com/eklitzke,Fix a typo in the mu-query man page,1,[],https://github.com/djcb/mu/pull/1207,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1207#issuecomment-373977992,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1208,2018-03-18T05:34:24Z,2018-03-18T07:21:06Z,2018-03-18T07:21:15Z,MERGED,True,2,2,1,https://github.com/eklitzke,Fix display of bugs link in mu4e-about.org,1,[],https://github.com/djcb/mu/pull/1208,https://github.com/eklitzke,1,https://github.com/djcb/mu/pull/1208,It appears that these need to be on the same line for Emacs to render the link correctly.,It appears that these need to be on the same line for Emacs to render the link correctly.,True,{}
djcb/mu,https://github.com/djcb/mu,1208,2018-03-18T05:34:24Z,2018-03-18T07:21:06Z,2018-03-18T07:21:15Z,MERGED,True,2,2,1,https://github.com/eklitzke,Fix display of bugs link in mu4e-about.org,1,[],https://github.com/djcb/mu/pull/1208,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1208#issuecomment-373977925,It appears that these need to be on the same line for Emacs to render the link correctly.,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1211,2018-03-22T11:45:38Z,2018-03-25T19:02:18Z,2018-03-25T19:02:27Z,MERGED,True,4,8,3,https://github.com/egli,Use automake support for texi to generate version info in the manual,1,[],https://github.com/djcb/mu/pull/1211,https://github.com/egli,1,https://github.com/djcb/mu/pull/1211,"Automake contains some support for automagically adding version information to a texi manual (see
https://www.gnu.org/software/automake/manual/automake.html#Texinfo).

If the .texi file @includes version.texi, then that file will be automatically generated

This patch gets rid of the texi.texi.in and instead uses the standard method to inject version information in the manual.
This fixes https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=870634","Automake contains some support for automagically adding version information to a texi manual (see
https://www.gnu.org/software/automake/manual/automake.html#Texinfo).

If the .texi file @includes version.texi, then that file will be automatically generated

This patch gets rid of the texi.texi.in and instead uses the standard method to inject version information in the manual.
This fixes https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=870634",True,{}
djcb/mu,https://github.com/djcb/mu,1211,2018-03-22T11:45:38Z,2018-03-25T19:02:18Z,2018-03-25T19:02:27Z,MERGED,True,4,8,3,https://github.com/egli,Use automake support for texi to generate version info in the manual,1,[],https://github.com/djcb/mu/pull/1211,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1211#issuecomment-375994623,"Automake contains some support for automagically adding version information to a texi manual (see
https://www.gnu.org/software/automake/manual/automake.html#Texinfo).

If the .texi file @includes version.texi, then that file will be automatically generated

This patch gets rid of the texi.texi.in and instead uses the standard method to inject version information in the manual.
This fixes https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=870634",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1212,2018-03-24T12:23:14Z,2018-03-25T19:03:52Z,2018-03-25T19:57:26Z,MERGED,True,19,19,1,https://github.com/tarleb,mu4e.texi: Fix and update external links,1,[],https://github.com/djcb/mu/pull/1212,https://github.com/tarleb,1,https://github.com/djcb/mu/pull/1212,"External links are updated to point to the most informative pages. Pure
http links are upgraded to https were possible.
The only broken link is the one for org-contacts. I wasn't able to find a current page for that project.","External links are updated to point to the most informative pages. Pure
http links are upgraded to https were possible.
The only broken link is the one for org-contacts. I wasn't able to find a current page for that project.",True,{}
djcb/mu,https://github.com/djcb/mu,1212,2018-03-24T12:23:14Z,2018-03-25T19:03:52Z,2018-03-25T19:57:26Z,MERGED,True,19,19,1,https://github.com/tarleb,mu4e.texi: Fix and update external links,1,[],https://github.com/djcb/mu/pull/1212,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1212#issuecomment-375994722,"External links are updated to point to the most informative pages. Pure
http links are upgraded to https were possible.
The only broken link is the one for org-contacts. I wasn't able to find a current page for that project.",Merged. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1221,2018-04-03T19:00:02Z,2018-04-24T12:01:22Z,2018-04-24T12:01:34Z,MERGED,True,7,4,1,https://github.com/cacology,updated fontify-signature for RFC 1153 compliant digest messages,1,[],https://github.com/djcb/mu/pull/1221,https://github.com/cacology,1,https://github.com/djcb/mu/pull/1221,"mu4e~fontify-signature had been coloring the first signature of a digest message and all the subsequent messages after the first signature.  I altered the code so it colors each signature and stops at the RFC 1153 border of 30 (or more) hyphens.
I experimented with another version that stopped coloring if it detected a quoted message, new headers, or another signature, but I think in all these cases the composer of the message has put their signature in front of the old content in error.  Since I can't predict what sorts of things people would want to put in their signature and RFC 3676 doesn't specify any way to signal the end of a signature, I stuck with the RFC 1153 definition.
Respectfully submitted,
-James","mu4e~fontify-signature had been coloring the first signature of a digest message and all the subsequent messages after the first signature.  I altered the code so it colors each signature and stops at the RFC 1153 border of 30 (or more) hyphens.
I experimented with another version that stopped coloring if it detected a quoted message, new headers, or another signature, but I think in all these cases the composer of the message has put their signature in front of the old content in error.  Since I can't predict what sorts of things people would want to put in their signature and RFC 3676 doesn't specify any way to signal the end of a signature, I stuck with the RFC 1153 definition.
Respectfully submitted,
-James",True,{}
djcb/mu,https://github.com/djcb/mu,1221,2018-04-03T19:00:02Z,2018-04-24T12:01:22Z,2018-04-24T12:01:34Z,MERGED,True,7,4,1,https://github.com/cacology,updated fontify-signature for RFC 1153 compliant digest messages,1,[],https://github.com/djcb/mu/pull/1221,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1221#issuecomment-383905226,"mu4e~fontify-signature had been coloring the first signature of a digest message and all the subsequent messages after the first signature.  I altered the code so it colors each signature and stops at the RFC 1153 border of 30 (or more) hyphens.
I experimented with another version that stopped coloring if it detected a quoted message, new headers, or another signature, but I think in all these cases the composer of the message has put their signature in front of the old content in error.  Since I can't predict what sorts of things people would want to put in their signature and RFC 3676 doesn't specify any way to signal the end of a signature, I stuck with the RFC 1153 definition.
Respectfully submitted,
-James",Looks good; merged. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/mhcerri,1,https://github.com/djcb/mu/pull/1228,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.",True,{'THUMBS_UP': ['https://github.com/stardiviner']}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/wavexx,2,https://github.com/djcb/mu/pull/1228#issuecomment-383867705,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.",This is awesome! The original mu thread rendering is indeed quite lacking.,True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1228#issuecomment-383915482,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","Oh, looks good, definitely an improvement. In fact, I'd be happy if you remove ""classic"" style. Oh, and can you update the ""Header view"" overview in the manual? Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/mhcerri,4,https://github.com/djcb/mu/pull/1228#issuecomment-384133961,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","Thanks for the feedback, @djcb. I have updated the following:

Removed the ""classic"" style and renamed the prefix variables to match the pattern used for the old ones (I didn't reuse the same names though).
Replaced the lexical binding used for the state with a local buffer variable. I haven't found any concurrency issues with the previous approach, but that should be safer.
Updated the header view example in the manual with the new prefix style.
Changed the default prefix for orphan messages to empty. That should be explicit already by the indentation level.",True,{'HEART': ['https://github.com/andersjohansson']}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/stardiviner,5,https://github.com/djcb/mu/pull/1228#issuecomment-384169844,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.",Finally improved this thread prefix. This is really great!!,True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1228#issuecomment-384177823,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/wavexx,7,https://github.com/djcb/mu/pull/1228#issuecomment-384267570,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","After using this for a day, I think there's one small improvement required:
If I have a single independent message, followed by a subthread (which has been cut by date:, for example), the result is the same as complete thread:
Lone Message
├>Re: Random other subthread
└>Re: Random other subthread
Complete thread
├>Re: Complete thread
└>Re: Complete thread

It would be nice to have a mu4e-headers-thread-unrelated-child-prefix or similar, so we can do:
Lone Message
┬>Re: Random other subthread
└>Re: Random other subthread
Complete thread
├>Re: Complete thread
└>Re: Complete thread",True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/mhcerri,8,https://github.com/djcb/mu/pull/1228#issuecomment-384481272,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","Good point. I agree.
I simply added the option of adding a mark in front of the message when its parent is empty, but I left the default value empty since I considered the identation level would make that explicit.
However, considering your example, that might be very confusing indeed. The alternative you proposed is actually how mutt handles orphan messages and it's a very good solution.
From the configuration perspective, it will require two prefixea though, since we will have to specify one additional prefix for orphan messages that don't have siblings (something like ""-->"").",True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/wavexx,9,https://github.com/djcb/mu/pull/1228#issuecomment-384585774,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","On Thu, Apr 26 2018, Marcelo Cerri wrote:
 However, considering your example, that might be very confusing
 indeed. The alternative you proposed is actually how mutt handles
 orphan messages and it's a very good solution.
If you toggle mu4e-headers-include-related to t, this happens much more
frequently.
 From the configuration perspective, it will require two prefixea
 though, since we will have to specify one additional prefix for orphan
 messages that don't have siblings (something like ""-->"").
This would be nice for completeness, but AFAIK mutt doesn't use anything
special in this case.",True,{}
djcb/mu,https://github.com/djcb/mu,1228,2018-04-23T04:24:51Z,2018-04-25T06:45:15Z,2018-05-03T02:39:51Z,MERGED,True,125,37,5,https://github.com/mhcerri,Mu4e improved thread prefix,3,[],https://github.com/djcb/mu/pull/1228,https://github.com/mhcerri,10,https://github.com/djcb/mu/pull/1228#issuecomment-386177830,"Hi!
This PR adds support for thread trees similar to mutt. The new style should look like that:
Original mail subject
└>
 └>
  ├>
  │├>
  │└>
  │ └>
  └>

In opposition to the current style:
+ Original mail subject
 + 
  + 
   + 
    \ 
    + 
     \ 
   | 

I added the config mu4e-headers-include-related to make it possible to switch between the new and old styles. I also added a couple of prefix configuration, in a similar way the current code does, to allow further customization.
Please feel free to proposed any changes.","Hi, @wavexx. Can you test the PR #1236 to check if that makes sense to you?",True,{}
djcb/mu,https://github.com/djcb/mu,1231,2018-04-24T05:21:33Z,2018-04-25T12:50:58Z,2018-06-11T21:56:49Z,CLOSED,False,14,11,2,https://github.com/tangxinfa,fix: image not show the first time we view a mail,1,[],https://github.com/djcb/mu/pull/1231,https://github.com/tangxinfa,1,https://github.com/djcb/mu/pull/1231,"Prepare settings:
   setq mu4e-view-show-images t
   setq mu4e-view-auto-mark-as-read t

We receive a mail with image attachments, when we view it, mu4e will send a view command to mu, mu will response a view msg with image attachments(:temp not nil), then mu4e send a move command to mu for mark as read, mu responsed with a update msg without attachments(:temp is nil), mu4e display it with mu4e-view, then image lost.","Prepare settings:
   setq mu4e-view-show-images t
   setq mu4e-view-auto-mark-as-read t

We receive a mail with image attachments, when we view it, mu4e will send a view command to mu, mu will response a view msg with image attachments(:temp not nil), then mu4e send a move command to mu for mark as read, mu responsed with a update msg without attachments(:temp is nil), mu4e display it with mu4e-view, then image lost.",True,{}
djcb/mu,https://github.com/djcb/mu,1231,2018-04-24T05:21:33Z,2018-04-25T12:50:58Z,2018-06-11T21:56:49Z,CLOSED,False,14,11,2,https://github.com/tangxinfa,fix: image not show the first time we view a mail,1,[],https://github.com/djcb/mu/pull/1231,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1231#issuecomment-384275049,"Prepare settings:
   setq mu4e-view-show-images t
   setq mu4e-view-auto-mark-as-read t

We receive a mail with image attachments, when we view it, mu4e will send a view command to mu, mu will response a view msg with image attachments(:temp not nil), then mu4e send a move command to mu for mark as read, mu responsed with a update msg without attachments(:temp is nil), mu4e display it with mu4e-view, then image lost.","Oh, great catch, that's been a longstanding problem, and you have found the root cause!  I've fixed it in a slightly different way, but many thanks for hunting this down!",True,{}
djcb/mu,https://github.com/djcb/mu,1231,2018-04-24T05:21:33Z,2018-04-25T12:50:58Z,2018-06-11T21:56:49Z,CLOSED,False,14,11,2,https://github.com/tangxinfa,fix: image not show the first time we view a mail,1,[],https://github.com/djcb/mu/pull/1231,https://github.com/tangxinfa,3,https://github.com/djcb/mu/pull/1231#issuecomment-384490812,"Prepare settings:
   setq mu4e-view-show-images t
   setq mu4e-view-auto-mark-as-read t

We receive a mail with image attachments, when we view it, mu4e will send a view command to mu, mu will response a view msg with image attachments(:temp not nil), then mu4e send a move command to mu for mark as read, mu responsed with a update msg without attachments(:temp is nil), mu4e display it with mu4e-view, then image lost.","thanks, it works in the latest version!",True,{}
djcb/mu,https://github.com/djcb/mu,1231,2018-04-24T05:21:33Z,2018-04-25T12:50:58Z,2018-06-11T21:56:49Z,CLOSED,False,14,11,2,https://github.com/tangxinfa,fix: image not show the first time we view a mail,1,[],https://github.com/djcb/mu/pull/1231,https://github.com/joostkremers,4,https://github.com/djcb/mu/pull/1231#issuecomment-396400331,"Prepare settings:
   setq mu4e-view-show-images t
   setq mu4e-view-auto-mark-as-read t

We receive a mail with image attachments, when we view it, mu4e will send a view command to mu, mu will response a view msg with image attachments(:temp not nil), then mu4e send a move command to mu for mark as read, mu responsed with a update msg without attachments(:temp is nil), mu4e display it with mu4e-view, then image lost.","Great, thanks! It works!",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/mhcerri,1,https://github.com/djcb/mu/pull/1236,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/wavexx,2,https://github.com/djcb/mu/pull/1236#issuecomment-386247990,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","Definitely much better! This always makes the separate threads obvious.
I have an hard time triggering a single orphan message though.
Some things I noticed:

In the above example, I guess the thread rendering is done before duplicates are removed by mu4e-headers-toggle-skip-duplicates, right? If I include the duplicate messages, the rendering looks right:

Also, there is probably a limit of a single mu4e-headers-thread-connection-prefix. On a thread with multiple replies, only the right-most connection seems to be rendered:

I mean, these are just minor quibbles I'm pointing out in case if weren't aware. The thread rendering is still a massive improvement over the original mu4e!",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/mhcerri,3,https://github.com/djcb/mu/pull/1236#issuecomment-386266263,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","Hi, @wavexx.
Thanks for the feedback. I wasn't aware of those issues.
Regarding the first one, I do agree it's probably caused by the moment when the duplicates are removed by mu. I will take a closer look at it later.
For the later issue, I believe that's a bug on the code I added to construct the visual tree. I was assuming that a message with a missing parent couldn't appear in the middle of a thread. I included one additional commit to the PR, can you check how your thread looks like with that change?
Thank you.",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/wavexx,4,https://github.com/djcb/mu/pull/1236#issuecomment-386278156,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","Before I give it a shot, do you have by chance a small maildir with a
sigle orphan thread?

I tried to make one, but couldn't.",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/mhcerri,5,https://github.com/djcb/mu/pull/1236#issuecomment-386289288,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","I couldn't make one either. At least not an orphan message that would show up with the single-orphan prefix. Maybe mu doesn't level indent this kind of message.
When I manually delete a parent message that only has a single child, that single child appears as a regular message like that:
Re: Original subject

Since it doesn't have a prefix, that means its level is zero.
And only when I respond to the parent message I get the messages indented at level 1, resulting in:
┬>Re: Original subject
└>

I also searched my mailing list maildirs (where I have most of my broken threads) and that seems to confirm that.
Maybe we can drop the single-orphan prefix.",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/wavexx,6,https://github.com/djcb/mu/pull/1236#issuecomment-386297819,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","Looks much better, but still not completely connected. To be honest, this is a thread from a ticketing system, so the references might be broken, resulting in that mess.
Checking another mailing list, it seems that the rendering of multiple connecting lines looks fine there:",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/wavexx,7,https://github.com/djcb/mu/pull/1236#issuecomment-386300430,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","Uhm, looking again at that first thread (the not-completely-connected), it looks like that there are two kinds of joins missing:

a single ""|-"" connected to a subsequent ""┬>"", or a single ""-"". These look like are possible due to the shuffling caused by the date sorting.",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/djcb,8,https://github.com/djcb/mu/pull/1236#issuecomment-388341622,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/wavexx,9,https://github.com/djcb/mu/pull/1236#issuecomment-388365735,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","On Fri, May 11 2018, Dirk-Jan C. Binnema wrote:
 Merged -- thanks!
I think the single-orphan prefix should probably removed, as it's not
used.

I was checking with Gnus the other day, where threads like this are
called ""false-root"".",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/sdycjsj,10,https://github.com/djcb/mu/pull/1236#issuecomment-449256936,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","In the above example, I guess the thread rendering is done before duplicates are removed by mu4e-headers-toggle-skip-duplicates, right? If I include the duplicate messages, the rendering looks right:


Hi, @wavexx
Just want to make sure. Is the first issue, i.e., threading before removing duplicated, fixed?
I am using a version built from a git clone of the latest repo of mu, with a gmail account.
When looking at the ""All Mail"" folder, with mu4e-headers-skip-duplicates set to t, there are disconnected entries and open ends in some of the threads.
If I press V to toggle this option to nil, all threads are complete at the price of showing duplicated messages.
I guess this is similar to the the first issue you mentioned, but since it was several months ago, I am not sure whether I am experiencing the same issue.
Thanks",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/wavexx,11,https://github.com/djcb/mu/pull/1236#issuecomment-449472236,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","On Fri, Dec 21 2018, sdycjsj wrote:
 Just want to make sure. Is the first issue, i.e., threading before
 removing duplicated, fixed? I am using a version built from a git
 clone of the latest repo of mu, with a gmail account. When looking at
 the ""All Mail"" folder, with mu4e-headers-skip-duplicates set to t,
 there are disconnected entries and open ends in some of the threads.
 If I press V to toggle this option to nil, all threads are complete at
 the price of showing duplicated messages. I guess this is similar to
 the the first issue you mentioned, but since it was several months
 ago, I am not sure whether I am experiencing the same issue.
It's indeed the same issue, and, no, the issue has never been fixed so
far.",True,{}
djcb/mu,https://github.com/djcb/mu,1236,2018-05-03T02:38:59Z,2018-05-11T11:50:02Z,2018-12-22T01:52:23Z,MERGED,True,25,33,1,https://github.com/mhcerri,Mu4e orphan thread prefix,3,[],https://github.com/djcb/mu/pull/1236,https://github.com/sdycjsj,12,https://github.com/djcb/mu/pull/1236#issuecomment-449536618,"Use special prefixes for orphan threads as suggested by @wavexx. It should look like:
Unrelated message
─>Single orphan message
┬>Orphan messsage
├>Second message on orphan thread
└>Last message on orphan thread","It's indeed the same issue, and, no, the issue has never been fixed so far.

Thank you for the clarification.
I will just turn off the thread view for gmail.",True,{}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/Ambrevar,1,https://github.com/djcb/mu/pull/1240,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.",True,"{'THUMBS_UP': ['https://github.com/stardiviner', 'https://github.com/gorrog', 'https://github.com/stsquad', 'https://github.com/emacsomancer', 'https://github.com/noctuid']}"
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/Ambrevar,2,https://github.com/djcb/mu/pull/1240#issuecomment-389249873,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.",,True,{}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/emacsomancer,3,https://github.com/djcb/mu/pull/1240#issuecomment-391177381,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","This is really nice, @Ambrevar .
In addition to your current planned features, one really nice feature would be the ability to hide/collapse blocks of >-quoted text; especially at end of a message (and/or before a signature). [maybe also the ability to hide signatures, at least one's own].",True,{}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/Ambrevar,4,https://github.com/djcb/mu/pull/1240#issuecomment-391222182,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","@emacsomancer: I forgot to mention it but I have already started working on such a feature!
It will work just like Gmail's ....",True,"{'THUMBS_UP': ['https://github.com/emacsomancer', 'https://github.com/sachdevaprash']}"
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/Ambrevar,5,https://github.com/djcb/mu/pull/1240#issuecomment-391222284,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","@djcb: What's your opinion on this?
I'll finish it very soon.",True,{}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1240#issuecomment-391642862,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","Nice work!
I think this should be an alternative to the current way, not a replacement (at least for the foreseeable future). So, for now e.g. in the headers-view, C-RET  would activate the conversation-view while RET would just show the message as we do now.
mu4e-conversation-print-message is a simpler version of what we do in mu4e-view, so people might miss the all those features. We'd probably want to have only one implementation. Something to look into is mu4e-view-use-gnus, which I recently added; when enabled, it uses gnus for the message display, and makes mu4e-view much simpler.
Apart from that, perhaps you can ship conversation mode as an external thing for now? That gives us some time to test and vet various scenarios, and then decide if we can integrate it with main mu4e. Make sure to announce it on the mu mailing-list, I bet many people want to play with this!",True,{}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/emacsomancer,7,https://github.com/djcb/mu/pull/1240#issuecomment-391773424,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.",@Ambrevar Great work!  One bugreport: The gmail-style quote trimming doesn't seem to apply to sender messages but only to others' messages.,True,{}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/Ambrevar,8,https://github.com/djcb/mu/pull/1240#issuecomment-391774268,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","Thanks for the report!
Well, actually the quote trimming is unfinished and probably completely
broken :)

I'll finish the implementation soon.",True,{}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/Ambrevar,9,https://github.com/djcb/mu/pull/1240#issuecomment-395590853,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","Alright, I've published a much more polished version there: https://notabug.org/Ambrevar/mu4e-conversation.
New features:

Tree view in Org-mode!
Initial bindings (next message, view toggle).
Fix header display.
Handler overrides are now done with advices, which is a bit cleaner but still not perfect.

Planned features:

Message folding in linear view.
Quote trimming.
URL display + bindings. (I'll look into mu4e-view-use-gnus.)
More bindings, including the very needed ""reply"".

Dreamed features:

Colour quotes using the colour of the original author.

Feedback is very welcome!
(Please report issues on the new repository.)",True,{'THUMBS_UP': ['https://github.com/sachdevaprash']}
djcb/mu,https://github.com/djcb/mu,1240,2018-05-15T17:31:06Z,2018-06-15T09:57:00Z,2018-06-15T09:57:00Z,CLOSED,False,251,0,2,https://github.com/Ambrevar,mu4e-conversation: Init,6,[],https://github.com/djcb/mu/pull/1240,https://github.com/Ambrevar,10,https://github.com/djcb/mu/pull/1240#issuecomment-397573626,"This is an early prototype.
Call mu4e-conversation on a message from the headers buffer (the more complicated the thread, the nicer the preview!).
Features:

Display all messages from a thread in a single buffer.
Each message is colored according to the sender.
The user's own messages are in a separate color.
If the thread has only one message, fallback to the regular view.

Planned features:

Add support for images and attachments.
Make a dedicated mode with bindings to browse the messages, fold them, etc.
Mark messages as read as they appear.

Bugs:

Current implementation works by setting some handlers to temporary functions.  It's rather brittle since an error in the process will leave the handlers set to their temporary value, which breaks mu4e.
When opening a conversation, the headers buffer is emptied.  I don't know why.

Comments are welcome and help would be very much needed for those two bugs.
This is still an early draft and the code might not be as clear as it should be.  Don't hesitate to ask for clarifications.","Quote trimming is now implemented.  @djcb: you might like the implementation.
Bindings are much more complete now.  URL display mostly work.
I'm now hosting the project on https://gitlab.com/ambrevar/mu4e-conversation.
Also see the annoucement on Reddit: https://www.reddit.com/r/emacs/comments/8qryri/mu4econversation_single_buffer_fullthread_display/.
Enjoy!",True,{'HOORAY': ['https://github.com/noctuid']}
djcb/mu,https://github.com/djcb/mu,1241,2018-05-18T20:53:45Z,2018-05-19T08:19:18Z,2018-05-19T08:19:20Z,MERGED,True,1,1,1,https://github.com/jabranham,Fix call to make-obsolete-variable,1,[],https://github.com/djcb/mu/pull/1241,https://github.com/jabranham,1,https://github.com/djcb/mu/pull/1241,Missing the quote makes nil obsolete instead of mu4e-compose-crypto-reply-policy.,Missing the quote makes nil obsolete instead of mu4e-compose-crypto-reply-policy.,True,{}
djcb/mu,https://github.com/djcb/mu,1241,2018-05-18T20:53:45Z,2018-05-19T08:19:18Z,2018-05-19T08:19:20Z,MERGED,True,1,1,1,https://github.com/jabranham,Fix call to make-obsolete-variable,1,[],https://github.com/djcb/mu/pull/1241,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1241#issuecomment-390388869,Missing the quote makes nil obsolete instead of mu4e-compose-crypto-reply-policy.,"Oh, good catch, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/1242,A couple of tweaks to make patch application better.,A couple of tweaks to make patch application better.,True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1242#issuecomment-390871202,A couple of tweaks to make patch application better.,"Alex Bennée <notifications@github.com> writes:
 A couple of tweaks to make patch application better.
Seems your completing-read is not sorting directories, perhaps you can
use something like this:

    (completing-read ""Target directory: "" (lambda (&rest args)
                                            (sort (apply 'read-file-name-internal args) 'string-lessp))
                     #'file-directory-p
                     nil nil 'mu4e--patch-directory-history)
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/stsquad,3,https://github.com/djcb/mu/pull/1242#issuecomment-390919811,A couple of tweaks to make patch application better.,@thierryvolpiatto: well the idea is to let completing read do it's own thing - in my case it uses ivy. However with your suggestion I loose the flexibility of ivy selection.,True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/thierryvolpiatto,4,https://github.com/djcb/mu/pull/1242#issuecomment-390921272,A couple of tweaks to make patch application better.,Note also that you can only access directories under default-directory with such a completing-read.,True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/stsquad,5,https://github.com/djcb/mu/pull/1242#issuecomment-390931270,A couple of tweaks to make patch application better.,@thierryvolpiatto I just tried with emacs -q and I could certainly read a directory above where I was (although it came out as ../../../foo). Maybe it would be enough to add a file-truename in-front?,True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/thierryvolpiatto,6,https://github.com/djcb/mu/pull/1242#issuecomment-390964106,A couple of tweaks to make patch application better.,"Alex Bennée <notifications@github.com> writes:
 @thierryvolpiatto I just tried with emacs -q and I could certainly
 read a directory above where I was
It doesn't with helm unless specifying a dynamic handler for your fn, but I just
fixed it for this special case and it works without this requirement if
you specify in your function you are completing filenames by let-binding
minibuffer-completing-file-name.
 (although it came out as ../../../foo).
Not here with helm, it is working fine as long you enter in minibuffer
the full path e.g. ~/
 Maybe it would be enough to add a file-truename in-front?
Don't know.


PS: I am interested in this because I would like to fix some corner
cases like this in helm-mode, but I have to say that using
completing-read+read-file-name-internal [1] is not the way to go, really,
you have better time to use read-directory-name which provide a much
enhanced completion even if you lack a history argument.

[1] completing-read+read-file-name-internal is what ffap use for
find-file-at-point and it is a really bad implementation.
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/stsquad,7,https://github.com/djcb/mu/pull/1242#issuecomment-391024679,A couple of tweaks to make patch application better.,"@thierryvolpiatto I would have used read-directory-name but that loses the ability have task specific history. But yes the idea of this patch was to allow ido, ivy and helm all hook into the completing read function rather than forcing idio on everyone.",True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/thierryvolpiatto,8,https://github.com/djcb/mu/pull/1242#issuecomment-391036884,A couple of tweaks to make patch application better.,"Alex Bennée <notifications@github.com> writes:
 @thierryvolpiatto I would have used read-directory-name but that loses
 the ability have task specific history.
Yes I understood this.
 But yes the idea of this patch was to allow ido, ivy and helm all hook
 into the completing read function rather than forcing idio on
 everyone.
Yes, that's nice, thanks, for helm I have commited a change that allow
to use your completing-read if you let-bind
minibuffer-completing-file-name around it.

For ido, I am not sure it is working with read-file-name-internal as
COLLECTION argument (or any function):

(ido-completing-read ""test: "" 'read-file-name-internal #'file-directory-p)
=>
Debugger entered--Lisp error: (wrong-type-argument sequencep read-file-name-internal)
  reverse(read-file-name-internal)
  ido-set-matches()
  ido-read-internal(list ""test: "" nil nil nil nil)
  ido-completing-read(""test: "" read-file-name-internal file-directory-p)


Thanks.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/stsquad,9,https://github.com/djcb/mu/pull/1242#issuecomment-391633585,A couple of tweaks to make patch application better.,"@djcb thanks for the review, I'll fold those in. I still need to find a reasonable way to run through the various completion options to check they all behave sanely.",True,{}
djcb/mu,https://github.com/djcb/mu,1242,2018-05-21T17:58:28Z,2018-05-29T08:14:44Z,2018-05-29T13:52:11Z,MERGED,True,32,23,1,https://github.com/stsquad,Patch application updates,2,[],https://github.com/djcb/mu/pull/1242,https://github.com/djcb,10,https://github.com/djcb/mu/pull/1242#issuecomment-392691364,A couple of tweaks to make patch application better.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1243,2018-05-23T12:51:30Z,2018-06-12T06:23:15Z,2018-06-12T06:23:23Z,MERGED,True,1,1,1,https://github.com/avar,"view: render URLs as ""<url> [%d]"" not ""<url>[%d]""",1,['needinfo'],https://github.com/djcb/mu/pull/1243,https://github.com/avar,1,https://github.com/djcb/mu/pull/1243,"When we render URLs like https://gnu.org/[1] right-clicking on them in
e.g. GNOME Terminal will also copy the ""[1]"" as well as the URL,
inserting whitespace between the two avoids this.
I know about ""g"" (mu4e-view-go-to-url), but sometimes I want to open a
URL in a different browser, or copy it into a non-Emacs program. This
makes that easier. I think this improves the UI at a very trivial cost
to users that don't care about this use-case.
I could make this configurable, but unless someone vehemently objects
to this I don't see the point of not just making it the default.","When we render URLs like https://gnu.org/[1] right-clicking on them in
e.g. GNOME Terminal will also copy the ""[1]"" as well as the URL,
inserting whitespace between the two avoids this.
I know about ""g"" (mu4e-view-go-to-url), but sometimes I want to open a
URL in a different browser, or copy it into a non-Emacs program. This
makes that easier. I think this improves the UI at a very trivial cost
to users that don't care about this use-case.
I could make this configurable, but unless someone vehemently objects
to this I don't see the point of not just making it the default.",True,{}
djcb/mu,https://github.com/djcb/mu,1243,2018-05-23T12:51:30Z,2018-06-12T06:23:15Z,2018-06-12T06:23:23Z,MERGED,True,1,1,1,https://github.com/avar,"view: render URLs as ""<url> [%d]"" not ""<url>[%d]""",1,['needinfo'],https://github.com/djcb/mu/pull/1243,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1243#issuecomment-391627038,"When we render URLs like https://gnu.org/[1] right-clicking on them in
e.g. GNOME Terminal will also copy the ""[1]"" as well as the URL,
inserting whitespace between the two avoids this.
I know about ""g"" (mu4e-view-go-to-url), but sometimes I want to open a
URL in a different browser, or copy it into a non-Emacs program. This
makes that easier. I think this improves the UI at a very trivial cost
to users that don't care about this use-case.
I could make this configurable, but unless someone vehemently objects
to this I don't see the point of not just making it the default.",I'd like to keep the [1] right next to the url... perhaps there's some zero-width Unicode char we can use so terminals will do the right thing?,True,{}
djcb/mu,https://github.com/djcb/mu,1243,2018-05-23T12:51:30Z,2018-06-12T06:23:15Z,2018-06-12T06:23:23Z,MERGED,True,1,1,1,https://github.com/avar,"view: render URLs as ""<url> [%d]"" not ""<url>[%d]""",1,['needinfo'],https://github.com/djcb/mu/pull/1243,https://github.com/avar,3,https://github.com/djcb/mu/pull/1243#issuecomment-395733426,"When we render URLs like https://gnu.org/[1] right-clicking on them in
e.g. GNOME Terminal will also copy the ""[1]"" as well as the URL,
inserting whitespace between the two avoids this.
I know about ""g"" (mu4e-view-go-to-url), but sometimes I want to open a
URL in a different browser, or copy it into a non-Emacs program. This
makes that easier. I think this improves the UI at a very trivial cost
to users that don't care about this use-case.
I could make this configurable, but unless someone vehemently objects
to this I don't see the point of not just making it the default.","@djcb : Late reply, sorry. Yeah that works, GitHub's diff viewer doesn't do a good job of showing it, but a git diff will show:
-               (propertize (format ""[%d]"" num)
+               (propertize (format ""<U+200B>[%d]"" num)

As noted in the updated commit message this works.",True,{}
djcb/mu,https://github.com/djcb/mu,1243,2018-05-23T12:51:30Z,2018-06-12T06:23:15Z,2018-06-12T06:23:23Z,MERGED,True,1,1,1,https://github.com/avar,"view: render URLs as ""<url> [%d]"" not ""<url>[%d]""",1,['needinfo'],https://github.com/djcb/mu/pull/1243,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1243#issuecomment-396361099,"When we render URLs like https://gnu.org/[1] right-clicking on them in
e.g. GNOME Terminal will also copy the ""[1]"" as well as the URL,
inserting whitespace between the two avoids this.
I know about ""g"" (mu4e-view-go-to-url), but sometimes I want to open a
URL in a different browser, or copy it into a non-Emacs program. This
makes that easier. I think this improves the UI at a very trivial cost
to users that don't care about this use-case.
I could make this configurable, but unless someone vehemently objects
to this I don't see the point of not just making it the default.","Oh, great, thanks! But could you make the <U+200B> explicit, so it's visible in the code (ie., \uxxxx) so it's clear when reading the code? Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1243,2018-05-23T12:51:30Z,2018-06-12T06:23:15Z,2018-06-12T06:23:23Z,MERGED,True,1,1,1,https://github.com/avar,"view: render URLs as ""<url> [%d]"" not ""<url>[%d]""",1,['needinfo'],https://github.com/djcb/mu/pull/1243,https://github.com/avar,5,https://github.com/djcb/mu/pull/1243#issuecomment-396370950,"When we render URLs like https://gnu.org/[1] right-clicking on them in
e.g. GNOME Terminal will also copy the ""[1]"" as well as the URL,
inserting whitespace between the two avoids this.
I know about ""g"" (mu4e-view-go-to-url), but sometimes I want to open a
URL in a different browser, or copy it into a non-Emacs program. This
makes that easier. I think this improves the UI at a very trivial cost
to users that don't care about this use-case.
I could make this configurable, but unless someone vehemently objects
to this I don't see the point of not just making it the default.","Makes sense, updated to use that.",True,{}
djcb/mu,https://github.com/djcb/mu,1243,2018-05-23T12:51:30Z,2018-06-12T06:23:15Z,2018-06-12T06:23:23Z,MERGED,True,1,1,1,https://github.com/avar,"view: render URLs as ""<url> [%d]"" not ""<url>[%d]""",1,['needinfo'],https://github.com/djcb/mu/pull/1243,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1243#issuecomment-396478854,"When we render URLs like https://gnu.org/[1] right-clicking on them in
e.g. GNOME Terminal will also copy the ""[1]"" as well as the URL,
inserting whitespace between the two avoids this.
I know about ""g"" (mu4e-view-go-to-url), but sometimes I want to open a
URL in a different browser, or copy it into a non-Emacs program. This
makes that easier. I think this improves the UI at a very trivial cost
to users that don't care about this use-case.
I could make this configurable, but unless someone vehemently objects
to this I don't see the point of not just making it the default.",Merged -- thank you!,True,{}
djcb/mu,https://github.com/djcb/mu,1246,2018-05-26T11:33:38Z,2020-02-26T23:24:08Z,2020-02-26T23:24:08Z,CLOSED,False,61,7,3,https://github.com/Profpatsch,Remove mail-header-separator newline on draft save,1,[],https://github.com/djcb/mu/pull/1246,https://github.com/Profpatsch,1,https://github.com/djcb/mu/pull/1246,"This is my take on #1244.
Somewhere in the middle I noticed that the problem most likely lies within message-mode instead, which introduces the separator and removes it as well on message-send.
This does solve the problem of #1244, but removes one line of whitespace on each draft save. 🙄
So it’s just a temporary fix at best and should probably go into message-mode.","This is my take on #1244.
Somewhere in the middle I noticed that the problem most likely lies within message-mode instead, which introduces the separator and removes it as well on message-send.
This does solve the problem of #1244, but removes one line of whitespace on each draft save. 🙄
So it’s just a temporary fix at best and should probably go into message-mode.",True,{}
djcb/mu,https://github.com/djcb/mu,1246,2018-05-26T11:33:38Z,2020-02-26T23:24:08Z,2020-02-26T23:24:08Z,CLOSED,False,61,7,3,https://github.com/Profpatsch,Remove mail-header-separator newline on draft save,1,[],https://github.com/djcb/mu/pull/1246,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1246#issuecomment-591696076,"This is my take on #1244.
Somewhere in the middle I noticed that the problem most likely lies within message-mode instead, which introduces the separator and removes it as well on message-send.
This does solve the problem of #1244, but removes one line of whitespace on each draft save. 🙄
So it’s just a temporary fix at best and should probably go into message-mode.","As discussed in #1244, I don't think this is needed. Still, thank you for the effort!",True,{}
djcb/mu,https://github.com/djcb/mu,1251,2018-05-28T16:19:04Z,2018-05-29T08:13:50Z,2018-05-29T13:56:46Z,CLOSED,False,1,1,1,https://github.com/Profpatsch,mu4e: show sender mail addresses by default,1,[],https://github.com/djcb/mu/pull/1251,https://github.com/Profpatsch,1,https://github.com/djcb/mu/pull/1251,"Hiding email addresses poses a big security risk for the receiver, since
anybody can set the display name however they wish and thus impersonate another
person trivially.
Before this change, Alice <admin@mallory.com> would be shown as Alice to
Bob, who was expecting Mail from Alice <alice@gmail.com>.","Hiding email addresses poses a big security risk for the receiver, since
anybody can set the display name however they wish and thus impersonate another
person trivially.
Before this change, Alice <admin@mallory.com> would be shown as Alice to
Bob, who was expecting Mail from Alice <alice@gmail.com>.",True,{}
djcb/mu,https://github.com/djcb/mu,1251,2018-05-28T16:19:04Z,2018-05-29T08:13:50Z,2018-05-29T13:56:46Z,CLOSED,False,1,1,1,https://github.com/Profpatsch,mu4e: show sender mail addresses by default,1,[],https://github.com/djcb/mu/pull/1251,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1251#issuecomment-392691106,"Hiding email addresses poses a big security risk for the receiver, since
anybody can set the display name however they wish and thus impersonate another
person trivially.
Before this change, Alice <admin@mallory.com> would be shown as Alice to
Bob, who was expecting Mail from Alice <alice@gmail.com>.","You can also change the sender-address easily, so in general you can't trust that part (without signing); so showing the address doesn't make much difference. Still, if you want, there's the setting.
So, appreciate the effort, but not taking the PR. Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1251,2018-05-28T16:19:04Z,2018-05-29T08:13:50Z,2018-05-29T13:56:46Z,CLOSED,False,1,1,1,https://github.com/Profpatsch,mu4e: show sender mail addresses by default,1,[],https://github.com/djcb/mu/pull/1251,https://github.com/Profpatsch,3,https://github.com/djcb/mu/pull/1251#issuecomment-392785742,"Hiding email addresses poses a big security risk for the receiver, since
anybody can set the display name however they wish and thus impersonate another
person trivially.
Before this change, Alice <admin@mallory.com> would be shown as Alice to
Bob, who was expecting Mail from Alice <alice@gmail.com>.","You can also change the sender-address easily, so in general you can't trust that part (without signing)

Ah, that’s exactly what DKIM does today. So at least you can be mostly assured that the email wouldn’t have reached you if the sender didn’t control the domain part (and for services like gmail you can be reasonably sure that the user part has semantic meaning as well). Exactly that domain vanishes from sight if you only show display names, which can be freely set in any case.",True,{}
djcb/mu,https://github.com/djcb/mu,1255,2018-06-06T04:03:52Z,2018-09-26T17:40:29Z,2018-09-26T17:40:29Z,CLOSED,False,4,16,1,https://github.com/eklitzke,Use getline() to read server commands rather than a read/append loop,1,['needinfo'],https://github.com/djcb/mu/pull/1255,https://github.com/eklitzke,1,https://github.com/djcb/mu/pull/1255,"This uses the now-standard getline() to read server commands, rather than the old way which used a loop that called fgetc() and g_string_append_c() one character at a time. The return value of getline() is not checked, but that has the same semantics as the current fgetc() loop and terminates under the same conditions.
I can add an autoconf check and pre-processor ifdefs to support hypothetical systems that don't have getline(), but that seems like unnecessary complexity given that getline():

Has been a de facto part of most libc implementations since I started writing C at least.
Was added to POSIX ten years ago (as of POSIX.1-2008).
Was included in the C dynamic memory TR from 2010, which isn't technically part of the C standard but is implemented by everyone.","This uses the now-standard getline() to read server commands, rather than the old way which used a loop that called fgetc() and g_string_append_c() one character at a time. The return value of getline() is not checked, but that has the same semantics as the current fgetc() loop and terminates under the same conditions.
I can add an autoconf check and pre-processor ifdefs to support hypothetical systems that don't have getline(), but that seems like unnecessary complexity given that getline():

Has been a de facto part of most libc implementations since I started writing C at least.
Was added to POSIX ten years ago (as of POSIX.1-2008).
Was included in the C dynamic memory TR from 2010, which isn't technically part of the C standard but is implemented by everyone.",True,{}
djcb/mu,https://github.com/djcb/mu,1255,2018-06-06T04:03:52Z,2018-09-26T17:40:29Z,2018-09-26T17:40:29Z,CLOSED,False,4,16,1,https://github.com/eklitzke,Use getline() to read server commands rather than a read/append loop,1,['needinfo'],https://github.com/djcb/mu/pull/1255,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1255#issuecomment-394986253,"This uses the now-standard getline() to read server commands, rather than the old way which used a loop that called fgetc() and g_string_append_c() one character at a time. The return value of getline() is not checked, but that has the same semantics as the current fgetc() loop and terminates under the same conditions.
I can add an autoconf check and pre-processor ifdefs to support hypothetical systems that don't have getline(), but that seems like unnecessary complexity given that getline():

Has been a de facto part of most libc implementations since I started writing C at least.
Was added to POSIX ten years ago (as of POSIX.1-2008).
Was included in the C dynamic memory TR from 2010, which isn't technically part of the C standard but is implemented by everyone.","Ah.. what's the advantage of using getline? Do some oddballs like, say, MS's Visual Studio, Cygwin etc. support it?",True,{}
djcb/mu,https://github.com/djcb/mu,1255,2018-06-06T04:03:52Z,2018-09-26T17:40:29Z,2018-09-26T17:40:29Z,CLOSED,False,4,16,1,https://github.com/eklitzke,Use getline() to read server commands rather than a read/append loop,1,['needinfo'],https://github.com/djcb/mu/pull/1255,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1255#issuecomment-414034891,"This uses the now-standard getline() to read server commands, rather than the old way which used a loop that called fgetc() and g_string_append_c() one character at a time. The return value of getline() is not checked, but that has the same semantics as the current fgetc() loop and terminates under the same conditions.
I can add an autoconf check and pre-processor ifdefs to support hypothetical systems that don't have getline(), but that seems like unnecessary complexity given that getline():

Has been a de facto part of most libc implementations since I started writing C at least.
Was added to POSIX ten years ago (as of POSIX.1-2008).
Was included in the C dynamic memory TR from 2010, which isn't technically part of the C standard but is implemented by everyone.","Any update? If there's no advantage, I'll keep things as they are, since this sounds like the kind of thing that breaks someone's build somewhere.",True,{}
djcb/mu,https://github.com/djcb/mu,1255,2018-06-06T04:03:52Z,2018-09-26T17:40:29Z,2018-09-26T17:40:29Z,CLOSED,False,4,16,1,https://github.com/eklitzke,Use getline() to read server commands rather than a read/append loop,1,['needinfo'],https://github.com/djcb/mu/pull/1255,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1255#issuecomment-424806144,"This uses the now-standard getline() to read server commands, rather than the old way which used a loop that called fgetc() and g_string_append_c() one character at a time. The return value of getline() is not checked, but that has the same semantics as the current fgetc() loop and terminates under the same conditions.
I can add an autoconf check and pre-processor ifdefs to support hypothetical systems that don't have getline(), but that seems like unnecessary complexity given that getline():

Has been a de facto part of most libc implementations since I started writing C at least.
Was added to POSIX ten years ago (as of POSIX.1-2008).
Was included in the C dynamic memory TR from 2010, which isn't technically part of the C standard but is implemented by everyone.",Closing.,True,{}
djcb/mu,https://github.com/djcb/mu,1256,2018-06-06T04:47:51Z,2018-06-11T19:27:02Z,2018-06-11T19:27:02Z,CLOSED,False,267,5,14,https://github.com/eklitzke,"Use better warning/hardening compiler flags, and fix some one byte strncpy() overflows",2,[],https://github.com/djcb/mu/pull/1256,https://github.com/eklitzke,1,https://github.com/djcb/mu/pull/1256,"This adds better support in the makefile for -Wall. There was some existing WARN_CFLAGS logic in the project but it didn't seem like it was working correctly, e.g. there was no AC_SUBST() for it. This hooks up that logic. I've also added some additional logic for common hardening options supported by GCC and Clang. I'm using some new AX_ macros that are copied from upstream as is usual. The flags will only be enabled on compilers that actually support these flags.
This also fixes some minor issues with how mu is using strncpy(), which was caught by GCC:
  CC       mu-contacts.lo
In function ‘encode_email_address’,
    inlined from ‘mu_contacts_add’ at mu-contacts.c:293:10:
mu-contacts.c:235:13: warning: ‘strncpy’ specified bound 255 equals destination size [-Wstringop-truncation]
  for (cur = strncpy(enc, addr, sizeof(enc)); *cur != '\0'; ++cur)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The issue is that in calls like this, if strlen(addr) == sizeof(enc) then after this call enc will not be null-terminated, which is normally not expected.
There's also a warning I fixed related to a pedantic function signature mismatch.
With this these changes I can build the project cleanly (without warnings) on GCC 8.1.1","This adds better support in the makefile for -Wall. There was some existing WARN_CFLAGS logic in the project but it didn't seem like it was working correctly, e.g. there was no AC_SUBST() for it. This hooks up that logic. I've also added some additional logic for common hardening options supported by GCC and Clang. I'm using some new AX_ macros that are copied from upstream as is usual. The flags will only be enabled on compilers that actually support these flags.
This also fixes some minor issues with how mu is using strncpy(), which was caught by GCC:
  CC       mu-contacts.lo
In function ‘encode_email_address’,
    inlined from ‘mu_contacts_add’ at mu-contacts.c:293:10:
mu-contacts.c:235:13: warning: ‘strncpy’ specified bound 255 equals destination size [-Wstringop-truncation]
  for (cur = strncpy(enc, addr, sizeof(enc)); *cur != '\0'; ++cur)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The issue is that in calls like this, if strlen(addr) == sizeof(enc) then after this call enc will not be null-terminated, which is normally not expected.
There's also a warning I fixed related to a pedantic function signature mismatch.
With this these changes I can build the project cleanly (without warnings) on GCC 8.1.1",True,{}
djcb/mu,https://github.com/djcb/mu,1256,2018-06-06T04:47:51Z,2018-06-11T19:27:02Z,2018-06-11T19:27:02Z,CLOSED,False,267,5,14,https://github.com/eklitzke,"Use better warning/hardening compiler flags, and fix some one byte strncpy() overflows",2,[],https://github.com/djcb/mu/pull/1256,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1256#issuecomment-394985355,"This adds better support in the makefile for -Wall. There was some existing WARN_CFLAGS logic in the project but it didn't seem like it was working correctly, e.g. there was no AC_SUBST() for it. This hooks up that logic. I've also added some additional logic for common hardening options supported by GCC and Clang. I'm using some new AX_ macros that are copied from upstream as is usual. The flags will only be enabled on compilers that actually support these flags.
This also fixes some minor issues with how mu is using strncpy(), which was caught by GCC:
  CC       mu-contacts.lo
In function ‘encode_email_address’,
    inlined from ‘mu_contacts_add’ at mu-contacts.c:293:10:
mu-contacts.c:235:13: warning: ‘strncpy’ specified bound 255 equals destination size [-Wstringop-truncation]
  for (cur = strncpy(enc, addr, sizeof(enc)); *cur != '\0'; ++cur)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The issue is that in calls like this, if strlen(addr) == sizeof(enc) then after this call enc will not be null-terminated, which is normally not expected.
There's also a warning I fixed related to a pedantic function signature mismatch.
With this these changes I can build the project cleanly (without warnings) on GCC 8.1.1","Ah, seems useful, thanks!
Now, I think we don't need a separate HARDEN_CFLAGS; instead, we can use WARN_(C|CXX)FLAGS, and add the extra warnings to as EXTRA-YES-CFLAGS (see https://www.gnu.org/software/autoconf-archive/ax_compiler_flags.html). That should also make the extra .m4 file unnecessary.
Also, I think WARN_CFLAGS (and WARN_CXXFLAGS) is AC_SUBST already; if that does not work for some reason, let's see why.",True,{}
djcb/mu,https://github.com/djcb/mu,1256,2018-06-06T04:47:51Z,2018-06-11T19:27:02Z,2018-06-11T19:27:02Z,CLOSED,False,267,5,14,https://github.com/eklitzke,"Use better warning/hardening compiler flags, and fix some one byte strncpy() overflows",2,[],https://github.com/djcb/mu/pull/1256,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1256#issuecomment-396358139,"This adds better support in the makefile for -Wall. There was some existing WARN_CFLAGS logic in the project but it didn't seem like it was working correctly, e.g. there was no AC_SUBST() for it. This hooks up that logic. I've also added some additional logic for common hardening options supported by GCC and Clang. I'm using some new AX_ macros that are copied from upstream as is usual. The flags will only be enabled on compilers that actually support these flags.
This also fixes some minor issues with how mu is using strncpy(), which was caught by GCC:
  CC       mu-contacts.lo
In function ‘encode_email_address’,
    inlined from ‘mu_contacts_add’ at mu-contacts.c:293:10:
mu-contacts.c:235:13: warning: ‘strncpy’ specified bound 255 equals destination size [-Wstringop-truncation]
  for (cur = strncpy(enc, addr, sizeof(enc)); *cur != '\0'; ++cur)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The issue is that in calls like this, if strlen(addr) == sizeof(enc) then after this call enc will not be null-terminated, which is normally not expected.
There's also a warning I fixed related to a pedantic function signature mismatch.
With this these changes I can build the project cleanly (without warnings) on GCC 8.1.1","I have fixed in a slightly different way now -- anyway, thanks for bringing this to my attention!",True,{}
djcb/mu,https://github.com/djcb/mu,1265,2018-06-15T08:05:13Z,2018-06-20T03:40:17Z,2018-06-20T03:40:17Z,CLOSED,False,8,5,1,https://github.com/seanfarley,mu4e-view: enable hooks to run when the message is unread,1,[],https://github.com/djcb/mu/pull/1265,https://github.com/seanfarley,1,https://github.com/djcb/mu/pull/1265,"As far as I can tell, the mu4e-view hooks are not running when first opening an
message because of this conditional. I've tested this with a few custom hooks
and it seems to work but perhaps I'm missing something so feedback is
appreciated.","As far as I can tell, the mu4e-view hooks are not running when first opening an
message because of this conditional. I've tested this with a few custom hooks
and it seems to work but perhaps I'm missing something so feedback is
appreciated.",True,{}
djcb/mu,https://github.com/djcb/mu,1265,2018-06-15T08:05:13Z,2018-06-20T03:40:17Z,2018-06-20T03:40:17Z,CLOSED,False,8,5,1,https://github.com/seanfarley,mu4e-view: enable hooks to run when the message is unread,1,[],https://github.com/djcb/mu/pull/1265,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1265#issuecomment-398278934,"As far as I can tell, the mu4e-view hooks are not running when first opening an
message because of this conditional. I've tested this with a few custom hooks
and it seems to work but perhaps I'm missing something so feedback is
appreciated.","Your fix is ok, it works, the problem is that now the view buffer is printed twice and the hooks run twice.
I sent a new PR that fix this issue as well explaining exactly what is happening.
This will as well improve slow display of larges message that were displayed twice (+ the hooks running twice as well). Probably #1267 and this PR should be closed in favor of #1268 (perhaps I can add the full explanation which is in commit message as comment in the code @djcb ?)",True,{}
djcb/mu,https://github.com/djcb/mu,1265,2018-06-15T08:05:13Z,2018-06-20T03:40:17Z,2018-06-20T03:40:17Z,CLOSED,False,8,5,1,https://github.com/seanfarley,mu4e-view: enable hooks to run when the message is unread,1,[],https://github.com/djcb/mu/pull/1265,https://github.com/seanfarley,3,https://github.com/djcb/mu/pull/1265#issuecomment-398614508,"As far as I can tell, the mu4e-view hooks are not running when first opening an
message because of this conditional. I've tested this with a few custom hooks
and it seems to work but perhaps I'm missing something so feedback is
appreciated.","Oh, nice! Thanks for the fix! :-D",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/jvshahid,1,https://github.com/djcb/mu/pull/1267,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/seanfarley,2,https://github.com/djcb/mu/pull/1267#issuecomment-397903317,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Hehe, no worries :-) I, too, am not sure of the correct solution. Just to explain the situation to others, the code path for opening a new (unread) message is:

call mu4e~view-internal
when it gets to (setq mode-enabled (eq major-mode 'mu4e-view-mode) at this point, major-mode is fundamental-mode so this evaluates to false
since the previous step is false, set a local variable mu4e-view-mode-hook to nil in a scope while calling (mu4e-view-mode) (so as to not run any hooks)
run a few more lines to get to when (or embedded (not (mu4e~view-mark-as-read-maybe msg)))
the mu4e~view-mark-as-read-maybe method will in turn call mu4e~view-internal recursively

re-enter mu4e~view-internal
when it gets to (setq mode-enabled (eq major-mode 'mu4e-view-mode) at this point, major-mode is now mu4e-view-mode so this evaluates to true (so mode-enabled is non-nil)
run a few more lines to when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) which will now pass as true
enter the when statement and hit the line (unless mode-enabled (run-mode-hooks 'mu4e-view-mode-hook)) which will not run since in this recursive evaluation we've already set that
pop out of the recursive stack


(mu4e~view-mark-as-read-maybe msg) returned true (since we marked it as read in the recursive call)
so (not (mu4e~view-mark-as-read-maybe msg)) will evaluate as false and we not enter the when statement
hence the hook method is not called :-(

There are two solutions to this: we could the hooks in the (mu4e~view-mark-as-read-maybe msg) call (which is what my PR does) or we could bring that hook call outside the when block (which is what this PR does). I suspect this PR is the correct one since it keeps the (unless ...) call and mine does not (meaning if that code path is hit another way it could trigger the hooks when they were not supposed to be triggered).",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/jvshahid,3,https://github.com/djcb/mu/pull/1267#issuecomment-397906924,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,Thanks @seanfarley for the explanation. It wasn't obvious that your pr is running the hooks in the recursive call. I think a comment could help clarify the intention. I also think that mode-enabled isn't needed anymore.,True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/thierryvolpiatto,4,https://github.com/djcb/mu/pull/1267#issuecomment-397938953,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Sean Farley <notifications@github.com> writes:
 There are two solutions to this: we could the hooks in the
 (mu4e~view-mark-as-read-maybe msg) call (which is what my PR does) or
 we could bring that hook call outside the when block (which is what
 this PR does). I suspect this PR is the correct one since it keeps the
 (unless ...) call and mine does not (meaning if that code path is hit
 another way it could trigger the hooks when they were not supposed to
 be triggered).
Didn't follow the whole thread, but here the hooks are running fine with
actual code.

As a reminder:

The intention of original code was to run the hook only when text was
inserted, not before, this allowed for example
    (add-hook 'mu4e-view-mode-hook 'smiley-buffer)
to treat smileys once the text was already inserted, otherwise
'smiley-buffer was run on nothing (empty buffer).

See PR #1141 and #1148 for more infos.

Thanks.
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/seanfarley,5,https://github.com/djcb/mu/pull/1267#issuecomment-397952997,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Thierry Volpiatto <notifications@github.com> writes:
 Sean Farley ***@***.***> writes:

> There are two solutions to this: we could the hooks in the
> (mu4e~view-mark-as-read-maybe msg) call (which is what my PR does) or
> we could bring that hook call outside the when block (which is what
> this PR does). I suspect this PR is the correct one since it keeps the
> (unless ...) call and mine does not (meaning if that code path is hit
> another way it could trigger the hooks when they were not supposed to
> be triggered).

 Didn't follow the whole thread, but here the hooks are running fine with
 actual code.
As I outlined above, I don't see how that's possible. To be clear, this
bug is only happening when opening an unread email and marking it read.
Opening an already email runs the hooks.

In fact, the behavior is exactly similar to:
https://groups.google.com/forum/#!topic/mu-discuss/gG7q3vHzwUY

 As a reminder:

 The intention of original code was to run the hook only when text was
 inserted, not before, this allowed for example
     (add-hook 'mu4e-view-mode-hook 'smiley-buffer)
 to treat smileys once the text was already inserted, otherwise
 'smiley-buffer was run on nothing (empty buffer).

 See PR #1141 and #1148 for more infos.
I've gone over those pull requests (and the un-merge, re-merge) of them.
I don't see how hooks can ever run when `(mu4e~view-mark-as-read-maybe
msg)` will return nil the first time this email is opened (thereby not
entering the `(when (or embedded (not (mu4e~view-mark-as-read-maybe
msg)))` block; and in the recursive call, `(setq mode-enabled (eq
major-mode 'mu4e-view-mode)` is set to t, making the `(unless
mode-enabled (run-mode-hooks 'mu4e-view-mode-hook))` not run.

It'd be helpful if you could read what I wrote above and point out where
I went wrong so that we can get to the bottom of this bug.",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/seanfarley,6,https://github.com/djcb/mu/pull/1267#issuecomment-397955864,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,I just ran your mu4e-config.el in a separate emacs -Q just to try and see how this works for you but I cannot reproduce your statement that this works. Evaluating an edebug-defun for any of the hook functions shows that nothing is run when opening an unread email for the first time (they run upon opening the message a second time).,True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/thierryvolpiatto,7,https://github.com/djcb/mu/pull/1267#issuecomment-398032529,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Sean Farley <notifications@github.com> writes:
 I just ran your mu4e-config.el in a separate emacs -Q just to try and
 see how this works for you but I cannot reproduce your statement that
 this works. Evaluating an edebug-defun for any of the hook functions
 shows that nothing is run when opening an unread email for the first
 time (they run upon opening the message a second time).
You are right, as I don't follow the thread from start I didn't notice
the problem was when opening an unread email, and yes in this case the
hooks don't run.

#1267 fix (this PR) is not working for me wheras #1265 is working,
perhaps you can remove as well the mode-enabled binding which is no
more needed.
IIRC I was checking for mode-enabled to avoid running twice the hooks,
it seems this is no more needed.

Thanks.
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/jvshahid,8,https://github.com/djcb/mu/pull/1267#issuecomment-398056456,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Sorry for the poor explanation of the underlying problem that the PR is trying to address. I should have done better explaining the issue.
I'm not sure why this PR is not working for you, but I'm happy with either fixes. I think running the hooks as part of the recursive call is fine since that's where the msg text is being inserted anyway. @seanfarley can you please add a brief comment explaining the order of the calls.  May be something similar to your previous comment but shorter.",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/thierryvolpiatto,9,https://github.com/djcb/mu/pull/1267#issuecomment-398074058,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"John Shahid <notifications@github.com> writes:
 I'm not sure why this PR is not working for you, but I'm happy with
 either fixes. I think running the hooks as part of the recursive call
 is fine since that's where the msg text is being inserted
 anyway.
This is fine.
The complexity IIRC was that `mu4e~view-mark-as-read-maybe` was
involving another call of `mu4e-view-mode` and BTW of its hooks that
were indeed running because `mu4e-view-mode-hook` was this time not
let-bounded, so the original intention when I wrote this patch was to
not run twice the hooks.
However it seems this is not more true (correct me if i am wrong) so
there is no need to check if mode is enabled or not, we can run the
hooks inconditionally.

Hope that helps.

Thanks.
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/seanfarley,10,https://github.com/djcb/mu/pull/1267#issuecomment-398154609,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Ah, great, this is good news! I'll update my PR and add some of the highlights from this discussion to the commit message and relevant highlights to the code comments.",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/seanfarley,11,https://github.com/djcb/mu/pull/1267#issuecomment-398159304,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Ok, I've updated #1265; please let me know if I missed anything!",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/thierryvolpiatto,12,https://github.com/djcb/mu/pull/1267#issuecomment-398279913,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,"Sean Farley <notifications@github.com> writes:
 Ok, I've updated #1265; please let me know if I missed anything!
Yes, see comment in #1265 and PR #1268.
Thanks!
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1267,2018-06-17T16:41:42Z,2018-08-18T08:04:55Z,2018-08-18T08:04:55Z,CLOSED,False,2,2,1,https://github.com/jvshahid,ensure mu4e-view-mode hooks run,1,[],https://github.com/djcb/mu/pull/1267,https://github.com/djcb,13,https://github.com/djcb/mu/pull/1267#issuecomment-414040404,This is duplicate of #1265. I made this PR because I wasn't aware at the time of the PR #1265 and I'm not sure if the fix in that PR actually addresses the underlying problem. The problem seems to the nesting of (run-mode-hooks 'mu4e-view-mode-hook) inside  (when (or embedded (not (mu4e~view-mark-as-read-maybe msg))) and doesn't have anything to do with the condition mode-enabled,Think this should work now. Thanks for the effort.,True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1268,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1268#issuecomment-398402102,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.",This PR fix as well #1192 and possibly #1217,True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,3,https://github.com/djcb/mu/pull/1268#issuecomment-405015433,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.",@djcb ping,True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1268#issuecomment-405026713,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Hmmm, using advise here seems a bit unnecessary since we control the code ourselves, or?
I'd prefer a solution where  mu4e~view-mark-as-read-maybe returns t if actually marks the message, and we can do something like:
(unless (mu4e~view-mark-as-read-maybe) 
       ... view the message, run hooks etc.)

then, we also run the hooks on the message the user actually sees (rather than still-unread one)",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,5,https://github.com/djcb/mu/pull/1268#issuecomment-405038481,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 Hmmm, using advise here seems a bit unnecessary since we control the
 code ourselves, or?
Did you read the commit message and comments?

      ;; When MSG is unread, mu4e~view-mark-as-read-maybe will trigger
      ;; 2 other calls to mu4e~view-internal when running
      ;; mu4e~proc-move and mu4e~proc-view. To avoid printing and
      ;; running hooks a second time we advice mu4e-view-func aka
      ;; mu4e~headers-view-handler aka mu4e-view aka
      ;; mu4e~view-internal so that it does nothing. See
      ;; mu4e~view-mark-as-read-maybe and mu4e~view-advice-view-func.

So if you don't advise `mu4e-view-func`, `mu4e~proc-view` will print a
second time the buffer and also run hook a second time.
 I'd prefer a solution where mu4e~view-mark-as-read-maybe returns t if
 actually marks the message, and we can do something like:
Of course it would be better but it is not possible unless you change
the signature of some functions to accept an extra optional arg that say
""buffer is printed and hook already ran so do nothing now"".

In this patch we are using `add-function` which is exactly the tool
needed for such cases, it affects nothing else as the advice function
remove itself when it run and finally avoid doing complex changes in
sensible function that may break something else.

Thanks.
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,6,https://github.com/djcb/mu/pull/1268#issuecomment-405039298,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","mu4e~view-internal
    => mu4e~view-mark-as-read-maybe
       => mu4e~proc-move
          => mu4e~view-internal
             => mu4e~view-mark-as-read-maybe -> nil (print buffer and run hooks)
                => mu4e~proc-view
                   => mu4e~view-internal
                      => mu4e~view-mark-as-read-maybe -> nil (print buffer and run hooks)[2th]
       => t",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/seanfarley,7,https://github.com/djcb/mu/pull/1268#issuecomment-411234305,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.",Gentle ping,True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/djcb,8,https://github.com/djcb/mu/pull/1268#issuecomment-412265169,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","When setting mu4e-view-mode-hook to something like
(add-hook 'mu4e-view-mode-hook
  (lambda()
    (message ""running mu4e-view-mode-hook"")))

I see that message only exactly once for either read or unread messages.. so under what circumstances does this fail?
And indeed, I would prefer changing functions to do the right things, I'd consider advice only for code one cannot otherwise change.",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/seanfarley,9,https://github.com/djcb/mu/pull/1268#issuecomment-412293244,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","I don't see how that's possible and even tested it just now. For me, your hook doesn't run on unread messages.
I am deterred from helping out any more since you seem so flippant in your response. There is much discussion in your own project on this behavior that happened two months ago:

#1265
#1267

I'll continue to monkey patch and fix this myself since you don't seem to have the time.",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,10,https://github.com/djcb/mu/pull/1268#issuecomment-412322133,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 When setting mu4e-view-mode-hook to something like

 (add-hook 'mu4e-view-mode-hook
   (lambda()
     (message ""running mu4e-view-mode-hook"")))

 I see that message only exactly once for either read or unread
 messages..
Hmm...
 so under what circumstances does this fail?
Unread messages, read the commit message of my patch, it is all explained.
 And indeed, I would prefer changing functions to do the right things,
If you want to do this, consider rewriting a bunch of things in
mu4e-proc...
 I'd consider advice only for code one cannot otherwise change.
This is not advice, well not really, it is `add-function` which have
been conceived to interact from inside source code, in contrast with
`advice-add` which is to interact with source code from outside
i.e. user side.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,11,https://github.com/djcb/mu/pull/1268#issuecomment-412322258,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Sean Farley <notifications@github.com> writes:
 I don't see how that's possible and even tested it just now. For me,
 your hook doesn't run on unread messages.
Agree.
 I'll continue to monkey patch and fix this myself since you don't seem to have the time.
Same here.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/djcb,12,https://github.com/djcb/mu/pull/1268#issuecomment-413096688,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","""flippant""? Let's assume good faith, shall we?",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/djcb,13,https://github.com/djcb/mu/pull/1268#issuecomment-413097025,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","So, the reason it worked for me is that I was using the the gnus view; so I've changed internal-view to behave a bit more like that. The hooks should run as expected.",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/djcb,14,https://github.com/djcb/mu/pull/1268#issuecomment-414040366,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","So, I think this should be fixed now (even if in a slightly different way). Thanks for taking the time.",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,15,https://github.com/djcb/mu/pull/1268#issuecomment-435601940,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","I have updated mu and @djcb FYI your fix is still not working.
Only https://github.com/thierryvolpiatto/mu/tree/mu4e-view-mode-hook_fix is working for me for now.
IIRC What you did was good but insufficient, you need to merge your changes with my branch (fully not tested).",True,{'THUMBS_UP': ['https://github.com/tasmo']}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/djcb,16,https://github.com/djcb/mu/pull/1268#issuecomment-435612057,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Hmmm... it works for me. Ie.,
(setq mu4e-view-use-gnus nil)
(add-hook 'mu4e-view-mode-hook
  (lambda() (message ""running mu4e-view-mode-hook"")))

And I can see the message for each message I open (unread or not). Do you see something else?",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,17,https://github.com/djcb/mu/pull/1268#issuecomment-435613640,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 Hmmm... it works for me. Ie.,

 (setq mu4e-view-use-gnus nil)
 (add-hook 'mu4e-view-mode-hook
   (lambda() (message ""running mu4e-view-mode-hook"")))

 And I can see the message for each message I open (unread or not). Do you see something else?
Yes smileys are not activated with read or unread messages.
(add-hook 'mu4e-view-mode-hook 'smiley-buffer)
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/djcb,18,https://github.com/djcb/mu/pull/1268#issuecomment-435659744,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","So, the hook does run, but it runs a bit too early for smiley-mode to anything useful. I've pushed a change so the hooks run later, and that seems to work. For you as well, @thierryvolpiatto ?",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/thierryvolpiatto,19,https://github.com/djcb/mu/pull/1268#issuecomment-435697592,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 So, the hook does run, but it runs a bit too early for smiley-mode to
 anything useful. I've pushed a change so the hooks run later, and that
 seems to work.  For you as well, @thierryvolpiatto ?
Seems to work fine now, thanks ;-).
…
--
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,1268,2018-06-19T05:22:05Z,2018-08-18T08:04:18Z,2020-02-22T05:32:38Z,CLOSED,False,20,6,1,https://github.com/thierryvolpiatto,Fix mu4e-view-mode-hook not called on unread messages,2,[],https://github.com/djcb/mu/pull/1268,https://github.com/tasmo,20,https://github.com/djcb/mu/pull/1268#issuecomment-465331343,"Fix #1265 and #1267.
Here's the problem:
When mu4e~view-internal is called it makes a call to
mu4e~view-mark-as-read-maybe.
When the message is unread mu4e~view-mark-as-read-maybe calls
mu4e~proc-move which flag the message as read and calls again
mu4e~view-internal which in turn calls again
mu4e~view-mark-as-read-maybe which this time returns nil and
mu4e~view-internal continues printing the view buffer and running
hooks.
Then mu4e~view-mark-as-read-maybe first call continue to run and
calls now mu4e~proc-view which as mu4e~proc-move calls again
mu4e~view-internal and prints a second time the buffer and run a
second time the hooks.
The first thing this patch does is always running hooks after printing
message, then to avoid doing this again it advice temporarily
mu4e-view-func aka mu4e~view-internal to prevent printing and
running hooks again.
Finally this advice function remove itself the advice to allow
printing the next message.

mu4e/mu4e-view.el (mu4eview-internal): Remove mode-enabled checking
which is useless.
(mu4eview-advice-view-func): Advice mu4e-view-func to ensure it
doesn't run a second time.
(mu4e~view-mark-as-read-maybe): Use it.","Hmmm... it works for me. Ie.,
(setq mu4e-view-use-gnus nil)
(add-hook 'mu4e-view-mode-hook
  (lambda() (message ""running mu4e-view-mode-hook"")))

And I can see the message for each message I open (unread or not). Do you see something else?

Unfortunately it does not work here. The message appears in read emails but not when I open unread.",True,{}
djcb/mu,https://github.com/djcb/mu,1273,2018-06-22T18:22:35Z,2018-08-15T05:16:24Z,2018-08-15T05:16:32Z,MERGED,True,1,0,1,https://github.com/peterwvj,Add Ubuntu dependency,1,[],https://github.com/djcb/mu/pull/1273,https://github.com/peterwvj,1,https://github.com/djcb/mu/pull/1273,Had to install libtool. I'm on Ubuntu 18.04,Had to install libtool. I'm on Ubuntu 18.04,True,{}
djcb/mu,https://github.com/djcb/mu,1273,2018-06-22T18:22:35Z,2018-08-15T05:16:24Z,2018-08-15T05:16:32Z,MERGED,True,1,0,1,https://github.com/peterwvj,Add Ubuntu dependency,1,[],https://github.com/djcb/mu/pull/1273,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1273#issuecomment-413096543,Had to install libtool. I'm on Ubuntu 18.04,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/mbunkus,1,https://github.com/djcb/mu/pull/1278,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1278#issuecomment-401585326,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","Hmm, I simply use R (and 'sender only') which seems to work fine for all the mailing-lists I'm using. Doesn't that work for you?",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/mbunkus,3,https://github.com/djcb/mu/pull/1278#issuecomment-401619714,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","No, it doesn't, at least not for lists who don't set Reply-To to the list's address. Let'stake the IETF's CELLAR list (standard mailman). From is the original sender's address (not the mailing list address), To is the mailing list address, Reply-To isn't set, List-Post is set. In that case:

""sender only"" uses what's in From, meaning the person who sent the mail
""all"" uses the original From (the person) as the new To and the original To (the list address) becomes the new Cc requiring me to remove the new To and move the new Cc to the new To.

I don't have a list around that sets Reply-To to the list's address in order to test how that works. I really want an option that implements ""definitely send to the list, no matter who else is copied and no matter how the list is configured"" as this minimizes the mental work I have to do. I don't have to think about ""does this list set Reply-To and would I therefore get away with 'reply to sender'"", and I don't have to use ""reply to all"" with the additional manual steps of removing the additional person addresses and moving the list address from Cc to To.
I've been using these functions for well over a year now. I just thought others might be happy to have such functionality as it was requested over on Reddit.",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1278#issuecomment-401680735,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","I think the it would be better to set reply-to to the mailing-list address then, for such messages. The patch seems to do some manual re-parsing in mu4e-draft; that's not really something I want to do.",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/mbunkus,5,https://github.com/djcb/mu/pull/1278#issuecomment-401688781,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","I think the it would be better to set reply-to to the mailing-list address then, for such messages.

Uhm, the Reply-To header is not under my control as a recipient of the mailing list message. This function is about enabling the user to do whatever she thinks fits best no matter how other people have configured their software (mailing list software, email client).

The patch seems to do some manual re-parsing in mu4e-draft; that's not really something I want to do.

Fair enough. The only reason I did that is that there didn't seem to be any other way to get the List-Post header as it isn't part of the origmsg structure. If you have a better idea how to pass the header around, I can look into implementing it.
Look, I won't be offended if you don't want to incorporate such a function. It's just something that a lot of other power-user mail clients (mutt, Thunderbird, kmail) have had for ages and that some people really expect to be there.",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1278#issuecomment-405009921,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).",What I meant is that perhaps mu should set the reply-to flag to the mailing-list address for such messages; then mu4e would DTRT in a more cases.,True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/djcb,7,https://github.com/djcb/mu/pull/1278#issuecomment-414035129,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).",Do you have an example message that's not handled correctly at the moment?,True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/mbunkus,8,https://github.com/djcb/mu/pull/1278#issuecomment-414036058,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","Do you have an example message that's not handled correctly at the moment?

Sure, here you go.
With that message reply to ""all"" puts Steve Lhomms address into To and the list's address into Cc. With reply to ""sender only"" it puts Steve's address into To and nothing into Cc. What I often want is to only reply to the list (lists's address in To, nothing in Cc), and current mu4e simply doesn't offer a way to do that safe for replying to ""all"" and manually fixing the headers — which is annoying and error-prone.",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/djcb,9,https://github.com/djcb/mu/pull/1278#issuecomment-435659818,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).",I've changed it so that mu sets the reply-to for such messages; they now behave just like any other mailing-list replies.,True,"{'THUMBS_DOWN': ['https://github.com/mbunkus', 'https://github.com/bitclick']}"
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/dominikh,10,https://github.com/djcb/mu/pull/1278#issuecomment-465236167,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","The issue with mailing lists that set the Reply-To header, as well as mu4e doing the same, is that it may become impossible to respond to the sender of the email. Reply-To exists to allow the sender to specify an address that is different from the one used in From. If we overwrite the header, we lose information.
See https://www.unicom.com/pw/reply-to-harmful.html for more opinions on mailing lists and Reply-To.",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/bitclick,11,https://github.com/djcb/mu/pull/1278#issuecomment-532828223,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","I've changed it so that mu sets the reply-to for such messages; they now behave just like any other mailing-list replies.

I think i am suffering from this too (mu 1.2.0): I cannot reply to the sender only anymore. the fake reply-to header sneaks in and now i accidentally replied to the whole list several times!  please change this or at least tell me in the ui choice labels..
i would like a 3 choices solution very much :-)",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/brandoninvergo,12,https://github.com/djcb/mu/pull/1278#issuecomment-534957708,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","I've changed it so that mu sets the reply-to for such messages; they now behave just like any other mailing-list replies.

This change breaks a standard usage of mailing lists. For example, you can have mailing lists within an organization where only a few people are subscribed (say, a committee). Other people inside or outside the organization email the list to get in touch with the committee. When members of the committee respond, they want to respond to the original inquiry while still CC'ing the list to keep a record of the discussion.
As an example, this breaks standard usage of report-emacs-bug from the perspective of the Emacs developers (I am not an Emacs dev). It is assumed that the Emacs user reporting the bug is not subscribed to bug-gnu-emacs@gnu.org, yet the user would expect to receive replies from the subscribers of the list receiving the report (namely, from the devs who would handle the bug report). If an Emacs dev is using mu4e to reply to the bug report, say to ask for more info, they would have to manually copy the original reporter's email address and paste it into their reply's To: field while moving the list to the Cc: field. This is massively inconvenient.",True,{}
djcb/mu,https://github.com/djcb/mu,1278,2018-06-30T13:39:09Z,2020-01-11T14:58:10Z,2020-01-11T14:58:10Z,CLOSED,False,29,16,1,https://github.com/mbunkus,"mu4e: extend ""reply to all/sender only"" with ""reply to mailing list""",1,['needinfo'],https://github.com/djcb/mu/pull/1278,https://github.com/djcb,13,https://github.com/djcb/mu/pull/1278#issuecomment-573323947,"At the moment it isn't possible to reply solely to a mailing list with mu4e. I can only reply to all and remove the non-mailing list addresses manually.
This PR adds a third mode: ""reply to list"". It will use the List-Post header if present; otherwise it'll use the first address in the To header (this is a bit of a heuristic as well as a way to make ""reply to list"" always do something).","I've update the implementation to do some special-handling for mailing-lists; this is somewhat inspired by the PR here (thanks for that!) but quite different as well. Anyway, it should hopefully now work to anyone's satisfaction; feel free to leave any comments in #1459.",True,{}
djcb/mu,https://github.com/djcb/mu,1284,2018-07-09T03:48:26Z,2019-01-13T20:53:46Z,2019-01-17T03:29:31Z,MERGED,True,35,25,1,https://github.com/nicolasavru,Perform threading calculation on related set instead of entire result.,1,[],https://github.com/djcb/mu/pull/1284,https://github.com/nicolasavru,1,https://github.com/djcb/mu/pull/1284,"The current threading algorithm is applied to the entire result of a query, even
if maxnum is specified, and then the result of the threading algorithm is
truncated to maxnum. The improves threading results by returning the entire
thread even when only a single message makes it into the top maxnum results.
This commit applies the threading algorithm to the related message set of the
maxnum-truncated query result instead of to the entire query result. For a given
set of messages, the set of messages which will share threads with any of the
original messages is exactly the related message sets. Put another way, either
any messages returned by the original query but removed by the maxnum truncation
will also be returned by the related message query, or they would not have been
needed anyway because they would not be members of any visible thread.
To maintain backward compatibility and allow threading to be used without
including related messages, the related message set is found for the threading
calculation, but any messages which would not have matched the original query
are then pruned, resulting in a superset of the truncated query, but a subset of
the untruncated query.
This does not improve (or degrade) the run time of a threading calculation when
maxnum is not set, but significant improves it when maxnum is set by making it
scale (roughly) linearly in terms of maxnum. On a maildir with ~200k messages
and maxnum set to 500 (the default), the run time of a threading calculation is
lowered from ~1m to ~0.1s.","The current threading algorithm is applied to the entire result of a query, even
if maxnum is specified, and then the result of the threading algorithm is
truncated to maxnum. The improves threading results by returning the entire
thread even when only a single message makes it into the top maxnum results.
This commit applies the threading algorithm to the related message set of the
maxnum-truncated query result instead of to the entire query result. For a given
set of messages, the set of messages which will share threads with any of the
original messages is exactly the related message sets. Put another way, either
any messages returned by the original query but removed by the maxnum truncation
will also be returned by the related message query, or they would not have been
needed anyway because they would not be members of any visible thread.
To maintain backward compatibility and allow threading to be used without
including related messages, the related message set is found for the threading
calculation, but any messages which would not have matched the original query
are then pruned, resulting in a superset of the truncated query, but a subset of
the untruncated query.
This does not improve (or degrade) the run time of a threading calculation when
maxnum is not set, but significant improves it when maxnum is set by making it
scale (roughly) linearly in terms of maxnum. On a maildir with ~200k messages
and maxnum set to 500 (the default), the run time of a threading calculation is
lowered from ~1m to ~0.1s.",True,{}
djcb/mu,https://github.com/djcb/mu,1284,2018-07-09T03:48:26Z,2019-01-13T20:53:46Z,2019-01-17T03:29:31Z,MERGED,True,35,25,1,https://github.com/nicolasavru,Perform threading calculation on related set instead of entire result.,1,[],https://github.com/djcb/mu/pull/1284,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1284#issuecomment-453864682,"The current threading algorithm is applied to the entire result of a query, even
if maxnum is specified, and then the result of the threading algorithm is
truncated to maxnum. The improves threading results by returning the entire
thread even when only a single message makes it into the top maxnum results.
This commit applies the threading algorithm to the related message set of the
maxnum-truncated query result instead of to the entire query result. For a given
set of messages, the set of messages which will share threads with any of the
original messages is exactly the related message sets. Put another way, either
any messages returned by the original query but removed by the maxnum truncation
will also be returned by the related message query, or they would not have been
needed anyway because they would not be members of any visible thread.
To maintain backward compatibility and allow threading to be used without
including related messages, the related message set is found for the threading
calculation, but any messages which would not have matched the original query
are then pruned, resulting in a superset of the truncated query, but a subset of
the untruncated query.
This does not improve (or degrade) the run time of a threading calculation when
maxnum is not set, but significant improves it when maxnum is set by making it
scale (roughly) linearly in terms of maxnum. On a maildir with ~200k messages
and maxnum set to 500 (the default), the run time of a threading calculation is
lowered from ~1m to ~0.1s.","Great work; merging. There's may be some further feedback (after use), stay tuned!",True,{'HOORAY': ['https://github.com/felixSchl']}
djcb/mu,https://github.com/djcb/mu,1286,2018-07-12T09:56:43Z,2018-08-18T06:02:53Z,2018-08-18T06:03:09Z,MERGED,True,2,1,1,https://github.com/ericdanan,mu4e: fix action to show thread for single-window mode,1,[],https://github.com/djcb/mu/pull/1286,https://github.com/ericdanan,1,https://github.com/djcb/mu/pull/1286,"When in single-window mode and invoking mu4e-action-show-thread from
the view buffer, stay in the headers buffer rather than going back to
the view buffer.","When in single-window mode and invoking mu4e-action-show-thread from
the view buffer, stay in the headers buffer rather than going back to
the view buffer.",True,{}
djcb/mu,https://github.com/djcb/mu,1286,2018-07-12T09:56:43Z,2018-08-18T06:02:53Z,2018-08-18T06:03:09Z,MERGED,True,2,1,1,https://github.com/ericdanan,mu4e: fix action to show thread for single-window mode,1,[],https://github.com/djcb/mu/pull/1286,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1286#issuecomment-414034986,"When in single-window mode and invoking mu4e-action-show-thread from
the view buffer, stay in the headers buffer rather than going back to
the view buffer.",Merged -- thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,1290,2018-07-13T12:56:21Z,2018-08-18T05:54:18Z,2018-08-23T21:51:09Z,MERGED,True,1,1,1,https://github.com/ericdanan,org-mu4e: move mu4e requirement inside org-mu4e-open,1,[],https://github.com/djcb/mu/pull/1290,https://github.com/ericdanan,1,https://github.com/djcb/mu/pull/1290,"This allows to defer loading mu4e. That is, if we simply put in our
init file:
(with-eval-after-load 'org
  (require 'org-mu4e))

then mu4e is only loaded if either we follow a mu4e link from an org
buffer or we call the autoloaded function mu4e to read our emails.
Storing org-mode links from mu4e buffers is unaffected by this change
since org-mu4e-store-link only applies from mu4e buffers.
Regarding the second, experimental part of org-mu4e.el about editing
mails with org-mode, I am not completely sure but I think it should
also be unaffected since it also seems to only apply from mu4e buffers.","This allows to defer loading mu4e. That is, if we simply put in our
init file:
(with-eval-after-load 'org
  (require 'org-mu4e))

then mu4e is only loaded if either we follow a mu4e link from an org
buffer or we call the autoloaded function mu4e to read our emails.
Storing org-mode links from mu4e buffers is unaffected by this change
since org-mu4e-store-link only applies from mu4e buffers.
Regarding the second, experimental part of org-mu4e.el about editing
mails with org-mode, I am not completely sure but I think it should
also be unaffected since it also seems to only apply from mu4e buffers.",True,{}
djcb/mu,https://github.com/djcb/mu,1290,2018-07-13T12:56:21Z,2018-08-18T05:54:18Z,2018-08-23T21:51:09Z,MERGED,True,1,1,1,https://github.com/ericdanan,org-mu4e: move mu4e requirement inside org-mu4e-open,1,[],https://github.com/djcb/mu/pull/1290,https://github.com/ericdanan,2,https://github.com/djcb/mu/pull/1290#issuecomment-404826914,"This allows to defer loading mu4e. That is, if we simply put in our
init file:
(with-eval-after-load 'org
  (require 'org-mu4e))

then mu4e is only loaded if either we follow a mu4e link from an org
buffer or we call the autoloaded function mu4e to read our emails.
Storing org-mode links from mu4e buffers is unaffected by this change
since org-mu4e-store-link only applies from mu4e buffers.
Regarding the second, experimental part of org-mu4e.el about editing
mails with org-mode, I am not completely sure but I think it should
also be unaffected since it also seems to only apply from mu4e buffers.","Also, I noted org-mu4e depends on library org-exp, but I can't find this library in org (nor org-plus-contrib). Internet search only suggests an old library that was part of emacs as of 2012. Should the dependency be removed?",True,{}
djcb/mu,https://github.com/djcb/mu,1290,2018-07-13T12:56:21Z,2018-08-18T05:54:18Z,2018-08-23T21:51:09Z,MERGED,True,1,1,1,https://github.com/ericdanan,org-mu4e: move mu4e requirement inside org-mu4e-open,1,[],https://github.com/djcb/mu/pull/1290,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1290#issuecomment-414034765,"This allows to defer loading mu4e. That is, if we simply put in our
init file:
(with-eval-after-load 'org
  (require 'org-mu4e))

then mu4e is only loaded if either we follow a mu4e link from an org
buffer or we call the autoloaded function mu4e to read our emails.
Storing org-mode links from mu4e buffers is unaffected by this change
since org-mu4e-store-link only applies from mu4e buffers.
Regarding the second, experimental part of org-mu4e.el about editing
mails with org-mode, I am not completely sure but I think it should
also be unaffected since it also seems to only apply from mu4e buffers.",Thanks - and I have removed org-exp.,True,{}
djcb/mu,https://github.com/djcb/mu,1291,2018-07-13T14:48:46Z,2021-03-11T20:28:09Z,2021-03-11T20:28:09Z,CLOSED,False,5,1,2,https://github.com/ericdanan,Add custom variable mu4e-hide-main-view-buffer,1,[],https://github.com/djcb/mu/pull/1291,https://github.com/ericdanan,1,https://github.com/djcb/mu/pull/1291,"If non-nil, mu4e's main view buffer will be replaced with a minibuffer
prompt.
The function mu4e-main-view is modified to rely on this variable
rather than mu4e-split-view (currently, the minibuffer is used if
and only if mu4e-split-view is set to 'single-window. Thus one can
now use single-window mode together with the main view buffer (useful
e.g. with the mu4e-maildirs-extension package) or another view mode
together with the minibuffer menu.","If non-nil, mu4e's main view buffer will be replaced with a minibuffer
prompt.
The function mu4e-main-view is modified to rely on this variable
rather than mu4e-split-view (currently, the minibuffer is used if
and only if mu4e-split-view is set to 'single-window. Thus one can
now use single-window mode together with the main view buffer (useful
e.g. with the mu4e-maildirs-extension package) or another view mode
together with the minibuffer menu.",True,{}
djcb/mu,https://github.com/djcb/mu,1291,2018-07-13T14:48:46Z,2021-03-11T20:28:09Z,2021-03-11T20:28:09Z,CLOSED,False,5,1,2,https://github.com/ericdanan,Add custom variable mu4e-hide-main-view-buffer,1,[],https://github.com/djcb/mu/pull/1291,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1291#issuecomment-797027041,"If non-nil, mu4e's main view buffer will be replaced with a minibuffer
prompt.
The function mu4e-main-view is modified to rely on this variable
rather than mu4e-split-view (currently, the minibuffer is used if
and only if mu4e-split-view is set to 'single-window. Thus one can
now use single-window mode together with the main view buffer (useful
e.g. with the mu4e-maildirs-extension package) or another view mode
together with the minibuffer menu.",Seems this has gotten stale (sorry!),True,{}
djcb/mu,https://github.com/djcb/mu,1297,2018-08-11T18:41:42Z,2018-08-15T05:15:05Z,2018-08-15T05:15:12Z,MERGED,True,1,1,1,https://github.com/aluaces,Tiny fix in documentation,1,[],https://github.com/djcb/mu/pull/1297,https://github.com/aluaces,1,https://github.com/djcb/mu/pull/1297,,,True,{}
djcb/mu,https://github.com/djcb/mu,1297,2018-08-11T18:41:42Z,2018-08-15T05:15:05Z,2018-08-15T05:15:12Z,MERGED,True,1,1,1,https://github.com/aluaces,Tiny fix in documentation,1,[],https://github.com/djcb/mu/pull/1297,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1297#issuecomment-413096389,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1300,Fixes #1269,Fixes #1269,True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1300#issuecomment-413645188,Fixes #1269,Some reordering of the decoding functions also fixes the highlighting of the headers — done by gnus-article-prepare-display.,True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1300#issuecomment-413659581,Fixes #1269,"In the third commit, I removed
      (article-de-base64-unreadable)
      (article-de-quoted-unreadable)

because they cause problems with HTML messages — and B64 and quoted messages are decoded without those.",True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1300#issuecomment-414034456,Fixes #1269,"Would be good to separate the fixes from the new feature (and see the review comments).
I've found that it can be easy to fix some messages, yet breaking some others, so perhaps you can attach a (raw) message where this fixes things? Thnaks.",True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/1300#issuecomment-414039777,Fixes #1269,Maildir feature: #1303,True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/Chris00,6,https://github.com/djcb/mu/pull/1300#issuecomment-414040291,Fixes #1269,Fix header highlighting: #1304,True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/Chris00,7,https://github.com/djcb/mu/pull/1300#issuecomment-414040887,Fixes #1269,"see the review comments

I do not see any.",True,{}
djcb/mu,https://github.com/djcb/mu,1300,2018-08-16T17:58:03Z,2018-08-18T10:07:55Z,2018-08-18T10:07:55Z,CLOSED,False,22,6,1,https://github.com/Chris00,"view-gnus: Add ""Maildir"" + fix decoding & highlighting issues",5,[],https://github.com/djcb/mu/pull/1300,https://github.com/Chris00,8,https://github.com/djcb/mu/pull/1300#issuecomment-414041408,Fixes #1269,The decoding fix: #1305,True,{}
djcb/mu,https://github.com/djcb/mu,1303,2018-08-18T07:51:52Z,2020-02-19T18:57:07Z,2020-02-19T18:57:07Z,CLOSED,False,56,0,1,https://github.com/Chris00,view-gnus: Add mu4e headers before attachments,2,[],https://github.com/djcb/mu/pull/1303,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1303,Fixes #1269,Fixes #1269,True,{'THUMBS_UP': ['https://github.com/alexmurray']}
djcb/mu,https://github.com/djcb/mu,1303,2018-08-18T07:51:52Z,2020-02-19T18:57:07Z,2020-02-19T18:57:07Z,CLOSED,False,56,0,1,https://github.com/Chris00,view-gnus: Add mu4e headers before attachments,2,[],https://github.com/djcb/mu/pull/1303,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1303#issuecomment-421782044,Fixes #1269,Any remark on this patch?,True,{}
djcb/mu,https://github.com/djcb/mu,1303,2018-08-18T07:51:52Z,2020-02-19T18:57:07Z,2020-02-19T18:57:07Z,CLOSED,False,56,0,1,https://github.com/Chris00,view-gnus: Add mu4e headers before attachments,2,[],https://github.com/djcb/mu/pull/1303,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1303#issuecomment-511139036,Fixes #1269,@djcb The PR has been updated using `mu4e-view-fields' to add additional headers not handled by Gnus.  Any comments are welcome.,True,{}
djcb/mu,https://github.com/djcb/mu,1303,2018-08-18T07:51:52Z,2020-02-19T18:57:07Z,2020-02-19T18:57:07Z,CLOSED,False,56,0,1,https://github.com/Chris00,view-gnus: Add mu4e headers before attachments,2,[],https://github.com/djcb/mu/pull/1303,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1303#issuecomment-588387821,Fixes #1269,"Okay, finally had some time to look at this. This is a very useful feature, thanks for working on this!
Have merged this (locally) and pushed.",True,{}
djcb/mu,https://github.com/djcb/mu,1304,2018-08-18T08:01:48Z,2019-02-02T14:52:39Z,2020-02-21T17:55:25Z,CLOSED,False,20,4,1,https://github.com/Chris00,Fix header highlighting,2,[],https://github.com/djcb/mu/pull/1304,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1304,"Example of message fixed:
To: Christophe Troestler <Christophe.Troestler@umons.ac.be>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: =?iso-8859-1?Q?100%_:_crit=E8res_=3F?=
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","Example of message fixed:
To: Christophe Troestler <Christophe.Troestler@umons.ac.be>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: =?iso-8859-1?Q?100%_:_crit=E8res_=3F?=
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",True,{}
djcb/mu,https://github.com/djcb/mu,1304,2018-08-18T08:01:48Z,2019-02-02T14:52:39Z,2020-02-21T17:55:25Z,CLOSED,False,20,4,1,https://github.com/Chris00,Fix header highlighting,2,[],https://github.com/djcb/mu/pull/1304,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1304#issuecomment-414040326,"Example of message fixed:
To: Christophe Troestler <Christophe.Troestler@umons.ac.be>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: =?iso-8859-1?Q?100%_:_crit=E8res_=3F?=
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",Based on #1303,True,{}
djcb/mu,https://github.com/djcb/mu,1304,2018-08-18T08:01:48Z,2019-02-02T14:52:39Z,2020-02-21T17:55:25Z,CLOSED,False,20,4,1,https://github.com/Chris00,Fix header highlighting,2,[],https://github.com/djcb/mu/pull/1304,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1304#issuecomment-459971080,"Example of message fixed:
To: Christophe Troestler <Christophe.Troestler@umons.ac.be>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: =?iso-8859-1?Q?100%_:_crit=E8res_=3F?=
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",Merged in 156c421,True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1305,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1305#issuecomment-414041387,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",(Based on #1304),True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1305#issuecomment-414076017,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","I've found that it can be easy to fix some messages, yet breaking some others, so perhaps you can attach a (raw) message where this fixes things?

If you have some messages that are not fixed by this, could you please post them here?  I tried on messages from various sources (base64 encoded, flowed, HTML¹,...) and so far it seems to work well.
¹ I have (setq mu4e-view-prefer-html t).",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/1305#issuecomment-414258404,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","Here is an example of message that does not work with the above fix:
Content-Transfer-Encoding: 8bit
From: test <test@gmail.com>
Date: Mon, 20 Aug 2018 10:05:08 +0200
Content-Type: text/html; charset=""utf-8""
Subject: test

<html><body>
Afficher  Documents partagés
</body>
</html>

I am actually surprised that charset=""utf-8"" is not reflected anywhere in the msg structure.  This is a case where (mm-disable-multibyte) should be called because of this.  What is a proper test to know whether a charset was specified for the message?",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1305#issuecomment-414415321,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","In the example message, indeed the  (mm-enable-multibyte) helps. Good!
But what is this
(when (mu4e-message-field msg :body-txt-params)
        (mm-disable-multibyte))

supposed to do?
As for the charset, in mu-mode, we deliver utf8 to mu4e, ie. any conversion are done already. In gnus-mode, this is all handled by  the gnus message parser, ie. that does not use msg at all.",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,6,https://github.com/djcb/mu/pull/1305#issuecomment-414426329,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","It is necessary for messages such as
Subject: test
To: XX <XX@domain>
Date: Fri, 17 Aug 2018 18:18:07 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-BE

Je préfère

Moreover messages such as
Content-Transfer-Encoding: 8bit
From: test <test@gmail.com>
Date: Mon, 20 Aug 2018 10:05:08 +0200
Content-Type: text/html; charset=""utf-8""
Subject: test

<html><body>
Afficher  Documents partagés
</body>
</html>

are not decoded properly without (mm-disable-multibyte): the body decodes as Afficher Documents partagis while it should read Afficher Documents partagés.  The above condition (mu4e-message-field msg :body-txt-params) is not enough for that — in my repo I added a or condition with (mu4e-message-field msg :body-html) but it is still a hack.  Hopefully, you understand better than me what is going on...",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/djcb,7,https://github.com/djcb/mu/pull/1305#issuecomment-415947747,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","Thanks.
What I like to avoid though, is any use of msg for the gnus-version. Gnus is parsing that message, so it should be able to handle any decoding without anything that mu provides. We just have to find out how to do that...",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,8,https://github.com/djcb/mu/pull/1305#issuecomment-415994859,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","It seems that (mm-disable-multibyte) can always be used — I thought I had a message that was not working but I cannot find it — except in the draft folder (because messages do not have a charset I guess).  If
      (unless (string= (mu4e-message-field msg :maildir) mu4e-drafts-folder)
        (mm-disable-multibyte))
is not OK with you, one may first try to insert the message with (mm-disable-multibyte) and, if it turns out that it does not have a charset, reinsert it without disabling multibyte.",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,9,https://github.com/djcb/mu/pull/1305#issuecomment-415994904,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",The latter solution may also be useful for broken messages that do not specify charsets...,True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,10,https://github.com/djcb/mu/pull/1305#issuecomment-415997487,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",I have implemented the second solution — seems more robust to me.,True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,11,https://github.com/djcb/mu/pull/1305#issuecomment-417221164,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","The only thing that sometimes occurs whit this PR is that, after replying to a message, the *Article* buffer is redisplayed with incorrect decoding of accented letters.  Quitting the buffer and displaying it again performs the decoding properly.  For the particular message I just encounter:
Content-Type: text/html; charset=""iso-8859-1""
Content-Transfer-Encoding: quoted-printable",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,12,https://github.com/djcb/mu/pull/1305#issuecomment-459732830,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre",@djcb Any additional comments on this PR?,True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/djcb,13,https://github.com/djcb/mu/pull/1305#issuecomment-459958795,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","Thanks finally, had some time! It seems only the seconds commit makes a difference now, and it indeed fixes some of the problem cases. Great!
So I have installed that fix. The Maildir: addition... hmm, I'd like something a bit more generic (so people can add other headers). Have to think a bit about it.
So am going to close this one for now... but your fix is in, thanks again!",True,{}
djcb/mu,https://github.com/djcb/mu,1305,2018-08-18T08:23:27Z,2019-02-02T11:48:06Z,2019-02-02T15:11:13Z,CLOSED,False,28,8,1,https://github.com/Chris00,view-gnus: Fix body decoding problems,3,[],https://github.com/djcb/mu/pull/1305,https://github.com/Chris00,14,https://github.com/djcb/mu/pull/1305#issuecomment-459972538,"Example:
To: Sender <sender@gmail.com>
From: =?utf-8?Q?C=C3=A9line?= <XXX@gmail.com>
Subject: Body UTF-8 + flowed
Date: Tue, 12 Jun 2018 09:05:26 +0200
Content-Type: text/plain; charset=""utf-8""; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: fr-classic

répondre","The Maildir: addition... hmm, I'd like something a bit more generic (so people can add other headers). Have to think a bit about it.

OK.  If I can help, let me know.  (I prefer not to work on another PR without a sense of direction.)",True,{}
djcb/mu,https://github.com/djcb/mu,1307,2018-08-19T11:11:05Z,2021-06-17T17:43:32Z,2021-06-17T17:43:32Z,CLOSED,False,7,3,1,https://github.com/ericdanan,mu4e: fix mu4e-select-other-view for single-window mode,1,[],https://github.com/djcb/mu/pull/1307,https://github.com/ericdanan,1,https://github.com/djcb/mu/pull/1307,"In single-window mode, switch between the headers and view buffers.","In single-window mode, switch between the headers and view buffers.",True,{}
djcb/mu,https://github.com/djcb/mu,1307,2018-08-19T11:11:05Z,2021-06-17T17:43:32Z,2021-06-17T17:43:32Z,CLOSED,False,7,3,1,https://github.com/ericdanan,mu4e: fix mu4e-select-other-view for single-window mode,1,[],https://github.com/djcb/mu/pull/1307,https://github.com/vsedach,2,https://github.com/djcb/mu/pull/1307#issuecomment-530685259,"In single-window mode, switch between the headers and view buffers.","My fault, I did not test mu4e-select-other-view when making single-window mode (it never occurred to me, as I consider redundant, and avoid, buffer-switching and window management provided by application packages, which was the motivation for single-window mode).",True,{}
djcb/mu,https://github.com/djcb/mu,1307,2018-08-19T11:11:05Z,2021-06-17T17:43:32Z,2021-06-17T17:43:32Z,CLOSED,False,7,3,1,https://github.com/ericdanan,mu4e: fix mu4e-select-other-view for single-window mode,1,[],https://github.com/djcb/mu/pull/1307,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1307#issuecomment-863435836,"In single-window mode, switch between the headers and view buffers.","Thanks for the effort.. this doesn't apply anymore, so am going to close this. Sorry!",True,{}
djcb/mu,https://github.com/djcb/mu,1310,2018-08-23T22:17:12Z,2021-03-17T22:16:45Z,2021-03-17T22:16:46Z,CLOSED,False,9,2,1,https://github.com/ericdanan,org-mu4e: run hook before opening link,1,[],https://github.com/djcb/mu/pull/1310,https://github.com/ericdanan,1,https://github.com/djcb/mu/pull/1310,"The hook can be used in particular to open links in another window or
frame, e.g.:
(add-hook 'org-mu4e-open-pre-hook (lambda () (other-window 1)))","The hook can be used in particular to open links in another window or
frame, e.g.:
(add-hook 'org-mu4e-open-pre-hook (lambda () (other-window 1)))",True,{}
djcb/mu,https://github.com/djcb/mu,1310,2018-08-23T22:17:12Z,2021-03-17T22:16:45Z,2021-03-17T22:16:46Z,CLOSED,False,9,2,1,https://github.com/ericdanan,org-mu4e: run hook before opening link,1,[],https://github.com/djcb/mu/pull/1310,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1310#issuecomment-801478006,"The hook can be used in particular to open links in another window or
frame, e.g.:
(add-hook 'org-mu4e-open-pre-hook (lambda () (other-window 1)))","Org-mu4e has been obsolete for a long time, so no more updates, sorry...",True,{}
djcb/mu,https://github.com/djcb/mu,1311,2018-08-26T16:59:20Z,2021-03-11T20:18:26Z,2021-03-11T20:18:26Z,CLOSED,False,7,8,1,https://github.com/juergenhoetzel,mu4e: Don't descend in maildirs when recursively getting maildirs,1,[],https://github.com/djcb/mu/pull/1311,https://github.com/juergenhoetzel,1,https://github.com/djcb/mu/pull/1311,"maildirs are already the leaf nodes in the folder structure.
Also reduce number of intermediate (garbage collected) values.
I wondered why [j]ump to some maildir was a bit laggy on my system (I have a fairly large maildir structure).  This commit improves performance from:
ELISP> (benchmark 100 '(mu4e~get-maildirs-1 ""~/.mail/gmail/"" ""/""))
""Elapsed time: 52.475803s (12.332123s in 100 GCs)""

to
ELISP> (benchmark 100 '(mu4e~get-maildirs-1 ""~/.mail/gmail/"" ""/""))
""Elapsed time: 0.237148s (0.107507s in 1 GCs)""","maildirs are already the leaf nodes in the folder structure.
Also reduce number of intermediate (garbage collected) values.
I wondered why [j]ump to some maildir was a bit laggy on my system (I have a fairly large maildir structure).  This commit improves performance from:
ELISP> (benchmark 100 '(mu4e~get-maildirs-1 ""~/.mail/gmail/"" ""/""))
""Elapsed time: 52.475803s (12.332123s in 100 GCs)""

to
ELISP> (benchmark 100 '(mu4e~get-maildirs-1 ""~/.mail/gmail/"" ""/""))
""Elapsed time: 0.237148s (0.107507s in 1 GCs)""",True,{}
djcb/mu,https://github.com/djcb/mu,1311,2018-08-26T16:59:20Z,2021-03-11T20:18:26Z,2021-03-11T20:18:26Z,CLOSED,False,7,8,1,https://github.com/juergenhoetzel,mu4e: Don't descend in maildirs when recursively getting maildirs,1,[],https://github.com/djcb/mu/pull/1311,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1311#issuecomment-424817181,"maildirs are already the leaf nodes in the folder structure.
Also reduce number of intermediate (garbage collected) values.
I wondered why [j]ump to some maildir was a bit laggy on my system (I have a fairly large maildir structure).  This commit improves performance from:
ELISP> (benchmark 100 '(mu4e~get-maildirs-1 ""~/.mail/gmail/"" ""/""))
""Elapsed time: 52.475803s (12.332123s in 100 GCs)""

to
ELISP> (benchmark 100 '(mu4e~get-maildirs-1 ""~/.mail/gmail/"" ""/""))
""Elapsed time: 0.237148s (0.107507s in 1 GCs)""","The way it's done is explicitly to allow for deeper folders, which many people do have (e.g. ""Maildir/account1/folder1"" etc.) The speed-up you get is quite impressive though, bet that function can be optimized...",True,{}
djcb/mu,https://github.com/djcb/mu,1320,2018-09-18T02:47:05Z,2019-02-02T11:37:51Z,2019-02-02T14:04:01Z,MERGED,True,98,118,14,https://github.com/jabranham,mu4e: Replace cl with cl-lib,1,['needinfo'],https://github.com/djcb/mu/pull/1320,https://github.com/jabranham,1,https://github.com/djcb/mu/pull/1320,"Emacs 24.3 obsoletes the old cl library in favor of the namespace-clean cl-lib library (and adds some byte compile warnings about using cl at runtime). This PR removes most of the cl requires in favor of cl-lib since mu4e now requires Emacs 24.4+.
cl is still required at compile time for lexical-let in a few files.","Emacs 24.3 obsoletes the old cl library in favor of the namespace-clean cl-lib library (and adds some byte compile warnings about using cl at runtime). This PR removes most of the cl requires in favor of cl-lib since mu4e now requires Emacs 24.4+.
cl is still required at compile time for lexical-let in a few files.",True,{}
djcb/mu,https://github.com/djcb/mu,1320,2018-09-18T02:47:05Z,2019-02-02T11:37:51Z,2019-02-02T14:04:01Z,MERGED,True,98,118,14,https://github.com/jabranham,mu4e: Replace cl with cl-lib,1,['needinfo'],https://github.com/djcb/mu/pull/1320,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1320#issuecomment-424805877,"Emacs 24.3 obsoletes the old cl library in favor of the namespace-clean cl-lib library (and adds some byte compile warnings about using cl at runtime). This PR removes most of the cl requires in favor of cl-lib since mu4e now requires Emacs 24.4+.
cl is still required at compile time for lexical-let in a few files.","Hmm, I'm okay with using the new library, but I don't really like cl- prefixes for all calls... can you make a version without those?",True,{}
djcb/mu,https://github.com/djcb/mu,1320,2018-09-18T02:47:05Z,2019-02-02T11:37:51Z,2019-02-02T14:04:01Z,MERGED,True,98,118,14,https://github.com/jabranham,mu4e: Replace cl with cl-lib,1,['needinfo'],https://github.com/djcb/mu/pull/1320,https://github.com/jabranham,3,https://github.com/djcb/mu/pull/1320#issuecomment-425421517,"Emacs 24.3 obsoletes the old cl library in favor of the namespace-clean cl-lib library (and adds some byte compile warnings about using cl at runtime). This PR removes most of the cl requires in favor of cl-lib since mu4e now requires Emacs 24.4+.
cl is still required at compile time for lexical-let in a few files.",Moving everything into the cl- pseudo namespace was one reason for the cl-lib library's creation. That's why the byte compiler warns about requiring cl at runtime; it's worried about namespace conflicts.,True,{'THUMBS_UP': ['https://github.com/sje30']}
djcb/mu,https://github.com/djcb/mu,1320,2018-09-18T02:47:05Z,2019-02-02T11:37:51Z,2019-02-02T14:04:01Z,MERGED,True,98,118,14,https://github.com/jabranham,mu4e: Replace cl with cl-lib,1,['needinfo'],https://github.com/djcb/mu/pull/1320,https://github.com/jabranham,4,https://github.com/djcb/mu/pull/1320#issuecomment-443870440,"Emacs 24.3 obsoletes the old cl library in favor of the namespace-clean cl-lib library (and adds some byte compile warnings about using cl at runtime). This PR removes most of the cl requires in favor of cl-lib since mu4e now requires Emacs 24.4+.
cl is still required at compile time for lexical-let in a few files.",@djcb have you had any time to think about this more?,True,{}
djcb/mu,https://github.com/djcb/mu,1320,2018-09-18T02:47:05Z,2019-02-02T11:37:51Z,2019-02-02T14:04:01Z,MERGED,True,98,118,14,https://github.com/jabranham,mu4e: Replace cl with cl-lib,1,['needinfo'],https://github.com/djcb/mu/pull/1320,https://github.com/toogley,5,https://github.com/djcb/mu/pull/1320#issuecomment-449968026,"Emacs 24.3 obsoletes the old cl library in favor of the namespace-clean cl-lib library (and adds some byte compile warnings about using cl at runtime). This PR removes most of the cl requires in favor of cl-lib since mu4e now requires Emacs 24.4+.
cl is still required at compile time for lexical-let in a few files.",@djcb you can hide the namespace with https://github.com/Malabarba/names or https://github.com/Malabarba/Nameless,True,{}
djcb/mu,https://github.com/djcb/mu,1320,2018-09-18T02:47:05Z,2019-02-02T11:37:51Z,2019-02-02T14:04:01Z,MERGED,True,98,118,14,https://github.com/jabranham,mu4e: Replace cl with cl-lib,1,['needinfo'],https://github.com/djcb/mu/pull/1320,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1320#issuecomment-459958230,"Emacs 24.3 obsoletes the old cl library in favor of the namespace-clean cl-lib library (and adds some byte compile warnings about using cl at runtime). This PR removes most of the cl requires in favor of cl-lib since mu4e now requires Emacs 24.4+.
cl is still required at compile time for lexical-let in a few files.","Yeah, let's take it. Thanks!",True,{'HOORAY': ['https://github.com/jabranham']}
djcb/mu,https://github.com/djcb/mu,1322,2018-09-21T04:16:05Z,2018-10-09T05:10:17Z,2018-10-09T05:10:27Z,MERGED,True,1,1,1,https://github.com/yiufung,org-mu4e: fix org-mu4e-store-and-capture for Org 9.0,1,['needinfo'],https://github.com/djcb/mu/pull/1322,https://github.com/yiufung,1,https://github.com/djcb/mu/pull/1322,"#920 fix links in Org 9 (Related discussion: #947). At the same time, org-mu4e-store-and-capture is still using org-mu4e-store-link only, so it doesn't work in Org 9. Fix by interactively calling org-store-link instead.","#920 fix links in Org 9 (Related discussion: #947). At the same time, org-mu4e-store-and-capture is still using org-mu4e-store-link only, so it doesn't work in Org 9. Fix by interactively calling org-store-link instead.",True,{}
djcb/mu,https://github.com/djcb/mu,1322,2018-09-21T04:16:05Z,2018-10-09T05:10:17Z,2018-10-09T05:10:27Z,MERGED,True,1,1,1,https://github.com/yiufung,org-mu4e: fix org-mu4e-store-and-capture for Org 9.0,1,['needinfo'],https://github.com/djcb/mu/pull/1322,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1322#issuecomment-424804262,"#920 fix links in Org 9 (Related discussion: #947). At the same time, org-mu4e-store-and-capture is still using org-mu4e-store-link only, so it doesn't work in Org 9. Fix by interactively calling org-store-link instead.",Does this still work with org 8.x?,True,{}
djcb/mu,https://github.com/djcb/mu,1322,2018-09-21T04:16:05Z,2018-10-09T05:10:17Z,2018-10-09T05:10:27Z,MERGED,True,1,1,1,https://github.com/yiufung,org-mu4e: fix org-mu4e-store-and-capture for Org 9.0,1,['needinfo'],https://github.com/djcb/mu/pull/1322,https://github.com/yiufung,3,https://github.com/djcb/mu/pull/1322#issuecomment-425463235,"#920 fix links in Org 9 (Related discussion: #947). At the same time, org-mu4e-store-and-capture is still using org-mu4e-store-link only, so it doesn't work in Org 9. Fix by interactively calling org-store-link instead.","I tried to reproduce it with Org 8, seems fine to me. Couldn't find Org 8 source code on official site, so I used John Wiegley's old fork, which is of version 8.2.3c. The init file is here.",True,{}
djcb/mu,https://github.com/djcb/mu,1322,2018-09-21T04:16:05Z,2018-10-09T05:10:17Z,2018-10-09T05:10:27Z,MERGED,True,1,1,1,https://github.com/yiufung,org-mu4e: fix org-mu4e-store-and-capture for Org 9.0,1,['needinfo'],https://github.com/djcb/mu/pull/1322,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1322#issuecomment-428061783,"#920 fix links in Org 9 (Related discussion: #947). At the same time, org-mu4e-store-and-capture is still using org-mu4e-store-link only, so it doesn't work in Org 9. Fix by interactively calling org-store-link instead.","Okay, merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1328,2018-10-13T10:55:24Z,2020-02-08T22:24:33Z,2020-02-08T22:24:47Z,MERGED,True,4,2,1,https://github.com/pitti,mu4e: restrict deleting trailing whitespace to region,1,[],https://github.com/djcb/mu/pull/1328,https://github.com/pitti,1,https://github.com/djcb/mu/pull/1328,"If no region is selected, mu4e-fill-paragraph will delete trailing whitespace on
all lines in the buffer.  This might not be desired, e.g. when adding a
signature to the mail which is delimited by the line '-- '.","If no region is selected, mu4e-fill-paragraph will delete trailing whitespace on
all lines in the buffer.  This might not be desired, e.g. when adding a
signature to the mail which is delimited by the line '-- '.",True,{}
djcb/mu,https://github.com/djcb/mu,1328,2018-10-13T10:55:24Z,2020-02-08T22:24:33Z,2020-02-08T22:24:47Z,MERGED,True,4,2,1,https://github.com/pitti,mu4e: restrict deleting trailing whitespace to region,1,[],https://github.com/djcb/mu/pull/1328,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1328#issuecomment-435576579,"If no region is selected, mu4e-fill-paragraph will delete trailing whitespace on
all lines in the buffer.  This might not be desired, e.g. when adding a
signature to the mail which is delimited by the line '-- '.",This would break some current behavior in addition to fixing something. Perhaps we should stop filling when we encounter -- ?,True,{}
djcb/mu,https://github.com/djcb/mu,1328,2018-10-13T10:55:24Z,2020-02-08T22:24:33Z,2020-02-08T22:24:47Z,MERGED,True,4,2,1,https://github.com/pitti,mu4e: restrict deleting trailing whitespace to region,1,[],https://github.com/djcb/mu/pull/1328,https://github.com/pitti,3,https://github.com/djcb/mu/pull/1328#issuecomment-435893227,"If no region is selected, mu4e-fill-paragraph will delete trailing whitespace on
all lines in the buffer.  This might not be desired, e.g. when adding a
signature to the mail which is delimited by the line '-- '.","I think the effect of cleaning whitespaces on the whole file, even when the command pretends to work only on the current line seems to hide more issues than it solves.  I'm not sure what behaviour breaks with this change.  Can you elaborate that point?",True,{}
djcb/mu,https://github.com/djcb/mu,1328,2018-10-13T10:55:24Z,2020-02-08T22:24:33Z,2020-02-08T22:24:47Z,MERGED,True,4,2,1,https://github.com/pitti,mu4e: restrict deleting trailing whitespace to region,1,[],https://github.com/djcb/mu/pull/1328,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1328#issuecomment-583782757,"If no region is selected, mu4e-fill-paragraph will delete trailing whitespace on
all lines in the buffer.  This might not be desired, e.g. when adding a
signature to the mail which is delimited by the line '-- '.","Okay, that's true... let's merge this. Merged --thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1334,2018-10-31T22:03:25Z,2019-09-08T14:34:31Z,2019-09-08T14:34:32Z,CLOSED,False,4,3,1,https://github.com/ian-kelling,doc: mu-query: add unseen flag and sort flags,1,[],https://github.com/djcb/mu/pull/1334,https://github.com/ian-kelling,1,https://github.com/djcb/mu/pull/1334,,,True,{}
djcb/mu,https://github.com/djcb/mu,1334,2018-10-31T22:03:25Z,2019-09-08T14:34:31Z,2019-09-08T14:34:32Z,CLOSED,False,4,3,1,https://github.com/ian-kelling,doc: mu-query: add unseen flag and sort flags,1,[],https://github.com/djcb/mu/pull/1334,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1334#issuecomment-435576411,,Thanks -- but note that unread (not 'unseen') is a synonym for flag:new OR NOT flag:seen.,True,{}
djcb/mu,https://github.com/djcb/mu,1334,2018-10-31T22:03:25Z,2019-09-08T14:34:31Z,2019-09-08T14:34:32Z,CLOSED,False,4,3,1,https://github.com/ian-kelling,doc: mu-query: add unseen flag and sort flags,1,[],https://github.com/djcb/mu/pull/1334,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1334#issuecomment-529208138,,Updated the manpage -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1336,2018-11-05T12:22:53Z,2018-11-05T22:09:12Z,2018-11-05T22:09:12Z,CLOSED,False,2,2,1,https://github.com/wavexx,Fix missing continuation in tests/Makefile.am,1,[],https://github.com/djcb/mu/pull/1336,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1336,"Fix tests/Makefile.am not expanding properly.
Probably caused by the recent asan changes.","Fix tests/Makefile.am not expanding properly.
Probably caused by the recent asan changes.",True,{}
djcb/mu,https://github.com/djcb/mu,1336,2018-11-05T12:22:53Z,2018-11-05T22:09:12Z,2018-11-05T22:09:12Z,CLOSED,False,2,2,1,https://github.com/wavexx,Fix missing continuation in tests/Makefile.am,1,[],https://github.com/djcb/mu/pull/1336,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1336#issuecomment-436054066,"Fix tests/Makefile.am not expanding properly.
Probably caused by the recent asan changes.",Thanks -- fixed.,True,{}
djcb/mu,https://github.com/djcb/mu,1338,2018-11-11T06:36:22Z,2018-11-19T18:59:51Z,2018-11-19T19:00:03Z,MERGED,True,27,5,2,https://github.com/ibizaman,mu4e: allow :query to accept a function returning a query string,1,[],https://github.com/djcb/mu/pull/1338,https://github.com/ibizaman,1,https://github.com/djcb/mu/pull/1338,"This allows one to dynamically generate the query string, based for example on the value of a variable.
I added an example in the manual, but actually my real motivation is the following feature.
I'm subscribed to a bunch of mailing lists and they're quite noisy. So I don't want to see them in my standard unread bookmark. Because I don't want to hardcode this list of mailing lists to exclude, I store them in a variable.
I have a header view action to add the current message's mailing list to that variable.
And I have another bookmark that shows the unread messages for only one list, by asking me what list I want to look at.
(defcustom ibizaman/mu4e-unread-excluded-lists nil
  ""Mailing lists to be excluded from default unread view.""
  :group 'mu4e
  :type '(repeat string))

(defun ibizaman/mu4e-add-message-list-to-excluded-lists (msg)
  (let ((list (mu4e-message-field msg :mailing-list)))
    (add-to-list 'ibizaman/mu4e-unread-excluded-lists list)
    (message ""Added %s to excluded list"" list)))

(add-to-list 'mu4e-headers-actions
             '(""Exclude list"" . ibizaman/mu4e-add-message-list-to-excluded-lists) t)

(defun ibizaman/mu4e-generate-unread-filter ()
  (concat ""flag:unread AND NOT flag:trashed""
          (mapconcat (lambda (v) (concat "" AND NOT list:"" v))
                     ibizaman/mu4e-unread-excluded-lists """")))

(defun ibizaman/mu4e-get-unread-list-filter-query (wanted-list)
  (interactive (list (completing-read ""List: "" ibizaman/mu4e-unread-excluded-lists)))
  (concat ""flag:unread AND NOT flag:trashed AND list:"" wanted-list))

(setq mu4e-bookmarks
      `(,(make-mu4e-bookmark
          :name  ""Unread messages not list""
          :query (lambda () (ibizaman/mu4e-generate-unread-filter))
          :key ?u)
        ,(make-mu4e-bookmark
          :name  ""Unread list messages""
          :query (lambda () (call-interactively 'ibizaman/mu4e-get-unread-list-filter-query))
          :key ?l))","This allows one to dynamically generate the query string, based for example on the value of a variable.
I added an example in the manual, but actually my real motivation is the following feature.
I'm subscribed to a bunch of mailing lists and they're quite noisy. So I don't want to see them in my standard unread bookmark. Because I don't want to hardcode this list of mailing lists to exclude, I store them in a variable.
I have a header view action to add the current message's mailing list to that variable.
And I have another bookmark that shows the unread messages for only one list, by asking me what list I want to look at.
(defcustom ibizaman/mu4e-unread-excluded-lists nil
  ""Mailing lists to be excluded from default unread view.""
  :group 'mu4e
  :type '(repeat string))

(defun ibizaman/mu4e-add-message-list-to-excluded-lists (msg)
  (let ((list (mu4e-message-field msg :mailing-list)))
    (add-to-list 'ibizaman/mu4e-unread-excluded-lists list)
    (message ""Added %s to excluded list"" list)))

(add-to-list 'mu4e-headers-actions
             '(""Exclude list"" . ibizaman/mu4e-add-message-list-to-excluded-lists) t)

(defun ibizaman/mu4e-generate-unread-filter ()
  (concat ""flag:unread AND NOT flag:trashed""
          (mapconcat (lambda (v) (concat "" AND NOT list:"" v))
                     ibizaman/mu4e-unread-excluded-lists """")))

(defun ibizaman/mu4e-get-unread-list-filter-query (wanted-list)
  (interactive (list (completing-read ""List: "" ibizaman/mu4e-unread-excluded-lists)))
  (concat ""flag:unread AND NOT flag:trashed AND list:"" wanted-list))

(setq mu4e-bookmarks
      `(,(make-mu4e-bookmark
          :name  ""Unread messages not list""
          :query (lambda () (ibizaman/mu4e-generate-unread-filter))
          :key ?u)
        ,(make-mu4e-bookmark
          :name  ""Unread list messages""
          :query (lambda () (call-interactively 'ibizaman/mu4e-get-unread-list-filter-query))
          :key ?l))",True,{}
djcb/mu,https://github.com/djcb/mu,1338,2018-11-11T06:36:22Z,2018-11-19T18:59:51Z,2018-11-19T19:00:03Z,MERGED,True,27,5,2,https://github.com/ibizaman,mu4e: allow :query to accept a function returning a query string,1,[],https://github.com/djcb/mu/pull/1338,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1338#issuecomment-440004275,"This allows one to dynamically generate the query string, based for example on the value of a variable.
I added an example in the manual, but actually my real motivation is the following feature.
I'm subscribed to a bunch of mailing lists and they're quite noisy. So I don't want to see them in my standard unread bookmark. Because I don't want to hardcode this list of mailing lists to exclude, I store them in a variable.
I have a header view action to add the current message's mailing list to that variable.
And I have another bookmark that shows the unread messages for only one list, by asking me what list I want to look at.
(defcustom ibizaman/mu4e-unread-excluded-lists nil
  ""Mailing lists to be excluded from default unread view.""
  :group 'mu4e
  :type '(repeat string))

(defun ibizaman/mu4e-add-message-list-to-excluded-lists (msg)
  (let ((list (mu4e-message-field msg :mailing-list)))
    (add-to-list 'ibizaman/mu4e-unread-excluded-lists list)
    (message ""Added %s to excluded list"" list)))

(add-to-list 'mu4e-headers-actions
             '(""Exclude list"" . ibizaman/mu4e-add-message-list-to-excluded-lists) t)

(defun ibizaman/mu4e-generate-unread-filter ()
  (concat ""flag:unread AND NOT flag:trashed""
          (mapconcat (lambda (v) (concat "" AND NOT list:"" v))
                     ibizaman/mu4e-unread-excluded-lists """")))

(defun ibizaman/mu4e-get-unread-list-filter-query (wanted-list)
  (interactive (list (completing-read ""List: "" ibizaman/mu4e-unread-excluded-lists)))
  (concat ""flag:unread AND NOT flag:trashed AND list:"" wanted-list))

(setq mu4e-bookmarks
      `(,(make-mu4e-bookmark
          :name  ""Unread messages not list""
          :query (lambda () (ibizaman/mu4e-generate-unread-filter))
          :key ?u)
        ,(make-mu4e-bookmark
          :name  ""Unread list messages""
          :query (lambda () (call-interactively 'ibizaman/mu4e-get-unread-list-filter-query))
          :key ?l))",Looks good - merged. Thanks!,True,{'HOORAY': ['https://github.com/ibizaman']}
djcb/mu,https://github.com/djcb/mu,1340,2018-11-14T01:08:29Z,2018-11-19T19:02:07Z,2018-11-19T19:02:12Z,MERGED,True,1,0,1,https://github.com/alexmurray,Non-breaking spaces should be replaced with a space and not removed,1,[],https://github.com/djcb/mu/pull/1340,https://github.com/alexmurray,1,https://github.com/djcb/mu/pull/1340,Fixes #1339,Fixes #1339,True,{}
djcb/mu,https://github.com/djcb/mu,1340,2018-11-14T01:08:29Z,2018-11-19T19:02:07Z,2018-11-19T19:02:12Z,MERGED,True,1,0,1,https://github.com/alexmurray,Non-breaking spaces should be replaced with a space and not removed,1,[],https://github.com/djcb/mu/pull/1340,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1340#issuecomment-440004968,Fixes #1339,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1341,2018-11-18T15:33:10Z,2018-11-19T19:40:53Z,2018-11-19T19:41:02Z,MERGED,True,15,12,1,https://github.com/abo-abo,mu4e/mu4e-view.el (mu4e-view-open-attachment): Ensure attachments are set,1,[],https://github.com/djcb/mu/pull/1341,https://github.com/abo-abo,1,https://github.com/djcb/mu/pull/1341,"Before this change, I would press ""o"" and `mu4e~view-attach-map' would
be nil. Now it works as expected.","Before this change, I would press ""o"" and `mu4e~view-attach-map' would
be nil. Now it works as expected.",True,{}
djcb/mu,https://github.com/djcb/mu,1341,2018-11-18T15:33:10Z,2018-11-19T19:40:53Z,2018-11-19T19:41:02Z,MERGED,True,15,12,1,https://github.com/abo-abo,mu4e/mu4e-view.el (mu4e-view-open-attachment): Ensure attachments are set,1,[],https://github.com/djcb/mu/pull/1341,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1341#issuecomment-440017052,"Before this change, I would press ""o"" and `mu4e~view-attach-map' would
be nil. Now it works as expected.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1359,2019-01-11T05:54:28Z,2019-01-17T20:26:51Z,2019-01-17T20:26:51Z,MERGED,True,2,7,3,https://github.com/OnkelUlla,Fix compiler warnings,2,[],https://github.com/djcb/mu/pull/1359,https://github.com/OnkelUlla,1,https://github.com/djcb/mu/pull/1359,,,True,{}
djcb/mu,https://github.com/djcb/mu,1359,2019-01-11T05:54:28Z,2019-01-17T20:26:51Z,2019-01-17T20:26:51Z,MERGED,True,2,7,3,https://github.com/OnkelUlla,Fix compiler warnings,2,[],https://github.com/djcb/mu/pull/1359,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1359#issuecomment-455319803,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1360,2019-01-11T08:21:36Z,2019-01-25T07:06:02Z,2019-01-25T07:07:16Z,MERGED,True,9,4,1,https://github.com/rhdxmr,mu4e: Fix jumping to specific header in unselect window,2,[],https://github.com/djcb/mu/pull/1360,https://github.com/rhdxmr,1,https://github.com/djcb/mu/pull/1360,"While I am reading a message in a split view, the cursor of mu4e-headers window moves to top after auto updation and rerun-search.
I found mu4e call mu4e-headers-goto-message-id but it failed to jump to the specific header if the buffer is currently inside unselect window.
Also mu4e~headers-highlight function has similar problem, but it works with with-current-buffer macro.","While I am reading a message in a split view, the cursor of mu4e-headers window moves to top after auto updation and rerun-search.
I found mu4e call mu4e-headers-goto-message-id but it failed to jump to the specific header if the buffer is currently inside unselect window.
Also mu4e~headers-highlight function has similar problem, but it works with with-current-buffer macro.",True,{}
djcb/mu,https://github.com/djcb/mu,1360,2019-01-11T08:21:36Z,2019-01-25T07:06:02Z,2019-01-25T07:07:16Z,MERGED,True,9,4,1,https://github.com/rhdxmr,mu4e: Fix jumping to specific header in unselect window,2,[],https://github.com/djcb/mu/pull/1360,https://github.com/rhdxmr,2,https://github.com/djcb/mu/pull/1360#issuecomment-457464465,"While I am reading a message in a split view, the cursor of mu4e-headers window moves to top after auto updation and rerun-search.
I found mu4e call mu4e-headers-goto-message-id but it failed to jump to the specific header if the buffer is currently inside unselect window.
Also mu4e~headers-highlight function has similar problem, but it works with with-current-buffer macro.","@djcb
Is this pr unacceptable? If it is, could you tell me why? Then I will correct my pr.",True,{}
djcb/mu,https://github.com/djcb/mu,1360,2019-01-11T08:21:36Z,2019-01-25T07:06:02Z,2019-01-25T07:07:16Z,MERGED,True,9,4,1,https://github.com/rhdxmr,mu4e: Fix jumping to specific header in unselect window,2,[],https://github.com/djcb/mu/pull/1360,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1360#issuecomment-457476891,"While I am reading a message in a split view, the cursor of mu4e-headers window moves to top after auto updation and rerun-search.
I found mu4e call mu4e-headers-goto-message-id but it failed to jump to the specific header if the buffer is currently inside unselect window.
Also mu4e~headers-highlight function has similar problem, but it works with with-current-buffer macro.",Merged -- thanks. Due to my schedule it can take some time...,True,{'HEART': ['https://github.com/rhdxmr']}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/Ambrevar,1,https://github.com/djcb/mu/pull/1362,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)","This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)",True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/Ambrevar,2,https://github.com/djcb/mu/pull/1362#issuecomment-457819251,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)",Did you have time to look at this?,True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1362#issuecomment-457871319,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)","No much time -- and I'm traveling... sorry.
Anyway, I like the idea of having a simple way to setup an account, but I think the plain context should not have the extra defaults, I think that should be purely be done through the accounts-setup-helper.
Also, I think the documentation needs some explanation on how to get the context object the setup-helper creates; I think many users aren't necessarily familiar with the steps to do that.
What do you think?",True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/edumerco,4,https://github.com/djcb/mu/pull/1362#issuecomment-458707333,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)","Hello everyone.
 [...] I like the idea of having a simple way to setup an account
 [...]
Me too (it wasn't easy to start, but I was learning emacs at the
same time).

Just to check... it is too crazy to make a guide that asks
questions (a wizard?) and results in/outputs a basic configuration
in a file?
If yes, I can't code but can do the desition tree and the texts.
…
-- 
eduardo mercovich

 Donde se cruzan tus talentos
 con las necesidades del mundo,
 ahí está tu vocación.
 (Anónimo)",True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/Ambrevar,5,https://github.com/djcb/mu/pull/1362#issuecomment-469294494,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)",@edumerco : That would be a very good idea.  My patch is a first step in that direction.,True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/edumerco,6,https://github.com/djcb/mu/pull/1362#issuecomment-469296278,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)","Hi Pierre.

I'm a UX guy, just tell me when we do start working on this and we'll
arrange it somehow. :)

Best...
…
-- 
eduardo mercovich

Donde se cruzan tus talentos
con las necesidades del mundo
ahí está tu vocación.

El lun., 4 mar. 2019 12:29, Pierre Neidhardt <notifications@github.com>
escribió:
 @edumerco <https://github.com/edumerco> : That would be a very good idea.
 My patch is a first step in that direction.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#1362 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ABPo574VfUIQfvAQskXTJN_QK4zWUjGLks5vTTvdgaJpZM4Z95NY>
 .",True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/Ambrevar,7,https://github.com/djcb/mu/pull/1362#issuecomment-469297379,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)","Hi @edumerco,
Thanks for the offer but after this patch I won't have time to work on mu4e anytime soon.
Your best bet is to see with @djcb.  I suggest you open an issue to make the discussion publicly visible.",True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/Ambrevar,8,https://github.com/djcb/mu/pull/1362#issuecomment-469297857,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)",@djcb: Sorry for the delay.  I've taken your changes into account.  We still need some testing :p,True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/edumerco,9,https://github.com/djcb/mu/pull/1362#issuecomment-469299841,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)","Hi Pierre.

I can only do it with others, so I'll wait until at least one other wants
to do this too... :)

Best regards...
…
-- 
eduardo mercovich

Donde se cruzan tus talentos
con las necesidades del mundo
ahí está tu vocación.

El lun., 4 mar. 2019 12:36, Pierre Neidhardt <notifications@github.com>
escribió:
 Hi @edumerco <https://github.com/edumerco>,
 Thanks for the offer but after this patch I won't have time to work on
 mu4e anytime soon.
 Your best bet is to see with @djcb <https://github.com/djcb>. I suggest
 you open an issue to make the discussion publicly visible.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#1362 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ABPo50moQFfP_WsaAgV8VKpn-aY7Qh3Kks5vTT2QgaJpZM4Z95NY>
 .",True,{}
djcb/mu,https://github.com/djcb/mu,1362,2019-01-14T09:41:36Z,2019-04-21T19:18:16Z,2019-04-21T19:18:16Z,CLOSED,False,226,6,4,https://github.com/Ambrevar,Account setup helper + Gmail trash fix,4,[],https://github.com/djcb/mu/pull/1362,https://github.com/djcb,10,https://github.com/djcb/mu/pull/1362#issuecomment-485275740,"This is a first shot at implementing #1357.
It needs some testing and the documentation surely needs some editing :)",Note that this has been superseded by #1390 which has been merged.,True,{}
djcb/mu,https://github.com/djcb/mu,1368,2019-01-22T17:15:35Z,2019-02-02T11:34:26Z,2019-02-02T11:34:26Z,MERGED,True,5,4,2,https://github.com/oleskiewicz,mu-config: add NO_COLOR environment variable,4,[],https://github.com/djcb/mu/pull/1368,https://github.com/oleskiewicz,1,https://github.com/djcb/mu/pull/1368,"Other than MU_NOCOLOR, there is a conventional environment variable NO_COLOR, which is shared across many other projects – see https://no-color.org.
This is a very simple change which would make mu support that.","Other than MU_NOCOLOR, there is a conventional environment variable NO_COLOR, which is shared across many other projects – see https://no-color.org.
This is a very simple change which would make mu support that.",True,{}
djcb/mu,https://github.com/djcb/mu,1368,2019-01-22T17:15:35Z,2019-02-02T11:34:26Z,2019-02-02T11:34:26Z,MERGED,True,5,4,2,https://github.com/oleskiewicz,mu-config: add NO_COLOR environment variable,4,[],https://github.com/djcb/mu/pull/1368,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1368#issuecomment-457831878,"Other than MU_NOCOLOR, there is a conventional environment variable NO_COLOR, which is shared across many other projects – see https://no-color.org.
This is a very simple change which would make mu support that.",Where is NO_COLOR defined?,True,{}
djcb/mu,https://github.com/djcb/mu,1368,2019-01-22T17:15:35Z,2019-02-02T11:34:26Z,2019-02-02T11:34:26Z,MERGED,True,5,4,2,https://github.com/oleskiewicz,mu-config: add NO_COLOR environment variable,4,[],https://github.com/djcb/mu/pull/1368,https://github.com/oleskiewicz,3,https://github.com/djcb/mu/pull/1368#issuecomment-458188450,"Other than MU_NOCOLOR, there is a conventional environment variable NO_COLOR, which is shared across many other projects – see https://no-color.org.
This is a very simple change which would make mu support that.","I forgot to surround it with the inverted commas, my apologies.",True,{}
djcb/mu,https://github.com/djcb/mu,1372,2019-01-29T09:36:48Z,2019-02-02T11:32:58Z,2019-02-02T13:33:02Z,MERGED,True,9,6,1,https://github.com/Chris00,Set mml-enable-flowed according to mu4e-compose-format-flowed,1,[],https://github.com/djcb/mu/pull/1372,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1372,Fixes #1358,Fixes #1358,True,{}
djcb/mu,https://github.com/djcb/mu,1372,2019-01-29T09:36:48Z,2019-02-02T11:32:58Z,2019-02-02T13:33:02Z,MERGED,True,9,6,1,https://github.com/Chris00,Set mml-enable-flowed according to mu4e-compose-format-flowed,1,[],https://github.com/djcb/mu/pull/1372,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1372#issuecomment-458472080,Fixes #1358,@loysollivier may you please test with this patch?,True,{}
djcb/mu,https://github.com/djcb/mu,1372,2019-01-29T09:36:48Z,2019-02-02T11:32:58Z,2019-02-02T13:33:02Z,MERGED,True,9,6,1,https://github.com/Chris00,Set mml-enable-flowed according to mu4e-compose-format-flowed,1,[],https://github.com/djcb/mu/pull/1372,https://github.com/loysollivier,3,https://github.com/djcb/mu/pull/1372#issuecomment-458483045,Fixes #1358,"@Chris00 - Yeap that works.
If mu4e-compose-format-flowed is enable message has format=flowed in the header
Otherwise it does not.
Tested-by: Loys Ollivier loys.ollivier@gmail.com
thank you 👍",True,{}
djcb/mu,https://github.com/djcb/mu,1372,2019-01-29T09:36:48Z,2019-02-02T11:32:58Z,2019-02-02T13:33:02Z,MERGED,True,9,6,1,https://github.com/Chris00,Set mml-enable-flowed according to mu4e-compose-format-flowed,1,[],https://github.com/djcb/mu/pull/1372,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1372#issuecomment-459957948,Fixes #1358,"Looks good, thanks! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1374,2019-02-02T14:50:11Z,2019-04-27T05:21:10Z,2020-02-21T17:55:33Z,MERGED,True,7,1,2,https://github.com/Chris00,Increase `max-specpdl-size' when decoding messages,1,[],https://github.com/djcb/mu/pull/1374,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1374,"Some messages (e.g. Outlook automatic replies) need a greater value
than the default one of `max-specpdl-size' to be displayed properly.
An example of such message is attached","Some messages (e.g. Outlook automatic replies) need a greater value
than the default one of `max-specpdl-size' to be displayed properly.
An example of such message is attached",True,{}
djcb/mu,https://github.com/djcb/mu,1374,2019-02-02T14:50:11Z,2019-04-27T05:21:10Z,2020-02-21T17:55:33Z,MERGED,True,7,1,2,https://github.com/Chris00,Increase `max-specpdl-size' when decoding messages,1,[],https://github.com/djcb/mu/pull/1374,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1374#issuecomment-484061075,"Some messages (e.g. Outlook automatic replies) need a greater value
than the default one of `max-specpdl-size' to be displayed properly.
An example of such message is attached",Any opinion on this PR?,True,{}
djcb/mu,https://github.com/djcb/mu,1374,2019-02-02T14:50:11Z,2019-04-27T05:21:10Z,2020-02-21T17:55:33Z,MERGED,True,7,1,2,https://github.com/Chris00,Increase `max-specpdl-size' when decoding messages,1,[],https://github.com/djcb/mu/pull/1374,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1374#issuecomment-487256346,"Some messages (e.g. Outlook automatic replies) need a greater value
than the default one of `max-specpdl-size' to be displayed properly.
An example of such message is attached","I'm not too fond of influencing emacs internals like this... but I guess here it's justified (and only let-bound).
So, merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1375,2019-02-02T15:05:42Z,2019-02-12T12:52:00Z,2019-02-12T22:25:37Z,MERGED,True,7,6,1,https://github.com/Chris00,mu4e: properly display messages in the draft folder (with gnus),2,[],https://github.com/djcb/mu/pull/1375,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1375,This is necessary to display messages with UFT-8 chars when visiting the draft folder.  Here is an example of such a message.,This is necessary to display messages with UFT-8 chars when visiting the draft folder.  Here is an example of such a message.,True,{}
djcb/mu,https://github.com/djcb/mu,1375,2019-02-02T15:05:42Z,2019-02-12T12:52:00Z,2019-02-12T22:25:37Z,MERGED,True,7,6,1,https://github.com/Chris00,mu4e: properly display messages in the draft folder (with gnus),2,[],https://github.com/djcb/mu/pull/1375,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1375#issuecomment-459977646,This is necessary to display messages with UFT-8 chars when visiting the draft folder.  Here is an example of such a message.,"I added a commit that removes
      (article-de-base64-unreadable)
      (article-de-quoted-unreadable)
because they actually prevent properly decoding base64 messages.  Here is  an example.",True,{}
djcb/mu,https://github.com/djcb/mu,1375,2019-02-02T15:05:42Z,2019-02-12T12:52:00Z,2019-02-12T22:25:37Z,MERGED,True,7,6,1,https://github.com/Chris00,mu4e: properly display messages in the draft folder (with gnus),2,[],https://github.com/djcb/mu/pull/1375,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1375#issuecomment-462052091,This is necessary to display messages with UFT-8 chars when visiting the draft folder.  Here is an example of such a message.,"The change does seem to work with all ""problem case"" messages, great!",True,{}
djcb/mu,https://github.com/djcb/mu,1375,2019-02-02T15:05:42Z,2019-02-12T12:52:00Z,2019-02-12T22:25:37Z,MERGED,True,7,6,1,https://github.com/Chris00,mu4e: properly display messages in the draft folder (with gnus),2,[],https://github.com/djcb/mu/pull/1375,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1375#issuecomment-462747605,This is necessary to display messages with UFT-8 chars when visiting the draft folder.  Here is an example of such a message.,Merged -- thanks for your efforts!,True,{}
djcb/mu,https://github.com/djcb/mu,1386,2019-02-20T18:18:42Z,2019-04-13T09:36:40Z,2019-04-14T21:06:53Z,MERGED,True,4,0,1,https://github.com/davidcsterratt,Issue #1385: get mu4e-action-view-in-browser to show headers,1,[],https://github.com/djcb/mu/pull/1386,https://github.com/davidcsterratt,1,https://github.com/djcb/mu/pull/1386,"Here is a very simple patch that achieves what I want, though I am sure there are nicer ways of doing it.","Here is a very simple patch that achieves what I want, though I am sure there are nicer ways of doing it.",True,{}
djcb/mu,https://github.com/djcb/mu,1386,2019-02-20T18:18:42Z,2019-04-13T09:36:40Z,2019-04-14T21:06:53Z,MERGED,True,4,0,1,https://github.com/davidcsterratt,Issue #1385: get mu4e-action-view-in-browser to show headers,1,[],https://github.com/djcb/mu/pull/1386,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1386#issuecomment-482793828,"Here is a very simple patch that achieves what I want, though I am sure there are nicer ways of doing it.",That's useful... let's take this in. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1386,2019-02-20T18:18:42Z,2019-04-13T09:36:40Z,2019-04-14T21:06:53Z,MERGED,True,4,0,1,https://github.com/davidcsterratt,Issue #1385: get mu4e-action-view-in-browser to show headers,1,[],https://github.com/djcb/mu/pull/1386,https://github.com/joostkremers,3,https://github.com/djcb/mu/pull/1386#issuecomment-483058310,"Here is a very simple patch that achieves what I want, though I am sure there are nicer ways of doing it.","This is causing me problems. The patch uses a function mu4e-html-construct-contacts-header, which doesn't appear to exist. It seems the intended function is mu4e~view-construct-contacts-header.",True,{'THUMBS_UP': ['https://github.com/toothbrush']}
djcb/mu,https://github.com/djcb/mu,1390,2019-03-04T15:35:18Z,2019-04-17T19:59:31Z,2019-04-17T19:59:35Z,MERGED,True,223,6,4,https://github.com/Ambrevar,Easy accounts with make-mu4e-context-account,4,['needinfo'],https://github.com/djcb/mu/pull/1390,https://github.com/Ambrevar,1,https://github.com/djcb/mu/pull/1390,Follow up on #1362 .,Follow up on #1362 .,True,{}
djcb/mu,https://github.com/djcb/mu,1390,2019-03-04T15:35:18Z,2019-04-17T19:59:31Z,2019-04-17T19:59:35Z,MERGED,True,223,6,4,https://github.com/Ambrevar,Easy accounts with make-mu4e-context-account,4,['needinfo'],https://github.com/djcb/mu/pull/1390,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1390#issuecomment-482793296,Follow up on #1362 .,"Nice work -- I'm ready to merge this, do you have any final changes?",True,{}
djcb/mu,https://github.com/djcb/mu,1390,2019-03-04T15:35:18Z,2019-04-17T19:59:31Z,2019-04-17T19:59:35Z,MERGED,True,223,6,4,https://github.com/Ambrevar,Easy accounts with make-mu4e-context-account,4,['needinfo'],https://github.com/djcb/mu/pull/1390,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1390#issuecomment-482793398,Follow up on #1362 .,"(in particular, perhaps you could send a message to the mailing-list after the merge, so people will find out and you can take all credit :-) )",True,{}
djcb/mu,https://github.com/djcb/mu,1390,2019-03-04T15:35:18Z,2019-04-17T19:59:31Z,2019-04-17T19:59:35Z,MERGED,True,223,6,4,https://github.com/Ambrevar,Easy accounts with make-mu4e-context-account,4,['needinfo'],https://github.com/djcb/mu/pull/1390,https://github.com/Ambrevar,4,https://github.com/djcb/mu/pull/1390#issuecomment-482794297,Follow up on #1362 .,"Thanks!

No final change, but beware, this has only be tested in my simple use
case.  I suspect you'll have to update/fix some parts to accommodate
future user needs :)",True,{}
djcb/mu,https://github.com/djcb/mu,1390,2019-03-04T15:35:18Z,2019-04-17T19:59:31Z,2019-04-17T19:59:35Z,MERGED,True,223,6,4,https://github.com/Ambrevar,Easy accounts with make-mu4e-context-account,4,['needinfo'],https://github.com/djcb/mu/pull/1390,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1390#issuecomment-484238836,Follow up on #1362 .,"Thanks -- I'll merge it, let's give it a test-run!",True,{}
djcb/mu,https://github.com/djcb/mu,1393,2019-03-11T12:36:29Z,2019-03-24T10:17:20Z,2019-03-26T18:21:44Z,MERGED,True,3,3,2,https://github.com/whxvd,mu4e: Fix some typos,1,[],https://github.com/djcb/mu/pull/1393,https://github.com/whxvd,1,https://github.com/djcb/mu/pull/1393,,,True,{}
djcb/mu,https://github.com/djcb/mu,1393,2019-03-11T12:36:29Z,2019-03-24T10:17:20Z,2019-03-26T18:21:44Z,MERGED,True,3,3,2,https://github.com/whxvd,mu4e: Fix some typos,1,[],https://github.com/djcb/mu/pull/1393,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1393#issuecomment-475945453,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1395,2019-03-11T22:28:07Z,2019-03-24T10:16:40Z,2019-03-24T10:16:48Z,MERGED,True,1,1,1,https://github.com/kevinjfoley,Look at all frames for header buffer when auto updating headers,1,[],https://github.com/djcb/mu/pull/1395,https://github.com/kevinjfoley,1,https://github.com/djcb/mu/pull/1395,Currently if you have new messages but are in another frame *mu4e-headers* isn't auto updated.,Currently if you have new messages but are in another frame *mu4e-headers* isn't auto updated.,True,{}
djcb/mu,https://github.com/djcb/mu,1395,2019-03-11T22:28:07Z,2019-03-24T10:16:40Z,2019-03-24T10:16:48Z,MERGED,True,1,1,1,https://github.com/kevinjfoley,Look at all frames for header buffer when auto updating headers,1,[],https://github.com/djcb/mu/pull/1395,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1395#issuecomment-475945425,Currently if you have new messages but are in another frame *mu4e-headers* isn't auto updated.,Merged -- thanks!,True,{'THUMBS_UP': ['https://github.com/kevinjfoley']}
djcb/mu,https://github.com/djcb/mu,1398,2019-03-26T18:25:56Z,2019-03-30T10:03:07Z,2019-03-30T10:58:29Z,MERGED,True,3,3,1,https://github.com/whxvd,Fix two typos,2,[],https://github.com/djcb/mu/pull/1398,https://github.com/whxvd,1,https://github.com/djcb/mu/pull/1398,,,True,{}
djcb/mu,https://github.com/djcb/mu,1398,2019-03-26T18:25:56Z,2019-03-30T10:03:07Z,2019-03-30T10:58:29Z,MERGED,True,3,3,1,https://github.com/whxvd,Fix two typos,2,[],https://github.com/djcb/mu/pull/1398,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1398#issuecomment-478229748,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1403,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",True,"{'THUMBS_UP': ['https://github.com/Adocentyn', 'https://github.com/rekahsoft']}"
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1403#issuecomment-482793693,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Nice work!
I think it would be good if you could announce on the mailing-list, would be great if some ""real-world""  users of this feature could test it and chime in.
Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1403#issuecomment-482797393,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Before that, may you help me with creating a reply to the original sender only — without mu4e asking if I want to reply to everybody — and without citation?  Is there a ready made function for that?",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/1403#issuecomment-482852621,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@djcb I had to modify the way reply messages are composed and introduce a new variable for selecting the recipients.  It is the change I saw as the least intrusive (although I do not particularly like communicating through global variables).
Remark: The message is not automatically sent at the moment.  This is on purpose.  I am thinking to make this configurable — automatic sending may fail if the context is not the right one.  Also, I do not know how the recipient handle the addition of a message (OK with Gmail but, without message, Outlook web application cannot display it...).",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/1403#issuecomment-482892637,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Well, for OWA, basically you cannot open .ics files from within OWA so a text summary of the ics file is useful.  I just pushed a commit to that effect.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,6,https://github.com/djcb/mu/pull/1403#issuecomment-482895403,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I've tested it works with Google.
BTW, there are some decoding issues of SUMMARY:test 1 =E2=80=94 google although the header is
Content-Type: text/calendar; charset=""UTF-8""; method=REQUEST
Content-Transfer-Encoding: quoted-printable

(do now know if Gnus suffers the same issue).  I guess the problem is the UTF-8 in capitals instead of utf-8.
Edit: this is a bug in gnus-icalendar — now fixed.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,7,https://github.com/djcb/mu/pull/1403#issuecomment-484221031,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Thanks a lot for doing all of this @Chris00 ! I really appreciate it!
The responses being generated seem add the wrong recipient (commit 34a20d4). I don't know if this is related, but my mu4e config which has two accounts (contexts) defined: my private Gmail account and my work account.
To produce this issue I did the following:

Using my Google Calendar private account I created an event called ""Test"" and invited my work email to this event. I correctly received the invitation via my work account (so far so good):



Then I clicked the ""Accept"" button and the following response was generated


So as you can see the response has my work email listed as the recipient of the response, which is wrong (the recipient should have been my private email).
Hope this helps!",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,8,https://github.com/djcb/mu/pull/1403#issuecomment-484266015,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","The responses being generated seem add the wrong recipient (commit 34a20d4).

gnus-icalendar-additional-identities is not about adding a recipient but identifying what email accounts are yours so it presents you with the buttons.  Here is the documentation of that variable:
gnus-icalendar-additional-identities is a variable defined in ‘gnus-icalendar.el’.
Its value is nil

Documentation:
We need to know your identity to make replies to calendar requests work.

Gnus will only offer you the Accept/Tentative/Decline buttons for
calendar events if any of your identities matches at least one
RSVP participant.

Your identity is guessed automatically from the variables
‘user-full-name’, ‘user-mail-address’,
‘gnus-ignored-from-addresses’ and ‘message-alternative-emails’.

If you need even more aliases you can define them here.  It really
only makes sense to define names or email addresses.


the response has my work email listed as the recipient of the response,

I guess this is the same if you send an email from gmail to you work account and reply.
To improve this, I can try to extract the organizer account from the ical file and (if it exist) force it to be used for the To field.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,9,https://github.com/djcb/mu/pull/1403#issuecomment-484274518,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@peterwvj May you try again the the additional commit?,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,10,https://github.com/djcb/mu/pull/1403#issuecomment-484371901,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@Chris00 many thanks!
Well done! It seems to work as expected. This is a huge improvement of mu4e.
I will give this feature some extra testing and let you know if I find anything.
One suggestion:
After responding to an invitation you may want to have it automatically trashed or moved to (say) the ""Deleted Items"" folder. I think most email clients does this by default and I think it makes the most sense.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,11,https://github.com/djcb/mu/pull/1403#issuecomment-484417138,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","After responding to an invitation you may want to have it automatically trashed or moved to (say) the ""Deleted Items"" folder.

I added some code to do that, set (setq mu4e-icalendar-trash-after-reply t).  Let me know whether it is suitable for you (I personally prefer to keep the original invitation as it may contain a message).",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,12,https://github.com/djcb/mu/pull/1403#issuecomment-484435026,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",I have pushed a better version that will trash the message only when the reply is sent.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,13,https://github.com/djcb/mu/pull/1403#issuecomment-484469011,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Great, thanks!
It works very well!
One more thing that came up:
When I'm viewing the the response to the invitation, mu4e generates RSVP buttons, which it probably should not. As an example, consider the email response shown below that I received on my private account after responding to the invitation using my work account. To clarify, I would expect mu4e to only show the summary in this case.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,14,https://github.com/djcb/mu/pull/1403#issuecomment-484525581,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I wrapped the text/calendar differently.  It works for me but you can't add a text message on top it seems (not recognized by Google).  May you test both (in mu4e and Gmail, with and without an additional message)?",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,15,https://github.com/djcb/mu/pull/1403#issuecomment-484540130,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",I rebased on master... you need to apply #1405 first.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,16,https://github.com/djcb/mu/pull/1403#issuecomment-484542146,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Again, thanks for working on this. I will try to find time to test this again in the evening when I have access to my dev laptop. The next couple of days will be very busy but I will try to find some time to work on this whenever I can.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,17,https://github.com/djcb/mu/pull/1403#issuecomment-484557488,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",(I eventually added a stronger check: only display the buttons when the method is REQUEST or PUBLISH.),True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,18,https://github.com/djcb/mu/pull/1403#issuecomment-484657892,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I'm struggling with building mu4e after updating  (commit cb4c882). For comparison, this doesn't happen on master. Do you know what's up? Are you also experiencing this? What happens when you perform a clean build?
I tried the following:

Cleaning the repository (just in case)

λ sudo git clean -dfx

Running autogen

λ sudo ./autogen.sh
autogen gives me the following output:
mu configuration is complete.
------------------------------------------------
mu version                           : 1.3.1

Xapian version                       : 1.4.5
GLib version                         : 2.56.3
GMime version                        : 3.2.0
Emacs version                        : GNU Emacs 26.2

Have wordexp                         : yes
Build mu4e emacs frontend            : yes
Build 'mug' toy-ui (gtk+/webkit)     : no
McCabe's Cyclomatic Complexity tool  : no

Have direntry->d_ino                 : yes
Have direntry->d_type                : yes
------------------------------------------------



Building mu4e

sudo make
.. which produces the following errors:
...
mu4e.texi:2671: unknown command `doe'
mu4e.texi:2676: unknown command `work'
mu4e.texi:2680: unknown command `work'
Makefile:527: recipe for target 'mu4e.info' failed
make[3]: *** [mu4e.info] Error 1
make[3]: Leaving directory '/home/peter/git-repos/mu/mu4e'
Makefile:761: recipe for target 'all-recursive' failed
make[2]: *** [all-recursive] Error 1
make[2]: Leaving directory '/home/peter/git-repos/mu/mu4e'
Makefile:542: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/home/peter/git-repos/mu'
Makefile:452: recipe for target 'all' failed
make: *** [all] Error 2",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,19,https://github.com/djcb/mu/pull/1403#issuecomment-484673487,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Your problem is because there was a bug in master (see #1403 (comment)).  The problem has been fixed in master and I rebased on top of it.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,20,https://github.com/djcb/mu/pull/1403#issuecomment-484690872,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Great, thanks!
First I tried to create an event using my private account and invite my work account. After I responded to the invitation I got the following error when mu4e trashed the invitation.
error in process filter: insert-file-contents-literally: Opening input file: No such file or directory, /home/peter/Maildir/work/Deleted Items/cur/1555620680_0.8676.peter-tp,U=29386,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST
error in process filter: Opening input file: No such file or directory, /home/peter/Maildir/work/Deleted Items/cur/1555620680_0.8676.peter-tp,U=29386,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST

But the email does correctly appear in my ""Deleted Items"" folder so despite the error everything looks OK.
The response received on my work email shows up correctly, i.e. there's a summary but no RSVP buttons so that's great!
I tried to repeat the scenario but with the roles of the accounts being reversed so that I'd use my work account to create the event and invite my private account. The result was the same: despite the error that occured when the invitation was being trashed (after responding to it) everything worked well:
error in process filter: insert-file-contents-literally: Opening input file: No such file or directory, /home/peter/Maildir/private/[Gmail].Trash/cur/1555621075_0.10473.peter-tp,U=12620,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST
error in process filter: Opening input file: No such file or directory, /home/peter/Maildir/private/[Gmail].Trash/cur/1555621075_0.10473.peter-tp,U=12620,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,21,https://github.com/djcb/mu/pull/1403#issuecomment-484692607,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Could you activate “Options → Enter debugger on error” and send the backtrace?,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,22,https://github.com/djcb/mu/pull/1403#issuecomment-484692869,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",P.S. The last commit allows to add an entry to the diary file of your choice upon reply.,True,{'THUMBS_UP': ['https://github.com/peterwvj']}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,23,https://github.com/djcb/mu/pull/1403#issuecomment-484697468,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Sure. Here's a backtrace produced when I tried to respond to an invitation using my private account (send from my work account). Strangely, the error wasn't raised the first time I tried (with the roles of the accounts being reversed).
Debugger entered--Lisp error: (file-missing ""Opening input file"" ""No such file or directory"" ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555622889_0.26983.peter-tp,U=12624,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"")
  insert-file-contents(""/home/peter/Maildir/private/[Gmail].Trash/cur/1555622889_0.26983.peter-tp,U=12624,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" nil nil nil nil)
  insert-file-contents-literally(""/home/peter/Maildir/private/[Gmail].Trash/cur/1555622889_0.26983.peter-tp,U=12624,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"")
  mu4e~view-gnus((:docid 21309 :subject ""Test 9"" :date (23736 60383 0) :size 10481 :message-id ""0bddc6d118284b0eacdbb9ff19da3ad4@Exch11.uni.au.dk"" :path ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555622889_0.26983.peter-tp,U=12624,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" :maildir ""/private/[Gmail].Trash"" :priority normal :flags (seen trashed) :parts ((:index 1 :name ""1.msgpart"" :mime-type ""text/plain"" :type (leaf) :attachment nil :size 1) (:index 2 :name ""2.msgpart"" :mime-type ""text/html"" :type (leaf) :attachment nil :size 374) (:index 3 :name ""vcal-3.vcs"" :mime-type ""text/calendar"" :type (leaf) :attachment t :size 1978)) :from ((""Peter Würtz Vinther Tran-Jørgensen"" . ""pvj@eng.au.dk"")) :to ((""peter.w.v.jorgensen@gmail.com"" . ""peter.w.v.jorgensen@gmail.com"")) :body-txt-params ((""charset"" . ""iso-8859-1"")) :body-txt ""\n"" :body-html ""<html>\n<head>\n<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=iso-8859-1\"">\n<style type=\""text/css\"" style=\""display:none\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\""ltr\"" style=\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\"">\n<p><br>\n</p>\n</body>\n</html>\n"" :thread (:path ""0"" :level 0)))
  mu4e-view((:docid 21309 :subject ""Test 9"" :date (23736 60383 0) :size 10481 :message-id ""0bddc6d118284b0eacdbb9ff19da3ad4@Exch11.uni.au.dk"" :path ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555622889_0.26983.peter-tp,U=12624,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" :maildir ""/private/[Gmail].Trash"" :priority normal :flags (seen trashed) :parts ((:index 1 :name ""1.msgpart"" :mime-type ""text/plain"" :type (leaf) :attachment nil :size 1) (:index 2 :name ""2.msgpart"" :mime-type ""text/html"" :type (leaf) :attachment nil :size 374) (:index 3 :name ""vcal-3.vcs"" :mime-type ""text/calendar"" :type (leaf) :attachment t :size 1978)) :from ((""Peter Würtz Vinther Tran-Jørgensen"" . ""pvj@eng.au.dk"")) :to ((""peter.w.v.jorgensen@gmail.com"" . ""peter.w.v.jorgensen@gmail.com"")) :body-txt-params ((""charset"" . ""iso-8859-1"")) :body-txt ""\n"" :body-html ""<html>\n<head>\n<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=iso-8859-1\"">\n<style type=\""text/css\"" style=\""display:none\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\""ltr\"" style=\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\"">\n<p><br>\n</p>\n</body>\n</html>\n"" :thread (:path ""0"" :level 0)))
  mu4e~headers-update-handler((:docid 21309 :subject ""Test 9"" :date (23736 60383 0) :size 10481 :message-id ""0bddc6d118284b0eacdbb9ff19da3ad4@Exch11.uni.au.dk"" :path ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555622889_0.26983.peter-tp,U=12624,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" :maildir ""/private/[Gmail].Trash"" :priority normal :flags (seen trashed) :parts ((:index 1 :name ""1.msgpart"" :mime-type ""text/plain"" :type (leaf) :attachment nil :size 1) (:index 2 :name ""2.msgpart"" :mime-type ""text/html"" :type (leaf) :attachment nil :size 374) (:index 3 :name ""vcal-3.vcs"" :mime-type ""text/calendar"" :type (leaf) :attachment t :size 1978)) :from ((""Peter Würtz Vinther Tran-Jørgensen"" . ""pvj@eng.au.dk"")) :to ((""peter.w.v.jorgensen@gmail.com"" . ""peter.w.v.jorgensen@gmail.com"")) :body-txt-params ((""charset"" . ""iso-8859-1"")) :body-txt ""\n"" :body-html ""<html>\n<head>\n<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=iso-8859-1\"">\n<style type=\""text/css\"" style=\""display:none\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\""ltr\"" style=\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\"">\n<p><br>\n</p>\n</body>\n</html>\n"" :thread (:path ""0"" :level 0)) t t)
  mu4e~proc-filter(#<process  *mu4e-proc*> ""\3767c\377(:info add :path \""/home/peter/Maildir/private/[Gmail].Sent Mail/cur/1555622948.11c411bd5a05286e.peter-tp:2,S\"" :docid 21311)\n\376444\377(:update (\n\011:docid 21311\n\011:subject \""Accepted: Test 9\""\n\011:date (23736 60452 0)\n\011:size 1935\n\011:message-id \""87ef5zknob.fsf@gmail.com\""\n\011:path \""/home/peter/Maildir/private/[Gmail].Sent Mail/cur/1555622948.11c411bd5a05286e.peter-tp:2,S\""\n\011:maildir \""/private/[Gmail].Sent Mail\""\n\011:priority normal\n\011:flags (seen)\n\011:references ( \""0bddc6d118284b0eacdbb9ff19da3ad4@Exch11.uni.au.dk\"" )\n\011:in-reply-to \""<0bddc6d118284b0eacdbb9ff19da3ad4@Exch11.uni.au.dk>\""\n\011:parts ((:index 1 :name \""1.msgpart\"" :mime-type \""text/plain\"" :type (leaf inline) :attachment nil  :size 145  )(:index 2 :name \""vcal-2.vcs\"" :mime-type \""text/calendar\"" :type (leaf) :attachment t  :size 991  )(:index 3 :name \""3.msgpart\"" :mime-type \""text/plain\"" :type (leaf) :attachment nil  :size 27  ))\n\011:from ((\""Peter W\303\274rtz Vinther Tran-J\303\270rgensen\"" . \""peter.w.v.jorgensen@gmail.com\""))\n\011:to ((nil . \""pvj@eng.au.dk\""))\n\011:user-agent \""mu4e 1.3.1; emacs 26.2\""\n\011:body-txt \""Summary:    Accepted: Test 9\nLocation:   \nTime:       <2019-04-18 21:00-21:30>\nOrganizer:  pvj@eng.au.dk\nAttendance: Required\nMethod:     REPLY\n\n\n\n\n-- \nBest regards,\nPeter\n\""\n)\n :move nil)\n\37678\377(:sent t :path \""/home/peter/Maildir/private/[Gmail].Drafts/cur/1555622946.3390f2e12cfa1d48.peter-tp:2,DS\"" :docid 21310)\n\3764ec\377(:update (\n\011:docid 21309\n\011:subject \""Test 9\""\n\011:date (23736 60383 0)\n\011:size 10481\n\011:message-id \""0bddc6d118284b0eacdbb9ff19da3ad4@Exch11.uni.au.dk\""\n\011:path \""/home/peter/Maildir/private/[Gmail].Trash/cur/1555622889_0.26983.peter-tp,U=12624,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST\""\n\011:maildir \""/private/[Gmail].Trash\""\n\011:priority normal\n\011:flags (seen trashed)\n\011:parts ((:index 1 :name \""1.msgpart\"" :mime-type \""text/plain\"" :type (leaf) :attachment nil  :size 1  )(:index 2 :name \""2.msgpart\"" :mime-type \""text/html\"" :type (leaf) :attachment nil  :size 374  )(:index 3 :name \""vcal-3.vcs\"" :mime-type \""text/calendar\"" :type (leaf) :attachment t  :size 1978  ))\n\011:from ((\""Peter W\303\274rtz Vinther Tran-J\303\270rgensen\"" . \""pvj@eng.au.dk\""))\n\011:to ((\""peter.w.v.jorgensen@gmail.com\"" . \""peter.w.v.jorgensen@gmail.com\""))\n\011:body-txt-params ((\""charset\"" . \""iso-8859-1\""))\n\011:body-txt \""\n\""\n\011:body-html \""<html>\n<head>\n<meta http-equiv=\\\""Content-Type\\\"" content=\\\""text/html; charset=iso-8859-1\\\"">\n<style type=\\\""text/css\\\"" style=\\\""display:none\\\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\\\""ltr\\\"" style=\\\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\\\"">\n<p><br>\n</p>\n</body>\n</html>\n\""\n)\n :move t :maybe-view t)\n"")",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,24,https://github.com/djcb/mu/pull/1403#issuecomment-484702241,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Do you compose emails in another window?  Does Mu4e go back to the headers view after sending?  I guess it is trying to redisplay the erased message — not sure why.  In any case, if you confirm that adding text above the reply multipart makes it fail, I guess it will be better to send it automatically after letting the user chose the account he wants to use (with a default choice).",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,25,https://github.com/djcb/mu/pull/1403#issuecomment-484709777,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Do you compose emails in another window?

Assuming you mean another Emacs frame then the answer is ""no"". Everything is performed using a single frame.

Does Mu4e go back to the headers view after sending?

The mu4e-headers is there the entire time.
I have mu4e-split-view set to horizontal so when I open the invitation I have the mu4e-headers at the top of the frame and the invitation message shown below the mu4e-headers. So basically the frame is split into two windows. Now, when I click (say) ""Accept"" the message view shows the composed response (before I send it). The mu4e-headers view is still there. After I send the response the window at the button returns to the original invitation message (with the mu4e-headers still at the top of the frame). So the workflow is just like when I'm responding to regular emails.
But again, this error doesn't happen every time I try to produce it.

In any case, if you confirm that adding text above the reply multipart makes it fail, I guess it will be better to send it automatically after letting the user chose the account he wants to use (with a default choice).

Adding text above the reply multipart does not cause problems. The text shows up correctly in the response.
In case it helps my mu4e config is available here.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,26,https://github.com/djcb/mu/pull/1403#issuecomment-484712456,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Can you try with the last commit?,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,27,https://github.com/djcb/mu/pull/1403#issuecomment-484786054,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Now it seems like the ""No such file or directory error"" has disappeared but I'm getting a different error now. To produce it. I respond to the invitation. Then mu4e returns to the original message and everything looks OK. After waiting for a bit the following error then shows up. Presumably this happens when it tries to refresh the headers view. So basically I just wait for the error to happen.
Debugger entered--Lisp error: (error #(""[mu4e] Cannot find message in headers buffer"" 1 5 (face mu4e-title-face)))
  signal(error (#(""[mu4e] Cannot find message in headers buffer"" 1 5 (face mu4e-title-face))))
  error(""%s"" #(""[mu4e] Cannot find message in headers buffer"" 1 5 (face mu4e-title-face)))
  mu4e-error(""Cannot find message in headers buffer"")
  mu4e-mark-marks-num()
  mu4e~headers-maybe-auto-update()
  run-hooks(mu4e-index-updated-hook)
  mu4e-info-handler((:info index :status complete :processed 18848 :updated 3 :cleaned-up 1))
  mu4e~proc-filter(#<process  *mu4e-proc*> ""\37649\377(:info index :status complete :processed 18848 :updated 3 :cleaned-up 1)\n"")",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,28,https://github.com/djcb/mu/pull/1403#issuecomment-484788417,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","At least I can reproduce this every time now. Despite the error, everything works as expected. Can you reproduce this problem? To do so just set setq mu4e-icalendar-trash-after-reply to t, respond to the invitation, and wait for the update to happen.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,29,https://github.com/djcb/mu/pull/1403#issuecomment-484813202,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@peterwvj I could not reproduce the first one but could for the last error.  I tried a slightly different approach (killing the Article buffer since it has no more header).,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,30,https://github.com/djcb/mu/pull/1403#issuecomment-484833437,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Yes, the error does not show up anymore.
When I respond to the invitation the message view now returns to the headers view which leaves me with a split view that shows two headers view --- one at the top of the Emacs frame and another one at the bottom of the Emacs frame. This seems a bit akward. Perhaps a more reasonable  choice is to show the ""next message"" in the lower window so those who use a split view (which I believe is default behavior) do not end up in a situation with two header views.
I noticed some other problem when I tried to use a different strategy for splitting views, specifically by using the following configuration (setq mu4e-split-view 'single-window). When I respond to an invitation using this strategy, mu4e returns immediately to the headers view after accepting the invitation, which is wrong. The email response created by mu4e is in a different buffer that the user must manually switch to. I'm not sure whether this is a problem with the single-window split strategy or it has something to do with this feature.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,31,https://github.com/djcb/mu/pull/1403#issuecomment-484835157,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I realise now that automatically trashing the message is quite complicated to get right due to the way mu4e views work. Strictly speaking this feature is not necessary. If you feel like automated trashing is taking to much time to implement then don't bother doing it. Even without this, your work has improved mu4e immensely!",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,32,https://github.com/djcb/mu/pull/1403#issuecomment-484918504,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",The latter commit works on my side.  Let me know what about you!,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,33,https://github.com/djcb/mu/pull/1403#issuecomment-484998107,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Thanks @Chris00  -- it works very well!
The only issue there's left is the (rather unlikely) situation where no ""next message"" exists (the inbox is empty) in which case I receive the error shown below. If there's no ""next message"" to show after trashing the invitation we could just close/delete the window? So if you're using a split view that shows the mu4e headers at the top and the invitation at the bottom then if you delete the window that show the invitation you end up with a single window that shows only the headers view. Alternatively you'd have to switch to a different buffer but I can't think of anything that makes much sense.
Debugger entered--Lisp error: (file-missing ""Opening input file"" ""No such file or directory"" ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555702699_0.16774.peter-tp,U=12649,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"")
  insert-file-contents(""/home/peter/Maildir/private/[Gmail].Trash/cur/1555702699_0.16774.peter-tp,U=12649,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" nil nil nil nil)
  insert-file-contents-literally(""/home/peter/Maildir/private/[Gmail].Trash/cur/1555702699_0.16774.peter-tp,U=12649,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"")
  mu4e~view-gnus((:docid 21458 :subject ""Test17"" :date (23738 9121 0) :size 10474 :message-id ""c43126bab78f4ce0b0688ee87e58d97c@Exch11.uni.au.dk"" :path ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555702699_0.16774.peter-tp,U=12649,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" :maildir ""/private/[Gmail].Trash"" :priority normal :flags (seen trashed) :parts ((:index 1 :name ""1.msgpart"" :mime-type ""text/plain"" :type (leaf) :attachment nil :size 1) (:index 2 :name ""2.msgpart"" :mime-type ""text/html"" :type (leaf) :attachment nil :size 374) (:index 3 :name ""vcal-3.vcs"" :mime-type ""text/calendar"" :type (leaf) :attachment t :size 1978)) :from ((""Peter Würtz Vinther Tran-Jørgensen"" . ""pvj@eng.au.dk"")) :to ((""peter.w.v.jorgensen@gmail.com"" . ""peter.w.v.jorgensen@gmail.com"")) :body-txt-params ((""charset"" . ""iso-8859-1"")) :body-txt ""\n"" :body-html ""<html>\n<head>\n<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=iso-8859-1\"">\n<style type=\""text/css\"" style=\""display:none\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\""ltr\"" style=\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\"">\n<p><br>\n</p>\n</body>\n</html>\n"" :thread (:path ""0"" :level 0)))
  mu4e-view((:docid 21458 :subject ""Test17"" :date (23738 9121 0) :size 10474 :message-id ""c43126bab78f4ce0b0688ee87e58d97c@Exch11.uni.au.dk"" :path ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555702699_0.16774.peter-tp,U=12649,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" :maildir ""/private/[Gmail].Trash"" :priority normal :flags (seen trashed) :parts ((:index 1 :name ""1.msgpart"" :mime-type ""text/plain"" :type (leaf) :attachment nil :size 1) (:index 2 :name ""2.msgpart"" :mime-type ""text/html"" :type (leaf) :attachment nil :size 374) (:index 3 :name ""vcal-3.vcs"" :mime-type ""text/calendar"" :type (leaf) :attachment t :size 1978)) :from ((""Peter Würtz Vinther Tran-Jørgensen"" . ""pvj@eng.au.dk"")) :to ((""peter.w.v.jorgensen@gmail.com"" . ""peter.w.v.jorgensen@gmail.com"")) :body-txt-params ((""charset"" . ""iso-8859-1"")) :body-txt ""\n"" :body-html ""<html>\n<head>\n<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=iso-8859-1\"">\n<style type=\""text/css\"" style=\""display:none\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\""ltr\"" style=\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\"">\n<p><br>\n</p>\n</body>\n</html>\n"" :thread (:path ""0"" :level 0)))
  mu4e~headers-update-handler((:docid 21458 :subject ""Test17"" :date (23738 9121 0) :size 10474 :message-id ""c43126bab78f4ce0b0688ee87e58d97c@Exch11.uni.au.dk"" :path ""/home/peter/Maildir/private/[Gmail].Trash/cur/1555702699_0.16774.peter-tp,U=12649,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST"" :maildir ""/private/[Gmail].Trash"" :priority normal :flags (seen trashed) :parts ((:index 1 :name ""1.msgpart"" :mime-type ""text/plain"" :type (leaf) :attachment nil :size 1) (:index 2 :name ""2.msgpart"" :mime-type ""text/html"" :type (leaf) :attachment nil :size 374) (:index 3 :name ""vcal-3.vcs"" :mime-type ""text/calendar"" :type (leaf) :attachment t :size 1978)) :from ((""Peter Würtz Vinther Tran-Jørgensen"" . ""pvj@eng.au.dk"")) :to ((""peter.w.v.jorgensen@gmail.com"" . ""peter.w.v.jorgensen@gmail.com"")) :body-txt-params ((""charset"" . ""iso-8859-1"")) :body-txt ""\n"" :body-html ""<html>\n<head>\n<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=iso-8859-1\"">\n<style type=\""text/css\"" style=\""display:none\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\""ltr\"" style=\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\"">\n<p><br>\n</p>\n</body>\n</html>\n"" :thread (:path ""0"" :level 0)) t t)
  mu4e~proc-filter(#<process  *mu4e-proc*> ""\3767c\377(:info add :path \""/home/peter/Maildir/private/[Gmail].Sent Mail/cur/1555702744.025dc87ea26b6f48.peter-tp:2,S\"" :docid 21460)\n\376443\377(:update (\n\011:docid 21460\n\011:subject \""Accepted: Test17\""\n\011:date (23738 9176 0)\n\011:size 1935\n\011:message-id \""87zholhjjb.fsf@gmail.com\""\n\011:path \""/home/peter/Maildir/private/[Gmail].Sent Mail/cur/1555702744.025dc87ea26b6f48.peter-tp:2,S\""\n\011:maildir \""/private/[Gmail].Sent Mail\""\n\011:priority normal\n\011:flags (seen)\n\011:references ( \""c43126bab78f4ce0b0688ee87e58d97c@Exch11.uni.au.dk\"" )\n\011:in-reply-to \""<c43126bab78f4ce0b0688ee87e58d97c@Exch11.uni.au.dk>\""\n\011:parts ((:index 1 :name \""1.msgpart\"" :mime-type \""text/plain\"" :type (leaf inline) :attachment nil  :size 145  )(:index 2 :name \""vcal-2.vcs\"" :mime-type \""text/calendar\"" :type (leaf) :attachment t  :size 991  )(:index 3 :name \""3.msgpart\"" :mime-type \""text/plain\"" :type (leaf) :attachment nil  :size 27  ))\n\011:from ((\""Peter W\303\274rtz Vinther Tran-J\303\270rgensen\"" . \""peter.w.v.jorgensen@gmail.com\""))\n\011:to ((nil . \""pvj@eng.au.dk\""))\n\011:user-agent \""mu4e 1.3.1; emacs 26.2\""\n\011:body-txt \""Summary:    Accepted: Test17\nLocation:   \nTime:       <2019-04-20 22:00-22:30>\nOrganizer:  pvj@eng.au.dk\nAttendance: Required\nMethod:     REPLY\n\n\n\n\n-- \nBest regards,\nPeter\n\""\n)\n :move nil)\n\37678\377(:sent t :path \""/home/peter/Maildir/private/[Gmail].Drafts/cur/1555702741.3dffb7fa1d46972e.peter-tp:2,DS\"" :docid 21459)\n\3764eb\377(:update (\n\011:docid 21458\n\011:subject \""Test17\""\n\011:date (23738 9121 0)\n\011:size 10474\n\011:message-id \""c43126bab78f4ce0b0688ee87e58d97c@Exch11.uni.au.dk\""\n\011:path \""/home/peter/Maildir/private/[Gmail].Trash/cur/1555702699_0.16774.peter-tp,U=12649,FMD5=7e33429f656f1e6e9d79b29c3f82c57e:2,ST\""\n\011:maildir \""/private/[Gmail].Trash\""\n\011:priority normal\n\011:flags (seen trashed)\n\011:parts ((:index 1 :name \""1.msgpart\"" :mime-type \""text/plain\"" :type (leaf) :attachment nil  :size 1  )(:index 2 :name \""2.msgpart\"" :mime-type \""text/html\"" :type (leaf) :attachment nil  :size 374  )(:index 3 :name \""vcal-3.vcs\"" :mime-type \""text/calendar\"" :type (leaf) :attachment t  :size 1978  ))\n\011:from ((\""Peter W\303\274rtz Vinther Tran-J\303\270rgensen\"" . \""pvj@eng.au.dk\""))\n\011:to ((\""peter.w.v.jorgensen@gmail.com\"" . \""peter.w.v.jorgensen@gmail.com\""))\n\011:body-txt-params ((\""charset\"" . \""iso-8859-1\""))\n\011:body-txt \""\n\""\n\011:body-html \""<html>\n<head>\n<meta http-equiv=\\\""Content-Type\\\"" content=\\\""text/html; charset=iso-8859-1\\\"">\n<style type=\\\""text/css\\\"" style=\\\""display:none\\\""><!-- p { margin-top: 0px; margin-bottom: 0px; }--></style>\n</head>\n<body dir=\\\""ltr\\\"" style=\\\""font-size:12pt;color:#000000;background-color:#FFFFFF;font-family:Calibri,Arial,Helvetica,sans-serif;\\\"">\n<p><br>\n</p>\n</body>\n</html>\n\""\n)\n :move t :maybe-view t)\n"")",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,34,https://github.com/djcb/mu/pull/1403#issuecomment-485007140,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","If there's no ""next message"" to show after trashing the invitation we could just to close/delete the window?

I have force-pushed that behavior.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,35,https://github.com/djcb/mu/pull/1403#issuecomment-485070071,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I have mu4e-split-view set to horizontal. If there's no ""next message"" to display it doesn't delete the window on my machine. Instead it returns to the headers view which leaves med with two headers view:

To clarify, in case there's no ""next message"" to show I'd expect mu4e to delete the window that was used to show the invitation, which would look as follows:
.
Do you experience a different behavior when mu4e-split-view set to horizontal?",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,36,https://github.com/djcb/mu/pull/1403#issuecomment-485071776,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I think I found a bug related to encoding (Danish letters). I was only able to produce this issue when the event was created using the Google Calendar web interface calendar.google.com
To produce this issue I created an event, added the text ""Test encoding 3 æøå"" (without quotes) in both the title and the summary of the event and sent out the event. When I view the invitation it looks as follows:

When I accept the invitation and try to send the response mu4e prompts me for the following:

When I try to send the invitation anyway, I receive the following error:
These default coding systems were tried to encode text
in the buffer ‘Re: Invitation: Test encodi...’:
  (utf-8 (127 . 4194243) (128 . 4194214) (129 . 4194243) (130
  . 4194232) (131 . 4194243) (132 . 4194213) (392 . 4194214) (393
  . 4194232) (394 . 4194213))
However, each of them encountered characters it couldn’t encode:
  utf-8 cannot encode these: � � � � � � � � �

Click on a character (or switch to this window by ‘M-x other-window’
and select the characters by RET) to jump to the place it appears,
where ‘C-u C-x =’ will give information about it.

Select one of the safe coding systems listed below,
or cancel the writing with C-g and edit the buffer
   to remove or modify the problematic characters,
or specify any other coding system (and risk losing
   the problematic characters).

  raw-text no-conversion


The backtrace looks as follows
Debugger entered--Lisp error: (wrong-number-of-arguments (8 . 8) 10)
  helm-read-file-name-handler-1(""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil ""write-region"" ""*helm-mode-write-region*"")
  apply(helm-read-file-name-handler-1 (""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil ""write-region"" ""*helm-mode-write-region*""))
  helm--completing-read-default(""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil)
  apply(helm--completing-read-default (""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil))
  #f(advice-wrapper :override completing-read-default helm--completing-read-default)(""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil)
  read-coding-system(""Select coding system (default raw-text): "" raw-text)
  select-safe-coding-system-interactively(1 660 (raw-text no-conversion) (utf-8) nil raw-text)
  select-safe-coding-system(1 660 utf-8 nil ""/home/peter/Maildir/work/Drafts/cur/1555749957.0d962175532db71a.peter-tp:2,DS"")
  write-region(nil nil ""/home/peter/Maildir/work/Drafts/cur/1555749957.0d962175532db71a.peter-tp:2,DS"" nil t ""~/Maildir/work/Drafts/cur/1555749957.0d962175532db71a.peter-tp:2,DS"")
  basic-save-buffer-2()
  basic-save-buffer-1()
  basic-save-buffer(nil)
  save-buffer()
  #f(compiled-function () #<bytecode 0x27ead0d>)()
  run-hooks(message-send-hook)
  message-send(nil)
  message-send-and-exit(nil)
  funcall-interactively(message-send-and-exit nil)
  call-interactively(message-send-and-exit nil nil)
  command-execute(message-send-and-exit)

Let me me know if you can't easily produce this issue. I could always try create the event and invite you but I'd need your email address for this",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,37,https://github.com/djcb/mu/pull/1403#issuecomment-485072214,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","it doesn't delete the window on my machine.

Sorry, I did it too fast.  I force-pushed again with a slight modification.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,38,https://github.com/djcb/mu/pull/1403#issuecomment-485073630,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I found a bug related to encoding (Danish letters).

You likely encountered the fact the UTF-8 is not recognized.  I do not know whether it is worth to have a temporary fix in mu4e for this (it will be corrected in the next Emacs 26).",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,39,https://github.com/djcb/mu/pull/1403#issuecomment-485075274,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Sorry, I did it too fast. I force-pushed again with a slight modification.

No worries. I tested again, but unfortunately mu4e still shows two header views as shown above. I even tried with a clean build. I'm on b524fb2",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,40,https://github.com/djcb/mu/pull/1403#issuecomment-485075955,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","You likely encountered the fact the UTF-8 is not recognized. I do not know whether it is worth to have a temporary fix in mu4e for this (it will be corrected in the next Emacs 26).

Sounds great. No need to implement a temporary fix in mu4e if this will be fixed in Emacs 26.3 anyway. I will just try again using the snapshot version of Emacs.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,41,https://github.com/djcb/mu/pull/1403#issuecomment-485080239,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Okay after trying this using Emacs 27.0.50 I'm now able to view the message correctly (so an improvement over Emacs 26):

However, the encoding issue is still there in the generated response message:

As before, mu4e presents me with the  prompt. If I try to send the response anyway, I end up with the following error:
These default coding systems were tried to encode text
in the buffer ‘Re: Invitation: Test encodi...’:
  (utf-8 (392 . 4194214) (393 . 4194232) (394 . 4194213))
However, each of them encountered characters it couldn’t encode:
  utf-8 cannot encode these: � � �

Click on a character (or switch to this window by ‘M-x other-window’
and select the characters by RET) to jump to the place it appears,
where ‘C-u C-x =’ will give information about it.

Select one of the safe coding systems listed below,
or cancel the writing with C-g and edit the buffer
   to remove or modify the problematic characters,
or specify any other coding system (and risk losing
   the problematic characters).

  raw-text no-conversion

The backtrace looks as follows:
Debugger entered--Lisp error: (wrong-number-of-arguments (8 . 8) 10)
  helm-read-file-name-handler-1(""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil ""write-region"" ""*helm-mode-write-region*"")
  apply(helm-read-file-name-handler-1 (""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil ""write-region"" ""*helm-mode-write-region*""))
  helm--completing-read-default(""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil)
  apply(helm--completing-read-default (""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil))
  #f(advice-wrapper :override completing-read-default helm--completing-read-default)(""Select coding system (default raw-text): "" ((""utf-8-hfs"") (""utf-8-hfs-mac"") (""utf-8-hfs-dos"") (""utf-8-hfs-unix"") (""georgian-academy"") (""georgian-academy-mac"") (""georgian-academy-dos"") (""georgian-academy-unix"") (""georgian-ps"") (""georgian-ps-mac"") (""georgian-ps-dos"") (""georgian-ps-unix"") (""cp1256"") (""cp1256-mac"") (""cp1256-dos"") (""cp1256-unix"") (""windows-1256"") (""windows-1256-mac"") (""windows-1256-dos"") (""windows-1256-unix"") (""iso-8859-6"") (""iso-8859-6-mac"") (""iso-8859-6-dos"") (""iso-8859-6-unix"") (""tcvn-5712"") (""tcvn-5712-mac"") (""tcvn-5712-dos"") (""tcvn-5712-unix"") (""tcvn"") (""tcvn-mac"") (""tcvn-dos"") (""tcvn-unix"") (""vietnamese-tcvn"") (""vietnamese-tcvn-mac"") (""vietnamese-tcvn-dos"") (""vietnamese-tcvn-unix"") (""cp1258"") (""cp1258-mac"") (""cp1258-dos"") (""cp1258-unix"") (""windows-1258"") (""windows-1258-mac"") (""windows-1258-dos"") (""windows-1258-unix"") (""viqr"") (""viqr-mac"") (""viqr-dos"") (""viqr-unix"") (""vietnamese-viqr"") (""vietnamese-viqr-mac"") ...) nil t nil coding-system-history ""raw-text"" nil)
  read-coding-system(""Select coding system (default raw-text): "" raw-text)
  select-safe-coding-system-interactively(1 658 (raw-text no-conversion) (utf-8) nil raw-text)
  select-safe-coding-system(1 658 utf-8 nil ""/home/peter/Maildir/work/Drafts/cur/1555753125.e3d..."")
  write-region(nil nil ""/home/peter/Maildir/work/Drafts/cur/1555753125.e3d..."" nil t ""~/Maildir/work/Drafts/cur/1555753125.e3d6c09c2c8fd..."")
  basic-save-buffer-2()
  basic-save-buffer-1()
  basic-save-buffer(nil)
  save-buffer()
  #f(compiled-function () #<bytecode 0x1559e62199d9>)()
  run-hooks(message-send-hook)
  message-send(nil)
  message-send-and-exit(nil)
  funcall-interactively(message-send-and-exit nil)
  call-interactively(message-send-and-exit nil nil)
  command-execute(message-send-and-exit)",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,42,https://github.com/djcb/mu/pull/1403#issuecomment-485080936,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I'm testing on b524fb2

Well, it works for me.  I end up with:

I suppose that if you are in an article and press M-: (kill-buffer-and-window) the window disappear and only the headers are left, right?",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,43,https://github.com/djcb/mu/pull/1403#issuecomment-485082154,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Well, it works for me. I end up with:

Okay so I tested again and now it works. Perhaps I messed something up, sorry!  All I changed was my Emacs version (I'm using 27.0.50).",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,44,https://github.com/djcb/mu/pull/1403#issuecomment-485090312,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",The UTF-8 decoding in the reply should be fixed.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,45,https://github.com/djcb/mu/pull/1403#issuecomment-485094435,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Great job, it works! Thanks for doing all of this!
Now is probably a good time to merge this feature into master and ask people to try it out. What do you think? @Chris00 @djcb",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,46,https://github.com/djcb/mu/pull/1403#issuecomment-485094972,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Now is probably a good time to merge this feature into master and ask people to try it out.

Yes, I think it is ready for public consumption. :-)",True,"{'HOORAY': ['https://github.com/peterwvj'], 'HEART': ['https://github.com/Adocentyn']}"
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Adocentyn,47,https://github.com/djcb/mu/pull/1403#issuecomment-487181278,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@Chris00 I seem to run into a dependency problem: basically mu4e-icalendar.el depends on gnus-icalendar. I have both of them loaded (in theory) in my lisp subfolder of my emacs config tree. Now I get an error message saying that my /something/something/emacs.d/lisp/gnus-icalendar.el does not provide gnus-icalendar.el which does not make sense since I've actually installed gnus-icalendar.el (i.e, created the file, evaled it etc.)
Did I copy the right gnus-icalendar file? It looks like it was written in 2013 and may be found on Github. Help appreciated.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,48,https://github.com/djcb/mu/pull/1403#issuecomment-487280519,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@Adocentyn I do not understand why you have to copy anything: gnus-icalendar is part of Emacs.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Adocentyn,49,https://github.com/djcb/mu/pull/1403#issuecomment-487281310,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Somehow my search did not indicate gnus-icalendar as being part of the built-in list in my package manager and there is one GitHub repo hosting an old version of it. I'll clear that up then...,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,50,https://github.com/djcb/mu/pull/1403#issuecomment-487477525,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","LIke Chris00 says, gnus is part of recent versions of Emacs. To activate this feature all you have to do is to add the following to your mu4e configuration:
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)
;; Optional
;; (setq mu4e-icalendar-trash-after-reply t)
@Chris00 could you kindly edit the PR description to mention this? Just to avoid confusion.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,51,https://github.com/djcb/mu/pull/1403#issuecomment-487482543,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@Chris00 could you kindly edit the PR description to mention this? Just to avoid confusion.

Isn't this comment enough?",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,52,https://github.com/djcb/mu/pull/1403#issuecomment-487491865,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Yes, I guess you're right, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Adocentyn,53,https://github.com/djcb/mu/pull/1403#issuecomment-487493133,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@peterwvj  : I knew about Gnus being part of Emacs but I thought the gnus-icalendar was actually a separate package -hence my confusion. In any case, adding that one bit to the PR description could certainly help. Thank you @Chris00",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,54,https://github.com/djcb/mu/pull/1403#issuecomment-487614415,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I edited the initial message.  Hopefully, it will avoid future confusion.",True,{'THUMBS_UP': ['https://github.com/peterwvj']}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,55,https://github.com/djcb/mu/pull/1403#issuecomment-487748633,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@djcb I enabled lexical binding and the code is neater now.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,56,https://github.com/djcb/mu/pull/1403#issuecomment-490441688,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@djcb Any additional remark?,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/djcb,57,https://github.com/djcb/mu/pull/1403#issuecomment-490598939,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Looks good overall, see my review comment. I'm happy to merge it otherwise, if you squash your commit to perhaps 4-5 logical ones, prefixed with mu4e:. magit or such tools should hopefully make that easy.
Otherwise, great work, thanks a lot! We need to document it in the manual but I first need to add some chapter for the new gnus-based view.",True,{'THUMBS_UP': ['https://github.com/mtreca']}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,58,https://github.com/djcb/mu/pull/1403#issuecomment-504474115,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@Chris00 did you have time to look into this? (squashing the commits and solving the conflicts in mu4e-draft.el). It would be great to have this feature merged into master for further testing.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,59,https://github.com/djcb/mu/pull/1403#issuecomment-504481879,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@peterwvj I wont have time to finish this before the beginning of July.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,60,https://github.com/djcb/mu/pull/1403#issuecomment-504484992,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Sure, that's perfectly fine. Thanks for letting me know.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/djcb,61,https://github.com/djcb/mu/pull/1403#issuecomment-511003430,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@Chris00 about to merge this, but now we have a merge conflict... any thoughts?",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,62,https://github.com/djcb/mu/pull/1403#issuecomment-511043094,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","On 12 July 2019 at 21:20 CEST, Dirk-Jan C. Binnema ***@***.***> wrote:

 @Chris00 about to merge this, but now we have a merge conflict... any thoughts?
I'll try to have a look this Saturday.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,63,https://github.com/djcb/mu/pull/1403#issuecomment-511117426,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@djcb Conflict fixed,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/djcb,64,https://github.com/djcb/mu/pull/1403#issuecomment-511120366,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Awesome! Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/emacsomancer,65,https://github.com/djcb/mu/pull/1403#issuecomment-513531481,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","using mu-1.3.3, I see the [ Accept ]    [ Tentative ]    [ Decline ] buttons, but when I click [ Accept ], I get the response ""This is a pseudo-article"", which is uninformative to me. Is this to do with how the invite was sent (i.e. it doesn't actually accept responses)? Or a misconfiguration on my part?
My init.el config is:

;; icalendar
(require 'gnus-icalendar)
(gnus-icalendar-setup)

(setq gnus-icalendar-org-capture-file ""~/Documents/Org/Agenda.org"")
(setq gnus-icalendar-org-capture-headline '(""Calendar"")) ;;make sure to create Calendar heading first
(gnus-icalendar-org-setup)",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,66,https://github.com/djcb/mu/pull/1403#issuecomment-513541403,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@emacsomancer Please have a look to the proper instructions to setup ical integration.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/emacsomancer,67,https://github.com/djcb/mu/pull/1403#issuecomment-513576635,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@Chris00 Cheers! Changed
(require 'gnus-icalendar)
(gnus-icalendar-setup)

to:

(require 'mu4e-icalendar)
(mu4e-icalendar-setup)

And it all seems to be working.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/averter,68,https://github.com/djcb/mu/pull/1403#issuecomment-525331108,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@Chris00 Thanks so much for this contribution. However, using version 1.3.4 and the recommended configuration setup the buttons do not show up (only the attached vcs file).
Do I need to call the mu4e-icalendar configuration at any specific point? I am using use-package to call mu4e. Thank you in advance.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,69,https://github.com/djcb/mu/pull/1403#issuecomment-525333848,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","In addition to the ical configuration you need to enable gnus article view. Does the following configuration work?
;; Use gnus article view
(setq mu4e-view-use-gnus t)

(require 'mu4e-icalendar)
(mu4e-icalendar-setup)
;; Optional
;; (setq mu4e-icalendar-trash-after-reply t)",True,{'THUMBS_UP': ['https://github.com/plantarum']}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/averter,70,https://github.com/djcb/mu/pull/1403#issuecomment-525340946,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Hi @peterwvj and thanks for the help.
Not entirely. The buttons do show up, but expanded headers also show up and there is no color highlight as in your above post.
When I try to accept the invitation I get an error
mu4e-error: [mu4e] Message must be non-nil [2 times]
Received: from VI1PR01MB3981.eurprd01.prod.exchangelabs.com
 (2603:10a6:3:9e::26) by HE1PR0102MB3289.eurprd01.prod.exchangelabs.com with
 HTTPS via HE1PR0701CA0058.EURPRD07.PROD.OUTLOOK.COM; Tue, 27 Aug 2019
 14:50:29 +0000
Received: from HE1PR0102CA0004.eurprd01.prod.exchangelabs.com
 (2603:10a6:7:14::17) by VI1PR01MB3981.eurprd01.prod.exchangelabs.com
 (2603:10a6:802:5e::10) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.2199.21; Tue, 27 Aug
 2019 14:50:27 +0000
Received: from DB5EUR01FT016.eop-EUR01.prod.protection.outlook.com
 (2a01:111:f400:7e02::206) by HE1PR0102CA0004.outlook.office365.com
 (2603:10a6:7:14::17) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.20.2199.14 via Frontend
 Transport; Tue, 27 Aug 2019 14:50:27 +0000
Authentication-Results: spf=pass (sender IP is 209.85.221.41)
 smtp.mailfrom=server1; server2; dkim=pass (signature was verified)
 header.d=server1;server2; dmarc=pass action=none
 header.from=gmail.com;compauth=pass reason=100
Received-SPF: Pass (protection.outlook.com: domain of gmail.com designates
 209.85.221.41 as permitted sender) receiver=protection.outlook.com;
 client-ip=209.85.221.41; helo=mail-wr1-f41.google.com;
Received: from mail-wr1-f41.google.com (209.85.221.41) by
 DB5EUR01FT016.mail.protection.outlook.com (10.152.4.255) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA) id
 15.20.2199.13 via Frontend Transport; Tue, 27 Aug 2019 14:50:27 +0000
Received: by mail-wr1-f41.google.com with SMTP id k2so19135144wrq.2
        for <one_of_my@emails>; Tue, 27 Aug 2019 07:50:27 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:from:message-id:to:date:subject;
        bh=6y+DvQSxb39W8mmxrHOsCQSYS/6+wUIq+79Qxb7nyAo=;
        b=XwkBdawUGz5hlRaqf0tQItzAFhuXCkGorGNpMvCoifGA0oTdSxxEKUWlgCqXr3Fak1
         Al+t6Dk8W+nLfUDB2uc7oXTwKQ1q6ScdSjWTJ7wB0EaiVWyWKj2j9q2CL9/1GcNG3gHZ
         v8dspjmlqD+U+2STq6XeUek5r38rlP+647+itjHUIXlCPszHgSjH+Ok1serv/cv9uA5rC
         rdwh5lDO8CTO8aOrrRBX8TbN6lqMLfC3NzHyT/oIOMWHT6awlPGwxCy7RDxaJQ0KyI/P
         CIzrlAkfv+1Rj5J3ZBokFcgIdECIcpFJ5Z8+Ll+R7Uwpim8oCRY6C3JoM2CtY4xmVAcm
         FYsg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:from:message-id:to:date:subject;
        bh=6y+DvQSxb39W8mmxrHOsCQSYS/6+wUIq+79Qxb7nyAo=;
        b=TfNLUvOuWcUPjstCZGfcP6shsVTo+nHiDjAekqYerwA4UyuJFQ5Cv30MPtRcjKEqzX
         PCxJ13UPYUx5lfHnJaO1uoGzjepb5RQzXtqN8lH9t0bTFZnCm6c5+1KCEoJQenCpkoqX
         dXs8x9x9X+2lzuspoIZPRj1RbmyipS/WU3qJZc6MZcDs8Lm/lHjkOgPQVJ90sjtXSpYZ
         IMZmI+TTr25m7VM/nbUmEKxzQyL43lfbN5CO30F/r/EftW8wkRr6XkRGTs2DhkFrjLtr
         pdi8wYDDJu6rDuggI61VI9sFLilaJo1nERtTyKfZNSCEl75DHBsq+e32YnMX3k8+HdFd
         lAdA==
X-Gm-Message-State: APjAAAWwzAnHEILNdk1IPzel/akvR6fWIUJKdXpRTlADA12+Gb7iIZFL
	YjyWzQk5GUitDgPnW2JMRq4MVBOx
X-Google-Smtp-Source: APXvYqx3u0JvTW0mLi0C67AxBjGEfIIt+wwJap4ZY8UZzMrKScJgWKMJJ3IWWMLRKRt23Cz3kMpGQA==
X-Received: by 2002:adf:aa85:: with SMTP id h5mr28425411wrc.329.1566917426533;
        Tue, 27 Aug 2019 07:50:26 -0700 (PDT)
Return-Path: one_of_my_@emails
Received: from [192.168.8.103] (82-132-218-180.dab.02.net. [82.132.218.180])
        by smtp.com with ESMTPSA id n8sm13187352wrw.28.2019.08.27.07.50.25
        for <one_of_my_@emails>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 27 Aug 2019 07:50:26 -0700 (PDT)
From: me <one_of_my_other@emails>
Message-ID: <989b1a95-701f-f885-b9fb-cc33f5c140e1@email.com>
To: myname <one_of_my_@emails>
Date: Tue, 27 Aug 2019 15:50:24 +0100
Subject: Event Invitation: loco
Content-type: multipart/mixed; boundary=""Boundary_(ID_qyG4ZdjoAsiZ+Jo19dCbWQ)""
X-MS-Exchange-Organization-ExpirationStartTime: 27 Aug 2019 14:50:27.0779
 (UTC)
X-MS-Exchange-Organization-ExpirationStartTimeReason: OriginalSubmit
X-MS-Exchange-Organization-ExpirationInterval: 1:00:00:00.0000000
X-MS-Exchange-Organization-ExpirationIntervalReason: OriginalSubmit
X-MS-Exchange-Organization-Network-Message-Id:
 f426c2c5-daa0-47e3-e21b-08d72afde60a
X-EOPAttributedMessage: 0
X-EOPTenantAttributedMessage: 07ef1208-413c-4b5e-9cdd-64ef305754f0:0
X-MS-Exchange-Organization-MessageDirectionality: Incoming
X-Forefront-Antispam-Report:
 CIP:209.85.221.41;IPV:NLI;CTRY:US;EFV:NLI;SFV:NSPM;SFS:(4636009)(2980300002)(199004)(37854004)(189003)(8156004)(82202003)(7596002)(305945005)(16586007)(6916009)(5024004)(7636002)(14444005)(55446002)(36756003)(95326003)(356004)(8676002)(71190400001)(1096003)(5660300002)(59536001)(60616004)(246002)(126002)(2160300002)(16003)(61266001)(956004)(31696002)(2616005)(60626007)(476003)(86362001)(33964004)(31686004)(486006)(106002)(76482006)(26005)(2476003)(568964002)(5000100001)(336012)(426003)(34756004)(73392003);DIR:INB;SFP:;SCL:1;SRVR:VI1PR01MB3981;H:mail-wr1-f41.google.com;FPR:;SPF:Pass;LANG:en;PTR:mail-wr1-f41.google.com;A:1;MX:1;
X-MS-Exchange-Organization-AuthSource:
 DB5EUR01FT016.eop-EUR01.prod.protection.outlook.com
X-MS-Exchange-Organization-AuthAs: Anonymous
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: f426c2c5-daa0-47e3-e21b-08d72afde60a
X-Microsoft-Antispam:
 BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(5600166)(711020)(4605104)(4709080)(8001031)(1402095)(49563074)(71702078);SRVR:VI1PR01MB3981;
X-MS-TrafficTypeDiagnostic: VI1PR01MB3981:
X-MS-Exchange-AtpMessageProperties: SA|SL
X-MS-Oob-TLC-OOBClassifiers: OLM:1148;
X-MS-Exchange-Organization-SCL: 1
X-MS-Exchange-ATPSafeLinks-Stat: 0
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 27 Aug 2019 14:50:27.0679
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: f426c2c5-daa0-47e3-e21b-08d72afde60a
X-MS-Exchange-CrossTenant-Id: 07ef1208-413c-4b5e-9cdd-64ef305754f0
X-MS-Exchange-CrossTenant-FromEntityHeader: Internet
X-MS-Exchange-Transport-CrossTenantHeadersStamped: VI1PR01MB3981
X-MS-Exchange-Transport-EndToEndLatency: 00:00:02.5562681
X-MS-Exchange-Processed-By-BccFoldering: 15.20.2178.000
X-Microsoft-Antispam-Mailbox-Delivery:
	ucf:0;jmr:0;ex:0;auth:0;dest:I;ENG:(20160514016)(750127)(520011016)(944506383)(944626516);
X-Microsoft-Antispam-Message-Info:
	zv+bC0JX62/p2wYtMlEI5NNfbI8858NJnljAqXa/K//OgYQTXFo0NAKCdNwLD9KDEvbB5kocOxPs3pscMJfwehRqG38+ibXEKZYvimMmFuodS2NqGItxhgW3D78BCP+lYDnaPvYSL4wYlG/1Zrw87boOYvNEsHyIOeq/LcwT4OHrflEhIEh0ZYy+Sn7f+igRuvQjvIRzJqG38VsVBFC1rdcUrXgFIkD35uauOjf9hLv1qNJ7xm0QC5YHUwoJSAkFcSI2kmHgyc0T0GNDm436QEMLI2dE8uhDWA2UVccxSoCUa6Alz+HMW7OEr9uz0HDFMolNouccBhK2jcBzfarI3CSLN9SBVhQWJ8D/94jXA2XBOwKlFXUolH4bAFZGaMPK5yWSstW1XILjK7h6XBmqy0/E/tgaickQ4WB/OtgOYNSrEKYYuk0W68a5w+K7SHMAiQIyhu/xapqRJ00Z+dAqCn+KHA6eDpsQQkC7WWqUc0rW7wh9wYt9cMzXI2vdsWdTwHAWaE2WDhpCp1cAB6oO/203DV6b7f+6bL6/mauucKs5B3IMlPgyFIRaodcUIoz68rXYqrW3T1VOqgG/6IfPum4x8Yeq5+bpjqlYNz8oPvw0wD47cCv+t+8UtUCUPQ35H/DRFGR8leqCCzrCED0awmNTi9d14LHrxM8jg9FCNm7sysQrkCKCthUTte6Qokmef4e82OBH+3zqQcCwECvNj7W8qH+oojXF0NSJ6InzhUuQhmh455jhuZ4FVOisRvNpR/Tcw1gAGvxJSAa+TJZqY9pnovl39e3W1MKzlpa1Nz/F77KtFIdi7nQLfIY6Ep9HtqVldcDdew1o5cxzR1Wfr5NRciFJZRw0NlGQBjjqOtGtIrSmxpC0QM9x/QswnrXB/Fu7HuCDXzvc0+6W06ae7Cxj/DetoR+Gw3R0aZmJ/z3hq52xKWCrS1XdFbdSPASOyvAKveWDZjyDL9Kv2J3KsZfxBRgiI9SY8/LhdULLFxFMtw4pGa9Fci98R8R+SdOCY0/2CaZWIohgciBkB4pnfX80GMxS3hUZHo0+ZwDW9sOXzg+YsudJNs7DPb2kP9rU3naUBmgM+vdDHjnNU8gSwRg5ria7CgzBFFxZ3+nz3zI1oa0luOZ5sqdPjD+/0Xl0sZtWkjlmoYJu/CqyK3Djze9WW5wao086M0Unu9OJPF/NEEPQ6UqQlxJPLzKdcdV7RfLkYlZMJUyubtA0nOYyqEz4Wjk/mArwJBEZNjhiU8A=
MIME-Version: 1.0
X-TUID: UqKS5iZtkPzf

[ Accept ]    [ Tentative ]    [ Decline ]",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/peterwvj,71,https://github.com/djcb/mu/pull/1403#issuecomment-525347957,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","The highlighting might just be theme related. My current theme does not highlight them either.
What does the stacktrace look like?
Could it be that something else changed that would require you to index your messages again? Perhaps you need to run mu index --rebuild after upgrading mu?",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/averter,72,https://github.com/djcb/mu/pull/1403#issuecomment-525353442,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Ok, I was able to get it to work as soon as I commented the lines below. Thank you very much. Incidentally, how can I make the events show up in my Org-agenda?
(setq gnus-icalendar-org-capture-file ""~/org/NOTES.org"")
(setq gnus-icalendar-org-capture-headline '(""Calendar""))
(gnus-icalendar-org-setup)",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,73,https://github.com/djcb/mu/pull/1403#issuecomment-525368906,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Org mode integration has to be worked on.  I am afraid I have no time to work on this right now.,True,{'THUMBS_UP': ['https://github.com/averter']}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/averter,74,https://github.com/djcb/mu/pull/1403#issuecomment-525434991,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",For those who have to work with a MS Exchange server there is this option to probe the calendar of the server using excorporate.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/dmacvicar,75,https://github.com/djcb/mu/pull/1403#issuecomment-533435821,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@Chris00 Would this work in mu/mu4e 1.2 if I take a copy of mu4e-icalendar.el ?,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,76,https://github.com/djcb/mu/pull/1403#issuecomment-533472969,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@dmacvicar I suppose it would (with the Gnus based viewer).  In any case, you can try — it should do no harm.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/dmacvicar,77,https://github.com/djcb/mu/pull/1403#issuecomment-533792334,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Thanks @Chris00 , this worked very well:
    (use-package mu4e-icalendar
      :config
      (mu4e-icalendar-setup)
      :quelpa (mu4e-icalendar :fetcher url :url ""https://raw.githubusercontent.com/djcb/mu/master/mu4e/mu4e-icalendar.el",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/dmacvicar,78,https://github.com/djcb/mu/pull/1403#issuecomment-534014615,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Accepting the invitations is not working for me. I get the This is a pseudo-article error as described here, even if I am doing the specific mu4e setup.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,79,https://github.com/djcb/mu/pull/1403#issuecomment-535130105,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@dmacvicar Then please upgrade to the latest mu4e — the Gnus mode was also greatly improved.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/dmacvicar,80,https://github.com/djcb/mu/pull/1403#issuecomment-535893976,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Great. I built my own package from git and I confirm everything is working.,True,{'THUMBS_UP': ['https://github.com/Chris00']}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/bepolymathe,81,https://github.com/djcb/mu/pull/1403#issuecomment-549281762,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@Chris00 What's the good version of mu4e ? I have to a This is a pseudo-article error,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,82,https://github.com/djcb/mu/pull/1403#issuecomment-549291045,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",@bepolymathe You must use the development version of mu.  (It is not difficult to compile yourself.),True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,83,https://github.com/djcb/mu/pull/1403#issuecomment-549291623,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Or you may want to try @dmacvicar recipie.,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/bepolymathe,84,https://github.com/djcb/mu/pull/1403#issuecomment-549310588,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Okay. I'm not too much of a stuntman. Is integration into the stable version planned ?,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/behaghel,85,https://github.com/djcb/mu/pull/1403#issuecomment-626150699,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@Chris00 just checking, when I click the [ Accept ] button and send it straightaway, should I expect the organiser's calendar to automatically update my status as invitee and mark me as accepted? I have tried from both an outlook calendar and a google calendar and if I get no error in the process and acceptance emails reach the organisers' inboxes fine, their calendar still mark me as ""didn't respond"".
If that's not the expected behaviour, any suggestion on what to look for to debug? I have tried to compare the ICS produced by GMail vs the one generated here and if there are differences, nothing substantial jumped at me.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/behaghel,86,https://github.com/djcb/mu/pull/1403#issuecomment-626186803,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","Correction: it works out of the box for Google assuming you don't send the invite from an email that mu knows as yours. If both emails for organiser and attendee are listed as personal addresses in your mu, it then creates two ATTENDEE;PARTSTAT: lines one for each which then break the updating of the organiser calendar. In fact I have even managed to get 3+ of these lines by inviting more emails that I own.
In other words, I run into an edge case due to my test setup. I don't observe the same phenomenon with Outlook Calendar, yet I can't get it to work. I will try to test it from an email I don't own and will report back to discard such edge case.",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/behaghel,87,https://github.com/djcb/mu/pull/1403#issuecomment-626689596,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","I have been able to try with a different outlook account and indeed my setup that just works with Google Calendar doesn't with Outlook Calendar: RSVP is received, text/calendar part looks all right but the calendar still marks my invitation as ""didn't respond"".",True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/dmacvicar,88,https://github.com/djcb/mu/pull/1403#issuecomment-637318247,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",This broke for me recently. I get no attachment once I click the accept button. Did it happen for anyone else?,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/Chris00,89,https://github.com/djcb/mu/pull/1403#issuecomment-643593622,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","@behaghel May you open an issue with these details?  It will be easier to follow.  If the organizer is you, you do not expect that accepting your own event updates your calendar, do you?",True,{'THUMBS_UP': ['https://github.com/behaghel']}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/behaghel,90,https://github.com/djcb/mu/pull/1403#issuecomment-643656104,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)",Good idea @Chris00. Done: #1729,True,{}
djcb/mu,https://github.com/djcb/mu,1403,2019-04-12T22:58:40Z,2019-07-13T13:00:10Z,2020-07-06T09:54:59Z,MERGED,True,230,13,5,https://github.com/Chris00,Allow to reply to icalendar invitations,16,[],https://github.com/djcb/mu/pull/1403,https://github.com/sje30,91,https://github.com/djcb/mu/pull/1403#issuecomment-654135390,"This is a proof of concept to reply to icalendar emails when the viewer is Gnus.  It is based on gnus-icalendar which is part of Emacs.
To activate
(require 'mu4e-icalendar)
(mu4e-icalendar-setup)","This looks great.   I've just tried it and it works on the small example I tried.  Is it worth adding to the info for mu4e?  (If so, I'm happy to send a patch)",True,{'THUMBS_UP': ['https://github.com/hubert-mns']}
djcb/mu,https://github.com/djcb/mu,1405,2019-04-18T14:17:35Z,2019-04-18T19:06:27Z,2019-04-18T19:06:31Z,MERGED,True,3,3,1,https://github.com/wavexx,Quote '@' symbols in texinfo's @code section,1,[],https://github.com/djcb/mu/pull/1405,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1405,Noticed while rebuilding today's master.,Noticed while rebuilding today's master.,True,{'THUMBS_UP': ['https://github.com/Chris00']}
djcb/mu,https://github.com/djcb/mu,1405,2019-04-18T14:17:35Z,2019-04-18T19:06:27Z,2019-04-18T19:06:31Z,MERGED,True,3,3,1,https://github.com/wavexx,Quote '@' symbols in texinfo's @code section,1,[],https://github.com/djcb/mu/pull/1405,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1405#issuecomment-484645687,Noticed while rebuilding today's master.,I had an update but forgot to push it... so we'll take this one. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1406,2019-04-20T10:16:53Z,2019-04-21T19:19:08Z,2019-04-21T19:19:17Z,MERGED,True,15,2,1,https://github.com/Chris00,Better conversion to HTML,1,[],https://github.com/djcb/mu/pull/1406,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1406,"Before this commit the HTML was looking as
From: From: email
To: To: email","Before this commit the HTML was looking as
From: From: email
To: To: email",True,{}
djcb/mu,https://github.com/djcb/mu,1406,2019-04-20T10:16:53Z,2019-04-21T19:19:08Z,2019-04-21T19:19:17Z,MERGED,True,15,2,1,https://github.com/Chris00,Better conversion to HTML,1,[],https://github.com/djcb/mu/pull/1406,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1406#issuecomment-485275813,"Before this commit the HTML was looking as
From: From: email
To: To: email",Oh thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1407,2019-04-21T20:00:14Z,2019-04-23T03:40:47Z,2019-04-23T08:34:10Z,MERGED,True,8,3,1,https://github.com/Chris00,Escape HTML entities,1,[],https://github.com/djcb/mu/pull/1407,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1407,"In addition to the previous fix, one also has to escape HTML entities.","In addition to the previous fix, one also has to escape HTML entities.",True,{}
djcb/mu,https://github.com/djcb/mu,1407,2019-04-21T20:00:14Z,2019-04-23T03:40:47Z,2019-04-23T08:34:10Z,MERGED,True,8,3,1,https://github.com/Chris00,Escape HTML entities,1,[],https://github.com/djcb/mu/pull/1407,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1407#issuecomment-485631825,"In addition to the previous fix, one also has to escape HTML entities.","Looks good, merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1409,2019-04-23T18:24:04Z,2019-04-27T05:18:20Z,2019-04-27T05:18:28Z,MERGED,True,1,1,1,https://github.com/edwargix,Fix grammar,1,[],https://github.com/djcb/mu/pull/1409,https://github.com/edwargix,1,https://github.com/djcb/mu/pull/1409,,,True,{}
djcb/mu,https://github.com/djcb/mu,1409,2019-04-23T18:24:04Z,2019-04-27T05:18:20Z,2019-04-27T05:18:28Z,MERGED,True,1,1,1,https://github.com/edwargix,Fix grammar,1,[],https://github.com/djcb/mu/pull/1409,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1409#issuecomment-487256194,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1413,2019-04-29T18:31:30Z,2019-05-08T18:32:12Z,2020-02-21T17:55:42Z,MERGED,True,5,4,1,https://github.com/Chris00,Fix mu4e~headers-remove-handler,1,[],https://github.com/djcb/mu/pull/1413,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1413,"The documentation speaks of SKIP-HOOK which is not an argument;
I do not understand why get-buffer-window-list is limited to the current frame (if we were viewing the message in another frame, should not we close it too?).","The documentation speaks of SKIP-HOOK which is not an argument;
I do not understand why get-buffer-window-list is limited to the current frame (if we were viewing the message in another frame, should not we close it too?).",True,{}
djcb/mu,https://github.com/djcb/mu,1413,2019-04-29T18:31:30Z,2019-05-08T18:32:12Z,2020-02-21T17:55:42Z,MERGED,True,5,4,1,https://github.com/Chris00,Fix mu4e~headers-remove-handler,1,[],https://github.com/djcb/mu/pull/1413,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1413#issuecomment-490599964,"The documentation speaks of SKIP-HOOK which is not an argument;
I do not understand why get-buffer-window-list is limited to the current frame (if we were viewing the message in another frame, should not we close it too?).","Yeah, that makes sense -- thanks. Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1414,2019-04-30T16:56:32Z,2019-05-01T05:36:39Z,2019-05-01T05:36:42Z,MERGED,True,1,1,1,https://github.com/garaud,mu4e: fix a remaining local variable 'short',1,[],https://github.com/djcb/mu/pull/1414,https://github.com/garaud,1,https://github.com/djcb/mu/pull/1414,"Hi,
There was a traceback which looked like ""void function error short"" when the function mu4e~action-header-to-html was called.
Great software, keep going 🙂 !!
Thanks!","Hi,
There was a traceback which looked like ""void function error short"" when the function mu4e~action-header-to-html was called.
Great software, keep going 🙂 !!
Thanks!",True,{'THUMBS_UP': ['https://github.com/Chris00']}
djcb/mu,https://github.com/djcb/mu,1414,2019-04-30T16:56:32Z,2019-05-01T05:36:39Z,2019-05-01T05:36:42Z,MERGED,True,1,1,1,https://github.com/garaud,mu4e: fix a remaining local variable 'short',1,[],https://github.com/djcb/mu/pull/1414,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1414#issuecomment-488076954,"Hi,
There was a traceback which looked like ""void function error short"" when the function mu4e~action-header-to-html was called.
Great software, keep going 🙂 !!
Thanks!",Thanks for spotting this!,True,{}
djcb/mu,https://github.com/djcb/mu,1414,2019-04-30T16:56:32Z,2019-05-01T05:36:39Z,2019-05-01T05:36:42Z,MERGED,True,1,1,1,https://github.com/garaud,mu4e: fix a remaining local variable 'short',1,[],https://github.com/djcb/mu/pull/1414,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1414#issuecomment-488214547,"Hi,
There was a traceback which looked like ""void function error short"" when the function mu4e~action-header-to-html was called.
Great software, keep going 🙂 !!
Thanks!","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1417,2019-05-06T15:03:17Z,2019-05-08T18:10:24Z,2019-05-08T18:10:31Z,MERGED,True,1,1,1,https://github.com/eklitzke,Fix pedantic -Wparentheses warning generated by gcc 9,1,[],https://github.com/djcb/mu/pull/1417,https://github.com/eklitzke,1,https://github.com/djcb/mu/pull/1417,"The current code is perfectly fine, and this commit doesn't change any logic
because the C++ order of operations rules do the exact same thing here with or without the additional parentheses.
However, GCC 9 with the -Wparentheses flag is emitting a warning when compiling mu due to the fact that in general mixing && and || in the same line can be a source of confusion. This could be an issue if you wanted to compile mu using -Werror, for example:
mu-msg.c: In function 'accumulate_body':
mu-msg.c:461:23: warning: suggest parentheses around '&&' within '||' [-Wparentheses]
  461 |  if (bdata->want_html && is_html || !bdata->want_html && is_plain)
      |      ~~~~~~~~~~~~~~~~~^~~~~~~~~~","The current code is perfectly fine, and this commit doesn't change any logic
because the C++ order of operations rules do the exact same thing here with or without the additional parentheses.
However, GCC 9 with the -Wparentheses flag is emitting a warning when compiling mu due to the fact that in general mixing && and || in the same line can be a source of confusion. This could be an issue if you wanted to compile mu using -Werror, for example:
mu-msg.c: In function 'accumulate_body':
mu-msg.c:461:23: warning: suggest parentheses around '&&' within '||' [-Wparentheses]
  461 |  if (bdata->want_html && is_html || !bdata->want_html && is_plain)
      |      ~~~~~~~~~~~~~~~~~^~~~~~~~~~",True,{}
djcb/mu,https://github.com/djcb/mu,1417,2019-05-06T15:03:17Z,2019-05-08T18:10:24Z,2019-05-08T18:10:31Z,MERGED,True,1,1,1,https://github.com/eklitzke,Fix pedantic -Wparentheses warning generated by gcc 9,1,[],https://github.com/djcb/mu/pull/1417,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1417#issuecomment-490592217,"The current code is perfectly fine, and this commit doesn't change any logic
because the C++ order of operations rules do the exact same thing here with or without the additional parentheses.
However, GCC 9 with the -Wparentheses flag is emitting a warning when compiling mu due to the fact that in general mixing && and || in the same line can be a source of confusion. This could be an issue if you wanted to compile mu using -Werror, for example:
mu-msg.c: In function 'accumulate_body':
mu-msg.c:461:23: warning: suggest parentheses around '&&' within '||' [-Wparentheses]
  461 |  if (bdata->want_html && is_html || !bdata->want_html && is_plain)
      |      ~~~~~~~~~~~~~~~~~^~~~~~~~~~",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/bojov,1,https://github.com/djcb/mu/pull/1418,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1418#issuecomment-490599255,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,"Great, thanks. Can you squash it to  single commit?",True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/bojov,3,https://github.com/djcb/mu/pull/1418#issuecomment-490623906,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,"Yes, it could be squashed to a single commit.",True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1418#issuecomment-490752875,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,"Thanks -- if you do that, I'll merge it.",True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/omajid,5,https://github.com/djcb/mu/pull/1418#issuecomment-510286198,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,"Just as an FYI: this package was recently added to Fedora, under the name maildir-utils. The current Fedora spec file is here: https://src.fedoraproject.org/rpms/maildir-utils/blob/master/f/maildir-utils.spec",True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1418#issuecomment-511004520,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,"Oh, then it seems we shouldn't merge this... or?",True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/omajid,7,https://github.com/djcb/mu/pull/1418#issuecomment-511226430,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,"IMHO, we shouldn't, for a couple of reasons:

There's a spec file already in Fedora. This wont replace that unless @bojov works with the Fedora maintainers. If they work together, there's still nothing to be gained by putting a spec file here, I believe.
If this spec file is meant as a guide for packagers for other distrbutions, we might as well just add a link and point it to Fedora's spec file
The package names are different because Fedora seems to have gone with Debian's maildir-utlis name
The spec file is (thankfully!) actually mostly obvious and straightforward. It's not too difficult to create from scratch for someone familiar with spec files. (Compare this one to the rather more crazy spec files like this one).
There's a number of issues (not blockers, but they would need to be discussed and addressed in some way) in this spec file that would be flagged by Fedora folks during a review. Here's what I can spot quickly:

Inconsistency between spec file name (mu.spec) vs main package name (mu-mail-search)
The Release field is very strage.
The Group tag is to be avoided
The conflicts with mu (""A simple Python editor not only for micro:bit"") is not ideal. Generally Fedora prefers to avoid conflicts if possible.
%Changelog entries shouldn't contain macros like %{gittime}",True,{}
djcb/mu,https://github.com/djcb/mu,1418,2019-05-07T11:26:04Z,2019-08-08T19:31:35Z,2019-08-08T19:31:35Z,CLOSED,False,177,0,3,https://github.com/bojov,Fedora spec,10,[],https://github.com/djcb/mu/pull/1418,https://github.com/djcb,8,https://github.com/djcb/mu/pull/1418#issuecomment-519656807,This is an attempt to create a spec file for Fedora. It was tested almost a year over 4 releases. Packages can be found at Fedora Copr.,"Ok @omajid has some good comments, so I'll close this. Regardless, thanks for the effort, @bojov!",True,{}
djcb/mu,https://github.com/djcb/mu,1422,2019-05-11T08:40:20Z,2019-05-12T12:35:20Z,2019-05-13T04:41:51Z,MERGED,True,34,31,2,https://github.com/piyushs,Fix the behavior of guile/examples/msg-graphs and a typo in guile/mu/plots.scm,3,[],https://github.com/djcb/mu/pull/1422,https://github.com/piyushs,1,https://github.com/djcb/mu/pull/1422,7498760 fixes the minor typo pointed out in #1421 while c4e037c fixes #1423,7498760 fixes the minor typo pointed out in #1421 while c4e037c fixes #1423,True,{}
djcb/mu,https://github.com/djcb/mu,1422,2019-05-11T08:40:20Z,2019-05-12T12:35:20Z,2019-05-13T04:41:51Z,MERGED,True,34,31,2,https://github.com/piyushs,Fix the behavior of guile/examples/msg-graphs and a typo in guile/mu/plots.scm,3,[],https://github.com/djcb/mu/pull/1422,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1422#issuecomment-491591840,7498760 fixes the minor typo pointed out in #1421 while c4e037c fixes #1423,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1422,2019-05-11T08:40:20Z,2019-05-12T12:35:20Z,2019-05-13T04:41:51Z,MERGED,True,34,31,2,https://github.com/piyushs,Fix the behavior of guile/examples/msg-graphs and a typo in guile/mu/plots.scm,3,[],https://github.com/djcb/mu/pull/1422,https://github.com/piyushs,3,https://github.com/djcb/mu/pull/1422#issuecomment-491673634,7498760 fixes the minor typo pointed out in #1421 while c4e037c fixes #1423,"Thanks!  This pull request also fixes #1421, so you might consider closing that too.",True,{}
djcb/mu,https://github.com/djcb/mu,1437,2019-06-19T07:12:41Z,2019-06-22T09:13:19Z,2019-06-22T09:13:25Z,MERGED,True,1,4,1,https://github.com/sham1,Replace AM_PROG_LIBTOOL with LT_INIT,1,[],https://github.com/djcb/mu/pull/1437,https://github.com/sham1,1,https://github.com/djcb/mu/pull/1437,"Since mu seems to already gate Autoconf to have version >= 2.68, which was released back in 2010, it seems rather silly to not use more modern m4 macros, like for instance LT_INIT which requires libtool version >= 1.9b, which itself was released in 2004 and where the first stable version, libtool 2.2 was released back in 2008.
Any distro that has a sufficiently recent Autoconf has a recent enough libtool.","Since mu seems to already gate Autoconf to have version >= 2.68, which was released back in 2010, it seems rather silly to not use more modern m4 macros, like for instance LT_INIT which requires libtool version >= 1.9b, which itself was released in 2004 and where the first stable version, libtool 2.2 was released back in 2008.
Any distro that has a sufficiently recent Autoconf has a recent enough libtool.",True,{}
djcb/mu,https://github.com/djcb/mu,1437,2019-06-19T07:12:41Z,2019-06-22T09:13:19Z,2019-06-22T09:13:25Z,MERGED,True,1,4,1,https://github.com/sham1,Replace AM_PROG_LIBTOOL with LT_INIT,1,[],https://github.com/djcb/mu/pull/1437,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1437#issuecomment-504647716,"Since mu seems to already gate Autoconf to have version >= 2.68, which was released back in 2010, it seems rather silly to not use more modern m4 macros, like for instance LT_INIT which requires libtool version >= 1.9b, which itself was released in 2004 and where the first stable version, libtool 2.2 was released back in 2008.
Any distro that has a sufficiently recent Autoconf has a recent enough libtool.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1438,2019-06-19T17:33:29Z,2019-06-22T05:46:58Z,2019-06-22T05:47:04Z,MERGED,True,1,1,1,https://github.com/znewman01,mu4e: Update reference to obsolete variable in documentation,1,[],https://github.com/djcb/mu/pull/1438,https://github.com/znewman01,1,https://github.com/djcb/mu/pull/1438,,,True,{}
djcb/mu,https://github.com/djcb/mu,1438,2019-06-19T17:33:29Z,2019-06-22T05:46:58Z,2019-06-22T05:47:04Z,MERGED,True,1,1,1,https://github.com/znewman01,mu4e: Update reference to obsolete variable in documentation,1,[],https://github.com/djcb/mu/pull/1438,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1438#issuecomment-504633225,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/rotty,1,https://github.com/djcb/mu/pull/1442,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.","See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.",True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1442#issuecomment-543299854,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.",I glanced over your code but it does not seem to also target the Gnus-based viewer (which may become the default in some time...).,True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/rotty,3,https://github.com/djcb/mu/pull/1442#issuecomment-543525105,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.","Yeah, I've realized that after coding the patch, and was not motivated enough to address the Gnus view, since I had a solution that addressed my immediate issue; I'll take a look at what implementing this based on the Gnus article view would entail.
Edit: also, as noted, I wanted to make sure this is a deemed a useful, mergable feature in principle, before investing more time into something that is then not going to be merged anyway. I still haven't got that verdict yet.",True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1442#issuecomment-591695814,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.","Effort certainly appreciated, but yeah, we're trying to avoid any updates to the ""old"" mu4e-view.
Could this be used with the gnus-view? Or perhaps there's something like that there already?
There's https://www.gnu.org/software/emacs/manual/html_node/gnus/Article-Washing.html at least.",True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/1442#issuecomment-591808198,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.","On 27 February 2020 at 00:23 CET, Dirk-Jan C. Binnema ***@***.***> wrote:

 Effort certainly appreciated, but yeah, we're trying to avoid any updates to the ""old"" mu4e-view.

 Could this be used with the gnus-view? Or perhaps there's something like that there already?  There's https://www.gnu.org/software/emacs/manual/html_node/gnus/Article-Washing.html at least.
At least we wan try to piggyback on that — at the moment, these commands return `gnus-summary-select-article: This is a pseudo-article`.",True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1442#issuecomment-591829546,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.","Yeah, all those commands expect the ""Summary buffer"" (similar to our headers-view) to do something. Not sure if the gnus people would be interested in changing that, and/or how far we could get with e.g. advising functions. I'd like to avoid including modified versions as part of mu4e.",True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/Chris00,7,https://github.com/djcb/mu/pull/1442#issuecomment-591885218,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.","On 27 February 2020 at 08:45 CET, Dirk-Jan C. Binnema ***@***.***> wrote:

 Yeah, all those commands expect the ""Summary buffer"" (similar to our headers-view) to do something. Not sure if the gnus people would be interested in changing that, and/or how far we could get with e.g. advising functions. I'd like to avoid including modified versions as part of mu4e.
Advising it would likely do the trick — that was the point of introducing the local variable `mu4e~view-rendering`.",True,{}
djcb/mu,https://github.com/djcb/mu,1442,2019-07-01T00:07:02Z,2021-06-12T15:38:18Z,2021-06-12T15:38:18Z,CLOSED,False,37,3,1,https://github.com/rotty,"mu4e: Allow ""washing"" of URLs in message view",1,[],https://github.com/djcb/mu/pull/1442,https://github.com/djcb,8,https://github.com/djcb/mu/pull/1442#issuecomment-860069884,"See the commit message for details; this PR does not yet include
documentation changes, as I first want to check whether this is (in
principle) considered a reasonable addition to mu4e.","Okay, guess this is obsolete then.",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,1,https://github.com/djcb/mu/pull/1444,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/derkling,2,https://github.com/djcb/mu/pull/1444#issuecomment-517823321,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","FWIW, the current sorting behavior is the same one you get using mutt for example.
It kind of make sense to me to have messages ordered by date, from the most recent to the oldest one.
Maybe you can hide that change behind a configuration variable?",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,3,https://github.com/djcb/mu/pull/1444#issuecomment-542140745,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Hi @derkling sorry for the very late reply.
As you suggested it, I added an option to sort differently childs of a thread.
The threads are still sorted according to their leader but all the childs of each thread are sorted based on the sortfield only with the option --threads_ignore_leader is enabled.
I add an example in the commit msg.
Without the option enabled, the default sorting remains the same.
Please let me know what do you think about this.
I'm not totally convinced about the name of the option, maybe another name will suit better ...
Thanks",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,4,https://github.com/djcb/mu/pull/1444#issuecomment-550371353,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson",gentle ping ?,True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1444#issuecomment-576817310,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson",I'll take a look soon -- sorry fo the delay.,True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,6,https://github.com/djcb/mu/pull/1444#issuecomment-577076471,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson",@djcb no problem thanks :),True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/djcb,7,https://github.com/djcb/mu/pull/1444#issuecomment-577364925,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Had a look at this, codes looks nice & clean - good work!
What's a bit unclear to me is what this changes / improves compared to the current sorting. Can you explain?",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,8,https://github.com/djcb/mu/pull/1444#issuecomment-577631503,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Yes sure, I tried to explain in details in the commit msg but maybe it's not very clear ...
Let's take an example of a random thread (sorted by date) taken from a kernel mailing-list:

Normal behavior without the ""--threads-ignore-leader"" option:

2020-01-16  Remi Pommarel     [PATCH v5 0/7] PCI: amlogic: Make PCIe working reliably on AXG platforms
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE
2020-01-16  Bjorn Helgaas       ┃        ┣━▶ Re: [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE
2020-01-23  Neil Armstrong      ┃            ┗━▶ Re: [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE
2020-01-23  Jerome Brunet       ┃        ┗━▶ Re: [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 4/7] arm64: dts: meson-axg: Add PCIE PHY nodes
2020-01-23  Neil Armstrong      ┃        ┗━▶ Re: [PATCH v5 4/7] arm64: dts: meson-axg: Add PCIE PHY nodes
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 6/7] phy: amlogic: Add Amlogic AXG PCIE PHY Driver
2020-01-23  Jerome Brunet       ┃        ┗━▶ Re: [PATCH v5 6/7] phy: amlogic: Add Amlogic AXG PCIE PHY Driver
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 5/7] phy: amlogic: Add Amlogic AXG MIPI/PCIE analog PHY Driver
2020-01-23  Jerome Brunet       ┃        ┗━▶ Re: [PATCH v5 5/7] phy: amlogic: Add Amlogic AXG MIPI/PCIE analog PHY Driver
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 3/7] dt-bindings: PCI: meson: Update PCIE bindings documentation
2020-01-17  Rob Herring         ┃        ┗━▶ Re: [PATCH v5 3/7] dt-bindings: PCI: meson: Update PCIE bindings documentation
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 2/7] dt-bindings: Add AXG shared MIPI/PCIE analog PHY bindings
2020-01-17  Rob Herring         ┃        ┗━▶ Re: [PATCH v5 2/7] dt-bindings: Add AXG shared MIPI/PCIE analog PHY bindings
2020-01-16  Remi Pommarel       ┗━▶ [PATCH v5 1/7] dt-bindings: Add AXG PCIE PHY bindings
2020-01-17  Rob Herring         ┃        ┗━▶ Re: [PATCH v5 1/7] dt-bindings: Add AXG PCIE PHY bindings

In this case, all the childs of each thread are sorted according to their leader based on
the sortfield.
That's why [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE email goes up.

With ""--threads-ignore-leader"" option:

2020-01-16  Remi Pommarel     [PATCH v5 0/7] PCI: amlogic: Make PCIe working reliably on AXG platforms
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 1/7] dt-bindings: Add AXG PCIE PHY bindings
2020-01-17  Rob Herring         ┃        ┗━▶ Re: [PATCH v5 1/7] dt-bindings: Add AXG PCIE PHY bindings
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 2/7] dt-bindings: Add AXG shared MIPI/PCIE analog PHY bindings
2020-01-17  Rob Herring         ┃        ┗━▶ Re: [PATCH v5 2/7] dt-bindings: Add AXG shared MIPI/PCIE analog PHY bindings
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 3/7] dt-bindings: PCI: meson: Update PCIE bindings documentation
2020-01-17  Rob Herring         ┃        ┗━▶ Re: [PATCH v5 3/7] dt-bindings: PCI: meson: Update PCIE bindings documentation
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 4/7] arm64: dts: meson-axg: Add PCIE PHY nodes
2020-01-23  Neil Armstrong      ┃        ┗━▶ Re: [PATCH v5 4/7] arm64: dts: meson-axg: Add PCIE PHY nodes
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 5/7] phy: amlogic: Add Amlogic AXG MIPI/PCIE analog PHY Driver
2020-01-23  Jerome Brunet       ┃        ┗━▶ Re: [PATCH v5 5/7] phy: amlogic: Add Amlogic AXG MIPI/PCIE analog PHY Driver
2020-01-16  Remi Pommarel       ┣━▶ [PATCH v5 6/7] phy: amlogic: Add Amlogic AXG PCIE PHY Driver
2020-01-23  Jerome Brunet       ┃        ┗━▶ Re: [PATCH v5 6/7] phy: amlogic: Add Amlogic AXG PCIE PHY Driver
2020-01-16  Remi Pommarel       ┗━▶ [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE
2020-01-16  Bjorn Helgaas       ┃        ┣━▶ Re: [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE
2020-01-23  Neil Armstrong      ┃            ┗━▶ Re: [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE
2020-01-23  Jerome Brunet       ┃        ┗━▶ Re: [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE

In this case, the threads are still sorted according to their leader but all the childs of each thread are now sorted based on the sortfield ONLY.
In this way [PATCH v5 7/7] PCI: amlogic: Use AXG PCIE email doesn't go up and so we keep the order of the patch series.",True,"{'THUMBS_UP': ['https://github.com/loysollivier', 'https://github.com/alexmurray', 'https://github.com/makohoek', 'https://github.com/akoehn']}"
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/loysollivier,9,https://github.com/djcb/mu/pull/1444#issuecomment-577702841,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson",+1 for having an option to have this sorting behavior :),True,"{'THUMBS_UP': ['https://github.com/alexmurray', 'https://github.com/makohoek']}"
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,10,https://github.com/djcb/mu/pull/1444#issuecomment-580772121,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson",@djcb do you need more infos about the following patch ?,True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/djcb,11,https://github.com/djcb/mu/pull/1444#issuecomment-581179779,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Ah, thanks. It seems like a general improvement.
I'm not a big fan of adding more options (which will get less testing etc, and might break if other things change etc., so if we change this, I'd like to make it just the way to sort, without extra options.
Anyway, I'll ask on the mailing-list if people have strong opinions on one or the other. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,12,https://github.com/djcb/mu/pull/1444#issuecomment-581356028,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Thanks for your feedbacks @djcb .
Since I don't really know how most of the people prefer to sort threads and I don't want to impose my way of sorting threads ...
For the moment I added as an option to let the user choose between the current threads sorting and the one I'm proposing.
But I'm open to any solution with or without the option :)",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/djcb,13,https://github.com/djcb/mu/pull/1444#issuecomment-583782663,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Well, seem son the mu maiing list people are unanimously in favour if this, so would be great to use this. Could you make a PR without the options, and a few tests cases? We have a few unit tests involving threading, so I guess  those need updating and/or some new test. Thanks!",True,{'THUMBS_UP': ['https://github.com/JulienMasson']}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/JulienMasson,14,https://github.com/djcb/mu/pull/1444#issuecomment-584162520,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","@djcb I have updated/rebased the patch with your last comments :)
For the tests cases I only run make test, do I need to do other tests ?
Also for infos after rebasing my repo I had to add these files manually to be able to configure/compile:
m4/lib-ld.m4
m4/lib-prefix.m4
m4/host-cpu-c-abi.m4

it looks like it's due to this change:
8aa433b56b798a07a7e5ec77cc91bdee91c5d1a2 m4: grab newer upstream m4 (for code-coverage)
I'm on Fedora 30.
BTW thanks for the reviews, I hope users will like this new sorting ;)",True,{}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/djcb,15,https://github.com/djcb/mu/pull/1444#issuecomment-584322311,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Great, thank you for work and your patience! Merged.",True,{'HOORAY': ['https://github.com/makohoek']}
djcb/mu,https://github.com/djcb/mu,1444,2019-07-10T12:49:10Z,2020-02-10T19:58:34Z,2020-02-10T20:00:26Z,MERGED,True,72,63,2,https://github.com/JulienMasson,mu: add an option to ignore leader when sorting childs of a thread,1,[],https://github.com/djcb/mu/pull/1444,https://github.com/djcb,16,https://github.com/djcb/mu/pull/1444#issuecomment-584322846,"Hi Guys,
First of all, thanks a lot for all the work you did around mu, it works very well.
I used it daily and it saves me a lot of time.
At my company I ""converted"" couple colleagues to use mu (mu4e).
We are mainly working on the kernel and most of my colleagues reported me that the thread view can be very confusing if there is replies on couple emails (patchs), typically replies on patchset list.
So I started to look at the internal mu source code to see if I can change the thread output.
I've been able to have something that sort as we wanted to.
I don't want to impose my way of sorting, this patch is really PoC to also have your opinion on the subject.
I send you this pull-request because some other people might be interested other than just my colleagues.
I tried to explain as much as possible in commit msg with my understanding of the source code.
Please tell me what do you think about it, if you are interested or not.
I'm really open to any suggestions/improvments: handle others cases, make this new sorting as an optional argument ...
On local branch I also started to update test-mu-threads.c.
Thanks
Julien Masson","Could you make a separate PR for those missing m4 files? Interestingly, most people don't seem to have any problems with those not included.",True,{}
djcb/mu,https://github.com/djcb/mu,1450,2019-07-21T09:00:42Z,2019-09-08T14:26:41Z,2019-09-08T14:26:41Z,CLOSED,False,1,1,1,https://github.com/c0dev0id,Bring g_vasprintf into scope on OpenBSD,1,['needinfo'],https://github.com/djcb/mu/pull/1450,https://github.com/c0dev0id,1,https://github.com/djcb/mu/pull/1450,This fixes compilation on OpenBSD.,This fixes compilation on OpenBSD.,True,{}
djcb/mu,https://github.com/djcb/mu,1450,2019-07-21T09:00:42Z,2019-09-08T14:26:41Z,2019-09-08T14:26:41Z,CLOSED,False,1,1,1,https://github.com/c0dev0id,Bring g_vasprintf into scope on OpenBSD,1,['needinfo'],https://github.com/djcb/mu/pull/1450,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1450#issuecomment-516984804,This fixes compilation on OpenBSD.,"Hmm... on Linux at least, Use of _XOPEN_SOURCE_EXTENDED  in  new source code should be avoided.
Does #define _XOPEN_SOURCE 500 work?",True,{}
djcb/mu,https://github.com/djcb/mu,1450,2019-07-21T09:00:42Z,2019-09-08T14:26:41Z,2019-09-08T14:26:41Z,CLOSED,False,1,1,1,https://github.com/c0dev0id,Bring g_vasprintf into scope on OpenBSD,1,['needinfo'],https://github.com/djcb/mu/pull/1450,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1450#issuecomment-529207543,This fixes compilation on OpenBSD.,"Closed, no activity.",True,{}
djcb/mu,https://github.com/djcb/mu,1456,2019-07-30T20:55:54Z,2019-08-08T19:28:52Z,2019-08-08T19:29:02Z,MERGED,True,1,1,1,https://github.com/npjg,mu4e: fix `make-mu4e-context-account` to see `name` keyword arg,1,[],https://github.com/djcb/mu/pull/1456,https://github.com/npjg,1,https://github.com/djcb/mu/pull/1456,"Simple fix from #1455, to enable documented use of the name keyword argument in make-mu4e-context-account.","Simple fix from #1455, to enable documented use of the name keyword argument in make-mu4e-context-account.",True,{}
djcb/mu,https://github.com/djcb/mu,1456,2019-07-30T20:55:54Z,2019-08-08T19:28:52Z,2019-08-08T19:29:02Z,MERGED,True,1,1,1,https://github.com/npjg,mu4e: fix `make-mu4e-context-account` to see `name` keyword arg,1,[],https://github.com/djcb/mu/pull/1456,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1456#issuecomment-519655978,"Simple fix from #1455, to enable documented use of the name keyword argument in make-mu4e-context-account.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1465,2019-08-09T08:23:31Z,2019-08-10T07:51:26Z,2019-08-10T08:17:38Z,MERGED,True,2,2,1,https://github.com/rnkn,Balance parens in mu4e-compose-context-policy,1,[],https://github.com/djcb/mu/pull/1465,https://github.com/rnkn,1,https://github.com/djcb/mu/pull/1465,"Fixes unbalanced parens in mu4e-compose-context-policy, which prevents Custom mode UI working.
Using standard indentation helps prevent missing these little issues.","Fixes unbalanced parens in mu4e-compose-context-policy, which prevents Custom mode UI working.
Using standard indentation helps prevent missing these little issues.",True,{}
djcb/mu,https://github.com/djcb/mu,1465,2019-08-09T08:23:31Z,2019-08-10T07:51:26Z,2019-08-10T08:17:38Z,MERGED,True,2,2,1,https://github.com/rnkn,Balance parens in mu4e-compose-context-policy,1,[],https://github.com/djcb/mu/pull/1465,https://github.com/rnkn,2,https://github.com/djcb/mu/pull/1465#issuecomment-519829670,"Fixes unbalanced parens in mu4e-compose-context-policy, which prevents Custom mode UI working.
Using standard indentation helps prevent missing these little issues.",Actually I just saw that almost every custom option is unbalanced...,True,{}
djcb/mu,https://github.com/djcb/mu,1465,2019-08-09T08:23:31Z,2019-08-10T07:51:26Z,2019-08-10T08:17:38Z,MERGED,True,2,2,1,https://github.com/rnkn,Balance parens in mu4e-compose-context-policy,1,[],https://github.com/djcb/mu/pull/1465,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1465#issuecomment-520127883,"Fixes unbalanced parens in mu4e-compose-context-policy, which prevents Custom mode UI working.
Using standard indentation helps prevent missing these little issues.","Ah, good catch... apparently not something a lot of people use",True,{}
djcb/mu,https://github.com/djcb/mu,1465,2019-08-09T08:23:31Z,2019-08-10T07:51:26Z,2019-08-10T08:17:38Z,MERGED,True,2,2,1,https://github.com/rnkn,Balance parens in mu4e-compose-context-policy,1,[],https://github.com/djcb/mu/pull/1465,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1465#issuecomment-520127914,"Fixes unbalanced parens in mu4e-compose-context-policy, which prevents Custom mode UI working.
Using standard indentation helps prevent missing these little issues.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1465,2019-08-09T08:23:31Z,2019-08-10T07:51:26Z,2019-08-10T08:17:38Z,MERGED,True,2,2,1,https://github.com/rnkn,Balance parens in mu4e-compose-context-policy,1,[],https://github.com/djcb/mu/pull/1465,https://github.com/rnkn,5,https://github.com/djcb/mu/pull/1465#issuecomment-520129635,"Fixes unbalanced parens in mu4e-compose-context-policy, which prevents Custom mode UI working.
Using standard indentation helps prevent missing these little issues.","Ah, good catch... apparently not something a lot of people use
Thanks :)

And, yeah! I've noticed an almost hostility towards using custom, but
it's so incredibly useful.. basically type-checking for Emacs lisp.
Pretty often people's bugs can be resolved simply by setting things with
custom instead of hand-coding (of course maybe there's an ego hit
involved there...)",True,{}
djcb/mu,https://github.com/djcb/mu,1468,2019-08-16T11:14:26Z,2019-09-25T21:48:14Z,2019-09-25T21:48:18Z,MERGED,True,19,17,1,https://github.com/wavexx,Initialize my addresses,3,[],https://github.com/djcb/mu/pull/1468,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1468,"Updated today to latest sources and found the ""personal"" flag didn't work as expected.
In set_personal_addresses(), aside from updating the db, we also need to refresh the addresses in the Store itself, as this is subsequently used during indexing (this would fail to pickup addresses put in --my-addresses during index --reindex otherwise).
I also fixed the ""FIXME"" in each_contact_check_if_personal using personal_addresses() directly. I assume a GSList was only necessary due to the old code, so let's avoid copies.
In the for(auto) statements I noticed I got a lot of gcc warnings regarding comparisons with size_t, as 0 is deduced as int. I fixed one such occurrence, but I think it's better to use size_t explicitly in these cases.","Updated today to latest sources and found the ""personal"" flag didn't work as expected.
In set_personal_addresses(), aside from updating the db, we also need to refresh the addresses in the Store itself, as this is subsequently used during indexing (this would fail to pickup addresses put in --my-addresses during index --reindex otherwise).
I also fixed the ""FIXME"" in each_contact_check_if_personal using personal_addresses() directly. I assume a GSList was only necessary due to the old code, so let's avoid copies.
In the for(auto) statements I noticed I got a lot of gcc warnings regarding comparisons with size_t, as 0 is deduced as int. I fixed one such occurrence, but I think it's better to use size_t explicitly in these cases.",True,{}
djcb/mu,https://github.com/djcb/mu,1468,2019-08-16T11:14:26Z,2019-09-25T21:48:14Z,2019-09-25T21:48:18Z,MERGED,True,19,17,1,https://github.com/wavexx,Initialize my addresses,3,[],https://github.com/djcb/mu/pull/1468,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1468#issuecomment-535235308,"Updated today to latest sources and found the ""personal"" flag didn't work as expected.
In set_personal_addresses(), aside from updating the db, we also need to refresh the addresses in the Store itself, as this is subsequently used during indexing (this would fail to pickup addresses put in --my-addresses during index --reindex otherwise).
I also fixed the ""FIXME"" in each_contact_check_if_personal using personal_addresses() directly. I assume a GSList was only necessary due to the old code, so let's avoid copies.
In the for(auto) statements I noticed I got a lot of gcc warnings regarding comparisons with size_t, as 0 is deduced as int. I fixed one such occurrence, but I think it's better to use size_t explicitly in these cases.","Oh, yeah, I had all forgotten about the commented-out parts and what we need to fix them. Good catch, and thanks for the patch!",True,{}
djcb/mu,https://github.com/djcb/mu,1470,2019-08-16T15:49:10Z,2019-08-20T20:05:38Z,2019-08-20T20:05:50Z,MERGED,True,2,0,1,https://github.com/MalloZup,update with opensuse distro instructions,1,[],https://github.com/djcb/mu/pull/1470,https://github.com/MalloZup,1,https://github.com/djcb/mu/pull/1470,"Description:
this PR add a short description for users running openSUSE Linux distro.
I could also initially not find mu in the pkg, so at least providing doc should be ok,","Description:
this PR add a short description for users running openSUSE Linux distro.
I could also initially not find mu in the pkg, so at least providing doc should be ok,",True,{}
djcb/mu,https://github.com/djcb/mu,1470,2019-08-16T15:49:10Z,2019-08-20T20:05:38Z,2019-08-20T20:05:50Z,MERGED,True,2,0,1,https://github.com/MalloZup,update with opensuse distro instructions,1,[],https://github.com/djcb/mu/pull/1470,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1470#issuecomment-523173555,"Description:
this PR add a short description for users running openSUSE Linux distro.
I could also initially not find mu in the pkg, so at least providing doc should be ok,",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1471,2019-08-19T12:02:25Z,2019-09-14T10:45:29Z,2019-09-14T10:45:29Z,CLOSED,False,78,82,8,https://github.com/thierryvolpiatto,[WIP] Start fixing cl-lib and lexical-binding issues,2,['needinfo'],https://github.com/djcb/mu/pull/1471,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1471,"I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.","I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1471,2019-08-19T12:02:25Z,2019-09-14T10:45:29Z,2019-09-14T10:45:29Z,CLOSED,False,78,82,8,https://github.com/thierryvolpiatto,[WIP] Start fixing cl-lib and lexical-binding issues,2,['needinfo'],https://github.com/djcb/mu/pull/1471,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1471#issuecomment-523175524,"I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.","Overall, looks useful, thanks. What's the issue with the add-to-list vs cl-pushnew?
And since what emacs version are these new cl- functions available?",True,{}
djcb/mu,https://github.com/djcb/mu,1471,2019-08-19T12:02:25Z,2019-09-14T10:45:29Z,2019-09-14T10:45:29Z,CLOSED,False,78,82,8,https://github.com/thierryvolpiatto,[WIP] Start fixing cl-lib and lexical-binding issues,2,['needinfo'],https://github.com/djcb/mu/pull/1471,https://github.com/thierryvolpiatto,3,https://github.com/djcb/mu/pull/1471#issuecomment-523302939,"I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 Overall, looks useful, thanks. What's the issue with the add-to-list
 vs cl-pushnew?
`add-to-list` is not working on lexical vars, generally it should not be
used in elisp programs, only in user configuration files.

I see in the places where I have replaced add-to-list by cl-pushnew you
was using the 'append argument of add-to-list which add the new element
at end of list instead of front, is it really important to do so?

 And since what emacs version are these new cl- functions available?
The cl- functions I used here are not new, they exist since cl-lib have
been introduced, sure in emacs-24.1, maybe earlier don't remember.

Thanks.
…
-- 
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1471,2019-08-19T12:02:25Z,2019-09-14T10:45:29Z,2019-09-14T10:45:29Z,CLOSED,False,78,82,8,https://github.com/thierryvolpiatto,[WIP] Start fixing cl-lib and lexical-binding issues,2,['needinfo'],https://github.com/djcb/mu/pull/1471,https://github.com/thierryvolpiatto,4,https://github.com/djcb/mu/pull/1471#issuecomment-523304440,"I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.","BTW we should add ""-- lexical-binding: t --"" to all files for consistency, like this you don't have to think at lexical or dynamic when you write code.",True,{}
djcb/mu,https://github.com/djcb/mu,1471,2019-08-19T12:02:25Z,2019-09-14T10:45:29Z,2019-09-14T10:45:29Z,CLOSED,False,78,82,8,https://github.com/thierryvolpiatto,[WIP] Start fixing cl-lib and lexical-binding issues,2,['needinfo'],https://github.com/djcb/mu/pull/1471,https://github.com/thierryvolpiatto,5,https://github.com/djcb/mu/pull/1471#issuecomment-526483349,"I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.","Using now this branch since ten days without errors, do you want I rebase it to fix commit messages?",True,{}
djcb/mu,https://github.com/djcb/mu,1471,2019-08-19T12:02:25Z,2019-09-14T10:45:29Z,2019-09-14T10:45:29Z,CLOSED,False,78,82,8,https://github.com/thierryvolpiatto,[WIP] Start fixing cl-lib and lexical-binding issues,2,['needinfo'],https://github.com/djcb/mu/pull/1471,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1471#issuecomment-526913371,"I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.","Oh, yes please. Then I can merge it. Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1471,2019-08-19T12:02:25Z,2019-09-14T10:45:29Z,2019-09-14T10:45:29Z,CLOSED,False,78,82,8,https://github.com/thierryvolpiatto,[WIP] Start fixing cl-lib and lexical-binding issues,2,['needinfo'],https://github.com/djcb/mu/pull/1471,https://github.com/thierryvolpiatto,7,https://github.com/djcb/mu/pull/1471#issuecomment-527448401,"I started recently having weird errors about incf, after looking at the code, I see you are using both cl and cl-lib and lexical-let (part of cl) in some places and lexical-binding in other places.
I saw also an abusive usage of add-to-list (incompatible with lexical-binding in some places).
So I started a new branch to fix this, please have a look, it is not fully finished and tested, but I have no errors so far.
Thanks.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 Oh, yes please. Then I can merge it. Thanks.
I am now travelling, after mid september I will do it.

Thanks.
…
 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.*

-- 
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1473,2019-08-22T10:49:18Z,2019-09-08T14:22:48Z,2019-09-08T14:22:48Z,CLOSED,False,1,1,1,https://github.com/seblemaguer,Fix get_checked_path error message,1,[],https://github.com/djcb/mu/pull/1473,https://github.com/seblemaguer,1,https://github.com/djcb/mu/pull/1473,"Related to #184, I realize the path was not part of the error but only '%s'. This is the minor fix which actually show the given path.","Related to #184, I realize the path was not part of the error but only '%s'. This is the minor fix which actually show the given path.",True,{}
djcb/mu,https://github.com/djcb/mu,1473,2019-08-22T10:49:18Z,2019-09-08T14:22:48Z,2019-09-08T14:22:48Z,CLOSED,False,1,1,1,https://github.com/seblemaguer,Fix get_checked_path error message,1,[],https://github.com/djcb/mu/pull/1473,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1473#issuecomment-529207256,"Related to #184, I realize the path was not part of the error but only '%s'. This is the minor fix which actually show the given path.",This is not quite how sprintf works... I've fixed it a different way.,True,{}
djcb/mu,https://github.com/djcb/mu,1484,2019-09-14T10:52:53Z,2019-09-14T11:49:37Z,2019-09-16T17:01:56Z,MERGED,True,78,82,8,https://github.com/thierryvolpiatto,Completely use cl-lib and lexical-binding (rebase #1471),1,[],https://github.com/djcb/mu/pull/1484,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1484,"Previously both cl-lib.el and cl.el were used, now use only cl-lib.el.
Use lexical-binding where needed instead of requiring cl just for
lexical-let.
Replace some add-to-list with cl-pushnew as add-to-list is not
recommended in lisp program and anyway doesn't work properly with
lexical binding.","Previously both cl-lib.el and cl.el were used, now use only cl-lib.el.
Use lexical-binding where needed instead of requiring cl just for
lexical-let.
Replace some add-to-list with cl-pushnew as add-to-list is not
recommended in lisp program and anyway doesn't work properly with
lexical binding.",True,{}
djcb/mu,https://github.com/djcb/mu,1484,2019-09-14T10:52:53Z,2019-09-14T11:49:37Z,2019-09-16T17:01:56Z,MERGED,True,78,82,8,https://github.com/thierryvolpiatto,Completely use cl-lib and lexical-binding (rebase #1471),1,[],https://github.com/djcb/mu/pull/1484,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1484#issuecomment-531473353,"Previously both cl-lib.el and cl.el were used, now use only cl-lib.el.
Use lexical-binding where needed instead of requiring cl just for
lexical-let.
Replace some add-to-list with cl-pushnew as add-to-list is not
recommended in lisp program and anyway doesn't work properly with
lexical binding.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1484,2019-09-14T10:52:53Z,2019-09-14T11:49:37Z,2019-09-16T17:01:56Z,MERGED,True,78,82,8,https://github.com/thierryvolpiatto,Completely use cl-lib and lexical-binding (rebase #1471),1,[],https://github.com/djcb/mu/pull/1484,https://github.com/thierryvolpiatto,3,https://github.com/djcb/mu/pull/1484#issuecomment-531487576,"Previously both cl-lib.el and cl.el were used, now use only cl-lib.el.
Use lexical-binding where needed instead of requiring cl just for
lexical-let.
Replace some add-to-list with cl-pushnew as add-to-list is not
recommended in lisp program and anyway doesn't work properly with
lexical binding.","Dirk-Jan C. Binnema <notifications@github.com> writes:
 Merged -- thanks!
Great, thanks, now for completeness, what can be done is bind locally to
all *.el files `lexical-binding`, and optionally replace all `add-to-list`
calls with `cl-pushnew` or whatever.
I can make a new PR for this if you want.
…
-- 
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1486,2019-09-16T18:00:29Z,2019-09-25T21:29:32Z,2019-09-27T14:56:19Z,MERGED,True,50,28,14,https://github.com/thierryvolpiatto,Add lexical-binding to all files and fix warnings,1,[],https://github.com/djcb/mu/pull/1486,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1486,"about free variables (declare) and unused lexical vars (prefix with ""_"").","about free variables (declare) and unused lexical vars (prefix with ""_"").",True,{}
djcb/mu,https://github.com/djcb/mu,1486,2019-09-16T18:00:29Z,2019-09-25T21:29:32Z,2019-09-27T14:56:19Z,MERGED,True,50,28,14,https://github.com/thierryvolpiatto,Add lexical-binding to all files and fix warnings,1,[],https://github.com/djcb/mu/pull/1486,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1486#issuecomment-531889972,"about free variables (declare) and unused lexical vars (prefix with ""_"").",Hello this PR complement PR #1484 and enable lexical-binding in all files.,True,{}
djcb/mu,https://github.com/djcb/mu,1486,2019-09-16T18:00:29Z,2019-09-25T21:29:32Z,2019-09-27T14:56:19Z,MERGED,True,50,28,14,https://github.com/thierryvolpiatto,Add lexical-binding to all files and fix warnings,1,[],https://github.com/djcb/mu/pull/1486,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1486#issuecomment-535229282,"about free variables (declare) and unused lexical vars (prefix with ""_"").",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1504,2019-11-07T04:35:13Z,2019-11-07T19:01:02Z,2019-11-08T04:11:18Z,MERGED,True,1,0,1,https://github.com/alexmurray,Treat text/markdown as plain text for issue #1503,1,[],https://github.com/djcb/mu/pull/1504,https://github.com/alexmurray,1,https://github.com/djcb/mu/pull/1504,Resolves issue #1503,Resolves issue #1503,True,{}
djcb/mu,https://github.com/djcb/mu,1504,2019-11-07T04:35:13Z,2019-11-07T19:01:02Z,2019-11-08T04:11:18Z,MERGED,True,1,0,1,https://github.com/alexmurray,Treat text/markdown as plain text for issue #1503,1,[],https://github.com/djcb/mu/pull/1504,https://github.com/alexmurray,2,https://github.com/djcb/mu/pull/1504#issuecomment-551376618,Resolves issue #1503,Thanks! - any chance of a new 1.4.0 release or similar soon?,True,{}
djcb/mu,https://github.com/djcb/mu,1507,2019-11-08T21:55:58Z,2019-11-09T11:06:24Z,2019-12-05T23:18:20Z,MERGED,True,60,60,39,https://github.com/tarsius,Fix typos,1,[],https://github.com/djcb/mu/pull/1507,https://github.com/tarsius,1,https://github.com/djcb/mu/pull/1507,,,True,{}
djcb/mu,https://github.com/djcb/mu,1507,2019-11-08T21:55:58Z,2019-11-09T11:06:24Z,2019-12-05T23:18:20Z,MERGED,True,60,60,39,https://github.com/tarsius,Fix typos,1,[],https://github.com/djcb/mu/pull/1507,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1507#issuecomment-552089593,,"Wow, thanks! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1510,2019-11-17T03:47:57Z,2019-11-17T12:21:43Z,2019-11-17T12:21:43Z,MERGED,True,2,2,1,https://github.com/derekschrock,tests: fix cmd test_mu_find_04 stderr output,1,[],https://github.com/djcb/mu/pull/1510,https://github.com/derekschrock,1,https://github.com/djcb/mu/pull/1510,"Fix test_mu_find_04 such that stderr has expected output.
With the mu command after options/expression nothing was printed.
We now have expected nonexistent muhome error.","Fix test_mu_find_04 such that stderr has expected output.
With the mu command after options/expression nothing was printed.
We now have expected nonexistent muhome error.",True,{}
djcb/mu,https://github.com/djcb/mu,1511,2019-11-17T03:59:33Z,2019-11-17T12:20:18Z,2019-11-17T12:20:23Z,MERGED,True,1,1,1,https://github.com/derekschrock,lib: Allow hostname of newbase to match alnum,1,[],https://github.com/djcb/mu/pull/1511,https://github.com/derekschrock,1,https://github.com/djcb/mu/pull/1511,"Possible hostnames might have digits and - in them.  Crude regex to
allow hostnames that start with alnum followed by alnum or ""-"".
Fixes #1399","Possible hostnames might have digits and - in them.  Crude regex to
allow hostnames that start with alnum followed by alnum or ""-"".
Fixes #1399",True,{}
djcb/mu,https://github.com/djcb/mu,1511,2019-11-17T03:59:33Z,2019-11-17T12:20:18Z,2019-11-17T12:20:23Z,MERGED,True,1,1,1,https://github.com/derekschrock,lib: Allow hostname of newbase to match alnum,1,[],https://github.com/djcb/mu/pull/1511,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1511#issuecomment-554740108,"Possible hostnames might have digits and - in them.  Crude regex to
allow hostnames that start with alnum followed by alnum or ""-"".
Fixes #1399","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1512,2019-11-17T04:03:26Z,2019-11-17T12:18:35Z,2019-11-17T12:18:43Z,MERGED,True,2,2,1,https://github.com/derekschrock,lib: Use more portable locale en_US.UTF-8,1,[],https://github.com/djcb/mu/pull/1512,https://github.com/derekschrock,1,https://github.com/djcb/mu/pull/1512,"On some systems (FreeBSD) en_US.utf8 doesn't exist.  Use a portable
locale en_US.UTF-8.","On some systems (FreeBSD) en_US.utf8 doesn't exist.  Use a portable
locale en_US.UTF-8.",True,{}
djcb/mu,https://github.com/djcb/mu,1512,2019-11-17T04:03:26Z,2019-11-17T12:18:35Z,2019-11-17T12:18:43Z,MERGED,True,2,2,1,https://github.com/derekschrock,lib: Use more portable locale en_US.UTF-8,1,[],https://github.com/djcb/mu/pull/1512,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1512#issuecomment-554739994,"On some systems (FreeBSD) en_US.utf8 doesn't exist.  Use a portable
locale en_US.UTF-8.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/antoine-levitt,1,https://github.com/djcb/mu/pull/1520,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1520#issuecomment-563252498,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,You mean in a draft?,True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/antoine-levitt,3,https://github.com/djcb/mu/pull/1520#issuecomment-563267333,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,Yes.,True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/1520#issuecomment-563344100,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,"You can press M-< twice to go to the beginning of the buffer.  I believe this behavior is the right one but if you do not like it, you can add the following to your config file:
(define-key mu4e-compose-mode-map
  (vector 'remap 'beginning-of-buffer) nil)",True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/antoine-levitt,5,https://github.com/djcb/mu/pull/1520#issuecomment-563345323,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,"This is not about M-< going to the beginning of the draft (which I like), it's about it not pushing the mark. Look at the diff of this PR.",True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/Chris00,6,https://github.com/djcb/mu/pull/1520#issuecomment-563348725,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,"it's about it not pushing the mark.

OK—read only the description...",True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/djcb,7,https://github.com/djcb/mu/pull/1520#issuecomment-563811204,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,"Looks good. But @chriss00 is right, that indentation seems a bit off. Perhaps a tabs-vs-spaces thing? We try to standardize on spaces (see the .editorconfig).",True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/antoine-levitt,8,https://github.com/djcb/mu/pull/1520#issuecomment-563961137,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,Reverted the indentation,True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/djcb,9,https://github.com/djcb/mu/pull/1520#issuecomment-564089527,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1520,2019-12-05T20:38:01Z,2019-12-10T15:34:27Z,2019-12-10T15:36:44Z,MERGED,True,18,6,1,https://github.com/antoine-levitt,Push mark on beginning/end of buffer,2,[],https://github.com/djcb/mu/pull/1520,https://github.com/antoine-levitt,10,https://github.com/djcb/mu/pull/1520#issuecomment-564090544,This has been driving me mad for a while: mu4e's M-< and M-> commands were not consistent with the standard ones.,Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1526,2019-12-14T00:29:56Z,2020-01-21T18:30:56Z,2020-01-21T19:35:38Z,MERGED,True,1,0,1,https://github.com/seanfarley,mu4e-util: allow ESC to exit a choice selection,1,[],https://github.com/djcb/mu/pull/1526,https://github.com/seanfarley,1,https://github.com/djcb/mu/pull/1526,"I occasionally find myself pressing escape to exit a menu choice in mu4e
and it's a bit unfortunate that nothing happens. As best I could tell,
since this is a C call, none of the keymaps are checked for
`(keyboard-quit)' so we need to explicitly check for ESC here.","I occasionally find myself pressing escape to exit a menu choice in mu4e
and it's a bit unfortunate that nothing happens. As best I could tell,
since this is a C call, none of the keymaps are checked for
`(keyboard-quit)' so we need to explicitly check for ESC here.",True,{}
djcb/mu,https://github.com/djcb/mu,1526,2019-12-14T00:29:56Z,2020-01-21T18:30:56Z,2020-01-21T19:35:38Z,MERGED,True,1,0,1,https://github.com/seanfarley,mu4e-util: allow ESC to exit a choice selection,1,[],https://github.com/djcb/mu/pull/1526,https://github.com/seanfarley,2,https://github.com/djcb/mu/pull/1526#issuecomment-565659666,"I occasionally find myself pressing escape to exit a menu choice in mu4e
and it's a bit unfortunate that nothing happens. As best I could tell,
since this is a C call, none of the keymaps are checked for
`(keyboard-quit)' so we need to explicitly check for ESC here.","I'm not completely sure this is the best approach, so feedback is welcomed",True,{}
djcb/mu,https://github.com/djcb/mu,1526,2019-12-14T00:29:56Z,2020-01-21T18:30:56Z,2020-01-21T19:35:38Z,MERGED,True,1,0,1,https://github.com/seanfarley,mu4e-util: allow ESC to exit a choice selection,1,[],https://github.com/djcb/mu/pull/1526,https://github.com/theophilusx,3,https://github.com/djcb/mu/pull/1526#issuecomment-565661816,"I occasionally find myself pressing escape to exit a menu choice in mu4e
and it's a bit unfortunate that nothing happens. As best I could tell,
since this is a C call, none of the keymaps are checked for
`(keyboard-quit)' so we need to explicitly check for ESC here.","Isn't C-g the 'standard' way to quit something in Emacs?

How would using ESC affect other commands which use ESC like exiting
recursive edit, running M-x in a terminal without meta support (which is
the most common one I use ESC for)?

Tim

Sean Farley <notifications@github.com> writes:
…
 I'm not completely sure this is the best approach, so feedback is welcomed

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.

-- 
Tim Cross",True,{}
djcb/mu,https://github.com/djcb/mu,1526,2019-12-14T00:29:56Z,2020-01-21T18:30:56Z,2020-01-21T19:35:38Z,MERGED,True,1,0,1,https://github.com/seanfarley,mu4e-util: allow ESC to exit a choice selection,1,[],https://github.com/djcb/mu/pull/1526,https://github.com/seanfarley,4,https://github.com/djcb/mu/pull/1526#issuecomment-565663663,"I occasionally find myself pressing escape to exit a menu choice in mu4e
and it's a bit unfortunate that nothing happens. As best I could tell,
since this is a C call, none of the keymaps are checked for
`(keyboard-quit)' so we need to explicitly check for ESC here.","Tim Cross <notifications@github.com> writes:
 Isn't C-g the 'standard' way to quit something in Emacs?
Yep, and C-g continues to work, this just adds another option.
 How would using ESC affect other commands which use ESC like exiting
 recursive edit, running M-x in a terminal without meta support (which is
 the most common one I use ESC for)?
Since `read-char-exclusive` is not a recursive edit (and I can't figure
out how it would be in a recursive edit but this is pushing my internal
emacs knowledge) I'm not sure this would mess anything up in this case?",True,{}
djcb/mu,https://github.com/djcb/mu,1526,2019-12-14T00:29:56Z,2020-01-21T18:30:56Z,2020-01-21T19:35:38Z,MERGED,True,1,0,1,https://github.com/seanfarley,mu4e-util: allow ESC to exit a choice selection,1,[],https://github.com/djcb/mu/pull/1526,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1526#issuecomment-576816956,"I occasionally find myself pressing escape to exit a menu choice in mu4e
and it's a bit unfortunate that nothing happens. As best I could tell,
since this is a C call, none of the keymaps are checked for
`(keyboard-quit)' so we need to explicitly check for ESC here.","That looks useful, merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1526,2019-12-14T00:29:56Z,2020-01-21T18:30:56Z,2020-01-21T19:35:38Z,MERGED,True,1,0,1,https://github.com/seanfarley,mu4e-util: allow ESC to exit a choice selection,1,[],https://github.com/djcb/mu/pull/1526,https://github.com/seanfarley,6,https://github.com/djcb/mu/pull/1526#issuecomment-576844095,"I occasionally find myself pressing escape to exit a menu choice in mu4e
and it's a bit unfortunate that nothing happens. As best I could tell,
since this is a C call, none of the keymaps are checked for
`(keyboard-quit)' so we need to explicitly check for ESC here.",Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1529,2019-12-20T20:33:23Z,2019-12-22T13:26:53Z,2019-12-23T01:46:50Z,CLOSED,False,1,1,1,https://github.com/jaknel,Whitelist underscores if replying to mailing-list,2,[],https://github.com/djcb/mu/pull/1529,https://github.com/jaknel,1,https://github.com/djcb/mu/pull/1529,"When replying to a mailing list post from some_address@example.org, Mu4e incorrectly truncated the reply to down to just ""some"". Whitelisting underscores in the regex resolves the issue.","When replying to a mailing list post from some_address@example.org, Mu4e incorrectly truncated the reply to down to just ""some"". Whitelisting underscores in the regex resolves the issue.",True,{}
djcb/mu,https://github.com/djcb/mu,1529,2019-12-20T20:33:23Z,2019-12-22T13:26:53Z,2019-12-23T01:46:50Z,CLOSED,False,1,1,1,https://github.com/jaknel,Whitelist underscores if replying to mailing-list,2,[],https://github.com/djcb/mu/pull/1529,https://github.com/jaknel,2,https://github.com/djcb/mu/pull/1529#issuecomment-568090486,"When replying to a mailing list post from some_address@example.org, Mu4e incorrectly truncated the reply to down to just ""some"". Whitelisting underscores in the regex resolves the issue.","Moved the underscore to preserve - as the final character.
This actually fixed another issue where the mailing-list address was being included in both the TO and CC fields.  Feel free to close this PR, and commit the _ directly, if it actually solves the problem, or more changes are required.",True,{}
djcb/mu,https://github.com/djcb/mu,1529,2019-12-20T20:33:23Z,2019-12-22T13:26:53Z,2019-12-23T01:46:50Z,CLOSED,False,1,1,1,https://github.com/jaknel,Whitelist underscores if replying to mailing-list,2,[],https://github.com/djcb/mu/pull/1529,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1529#issuecomment-568261888,"When replying to a mailing list post from some_address@example.org, Mu4e incorrectly truncated the reply to down to just ""some"". Whitelisting underscores in the regex resolves the issue.","Okay, commit directly. Thanks for the fix!",True,{}
djcb/mu,https://github.com/djcb/mu,1530,2019-12-22T06:56:32Z,2019-12-22T12:54:01Z,2019-12-22T12:54:06Z,MERGED,True,3,2,1,https://github.com/Vonfry,mu4e: switch mu4e-contexts from defvar to defcustom,1,[],https://github.com/djcb/mu/pull/1530,https://github.com/Vonfry,1,https://github.com/djcb/mu/pull/1530,"In document, mu4e-contexts is described which can be customed by user, why we don't define it with defcustom to let custom-set-variables work before loading mu4e.","In document, mu4e-contexts is described which can be customed by user, why we don't define it with defcustom to let custom-set-variables work before loading mu4e.",True,{}
djcb/mu,https://github.com/djcb/mu,1530,2019-12-22T06:56:32Z,2019-12-22T12:54:01Z,2019-12-22T12:54:06Z,MERGED,True,3,2,1,https://github.com/Vonfry,mu4e: switch mu4e-contexts from defvar to defcustom,1,[],https://github.com/djcb/mu/pull/1530,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1530#issuecomment-568259406,"In document, mu4e-contexts is described which can be customed by user, why we don't define it with defcustom to let custom-set-variables work before loading mu4e.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1531,2019-12-22T10:11:53Z,2019-12-22T12:55:35Z,2019-12-22T12:55:45Z,MERGED,True,18,33,1,https://github.com/Vonfry,mu4e: remove duplicated mu4e-bookmarks define,1,[],https://github.com/djcb/mu/pull/1531,https://github.com/Vonfry,1,https://github.com/djcb/mu/pull/1531,let custom-set-variables work.,let custom-set-variables work.,True,{}
djcb/mu,https://github.com/djcb/mu,1531,2019-12-22T10:11:53Z,2019-12-22T12:55:35Z,2019-12-22T12:55:45Z,MERGED,True,18,33,1,https://github.com/Vonfry,mu4e: remove duplicated mu4e-bookmarks define,1,[],https://github.com/djcb/mu/pull/1531,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1531#issuecomment-568259528,let custom-set-variables work.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1532,2019-12-27T03:29:07Z,2019-12-27T07:47:13Z,2019-12-27T07:47:33Z,MERGED,True,1,1,1,https://github.com/Bdanilko,mu configure.ac: allow emacs 28.xx to build mu4e,1,[],https://github.com/djcb/mu/pull/1532,https://github.com/Bdanilko,1,https://github.com/djcb/mu/pull/1532,Changed autoconfig file to add support for emacs 28.xx versions building mu4e,Changed autoconfig file to add support for emacs 28.xx versions building mu4e,True,{}
djcb/mu,https://github.com/djcb/mu,1532,2019-12-27T03:29:07Z,2019-12-27T07:47:13Z,2019-12-27T07:47:33Z,MERGED,True,1,1,1,https://github.com/Bdanilko,mu configure.ac: allow emacs 28.xx to build mu4e,1,[],https://github.com/djcb/mu/pull/1532,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1532#issuecomment-569213640,Changed autoconfig file to add support for emacs 28.xx versions building mu4e,"Didn't know 28 had started already... anyway, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1535,2019-12-31T16:23:12Z,2020-01-11T14:59:15Z,2020-01-11T14:59:24Z,MERGED,True,4,2,1,https://github.com/pedrormjunior,mu4e: define mu4e-view-actions with defcustom instead of defvar,1,[],https://github.com/djcb/mu/pull/1535,https://github.com/pedrormjunior,1,https://github.com/djcb/mu/pull/1535,"It allows the customization directly from Emacs Custom mode.  It is
done in a similar way as for `mu4e-view-attachment-actions'.","It allows the customization directly from Emacs Custom mode.  It is
done in a similar way as for `mu4e-view-attachment-actions'.",True,{}
djcb/mu,https://github.com/djcb/mu,1535,2019-12-31T16:23:12Z,2020-01-11T14:59:15Z,2020-01-11T14:59:24Z,MERGED,True,4,2,1,https://github.com/pedrormjunior,mu4e: define mu4e-view-actions with defcustom instead of defvar,1,[],https://github.com/djcb/mu/pull/1535,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1535#issuecomment-573324034,"It allows the customization directly from Emacs Custom mode.  It is
done in a similar way as for `mu4e-view-attachment-actions'.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1541,2020-01-12T20:52:11Z,2020-01-21T18:27:43Z,2020-01-21T18:27:47Z,MERGED,True,3,0,1,https://github.com/pedrormjunior,mu4e: inform alternative for getting confirmation before sending,2,[],https://github.com/djcb/mu/pull/1541,https://github.com/pedrormjunior,1,https://github.com/djcb/mu/pull/1541,"The message-send command already uses the variable message-confirm-send to check if a confirmation should be asked before sending.  Then, setting this variable is a more straightforward alternative for getting those confirmations before sending.","The message-send command already uses the variable message-confirm-send to check if a confirmation should be asked before sending.  Then, setting this variable is a more straightforward alternative for getting those confirmations before sending.",True,{}
djcb/mu,https://github.com/djcb/mu,1541,2020-01-12T20:52:11Z,2020-01-21T18:27:43Z,2020-01-21T18:27:47Z,MERGED,True,3,0,1,https://github.com/pedrormjunior,mu4e: inform alternative for getting confirmation before sending,2,[],https://github.com/djcb/mu/pull/1541,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1541#issuecomment-576815513,"The message-send command already uses the variable message-confirm-send to check if a confirmation should be asked before sending.  Then, setting this variable is a more straightforward alternative for getting those confirmations before sending.","Looks good, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1548,2020-01-21T08:55:17Z,2020-01-21T18:28:31Z,2020-02-05T19:26:15Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Avoid loading all gnus package,1,[],https://github.com/djcb/mu/pull/1548,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1548,"when not necessary.

mu4e/mu4e-view.el (mu4e~view-gnus): Require gnus-art here instead on
top of file.","when not necessary.

mu4e/mu4e-view.el (mu4e~view-gnus): Require gnus-art here instead on
top of file.",True,{}
djcb/mu,https://github.com/djcb/mu,1548,2020-01-21T08:55:17Z,2020-01-21T18:28:31Z,2020-02-05T19:26:15Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Avoid loading all gnus package,1,[],https://github.com/djcb/mu/pull/1548,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1548#issuecomment-576583509,"when not necessary.

mu4e/mu4e-view.el (mu4e~view-gnus): Require gnus-art here instead on
top of file.","I noticed since some months a big slowdown when opening a mail the first time, this was due to gnus loading when mu4e-view is autoloaded, requiring gnus-art in the appropriate function fix this slowdown.
Also more strange I noticed sometimes a gnus buffer popping up in the background when lauching mu4e, maybe it is a bug in gnus itself?  I will see if it reproduce with this change.
Note: I am not using mu4e-view-use-gnus.",True,{}
djcb/mu,https://github.com/djcb/mu,1548,2020-01-21T08:55:17Z,2020-01-21T18:28:31Z,2020-02-05T19:26:15Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Avoid loading all gnus package,1,[],https://github.com/djcb/mu/pull/1548,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1548#issuecomment-576815909,"when not necessary.

mu4e/mu4e-view.el (mu4e~view-gnus): Require gnus-art here instead on
top of file.","Looks useful, thanks! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1554,2020-01-25T14:16:10Z,2020-01-27T22:37:52Z,2020-01-27T22:47:34Z,MERGED,True,2,2,1,https://github.com/pedrormjunior,mu4e: use `mu4e~update-name` de facto,1,[],https://github.com/djcb/mu/pull/1554,https://github.com/pedrormjunior,1,https://github.com/djcb/mu/pull/1554,"Instead of hard coding the buffer name "" *mu4e-update*"", use the buffer name defined in mu4e~update-name.  Also, the default name defined in mu4e~update-name were changed to match the previously hard-coded invisible buffer name.","Instead of hard coding the buffer name "" *mu4e-update*"", use the buffer name defined in mu4e~update-name.  Also, the default name defined in mu4e~update-name were changed to match the previously hard-coded invisible buffer name.",True,{}
djcb/mu,https://github.com/djcb/mu,1554,2020-01-25T14:16:10Z,2020-01-27T22:37:52Z,2020-01-27T22:47:34Z,MERGED,True,2,2,1,https://github.com/pedrormjunior,mu4e: use `mu4e~update-name` de facto,1,[],https://github.com/djcb/mu/pull/1554,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1554#issuecomment-578989247,"Instead of hard coding the buffer name "" *mu4e-update*"", use the buffer name defined in mu4e~update-name.  Also, the default name defined in mu4e~update-name were changed to match the previously hard-coded invisible buffer name.","Oh thanks, merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1555,2020-01-27T07:48:08Z,2020-01-27T22:36:24Z,2020-02-05T19:25:40Z,MERGED,True,6,6,4,https://github.com/thierryvolpiatto,Unquote lambda's,1,[],https://github.com/djcb/mu/pull/1555,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1555,"mu4e/mu4e-context.el (mu4e-context-switch):         Do it.
mu4e/mu4e-contrib.el (mu4e-view-mode-hook):         Do it.
(mu4e-headers-mode-hook):                             Do it.
mu4e/mu4e-icalendar.el (mu4e-icalendar-reply-ical): Do it.
mu4e/mu4e-utils.el (mu4e~start):                    Do it.
(mu4e-split-ranges-to-numbers):                       Do it.","mu4e/mu4e-context.el (mu4e-context-switch):         Do it.
mu4e/mu4e-contrib.el (mu4e-view-mode-hook):         Do it.
(mu4e-headers-mode-hook):                             Do it.
mu4e/mu4e-icalendar.el (mu4e-icalendar-reply-ical): Do it.
mu4e/mu4e-utils.el (mu4e~start):                    Do it.
(mu4e-split-ranges-to-numbers):                       Do it.",True,{}
djcb/mu,https://github.com/djcb/mu,1555,2020-01-27T07:48:08Z,2020-01-27T22:36:24Z,2020-02-05T19:25:40Z,MERGED,True,6,6,4,https://github.com/thierryvolpiatto,Unquote lambda's,1,[],https://github.com/djcb/mu/pull/1555,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1555#issuecomment-578779278,"mu4e/mu4e-context.el (mu4e-context-switch):         Do it.
mu4e/mu4e-contrib.el (mu4e-view-mode-hook):         Do it.
(mu4e-headers-mode-hook):                             Do it.
mu4e/mu4e-icalendar.el (mu4e-icalendar-reply-ical): Do it.
mu4e/mu4e-utils.el (mu4e~start):                    Do it.
(mu4e-split-ranges-to-numbers):                       Do it.","Movitation (which should be mentioned in the commit message IMHO): Under dynamic binding, lambda forms are self-quoting",True,{}
djcb/mu,https://github.com/djcb/mu,1555,2020-01-27T07:48:08Z,2020-01-27T22:36:24Z,2020-02-05T19:25:40Z,MERGED,True,6,6,4,https://github.com/thierryvolpiatto,Unquote lambda's,1,[],https://github.com/djcb/mu/pull/1555,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1555#issuecomment-578988748,"mu4e/mu4e-context.el (mu4e-context-switch):         Do it.
mu4e/mu4e-contrib.el (mu4e-view-mode-hook):         Do it.
(mu4e-headers-mode-hook):                             Do it.
mu4e/mu4e-icalendar.el (mu4e-icalendar-reply-ical): Do it.
mu4e/mu4e-utils.el (mu4e~start):                    Do it.
(mu4e-split-ranges-to-numbers):                       Do it.",Ok thanks... merged.,True,{}
djcb/mu,https://github.com/djcb/mu,1556,2020-01-27T07:48:42Z,2020-01-27T22:39:11Z,2020-02-05T19:25:56Z,MERGED,True,29,25,1,https://github.com/thierryvolpiatto,Rewrite mu4e~main-bookmarks to have bookmarks aligned,1,[],https://github.com/djcb/mu/pull/1556,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1556,mu4e/mu4e-main.el (mu4e~main-bookmarks): Do it.,mu4e/mu4e-main.el (mu4e~main-bookmarks): Do it.,True,{}
djcb/mu,https://github.com/djcb/mu,1556,2020-01-27T07:48:42Z,2020-01-27T22:39:11Z,2020-02-05T19:25:56Z,MERGED,True,29,25,1,https://github.com/thierryvolpiatto,Rewrite mu4e~main-bookmarks to have bookmarks aligned,1,[],https://github.com/djcb/mu/pull/1556,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1556#issuecomment-578628617,mu4e/mu4e-main.el (mu4e~main-bookmarks): Do it.,"Before:

After:",True,{}
djcb/mu,https://github.com/djcb/mu,1556,2020-01-27T07:48:42Z,2020-01-27T22:39:11Z,2020-02-05T19:25:56Z,MERGED,True,29,25,1,https://github.com/thierryvolpiatto,Rewrite mu4e~main-bookmarks to have bookmarks aligned,1,[],https://github.com/djcb/mu/pull/1556,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1556#issuecomment-578989725,mu4e/mu4e-main.el (mu4e~main-bookmarks): Do it.,"Oh, that's a nice improvement, thanks! I have to get used to cl-loop though...",True,{}
djcb/mu,https://github.com/djcb/mu,1556,2020-01-27T07:48:42Z,2020-01-27T22:39:11Z,2020-02-05T19:25:56Z,MERGED,True,29,25,1,https://github.com/thierryvolpiatto,Rewrite mu4e~main-bookmarks to have bookmarks aligned,1,[],https://github.com/djcb/mu/pull/1556,https://github.com/thierryvolpiatto,4,https://github.com/djcb/mu/pull/1556#issuecomment-579091726,mu4e/mu4e-main.el (mu4e~main-bookmarks): Do it.,"Dirk-Jan C. Binnema <notifications@github.com> writes:
 Oh, that's a nice improvement, thanks!
Thanks.
What would be nice now is to update the unreads in realtime, actually we
have to close mu4e session and restart it to have the display updated,
sometimes it is even necessary to call `mu4e-update-index`.
At least the revert-buffer fn should do that.
 I have to get used to cl-loop though...
Yes, cl-loop is a nice tool.
…
-- 
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1557,2020-01-27T14:29:21Z,2020-01-27T22:33:45Z,2020-01-27T22:33:57Z,MERGED,True,1,0,1,https://github.com/Chris00,Load gnus-art when compiling,1,[],https://github.com/djcb/mu/pull/1557,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1557,"Commit edce635 only loads it
dynamically when executing the function mu4e~view-gnus but as a
consequence many variables are undefined at compile time and, more
importantly, it is no longer possible to override the variable
gnus-display-mime-function with a let binding before calling
gnus-article-prepare-display","Commit edce635 only loads it
dynamically when executing the function mu4e~view-gnus but as a
consequence many variables are undefined at compile time and, more
importantly, it is no longer possible to override the variable
gnus-display-mime-function with a let binding before calling
gnus-article-prepare-display",True,{}
djcb/mu,https://github.com/djcb/mu,1557,2020-01-27T14:29:21Z,2020-01-27T22:33:45Z,2020-01-27T22:33:57Z,MERGED,True,1,0,1,https://github.com/Chris00,Load gnus-art when compiling,1,[],https://github.com/djcb/mu/pull/1557,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1557#issuecomment-578987914,"Commit edce635 only loads it
dynamically when executing the function mu4e~view-gnus but as a
consequence many variables are undefined at compile time and, more
importantly, it is no longer possible to override the variable
gnus-display-mime-function with a let binding before calling
gnus-article-prepare-display","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1562,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/1562#issuecomment-579858539,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","Update: After reading unread mails and quitting mu4e-headers, main buffer and unreads are updated correctly :-)",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,3,https://github.com/djcb/mu/pull/1562#issuecomment-579893078,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .",Update: Counters are refreshed after updating mails and/or index.,True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,4,https://github.com/djcb/mu/pull/1562#issuecomment-580093472,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","Dirk-Jan C. Binnema <notifications@github.com> writes:
 @djcb commented on this pull request.

 Thanks -- seems useful...
Yes, otherwise counters are useless, now they are updated each time the
unread status change:
1) After updating mails (""U"").
2) After reading unread mails and quitting mu4e-headers.

Before this change, I had to quit mu4e and restart it to have counters
updated which is inconvenient.

The only way I found to update the main buffer was to make a call to
`mu4e~start` from the revert-buffer-function of main mode.
Problem was that `mu4e~start` calls itself `mu4e~main-view`
inconditionally (not sure it is anymore true with your last change, I
have to look).
 but I think it would be cleaner to use mu4e-index-updated-hook from
 mu4e-main.
Ok thanks, I didn't know this hook.
 Also mu4e~main-view-real-1?
It is same as the old revert-buffer function but allows calling it with
a REFRESH argument which is needed (or not) in various places
i.e. allows two behaviors of the revert-buffer function.

See also `mu4e~start` and `mu4e~start-1` and let me know what you think.

What function otherwise would you use in the `mu4e-index-updated-hook` to update
counters? (or what this function if new would invoke?)

Thanks.
…
--
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,5,https://github.com/djcb/mu/pull/1562#issuecomment-580103391,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","Here the mu4e~start with last changes you made:
(defun mu4e~start (&optional func)
[...]
  ;; if we're already running, simply go to the main view
  (if (mu4e-running-p)         ;; already running?
      (when func (funcall func)) ;; yes! run func if defined
    (progn
[...]
With this code, calling mu4e~start with no arg while mu4e is running is a noop, it does nothing
perhaps what you wanted was:
(if (and func (mu4e-running-p))
    (funcall func)
  [...])
Also the progn is unneeded in the else clause.",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,6,https://github.com/djcb/mu/pull/1562#issuecomment-580343114,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","Dirk-Jan C. Binnema <notifications@github.com> writes:
 but I think it would be cleaner to use mu4e-index-updated-hook from
 mu4e-main.
I had a look at this hook but don't understand how to use it to revert
main buffer, any help welcome.

Thanks.

PS: Otherwise this PR is working fine AFAICT as it is actually.
…
-- 
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/djcb,7,https://github.com/djcb/mu/pull/1562#issuecomment-580494602,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","I've updated things a bit, so you get fresh unread/all counts when calling mu4e, and added add g binding as well, that was indeed missing.
What's remaining is the updating bit -- that only really matters when pressing 'U' while in the main screen. I think it should be possible to use mu4e-index-updated-hook for that (or else we need to fix that!)... but anyway, I'll add that.
It might still be useful as optimization is having mu4e-index-updated-hook (and the :update / :remove messages) mark things as 'dirty'.. and skip the refresh when we're not dirty. But, at least for me, it works fine as it is.",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,8,https://github.com/djcb/mu/pull/1562#issuecomment-580626611,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","Dirk-Jan C. Binnema <notifications@github.com> writes:
 I've updated things a bit, so you get fresh unread/all counts when
 calling mu4e,
Thanks, but still other things wrong IMHO, see below.
 and added add g binding as well, that was indeed missing.
No, g binding was here and correctly bound to revert-buffer as we derive
from special-mode and we have set revert-buffer-function in
mu4e-main-mode.
Calling revert-buffer should refresh the buffer.

(BTW same for ""q"" but this is unrelated).
 What's remaining is the updating bit
Not only, quitting mu4e-headers after reading a mail doesn't update.
 -- that only really matters when pressing 'U' while in the main
 screen. I think it should be possible to use mu4e-index-updated-hook
 for that (or else we need to fix that!)... but anyway, I'll add that.
Ok, good, thanks.

One thing also which is unclear is mu4e~start, its behavior have changed
at least 2 times this week, would need to clarify what it does (or
should do) in docstring or comment for further development, I tried to
do this along your changes in this PR (see docstring) but not sure now
if it's right (i.e. my docstring):

1) When mu4e is running and FUNC is defined:
master: (re)start mu4e and call FUNC in the filter process.
before: Call FUNC only.

2) When mu4e is running and FUNC is NOT defined:
master: (re)start mu4e.
before: Same as in master.

3) When mu4e is not running and FUNC is defined:
master: same as 1), and update contexts and requests.
before: same as master but always update contexts and requests.

4) When mu4e is not running and FUNC is NOT defined:
master: same as 2), and update contexts and requests.
before: same as master but always update contexts and requests.
 It might still be useful as optimization is having
 mu4e-index-updated-hook (and the :update / :remove messages) mark
 things as 'dirty'.. and skip the refresh when we're not dirty. But, at
 least for me, it works fine as it is.
You mean update counters when deleting messages?
This should be done in 4) (see below) by this PR.

So to resume, the requirements are:

1) Start mu4e with fresh info: ok.
2) Update main buffer with ""g"": ok but is should be revert-buffer that
do it.
3) Update main buffer after updating (after ""U"" finish or M-x
mu4e-update-index)
4) Update main buffer after reading unread mails and coming back from
mu4e-headers.
…
--
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/djcb,9,https://github.com/djcb/mu/pull/1562#issuecomment-581655584,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","I did a few more changes, I think they should address 1..4 (well, (2) works but does not use revert-buffer yet). I think the other things are working.
There's indeed a bit room for cleaning up the start-up process... I'll think a bit about that. Anyway, thank your!",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,10,https://github.com/djcb/mu/pull/1562#issuecomment-581764291,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","Dirk-Jan C. Binnema <notifications@github.com> writes:
 I did a few more changes, I think they should address 1..4
4) is not working yet.

Thanks.
…
-- 
Thierry

Get my Gnupg key:
gpg --keyserver pgp.mit.edu --recv-keys 59F29997",True,{}
djcb/mu,https://github.com/djcb/mu,1562,2020-01-29T15:18:41Z,2020-02-03T06:40:42Z,2020-02-07T07:50:57Z,CLOSED,False,110,68,4,https://github.com/thierryvolpiatto,Update bookmarks status from main buffer,7,[],https://github.com/djcb/mu/pull/1562,https://github.com/thierryvolpiatto,11,https://github.com/djcb/mu/pull/1562#issuecomment-583274442,"This PR allow refreshing the main buffer with revert-buffer (g). Before the unread count were not updated when hitting ""g"", now it does.
Also I tried clarifying the call to mu4e~start by separating it in two functions.
Same for the revert-buffer-function, it is now split in two functions.
Please have a look before merging.
Next step would be to refresh the unreads count after hitting ""U"" and update finish automatically without having to hit ""g"". Same after having read the unread and quitting mu4e-headers .","I am now always using https://github.com/thierryvolpiatto/mu/tree/update_bmks_status
which IMO DTRT about revert-buffer and also works as expected, I am not sure using the
mu4e-index-updated-hook is the good approach specially in the mu4e source code for a specific problem.  Feel free to look at my branch.
Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1567,2020-02-08T13:13:52Z,2020-02-08T22:18:04Z,2020-02-08T22:18:13Z,MERGED,True,3,1,1,https://github.com/Chris00,Allow icalendar replies to automatically be signed,1,[],https://github.com/djcb/mu/pull/1567,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1567,,,True,{}
djcb/mu,https://github.com/djcb/mu,1567,2020-02-08T13:13:52Z,2020-02-08T22:18:04Z,2020-02-08T22:18:13Z,MERGED,True,3,1,1,https://github.com/Chris00,Allow icalendar replies to automatically be signed,1,[],https://github.com/djcb/mu/pull/1567,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1567#issuecomment-583782281,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1573,2020-02-17T13:48:53Z,2020-02-17T18:54:11Z,2020-02-17T19:04:44Z,MERGED,True,3416,3422,24,https://github.com/tarsius,Keep editorconfig from misconfiguring indentation for Emacs lisp files,17,[],https://github.com/djcb/mu/pull/1573,https://github.com/tarsius,1,https://github.com/djcb/mu/pull/1573,"As mentioned in #1571 completely messes up indentation of Emacs lisp files.
The commit 173deff (""editorconfig: Don't misconfigure indentation for Emacs lisp files"") has more details.
In addition to removing the .editorconfig configuration this pr configures .dir-locals.el and then fixes the indentation.
And then it also fixes quite a few other assorted issues I ran into along the way.  Let me know if this does too much.  I can split this up into more pull-requests and explain in more details why I did what I did.","As mentioned in #1571 completely messes up indentation of Emacs lisp files.
The commit 173deff (""editorconfig: Don't misconfigure indentation for Emacs lisp files"") has more details.
In addition to removing the .editorconfig configuration this pr configures .dir-locals.el and then fixes the indentation.
And then it also fixes quite a few other assorted issues I ran into along the way.  Let me know if this does too much.  I can split this up into more pull-requests and explain in more details why I did what I did.",True,{}
djcb/mu,https://github.com/djcb/mu,1573,2020-02-17T13:48:53Z,2020-02-17T18:54:11Z,2020-02-17T19:04:44Z,MERGED,True,3416,3422,24,https://github.com/tarsius,Keep editorconfig from misconfiguring indentation for Emacs lisp files,17,[],https://github.com/djcb/mu/pull/1573,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1573#issuecomment-587121055,"As mentioned in #1571 completely messes up indentation of Emacs lisp files.
The commit 173deff (""editorconfig: Don't misconfigure indentation for Emacs lisp files"") has more details.
In addition to removing the .editorconfig configuration this pr configures .dir-locals.el and then fixes the indentation.
And then it also fixes quite a few other assorted issues I ran into along the way.  Let me know if this does too much.  I can split this up into more pull-requests and explain in more details why I did what I did.","Okay, merged-- thanks! It's quite a change from what it was, but little value in using non-standard indentation.",True,"{'HOORAY': ['https://github.com/tarsius'], 'HEART': ['https://github.com/tarsius']}"
djcb/mu,https://github.com/djcb/mu,1573,2020-02-17T13:48:53Z,2020-02-17T18:54:11Z,2020-02-17T19:04:44Z,MERGED,True,3416,3422,24,https://github.com/tarsius,Keep editorconfig from misconfiguring indentation for Emacs lisp files,17,[],https://github.com/djcb/mu/pull/1573,https://github.com/tarsius,3,https://github.com/djcb/mu/pull/1573#issuecomment-587121647,"As mentioned in #1571 completely messes up indentation of Emacs lisp files.
The commit 173deff (""editorconfig: Don't misconfigure indentation for Emacs lisp files"") has more details.
In addition to removing the .editorconfig configuration this pr configures .dir-locals.el and then fixes the indentation.
And then it also fixes quite a few other assorted issues I ran into along the way.  Let me know if this does too much.  I can split this up into more pull-requests and explain in more details why I did what I did.",Piuuuuu.... thanks!!,True,{'THUMBS_UP': ['https://github.com/thierryvolpiatto']}
djcb/mu,https://github.com/djcb/mu,1574,2020-02-17T19:30:31Z,2020-02-18T21:51:55Z,2020-02-18T21:59:36Z,CLOSED,False,324,270,19,https://github.com/tarsius,Use outline-minor-mode section headings,6,[],https://github.com/djcb/mu/pull/1574,https://github.com/tarsius,1,https://github.com/djcb/mu/pull/1574,"(Don't merge this just yet, see bottom.)
outline-minor-mode is a mode that can be used to deal with sections in source files like one does in Org mode files.  The file is structures into a tree of sections, subsections and so on.  Sections can be collapsed and expanded, and the visibility of complete subtrees or all sections in the buffer can be easily by cycled.  This is useful for much the same reason that it is useful in Org mode buffers, or in Magit buffers.
However this assumes that the source files actually follow Emacs' conventions for section headers in source files, which (phrased in the context of lisp files) goes as follows:

A comment line that begins with only one or two semicolons is just a plain old comment.
A comment line that begins with three or more semicolons, followed by a space, followed by some text, is a section heading.
The number of semicolons specifies the level of the section.  Three=section, four=subsection, five=subsubsection etc.


I would like to encourage you not only to merge this pr but to also start using outline-minor-mode yourself.  It is immensely useful for navigation (and especially when getting familiar with a unknown codebase, though that does not apply for you in this case.))
Here is my basic configuration, which you might want to adapt:
(add-hook 'emacs-lisp-mode-hook 'outline-minor-mode)

(use-package bicycle
  :demand t ; https://github.com/jwiegley/use-package/issues/705
  :after outline
  :bind (:map outline-minor-mode-map
              ([C-tab] . bicycle-cycle)
              ([S-tab] . bicycle-cycle-global)))
And to make the headings prettier you should also use:
(use-package outline-minor-faces
  :after outline
  :config (add-hook 'outline-minor-mode-hook
                    'outline-minor-faces-add-font-lock-keywords))

(use-package backline
  :after outline
  :config (advice-add 'outline-flag-region :after 'backline-update))
Disclaimer: I am the author of bicycle, outline-minor-faces and backline.
You can try out what this does in the magit repository, for example.  It makes heavy use of sections.

This converts existing section headings that previously did not conform to the Emacs conventions.
It also replaces section separators (things like ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) into section headings.  Because I am not familiar with the code base, I often did not know what heading to use.  In such cases I used ;;; UNNAMED as temporary heading.
You probably don't want to merge this without first adding an additional commit, which replaces these placeholders with the appropriate headings.","(Don't merge this just yet, see bottom.)
outline-minor-mode is a mode that can be used to deal with sections in source files like one does in Org mode files.  The file is structures into a tree of sections, subsections and so on.  Sections can be collapsed and expanded, and the visibility of complete subtrees or all sections in the buffer can be easily by cycled.  This is useful for much the same reason that it is useful in Org mode buffers, or in Magit buffers.
However this assumes that the source files actually follow Emacs' conventions for section headers in source files, which (phrased in the context of lisp files) goes as follows:

A comment line that begins with only one or two semicolons is just a plain old comment.
A comment line that begins with three or more semicolons, followed by a space, followed by some text, is a section heading.
The number of semicolons specifies the level of the section.  Three=section, four=subsection, five=subsubsection etc.


I would like to encourage you not only to merge this pr but to also start using outline-minor-mode yourself.  It is immensely useful for navigation (and especially when getting familiar with a unknown codebase, though that does not apply for you in this case.))
Here is my basic configuration, which you might want to adapt:
(add-hook 'emacs-lisp-mode-hook 'outline-minor-mode)

(use-package bicycle
  :demand t ; https://github.com/jwiegley/use-package/issues/705
  :after outline
  :bind (:map outline-minor-mode-map
              ([C-tab] . bicycle-cycle)
              ([S-tab] . bicycle-cycle-global)))
And to make the headings prettier you should also use:
(use-package outline-minor-faces
  :after outline
  :config (add-hook 'outline-minor-mode-hook
                    'outline-minor-faces-add-font-lock-keywords))

(use-package backline
  :after outline
  :config (advice-add 'outline-flag-region :after 'backline-update))
Disclaimer: I am the author of bicycle, outline-minor-faces and backline.
You can try out what this does in the magit repository, for example.  It makes heavy use of sections.

This converts existing section headings that previously did not conform to the Emacs conventions.
It also replaces section separators (things like ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) into section headings.  Because I am not familiar with the code base, I often did not know what heading to use.  In such cases I used ;;; UNNAMED as temporary heading.
You probably don't want to merge this without first adding an additional commit, which replaces these placeholders with the appropriate headings.",True,{}
djcb/mu,https://github.com/djcb/mu,1574,2020-02-17T19:30:31Z,2020-02-18T21:51:55Z,2020-02-18T21:59:36Z,CLOSED,False,324,270,19,https://github.com/tarsius,Use outline-minor-mode section headings,6,[],https://github.com/djcb/mu/pull/1574,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1574#issuecomment-587914453,"(Don't merge this just yet, see bottom.)
outline-minor-mode is a mode that can be used to deal with sections in source files like one does in Org mode files.  The file is structures into a tree of sections, subsections and so on.  Sections can be collapsed and expanded, and the visibility of complete subtrees or all sections in the buffer can be easily by cycled.  This is useful for much the same reason that it is useful in Org mode buffers, or in Magit buffers.
However this assumes that the source files actually follow Emacs' conventions for section headers in source files, which (phrased in the context of lisp files) goes as follows:

A comment line that begins with only one or two semicolons is just a plain old comment.
A comment line that begins with three or more semicolons, followed by a space, followed by some text, is a section heading.
The number of semicolons specifies the level of the section.  Three=section, four=subsection, five=subsubsection etc.


I would like to encourage you not only to merge this pr but to also start using outline-minor-mode yourself.  It is immensely useful for navigation (and especially when getting familiar with a unknown codebase, though that does not apply for you in this case.))
Here is my basic configuration, which you might want to adapt:
(add-hook 'emacs-lisp-mode-hook 'outline-minor-mode)

(use-package bicycle
  :demand t ; https://github.com/jwiegley/use-package/issues/705
  :after outline
  :bind (:map outline-minor-mode-map
              ([C-tab] . bicycle-cycle)
              ([S-tab] . bicycle-cycle-global)))
And to make the headings prettier you should also use:
(use-package outline-minor-faces
  :after outline
  :config (add-hook 'outline-minor-mode-hook
                    'outline-minor-faces-add-font-lock-keywords))

(use-package backline
  :after outline
  :config (advice-add 'outline-flag-region :after 'backline-update))
Disclaimer: I am the author of bicycle, outline-minor-faces and backline.
You can try out what this does in the magit repository, for example.  It makes heavy use of sections.

This converts existing section headings that previously did not conform to the Emacs conventions.
It also replaces section separators (things like ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) into section headings.  Because I am not familiar with the code base, I often did not know what heading to use.  In such cases I used ;;; UNNAMED as temporary heading.
You probably don't want to merge this without first adding an additional commit, which replaces these placeholders with the appropriate headings.","Okay, merged locally (with some changed). Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1574,2020-02-17T19:30:31Z,2020-02-18T21:51:55Z,2020-02-18T21:59:36Z,CLOSED,False,324,270,19,https://github.com/tarsius,Use outline-minor-mode section headings,6,[],https://github.com/djcb/mu/pull/1574,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1574#issuecomment-587914909,"(Don't merge this just yet, see bottom.)
outline-minor-mode is a mode that can be used to deal with sections in source files like one does in Org mode files.  The file is structures into a tree of sections, subsections and so on.  Sections can be collapsed and expanded, and the visibility of complete subtrees or all sections in the buffer can be easily by cycled.  This is useful for much the same reason that it is useful in Org mode buffers, or in Magit buffers.
However this assumes that the source files actually follow Emacs' conventions for section headers in source files, which (phrased in the context of lisp files) goes as follows:

A comment line that begins with only one or two semicolons is just a plain old comment.
A comment line that begins with three or more semicolons, followed by a space, followed by some text, is a section heading.
The number of semicolons specifies the level of the section.  Three=section, four=subsection, five=subsubsection etc.


I would like to encourage you not only to merge this pr but to also start using outline-minor-mode yourself.  It is immensely useful for navigation (and especially when getting familiar with a unknown codebase, though that does not apply for you in this case.))
Here is my basic configuration, which you might want to adapt:
(add-hook 'emacs-lisp-mode-hook 'outline-minor-mode)

(use-package bicycle
  :demand t ; https://github.com/jwiegley/use-package/issues/705
  :after outline
  :bind (:map outline-minor-mode-map
              ([C-tab] . bicycle-cycle)
              ([S-tab] . bicycle-cycle-global)))
And to make the headings prettier you should also use:
(use-package outline-minor-faces
  :after outline
  :config (add-hook 'outline-minor-mode-hook
                    'outline-minor-faces-add-font-lock-keywords))

(use-package backline
  :after outline
  :config (advice-add 'outline-flag-region :after 'backline-update))
Disclaimer: I am the author of bicycle, outline-minor-faces and backline.
You can try out what this does in the magit repository, for example.  It makes heavy use of sections.

This converts existing section headings that previously did not conform to the Emacs conventions.
It also replaces section separators (things like ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) into section headings.  Because I am not familiar with the code base, I often did not know what heading to use.  In such cases I used ;;; UNNAMED as temporary heading.
You probably don't want to merge this without first adding an additional commit, which replaces these placeholders with the appropriate headings.",I'll check out those packages.,True,{}
djcb/mu,https://github.com/djcb/mu,1574,2020-02-17T19:30:31Z,2020-02-18T21:51:55Z,2020-02-18T21:59:36Z,CLOSED,False,324,270,19,https://github.com/tarsius,Use outline-minor-mode section headings,6,[],https://github.com/djcb/mu/pull/1574,https://github.com/tarsius,4,https://github.com/djcb/mu/pull/1574#issuecomment-587923978,"(Don't merge this just yet, see bottom.)
outline-minor-mode is a mode that can be used to deal with sections in source files like one does in Org mode files.  The file is structures into a tree of sections, subsections and so on.  Sections can be collapsed and expanded, and the visibility of complete subtrees or all sections in the buffer can be easily by cycled.  This is useful for much the same reason that it is useful in Org mode buffers, or in Magit buffers.
However this assumes that the source files actually follow Emacs' conventions for section headers in source files, which (phrased in the context of lisp files) goes as follows:

A comment line that begins with only one or two semicolons is just a plain old comment.
A comment line that begins with three or more semicolons, followed by a space, followed by some text, is a section heading.
The number of semicolons specifies the level of the section.  Three=section, four=subsection, five=subsubsection etc.


I would like to encourage you not only to merge this pr but to also start using outline-minor-mode yourself.  It is immensely useful for navigation (and especially when getting familiar with a unknown codebase, though that does not apply for you in this case.))
Here is my basic configuration, which you might want to adapt:
(add-hook 'emacs-lisp-mode-hook 'outline-minor-mode)

(use-package bicycle
  :demand t ; https://github.com/jwiegley/use-package/issues/705
  :after outline
  :bind (:map outline-minor-mode-map
              ([C-tab] . bicycle-cycle)
              ([S-tab] . bicycle-cycle-global)))
And to make the headings prettier you should also use:
(use-package outline-minor-faces
  :after outline
  :config (add-hook 'outline-minor-mode-hook
                    'outline-minor-faces-add-font-lock-keywords))

(use-package backline
  :after outline
  :config (advice-add 'outline-flag-region :after 'backline-update))
Disclaimer: I am the author of bicycle, outline-minor-faces and backline.
You can try out what this does in the magit repository, for example.  It makes heavy use of sections.

This converts existing section headings that previously did not conform to the Emacs conventions.
It also replaces section separators (things like ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) into section headings.  Because I am not familiar with the code base, I often did not know what heading to use.  In such cases I used ;;; UNNAMED as temporary heading.
You probably don't want to merge this without first adding an additional commit, which replaces these placeholders with the appropriate headings.","Okay, merged locally (with some changed). Thanks!

Thanks for the meaningful headings! 😜",True,{}
djcb/mu,https://github.com/djcb/mu,1578,2020-02-21T07:31:30Z,2020-02-21T17:28:45Z,2020-02-21T17:53:02Z,MERGED,True,0,1,1,https://github.com/Chris00,mu4e-view: (gnus) Remove duplicate bound variable,1,[],https://github.com/djcb/mu/pull/1578,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1578,Thanks for merging the code to be able to add additional fields in Gnus view.  This PR fixes a duplicate variable.,Thanks for merging the code to be able to add additional fields in Gnus view.  This PR fixes a duplicate variable.,True,{}
djcb/mu,https://github.com/djcb/mu,1578,2020-02-21T07:31:30Z,2020-02-21T17:28:45Z,2020-02-21T17:53:02Z,MERGED,True,0,1,1,https://github.com/Chris00,mu4e-view: (gnus) Remove duplicate bound variable,1,[],https://github.com/djcb/mu/pull/1578,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1578#issuecomment-589753247,Thanks for merging the code to be able to add additional fields in Gnus view.  This PR fixes a duplicate variable.,Merged - thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1581,2020-02-21T08:15:34Z,2020-02-21T17:28:10Z,2020-02-22T05:31:56Z,MERGED,True,58,42,4,https://github.com/thierryvolpiatto,Fix revert buffer,3,[],https://github.com/djcb/mu/pull/1581,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1581,"This is in continuation of #1562.
This PR allows using revert-buffer in mu4e-main instead of binding ""g"" to mu4e.
mu4e~start is no more using mu4e-index-updated-hook, the call is directly done in mu4e-info-handler which is cleaner.
Main buffer is correctly updated when quitting headers.
Mode-line is updated when changing context.","This is in continuation of #1562.
This PR allows using revert-buffer in mu4e-main instead of binding ""g"" to mu4e.
mu4e~start is no more using mu4e-index-updated-hook, the call is directly done in mu4e-info-handler which is cleaner.
Main buffer is correctly updated when quitting headers.
Mode-line is updated when changing context.",True,{}
djcb/mu,https://github.com/djcb/mu,1581,2020-02-21T08:15:34Z,2020-02-21T17:28:10Z,2020-02-22T05:31:56Z,MERGED,True,58,42,4,https://github.com/thierryvolpiatto,Fix revert buffer,3,[],https://github.com/djcb/mu/pull/1581,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1581#issuecomment-589752985,"This is in continuation of #1562.
This PR allows using revert-buffer in mu4e-main instead of binding ""g"" to mu4e.
mu4e~start is no more using mu4e-index-updated-hook, the call is directly done in mu4e-info-handler which is cleaner.
Main buffer is correctly updated when quitting headers.
Mode-line is updated when changing context.",Thanks -- merged.,True,{}
djcb/mu,https://github.com/djcb/mu,1584,2020-02-22T09:53:40Z,2020-02-22T12:08:58Z,2020-02-22T12:09:12Z,MERGED,True,1,1,1,https://github.com/hpdeifel,mu4e: Fix quoting in M-q keybinding definition,1,[],https://github.com/djcb/mu/pull/1584,https://github.com/hpdeifel,1,https://github.com/djcb/mu/pull/1584,"In the keybinding defintions for mu4e-view-mode-map, the variable
mu4e-view-use-gnus was used quoted in an if condition, which means that the
condition always evaluated to true. Therefore, M-q would always be bound to
article-fill-long lines and never to mu4e-view-fill-long-lines.","In the keybinding defintions for mu4e-view-mode-map, the variable
mu4e-view-use-gnus was used quoted in an if condition, which means that the
condition always evaluated to true. Therefore, M-q would always be bound to
article-fill-long lines and never to mu4e-view-fill-long-lines.",True,{}
djcb/mu,https://github.com/djcb/mu,1584,2020-02-22T09:53:40Z,2020-02-22T12:08:58Z,2020-02-22T12:09:12Z,MERGED,True,1,1,1,https://github.com/hpdeifel,mu4e: Fix quoting in M-q keybinding definition,1,[],https://github.com/djcb/mu/pull/1584,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1584#issuecomment-589950237,"In the keybinding defintions for mu4e-view-mode-map, the variable
mu4e-view-use-gnus was used quoted in an if condition, which means that the
condition always evaluated to true. Therefore, M-q would always be bound to
article-fill-long lines and never to mu4e-view-fill-long-lines.","Ah, good catch, thanks. Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,1,https://github.com/djcb/mu/pull/1586,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)",True,"{'THUMBS_UP': ['https://github.com/wedens', 'https://github.com/scturtle', 'https://github.com/selectric401', 'https://github.com/tshu-w', 'https://github.com/gour', 'https://github.com/nickg', 'https://github.com/tychobrailleur', 'https://github.com/ayman']}"
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,2,https://github.com/djcb/mu/pull/1586#issuecomment-590596157,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Here are some screenshots to show what it all looks like:

A user can choose which maildirs to show (and in which order) by setting the mu4e-maildir-shortcuts variable (as seen below), otherwise mu4e-main will just list all maildirs (as seen above):

Also included in the above screenshots is the difference between aligning the counts vs not having that extra logic.",True,"{'THUMBS_UP': ['https://github.com/alexmurray', 'https://github.com/ayman']}"
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1586#issuecomment-591039721,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Nice, I like it!
However, at least for now, I'd like to limit this to just the maildirs in mu4e-maildir-shortcuts.
(Note that I changed the format of those shortcuts to
   (:maildir <maildir> :key <key>)

and optional :hide and :hide-unread. so very similar to mu4e-bookmark (the old format is still supported, you need the function mu4e-maildir-shortcuts which does the conversions from the old format; so I think we can handle those in the very same way. We can perhaps even turn them on by default (or only if there are not too many?)
Maybe after that we can add all maildirs, but that may be quite a bit (e.g., I have 88 -- doesn't fit on the screen and I don't want to run 2 * 88 queries). So we'd need some filtering.
Other small thing: you need to quote the maildirs in the queries, like (format ""maildir:\""%s\"""" maildir) (still not perfect, but at least handles the not uncommon case of maildirs with spaces in them).
What do you think?",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,4,https://github.com/djcb/mu/pull/1586#issuecomment-591044328,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Dirk-Jan C. Binnema <notifications@github.com> writes:
 Nice, I like it!
Woohoo, thanks!
 However, at least for now, I'd like to limit this to just the maildirs in `mu4e-maildir-shortcuts`.

 (Note that I changed the format of those shortcuts to
 ```
    (:maildir <maildir> :key <key>)
 ```
 and optional `:hide` and `:hide-unread`. so very similar to `mu4e-bookmark` (the old format is still supported, you need the function `mu4e-maildir-shortcuts` which does the conversions from the old format; so I think we can handle those in the very same way. We can perhaps even turn them on by default (or only if there are not too many?)
Aha! Yeah, that makes sense. I'll update the code to use those.
 Maybe after that we can add _all_ maildirs, but that may be quite a bit (e.g., I have 88 -- doesn't fit on the screen and I don't want to run 2 * 88 queries). So we'd need some filtering.
Oh, yeah, that's a good point. I'm always worried about making these
kind of changes since I think I have a fairly small mailbox and am
unaware of how other people use theirs and what kind of edge cases
exist.

I totally agree about limiting this to `mu4e-maildir-shortcuts` for now;
that will simplify the code a bit about missing keys.

Do you think we need a config variable for turning this off/on? Or will
checking `mu4e-maildir-shortcuts` for nil suffice?
 Other small thing: you need to quote the maildirs in the queries, like `(format ""maildir:\""%s\"""" maildir)` (still not perfect, but at least handles the not uncommon case of maildirs with spaces in them).
Ah, good catch, thanks!
 What do you think?
All those suggestions make sense for me! Once you let me know about
`mu4e-main-show-maildirs` needing to exist or not, I can also work on
some of the NEWS entries.",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,5,https://github.com/djcb/mu/pull/1586#issuecomment-591045026,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Sean Farley <sean@farley.io> writes:
 Dirk-Jan C. Binnema ***@***.***> writes:

> Nice, I like it!

 Woohoo, thanks!

> However, at least for now, I'd like to limit this to just the maildirs in `mu4e-maildir-shortcuts`.
>
> (Note that I changed the format of those shortcuts to
> ```
>    (:maildir <maildir> :key <key>)
> ```
> and optional `:hide` and `:hide-unread`. so very similar to `mu4e-bookmark` (the old format is still supported, you need the function `mu4e-maildir-shortcuts` which does the conversions from the old format; so I think we can handle those in the very same way. We can perhaps even turn them on by default (or only if there are not too many?)

 Aha! Yeah, that makes sense. I'll update the code to use those.

> Maybe after that we can add _all_ maildirs, but that may be quite a bit (e.g., I have 88 -- doesn't fit on the screen and I don't want to run 2 * 88 queries). So we'd need some filtering.

 Oh, yeah, that's a good point. I'm always worried about making these
 kind of changes since I think I have a fairly small mailbox and am
 unaware of how other people use theirs and what kind of edge cases
 exist.

 I totally agree about limiting this to `mu4e-maildir-shortcuts` for now;
 that will simplify the code a bit about missing keys.

 Do you think we need a config variable for turning this off/on? Or will
 checking `mu4e-maildir-shortcuts` for nil suffice?

> Other small thing: you need to quote the maildirs in the queries, like `(format ""maildir:\""%s\"""" maildir)` (still not perfect, but at least handles the not uncommon case of maildirs with spaces in them).

 Ah, good catch, thanks!

> What do you think?

 All those suggestions make sense for me! Once you let me know about
 `mu4e-main-show-maildirs` needing to exist or not, I can also work on
 some of the NEWS entries.
Oh, one more question: what do you think about the logic to align both
the bookmarks unread count and the maildirs unread count? Keep it or is
it too much?",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1586#issuecomment-591054328,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Oh, great!
As for a configuration variable...  good question. For now, I guess we can try without it, and let people turn of individual shortcuts with :hide t if they need to. If that turns out to be too annoying for too many people we can think of something.
Aligning the unread-count for bookmars and maildirs is a nice touch, yeah!",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,7,https://github.com/djcb/mu/pull/1586#issuecomment-591076153,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)",👍,True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,8,https://github.com/djcb/mu/pull/1586#issuecomment-619826086,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Ok, I finally got around to updating this PR 😬 Hopefully, I addressed all the feedback!
There was one small design decision I made: in the main view there is now a ""Maildirs"" section below ""Bookmarks"" which will be empty if the user does not set any maildir shortcuts. I modeled this after the bookmarks logic and hope that it won't be a problem.
Sorry for the delay!",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/djcb,9,https://github.com/djcb/mu/pull/1586#issuecomment-622278796,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Great! I'll look at this post 1.4.x, hopefully soon.",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/scturtle,10,https://github.com/djcb/mu/pull/1586#issuecomment-626116788,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","This does not work well with CJK maildir names.
There is encoding problem in query field of mu4e~server-props.
E.g. (decode-coding-string (apply #'unibyte-string (string-to-list (plist-get q :query))) 'utf-8) is need to make it a correct UTF-8 string.
And string-width seems to be better than length.",True,{'THUMBS_UP': ['https://github.com/seanfarley']}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,11,https://github.com/djcb/mu/pull/1586#issuecomment-626280407,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Ah, thanks for the info!",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,12,https://github.com/djcb/mu/pull/1586#issuecomment-627728472,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","Ah, this is also a problem in bookmarks too. Trying to fix now.",True,{}
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/seanfarley,13,https://github.com/djcb/mu/pull/1586#issuecomment-627758516,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","@djcb I put some fixes to the bookmarks section (an off-by-one error for the text property of mouse highlighting). Let me know if you want that in its own pull request separate from this one.
Also, @scturtle, I found it difficult to align the text of non-ASCII characters but that's due to my font. Here is a screenshot of my fix:",True,"{'THUMBS_UP': ['https://github.com/scturtle', 'https://github.com/nickg', 'https://github.com/ayman']}"
djcb/mu,https://github.com/djcb/mu,1586,2020-02-24T23:10:26Z,2020-05-26T20:25:22Z,2021-04-26T02:03:17Z,CLOSED,False,83,11,2,https://github.com/seanfarley,Add support for displaying maildirs and their counts,8,[],https://github.com/djcb/mu/pull/1586,https://github.com/djcb,14,https://github.com/djcb/mu/pull/1586#issuecomment-634259714,"This code could be merged as-is but is mostly a request for comment on this functionality. In a nutshell, this upstreams the functionality of mu4e-maildirs-extension using the new query count feature. Displaying maildirs is disabled by default and controlled via mu4e-main-show-maildirs.
The last two commits that align both the bookmark and maildir counts is probably overkill but it does look nice.
Missing are documentation, updating the changelog, etc. but I can add those if this feature is deemed worthy to upstream :-)","I've merged this locally, with some tiny changes. Thanks for contributing!",True,"{'HOORAY': ['https://github.com/seanfarley', 'https://github.com/myme', 'https://github.com/gour', 'https://github.com/ayman']}"
djcb/mu,https://github.com/djcb/mu,1602,2020-02-29T12:46:41Z,2020-02-29T13:01:05Z,2020-02-29T13:01:15Z,MERGED,True,6,4,3,https://github.com/damon-kwok,error fix for msys+gcc9.1.0,2,[],https://github.com/djcb/mu/pull/1602,https://github.com/damon-kwok,1,https://github.com/djcb/mu/pull/1602,error fix for msys+gcc9.1.0,error fix for msys+gcc9.1.0,True,{}
djcb/mu,https://github.com/djcb/mu,1602,2020-02-29T12:46:41Z,2020-02-29T13:01:05Z,2020-02-29T13:01:15Z,MERGED,True,6,4,3,https://github.com/damon-kwok,error fix for msys+gcc9.1.0,2,[],https://github.com/djcb/mu/pull/1602,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1602#issuecomment-592943200,error fix for msys+gcc9.1.0,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1604,2020-03-01T00:39:43Z,2020-03-04T01:00:54Z,2020-03-04T01:00:54Z,CLOSED,False,118,54,2,https://github.com/codesections,Improve support for format=flowed,5,[],https://github.com/djcb/mu/pull/1604,https://github.com/codesections,1,https://github.com/djcb/mu/pull/1604,"This PR revises the way mu4e handles format=flowed messages as discussed in #1600.
This new code removes the previous requirement that users write each paragraph of their code as a single long line, and allows users to use auto-fill-mode, fill-paragraph, or any other function they might otherwise use to manage line length when writing their messages.
This change also removes the (somewhat confusing) distinction between mu4e-compose-format-flowed and use-hard-newlines.  Under this code, the user simply sets mu4e-compose-format-flowed whenever they want to use the format=flowed header and then controls the length of their lines with fill-flow-encode-column.
Please see the individual commit messages for further explanation of implementation details and changes.","This PR revises the way mu4e handles format=flowed messages as discussed in #1600.
This new code removes the previous requirement that users write each paragraph of their code as a single long line, and allows users to use auto-fill-mode, fill-paragraph, or any other function they might otherwise use to manage line length when writing their messages.
This change also removes the (somewhat confusing) distinction between mu4e-compose-format-flowed and use-hard-newlines.  Under this code, the user simply sets mu4e-compose-format-flowed whenever they want to use the format=flowed header and then controls the length of their lines with fill-flow-encode-column.
Please see the individual commit messages for further explanation of implementation details and changes.",True,{}
djcb/mu,https://github.com/djcb/mu,1604,2020-03-01T00:39:43Z,2020-03-04T01:00:54Z,2020-03-04T01:00:54Z,CLOSED,False,118,54,2,https://github.com/codesections,Improve support for format=flowed,5,[],https://github.com/djcb/mu/pull/1604,https://github.com/codesections,2,https://github.com/djcb/mu/pull/1604#issuecomment-594250727,"This PR revises the way mu4e handles format=flowed messages as discussed in #1600.
This new code removes the previous requirement that users write each paragraph of their code as a single long line, and allows users to use auto-fill-mode, fill-paragraph, or any other function they might otherwise use to manage line length when writing their messages.
This change also removes the (somewhat confusing) distinction between mu4e-compose-format-flowed and use-hard-newlines.  Under this code, the user simply sets mu4e-compose-format-flowed whenever they want to use the format=flowed header and then controls the length of their lines with fill-flow-encode-column.
Please see the individual commit messages for further explanation of implementation details and changes.","After looking more into both the mu4e code and the underlying code in flow-fill.el and mml.el, I have decided that this PR is on the wrong track.  I am closing it and will open a different one that achieves the same functionality using built-in Emacs functionality rather than reinventing the wheel here.",True,{}
djcb/mu,https://github.com/djcb/mu,1605,2020-03-04T10:06:56Z,2020-03-04T19:18:26Z,2020-03-04T19:18:39Z,MERGED,True,4,4,1,https://github.com/yellowmoneybank,Fix of the attachment actions,1,[],https://github.com/djcb/mu/pull/1605,https://github.com/yellowmoneybank,1,https://github.com/djcb/mu/pull/1605,"With the current version of the mu server, it is not possible open
attachments, because the server expects symbols as parameters, but
mu4e sends strings.
This change fixes this.","With the current version of the mu server, it is not possible open
attachments, because the server expects symbols as parameters, but
mu4e sends strings.
This change fixes this.",True,{}
djcb/mu,https://github.com/djcb/mu,1605,2020-03-04T10:06:56Z,2020-03-04T19:18:26Z,2020-03-04T19:18:39Z,MERGED,True,4,4,1,https://github.com/yellowmoneybank,Fix of the attachment actions,1,[],https://github.com/djcb/mu/pull/1605,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1605#issuecomment-594768563,"With the current version of the mu server, it is not possible open
attachments, because the server expects symbols as parameters, but
mu4e sends strings.
This change fixes this.","Oh, good catch, merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1606,2020-03-04T10:20:47Z,2020-03-05T20:41:16Z,2020-03-05T20:41:17Z,CLOSED,False,13,0,1,https://github.com/yellowmoneybank,Added option to attachment-options to import gpg public key,2,[],https://github.com/djcb/mu/pull/1606,https://github.com/yellowmoneybank,1,https://github.com/djcb/mu/pull/1606,"This pull request adds an option to the attachment-options that allows
to import pgp-public-keys.","This pull request adds an option to the attachment-options that allows
to import pgp-public-keys.",True,{}
djcb/mu,https://github.com/djcb/mu,1606,2020-03-04T10:20:47Z,2020-03-05T20:41:16Z,2020-03-05T20:41:17Z,CLOSED,False,13,0,1,https://github.com/yellowmoneybank,Added option to attachment-options to import gpg public key,2,[],https://github.com/djcb/mu/pull/1606,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1606#issuecomment-595436302,"This pull request adds an option to the attachment-options that allows
to import pgp-public-keys.",Merged locally (with some minor changes). Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1607,2020-03-06T14:33:40Z,2020-03-06T19:16:20Z,2020-03-06T19:16:24Z,MERGED,True,3,3,1,https://github.com/yellowmoneybank,Fix Gnus typos,1,[],https://github.com/djcb/mu/pull/1607,https://github.com/yellowmoneybank,1,https://github.com/djcb/mu/pull/1607,,,True,{}
djcb/mu,https://github.com/djcb/mu,1607,2020-03-06T14:33:40Z,2020-03-06T19:16:20Z,2020-03-06T19:16:24Z,MERGED,True,3,3,1,https://github.com/yellowmoneybank,Fix Gnus typos,1,[],https://github.com/djcb/mu/pull/1607,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1607#issuecomment-595918940,,Merged -- thanks again!,True,{}
djcb/mu,https://github.com/djcb/mu,1608,2020-03-06T14:34:42Z,2020-03-06T19:15:33Z,2020-03-06T19:15:35Z,MERGED,True,1,1,1,https://github.com/yellowmoneybank,Unquoted mu4e-view-use-gnus in unless form,1,[],https://github.com/djcb/mu/pull/1608,https://github.com/yellowmoneybank,1,https://github.com/djcb/mu/pull/1608,Same issue as in #1584,Same issue as in #1584,True,{}
djcb/mu,https://github.com/djcb/mu,1608,2020-03-06T14:34:42Z,2020-03-06T19:15:33Z,2020-03-06T19:15:35Z,MERGED,True,1,1,1,https://github.com/yellowmoneybank,Unquoted mu4e-view-use-gnus in unless form,1,[],https://github.com/djcb/mu/pull/1608,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1608#issuecomment-595918612,Same issue as in #1584,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1610,2020-03-07T23:31:50Z,2020-05-27T19:57:40Z,2020-05-27T19:57:40Z,CLOSED,False,118,20,1,https://github.com/phikal,Merged crypto-policy configuration into one variable,3,[],https://github.com/djcb/mu/pull/1610,https://github.com/phikal,1,https://github.com/djcb/mu/pull/1610,"The current cryptography policy is a bit confusing.  The existence of the two variables mu4e-compose-crypto-reply-plain-policy and mu4e-compose-crypto-reply-encrypted-policy at first glance implies that you can configure how to respond to encrypted and plain emails, but on closer inspection mu4e-compose-crypto-reply-plain-policy reveals itself to also be responsible for forwarding mails, creating new messages, etc.
This changeset suggests merging the two variables into one -- mu4e-compose-crypto-policy -- while at the same time expanding it's granularity. So instead of implementing mu4e-compose-crypto-forward-plain-policy, mu4e-compose-crypto-new-policy, etc. everything regarding encryption and signing is centrally controlled by a customizable set.
To avoid conflicts with older configurations, I have added a translation layer in mu4e~compose-handler, that adds the corresponding new symbols to the new policy variable, based on the old the values of the old variables. In case these weren't customized, both should be nil now, meaning that the append has no consing overhead (be it ever so minimal), as mu4e-compose-crypto-reply-encrypted-policy has been changed from sign-and-encrypt to nil.
To preserve the current defaults, mu4e-compose-crypto-policy only contains the symbols that were implied by mu4e-compose-crypto-reply-encrypted-policy. It might be worth considering expanding the default configuration, but I didn't want to make that decision in this pull request.","The current cryptography policy is a bit confusing.  The existence of the two variables mu4e-compose-crypto-reply-plain-policy and mu4e-compose-crypto-reply-encrypted-policy at first glance implies that you can configure how to respond to encrypted and plain emails, but on closer inspection mu4e-compose-crypto-reply-plain-policy reveals itself to also be responsible for forwarding mails, creating new messages, etc.
This changeset suggests merging the two variables into one -- mu4e-compose-crypto-policy -- while at the same time expanding it's granularity. So instead of implementing mu4e-compose-crypto-forward-plain-policy, mu4e-compose-crypto-new-policy, etc. everything regarding encryption and signing is centrally controlled by a customizable set.
To avoid conflicts with older configurations, I have added a translation layer in mu4e~compose-handler, that adds the corresponding new symbols to the new policy variable, based on the old the values of the old variables. In case these weren't customized, both should be nil now, meaning that the append has no consing overhead (be it ever so minimal), as mu4e-compose-crypto-reply-encrypted-policy has been changed from sign-and-encrypt to nil.
To preserve the current defaults, mu4e-compose-crypto-policy only contains the symbols that were implied by mu4e-compose-crypto-reply-encrypted-policy. It might be worth considering expanding the default configuration, but I didn't want to make that decision in this pull request.",True,{}
djcb/mu,https://github.com/djcb/mu,1610,2020-03-07T23:31:50Z,2020-05-27T19:57:40Z,2020-05-27T19:57:40Z,CLOSED,False,118,20,1,https://github.com/phikal,Merged crypto-policy configuration into one variable,3,[],https://github.com/djcb/mu/pull/1610,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1610#issuecomment-603670560,"The current cryptography policy is a bit confusing.  The existence of the two variables mu4e-compose-crypto-reply-plain-policy and mu4e-compose-crypto-reply-encrypted-policy at first glance implies that you can configure how to respond to encrypted and plain emails, but on closer inspection mu4e-compose-crypto-reply-plain-policy reveals itself to also be responsible for forwarding mails, creating new messages, etc.
This changeset suggests merging the two variables into one -- mu4e-compose-crypto-policy -- while at the same time expanding it's granularity. So instead of implementing mu4e-compose-crypto-forward-plain-policy, mu4e-compose-crypto-new-policy, etc. everything regarding encryption and signing is centrally controlled by a customizable set.
To avoid conflicts with older configurations, I have added a translation layer in mu4e~compose-handler, that adds the corresponding new symbols to the new policy variable, based on the old the values of the old variables. In case these weren't customized, both should be nil now, meaning that the append has no consing overhead (be it ever so minimal), as mu4e-compose-crypto-reply-encrypted-policy has been changed from sign-and-encrypt to nil.
To preserve the current defaults, mu4e-compose-crypto-policy only contains the symbols that were implied by mu4e-compose-crypto-reply-encrypted-policy. It might be worth considering expanding the default configuration, but I didn't want to make that decision in this pull request.","At a glance, looks okay. But this will be something for post-1.4, as we are in deep-freeze mode.",True,{}
djcb/mu,https://github.com/djcb/mu,1610,2020-03-07T23:31:50Z,2020-05-27T19:57:40Z,2020-05-27T19:57:40Z,CLOSED,False,118,20,1,https://github.com/phikal,Merged crypto-policy configuration into one variable,3,[],https://github.com/djcb/mu/pull/1610,https://github.com/phikal,3,https://github.com/djcb/mu/pull/1610#issuecomment-603759111,"The current cryptography policy is a bit confusing.  The existence of the two variables mu4e-compose-crypto-reply-plain-policy and mu4e-compose-crypto-reply-encrypted-policy at first glance implies that you can configure how to respond to encrypted and plain emails, but on closer inspection mu4e-compose-crypto-reply-plain-policy reveals itself to also be responsible for forwarding mails, creating new messages, etc.
This changeset suggests merging the two variables into one -- mu4e-compose-crypto-policy -- while at the same time expanding it's granularity. So instead of implementing mu4e-compose-crypto-forward-plain-policy, mu4e-compose-crypto-new-policy, etc. everything regarding encryption and signing is centrally controlled by a customizable set.
To avoid conflicts with older configurations, I have added a translation layer in mu4e~compose-handler, that adds the corresponding new symbols to the new policy variable, based on the old the values of the old variables. In case these weren't customized, both should be nil now, meaning that the append has no consing overhead (be it ever so minimal), as mu4e-compose-crypto-reply-encrypted-policy has been changed from sign-and-encrypt to nil.
To preserve the current defaults, mu4e-compose-crypto-policy only contains the symbols that were implied by mu4e-compose-crypto-reply-encrypted-policy. It might be worth considering expanding the default configuration, but I didn't want to make that decision in this pull request.","No problem. Just out of curiosity, is there a planned release date?",True,{}
djcb/mu,https://github.com/djcb/mu,1610,2020-03-07T23:31:50Z,2020-05-27T19:57:40Z,2020-05-27T19:57:40Z,CLOSED,False,118,20,1,https://github.com/phikal,Merged crypto-policy configuration into one variable,3,[],https://github.com/djcb/mu/pull/1610,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1610#issuecomment-609004205,"The current cryptography policy is a bit confusing.  The existence of the two variables mu4e-compose-crypto-reply-plain-policy and mu4e-compose-crypto-reply-encrypted-policy at first glance implies that you can configure how to respond to encrypted and plain emails, but on closer inspection mu4e-compose-crypto-reply-plain-policy reveals itself to also be responsible for forwarding mails, creating new messages, etc.
This changeset suggests merging the two variables into one -- mu4e-compose-crypto-policy -- while at the same time expanding it's granularity. So instead of implementing mu4e-compose-crypto-forward-plain-policy, mu4e-compose-crypto-new-policy, etc. everything regarding encryption and signing is centrally controlled by a customizable set.
To avoid conflicts with older configurations, I have added a translation layer in mu4e~compose-handler, that adds the corresponding new symbols to the new policy variable, based on the old the values of the old variables. In case these weren't customized, both should be nil now, meaning that the append has no consing overhead (be it ever so minimal), as mu4e-compose-crypto-reply-encrypted-policy has been changed from sign-and-encrypt to nil.
To preserve the current defaults, mu4e-compose-crypto-policy only contains the symbols that were implied by mu4e-compose-crypto-reply-encrypted-policy. It might be worth considering expanding the default configuration, but I didn't want to make that decision in this pull request.","Regarding the release: next few weeks, I think. There are still a few issues we're tracking.",True,{'THUMBS_UP': ['https://github.com/phikal']}
djcb/mu,https://github.com/djcb/mu,1610,2020-03-07T23:31:50Z,2020-05-27T19:57:40Z,2020-05-27T19:57:40Z,CLOSED,False,118,20,1,https://github.com/phikal,Merged crypto-policy configuration into one variable,3,[],https://github.com/djcb/mu/pull/1610,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1610#issuecomment-634907236,"The current cryptography policy is a bit confusing.  The existence of the two variables mu4e-compose-crypto-reply-plain-policy and mu4e-compose-crypto-reply-encrypted-policy at first glance implies that you can configure how to respond to encrypted and plain emails, but on closer inspection mu4e-compose-crypto-reply-plain-policy reveals itself to also be responsible for forwarding mails, creating new messages, etc.
This changeset suggests merging the two variables into one -- mu4e-compose-crypto-policy -- while at the same time expanding it's granularity. So instead of implementing mu4e-compose-crypto-forward-plain-policy, mu4e-compose-crypto-new-policy, etc. everything regarding encryption and signing is centrally controlled by a customizable set.
To avoid conflicts with older configurations, I have added a translation layer in mu4e~compose-handler, that adds the corresponding new symbols to the new policy variable, based on the old the values of the old variables. In case these weren't customized, both should be nil now, meaning that the append has no consing overhead (be it ever so minimal), as mu4e-compose-crypto-reply-encrypted-policy has been changed from sign-and-encrypt to nil.
To preserve the current defaults, mu4e-compose-crypto-policy only contains the symbols that were implied by mu4e-compose-crypto-reply-encrypted-policy. It might be worth considering expanding the default configuration, but I didn't want to make that decision in this pull request.",Merged locally & pushed. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1612,2020-03-09T22:06:41Z,2021-03-11T20:26:15Z,2021-03-11T20:26:16Z,CLOSED,False,304,89,2,https://github.com/codesections,Format flowed,15,[],https://github.com/djcb/mu/pull/1612,https://github.com/codesections,1,https://github.com/djcb/mu/pull/1612,"This is a second approach to solving the format=flowed issue noted in #1600.  Unlike the first approach (#1604), this PR leverages the functions in fill-flowed.el and message-mode – as a result, this PR introduces less code and, hopefully, should make future maintenance easier.
For full documentation of the new format=flowed support, see the added *info* documentation.  But the short version is that `mu4e-compose-format-flowed now accepts four non-nil values

'manual – sets the f=f header, but doesn't reformat lines
'auto – sets the header and refills paragraphs based fill-flowed-encode-column
'auto-long-lines – sets the head, refills paragraphs, and adds a space to one-line paragraphs
t – same as 'auto (for backwards compatibility only)","This is a second approach to solving the format=flowed issue noted in #1600.  Unlike the first approach (#1604), this PR leverages the functions in fill-flowed.el and message-mode – as a result, this PR introduces less code and, hopefully, should make future maintenance easier.
For full documentation of the new format=flowed support, see the added *info* documentation.  But the short version is that `mu4e-compose-format-flowed now accepts four non-nil values

'manual – sets the f=f header, but doesn't reformat lines
'auto – sets the header and refills paragraphs based fill-flowed-encode-column
'auto-long-lines – sets the head, refills paragraphs, and adds a space to one-line paragraphs
t – same as 'auto (for backwards compatibility only)",True,{}
djcb/mu,https://github.com/djcb/mu,1612,2020-03-09T22:06:41Z,2021-03-11T20:26:15Z,2021-03-11T20:26:16Z,CLOSED,False,304,89,2,https://github.com/codesections,Format flowed,15,[],https://github.com/djcb/mu/pull/1612,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1612#issuecomment-602814505,"This is a second approach to solving the format=flowed issue noted in #1600.  Unlike the first approach (#1604), this PR leverages the functions in fill-flowed.el and message-mode – as a result, this PR introduces less code and, hopefully, should make future maintenance easier.
For full documentation of the new format=flowed support, see the added *info* documentation.  But the short version is that `mu4e-compose-format-flowed now accepts four non-nil values

'manual – sets the f=f header, but doesn't reformat lines
'auto – sets the header and refills paragraphs based fill-flowed-encode-column
'auto-long-lines – sets the head, refills paragraphs, and adds a space to one-line paragraphs
t – same as 'auto (for backwards compatibility only)",Thanks... overall looks good... I'm not going to pull this know since we're in deep feature-freeze for the 1.4 release... but I'll get to this after that.,True,{}
djcb/mu,https://github.com/djcb/mu,1612,2020-03-09T22:06:41Z,2021-03-11T20:26:15Z,2021-03-11T20:26:16Z,CLOSED,False,304,89,2,https://github.com/codesections,Format flowed,15,[],https://github.com/djcb/mu/pull/1612,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1612#issuecomment-797025911,"This is a second approach to solving the format=flowed issue noted in #1600.  Unlike the first approach (#1604), this PR leverages the functions in fill-flowed.el and message-mode – as a result, this PR introduces less code and, hopefully, should make future maintenance easier.
For full documentation of the new format=flowed support, see the added *info* documentation.  But the short version is that `mu4e-compose-format-flowed now accepts four non-nil values

'manual – sets the f=f header, but doesn't reformat lines
'auto – sets the header and refills paragraphs based fill-flowed-encode-column
'auto-long-lines – sets the head, refills paragraphs, and adds a space to one-line paragraphs
t – same as 'auto (for backwards compatibility only)","Seems this has gotten stale, so let's close for now.",True,{}
djcb/mu,https://github.com/djcb/mu,1614,2020-03-12T15:16:31Z,2021-06-17T17:41:28Z,2021-06-17T17:41:28Z,CLOSED,False,55,2,3,https://github.com/yellowmoneybank,Adding support to query the headers of a message ,6,[],https://github.com/djcb/mu/pull/1614,https://github.com/yellowmoneybank,1,https://github.com/djcb/mu/pull/1614,"This pull-request adds support to search for headers in a message, specified
by its docid. This is necessary, if you want to add support for
protocols, that rely on adding header fields to mails (for example autocrypt).
The mu server is extended by the command ""(header :docid 
:header )"", and returns a message of the format ""(:header
 :docid   :value )"".
mu4e is extended by the function (defun mu4e~proc-header (docid
header) ...), which scans the message with the DOCID for a
HEADER-field.
The result of that function is delivered to the function registered as
""mu4e-search-header-field-func"".","This pull-request adds support to search for headers in a message, specified
by its docid. This is necessary, if you want to add support for
protocols, that rely on adding header fields to mails (for example autocrypt).
The mu server is extended by the command ""(header :docid 
:header )"", and returns a message of the format ""(:header
 :docid   :value )"".
mu4e is extended by the function (defun mu4e~proc-header (docid
header) ...), which scans the message with the DOCID for a
HEADER-field.
The result of that function is delivered to the function registered as
""mu4e-search-header-field-func"".",True,{}
djcb/mu,https://github.com/djcb/mu,1614,2020-03-12T15:16:31Z,2021-06-17T17:41:28Z,2021-06-17T17:41:28Z,CLOSED,False,55,2,3,https://github.com/yellowmoneybank,Adding support to query the headers of a message ,6,[],https://github.com/djcb/mu/pull/1614,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1614#issuecomment-602819237,"This pull-request adds support to search for headers in a message, specified
by its docid. This is necessary, if you want to add support for
protocols, that rely on adding header fields to mails (for example autocrypt).
The mu server is extended by the command ""(header :docid 
:header )"", and returns a message of the format ""(:header
 :docid   :value )"".
mu4e is extended by the function (defun mu4e~proc-header (docid
header) ...), which scans the message with the DOCID for a
HEADER-field.
The result of that function is delivered to the function registered as
""mu4e-search-header-field-func"".","Hmm... appreciate the work, but not sure about this one.
I'm not convinced autocrypt is worth supporting at this point. If mutt is the most prominent client supporting (with all due respect, I'm an old mutt user), it seems rather marginal -- not even gnus supports it. So the extra complexity seems unwanted.
Now, if we do want to support it, it's probably better to add a few fields to the message sexp, using gmime's support. WDYT?",True,{}
djcb/mu,https://github.com/djcb/mu,1614,2020-03-12T15:16:31Z,2021-06-17T17:41:28Z,2021-06-17T17:41:28Z,CLOSED,False,55,2,3,https://github.com/yellowmoneybank,Adding support to query the headers of a message ,6,[],https://github.com/djcb/mu/pull/1614,https://github.com/phikal,3,https://github.com/djcb/mu/pull/1614#issuecomment-603758577,"This pull-request adds support to search for headers in a message, specified
by its docid. This is necessary, if you want to add support for
protocols, that rely on adding header fields to mails (for example autocrypt).
The mu server is extended by the command ""(header :docid 
:header )"", and returns a message of the format ""(:header
 :docid   :value )"".
mu4e is extended by the function (defun mu4e~proc-header (docid
header) ...), which scans the message with the DOCID for a
HEADER-field.
The result of that function is delivered to the function registered as
""mu4e-search-header-field-func"".","Actually, the most prominent client is Thunderbird. @yellowmoneybank and I have been working on a MUA-generic autocrypt implementation (the MELPA pull request is here), and while I managed to circumvent the need for this specific patch, I do feel that it would be more efficient than what I came up with.
Furthermore, it's not just Autocrypt. There are certainly many more headers that add-ons could make use of if there were a sensible way to query them.

Also, GMIME has some difficulty implementing Autocrypt, since to my knowledge it isn't responsible for sending or has the ability to interject while composing messages? If this isn't given, it's rather difficult to add the Autocrypt header or the Autocrypt-Gossip attachment that is used for multiple recipients.",True,{}
djcb/mu,https://github.com/djcb/mu,1614,2020-03-12T15:16:31Z,2021-06-17T17:41:28Z,2021-06-17T17:41:28Z,CLOSED,False,55,2,3,https://github.com/yellowmoneybank,Adding support to query the headers of a message ,6,[],https://github.com/djcb/mu/pull/1614,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1614#issuecomment-609003620,"This pull-request adds support to search for headers in a message, specified
by its docid. This is necessary, if you want to add support for
protocols, that rely on adding header fields to mails (for example autocrypt).
The mu server is extended by the command ""(header :docid 
:header )"", and returns a message of the format ""(:header
 :docid   :value )"".
mu4e is extended by the function (defun mu4e~proc-header (docid
header) ...), which scans the message with the DOCID for a
HEADER-field.
The result of that function is delivered to the function registered as
""mu4e-search-header-field-func"".","Ah, there's a 3rd-party extension for Thunderbird. Still I'd say it's rather marginal, but of course you have to start somewhere.
Anyway, I'm not in favor for querying of headers like this; the mu<->mu4e protocol is not designed for this, and it's not something I want to expose, either for autocrypt or other use-cases.
For the GMIME part, the idea would that in the sexps we send to mu4e when showing a full message, (mu-msg-sexp), we'd add the autocrypt header(s). I.e., you'd still get the same headers as in the 'query' case, but in a way that better fits mu4e.",True,{}
djcb/mu,https://github.com/djcb/mu,1614,2020-03-12T15:16:31Z,2021-06-17T17:41:28Z,2021-06-17T17:41:28Z,CLOSED,False,55,2,3,https://github.com/yellowmoneybank,Adding support to query the headers of a message ,6,[],https://github.com/djcb/mu/pull/1614,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1614#issuecomment-863434488,"This pull-request adds support to search for headers in a message, specified
by its docid. This is necessary, if you want to add support for
protocols, that rely on adding header fields to mails (for example autocrypt).
The mu server is extended by the command ""(header :docid 
:header )"", and returns a message of the format ""(:header
 :docid   :value )"".
mu4e is extended by the function (defun mu4e~proc-header (docid
header) ...), which scans the message with the DOCID for a
HEADER-field.
The result of that function is delivered to the function registered as
""mu4e-search-header-field-func"".","Thanks for the effort, but this doesn't apply anymore, and anyway, I wasn't quite happy with the approach (as discussed above). So closing this...",True,{}
djcb/mu,https://github.com/djcb/mu,1622,2020-03-20T21:21:35Z,2020-03-21T16:19:59Z,2020-03-21T16:55:19Z,MERGED,True,2,1,1,https://github.com/tarsius,mu4e: extend mu4e-header-highlight-face to edge of window,1,[],https://github.com/djcb/mu/pull/1622,https://github.com/tarsius,1,https://github.com/djcb/mu/pull/1622,"Due to a breaking change we have to request this explicitly in
Emacs 27.  Earlier Emacs versions do the right thing by default.
If the effect of a face does not extend to the edge of the window,
then attributes such as the background color or underline cease to
be used for more that the width of a single character, which is not
appropriate for a face intended to highlight a complete line.
See https://debbugs.gnu.org/cgi/bugreport.cgi?bug=37774.","Due to a breaking change we have to request this explicitly in
Emacs 27.  Earlier Emacs versions do the right thing by default.
If the effect of a face does not extend to the edge of the window,
then attributes such as the background color or underline cease to
be used for more that the width of a single character, which is not
appropriate for a face intended to highlight a complete line.
See https://debbugs.gnu.org/cgi/bugreport.cgi?bug=37774.",True,{}
djcb/mu,https://github.com/djcb/mu,1622,2020-03-20T21:21:35Z,2020-03-21T16:19:59Z,2020-03-21T16:55:19Z,MERGED,True,2,1,1,https://github.com/tarsius,mu4e: extend mu4e-header-highlight-face to edge of window,1,[],https://github.com/djcb/mu/pull/1622,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1622#issuecomment-602067445,"Due to a breaking change we have to request this explicitly in
Emacs 27.  Earlier Emacs versions do the right thing by default.
If the effect of a face does not extend to the edge of the window,
then attributes such as the background color or underline cease to
be used for more that the width of a single character, which is not
appropriate for a face intended to highlight a complete line.
See https://debbugs.gnu.org/cgi/bugreport.cgi?bug=37774.","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1627,2020-03-29T20:21:52Z,2020-04-04T09:11:59Z,2020-04-04T09:12:07Z,MERGED,True,4,3,2,https://github.com/haji-ali,Misc fixes,2,[],https://github.com/djcb/mu/pull/1627,https://github.com/haji-ali,1,https://github.com/djcb/mu/pull/1627,"This fixes what I believe to be two bugs:


The first is in mu4e-info-handler where save-window-excursion is now called instead of just selecting the mainbuf window. Previously, the main-mu4e window was selected (if visible) after mu4e-update-index is called (directly or through the update timer). The result was that the pointer would jump away from a currently selected window.


The second is in mu4e-compose.el. Previously, (widen) was called right after (mu4e~compose-hide-headers). There were two problems: First the headers that were just hidden are immediately shown. Second if some headers were previously hidden before that hook is executed, some header fields were corrupted.","This fixes what I believe to be two bugs:


The first is in mu4e-info-handler where save-window-excursion is now called instead of just selecting the mainbuf window. Previously, the main-mu4e window was selected (if visible) after mu4e-update-index is called (directly or through the update timer). The result was that the pointer would jump away from a currently selected window.


The second is in mu4e-compose.el. Previously, (widen) was called right after (mu4e~compose-hide-headers). There were two problems: First the headers that were just hidden are immediately shown. Second if some headers were previously hidden before that hook is executed, some header fields were corrupted.",True,{}
djcb/mu,https://github.com/djcb/mu,1627,2020-03-29T20:21:52Z,2020-04-04T09:11:59Z,2020-04-04T09:12:07Z,MERGED,True,4,3,2,https://github.com/haji-ali,Misc fixes,2,[],https://github.com/djcb/mu/pull/1627,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1627#issuecomment-609000307,"This fixes what I believe to be two bugs:


The first is in mu4e-info-handler where save-window-excursion is now called instead of just selecting the mainbuf window. Previously, the main-mu4e window was selected (if visible) after mu4e-update-index is called (directly or through the update timer). The result was that the pointer would jump away from a currently selected window.


The second is in mu4e-compose.el. Previously, (widen) was called right after (mu4e~compose-hide-headers). There were two problems: First the headers that were just hidden are immediately shown. Second if some headers were previously hidden before that hook is executed, some header fields were corrupted.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1633,2020-04-05T20:59:19Z,2020-04-05T21:09:02Z,2020-04-08T03:02:49Z,MERGED,True,17,0,1,https://github.com/Chris00,Fix displaying ical attachments with no charset,1,[],https://github.com/djcb/mu/pull/1633,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1633,Fixes #1625,Fixes #1625,True,{}
djcb/mu,https://github.com/djcb/mu,1633,2020-04-05T20:59:19Z,2020-04-05T21:09:02Z,2020-04-08T03:02:49Z,MERGED,True,17,0,1,https://github.com/Chris00,Fix displaying ical attachments with no charset,1,[],https://github.com/djcb/mu/pull/1633,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1633#issuecomment-609483522,Fixes #1625,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1633,2020-04-05T20:59:19Z,2020-04-05T21:09:02Z,2020-04-08T03:02:49Z,MERGED,True,17,0,1,https://github.com/Chris00,Fix displaying ical attachments with no charset,1,[],https://github.com/djcb/mu/pull/1633,https://github.com/alexmurray,3,https://github.com/djcb/mu/pull/1633#issuecomment-610725515,Fixes #1625,Since this was merged I am getting errors using mu4e-view-use-gnus t when displaying ical invitations using emacs-27 - I think the error is due to the use of cdr to get attendee from handle-attendee - this should instead be cadr as otherwise cdr returns (list attendee) rather than just attendee,True,{}
djcb/mu,https://github.com/djcb/mu,1635,2020-04-08T04:01:03Z,2020-04-08T06:37:54Z,2020-04-08T06:56:24Z,MERGED,True,1,1,1,https://github.com/alexmurray,Fix displaying ical attachments after PR #1633,1,[],https://github.com/djcb/mu/pull/1635,https://github.com/alexmurray,1,https://github.com/djcb/mu/pull/1635,,,True,{}
djcb/mu,https://github.com/djcb/mu,1635,2020-04-08T04:01:03Z,2020-04-08T06:37:54Z,2020-04-08T06:56:24Z,MERGED,True,1,1,1,https://github.com/alexmurray,Fix displaying ical attachments after PR #1633,1,[],https://github.com/djcb/mu/pull/1635,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1635#issuecomment-610779274,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1635,2020-04-08T04:01:03Z,2020-04-08T06:37:54Z,2020-04-08T06:56:24Z,MERGED,True,1,1,1,https://github.com/alexmurray,Fix displaying ical attachments after PR #1633,1,[],https://github.com/djcb/mu/pull/1635,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1635#issuecomment-610785755,,Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1637,2020-04-08T09:33:20Z,2020-04-11T09:57:36Z,2020-04-11T09:57:45Z,MERGED,True,683,1,2,https://github.com/rotty,Fix autoreconf,2,['needinfo'],https://github.com/djcb/mu/pull/1637,https://github.com/rotty,1,https://github.com/djcb/mu/pull/1637,"Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.","Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.",True,{}
djcb/mu,https://github.com/djcb/mu,1637,2020-04-08T09:33:20Z,2020-04-11T09:57:36Z,2020-04-11T09:57:45Z,MERGED,True,683,1,2,https://github.com/rotty,Fix autoreconf,2,['needinfo'],https://github.com/djcb/mu/pull/1637,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1637#issuecomment-611943186,"Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.",What error did you get without this macro?,True,{}
djcb/mu,https://github.com/djcb/mu,1637,2020-04-08T09:33:20Z,2020-04-11T09:57:36Z,2020-04-11T09:57:45Z,MERGED,True,683,1,2,https://github.com/rotty,Fix autoreconf,2,['needinfo'],https://github.com/djcb/mu/pull/1637,https://github.com/rotty,3,https://github.com/djcb/mu/pull/1637#issuecomment-612142702,"Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.","Quoting from the commit message of the commit adding the file:

Add m4/host-cpu-c-abi.m4
The added file is taken from gnulib e313a53; adding it fixes the
following warning:
configure.ac:225: warning: gl_HOST_CPU_C_ABI_32BIT is m4_require'd but not m4_defun'd

The missing file also caused the generated configure script to
contain an reference to gl_HOST_CPU_C_ABI_32BIT, instead of its
expansion.

Edit: I should have added that this is on a current Debian bullseye (testing) system (automake 1:1.16.1-4, autoconf 2.69-11.1).",True,{}
djcb/mu,https://github.com/djcb/mu,1637,2020-04-08T09:33:20Z,2020-04-11T09:57:36Z,2020-04-11T09:57:45Z,MERGED,True,683,1,2,https://github.com/rotty,Fix autoreconf,2,['needinfo'],https://github.com/djcb/mu/pull/1637,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1637#issuecomment-612227913,"Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.","Ah, but I wondered why I've never seen that warning... is that specific to 32-bit systems?",True,{}
djcb/mu,https://github.com/djcb/mu,1637,2020-04-08T09:33:20Z,2020-04-11T09:57:36Z,2020-04-11T09:57:45Z,MERGED,True,683,1,2,https://github.com/rotty,Fix autoreconf,2,['needinfo'],https://github.com/djcb/mu/pull/1637,https://github.com/rotty,5,https://github.com/djcb/mu/pull/1637#issuecomment-612332214,"Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.","This is on a 64-bit system. It happens also when building mu with the guix package manager (which uses the same autoconf/automake versions as Debian testing). The full trace is:
configure.ac:225: warning: gl_HOST_CPU_C_ABI_32BIT is m4_require'd but not m4_defun'd
m4/lib-prefix.m4:155: AC_LIB_PREPARE_MULTILIB is expanded from...
m4/lib-link.m4:705: AC_LIB_LINKFLAGS_FROM_LIBS is expanded from...
m4/guile-2.2.m4:132: GUILE_FLAGS is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
configure.ac:225: the top level

So this seems something that is a side-effect of including guile-2.2.m4; conversely, I'm wondering why it doesn't happen on your system ;-), and that I appear to be the first one noticing.",True,{}
djcb/mu,https://github.com/djcb/mu,1637,2020-04-08T09:33:20Z,2020-04-11T09:57:36Z,2020-04-11T09:57:45Z,MERGED,True,683,1,2,https://github.com/rotty,Fix autoreconf,2,['needinfo'],https://github.com/djcb/mu/pull/1637,https://github.com/djcb,6,https://github.com/djcb/mu/pull/1637#issuecomment-612382485,"Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.","Ah, thanks. Probably some m4 file that I happen to already have on my system",True,{}
djcb/mu,https://github.com/djcb/mu,1637,2020-04-08T09:33:20Z,2020-04-11T09:57:36Z,2020-04-11T09:57:45Z,MERGED,True,683,1,2,https://github.com/rotty,Fix autoreconf,2,['needinfo'],https://github.com/djcb/mu/pull/1637,https://github.com/djcb,7,https://github.com/djcb/mu/pull/1637#issuecomment-612382596,"Add an apparently missing m4 file from gnulib, and improve the .gitignore state of the m4/ subdirectory.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1646,2020-04-19T11:04:49Z,2020-04-19T20:00:31Z,2020-04-19T20:01:01Z,MERGED,True,9,9,7,https://github.com/dschrempf,~/.mu -> ~/.cache/mu,1,[],https://github.com/djcb/mu/pull/1646,https://github.com/dschrempf,1,https://github.com/djcb/mu/pull/1646,"Change man pages so that they honor the new mu config directory.
Question: mu-script.1 Where are the scripts stored? I guess not in the .cache directory. I left .mu/scripts.","Change man pages so that they honor the new mu config directory.
Question: mu-script.1 Where are the scripts stored? I guess not in the .cache directory. I left .mu/scripts.",True,{}
djcb/mu,https://github.com/djcb/mu,1646,2020-04-19T11:04:49Z,2020-04-19T20:00:31Z,2020-04-19T20:01:01Z,MERGED,True,9,9,7,https://github.com/dschrempf,~/.mu -> ~/.cache/mu,1,[],https://github.com/djcb/mu/pull/1646,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1646#issuecomment-616216072,"Change man pages so that they honor the new mu config directory.
Question: mu-script.1 Where are the scripts stored? I guess not in the .cache directory. I left .mu/scripts.",Merged -- thanks! Good point about the guie scripts.... let me clear that up.,True,{}
djcb/mu,https://github.com/djcb/mu,1656,2020-04-22T14:58:37Z,2020-04-22T18:41:41Z,2020-04-22T18:41:49Z,MERGED,True,17,0,1,https://github.com/Adocentyn,NEWS.org updated with upgrade to 1.4 instructions,1,[],https://github.com/djcb/mu/pull/1656,https://github.com/Adocentyn,1,https://github.com/djcb/mu/pull/1656,,,True,{}
djcb/mu,https://github.com/djcb/mu,1656,2020-04-22T14:58:37Z,2020-04-22T18:41:41Z,2020-04-22T18:41:49Z,MERGED,True,17,0,1,https://github.com/Adocentyn,NEWS.org updated with upgrade to 1.4 instructions,1,[],https://github.com/djcb/mu/pull/1656,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1656#issuecomment-617959425,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1658,2020-04-22T20:59:23Z,2020-04-22T21:07:13Z,2020-04-22T21:07:13Z,MERGED,True,2,2,1,https://github.com/dennisog,fix `mu4e-main-buffer-hide-personal-addresses',1,[],https://github.com/djcb/mu/pull/1658,https://github.com/dennisog,1,https://github.com/djcb/mu/pull/1658,"Ran into this small bug when trying to hide the display of personal messages in the main view. ""insert"" expects a string, this fix returns an empty string when `mu4e-main-buffer-hide-personal-addresses' is set.","Ran into this small bug when trying to hide the display of personal messages in the main view. ""insert"" expects a string, this fix returns an empty string when `mu4e-main-buffer-hide-personal-addresses' is set.",True,{}
djcb/mu,https://github.com/djcb/mu,1663,2020-04-29T00:56:23Z,2020-05-17T11:45:39Z,2020-05-17T11:46:27Z,MERGED,True,19,22,2,https://github.com/czan,mu: always sort descending within threads,1,[],https://github.com/djcb/mu/pull/1663,https://github.com/czan,1,https://github.com/djcb/mu/pull/1663,My fix for #1657,My fix for #1657,True,{}
djcb/mu,https://github.com/djcb/mu,1663,2020-04-29T00:56:23Z,2020-05-17T11:45:39Z,2020-05-17T11:46:27Z,MERGED,True,19,22,2,https://github.com/czan,mu: always sort descending within threads,1,[],https://github.com/djcb/mu/pull/1663,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1663#issuecomment-629784017,My fix for #1657,"Okay, tested this, looks good (and, in fact, a fix) -- so merging. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1666,2020-04-30T01:15:15Z,2020-05-01T07:08:40Z,2020-05-01T07:08:40Z,CLOSED,False,1,1,1,https://github.com/alexmurray,mu4e-proc: restore rename behaviour in mu4e~proc-move,1,[],https://github.com/djcb/mu/pull/1666,https://github.com/alexmurray,1,https://github.com/djcb/mu/pull/1666,"This appears to have been inadvertently changed in
a5dccff which results in errors as noted
in https://groups.google.com/d/msg/mu-discuss/iLR_9Cw14Ps/EdA2pctoBQAJ","This appears to have been inadvertently changed in
a5dccff which results in errors as noted
in https://groups.google.com/d/msg/mu-discuss/iLR_9Cw14Ps/EdA2pctoBQAJ",True,{}
djcb/mu,https://github.com/djcb/mu,1666,2020-04-30T01:15:15Z,2020-05-01T07:08:40Z,2020-05-01T07:08:40Z,CLOSED,False,1,1,1,https://github.com/alexmurray,mu4e-proc: restore rename behaviour in mu4e~proc-move,1,[],https://github.com/djcb/mu/pull/1666,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1666#issuecomment-622278432,"This appears to have been inadvertently changed in
a5dccff which results in errors as noted
in https://groups.google.com/d/msg/mu-discuss/iLR_9Cw14Ps/EdA2pctoBQAJ",Thanks! Solved (but in a slightly different way).,True,{}
djcb/mu,https://github.com/djcb/mu,1671,2020-05-01T10:30:01Z,2020-05-01T16:49:39Z,2020-05-01T16:49:47Z,MERGED,True,1,1,1,https://github.com/sje30,typo in mu4e.texi,1,[],https://github.com/djcb/mu/pull/1671,https://github.com/sje30,1,https://github.com/djcb/mu/pull/1671,typo,typo,True,{}
djcb/mu,https://github.com/djcb/mu,1671,2020-05-01T10:30:01Z,2020-05-01T16:49:39Z,2020-05-01T16:49:47Z,MERGED,True,1,1,1,https://github.com/sje30,typo in mu4e.texi,1,[],https://github.com/djcb/mu/pull/1671,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1671#issuecomment-622467062,typo,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1672,2020-05-01T18:50:27Z,2020-05-01T19:27:31Z,2020-05-01T19:30:51Z,MERGED,True,1,1,1,https://github.com/krietvel,mu-store: enlarge buffer for strftime,1,[],https://github.com/djcb/mu/pull/1672,https://github.com/krietvel,1,https://github.com/djcb/mu/pull/1672,"On Debian 9 random memory was printed with the original buffer size
and valgrind complained about the use of uninitialized memory.","On Debian 9 random memory was printed with the original buffer size
and valgrind complained about the use of uninitialized memory.",True,{}
djcb/mu,https://github.com/djcb/mu,1672,2020-05-01T18:50:27Z,2020-05-01T19:27:31Z,2020-05-01T19:30:51Z,MERGED,True,1,1,1,https://github.com/krietvel,mu-store: enlarge buffer for strftime,1,[],https://github.com/djcb/mu/pull/1672,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1672#issuecomment-622529949,"On Debian 9 random memory was printed with the original buffer size
and valgrind complained about the use of uninitialized memory.","Merged.. bedankt.
The second parameter to strftime should ensure we don't write outside the buffer, but if it's too small, the contents are ""undefined"" according to the man page.  Anyway, 64 chars should be plenty.",True,{}
djcb/mu,https://github.com/djcb/mu,1673,2020-05-04T08:29:13Z,2020-05-04T17:52:01Z,2020-05-04T17:52:29Z,MERGED,True,1,1,1,https://github.com/sje30,Is it :hide-unread or :show-unread,1,[],https://github.com/djcb/mu/pull/1673,https://github.com/sje30,1,https://github.com/djcb/mu/pull/1673,"I think the docstring is correct and the variable setting is wrong -- the code elsewhere  (mu4e~start) seems to check hide-unread property.
Once the discrepancy between doc string and code is fixed, the info file will need updating, as this variable is shown verbatim in 7.2 Bookmarks node.","I think the docstring is correct and the variable setting is wrong -- the code elsewhere  (mu4e~start) seems to check hide-unread property.
Once the discrepancy between doc string and code is fixed, the info file will need updating, as this variable is shown verbatim in 7.2 Bookmarks node.",True,{}
djcb/mu,https://github.com/djcb/mu,1673,2020-05-04T08:29:13Z,2020-05-04T17:52:01Z,2020-05-04T17:52:29Z,MERGED,True,1,1,1,https://github.com/sje30,Is it :hide-unread or :show-unread,1,[],https://github.com/djcb/mu/pull/1673,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1673#issuecomment-623610702,"I think the docstring is correct and the variable setting is wrong -- the code elsewhere  (mu4e~start) seems to check hide-unread property.
Once the discrepancy between doc string and code is fixed, the info file will need updating, as this variable is shown verbatim in 7.2 Bookmarks node.","Merged, thanks. Some left-overs from an earlier version.",True,{}
djcb/mu,https://github.com/djcb/mu,1674,2020-05-04T08:29:48Z,2020-05-04T17:53:50Z,2020-05-04T17:53:56Z,MERGED,True,1,1,1,https://github.com/sje30,typo in mu-query manpage,1,[],https://github.com/djcb/mu/pull/1674,https://github.com/sje30,1,https://github.com/djcb/mu/pull/1674,,,True,{}
djcb/mu,https://github.com/djcb/mu,1674,2020-05-04T08:29:48Z,2020-05-04T17:53:50Z,2020-05-04T17:53:56Z,MERGED,True,1,1,1,https://github.com/sje30,typo in mu-query manpage,1,[],https://github.com/djcb/mu/pull/1674,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1674#issuecomment-623611486,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1683,2020-05-08T16:28:23Z,2020-05-09T20:13:32Z,2020-05-09T22:29:19Z,MERGED,True,1,1,1,https://github.com/manuel-arguelles,mu4e: change spacing in main view for info section,1,[],https://github.com/djcb/mu/pull/1683,https://github.com/manuel-arguelles,1,https://github.com/djcb/mu/pull/1683,"Change the spaces to tab to be consistent with the other entries in the
main view.","Change the spaces to tab to be consistent with the other entries in the
main view.",True,{}
djcb/mu,https://github.com/djcb/mu,1683,2020-05-08T16:28:23Z,2020-05-09T20:13:32Z,2020-05-09T22:29:19Z,MERGED,True,1,1,1,https://github.com/manuel-arguelles,mu4e: change spacing in main view for info section,1,[],https://github.com/djcb/mu/pull/1683,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1683#issuecomment-626229603,"Change the spaces to tab to be consistent with the other entries in the
main view.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1685,2020-05-09T16:28:37Z,2020-05-09T20:12:21Z,2020-05-10T00:09:26Z,MERGED,True,9,3,1,https://github.com/derek-upham,Make mu4e~view-message available to mu4e-view-mode-hooks.,1,[],https://github.com/djcb/mu/pull/1685,https://github.com/derek-upham,1,https://github.com/djcb/mu/pull/1685,"In the current master branch, setting up an m4ue-view buffer runs the mu4e-view-mode-hooks entries on a buffer that is only partway through initialization: the buffer is missing the mu4e~view-message buffer-local variable with the actual message.  The code sets that variable after entering mu4e-view-mode.  This ordering means the current message is unavailable to the hooks, and the hooks can't adjust their behavior based on the message properties.
To fix that bug, it is not enough to just set mu4e~view-message before entering mu4e-view-mode.  Major mode changes clobber buffer-local variables, as part of standard Emacs behavior (ref).  Marking the mu4e~view-message variable as permanent-local makes that variable persists across the major mode change, giving us the behavior we want.  (Persistance is a global property of mu4e~view-message, so this alters the buffer-local behavior of mu4e~view-message in all buffers and across all major mode changes.  Given how tightly coupled the variable and the major mode are, this is unlikely to affect anyone.)","In the current master branch, setting up an m4ue-view buffer runs the mu4e-view-mode-hooks entries on a buffer that is only partway through initialization: the buffer is missing the mu4e~view-message buffer-local variable with the actual message.  The code sets that variable after entering mu4e-view-mode.  This ordering means the current message is unavailable to the hooks, and the hooks can't adjust their behavior based on the message properties.
To fix that bug, it is not enough to just set mu4e~view-message before entering mu4e-view-mode.  Major mode changes clobber buffer-local variables, as part of standard Emacs behavior (ref).  Marking the mu4e~view-message variable as permanent-local makes that variable persists across the major mode change, giving us the behavior we want.  (Persistance is a global property of mu4e~view-message, so this alters the buffer-local behavior of mu4e~view-message in all buffers and across all major mode changes.  Given how tightly coupled the variable and the major mode are, this is unlikely to affect anyone.)",True,{}
djcb/mu,https://github.com/djcb/mu,1685,2020-05-09T16:28:37Z,2020-05-09T20:12:21Z,2020-05-10T00:09:26Z,MERGED,True,9,3,1,https://github.com/derek-upham,Make mu4e~view-message available to mu4e-view-mode-hooks.,1,[],https://github.com/djcb/mu/pull/1685,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1685#issuecomment-626229445,"In the current master branch, setting up an m4ue-view buffer runs the mu4e-view-mode-hooks entries on a buffer that is only partway through initialization: the buffer is missing the mu4e~view-message buffer-local variable with the actual message.  The code sets that variable after entering mu4e-view-mode.  This ordering means the current message is unavailable to the hooks, and the hooks can't adjust their behavior based on the message properties.
To fix that bug, it is not enough to just set mu4e~view-message before entering mu4e-view-mode.  Major mode changes clobber buffer-local variables, as part of standard Emacs behavior (ref).  Marking the mu4e~view-message variable as permanent-local makes that variable persists across the major mode change, giving us the behavior we want.  (Persistance is a global property of mu4e~view-message, so this alters the buffer-local behavior of mu4e~view-message in all buffers and across all major mode changes.  Given how tightly coupled the variable and the major mode are, this is unlikely to affect anyone.)","Oh, that's a useful change; merged. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1686,2020-05-10T07:39:37Z,2020-05-10T08:57:16Z,2020-05-11T12:44:04Z,MERGED,True,1,1,1,https://github.com/gspe,Fix mu4e-headers-mark-or-move-to-trash(),1,[],https://github.com/djcb/mu/pull/1686,https://github.com/gspe,1,https://github.com/djcb/mu/pull/1686,"Fix mu4e-headers-mark-or-move-to-trash() to pick right trash folder when
:no-trash-flag option is used in a context.","Fix mu4e-headers-mark-or-move-to-trash() to pick right trash folder when
:no-trash-flag option is used in a context.",True,{}
djcb/mu,https://github.com/djcb/mu,1686,2020-05-10T07:39:37Z,2020-05-10T08:57:16Z,2020-05-11T12:44:04Z,MERGED,True,1,1,1,https://github.com/gspe,Fix mu4e-headers-mark-or-move-to-trash(),1,[],https://github.com/djcb/mu/pull/1686,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1686#issuecomment-626295310,"Fix mu4e-headers-mark-or-move-to-trash() to pick right trash folder when
:no-trash-flag option is used in a context.",Great -- thank you! Merged.,True,{}
djcb/mu,https://github.com/djcb/mu,1690,2020-05-11T15:45:07Z,,2020-12-13T11:47:48Z,OPEN,False,5,1,1,https://github.com/gspe,mu4e: fix trashed messages face,1,[],https://github.com/djcb/mu/pull/1690,https://github.com/gspe,1,https://github.com/djcb/mu/pull/1690,"This fix the look and feel of trashed messages:

messages moved to trash folder with trashed flag
messages moved to trash folder but without trashed flag","This fix the look and feel of trashed messages:

messages moved to trash folder with trashed flag
messages moved to trash folder but without trashed flag",True,{}
djcb/mu,https://github.com/djcb/mu,1690,2020-05-11T15:45:07Z,,2020-12-13T11:47:48Z,OPEN,False,5,1,1,https://github.com/gspe,mu4e: fix trashed messages face,1,[],https://github.com/djcb/mu/pull/1690,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1690#issuecomment-626861009,"This fix the look and feel of trashed messages:

messages moved to trash folder with trashed flag
messages moved to trash folder but without trashed flag","I can see whyyou might  want that, but no -- the face is a reflection of the 'trashed' 'T' flag on messages, regardless what the current value for the trash dir is; and I'd like to keep it that way. If somehow messages ended up in the trash-dir without that flag, I want to make that obvious. (Same is true for e.g. the Replied flag and the Sent-dir).
So have to respectfully decline this.",True,{}
djcb/mu,https://github.com/djcb/mu,1690,2020-05-11T15:45:07Z,,2020-12-13T11:47:48Z,OPEN,False,5,1,1,https://github.com/gspe,mu4e: fix trashed messages face,1,[],https://github.com/djcb/mu/pull/1690,https://github.com/gspe,3,https://github.com/djcb/mu/pull/1690#issuecomment-626887494,"This fix the look and feel of trashed messages:

messages moved to trash folder with trashed flag
messages moved to trash folder but without trashed flag","Ok I see your point.
What do you think, instead, to use a different face for messages in trash dir?
I ask because I have to use the :no-trash-flag for my email provider, fastmail, without this flag trashed email will be deleted directely on IMAP and with this flag, in my today bookmark trashed email are undistinguished from seen one...",True,{}
djcb/mu,https://github.com/djcb/mu,1690,2020-05-11T15:45:07Z,,2020-12-13T11:47:48Z,OPEN,False,5,1,1,https://github.com/gspe,mu4e: fix trashed messages face,1,[],https://github.com/djcb/mu/pull/1690,https://github.com/tsdh,4,https://github.com/djcb/mu/pull/1690#issuecomment-743995898,"This fix the look and feel of trashed messages:

messages moved to trash folder with trashed flag
messages moved to trash folder but without trashed flag","@gspe  Hi Guiseppe, I also use fastmail with mbsync and mu4e and have the problem that trashed mails are deleted.  Therefore, I've removed the +T flag from the trash entry in mu4e-marks.  That's obviously a bad workaround given that it'll break again on every update.  So I wonder what this mysterious :no-trash-flag is?  I couldn't find it in the code...",True,{}
djcb/mu,https://github.com/djcb/mu,1691,2020-05-11T22:42:51Z,2020-05-13T20:59:43Z,2020-05-14T10:42:50Z,MERGED,True,11,11,1,https://github.com/vqhuy,Fix `make-mu4e-context-account()` set incorrect query for bookmarks,1,[],https://github.com/djcb/mu/pull/1691,https://github.com/vqhuy,1,https://github.com/djcb/mu/pull/1691,"The current make-mu4e-context-account will change bookmark items to
(""NOT maildir:\""/trash\"" and :name"" ""Unread messages"" :query ""flag:unread AND NOT flag:trashed"" :key 117)

instead of modifying the query properly.
This sets the correct query for bookmarks when no-trash-flag is used.","The current make-mu4e-context-account will change bookmark items to
(""NOT maildir:\""/trash\"" and :name"" ""Unread messages"" :query ""flag:unread AND NOT flag:trashed"" :key 117)

instead of modifying the query properly.
This sets the correct query for bookmarks when no-trash-flag is used.",True,{}
djcb/mu,https://github.com/djcb/mu,1693,2020-05-13T19:31:57Z,2020-05-13T20:56:05Z,2020-05-13T21:10:22Z,MERGED,True,33,32,22,https://github.com/tarsius,Fix typos,1,[],https://github.com/djcb/mu/pull/1693,https://github.com/tarsius,1,https://github.com/djcb/mu/pull/1693,,,True,{}
djcb/mu,https://github.com/djcb/mu,1693,2020-05-13T19:31:57Z,2020-05-13T20:56:05Z,2020-05-13T21:10:22Z,MERGED,True,33,32,22,https://github.com/tarsius,Fix typos,1,[],https://github.com/djcb/mu/pull/1693,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1693#issuecomment-628241345,,"Oh great, thanks! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1694,2020-05-14T20:25:21Z,2020-05-16T09:47:58Z,2020-05-16T10:08:07Z,CLOSED,False,1,1,1,https://github.com/vqhuy,Fix #1687: Respect `no-trash-flag` when trashing email,1,[],https://github.com/djcb/mu/pull/1694,https://github.com/vqhuy,1,https://github.com/djcb/mu/pull/1694,Fix #1687.,Fix #1687.,True,{}
djcb/mu,https://github.com/djcb/mu,1694,2020-05-14T20:25:21Z,2020-05-16T09:47:58Z,2020-05-16T10:08:07Z,CLOSED,False,1,1,1,https://github.com/vqhuy,Fix #1687: Respect `no-trash-flag` when trashing email,1,[],https://github.com/djcb/mu/pull/1694,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1694#issuecomment-629618854,Fix #1687.,Thanks for the effort -- fixed it in a slightly different way (some more cases needed to be handled),True,{}
djcb/mu,https://github.com/djcb/mu,1696,2020-05-15T14:10:28Z,2021-06-17T17:39:09Z,2021-06-17T17:39:09Z,CLOSED,False,8,1,1,https://github.com/remvee,mu-server: construct contact address from name and email,1,[],https://github.com/djcb/mu/pull/1696,https://github.com/remvee,1,https://github.com/djcb/mu/pull/1696,"Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.","Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.",True,{}
djcb/mu,https://github.com/djcb/mu,1696,2020-05-15T14:10:28Z,2021-06-17T17:39:09Z,2021-06-17T17:39:09Z,CLOSED,False,8,1,1,https://github.com/remvee,mu-server: construct contact address from name and email,1,[],https://github.com/djcb/mu/pull/1696,https://github.com/remvee,2,https://github.com/djcb/mu/pull/1696#issuecomment-629260582,"Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.","More explanation: some addresses in my mailbox have a lot of variants and some of them are bad.  The annoying case which comes up a lot is where some e-mail was sent to or from <test@example.com> and others like Test <test@example.com>, which is obviously the same address.  This may cause mu4e auto complete to yield test@example.com instead of the preferred Test <test@example.com>.
I did manage to reproduce this in a test case in test-mu-contacts.cc but I am not comfortable enough with C++ to fix this problem on a more fundamental level.",True,"{'THUMBS_UP': ['https://github.com/jpggithub', 'https://github.com/tshu-w']}"
djcb/mu,https://github.com/djcb/mu,1696,2020-05-15T14:10:28Z,2021-06-17T17:39:09Z,2021-06-17T17:39:09Z,CLOSED,False,8,1,1,https://github.com/remvee,mu-server: construct contact address from name and email,1,[],https://github.com/djcb/mu/pull/1696,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1696#issuecomment-640065649,"Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.","full_email already contains the name (if available), so it's a bit unclear to me what this changes. Can you explain? Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1696,2020-05-15T14:10:28Z,2021-06-17T17:39:09Z,2021-06-17T17:39:09Z,CLOSED,False,8,1,1,https://github.com/remvee,mu-server: construct contact address from name and email,1,[],https://github.com/djcb/mu/pull/1696,https://github.com/remvee,4,https://github.com/djcb/mu/pull/1696#issuecomment-640067453,"Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.","First I noticed the autocompleted addresses in mu4e were a bit off sometimes (after moving my configuration to another machine and reindexing my maildir).  So I investigated and was very surprised mu cfind got me better results than whatever mu4e automcomplete got me.  It seems, my c++ experience is close to zero, the indexer code populates that full_email with whatever it sees first for the given email address which in some cases may be some empty or some horrible application generated thing.  Since cfind doesn't use full_email at all and it yields better results (at least for me), I altered mu server to do the same as mu cfind",True,"{'THUMBS_UP': ['https://github.com/acowley', 'https://github.com/jpggithub', 'https://github.com/tshu-w']}"
djcb/mu,https://github.com/djcb/mu,1696,2020-05-15T14:10:28Z,2021-06-17T17:39:09Z,2021-06-17T17:39:09Z,CLOSED,False,8,1,1,https://github.com/remvee,mu-server: construct contact address from name and email,1,[],https://github.com/djcb/mu/pull/1696,https://github.com/remvee,5,https://github.com/djcb/mu/pull/1696#issuecomment-658748276,"Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.",Rebased to master.,True,{}
djcb/mu,https://github.com/djcb/mu,1696,2020-05-15T14:10:28Z,2021-06-17T17:39:09Z,2021-06-17T17:39:09Z,CLOSED,False,8,1,1,https://github.com/remvee,mu-server: construct contact address from name and email,1,[],https://github.com/djcb/mu/pull/1696,https://github.com/jpggithub,6,https://github.com/djcb/mu/pull/1696#issuecomment-748415584,"Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.","Clearly, it's a very annoying bug that occurs everyday for several contacts.
I'm not a programmer so I can't help so much here but thanks for that PR!",True,{}
djcb/mu,https://github.com/djcb/mu,1696,2020-05-15T14:10:28Z,2021-06-17T17:39:09Z,2021-06-17T17:39:09Z,CLOSED,False,8,1,1,https://github.com/remvee,mu-server: construct contact address from name and email,1,[],https://github.com/djcb/mu/pull/1696,https://github.com/djcb,7,https://github.com/djcb/mu/pull/1696#issuecomment-863433081,"Use name and email to construct a contact address to avoid bad
full_address members.  This change also makes the mu4e address
completion more compatible with the output of mu cfind.","Thanks for the effort, but this commit doesn't apply anymore, and in any case it was at best papering over an issue; closing this. If you still see issues with 1.5.x, please file new issues -- thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1697,2020-05-16T15:49:31Z,2020-07-17T15:16:19Z,2020-07-17T15:16:20Z,CLOSED,False,43,27,3,https://github.com/haji-ali,"Default to current open message view, split if non-existent, call fallback function otherwise. ",1,[],https://github.com/djcb/mu/pull/1697,https://github.com/haji-ali,1,https://github.com/djcb/mu/pull/1697,"The changes in this pull request are

When viewing a message, the previous open view-buffer is used to view the message (before the previous message-view was deleted and a new one was created by splitting).
When splitting the window fails, a function mu4e-fallback-window-func is called instead of selected-window (which defaults to selected-window).

This solves a typical problem that I experience. After viewing the headers, if I view a message, the view splits horizontally. While reading the message if I split the message-view manually to view a separate buffer, then try to open a separate message, the old message-view is closed and the (now small) header-view is used instead to view the message.
With the changes of this pull request, the window of the old message-view is used instead.
The pull request also make the fall-back window configurable (instead of using selected-window). I personally use it with ace-window to manually select where to view the message.
(setq mu4e-fallback-window-func
        (lambda nil (let ((aw-dispatch-always t))
                      (aw-select "" Select window for mu4e""))))","The changes in this pull request are

When viewing a message, the previous open view-buffer is used to view the message (before the previous message-view was deleted and a new one was created by splitting).
When splitting the window fails, a function mu4e-fallback-window-func is called instead of selected-window (which defaults to selected-window).

This solves a typical problem that I experience. After viewing the headers, if I view a message, the view splits horizontally. While reading the message if I split the message-view manually to view a separate buffer, then try to open a separate message, the old message-view is closed and the (now small) header-view is used instead to view the message.
With the changes of this pull request, the window of the old message-view is used instead.
The pull request also make the fall-back window configurable (instead of using selected-window). I personally use it with ace-window to manually select where to view the message.
(setq mu4e-fallback-window-func
        (lambda nil (let ((aw-dispatch-always t))
                      (aw-select "" Select window for mu4e""))))",True,{}
djcb/mu,https://github.com/djcb/mu,1700,2020-05-18T15:23:01Z,2020-05-18T15:55:37Z,2020-05-18T15:55:41Z,MERGED,True,8,5,2,https://github.com/derek-upham,Strip properties from mu4e-completing-read-function results.,3,[],https://github.com/djcb/mu/pull/1700,https://github.com/derek-upham,1,https://github.com/djcb/mu/pull/1700,"Some completion engines (like ""flx"") decorate the strings that they
return.  If MU4E passes such a string down to MU, the ""format"" call
preserves the text properties in the generated S-expression, producing
an invalid query.  MU4E itself has no interest in those decorations,
so strip them out as early as possible from all prompts that use
mu4e-completing-read-function.","Some completion engines (like ""flx"") decorate the strings that they
return.  If MU4E passes such a string down to MU, the ""format"" call
preserves the text properties in the generated S-expression, producing
an invalid query.  MU4E itself has no interest in those decorations,
so strip them out as early as possible from all prompts that use
mu4e-completing-read-function.",True,{}
djcb/mu,https://github.com/djcb/mu,1700,2020-05-18T15:23:01Z,2020-05-18T15:55:37Z,2020-05-18T15:55:41Z,MERGED,True,8,5,2,https://github.com/derek-upham,Strip properties from mu4e-completing-read-function results.,3,[],https://github.com/djcb/mu/pull/1700,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1700#issuecomment-630275441,"Some completion engines (like ""flx"") decorate the strings that they
return.  If MU4E passes such a string down to MU, the ""format"" call
preserves the text properties in the generated S-expression, producing
an invalid query.  MU4E itself has no interest in those decorations,
so strip them out as early as possible from all prompts that use
mu4e-completing-read-function.",Makes sense. Merged -- thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,1701,2020-05-19T07:13:13Z,2020-05-19T08:29:08Z,2020-05-19T08:29:11Z,MERGED,True,1,1,1,https://github.com/mrvdb,Missing space between sig verification and signers,2,[],https://github.com/djcb/mu/pull/1701,https://github.com/mrvdb,1,https://github.com/djcb/mu/pull/1701,Resolution for a tiny annoyance:  adds a space between the verification status of the signature and the signers,Resolution for a tiny annoyance:  adds a space between the verification status of the signature and the signers,True,{}
djcb/mu,https://github.com/djcb/mu,1701,2020-05-19T07:13:13Z,2020-05-19T08:29:08Z,2020-05-19T08:29:11Z,MERGED,True,1,1,1,https://github.com/mrvdb,Missing space between sig verification and signers,2,[],https://github.com/djcb/mu/pull/1701,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1701#issuecomment-630669542,Resolution for a tiny annoyance:  adds a space between the verification status of the signature and the signers,Makes sense. Merged -- thanks!,True,{'THUMBS_UP': ['https://github.com/mrvdb']}
djcb/mu,https://github.com/djcb/mu,1703,2020-05-19T23:13:17Z,2020-05-27T19:38:17Z,2020-05-28T06:28:53Z,CLOSED,False,40,0,1,https://github.com/Chris00,Advise browse-url-mail to insert the email body,1,[],https://github.com/djcb/mu/pull/1703,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1703,"Without this, calling
(browse-url-mail ""mailto:test@mu4e.org?subject=SUBJECT&body=MAIN TEXT"")
would not insert “MAIN TEXT” in the email body.
Fixes #1698","Without this, calling
(browse-url-mail ""mailto:test@mu4e.org?subject=SUBJECT&body=MAIN TEXT"")
would not insert “MAIN TEXT” in the email body.
Fixes #1698",True,{}
djcb/mu,https://github.com/djcb/mu,1703,2020-05-19T23:13:17Z,2020-05-27T19:38:17Z,2020-05-28T06:28:53Z,CLOSED,False,40,0,1,https://github.com/Chris00,Advise browse-url-mail to insert the email body,1,[],https://github.com/djcb/mu/pull/1703,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1703#issuecomment-634897326,"Without this, calling
(browse-url-mail ""mailto:test@mu4e.org?subject=SUBJECT&body=MAIN TEXT"")
would not insert “MAIN TEXT” in the email body.
Fixes #1698","Ah, thanks! Fixed this in a slightly different way.",True,{}
djcb/mu,https://github.com/djcb/mu,1703,2020-05-19T23:13:17Z,2020-05-27T19:38:17Z,2020-05-28T06:28:53Z,CLOSED,False,40,0,1,https://github.com/Chris00,Advise browse-url-mail to insert the email body,1,[],https://github.com/djcb/mu/pull/1703,https://github.com/alexmurray,3,https://github.com/djcb/mu/pull/1703#issuecomment-634995124,"Without this, calling
(browse-url-mail ""mailto:test@mu4e.org?subject=SUBJECT&body=MAIN TEXT"")
would not insert “MAIN TEXT” in the email body.
Fixes #1698",Can this also be merged on the release branch and a new stable release? Otherwise mu4e users can't easily report bugs in emacs itself.,True,{}
djcb/mu,https://github.com/djcb/mu,1703,2020-05-19T23:13:17Z,2020-05-27T19:38:17Z,2020-05-28T06:28:53Z,CLOSED,False,40,0,1,https://github.com/Chris00,Advise browse-url-mail to insert the email body,1,[],https://github.com/djcb/mu/pull/1703,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1703#issuecomment-635134381,"Without this, calling
(browse-url-mail ""mailto:test@mu4e.org?subject=SUBJECT&body=MAIN TEXT"")
would not insert “MAIN TEXT” in the email body.
Fixes #1698","Yeah, that's the plan.",True,{}
djcb/mu,https://github.com/djcb/mu,1705,2020-05-23T01:25:44Z,2020-05-25T17:52:31Z,2020-05-25T17:52:45Z,MERGED,True,15,11,3,https://github.com/nickg,Allow ';' as a Maildir flags seperator,1,[],https://github.com/djcb/mu/pull/1705,https://github.com/nickg,1,https://github.com/djcb/mu/pull/1705,"Isync uses this by default on Windows where ':' is an invalid character
in file names. Also try to preserve the existing separator character
when generating a new file name.","Isync uses this by default on Windows where ':' is an invalid character
in file names. Also try to preserve the existing separator character
when generating a new file name.",True,{}
djcb/mu,https://github.com/djcb/mu,1705,2020-05-23T01:25:44Z,2020-05-25T17:52:31Z,2020-05-25T17:52:45Z,MERGED,True,15,11,3,https://github.com/nickg,Allow ';' as a Maildir flags seperator,1,[],https://github.com/djcb/mu/pull/1705,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1705#issuecomment-633667873,"Isync uses this by default on Windows where ':' is an invalid character
in file names. Also try to preserve the existing separator character
when generating a new file name.",Looks good! Merged --thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,1715,2020-05-31T22:30:04Z,2020-06-06T13:45:17Z,2020-06-06T13:45:17Z,CLOSED,False,10,6,1,https://github.com/stardiviner,Fix #1714 void symbols link and query when org-store-link,1,[],https://github.com/djcb/mu/pull/1715,https://github.com/stardiviner,1,https://github.com/djcb/mu/pull/1715,,,True,{}
djcb/mu,https://github.com/djcb/mu,1715,2020-05-31T22:30:04Z,2020-06-06T13:45:17Z,2020-06-06T13:45:17Z,CLOSED,False,10,6,1,https://github.com/stardiviner,Fix #1714 void symbols link and query when org-store-link,1,[],https://github.com/djcb/mu/pull/1715,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1715#issuecomment-640063626,,Thanks -- fixed.,True,{}
djcb/mu,https://github.com/djcb/mu,1725,2020-06-11T21:20:03Z,2020-06-12T15:15:28Z,2020-06-12T15:15:44Z,MERGED,True,39,0,1,https://github.com/benswift,add CI: run test suite with GitHub actions,1,[],https://github.com/djcb/mu/pull/1725,https://github.com/benswift,1,https://github.com/djcb/mu/pull/1725,"currently this runs tests on the latest Ubuntu LTS and the latest macOS
should be straightforward to run tests on any of the other supported
environments or in a Docker
container
as discussed in #1723","currently this runs tests on the latest Ubuntu LTS and the latest macOS
should be straightforward to run tests on any of the other supported
environments or in a Docker
container
as discussed in #1723",True,{'THUMBS_UP': ['https://github.com/tpapp']}
djcb/mu,https://github.com/djcb/mu,1725,2020-06-11T21:20:03Z,2020-06-12T15:15:28Z,2020-06-12T15:15:44Z,MERGED,True,39,0,1,https://github.com/benswift,add CI: run test suite with GitHub actions,1,[],https://github.com/djcb/mu/pull/1725,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1725#issuecomment-643328632,"currently this runs tests on the latest Ubuntu LTS and the latest macOS
should be straightforward to run tests on any of the other supported
environments or in a Docker
container
as discussed in #1723",Great -- thanks! Merged.,True,{'THUMBS_UP': ['https://github.com/benswift']}
djcb/mu,https://github.com/djcb/mu,1731,2020-06-19T18:35:20Z,2020-06-21T14:50:41Z,2020-06-21T14:50:48Z,MERGED,True,2,2,1,https://github.com/cireu,mu4e: Delay the execution of workaround for desktop.el,1,['needinfo'],https://github.com/djcb/mu/pull/1731,https://github.com/cireu,1,https://github.com/djcb/mu/pull/1731,"Some Emacs user may never use desktop.el, We don't need to require desktop.el
for them.","Some Emacs user may never use desktop.el, We don't need to require desktop.el
for them.",True,{}
djcb/mu,https://github.com/djcb/mu,1731,2020-06-19T18:35:20Z,2020-06-21T14:50:41Z,2020-06-21T14:50:48Z,MERGED,True,2,2,1,https://github.com/cireu,mu4e: Delay the execution of workaround for desktop.el,1,['needinfo'],https://github.com/djcb/mu/pull/1731,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1731#issuecomment-646943047,"Some Emacs user may never use desktop.el, We don't need to require desktop.el
for them.","Looks useful, but would like to avoid that defvar... can you use (eval ... in the hook instead? Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1731,2020-06-19T18:35:20Z,2020-06-21T14:50:41Z,2020-06-21T14:50:48Z,MERGED,True,2,2,1,https://github.com/cireu,mu4e: Delay the execution of workaround for desktop.el,1,['needinfo'],https://github.com/djcb/mu/pull/1731,https://github.com/cireu,3,https://github.com/djcb/mu/pull/1731#issuecomment-646948329,"Some Emacs user may never use desktop.el, We don't need to require desktop.el
for them.","Done, please check",True,{}
djcb/mu,https://github.com/djcb/mu,1731,2020-06-19T18:35:20Z,2020-06-21T14:50:41Z,2020-06-21T14:50:48Z,MERGED,True,2,2,1,https://github.com/cireu,mu4e: Delay the execution of workaround for desktop.el,1,['needinfo'],https://github.com/djcb/mu/pull/1731,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1731#issuecomment-647138288,"Some Emacs user may never use desktop.el, We don't need to require desktop.el
for them.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1732,2020-06-19T18:50:58Z,2020-06-20T04:50:22Z,2020-06-20T04:50:33Z,MERGED,True,18,10,1,https://github.com/Chris00,Fix accepting ical RSVP with Outlook,4,[],https://github.com/djcb/mu/pull/1732,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1732,"The multipart/alternative was problematic with Outlook (see #1729).
Since a text reply is possible with the ical attachment, the original email quotation is saved to the kill-ring.","The multipart/alternative was problematic with Outlook (see #1729).
Since a text reply is possible with the ical attachment, the original email quotation is saved to the kill-ring.",True,{'HEART': ['https://github.com/behaghel']}
djcb/mu,https://github.com/djcb/mu,1732,2020-06-19T18:50:58Z,2020-06-20T04:50:22Z,2020-06-20T04:50:33Z,MERGED,True,18,10,1,https://github.com/Chris00,Fix accepting ical RSVP with Outlook,4,[],https://github.com/djcb/mu/pull/1732,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1732#issuecomment-646940994,"The multipart/alternative was problematic with Outlook (see #1729).
Since a text reply is possible with the ical attachment, the original email quotation is saved to the kill-ring.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1734,2020-06-20T05:38:24Z,2020-06-21T14:51:10Z,2020-06-21T18:19:52Z,MERGED,True,14,0,1,https://github.com/damon-kwok,Added svg icon to README,5,[],https://github.com/djcb/mu/pull/1734,https://github.com/damon-kwok,1,https://github.com/djcb/mu/pull/1734,"Added svg icon to README
@djcb See:
https://github.com/damon-kwok/mu/tree/svg","Added svg icon to README
@djcb See:
https://github.com/damon-kwok/mu/tree/svg",True,{}
djcb/mu,https://github.com/djcb/mu,1734,2020-06-20T05:38:24Z,2020-06-21T14:51:10Z,2020-06-21T18:19:52Z,MERGED,True,14,0,1,https://github.com/damon-kwok,Added svg icon to README,5,[],https://github.com/djcb/mu/pull/1734,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1734#issuecomment-647138371,"Added svg icon to README
@djcb See:
https://github.com/damon-kwok/mu/tree/svg",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1735,2020-06-22T21:19:11Z,2020-07-17T15:17:49Z,2020-07-17T15:17:49Z,CLOSED,False,57,6,2,https://github.com/haji-ali,Allow generic formatter for thread subjects. ,1,[],https://github.com/djcb/mu/pull/1735,https://github.com/haji-ali,1,https://github.com/djcb/mu/pull/1735,"This commit adds a custom variable mu4e-headers-thread-subject-format-function which can be used to customize the way thread subjects are shown. By default it is set to mu4e~headers-thread-subject-format-default which simply hides the subject of child messages (like mu4e does). More importantly, one can set
(setq mu4e-headers-thread-subject-format-function
      #'mu4e~headers-thread-subject-format-abbrev)

(where mu4e~headers-thread-subject-format-abbrev is also included in the commit), so that the subject of child messages is not hidden but abbreviated. For example, if the parent message is: Message Title and the child message is Re: Message Title then the child message is displayed as Re: ⸗.
The rationale for this pull request is that hiding messages makes it difficult to distinguish between replies and forwarded messages. Moreover, some people change the subject title in some cases or add to it when replying. Some of my correspondents even reply to emails and change the subject completely as a way of creating a new email (but to the same list of recipients). Always hiding the subject means that I cannot easily pick out those messages.","This commit adds a custom variable mu4e-headers-thread-subject-format-function which can be used to customize the way thread subjects are shown. By default it is set to mu4e~headers-thread-subject-format-default which simply hides the subject of child messages (like mu4e does). More importantly, one can set
(setq mu4e-headers-thread-subject-format-function
      #'mu4e~headers-thread-subject-format-abbrev)

(where mu4e~headers-thread-subject-format-abbrev is also included in the commit), so that the subject of child messages is not hidden but abbreviated. For example, if the parent message is: Message Title and the child message is Re: Message Title then the child message is displayed as Re: ⸗.
The rationale for this pull request is that hiding messages makes it difficult to distinguish between replies and forwarded messages. Moreover, some people change the subject title in some cases or add to it when replying. Some of my correspondents even reply to emails and change the subject completely as a way of creating a new email (but to the same list of recipients). Always hiding the subject means that I cannot easily pick out those messages.",True,{}
djcb/mu,https://github.com/djcb/mu,1739,2020-06-27T05:57:24Z,2020-06-28T08:58:17Z,2020-06-28T08:58:27Z,MERGED,True,2,2,1,https://github.com/asilata,Fix typo in org-mode links section documentation,1,[],https://github.com/djcb/mu/pull/1739,https://github.com/asilata,1,https://github.com/djcb/mu/pull/1739,The documentation references the obsolete function org-mu4e-store-and-capture. Updated it to mu4e-org-store-and-capture.,The documentation references the obsolete function org-mu4e-store-and-capture. Updated it to mu4e-org-store-and-capture.,True,{}
djcb/mu,https://github.com/djcb/mu,1739,2020-06-27T05:57:24Z,2020-06-28T08:58:17Z,2020-06-28T08:58:27Z,MERGED,True,2,2,1,https://github.com/asilata,Fix typo in org-mode links section documentation,1,[],https://github.com/djcb/mu/pull/1739,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1739#issuecomment-650720802,The documentation references the obsolete function org-mu4e-store-and-capture. Updated it to mu4e-org-store-and-capture.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1740,2020-06-29T13:13:19Z,2020-06-29T19:43:05Z,2020-06-29T19:43:54Z,MERGED,True,2,1,1,https://github.com/stsquad,mu4e/mu4e-utils: only set so-long-mode once,1,[],https://github.com/djcb/mu/pull/1740,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/1740,"Ideally we should separate the log buffer creation code so this van be
done a bit more cleanly. For now however only set so-long-mode once
otherwise you end up spamming the messages with constant:
Changed to so-long-mode (from fundamental-mode) on account of line length.  C-c C-c to revert. [36 times]
As the messages keep rolling in.","Ideally we should separate the log buffer creation code so this van be
done a bit more cleanly. For now however only set so-long-mode once
otherwise you end up spamming the messages with constant:
Changed to so-long-mode (from fundamental-mode) on account of line length.  C-c C-c to revert. [36 times]
As the messages keep rolling in.",True,{}
djcb/mu,https://github.com/djcb/mu,1740,2020-06-29T13:13:19Z,2020-06-29T19:43:05Z,2020-06-29T19:43:54Z,MERGED,True,2,1,1,https://github.com/stsquad,mu4e/mu4e-utils: only set so-long-mode once,1,[],https://github.com/djcb/mu/pull/1740,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1740#issuecomment-651321166,"Ideally we should separate the log buffer creation code so this van be
done a bit more cleanly. For now however only set so-long-mode once
otherwise you end up spamming the messages with constant:
Changed to so-long-mode (from fundamental-mode) on account of line length.  C-c C-c to revert. [36 times]
As the messages keep rolling in.",Ah yes.. thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1742,2020-06-30T15:39:36Z,2020-06-30T16:14:30Z,2020-07-01T17:02:55Z,MERGED,True,1,1,1,https://github.com/daybeforenet,Don't declare mu_str_size_s() with the const attribute.,1,[],https://github.com/djcb/mu/pull/1742,https://github.com/daybeforenet,1,https://github.com/djcb/mu/pull/1742,"When this function is declared const or pure, clang at -O1 or higher optimizes
away the call to mu_str_size_s() inside mu_str_size(), so that it ignores its
argument and returns whatever is in mu_str_size_s()'s static buffer.
Found when test-mu-str failed while testing an update of mu in OpenBSD's ports tree.","When this function is declared const or pure, clang at -O1 or higher optimizes
away the call to mu_str_size_s() inside mu_str_size(), so that it ignores its
argument and returns whatever is in mu_str_size_s()'s static buffer.
Found when test-mu-str failed while testing an update of mu in OpenBSD's ports tree.",True,{}
djcb/mu,https://github.com/djcb/mu,1742,2020-06-30T15:39:36Z,2020-06-30T16:14:30Z,2020-07-01T17:02:55Z,MERGED,True,1,1,1,https://github.com/daybeforenet,Don't declare mu_str_size_s() with the const attribute.,1,[],https://github.com/djcb/mu/pull/1742,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1742#issuecomment-651897149,"When this function is declared const or pure, clang at -O1 or higher optimizes
away the call to mu_str_size_s() inside mu_str_size(), so that it ignores its
argument and returns whatever is in mu_str_size_s()'s static buffer.
Found when test-mu-str failed while testing an update of mu in OpenBSD's ports tree.","Ah, good catch. Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1743,2020-06-30T15:50:34Z,2020-06-30T16:11:54Z,2020-07-01T17:02:15Z,MERGED,True,1,1,1,https://github.com/daybeforenet,"In mu(1) refer to mu-script(1) instead of mu-guile, which does not exist",1,[],https://github.com/djcb/mu/pull/1743,https://github.com/daybeforenet,1,https://github.com/djcb/mu/pull/1743,,,True,{}
djcb/mu,https://github.com/djcb/mu,1743,2020-06-30T15:50:34Z,2020-06-30T16:11:54Z,2020-07-01T17:02:15Z,MERGED,True,1,1,1,https://github.com/daybeforenet,"In mu(1) refer to mu-script(1) instead of mu-guile, which does not exist",1,[],https://github.com/djcb/mu/pull/1743,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1743#issuecomment-651895666,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1746,2020-07-03T14:06:45Z,2020-07-06T21:14:51Z,2020-07-06T21:14:56Z,MERGED,True,24,8,1,https://github.com/mrvdb,Satisfy both max height and width for images in view,1,[],https://github.com/djcb/mu/pull/1746,https://github.com/mrvdb,1,https://github.com/djcb/mu/pull/1746,"introduce private function mu4e~image-width-scale:
determine the width to use for proportional scaling based on the image width, height and the max
restrictions.
use it in mu4e-display-image","introduce private function mu4e~image-width-scale:
determine the width to use for proportional scaling based on the image width, height and the max
restrictions.
use it in mu4e-display-image",True,{}
djcb/mu,https://github.com/djcb/mu,1746,2020-07-03T14:06:45Z,2020-07-06T21:14:51Z,2020-07-06T21:14:56Z,MERGED,True,24,8,1,https://github.com/mrvdb,Satisfy both max height and width for images in view,1,[],https://github.com/djcb/mu/pull/1746,https://github.com/mrvdb,2,https://github.com/djcb/mu/pull/1746#issuecomment-653567304,"introduce private function mu4e~image-width-scale:
determine the width to use for proportional scaling based on the image width, height and the max
restrictions.
use it in mu4e-display-image",This fixes what I intented to report in #1745 but failed to word properly there.,True,{}
djcb/mu,https://github.com/djcb/mu,1746,2020-07-03T14:06:45Z,2020-07-06T21:14:51Z,2020-07-06T21:14:56Z,MERGED,True,24,8,1,https://github.com/mrvdb,Satisfy both max height and width for images in view,1,[],https://github.com/djcb/mu/pull/1746,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1746#issuecomment-654469166,"introduce private function mu4e~image-width-scale:
determine the width to use for proportional scaling based on the image width, height and the max
restrictions.
use it in mu4e-display-image",Looks good - merged. Thanks!,True,{'THUMBS_UP': ['https://github.com/mrvdb']}
djcb/mu,https://github.com/djcb/mu,1747,2020-07-03T22:24:56Z,2020-07-04T11:27:23Z,2020-07-04T11:27:32Z,MERGED,True,2,2,2,https://github.com/dato,"NEWS.org, mu4e-vars.e.: fix spelling mu4e-contact-rewrite-function",1,[],https://github.com/djcb/mu/pull/1747,https://github.com/dato,1,https://github.com/djcb/mu/pull/1747,"mu4e-contact-rewrite-function was obsoleted in 1.4, but the entry in
NEWS.org entry, and the make-obsolete-variable call, referred to it as
mu4e-contacts-rewrite-function. (Should be ""contact"", not ""contacts"".)","mu4e-contact-rewrite-function was obsoleted in 1.4, but the entry in
NEWS.org entry, and the make-obsolete-variable call, referred to it as
mu4e-contacts-rewrite-function. (Should be ""contact"", not ""contacts"".)",True,{}
djcb/mu,https://github.com/djcb/mu,1747,2020-07-03T22:24:56Z,2020-07-04T11:27:23Z,2020-07-04T11:27:32Z,MERGED,True,2,2,2,https://github.com/dato,"NEWS.org, mu4e-vars.e.: fix spelling mu4e-contact-rewrite-function",1,[],https://github.com/djcb/mu/pull/1747,https://github.com/dato,2,https://github.com/djcb/mu/pull/1747#issuecomment-653688728,"mu4e-contact-rewrite-function was obsoleted in 1.4, but the entry in
NEWS.org entry, and the make-obsolete-variable call, referred to it as
mu4e-contacts-rewrite-function. (Should be ""contact"", not ""contacts"".)","This seems trivial, but I literally almost missed fixing my setup because I blindly grep'd my .emacs with the mentioned variables in the NEWS file, as given.",True,{}
djcb/mu,https://github.com/djcb/mu,1747,2020-07-03T22:24:56Z,2020-07-04T11:27:23Z,2020-07-04T11:27:32Z,MERGED,True,2,2,2,https://github.com/dato,"NEWS.org, mu4e-vars.e.: fix spelling mu4e-contact-rewrite-function",1,[],https://github.com/djcb/mu/pull/1747,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1747#issuecomment-653754055,"mu4e-contact-rewrite-function was obsoleted in 1.4, but the entry in
NEWS.org entry, and the make-obsolete-variable call, referred to it as
mu4e-contacts-rewrite-function. (Should be ""contact"", not ""contacts"".)",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1750,2020-07-06T19:19:06Z,2020-07-06T21:13:00Z,2020-07-06T21:13:00Z,MERGED,True,32,21,2,https://github.com/stsquad,mu4e/mu4e-utils: save our position before deleting old data,3,[],https://github.com/djcb/mu/pull/1750,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/1750,"Once your log buffer has filled up every new entry causes you to jump
back to the top of the log. Stop this happening by wrapping the
clean-up in save-excursion.","Once your log buffer has filled up every new entry causes you to jump
back to the top of the log. Stop this happening by wrapping the
clean-up in save-excursion.",True,{}
djcb/mu,https://github.com/djcb/mu,1750,2020-07-06T19:19:06Z,2020-07-06T21:13:00Z,2020-07-06T21:13:00Z,MERGED,True,32,21,2,https://github.com/stsquad,mu4e/mu4e-utils: save our position before deleting old data,3,[],https://github.com/djcb/mu/pull/1750,https://github.com/stsquad,2,https://github.com/djcb/mu/pull/1750#issuecomment-654419622,"Once your log buffer has filled up every new entry causes you to jump
back to the top of the log. Stop this happening by wrapping the
clean-up in save-excursion.",Hmm thinking about it I think the whole bit of character movement needs to be saved.,True,{}
djcb/mu,https://github.com/djcb/mu,1750,2020-07-06T19:19:06Z,2020-07-06T21:13:00Z,2020-07-06T21:13:00Z,MERGED,True,32,21,2,https://github.com/stsquad,mu4e/mu4e-utils: save our position before deleting old data,3,[],https://github.com/djcb/mu/pull/1750,https://github.com/stsquad,3,https://github.com/djcb/mu/pull/1750#issuecomment-654426054,"Once your log buffer has filled up every new entry causes you to jump
back to the top of the log. Stop this happening by wrapping the
clean-up in save-excursion.",OK did the mini re-factor and wrapped the save excursion around all point stuff.,True,{}
djcb/mu,https://github.com/djcb/mu,1756,2020-07-12T02:04:15Z,2020-08-09T07:51:51Z,2020-08-09T07:51:51Z,CLOSED,False,7,5,1,https://github.com/progfolio,mu4e-main: fix hide-fully-read semantics; make defcustom,1,[],https://github.com/djcb/mu/pull/1756,https://github.com/progfolio,1,https://github.com/djcb/mu/pull/1756,"Reverse the semantics of `mu4e-main-hide-fully-read' so that t hides and nil shows.
The behavior now matches the variable name.
Additionally define the variable with defcustom so users may customize
it through the customization system.","Reverse the semantics of `mu4e-main-hide-fully-read' so that t hides and nil shows.
The behavior now matches the variable name.
Additionally define the variable with defcustom so users may customize
it through the customization system.",True,{}
djcb/mu,https://github.com/djcb/mu,1756,2020-07-12T02:04:15Z,2020-08-09T07:51:51Z,2020-08-09T07:51:51Z,CLOSED,False,7,5,1,https://github.com/progfolio,mu4e-main: fix hide-fully-read semantics; make defcustom,1,[],https://github.com/djcb/mu/pull/1756,https://github.com/progfolio,2,https://github.com/djcb/mu/pull/1756#issuecomment-657169483,"Reverse the semantics of `mu4e-main-hide-fully-read' so that t hides and nil shows.
The behavior now matches the variable name.
Additionally define the variable with defcustom so users may customize
it through the customization system.","Alternatively, we could move mu4e-main-hide-fully-read to mu4e-vars.el and rename it to mu4e-hide-fully-read or something similar. Happy to make that change if it's preferable to the defcustom in mu4e-main.el.",True,{}
djcb/mu,https://github.com/djcb/mu,1756,2020-07-12T02:04:15Z,2020-08-09T07:51:51Z,2020-08-09T07:51:51Z,CLOSED,False,7,5,1,https://github.com/progfolio,mu4e-main: fix hide-fully-read semantics; make defcustom,1,[],https://github.com/djcb/mu/pull/1756,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1756#issuecomment-657214664,"Reverse the semantics of `mu4e-main-hide-fully-read' so that t hides and nil shows.
The behavior now matches the variable name.
Additionally define the variable with defcustom so users may customize
it through the customization system.","The defcustom change is fine, but the other I don't think is an improvement... so if you can just do the defcustom, I can merge. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1756,2020-07-12T02:04:15Z,2020-08-09T07:51:51Z,2020-08-09T07:51:51Z,CLOSED,False,7,5,1,https://github.com/progfolio,mu4e-main: fix hide-fully-read semantics; make defcustom,1,[],https://github.com/djcb/mu/pull/1756,https://github.com/progfolio,4,https://github.com/djcb/mu/pull/1756#issuecomment-657224632,"Reverse the semantics of `mu4e-main-hide-fully-read' so that t hides and nil shows.
The behavior now matches the variable name.
Additionally define the variable with defcustom so users may customize
it through the customization system.","but the other I don't think is an improvement...

I'm not sure which change you would like reverted. Are you referring to the reversal of the behavior?:
unless (or (plist-get bm :hide)
           (and mu4e-main-hide-fully-read (eq unread 0)))",True,{}
djcb/mu,https://github.com/djcb/mu,1756,2020-07-12T02:04:15Z,2020-08-09T07:51:51Z,2020-08-09T07:51:51Z,CLOSED,False,7,5,1,https://github.com/progfolio,mu4e-main: fix hide-fully-read semantics; make defcustom,1,[],https://github.com/djcb/mu/pull/1756,https://github.com/progfolio,5,https://github.com/djcb/mu/pull/1756#issuecomment-671020337,"Reverse the semantics of `mu4e-main-hide-fully-read' so that t hides and nil shows.
The behavior now matches the variable name.
Additionally define the variable with defcustom so users may customize
it through the customization system.",Closing this as I'm not sure what you wanted changed.,True,{}
djcb/mu,https://github.com/djcb/mu,1757,2020-07-12T04:38:54Z,2020-08-09T07:20:30Z,2020-08-09T07:20:30Z,CLOSED,False,129,147,12,https://github.com/progfolio,refactor: access server properties through generic function,1,[],https://github.com/djcb/mu/pull/1757,https://github.com/progfolio,1,https://github.com/djcb/mu/pull/1757,"New function, `mu4e~server-prop', allows accessing server properties
generically, rather than defining a function per property.
This should scale better as it doesn't repeat any logic per property.
If necessary, a property-specific function could easily be defined via `apply-partially'.","New function, `mu4e~server-prop', allows accessing server properties
generically, rather than defining a function per property.
This should scale better as it doesn't repeat any logic per property.
If necessary, a property-specific function could easily be defined via `apply-partially'.",True,{}
djcb/mu,https://github.com/djcb/mu,1757,2020-07-12T04:38:54Z,2020-08-09T07:20:30Z,2020-08-09T07:20:30Z,CLOSED,False,129,147,12,https://github.com/progfolio,refactor: access server properties through generic function,1,[],https://github.com/djcb/mu/pull/1757,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1757#issuecomment-671017578,"New function, `mu4e~server-prop', allows accessing server properties
generically, rather than defining a function per property.
This should scale better as it doesn't repeat any logic per property.
If necessary, a property-specific function could easily be defined via `apply-partially'.","Appreciate the effort, but don't think this is really an improvement. So, respectfully going to close this.",True,{'THUMBS_UP': ['https://github.com/progfolio']}
djcb/mu,https://github.com/djcb/mu,1759,2020-07-13T08:59:32Z,2020-07-13T18:50:16Z,2020-07-14T00:56:07Z,MERGED,True,2,0,2,https://github.com/damon-kwok,[MSYS2] Added missing include files,1,[],https://github.com/djcb/mu/pull/1759,https://github.com/damon-kwok,1,https://github.com/djcb/mu/pull/1759,"The latest code cannot be successfully compiled on windows:
mu-logger.cc:81:40: error: 鈥▒::strerror鈥▒ has not been declared; did you mean 鈥▒g_strerror鈥▒?
81 |                           << "": "" << ::strerror(errno) << std::endl;
mu-scanner.cc:167:70: error: 鈥▒strerror鈥▒ was not declared in this scope; did you mean 鈥▒g_strerror鈥▒?
167 |                 g_warning(""'%s' is not stat'able: %s"", path.c_str(), strerror (errno));
The cause of this error is that the header file required by strerror does not explicitly contain: cstring.h.
This PR fixed it.","The latest code cannot be successfully compiled on windows:
mu-logger.cc:81:40: error: 鈥▒::strerror鈥▒ has not been declared; did you mean 鈥▒g_strerror鈥▒?
81 |                           << "": "" << ::strerror(errno) << std::endl;
mu-scanner.cc:167:70: error: 鈥▒strerror鈥▒ was not declared in this scope; did you mean 鈥▒g_strerror鈥▒?
167 |                 g_warning(""'%s' is not stat'able: %s"", path.c_str(), strerror (errno));
The cause of this error is that the header file required by strerror does not explicitly contain: cstring.h.
This PR fixed it.",True,{}
djcb/mu,https://github.com/djcb/mu,1759,2020-07-13T08:59:32Z,2020-07-13T18:50:16Z,2020-07-14T00:56:07Z,MERGED,True,2,0,2,https://github.com/damon-kwok,[MSYS2] Added missing include files,1,[],https://github.com/djcb/mu/pull/1759,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1759#issuecomment-657730276,"The latest code cannot be successfully compiled on windows:
mu-logger.cc:81:40: error: 鈥▒::strerror鈥▒ has not been declared; did you mean 鈥▒g_strerror鈥▒?
81 |                           << "": "" << ::strerror(errno) << std::endl;
mu-scanner.cc:167:70: error: 鈥▒strerror鈥▒ was not declared in this scope; did you mean 鈥▒g_strerror鈥▒?
167 |                 g_warning(""'%s' is not stat'able: %s"", path.c_str(), strerror (errno));
The cause of this error is that the header file required by strerror does not explicitly contain: cstring.h.
This PR fixed it.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1768,2020-07-25T14:31:14Z,2020-07-26T08:18:39Z,2020-07-26T08:35:04Z,MERGED,True,10,10,8,https://github.com/tarsius,Fix typos,1,[],https://github.com/djcb/mu/pull/1768,https://github.com/tarsius,1,https://github.com/djcb/mu/pull/1768,,,True,{}
djcb/mu,https://github.com/djcb/mu,1768,2020-07-25T14:31:14Z,2020-07-26T08:18:39Z,2020-07-26T08:35:04Z,MERGED,True,10,10,8,https://github.com/tarsius,Fix typos,1,[],https://github.com/djcb/mu/pull/1768,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1768#issuecomment-663957441,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1768,2020-07-25T14:31:14Z,2020-07-26T08:18:39Z,2020-07-26T08:35:04Z,MERGED,True,10,10,8,https://github.com/tarsius,Fix typos,1,[],https://github.com/djcb/mu/pull/1768,https://github.com/tarsius,3,https://github.com/djcb/mu/pull/1768#issuecomment-663958877,,You're welcome!,True,{}
djcb/mu,https://github.com/djcb/mu,1776,2020-07-29T16:03:40Z,2020-08-02T08:56:06Z,2020-08-03T23:02:33Z,MERGED,True,3,0,1,https://github.com/snits,mu4e-headers: allow pipe through shell from headers view,1,[],https://github.com/djcb/mu/pull/1776,https://github.com/snits,1,https://github.com/djcb/mu/pull/1776,"Being able to pipe through shell from the headers view is
convenient for some use cases, so wire it up to work.
Resolves #1752
Signed-off-by: Jerry Snitselaar jsnitsel@redhat.com","Being able to pipe through shell from the headers view is
convenient for some use cases, so wire it up to work.
Resolves #1752
Signed-off-by: Jerry Snitselaar jsnitsel@redhat.com",True,{}
djcb/mu,https://github.com/djcb/mu,1776,2020-07-29T16:03:40Z,2020-08-02T08:56:06Z,2020-08-03T23:02:33Z,MERGED,True,3,0,1,https://github.com/snits,mu4e-headers: allow pipe through shell from headers view,1,[],https://github.com/djcb/mu/pull/1776,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1776#issuecomment-667647550,"Being able to pipe through shell from the headers view is
convenient for some use cases, so wire it up to work.
Resolves #1752
Signed-off-by: Jerry Snitselaar jsnitsel@redhat.com",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1777,2020-08-03T08:34:30Z,2020-11-28T08:45:16Z,2020-11-28T08:45:22Z,MERGED,True,6,3,1,https://github.com/jesusbv,Add Org entry when accepting event,1,[],https://github.com/djcb/mu/pull/1777,https://github.com/jesusbv,1,https://github.com/djcb/mu/pull/1777,"When clicking ""Accept"" event, if the entry is new
it is not added to the Org file, besides having
gnus-icalendar-org-enabled-p set to true.
This modification changes that, so that a new entry
is added or an existing one is modified.","When clicking ""Accept"" event, if the entry is new
it is not added to the Org file, besides having
gnus-icalendar-org-enabled-p set to true.
This modification changes that, so that a new entry
is added or an existing one is modified.",True,{}
djcb/mu,https://github.com/djcb/mu,1777,2020-08-03T08:34:30Z,2020-11-28T08:45:16Z,2020-11-28T08:45:22Z,MERGED,True,6,3,1,https://github.com/jesusbv,Add Org entry when accepting event,1,[],https://github.com/djcb/mu/pull/1777,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1777#issuecomment-674354274,"When clicking ""Accept"" event, if the entry is new
it is not added to the Org file, besides having
gnus-icalendar-org-enabled-p set to true.
This modification changes that, so that a new entry
is added or an existing one is modified.","Any comments, @Chris00?",True,{}
djcb/mu,https://github.com/djcb/mu,1777,2020-08-03T08:34:30Z,2020-11-28T08:45:16Z,2020-11-28T08:45:22Z,MERGED,True,6,3,1,https://github.com/jesusbv,Add Org entry when accepting event,1,[],https://github.com/djcb/mu/pull/1777,https://github.com/jesusbv,3,https://github.com/djcb/mu/pull/1777#issuecomment-727869208,"When clicking ""Accept"" event, if the entry is new
it is not added to the Org file, besides having
gnus-icalendar-org-enabled-p set to true.
This modification changes that, so that a new entry
is added or an existing one is modified.","Hi, any feedback on this ?",True,{}
djcb/mu,https://github.com/djcb/mu,1777,2020-08-03T08:34:30Z,2020-11-28T08:45:16Z,2020-11-28T08:45:22Z,MERGED,True,6,3,1,https://github.com/jesusbv,Add Org entry when accepting event,1,[],https://github.com/djcb/mu/pull/1777,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1777#issuecomment-735130476,"When clicking ""Accept"" event, if the entry is new
it is not added to the Org file, besides having
gnus-icalendar-org-enabled-p set to true.
This modification changes that, so that a new entry
is added or an existing one is modified.",Merged -- thanks!,True,{'HOORAY': ['https://github.com/jesusbv']}
djcb/mu,https://github.com/djcb/mu,1784,2020-08-13T14:01:16Z,2020-08-15T05:53:18Z,2020-08-17T04:18:08Z,MERGED,True,2,1,1,https://github.com/whudwl,Fix `mu help` doesn't show the `init` command. Fix a sentence.,1,[],https://github.com/djcb/mu/pull/1784,https://github.com/whudwl,1,https://github.com/djcb/mu/pull/1784,,,True,{}
djcb/mu,https://github.com/djcb/mu,1784,2020-08-13T14:01:16Z,2020-08-15T05:53:18Z,2020-08-17T04:18:08Z,MERGED,True,2,1,1,https://github.com/whudwl,Fix `mu help` doesn't show the `init` command. Fix a sentence.,1,[],https://github.com/djcb/mu/pull/1784,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1784#issuecomment-674354066,,Merged - thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1796,2020-09-08T03:19:34Z,2020-10-06T18:36:50Z,2020-10-06T18:36:51Z,CLOSED,False,26,21,7,https://github.com/dannyob,Guile 3.0 support,2,[],https://github.com/djcb/mu/pull/1796,https://github.com/dannyob,1,https://github.com/djcb/mu/pull/1796,"Hullo!
GNU Guile released version 3.0 in January; this patch should allow mu to build with either v2.2 or v3.0 of that language. (The bindings don't seem to have needed any changes, but I hacked the build to be more flexible.)
I'm not the greatest coder, but this builds and passes all the tests on my machine. I use Guix, which uses Guile a lot, and let me switch between building against both versions.
There were a couple of comments in the original code talking about how hacky the solution was for 2.2, and how its path needed to be hard-coded  to avoid a make distcheck error.  I didn't see any problems and this new code seems to build okay, so I took out those comments too.
This patch is for the v1.14.x branch.","Hullo!
GNU Guile released version 3.0 in January; this patch should allow mu to build with either v2.2 or v3.0 of that language. (The bindings don't seem to have needed any changes, but I hacked the build to be more flexible.)
I'm not the greatest coder, but this builds and passes all the tests on my machine. I use Guix, which uses Guile a lot, and let me switch between building against both versions.
There were a couple of comments in the original code talking about how hacky the solution was for 2.2, and how its path needed to be hard-coded  to avoid a make distcheck error.  I didn't see any problems and this new code seems to build okay, so I took out those comments too.
This patch is for the v1.14.x branch.",True,{}
djcb/mu,https://github.com/djcb/mu,1796,2020-09-08T03:19:34Z,2020-10-06T18:36:50Z,2020-10-06T18:36:51Z,CLOSED,False,26,21,7,https://github.com/dannyob,Guile 3.0 support,2,[],https://github.com/djcb/mu/pull/1796,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1796#issuecomment-704472300,"Hullo!
GNU Guile released version 3.0 in January; this patch should allow mu to build with either v2.2 or v3.0 of that language. (The bindings don't seem to have needed any changes, but I hacked the build to be more flexible.)
I'm not the greatest coder, but this builds and passes all the tests on my machine. I use Guix, which uses Guile a lot, and let me switch between building against both versions.
There were a couple of comments in the original code talking about how hacky the solution was for 2.2, and how its path needed to be hard-coded  to avoid a make distcheck error.  I didn't see any problems and this new code seems to build okay, so I took out those comments too.
This patch is for the v1.14.x branch.","Thanks, I'm interested in this, but not for 1.4.x, so I'll close this one (and we continue with #1797.",True,{}
djcb/mu,https://github.com/djcb/mu,1797,2020-09-08T03:39:02Z,2020-10-31T08:45:16Z,2020-11-09T05:55:12Z,CLOSED,False,26,21,7,https://github.com/dannyob,"Guile 3.0 update, based on master.",2,[],https://github.com/djcb/mu/pull/1797,https://github.com/dannyob,1,https://github.com/djcb/mu/pull/1797,"This is the same set of patches as pull #1796 , except using master as the base. I just cherry-picked them, so you can accept either and then apply them to the other branch. Let me know if there was a smarter way to do this -- I'm eager to learn!","This is the same set of patches as pull #1796 , except using master as the base. I just cherry-picked them, so you can accept either and then apply them to the other branch. Let me know if there was a smarter way to do this -- I'm eager to learn!",True,{}
djcb/mu,https://github.com/djcb/mu,1797,2020-09-08T03:39:02Z,2020-10-31T08:45:16Z,2020-11-09T05:55:12Z,CLOSED,False,26,21,7,https://github.com/dannyob,"Guile 3.0 update, based on master.",2,[],https://github.com/djcb/mu/pull/1797,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1797#issuecomment-704471045,"This is the same set of patches as pull #1796 , except using master as the base. I just cherry-picked them, so you can accept either and then apply them to the other branch. Let me know if there was a smarter way to do this -- I'm eager to learn!","This looks useful, thanks!
However guile is only as soft requirement, and this seems to make it a hard requirement.. i.e. from the CI:
https://github.com/djcb/mu/pull/1797/checks?check_run_id=1084030032",True,{}
djcb/mu,https://github.com/djcb/mu,1797,2020-09-08T03:39:02Z,2020-10-31T08:45:16Z,2020-11-09T05:55:12Z,CLOSED,False,26,21,7,https://github.com/dannyob,"Guile 3.0 update, based on master.",2,[],https://github.com/djcb/mu/pull/1797,https://github.com/dannyob,3,https://github.com/djcb/mu/pull/1797#issuecomment-704497162,"This is the same set of patches as pull #1796 , except using master as the base. I just cherry-picked them, so you can accept either and then apply them to the other branch. Let me know if there was a smarter way to do this -- I'm eager to learn!",Huh! I'll take a look at that!,True,{}
djcb/mu,https://github.com/djcb/mu,1797,2020-09-08T03:39:02Z,2020-10-31T08:45:16Z,2020-11-09T05:55:12Z,CLOSED,False,26,21,7,https://github.com/dannyob,"Guile 3.0 update, based on master.",2,[],https://github.com/djcb/mu/pull/1797,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1797#issuecomment-719904611,"This is the same set of patches as pull #1796 , except using master as the base. I just cherry-picked them, so you can accept either and then apply them to the other branch. Let me know if there was a smarter way to do this -- I'm eager to learn!","Merged this locally, with a fix configure.ac. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1797,2020-09-08T03:39:02Z,2020-10-31T08:45:16Z,2020-11-09T05:55:12Z,CLOSED,False,26,21,7,https://github.com/dannyob,"Guile 3.0 update, based on master.",2,[],https://github.com/djcb/mu/pull/1797,https://github.com/dannyob,5,https://github.com/djcb/mu/pull/1797#issuecomment-723775748,"This is the same set of patches as pull #1796 , except using master as the base. I just cherry-picked them, so you can accept either and then apply them to the other branch. Let me know if there was a smarter way to do this -- I'm eager to learn!",Thank you!,True,{}
djcb/mu,https://github.com/djcb/mu,1803,2020-09-22T16:35:02Z,2020-10-06T18:52:57Z,2020-10-06T18:52:57Z,CLOSED,False,22,9,1,https://github.com/legalnonsense,Properly align variable-pitch faces in header view,1,[],https://github.com/djcb/mu/pull/1803,https://github.com/legalnonsense,1,https://github.com/djcb/mu/pull/1803,"This change allows the use of variable-pitch fonts in the header view, because it aligns columns using the :align-to value of the display text property rather than relying on spaces. Since the new function needs to know the field, I had to change the call to mu4e~headers-truncate-field (it looks like this changed recently since my version already had FIELD as a parameter).","This change allows the use of variable-pitch fonts in the header view, because it aligns columns using the :align-to value of the display text property rather than relying on spaces. Since the new function needs to know the field, I had to change the call to mu4e~headers-truncate-field (it looks like this changed recently since my version already had FIELD as a parameter).",True,{}
djcb/mu,https://github.com/djcb/mu,1803,2020-09-22T16:35:02Z,2020-10-06T18:52:57Z,2020-10-06T18:52:57Z,CLOSED,False,22,9,1,https://github.com/legalnonsense,Properly align variable-pitch faces in header view,1,[],https://github.com/djcb/mu/pull/1803,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1803#issuecomment-704483353,"This change allows the use of variable-pitch fonts in the header view, because it aligns columns using the :align-to value of the display text property rather than relying on spaces. Since the new function needs to know the field, I had to change the call to mu4e~headers-truncate-field (it looks like this changed recently since my version already had FIELD as a parameter).","Nice work! I merged it locally, with some minor changes (field-id vs field).",True,{}
djcb/mu,https://github.com/djcb/mu,1807,2020-10-02T07:35:42Z,2020-10-06T18:24:37Z,2020-10-06T18:25:02Z,MERGED,True,3,2,2,https://github.com/juanjosegarciaripoll,Remove configuration check for timegm(),2,[],https://github.com/djcb/mu/pull/1807,https://github.com/juanjosegarciaripoll,1,https://github.com/djcb/mu/pull/1807,timegm() is no longer used in the mu source base. I am trying to find what are the minimal changes to allow configuring this code in mingw/msys (which is my preferred basis for compiling Emacs itself).,timegm() is no longer used in the mu source base. I am trying to find what are the minimal changes to allow configuring this code in mingw/msys (which is my preferred basis for compiling Emacs itself).,True,{}
djcb/mu,https://github.com/djcb/mu,1807,2020-10-02T07:35:42Z,2020-10-06T18:24:37Z,2020-10-06T18:25:02Z,MERGED,True,3,2,2,https://github.com/juanjosegarciaripoll,Remove configuration check for timegm(),2,[],https://github.com/djcb/mu/pull/1807,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1807#issuecomment-704464223,timegm() is no longer used in the mu source base. I am trying to find what are the minimal changes to allow configuring this code in mingw/msys (which is my preferred basis for compiling Emacs itself).,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1808,2020-10-04T14:50:32Z,2020-10-06T18:30:50Z,2020-10-06T18:31:02Z,MERGED,True,12,2,2,https://github.com/juanjosegarciaripoll,Allow use of Maildir FAT extension changing the Maildir info separator,1,[],https://github.com/djcb/mu/pull/1808,https://github.com/juanjosegarciaripoll,1,https://github.com/djcb/mu/pull/1808,"When working on Windows systems, mbsync and other software uses ';' as separator for Maildir flags, because ':' is not allowed in file names. Change the function that creates names for draft and sent emails, so that it depends on a global customizable variable that determines this separator.","When working on Windows systems, mbsync and other software uses ';' as separator for Maildir flags, because ':' is not allowed in file names. Change the function that creates names for draft and sent emails, so that it depends on a global customizable variable that determines this separator.",True,{}
djcb/mu,https://github.com/djcb/mu,1808,2020-10-04T14:50:32Z,2020-10-06T18:30:50Z,2020-10-06T18:31:02Z,MERGED,True,12,2,2,https://github.com/juanjosegarciaripoll,Allow use of Maildir FAT extension changing the Maildir info separator,1,[],https://github.com/djcb/mu/pull/1808,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1808#issuecomment-704468215,"When working on Windows systems, mbsync and other software uses ';' as separator for Maildir flags, because ':' is not allowed in file names. Change the function that creates names for draft and sent emails, so that it depends on a global customizable variable that determines this separator.",That seems useful. Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1812,2020-10-10T07:33:08Z,2020-10-28T22:43:43Z,2020-10-28T22:43:58Z,MERGED,True,25,8,1,https://github.com/lockywolf,Add reference about read-mail-command to mu4e.texi.,5,[],https://github.com/djcb/mu/pull/1812,https://github.com/lockywolf,1,https://github.com/djcb/mu/pull/1812,"As far as I understand, this is a legitimate usage of mu4e, isn't it?","As far as I understand, this is a legitimate usage of mu4e, isn't it?",True,{}
djcb/mu,https://github.com/djcb/mu,1812,2020-10-10T07:33:08Z,2020-10-28T22:43:43Z,2020-10-28T22:43:58Z,MERGED,True,25,8,1,https://github.com/lockywolf,Add reference about read-mail-command to mu4e.texi.,5,[],https://github.com/djcb/mu/pull/1812,https://github.com/lockywolf,2,https://github.com/djcb/mu/pull/1812#issuecomment-717656329,"As far as I understand, this is a legitimate usage of mu4e, isn't it?","I think that this pull request can be merged, if I find some other places the documentation can be improved, I'll open another one.",True,{}
djcb/mu,https://github.com/djcb/mu,1812,2020-10-10T07:33:08Z,2020-10-28T22:43:43Z,2020-10-28T22:43:58Z,MERGED,True,25,8,1,https://github.com/lockywolf,Add reference about read-mail-command to mu4e.texi.,5,[],https://github.com/djcb/mu/pull/1812,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1812#issuecomment-718250692,"As far as I understand, this is a legitimate usage of mu4e, isn't it?","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1813,2020-10-10T16:23:39Z,2020-10-16T18:35:35Z,2021-01-04T16:08:58Z,MERGED,True,31,18,1,https://github.com/juanjosegarciaripoll,mu_maildir_get_new_path() did not use the right flags separator,3,[],https://github.com/djcb/mu/pull/1813,https://github.com/juanjosegarciaripoll,1,https://github.com/djcb/mu/pull/1813,"mu_maildir_get_new_path() is on charge of renaming messages, moving them to different folders. When new_name is 0, it reuses the old name and properly identifies the flags separator. However, when new_name is 1 (which is needed, for instance, for mbsync), it always creates a file name with ':' as flags separator, which is incorrect on MS-DOS based filesystems.","mu_maildir_get_new_path() is on charge of renaming messages, moving them to different folders. When new_name is 0, it reuses the old name and properly identifies the flags separator. However, when new_name is 1 (which is needed, for instance, for mbsync), it always creates a file name with ':' as flags separator, which is incorrect on MS-DOS based filesystems.",True,{}
djcb/mu,https://github.com/djcb/mu,1813,2020-10-10T16:23:39Z,2020-10-16T18:35:35Z,2021-01-04T16:08:58Z,MERGED,True,31,18,1,https://github.com/juanjosegarciaripoll,mu_maildir_get_new_path() did not use the right flags separator,3,[],https://github.com/djcb/mu/pull/1813,https://github.com/juanjosegarciaripoll,2,https://github.com/djcb/mu/pull/1813#issuecomment-710286884,"mu_maildir_get_new_path() is on charge of renaming messages, moving them to different folders. When new_name is 0, it reuses the old name and properly identifies the flags separator. However, when new_name is 1 (which is needed, for instance, for mbsync), it always creates a file name with ':' as flags separator, which is incorrect on MS-DOS based filesystems.","Unfortunately Emacs refused various times to use tabs for indentation, because it failed to guess the value c-basic-offset. Once I saw it in Github I corrected it. Hopefully it is all fixed now.",True,{}
djcb/mu,https://github.com/djcb/mu,1813,2020-10-10T16:23:39Z,2020-10-16T18:35:35Z,2021-01-04T16:08:58Z,MERGED,True,31,18,1,https://github.com/juanjosegarciaripoll,mu_maildir_get_new_path() did not use the right flags separator,3,[],https://github.com/djcb/mu/pull/1813,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1813#issuecomment-710393390,"mu_maildir_get_new_path() is on charge of renaming messages, moving them to different folders. When new_name is 0, it reuses the old name and properly identifies the flags separator. However, when new_name is 1 (which is needed, for instance, for mbsync), it always creates a file name with ':' as flags separator, which is incorrect on MS-DOS based filesystems.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1818,2020-10-19T13:43:44Z,2020-10-19T18:53:49Z,2020-10-21T12:42:25Z,MERGED,True,1,1,1,https://github.com/wavexx,Check for nil before calling mu4e-user-mail-address-p,1,[],https://github.com/djcb/mu/pull/1818,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1818,"Got a few errors in *mu4e-headers* while skimming through a junk folder due to a nil :from address.
I'd rather have mu4e-user-mail-address-p not called in such cases, so we filter it earlier.
There's a similar second instance in mu4e-view.el:272 , when constructing ""from-to"", but I'm not sure if that's applicable? (I couldn't select a message that would trigger it).","Got a few errors in *mu4e-headers* while skimming through a junk folder due to a nil :from address.
I'd rather have mu4e-user-mail-address-p not called in such cases, so we filter it earlier.
There's a similar second instance in mu4e-view.el:272 , when constructing ""from-to"", but I'm not sure if that's applicable? (I couldn't select a message that would trigger it).",True,{}
djcb/mu,https://github.com/djcb/mu,1818,2020-10-19T13:43:44Z,2020-10-19T18:53:49Z,2020-10-21T12:42:25Z,MERGED,True,1,1,1,https://github.com/wavexx,Check for nil before calling mu4e-user-mail-address-p,1,[],https://github.com/djcb/mu/pull/1818,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1818#issuecomment-712378736,"Got a few errors in *mu4e-headers* while skimming through a junk folder due to a nil :from address.
I'd rather have mu4e-user-mail-address-p not called in such cases, so we filter it earlier.
There's a similar second instance in mu4e-view.el:272 , when constructing ""from-to"", but I'm not sure if that's applicable? (I couldn't select a message that would trigger it).","Merged, thanks.
(I'll do some follow commits, since e.g. mu4e-user-mail-address-p is actually deprecated)",True,{}
djcb/mu,https://github.com/djcb/mu,1818,2020-10-19T13:43:44Z,2020-10-19T18:53:49Z,2020-10-21T12:42:25Z,MERGED,True,1,1,1,https://github.com/wavexx,Check for nil before calling mu4e-user-mail-address-p,1,[],https://github.com/djcb/mu/pull/1818,https://github.com/wavexx,3,https://github.com/djcb/mu/pull/1818#issuecomment-713541031,"Got a few errors in *mu4e-headers* while skimming through a junk folder due to a nil :from address.
I'd rather have mu4e-user-mail-address-p not called in such cases, so we filter it earlier.
There's a similar second instance in mu4e-view.el:272 , when constructing ""from-to"", but I'm not sure if that's applicable? (I couldn't select a message that would trigger it).","On Mon, Oct 19 2020, Dirk-Jan C. Binnema wrote:
 (I'll do some follow commits, since e.g. `mu4e-user-mail-address-p` is
 actually deprecated)
Fully aware, but was to lazy to update my bloated config so far ;)",True,{}
djcb/mu,https://github.com/djcb/mu,1828,2020-11-09T12:37:31Z,2020-11-15T15:16:17Z,2020-11-15T15:16:26Z,MERGED,True,42,0,1,https://github.com/Chris00,Add a section about iCalendar to the manual,1,[],https://github.com/djcb/mu/pull/1828,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1828,Fixes #1825,Fixes #1825,True,{}
djcb/mu,https://github.com/djcb/mu,1828,2020-11-09T12:37:31Z,2020-11-15T15:16:17Z,2020-11-15T15:16:26Z,MERGED,True,42,0,1,https://github.com/Chris00,Add a section about iCalendar to the manual,1,[],https://github.com/djcb/mu/pull/1828,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1828#issuecomment-727585880,Fixes #1825,"Great, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1834,2020-11-12T14:26:44Z,2020-11-15T18:00:15Z,2020-11-15T18:00:42Z,MERGED,True,56,0,1,https://github.com/plantarum,Ical documentation,2,[],https://github.com/djcb/mu/pull/1834,https://github.com/plantarum,1,https://github.com/djcb/mu/pull/1834,Addresses #1825,Addresses #1825,True,{}
djcb/mu,https://github.com/djcb/mu,1834,2020-11-12T14:26:44Z,2020-11-15T18:00:15Z,2020-11-15T18:00:42Z,MERGED,True,56,0,1,https://github.com/plantarum,Ical documentation,2,[],https://github.com/djcb/mu/pull/1834,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1834#issuecomment-727610581,Addresses #1825,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1835,2020-11-13T12:23:35Z,2020-11-15T15:19:15Z,2021-09-30T16:21:09Z,MERGED,True,84,55,7,https://github.com/thierryvolpiatto,Use functions instead of lambdas in add-hook calls,1,[],https://github.com/djcb/mu/pull/1835,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1835,This is cleaner and help when debugging to use functions in hooks instead of lambdas.,This is cleaner and help when debugging to use functions in hooks instead of lambdas.,True,{}
djcb/mu,https://github.com/djcb/mu,1835,2020-11-13T12:23:35Z,2020-11-15T15:19:15Z,2021-09-30T16:21:09Z,MERGED,True,84,55,7,https://github.com/thierryvolpiatto,Use functions instead of lambdas in add-hook calls,1,[],https://github.com/djcb/mu/pull/1835,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1835#issuecomment-727586404,This is cleaner and help when debugging to use functions in hooks instead of lambdas.,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1836,2020-11-15T07:25:15Z,2020-11-15T15:20:24Z,2021-09-30T16:21:09Z,MERGED,True,0,2,1,https://github.com/thierryvolpiatto,Disable `mm-verify-option` let-bounded in `mu4e~view-gnus`,1,[],https://github.com/djcb/mu/pull/1836,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1836,"When this option is set to 'known and the needed key is not yet in the user's
keyring, mu4e may hangs forever unable to verify email so lets user set this
variable globally to 'never to prevent this issue.","When this option is set to 'known and the needed key is not yet in the user's
keyring, mu4e may hangs forever unable to verify email so lets user set this
variable globally to 'never to prevent this issue.",True,{}
djcb/mu,https://github.com/djcb/mu,1836,2020-11-15T07:25:15Z,2020-11-15T15:20:24Z,2021-09-30T16:21:09Z,MERGED,True,0,2,1,https://github.com/thierryvolpiatto,Disable `mm-verify-option` let-bounded in `mu4e~view-gnus`,1,[],https://github.com/djcb/mu/pull/1836,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1836#issuecomment-727586596,"When this option is set to 'known and the needed key is not yet in the user's
keyring, mu4e may hangs forever unable to verify email so lets user set this
variable globally to 'never to prevent this issue.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1837,2020-11-15T20:42:43Z,2020-11-16T07:52:39Z,2020-11-16T07:52:50Z,MERGED,True,9,29,1,https://github.com/eklitzke,Use readdir(3) instead of deprecated readdir_r(3) in mu-maildir.c,1,[],https://github.com/djcb/mu/pull/1837,https://github.com/eklitzke,1,https://github.com/djcb/mu/pull/1837,"I was originally looking at this code because clang was producing an alignment warning in dirent_new, but once I took a look I realized this code can be simplified a lot. Usage of readdir_r(3) is discouraged according to the glibc docs, which explain the problems with readdir_r(3) better than I can here. There's an even more detailed explanation of the issue in this blog post. Basically all modern implementations of libc use a pointer to data within the DIR* handle for the return value of readdir(3) (including on bsd/macos), so as long as that DIR* handle isn't used my multiple threads concurrently there aren't thread safety issues.
I think there's also a bug in the original implementation because it allocates memory using g_new0 but frees it using g_slice_free1, but with the change I've made here that code gets deleted anyway.","I was originally looking at this code because clang was producing an alignment warning in dirent_new, but once I took a look I realized this code can be simplified a lot. Usage of readdir_r(3) is discouraged according to the glibc docs, which explain the problems with readdir_r(3) better than I can here. There's an even more detailed explanation of the issue in this blog post. Basically all modern implementations of libc use a pointer to data within the DIR* handle for the return value of readdir(3) (including on bsd/macos), so as long as that DIR* handle isn't used my multiple threads concurrently there aren't thread safety issues.
I think there's also a bug in the original implementation because it allocates memory using g_new0 but frees it using g_slice_free1, but with the change I've made here that code gets deleted anyway.",True,{}
djcb/mu,https://github.com/djcb/mu,1837,2020-11-15T20:42:43Z,2020-11-16T07:52:39Z,2020-11-16T07:52:50Z,MERGED,True,9,29,1,https://github.com/eklitzke,Use readdir(3) instead of deprecated readdir_r(3) in mu-maildir.c,1,[],https://github.com/djcb/mu/pull/1837,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1837#issuecomment-727803240,"I was originally looking at this code because clang was producing an alignment warning in dirent_new, but once I took a look I realized this code can be simplified a lot. Usage of readdir_r(3) is discouraged according to the glibc docs, which explain the problems with readdir_r(3) better than I can here. There's an even more detailed explanation of the issue in this blog post. Basically all modern implementations of libc use a pointer to data within the DIR* handle for the return value of readdir(3) (including on bsd/macos), so as long as that DIR* handle isn't used my multiple threads concurrently there aren't thread safety issues.
I think there's also a bug in the original implementation because it allocates memory using g_new0 but frees it using g_slice_free1, but with the change I've made here that code gets deleted anyway.","Merged, thanks!
Note that the code here is mostly replaced by mu-scanner, but always good to fix a warning.",True,{}
djcb/mu,https://github.com/djcb/mu,1838,2020-11-16T06:55:57Z,2020-11-16T07:46:01Z,2021-09-30T16:21:09Z,MERGED,True,2,2,1,https://github.com/thierryvolpiatto,No need to call `read-only-mode` when buffer is already read-only,1,[],https://github.com/djcb/mu/pull/1838,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1838,"In mu4e~view-gnus, mu4e-view-mode derive from gnus-article-mode which derive
from gnus-mode which derive from special-mode:
(get 'mu4e-view-mode 'mode-class) => special.","In mu4e~view-gnus, mu4e-view-mode derive from gnus-article-mode which derive
from gnus-mode which derive from special-mode:
(get 'mu4e-view-mode 'mode-class) => special.",True,{}
djcb/mu,https://github.com/djcb/mu,1838,2020-11-16T06:55:57Z,2020-11-16T07:46:01Z,2021-09-30T16:21:09Z,MERGED,True,2,2,1,https://github.com/thierryvolpiatto,No need to call `read-only-mode` when buffer is already read-only,1,[],https://github.com/djcb/mu/pull/1838,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1838#issuecomment-727799504,"In mu4e~view-gnus, mu4e-view-mode derive from gnus-article-mode which derive
from gnus-mode which derive from special-mode:
(get 'mu4e-view-mode 'mode-class) => special.","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1839,2020-11-16T08:06:11Z,2020-11-19T20:34:01Z,2021-09-30T16:29:38Z,MERGED,True,5,5,1,https://github.com/thierryvolpiatto,Avoid looping through buffer-list when not needed,1,[],https://github.com/djcb/mu/pull/1839,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1839,Actual code loop through buffer-list even when message-kill-buffer-on-exit is nil.,Actual code loop through buffer-list even when message-kill-buffer-on-exit is nil.,True,{}
djcb/mu,https://github.com/djcb/mu,1839,2020-11-16T08:06:11Z,2020-11-19T20:34:01Z,2021-09-30T16:29:38Z,MERGED,True,5,5,1,https://github.com/thierryvolpiatto,Avoid looping through buffer-list when not needed,1,[],https://github.com/djcb/mu/pull/1839,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1839#issuecomment-730621829,Actual code loop through buffer-list even when message-kill-buffer-on-exit is nil.,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1850,2020-12-04T17:11:24Z,2020-12-04T20:46:13Z,2020-12-04T20:46:24Z,MERGED,True,3,3,1,https://github.com/juanjosegarciaripoll,Do not use shell commands to extract version number,1,[],https://github.com/djcb/mu/pull/1850,https://github.com/juanjosegarciaripoll,1,https://github.com/djcb/mu/pull/1850,"Avoid using 'head', 'sed' or other POSIX commands to extract the version number when Emacs can do it. This allows installing just 'mu', without the extra unix tools in a Windows environment, or run 'mu' from MSYS but do not expose the rest of the MSYS environment (needed if one wants to rely on Windows cmd.exe shell for other tasks, for instance).","Avoid using 'head', 'sed' or other POSIX commands to extract the version number when Emacs can do it. This allows installing just 'mu', without the extra unix tools in a Windows environment, or run 'mu' from MSYS but do not expose the rest of the MSYS environment (needed if one wants to rely on Windows cmd.exe shell for other tasks, for instance).",True,{}
djcb/mu,https://github.com/djcb/mu,1850,2020-12-04T17:11:24Z,2020-12-04T20:46:13Z,2020-12-04T20:46:24Z,MERGED,True,3,3,1,https://github.com/juanjosegarciaripoll,Do not use shell commands to extract version number,1,[],https://github.com/djcb/mu/pull/1850,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1850#issuecomment-739010778,"Avoid using 'head', 'sed' or other POSIX commands to extract the version number when Emacs can do it. This allows installing just 'mu', without the extra unix tools in a Windows environment, or run 'mu' from MSYS but do not expose the rest of the MSYS environment (needed if one wants to rely on Windows cmd.exe shell for other tasks, for instance).","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1859,2020-12-13T16:29:59Z,2020-12-17T21:27:05Z,2021-01-03T13:23:04Z,MERGED,True,5,2,2,https://github.com/tsdh,Use mu4e-query-rewrite-function also for computing bookmark counts,1,[],https://github.com/djcb/mu/pull/1859,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/1859,"Until now, the bookmark queries were sent to mu in their original form.  Thus,
if you have mu4e-query-rewrite-function set, the numbers shown next to the
bookmarks didn't reflect the actual number of query results you'd get when
opening a bookmark view.
With this commit, the mu4e-query-rewrite-function is applied and the result
is sent to mu for evaluation (in mu4e~start) and the likewise the rewritten
queries are used to find the matching one in the last query results (in
mu4e~main-bookmarks).

mu4e/mu4e-utils.el (mu4e~start): Send the rewritten queries for evaluation to
mu.
mu4e/mu4e-main.el (mu4e~main-bookmarks): Compare last mu query results with
rewritten queries.

I think this change makes sense for anyone using a
mu4e-query-rewrite-function.
My personal use-case is that I have contexts where I want to restrict the scope
of bookmarks and searches to a certain subset of maildirs.  Therefore, my
contexts set a variable whose value is a regexp matching the maildirs relevant
in this context and my mu4e-query-rewrite-function uses it to add a
maildir:/.../ restriction to queries automatically.  Of course, the numbers
next to the bookmarks should reflect that, e.g., in my FOSS context I'm not
interested in the number of unread messages in all my maildirs but only in
those concerned with my FOSS activity.","Until now, the bookmark queries were sent to mu in their original form.  Thus,
if you have mu4e-query-rewrite-function set, the numbers shown next to the
bookmarks didn't reflect the actual number of query results you'd get when
opening a bookmark view.
With this commit, the mu4e-query-rewrite-function is applied and the result
is sent to mu for evaluation (in mu4e~start) and the likewise the rewritten
queries are used to find the matching one in the last query results (in
mu4e~main-bookmarks).

mu4e/mu4e-utils.el (mu4e~start): Send the rewritten queries for evaluation to
mu.
mu4e/mu4e-main.el (mu4e~main-bookmarks): Compare last mu query results with
rewritten queries.

I think this change makes sense for anyone using a
mu4e-query-rewrite-function.
My personal use-case is that I have contexts where I want to restrict the scope
of bookmarks and searches to a certain subset of maildirs.  Therefore, my
contexts set a variable whose value is a regexp matching the maildirs relevant
in this context and my mu4e-query-rewrite-function uses it to add a
maildir:/.../ restriction to queries automatically.  Of course, the numbers
next to the bookmarks should reflect that, e.g., in my FOSS context I'm not
interested in the number of unread messages in all my maildirs but only in
those concerned with my FOSS activity.",True,{}
djcb/mu,https://github.com/djcb/mu,1859,2020-12-13T16:29:59Z,2020-12-17T21:27:05Z,2021-01-03T13:23:04Z,MERGED,True,5,2,2,https://github.com/tsdh,Use mu4e-query-rewrite-function also for computing bookmark counts,1,[],https://github.com/djcb/mu/pull/1859,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1859#issuecomment-747712168,"Until now, the bookmark queries were sent to mu in their original form.  Thus,
if you have mu4e-query-rewrite-function set, the numbers shown next to the
bookmarks didn't reflect the actual number of query results you'd get when
opening a bookmark view.
With this commit, the mu4e-query-rewrite-function is applied and the result
is sent to mu for evaluation (in mu4e~start) and the likewise the rewritten
queries are used to find the matching one in the last query results (in
mu4e~main-bookmarks).

mu4e/mu4e-utils.el (mu4e~start): Send the rewritten queries for evaluation to
mu.
mu4e/mu4e-main.el (mu4e~main-bookmarks): Compare last mu query results with
rewritten queries.

I think this change makes sense for anyone using a
mu4e-query-rewrite-function.
My personal use-case is that I have contexts where I want to restrict the scope
of bookmarks and searches to a certain subset of maildirs.  Therefore, my
contexts set a variable whose value is a regexp matching the maildirs relevant
in this context and my mu4e-query-rewrite-function uses it to add a
maildir:/.../ restriction to queries automatically.  Of course, the numbers
next to the bookmarks should reflect that, e.g., in my FOSS context I'm not
interested in the number of unread messages in all my maildirs but only in
those concerned with my FOSS activity.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1859,2020-12-13T16:29:59Z,2020-12-17T21:27:05Z,2021-01-03T13:23:04Z,MERGED,True,5,2,2,https://github.com/tsdh,Use mu4e-query-rewrite-function also for computing bookmark counts,1,[],https://github.com/djcb/mu/pull/1859,https://github.com/tsdh,3,https://github.com/djcb/mu/pull/1859#issuecomment-747980492,"Until now, the bookmark queries were sent to mu in their original form.  Thus,
if you have mu4e-query-rewrite-function set, the numbers shown next to the
bookmarks didn't reflect the actual number of query results you'd get when
opening a bookmark view.
With this commit, the mu4e-query-rewrite-function is applied and the result
is sent to mu for evaluation (in mu4e~start) and the likewise the rewritten
queries are used to find the matching one in the last query results (in
mu4e~main-bookmarks).

mu4e/mu4e-utils.el (mu4e~start): Send the rewritten queries for evaluation to
mu.
mu4e/mu4e-main.el (mu4e~main-bookmarks): Compare last mu query results with
rewritten queries.

I think this change makes sense for anyone using a
mu4e-query-rewrite-function.
My personal use-case is that I have contexts where I want to restrict the scope
of bookmarks and searches to a certain subset of maildirs.  Therefore, my
contexts set a variable whose value is a regexp matching the maildirs relevant
in this context and my mu4e-query-rewrite-function uses it to add a
maildir:/.../ restriction to queries automatically.  Of course, the numbers
next to the bookmarks should reflect that, e.g., in my FOSS context I'm not
interested in the number of unread messages in all my maildirs but only in
those concerned with my FOSS activity.","@djcb Cool, thank you!  And thanks a lot for Mu4E in general.  I'm using it for a week now and it is absolutely awesome.",True,{}
djcb/mu,https://github.com/djcb/mu,1868,2020-12-20T20:49:14Z,2021-01-15T19:19:55Z,2021-02-01T20:27:20Z,MERGED,True,53,4,2,https://github.com/tsdh,Completion for search query keywords and fixed or determinable values,2,[],https://github.com/djcb/mu/pull/1868,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/1868,"This pull requests adds TAB-completion for search query keywords (like from:, subject:, etc.), and also for their values in case they are fixed (like with flag:) or can be determined at runtime (like for maildir:, and mime:).
I didn't know which Emacs version mu4e requires so I've fboundp-checked the needed minibuffer-with-setup-hook macro (available since Emacs 25.1) and fall back to ""no completion"" if that's undefined.","This pull requests adds TAB-completion for search query keywords (like from:, subject:, etc.), and also for their values in case they are fixed (like with flag:) or can be determined at runtime (like for maildir:, and mime:).
I didn't know which Emacs version mu4e requires so I've fboundp-checked the needed minibuffer-with-setup-hook macro (available since Emacs 25.1) and fall back to ""no completion"" if that's undefined.",True,"{'THUMBS_UP': ['https://github.com/alexmurray', 'https://github.com/dochego']}"
djcb/mu,https://github.com/djcb/mu,1868,2020-12-20T20:49:14Z,2021-01-15T19:19:55Z,2021-02-01T20:27:20Z,MERGED,True,53,4,2,https://github.com/tsdh,Completion for search query keywords and fixed or determinable values,2,[],https://github.com/djcb/mu/pull/1868,https://github.com/tsdh,2,https://github.com/djcb/mu/pull/1868#issuecomment-757997431,"This pull requests adds TAB-completion for search query keywords (like from:, subject:, etc.), and also for their values in case they are fixed (like with flag:) or can be determined at runtime (like for maildir:, and mime:).
I didn't know which Emacs version mu4e requires so I've fboundp-checked the needed minibuffer-with-setup-hook macro (available since Emacs 25.1) and fall back to ""no completion"" if that's undefined.","@djcb I've fixed your two points, rebased again onto master, and pushed.",True,{}
djcb/mu,https://github.com/djcb/mu,1868,2020-12-20T20:49:14Z,2021-01-15T19:19:55Z,2021-02-01T20:27:20Z,MERGED,True,53,4,2,https://github.com/tsdh,Completion for search query keywords and fixed or determinable values,2,[],https://github.com/djcb/mu/pull/1868,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1868#issuecomment-761136741,"This pull requests adds TAB-completion for search query keywords (like from:, subject:, etc.), and also for their values in case they are fixed (like with flag:) or can be determined at runtime (like for maildir:, and mime:).
I didn't know which Emacs version mu4e requires so I've fboundp-checked the needed minibuffer-with-setup-hook macro (available since Emacs 25.1) and fall back to ""no completion"" if that's undefined.",Thanks! Merged.,True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,1871,2020-12-24T09:21:21Z,2020-12-24T15:50:02Z,2020-12-24T15:50:13Z,MERGED,True,7,4,1,https://github.com/juanjosegarciaripoll,Make libreadline really optional.,1,[],https://github.com/djcb/mu/pull/1871,https://github.com/juanjosegarciaripoll,1,https://github.com/djcb/mu/pull/1871,"Add a --disable-readline argument to the 'configure' script, removing the need of libreadline which pulls ncurses and a lot of other files, not needed when mu is only used from inside emacs.","Add a --disable-readline argument to the 'configure' script, removing the need of libreadline which pulls ncurses and a lot of other files, not needed when mu is only used from inside emacs.",True,{}
djcb/mu,https://github.com/djcb/mu,1871,2020-12-24T09:21:21Z,2020-12-24T15:50:02Z,2020-12-24T15:50:13Z,MERGED,True,7,4,1,https://github.com/juanjosegarciaripoll,Make libreadline really optional.,1,[],https://github.com/djcb/mu/pull/1871,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1871#issuecomment-750915462,"Add a --disable-readline argument to the 'configure' script, removing the need of libreadline which pulls ncurses and a lot of other files, not needed when mu is only used from inside emacs.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1874,2020-12-26T08:05:10Z,2020-12-26T11:54:01Z,2021-09-30T16:13:47Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Remove null byte added probably by error,1,[],https://github.com/djcb/mu/pull/1874,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1874,"I found a null byte at eol added probably by error in commit 57d38aa.
See https://debbugs.gnu.org/cgi/bugreport.cgi?bug=44486 for infos about null bytes in lisp buffers.
Also here the output of shell command rg mu4e-view-save-attachment-multi from mu4e directory (file is recognized as binary):
mu4e-view.el
140:     (""Ssave multi"" . mu4e-view-save-attachment-multi)
WARNING: stopped searching binary file mu4e-view.el after match (found ""\u{0}"" byte around offset 22103)","I found a null byte at eol added probably by error in commit 57d38aa.
See https://debbugs.gnu.org/cgi/bugreport.cgi?bug=44486 for infos about null bytes in lisp buffers.
Also here the output of shell command rg mu4e-view-save-attachment-multi from mu4e directory (file is recognized as binary):
mu4e-view.el
140:     (""Ssave multi"" . mu4e-view-save-attachment-multi)
WARNING: stopped searching binary file mu4e-view.el after match (found ""\u{0}"" byte around offset 22103)",True,{}
djcb/mu,https://github.com/djcb/mu,1874,2020-12-26T08:05:10Z,2020-12-26T11:54:01Z,2021-09-30T16:13:47Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Remove null byte added probably by error,1,[],https://github.com/djcb/mu/pull/1874,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1874#issuecomment-751348524,"I found a null byte at eol added probably by error in commit 57d38aa.
See https://debbugs.gnu.org/cgi/bugreport.cgi?bug=44486 for infos about null bytes in lisp buffers.
Also here the output of shell command rg mu4e-view-save-attachment-multi from mu4e directory (file is recognized as binary):
mu4e-view.el
140:     (""Ssave multi"" . mu4e-view-save-attachment-multi)
WARNING: stopped searching binary file mu4e-view.el after match (found ""\u{0}"" byte around offset 22103)","Oh, good catch. Thanks, merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1875,2020-12-27T08:54:53Z,2021-01-11T07:45:13Z,2021-09-30T16:21:09Z,MERGED,True,49,2,1,https://github.com/thierryvolpiatto,Fix #1790 by providing mu4e-view-gnus-save-mime-parts,1,[],https://github.com/djcb/mu/pull/1875,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1875,"in replacement of mu4e-view-save-attachment-multi for gnus viewers.
The alias mu4e-view-save-attachment have been replaced by a wrapper function
that calls either mu4e-view-save-attachment-multi or
mu4e-view-gnus-save-mime-parts depending of the context.","in replacement of mu4e-view-save-attachment-multi for gnus viewers.
The alias mu4e-view-save-attachment have been replaced by a wrapper function
that calls either mu4e-view-save-attachment-multi or
mu4e-view-gnus-save-mime-parts depending of the context.",True,{}
djcb/mu,https://github.com/djcb/mu,1875,2020-12-27T08:54:53Z,2021-01-11T07:45:13Z,2021-09-30T16:21:09Z,MERGED,True,49,2,1,https://github.com/thierryvolpiatto,Fix #1790 by providing mu4e-view-gnus-save-mime-parts,1,[],https://github.com/djcb/mu/pull/1875,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1875#issuecomment-757680716,"in replacement of mu4e-view-save-attachment-multi for gnus viewers.
The alias mu4e-view-save-attachment have been replaced by a wrapper function
that calls either mu4e-view-save-attachment-multi or
mu4e-view-gnus-save-mime-parts depending of the context.","Nice! Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1883,2021-01-01T17:00:36Z,2021-01-01T17:36:19Z,2021-01-01T17:36:36Z,CLOSED,False,20,7,1,https://github.com/ebellani,Add message counts to `mu4e-ask-bookmark`,1,[],https://github.com/djcb/mu/pull/1883,https://github.com/ebellani,1,https://github.com/djcb/mu/pull/1883,"This is specially useful for using bookmarks if mu4e-split-view is in the
'single-window mode.","This is specially useful for using bookmarks if mu4e-split-view is in the
'single-window mode.",True,{}
djcb/mu,https://github.com/djcb/mu,1884,2021-01-01T17:38:34Z,,2021-01-01T17:38:34Z,OPEN,False,20,7,1,https://github.com/ebellani,Add message counts to `mu4e-ask-bookmark`,1,[],https://github.com/djcb/mu/pull/1884,https://github.com/ebellani,1,https://github.com/djcb/mu/pull/1884,"This is specially useful for using bookmarks if one does not frequent the main
view window a lot. (For instance mu4e-split-view is set to 'single-window mode)","This is specially useful for using bookmarks if one does not frequent the main
view window a lot. (For instance mu4e-split-view is set to 'single-window mode)",True,{}
djcb/mu,https://github.com/djcb/mu,1885,2021-01-03T11:42:43Z,2021-01-03T12:29:28Z,2021-01-03T13:22:57Z,MERGED,True,10,4,1,https://github.com/tsdh,"Debugger entered--Lisp error: (error ""Selecting deleted buffer"") when quitting mu4e",1,[],https://github.com/djcb/mu/pull/1885,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/1885,"Oftentimes I get this error when quitting mu4e by tying q in the mu4e buffer.
Debugger entered--Lisp error: (error ""Selecting deleted buffer"")
  #f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>)(#<killed buffer>)
  mapc(#f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>) (#<killed buffer> #<buffer  *Minibuf-1*> #<killed buffer> #<buffer  *mu4e-loading*> #<buffer *Help*> #<buffer magit: auctex> #<buffer *scratch*> #<killed buffer> #<buffer preview.el.in> #<buffer preview.el> #<buffer *~/tmp/3 output*> #<buffer  *Minibuf-0*> #<buffer *Messages*> #<buffer  *Echo Area 0*> #<buffer  *Echo Area 1*> #<buffer  *code-conversion-work*> #<buffer  *eldoc*> #<buffer *~/tmp/1 output*> #<buffer *TeX Help*> #<buffer 3.log> #<buffer  *mu4e-proc*> #<buffer  *appease-gnus*> #<buffer  *gnus work*> #<buffer  *canonical address*> #<buffer  *extract address components*> #<buffer *Backtrace*> #<buffer *Completions*> #<buffer  *company-posframe-buffer*> #<buffer  *company-posframe-quickhelp-buffer*> #<buffer  *which-key*> #<buffer *rdictcc*> #<buffer *trace of SMTP session to smtp.fastmail.com*> #<killed buffer> #<killed buffer> #<killed buffer>))
  mu4e~stop()
  mu4e-quit()
  funcall-interactively(mu4e-quit)
  call-interactively(mu4e-quit nil nil)
  command-execute(mu4e-quit)

The problem is that mu4e~stop iterates all buffers in (buffer-list) and selects each of them using with-current-buffer which fails with above error if it is an already killed buffer.  I think the reason for having killed buffers comes from mu4e~view-gnus adding a kill-buffer-hook function for the view buffer so that killing that buffer kills other buffers, too, which are also returned by (buffer-list).  So I've added a buffer-live-p check.","Oftentimes I get this error when quitting mu4e by tying q in the mu4e buffer.
Debugger entered--Lisp error: (error ""Selecting deleted buffer"")
  #f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>)(#<killed buffer>)
  mapc(#f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>) (#<killed buffer> #<buffer  *Minibuf-1*> #<killed buffer> #<buffer  *mu4e-loading*> #<buffer *Help*> #<buffer magit: auctex> #<buffer *scratch*> #<killed buffer> #<buffer preview.el.in> #<buffer preview.el> #<buffer *~/tmp/3 output*> #<buffer  *Minibuf-0*> #<buffer *Messages*> #<buffer  *Echo Area 0*> #<buffer  *Echo Area 1*> #<buffer  *code-conversion-work*> #<buffer  *eldoc*> #<buffer *~/tmp/1 output*> #<buffer *TeX Help*> #<buffer 3.log> #<buffer  *mu4e-proc*> #<buffer  *appease-gnus*> #<buffer  *gnus work*> #<buffer  *canonical address*> #<buffer  *extract address components*> #<buffer *Backtrace*> #<buffer *Completions*> #<buffer  *company-posframe-buffer*> #<buffer  *company-posframe-quickhelp-buffer*> #<buffer  *which-key*> #<buffer *rdictcc*> #<buffer *trace of SMTP session to smtp.fastmail.com*> #<killed buffer> #<killed buffer> #<killed buffer>))
  mu4e~stop()
  mu4e-quit()
  funcall-interactively(mu4e-quit)
  call-interactively(mu4e-quit nil nil)
  command-execute(mu4e-quit)

The problem is that mu4e~stop iterates all buffers in (buffer-list) and selects each of them using with-current-buffer which fails with above error if it is an already killed buffer.  I think the reason for having killed buffers comes from mu4e~view-gnus adding a kill-buffer-hook function for the view buffer so that killing that buffer kills other buffers, too, which are also returned by (buffer-list).  So I've added a buffer-live-p check.",True,{}
djcb/mu,https://github.com/djcb/mu,1885,2021-01-03T11:42:43Z,2021-01-03T12:29:28Z,2021-01-03T13:22:57Z,MERGED,True,10,4,1,https://github.com/tsdh,"Debugger entered--Lisp error: (error ""Selecting deleted buffer"") when quitting mu4e",1,[],https://github.com/djcb/mu/pull/1885,https://github.com/tsdh,2,https://github.com/djcb/mu/pull/1885#issuecomment-753605064,"Oftentimes I get this error when quitting mu4e by tying q in the mu4e buffer.
Debugger entered--Lisp error: (error ""Selecting deleted buffer"")
  #f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>)(#<killed buffer>)
  mapc(#f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>) (#<killed buffer> #<buffer  *Minibuf-1*> #<killed buffer> #<buffer  *mu4e-loading*> #<buffer *Help*> #<buffer magit: auctex> #<buffer *scratch*> #<killed buffer> #<buffer preview.el.in> #<buffer preview.el> #<buffer *~/tmp/3 output*> #<buffer  *Minibuf-0*> #<buffer *Messages*> #<buffer  *Echo Area 0*> #<buffer  *Echo Area 1*> #<buffer  *code-conversion-work*> #<buffer  *eldoc*> #<buffer *~/tmp/1 output*> #<buffer *TeX Help*> #<buffer 3.log> #<buffer  *mu4e-proc*> #<buffer  *appease-gnus*> #<buffer  *gnus work*> #<buffer  *canonical address*> #<buffer  *extract address components*> #<buffer *Backtrace*> #<buffer *Completions*> #<buffer  *company-posframe-buffer*> #<buffer  *company-posframe-quickhelp-buffer*> #<buffer  *which-key*> #<buffer *rdictcc*> #<buffer *trace of SMTP session to smtp.fastmail.com*> #<killed buffer> #<killed buffer> #<killed buffer>))
  mu4e~stop()
  mu4e-quit()
  funcall-interactively(mu4e-quit)
  call-interactively(mu4e-quit nil nil)
  command-execute(mu4e-quit)

The problem is that mu4e~stop iterates all buffers in (buffer-list) and selects each of them using with-current-buffer which fails with above error if it is an already killed buffer.  I think the reason for having killed buffers comes from mu4e~view-gnus adding a kill-buffer-hook function for the view buffer so that killing that buffer kills other buffers, too, which are also returned by (buffer-list).  So I've added a buffer-live-p check.","(In case you are wondering about the self-reference ""fixes #1885"", I first created an issue and then used Magit/Forge to create a PR from an Issue and didn't know that it would convert the issue to a PR.)",True,{}
djcb/mu,https://github.com/djcb/mu,1885,2021-01-03T11:42:43Z,2021-01-03T12:29:28Z,2021-01-03T13:22:57Z,MERGED,True,10,4,1,https://github.com/tsdh,"Debugger entered--Lisp error: (error ""Selecting deleted buffer"") when quitting mu4e",1,[],https://github.com/djcb/mu/pull/1885,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1885#issuecomment-753609828,"Oftentimes I get this error when quitting mu4e by tying q in the mu4e buffer.
Debugger entered--Lisp error: (error ""Selecting deleted buffer"")
  #f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>)(#<killed buffer>)
  mapc(#f(compiled-function (buf) #<bytecode -0xd27d395f5e1de6d>) (#<killed buffer> #<buffer  *Minibuf-1*> #<killed buffer> #<buffer  *mu4e-loading*> #<buffer *Help*> #<buffer magit: auctex> #<buffer *scratch*> #<killed buffer> #<buffer preview.el.in> #<buffer preview.el> #<buffer *~/tmp/3 output*> #<buffer  *Minibuf-0*> #<buffer *Messages*> #<buffer  *Echo Area 0*> #<buffer  *Echo Area 1*> #<buffer  *code-conversion-work*> #<buffer  *eldoc*> #<buffer *~/tmp/1 output*> #<buffer *TeX Help*> #<buffer 3.log> #<buffer  *mu4e-proc*> #<buffer  *appease-gnus*> #<buffer  *gnus work*> #<buffer  *canonical address*> #<buffer  *extract address components*> #<buffer *Backtrace*> #<buffer *Completions*> #<buffer  *company-posframe-buffer*> #<buffer  *company-posframe-quickhelp-buffer*> #<buffer  *which-key*> #<buffer *rdictcc*> #<buffer *trace of SMTP session to smtp.fastmail.com*> #<killed buffer> #<killed buffer> #<killed buffer>))
  mu4e~stop()
  mu4e-quit()
  funcall-interactively(mu4e-quit)
  call-interactively(mu4e-quit nil nil)
  command-execute(mu4e-quit)

The problem is that mu4e~stop iterates all buffers in (buffer-list) and selects each of them using with-current-buffer which fails with above error if it is an already killed buffer.  I think the reason for having killed buffers comes from mu4e~view-gnus adding a kill-buffer-hook function for the view buffer so that killing that buffer kills other buffers, too, which are also returned by (buffer-list).  So I've added a buffer-live-p check.","Nice, thanks. Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1887,2021-01-04T15:17:52Z,2021-01-11T08:25:18Z,2021-01-11T08:25:18Z,CLOSED,False,1,1,1,https://github.com/wavexx,Fix 'mu4e-interrupt-update-mail alias definition,1,[],https://github.com/djcb/mu/pull/1887,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/1887,Fixes build during byte-compilation.,Fixes build during byte-compilation.,True,"{'THUMBS_UP': ['https://github.com/tsdh', 'https://github.com/emacsomancer']}"
djcb/mu,https://github.com/djcb/mu,1887,2021-01-04T15:17:52Z,2021-01-11T08:25:18Z,2021-01-11T08:25:18Z,CLOSED,False,1,1,1,https://github.com/wavexx,Fix 'mu4e-interrupt-update-mail alias definition,1,[],https://github.com/djcb/mu/pull/1887,https://github.com/tsdh,2,https://github.com/djcb/mu/pull/1887#issuecomment-755280296,Fixes build during byte-compilation.,"For the context, the WHEN argument in all obsoletion macros is now required since a recent change to emacs master (aka 28).  Its omission has been declared problematic and generated a warning since emacs 23.1.",True,{}
djcb/mu,https://github.com/djcb/mu,1887,2021-01-04T15:17:52Z,2021-01-11T08:25:18Z,2021-01-11T08:25:18Z,CLOSED,False,1,1,1,https://github.com/wavexx,Fix 'mu4e-interrupt-update-mail alias definition,1,[],https://github.com/djcb/mu/pull/1887,https://github.com/epaulson10,3,https://github.com/djcb/mu/pull/1887#issuecomment-757554799,Fixes build during byte-compilation.,"I opened #1895 to fix this before I saw this PR. I’ll close mine to let you have the glory, though I suggest changing the when value to “1.0-alpha0” which is the first tag that contains the commit that added the alias.",True,{}
djcb/mu,https://github.com/djcb/mu,1887,2021-01-04T15:17:52Z,2021-01-11T08:25:18Z,2021-01-11T08:25:18Z,CLOSED,False,1,1,1,https://github.com/wavexx,Fix 'mu4e-interrupt-update-mail alias definition,1,[],https://github.com/djcb/mu/pull/1887,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1887#issuecomment-757705475,Fixes build during byte-compilation.,"Thanks, merged this locallly (with a small change for the version, as epaulson10 suggest).",True,{}
djcb/mu,https://github.com/djcb/mu,1894,2021-01-10T06:52:34Z,2021-06-12T15:32:28Z,2021-06-12T15:32:29Z,CLOSED,False,6,0,1,https://github.com/stardiviner,Add a hook on switching from mu4e-compose-mode to org-mode,1,[],https://github.com/djcb/mu/pull/1894,https://github.com/stardiviner,1,https://github.com/djcb/mu/pull/1894,"I want to enable some settings locally only when mu4e-compose-mode switching to org-mode.
Here is an example:
(when (boundp 'org-mu4e-compose-switch-org-mode-hook)
    (add-hook 'org-mu4e-compose-switch-org-mode-hook
              (lambda ()
                (with-eval-after-load 'company
                  (add-to-list 'company-backends 'company-ispell 'append)))))","I want to enable some settings locally only when mu4e-compose-mode switching to org-mode.
Here is an example:
(when (boundp 'org-mu4e-compose-switch-org-mode-hook)
    (add-hook 'org-mu4e-compose-switch-org-mode-hook
              (lambda ()
                (with-eval-after-load 'company
                  (add-to-list 'company-backends 'company-ispell 'append)))))",True,{}
djcb/mu,https://github.com/djcb/mu,1894,2021-01-10T06:52:34Z,2021-06-12T15:32:28Z,2021-06-12T15:32:29Z,CLOSED,False,6,0,1,https://github.com/stardiviner,Add a hook on switching from mu4e-compose-mode to org-mode,1,[],https://github.com/djcb/mu/pull/1894,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1894#issuecomment-860069187,"I want to enable some settings locally only when mu4e-compose-mode switching to org-mode.
Here is an example:
(when (boundp 'org-mu4e-compose-switch-org-mode-hook)
    (add-hook 'org-mu4e-compose-switch-org-mode-hook
              (lambda ()
                (with-eval-after-load 'company
                  (add-to-list 'company-backends 'company-ispell 'append)))))","Thanks for the effort, but org-mu4e-compose has been obsolete for many years, so I'm not going to add any changes for that, sorry...",True,{}
djcb/mu,https://github.com/djcb/mu,1895,2021-01-10T22:08:57Z,2021-01-10T22:25:59Z,2021-01-10T22:25:59Z,CLOSED,False,1,1,1,https://github.com/epaulson10,Add missing when parameter to define-obsolete-function-alias,1,[],https://github.com/djcb/mu/pull/1895,https://github.com/epaulson10,1,https://github.com/djcb/mu/pull/1895,"Emacs 28 is making this 'when' argument mandatory, as the
'make-obsolete' and related functions without a 'when' were marked as
obsolete in Emacs 23.1.
I used 'git tag --contains b6985e1' to determine the value of
'when'.","Emacs 28 is making this 'when' argument mandatory, as the
'make-obsolete' and related functions without a 'when' were marked as
obsolete in Emacs 23.1.
I used 'git tag --contains b6985e1' to determine the value of
'when'.",True,{}
djcb/mu,https://github.com/djcb/mu,1895,2021-01-10T22:08:57Z,2021-01-10T22:25:59Z,2021-01-10T22:25:59Z,CLOSED,False,1,1,1,https://github.com/epaulson10,Add missing when parameter to define-obsolete-function-alias,1,[],https://github.com/djcb/mu/pull/1895,https://github.com/epaulson10,2,https://github.com/djcb/mu/pull/1895#issuecomment-757554905,"Emacs 28 is making this 'when' argument mandatory, as the
'make-obsolete' and related functions without a 'when' were marked as
obsolete in Emacs 23.1.
I used 'git tag --contains b6985e1' to determine the value of
'when'.",Closing because #1887 beat me to fixing this bug.,True,{}
djcb/mu,https://github.com/djcb/mu,1898,2021-01-13T10:53:01Z,2021-01-15T19:16:27Z,2021-04-01T17:36:37Z,MERGED,True,2,0,1,https://github.com/Chris00,Restore C-h b default behavior,1,[],https://github.com/djcb/mu/pull/1898,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1898,Fixes #1842,Fixes #1842,True,{}
djcb/mu,https://github.com/djcb/mu,1898,2021-01-13T10:53:01Z,2021-01-15T19:16:27Z,2021-04-01T17:36:37Z,MERGED,True,2,0,1,https://github.com/Chris00,Restore C-h b default behavior,1,[],https://github.com/djcb/mu/pull/1898,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1898#issuecomment-761135083,Fixes #1842,"Great, thanks! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,1899,2021-01-13T17:38:09Z,2021-04-12T21:07:22Z,2021-04-12T21:07:22Z,CLOSED,False,2,1,1,https://github.com/Chris00,Do not show trailing whitespace when viewing messages,1,[],https://github.com/djcb/mu/pull/1899,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1899,,,True,{}
djcb/mu,https://github.com/djcb/mu,1899,2021-01-13T17:38:09Z,2021-04-12T21:07:22Z,2021-04-12T21:07:22Z,CLOSED,False,2,1,1,https://github.com/Chris00,Do not show trailing whitespace when viewing messages,1,[],https://github.com/djcb/mu/pull/1899,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1899#issuecomment-761136437,,"Hmm, isn't show-trailing-whitespace is nil by default?",True,{}
djcb/mu,https://github.com/djcb/mu,1899,2021-01-13T17:38:09Z,2021-04-12T21:07:22Z,2021-04-12T21:07:22Z,CLOSED,False,2,1,1,https://github.com/Chris00,Do not show trailing whitespace when viewing messages,1,[],https://github.com/djcb/mu/pull/1899,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1899#issuecomment-761148522,,"It is.  I saw that being done in Gnus — maybe an artifact of the past before the variable was buffer local?
…
On 15 January 2021 at 20:19 CET, Dirk-Jan C. Binnema ***@***.***> wrote:

 Hmm, isn't show-trailing-whitespace is nil by default?",True,{}
djcb/mu,https://github.com/djcb/mu,1899,2021-01-13T17:38:09Z,2021-04-12T21:07:22Z,2021-04-12T21:07:22Z,CLOSED,False,2,1,1,https://github.com/Chris00,Do not show trailing whitespace when viewing messages,1,[],https://github.com/djcb/mu/pull/1899,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/1899#issuecomment-761548044,,"Specifically, you can find it here.  Maybe you would prefer it to be applied only when mu4e-view-mode derives from special-mode since it will be applied anyway in the other case?",True,{}
djcb/mu,https://github.com/djcb/mu,1899,2021-01-13T17:38:09Z,2021-04-12T21:07:22Z,2021-04-12T21:07:22Z,CLOSED,False,2,1,1,https://github.com/Chris00,Do not show trailing whitespace when viewing messages,1,[],https://github.com/djcb/mu/pull/1899,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/1899#issuecomment-818237893,,"Now that (setq show-trailing-whitespace nil) is part of gnus-article-mode, it will eventually apply to mu4e.  Closing.",True,{}
djcb/mu,https://github.com/djcb/mu,1900,2021-01-14T08:42:55Z,2021-01-18T06:22:30Z,2021-01-18T06:22:33Z,MERGED,True,12,4,1,https://github.com/Chris00,Fix the decoding of accents in Gnus view,1,[],https://github.com/djcb/mu/pull/1900,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1900,"Followup on #1823
Fixes #1886","Followup on #1823
Fixes #1886",True,{}
djcb/mu,https://github.com/djcb/mu,1900,2021-01-14T08:42:55Z,2021-01-18T06:22:30Z,2021-01-18T06:22:33Z,MERGED,True,12,4,1,https://github.com/Chris00,Fix the decoding of accents in Gnus view,1,[],https://github.com/djcb/mu/pull/1900,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1900#issuecomment-762012543,"Followup on #1823
Fixes #1886",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1910,2021-01-22T22:23:43Z,2021-01-23T08:57:34Z,2021-01-23T08:58:28Z,MERGED,True,1,1,1,https://github.com/rhgg2,Make order relation on contacts antisymmetric,1,[],https://github.com/djcb/mu/pull/1910,https://github.com/rhgg2,1,https://github.com/djcb/mu/pull/1910,"The behaviour suggested in #1857 (and the old behaviour of mu4e when that did the sorting) is that if exactly one of ci1 or ci2 was seen in the last 15 days, then that should be selected as first in the order by ContactInfoLessThan. As it stands, we return the most recent of ci1 and ci2 as least in the order only when ci1 was seen in the last 15 days. So if ci2 was seen in the last 15 days, but ci1 was not, it will fall through to a comparison on frequency; while if ci1 was seen in the last 15 days, but ci2 was not, it will always return ci1 as least. This is not antisymmetric in ci1 and ci2.","The behaviour suggested in #1857 (and the old behaviour of mu4e when that did the sorting) is that if exactly one of ci1 or ci2 was seen in the last 15 days, then that should be selected as first in the order by ContactInfoLessThan. As it stands, we return the most recent of ci1 and ci2 as least in the order only when ci1 was seen in the last 15 days. So if ci2 was seen in the last 15 days, but ci1 was not, it will fall through to a comparison on frequency; while if ci1 was seen in the last 15 days, but ci2 was not, it will always return ci1 as least. This is not antisymmetric in ci1 and ci2.",True,{}
djcb/mu,https://github.com/djcb/mu,1910,2021-01-22T22:23:43Z,2021-01-23T08:57:34Z,2021-01-23T08:58:28Z,MERGED,True,1,1,1,https://github.com/rhgg2,Make order relation on contacts antisymmetric,1,[],https://github.com/djcb/mu/pull/1910,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1910#issuecomment-765891833,"The behaviour suggested in #1857 (and the old behaviour of mu4e when that did the sorting) is that if exactly one of ci1 or ci2 was seen in the last 15 days, then that should be selected as first in the order by ContactInfoLessThan. As it stands, we return the most recent of ci1 and ci2 as least in the order only when ci1 was seen in the last 15 days. So if ci2 was seen in the last 15 days, but ci1 was not, it will fall through to a comparison on frequency; while if ci1 was seen in the last 15 days, but ci2 was not, it will always return ci1 as least. This is not antisymmetric in ci1 and ci2.","Yeah, not quite sure what I was thinking... thanks for the fix.",True,{}
djcb/mu,https://github.com/djcb/mu,1913,2021-01-26T02:12:10Z,2021-03-03T10:06:41Z,2021-03-03T10:06:53Z,MERGED,True,50,0,1,https://github.com/plantarum,Documented icalendar capture template,3,[],https://github.com/djcb/mu/pull/1913,https://github.com/plantarum,1,https://github.com/djcb/mu/pull/1913,"It's not documented in gnus-icalendar, so the explanation comes straight from my reading of the code.
Being able to customize the capture template partially addresses the issue I raised in #1912. gnus-icalendar supports this, in an undocumented way, and the code comments suggest the details may change eventually.","It's not documented in gnus-icalendar, so the explanation comes straight from my reading of the code.
Being able to customize the capture template partially addresses the issue I raised in #1912. gnus-icalendar supports this, in an undocumented way, and the code comments suggest the details may change eventually.",True,{}
djcb/mu,https://github.com/djcb/mu,1913,2021-01-26T02:12:10Z,2021-03-03T10:06:41Z,2021-03-03T10:06:53Z,MERGED,True,50,0,1,https://github.com/plantarum,Documented icalendar capture template,3,[],https://github.com/djcb/mu/pull/1913,https://github.com/plantarum,2,https://github.com/djcb/mu/pull/1913#issuecomment-767635569,"It's not documented in gnus-icalendar, so the explanation comes straight from my reading of the code.
Being able to customize the capture template partially addresses the issue I raised in #1912. gnus-icalendar supports this, in an undocumented way, and the code comments suggest the details may change eventually.",This now completely addresses #1912.,True,{}
djcb/mu,https://github.com/djcb/mu,1913,2021-01-26T02:12:10Z,2021-03-03T10:06:41Z,2021-03-03T10:06:53Z,MERGED,True,50,0,1,https://github.com/plantarum,Documented icalendar capture template,3,[],https://github.com/djcb/mu/pull/1913,https://github.com/plantarum,3,https://github.com/djcb/mu/pull/1913#issuecomment-767700332,"It's not documented in gnus-icalendar, so the explanation comes straight from my reading of the code.
Being able to customize the capture template partially addresses the issue I raised in #1912. gnus-icalendar supports this, in an undocumented way, and the code comments suggest the details may change eventually.","Sorry, I don't understand why the checks have failed. I only changed one file, the info source, and the error appears to reference something else.
Running make locally succeeds for me, and calling makeinfo on the info file doesn't report any errors.",True,{}
djcb/mu,https://github.com/djcb/mu,1913,2021-01-26T02:12:10Z,2021-03-03T10:06:41Z,2021-03-03T10:06:53Z,MERGED,True,50,0,1,https://github.com/plantarum,Documented icalendar capture template,3,[],https://github.com/djcb/mu/pull/1913,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1913#issuecomment-789595871,"It's not documented in gnus-icalendar, so the explanation comes straight from my reading of the code.
Being able to customize the capture template partially addresses the issue I raised in #1912. gnus-icalendar supports this, in an undocumented way, and the code comments suggest the details may change eventually.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1921,2021-02-03T13:59:25Z,2021-02-11T22:53:07Z,2021-02-12T22:34:18Z,MERGED,True,25,14,2,https://github.com/tsdh,mu4e-jump-to-maildir: offer editing the query when a prefix arg is given,1,[],https://github.com/djcb/mu/pull/1921,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/1921,"I have many maildirs (because I also use other clients, like a mobile one, which haven't the searching super-powers of mu) and configured shortcuts for them.  Frequently, I want to read such a maildir but do not want to see all messages but just unread messages or messages with attachments.  For such purposes, I've added an optional prefix arg to mu4e-jump-to-maildir which allows the maildir:""/foo/bar"" query to be refined/extended before execution.  So it's basically the same as for bookmarks, i.e., B instead of b.
If you want, I can also add a new command bound to J which calls mu4e-jump-to-maildir with non-nil prefix arg so that j and J are really analogous to b and B.
I've adapted docstring and texi docs accordingly.
I also refactored the now two usages of the ""read a query with completion"" feature into a new separate function mu4e-read-query.","I have many maildirs (because I also use other clients, like a mobile one, which haven't the searching super-powers of mu) and configured shortcuts for them.  Frequently, I want to read such a maildir but do not want to see all messages but just unread messages or messages with attachments.  For such purposes, I've added an optional prefix arg to mu4e-jump-to-maildir which allows the maildir:""/foo/bar"" query to be refined/extended before execution.  So it's basically the same as for bookmarks, i.e., B instead of b.
If you want, I can also add a new command bound to J which calls mu4e-jump-to-maildir with non-nil prefix arg so that j and J are really analogous to b and B.
I've adapted docstring and texi docs accordingly.
I also refactored the now two usages of the ""read a query with completion"" feature into a new separate function mu4e-read-query.",True,{}
djcb/mu,https://github.com/djcb/mu,1921,2021-02-03T13:59:25Z,2021-02-11T22:53:07Z,2021-02-12T22:34:18Z,MERGED,True,25,14,2,https://github.com/tsdh,mu4e-jump-to-maildir: offer editing the query when a prefix arg is given,1,[],https://github.com/djcb/mu/pull/1921,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1921#issuecomment-777846347,"I have many maildirs (because I also use other clients, like a mobile one, which haven't the searching super-powers of mu) and configured shortcuts for them.  Frequently, I want to read such a maildir but do not want to see all messages but just unread messages or messages with attachments.  For such purposes, I've added an optional prefix arg to mu4e-jump-to-maildir which allows the maildir:""/foo/bar"" query to be refined/extended before execution.  So it's basically the same as for bookmarks, i.e., B instead of b.
If you want, I can also add a new command bound to J which calls mu4e-jump-to-maildir with non-nil prefix arg so that j and J are really analogous to b and B.
I've adapted docstring and texi docs accordingly.
I also refactored the now two usages of the ""read a query with completion"" feature into a new separate function mu4e-read-query.","Looks useful, thanks!",True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,1931,2021-02-17T15:27:55Z,2021-02-17T19:54:05Z,2021-02-17T21:13:55Z,MERGED,True,3,9,1,https://github.com/tsdh,Read query with completion also when editing a bookmark,1,[],https://github.com/djcb/mu/pull/1931,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/1931,"This wraps up some change that somehow didn't get applied when merging PR #1921
and also offers completion when editing a bookmark (which I've forgotten in
that PR).","This wraps up some change that somehow didn't get applied when merging PR #1921
and also offers completion when editing a bookmark (which I've forgotten in
that PR).",True,{}
djcb/mu,https://github.com/djcb/mu,1931,2021-02-17T15:27:55Z,2021-02-17T19:54:05Z,2021-02-17T21:13:55Z,MERGED,True,3,9,1,https://github.com/tsdh,Read query with completion also when editing a bookmark,1,[],https://github.com/djcb/mu/pull/1931,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1931#issuecomment-780811672,"This wraps up some change that somehow didn't get applied when merging PR #1921
and also offers completion when editing a bookmark (which I've forgotten in
that PR).","Merged, thanks!",True,{'THUMBS_UP': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,1934,2021-02-20T12:11:52Z,2021-03-17T16:36:48Z,2021-03-17T17:52:16Z,CLOSED,False,36,0,1,https://github.com/haji-ali,mu4e-compose-context-switch for context switching in mu4e:compose buffers,1,[],https://github.com/djcb/mu/pull/1934,https://github.com/haji-ali,1,https://github.com/djcb/mu/pull/1934,"Fixes #1772 by implementing context switching in mu4e-compose which also changes the From and moves the draft to the correct folder.
This mostly works. However, after switching context mu4e~proc-move opens a message view even though I pass t to no-view (I would rather not open the view).
One also has to press E to edit the viewed message. I want to call mu4e~proc-compose at the end to open the newly moved message automatically, but I can't find a way to get the doc-id from the message-id.","Fixes #1772 by implementing context switching in mu4e-compose which also changes the From and moves the draft to the correct folder.
This mostly works. However, after switching context mu4e~proc-move opens a message view even though I pass t to no-view (I would rather not open the view).
One also has to press E to edit the viewed message. I want to call mu4e~proc-compose at the end to open the newly moved message automatically, but I can't find a way to get the doc-id from the message-id.",True,{}
djcb/mu,https://github.com/djcb/mu,1934,2021-02-20T12:11:52Z,2021-03-17T16:36:48Z,2021-03-17T17:52:16Z,CLOSED,False,36,0,1,https://github.com/haji-ali,mu4e-compose-context-switch for context switching in mu4e:compose buffers,1,[],https://github.com/djcb/mu/pull/1934,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1934#issuecomment-801232481,"Fixes #1772 by implementing context switching in mu4e-compose which also changes the From and moves the draft to the correct folder.
This mostly works. However, after switching context mu4e~proc-move opens a message view even though I pass t to no-view (I would rather not open the view).
One also has to press E to edit the viewed message. I want to call mu4e~proc-compose at the end to open the newly moved message automatically, but I can't find a way to get the doc-id from the message-id.",Looks good! Merged this locally with some minor changes.,True,{}
djcb/mu,https://github.com/djcb/mu,1934,2021-02-20T12:11:52Z,2021-03-17T16:36:48Z,2021-03-17T17:52:16Z,CLOSED,False,36,0,1,https://github.com/haji-ali,mu4e-compose-context-switch for context switching in mu4e:compose buffers,1,[],https://github.com/djcb/mu/pull/1934,https://github.com/haji-ali,3,https://github.com/djcb/mu/pull/1934#issuecomment-801287956,"Fixes #1772 by implementing context switching in mu4e-compose which also changes the From and moves the draft to the correct folder.
This mostly works. However, after switching context mu4e~proc-move opens a message view even though I pass t to no-view (I would rather not open the view).
One also has to press E to edit the viewed message. I want to call mu4e~proc-compose at the end to open the newly moved message automatically, but I can't find a way to get the doc-id from the message-id.","That's great @djcb.
Just one question. I want to add a call to mu4e~proc-compose on the newly moved message at the end of the context switching so that one can continue with editing the message. However, I can't seem to find a way to get a doc-id (which mu4e~proc-compose accepts) out of a message-id (which I have). Is there a way to do this?",True,{}
djcb/mu,https://github.com/djcb/mu,1937,2021-02-23T20:55:14Z,2021-03-03T10:07:32Z,2021-09-30T16:13:46Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Fix error in mu4e-view-gnus-save-mime-parts,1,[],https://github.com/djcb/mu/pull/1937,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1937,"where `handle' may not be a list (here a marker when I had error).
So ensure it is a list.","where `handle' may not be a list (here a marker when I had error).
So ensure it is a list.",True,{}
djcb/mu,https://github.com/djcb/mu,1937,2021-02-23T20:55:14Z,2021-03-03T10:07:32Z,2021-09-30T16:13:46Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Fix error in mu4e-view-gnus-save-mime-parts,1,[],https://github.com/djcb/mu/pull/1937,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1937#issuecomment-789596369,"where `handle' may not be a list (here a marker when I had error).
So ensure it is a list.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1948,2021-03-16T16:35:32Z,2021-03-16T17:55:54Z,2021-09-30T16:21:09Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Fix mu4e-view-common header line,1,[],https://github.com/djcb/mu/pull/1948,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1948,Fix typo in header line.,Fix typo in header line.,True,{}
djcb/mu,https://github.com/djcb/mu,1948,2021-03-16T16:35:32Z,2021-03-16T17:55:54Z,2021-09-30T16:21:09Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Fix mu4e-view-common header line,1,[],https://github.com/djcb/mu/pull/1948,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1948#issuecomment-800483167,Fix typo in header line.,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1950,2021-03-16T20:33:35Z,2021-03-16T23:50:01Z,2021-03-16T23:50:14Z,MERGED,True,10,11,1,https://github.com/Chris00,Fix warnings in mu4e-icalendar,4,[],https://github.com/djcb/mu/pull/1950,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1950,,,True,{}
djcb/mu,https://github.com/djcb/mu,1950,2021-03-16T20:33:35Z,2021-03-16T23:50:01Z,2021-03-16T23:50:14Z,MERGED,True,10,11,1,https://github.com/Chris00,Fix warnings in mu4e-icalendar,4,[],https://github.com/djcb/mu/pull/1950,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1950#issuecomment-800687942,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1951,2021-03-17T18:03:20Z,2021-03-17T21:14:27Z,2021-03-17T21:14:37Z,MERGED,True,2,1,2,https://github.com/Chris00,Make URLs clickable again,2,[],https://github.com/djcb/mu/pull/1951,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1951,"Without this, the clicking on the URL just show insert-for-yank: Buffer is read-only: #<buffer *Article*> but no action is taken.  C-h k and then clicking reports:
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mouse-drag-region
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary

Those are influenced by `mouse-1-click-follows-link'

They're all described below.

<down-mouse-1> at that spot runs the command mouse-drag-region (found
in global-map),
...
<mouse-2> (translated from <mouse-1>) at that spot runs the command
mouse-yank-primary (found in global-map),
...

After, I get
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mu4e~view-browse-url-from-binding
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary
...
<down-mouse-1> at that spot runs the command
mu4e~view-browse-url-from-binding (found in
mu4e-view-active-urls-keymap), which is an interactive Lisp closure in
‘mu4e-view-common.el’.
...","Without this, the clicking on the URL just show insert-for-yank: Buffer is read-only: #<buffer *Article*> but no action is taken.  C-h k and then clicking reports:
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mouse-drag-region
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary

Those are influenced by `mouse-1-click-follows-link'

They're all described below.

<down-mouse-1> at that spot runs the command mouse-drag-region (found
in global-map),
...
<mouse-2> (translated from <mouse-1>) at that spot runs the command
mouse-yank-primary (found in global-map),
...

After, I get
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mu4e~view-browse-url-from-binding
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary
...
<down-mouse-1> at that spot runs the command
mu4e~view-browse-url-from-binding (found in
mu4e-view-active-urls-keymap), which is an interactive Lisp closure in
‘mu4e-view-common.el’.
...",True,{}
djcb/mu,https://github.com/djcb/mu,1951,2021-03-17T18:03:20Z,2021-03-17T21:14:27Z,2021-03-17T21:14:37Z,MERGED,True,2,1,2,https://github.com/Chris00,Make URLs clickable again,2,[],https://github.com/djcb/mu/pull/1951,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1951#issuecomment-801296229,"Without this, the clicking on the URL just show insert-for-yank: Buffer is read-only: #<buffer *Article*> but no action is taken.  C-h k and then clicking reports:
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mouse-drag-region
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary

Those are influenced by `mouse-1-click-follows-link'

They're all described below.

<down-mouse-1> at that spot runs the command mouse-drag-region (found
in global-map),
...
<mouse-2> (translated from <mouse-1>) at that spot runs the command
mouse-yank-primary (found in global-map),
...

After, I get
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mu4e~view-browse-url-from-binding
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary
...
<down-mouse-1> at that spot runs the command
mu4e~view-browse-url-from-binding (found in
mu4e-view-active-urls-keymap), which is an interactive Lisp closure in
‘mu4e-view-common.el’.
...",P.S. Related to issue 1946.,True,{}
djcb/mu,https://github.com/djcb/mu,1951,2021-03-17T18:03:20Z,2021-03-17T21:14:27Z,2021-03-17T21:14:37Z,MERGED,True,2,1,2,https://github.com/Chris00,Make URLs clickable again,2,[],https://github.com/djcb/mu/pull/1951,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1951#issuecomment-801447544,"Without this, the clicking on the URL just show insert-for-yank: Buffer is read-only: #<buffer *Article*> but no action is taken.  C-h k and then clicking reports:
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mouse-drag-region
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary

Those are influenced by `mouse-1-click-follows-link'

They're all described below.

<down-mouse-1> at that spot runs the command mouse-drag-region (found
in global-map),
...
<mouse-2> (translated from <mouse-1>) at that spot runs the command
mouse-yank-primary (found in global-map),
...

After, I get
There were several key-sequences:

  <down-mouse-1> at that spot runs the command mu4e~view-browse-url-from-binding
  <mouse-2> (translated from <mouse-1>) at that spot runs the command mouse-yank-primary
...
<down-mouse-1> at that spot runs the command
mu4e~view-browse-url-from-binding (found in
mu4e-view-active-urls-keymap), which is an interactive Lisp closure in
‘mu4e-view-common.el’.
...","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1952,2021-03-18T18:32:33Z,2021-03-19T07:01:49Z,2021-03-19T07:02:01Z,MERGED,True,20,3,1,https://github.com/Chris00,mu4e/view-gnus: Make Gnus email clickable links work,1,[],https://github.com/djcb/mu/pull/1952,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1952,The From link triggers reply and the email links launch mu4e (not message-mail).,The From link triggers reply and the email links launch mu4e (not message-mail).,True,{}
djcb/mu,https://github.com/djcb/mu,1952,2021-03-18T18:32:33Z,2021-03-19T07:01:49Z,2021-03-19T07:02:01Z,MERGED,True,20,3,1,https://github.com/Chris00,mu4e/view-gnus: Make Gnus email clickable links work,1,[],https://github.com/djcb/mu/pull/1952,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1952#issuecomment-802604291,The From link triggers reply and the email links launch mu4e (not message-mail).,"Ah, that is useful. Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1953,2021-03-23T09:25:25Z,2021-03-23T15:38:27Z,2021-04-12T19:17:17Z,MERGED,True,1,1,1,https://github.com/ahttraga,Add ivy completion when saving attachments,1,[],https://github.com/djcb/mu/pull/1953,https://github.com/ahttraga,1,https://github.com/djcb/mu/pull/1953,ivy is an alternative completion framework to helm. I added an extra conditional to use completing-read to save attachments (mu4e-view-save-attachments in mu4e-view-gnus.el) when ivy is in use.,ivy is an alternative completion framework to helm. I added an extra conditional to use completing-read to save attachments (mu4e-view-save-attachments in mu4e-view-gnus.el) when ivy is in use.,True,{}
djcb/mu,https://github.com/djcb/mu,1953,2021-03-23T09:25:25Z,2021-03-23T15:38:27Z,2021-04-12T19:17:17Z,MERGED,True,1,1,1,https://github.com/ahttraga,Add ivy completion when saving attachments,1,[],https://github.com/djcb/mu/pull/1953,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1953#issuecomment-805005936,ivy is an alternative completion framework to helm. I added an extra conditional to use completing-read to save attachments (mu4e-view-save-attachments in mu4e-view-gnus.el) when ivy is in use.,"Looks useful -- merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1953,2021-03-23T09:25:25Z,2021-03-23T15:38:27Z,2021-04-12T19:17:17Z,MERGED,True,1,1,1,https://github.com/ahttraga,Add ivy completion when saving attachments,1,[],https://github.com/djcb/mu/pull/1953,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1953#issuecomment-818068145,ivy is an alternative completion framework to helm. I added an extra conditional to use completing-read to save attachments (mu4e-view-save-attachments in mu4e-view-gnus.el) when ivy is in use.,"Hmm, ivy cannot handle multiple selections (like helm does), so we can't really use it here.",True,{}
djcb/mu,https://github.com/djcb/mu,1957,2021-03-31T09:06:46Z,2021-03-31T17:18:02Z,2021-03-31T17:18:19Z,MERGED,True,0,1,1,https://github.com/stsquad,mu4e/mu4e-headers: remove excess message output,1,[],https://github.com/djcb/mu/pull/1957,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/1957,"When marking threads as read things are slowed down by echoing the
thread path to the mini-buffer. I assume this is left over debug but
if needed for something else should probably be a log call.","When marking threads as read things are slowed down by echoing the
thread path to the mini-buffer. I assume this is left over debug but
if needed for something else should probably be a log call.",True,{}
djcb/mu,https://github.com/djcb/mu,1957,2021-03-31T09:06:46Z,2021-03-31T17:18:02Z,2021-03-31T17:18:19Z,MERGED,True,0,1,1,https://github.com/stsquad,mu4e/mu4e-headers: remove excess message output,1,[],https://github.com/djcb/mu/pull/1957,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1957#issuecomment-811265948,"When marking threads as read things are slowed down by echoing the
thread path to the mini-buffer. I assume this is left over debug but
if needed for something else should probably be a log call.",Oh yeah that was debugging out. Good catch!,True,{}
djcb/mu,https://github.com/djcb/mu,1959,2021-04-01T14:08:07Z,2021-04-03T05:27:05Z,2021-04-03T05:27:38Z,MERGED,True,1,1,1,https://github.com/nbarrientos,Fix typo,1,[],https://github.com/djcb/mu/pull/1959,https://github.com/nbarrientos,1,https://github.com/djcb/mu/pull/1959,,,True,{}
djcb/mu,https://github.com/djcb/mu,1959,2021-04-01T14:08:07Z,2021-04-03T05:27:05Z,2021-04-03T05:27:38Z,MERGED,True,1,1,1,https://github.com/nbarrientos,Fix typo,1,[],https://github.com/djcb/mu/pull/1959,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1959#issuecomment-812814871,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1960,2021-04-03T21:28:57Z,2021-04-04T10:08:39Z,2021-04-04T10:08:58Z,MERGED,True,17,12,2,https://github.com/sje30,Respect switch-function in compose-mail.,1,[],https://github.com/djcb/mu/pull/1960,https://github.com/sje30,1,https://github.com/djcb/mu/pull/1960,"Emacs has several standard keybindings
C-x m   compose-mail
C-x 4 m compose-mail-other-window
C-x 5 m compose-mail-other-frame
This patch fixes the creation of new mail buffers to respect the
latter two keybindings, C-x 4 m and C-x 5 m.
Note that there is already the variable mu4e-compose-in-new-frame
which if true opens in a new frame.  That will still work for C-x m
and C-x 5 m, but if the user runs C-x 4 m, it switches to other-window
as it assumes the keybinding takes precedence.  This behaviour can be
changed within mu4e~draft-open-file.
See also #1928","Emacs has several standard keybindings
C-x m   compose-mail
C-x 4 m compose-mail-other-window
C-x 5 m compose-mail-other-frame
This patch fixes the creation of new mail buffers to respect the
latter two keybindings, C-x 4 m and C-x 5 m.
Note that there is already the variable mu4e-compose-in-new-frame
which if true opens in a new frame.  That will still work for C-x m
and C-x 5 m, but if the user runs C-x 4 m, it switches to other-window
as it assumes the keybinding takes precedence.  This behaviour can be
changed within mu4e~draft-open-file.
See also #1928",True,{}
djcb/mu,https://github.com/djcb/mu,1960,2021-04-03T21:28:57Z,2021-04-04T10:08:39Z,2021-04-04T10:08:58Z,MERGED,True,17,12,2,https://github.com/sje30,Respect switch-function in compose-mail.,1,[],https://github.com/djcb/mu/pull/1960,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1960#issuecomment-813007275,"Emacs has several standard keybindings
C-x m   compose-mail
C-x 4 m compose-mail-other-window
C-x 5 m compose-mail-other-frame
This patch fixes the creation of new mail buffers to respect the
latter two keybindings, C-x 4 m and C-x 5 m.
Note that there is already the variable mu4e-compose-in-new-frame
which if true opens in a new frame.  That will still work for C-x m
and C-x 5 m, but if the user runs C-x 4 m, it switches to other-window
as it assumes the keybinding takes precedence.  This behaviour can be
changed within mu4e~draft-open-file.
See also #1928","Merged, thanks!",True,{'THUMBS_UP': ['https://github.com/sje30']}
djcb/mu,https://github.com/djcb/mu,1961,2021-04-04T18:29:59Z,2021-04-05T21:14:04Z,2021-04-05T21:14:12Z,MERGED,True,32,1,1,https://github.com/Chris00,Enable the user to control which external images not to display,1,[],https://github.com/djcb/mu/pull/1961,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1961,,,True,{}
djcb/mu,https://github.com/djcb/mu,1961,2021-04-04T18:29:59Z,2021-04-05T21:14:04Z,2021-04-05T21:14:12Z,MERGED,True,32,1,1,https://github.com/Chris00,Enable the user to control which external images not to display,1,[],https://github.com/djcb/mu/pull/1961,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1961#issuecomment-813236739,,Here is a notification with an image so you can test! 😀,True,{}
djcb/mu,https://github.com/djcb/mu,1961,2021-04-04T18:29:59Z,2021-04-05T21:14:04Z,2021-04-05T21:14:12Z,MERGED,True,32,1,1,https://github.com/Chris00,Enable the user to control which external images not to display,1,[],https://github.com/djcb/mu/pull/1961,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1961#issuecomment-813306355,,Fixed a typo in the last push.,True,{}
djcb/mu,https://github.com/djcb/mu,1961,2021-04-04T18:29:59Z,2021-04-05T21:14:04Z,2021-04-05T21:14:12Z,MERGED,True,32,1,1,https://github.com/Chris00,Enable the user to control which external images not to display,1,[],https://github.com/djcb/mu/pull/1961,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1961#issuecomment-813653987,,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1962,2021-04-05T20:40:36Z,2021-04-05T21:14:47Z,2021-04-05T23:15:32Z,MERGED,True,15,4,1,https://github.com/Chris00,mu4e/compose: attach buffers & files setting any property,1,[],https://github.com/djcb/mu/pull/1962,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1962,"This fixes the fact that :disposition was advertised but not queried.  In addition, one has the possibility to add a :description and to attach buffers.  This may be used in the resolution of #1956.","This fixes the fact that :disposition was advertised but not queried.  In addition, one has the possibility to add a :description and to attach buffers.  This may be used in the resolution of #1956.",True,{}
djcb/mu,https://github.com/djcb/mu,1962,2021-04-05T20:40:36Z,2021-04-05T21:14:47Z,2021-04-05T23:15:32Z,MERGED,True,15,4,1,https://github.com/Chris00,mu4e/compose: attach buffers & files setting any property,1,[],https://github.com/djcb/mu/pull/1962,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1962#issuecomment-813654403,"This fixes the fact that :disposition was advertised but not queried.  In addition, one has the possibility to add a :description and to attach buffers.  This may be used in the resolution of #1956.","Merged, thank you!",True,{}
djcb/mu,https://github.com/djcb/mu,1963,2021-04-06T08:22:45Z,2021-04-06T14:50:14Z,2021-04-06T14:50:25Z,MERGED,True,22,0,1,https://github.com/Chris00,mu4e/doc: Describe `mu4e-view-blocked-images',1,[],https://github.com/djcb/mu/pull/1963,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1963,Document  `mu4e-view-blocked-images'.,Document  `mu4e-view-blocked-images'.,True,{}
djcb/mu,https://github.com/djcb/mu,1963,2021-04-06T08:22:45Z,2021-04-06T14:50:14Z,2021-04-06T14:50:25Z,MERGED,True,22,0,1,https://github.com/Chris00,mu4e/doc: Describe `mu4e-view-blocked-images',1,[],https://github.com/djcb/mu/pull/1963,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1963#issuecomment-813938129,Document  `mu4e-view-blocked-images'.,P.S. The fact that HTML is displayed by default and the possibility to reply to iCal events should eventually also be documented — not necessarily by me! 😀 — as they seem to matter for many people.,True,{}
djcb/mu,https://github.com/djcb/mu,1963,2021-04-06T08:22:45Z,2021-04-06T14:50:14Z,2021-04-06T14:50:25Z,MERGED,True,22,0,1,https://github.com/Chris00,mu4e/doc: Describe `mu4e-view-blocked-images',1,[],https://github.com/djcb/mu/pull/1963,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1963#issuecomment-814183977,Document  `mu4e-view-blocked-images'.,Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1965,2021-04-06T09:45:09Z,2021-04-13T21:33:52Z,2021-04-13T21:33:52Z,CLOSED,False,1,1,1,https://github.com/tinloaf,Mention texinfo build dependency,1,[],https://github.com/djcb/mu/pull/1965,https://github.com/tinloaf,1,https://github.com/djcb/mu/pull/1965,Fixes #1964,Fixes #1964,True,{}
djcb/mu,https://github.com/djcb/mu,1965,2021-04-06T09:45:09Z,2021-04-13T21:33:52Z,2021-04-13T21:33:52Z,CLOSED,False,1,1,1,https://github.com/tinloaf,Mention texinfo build dependency,1,[],https://github.com/djcb/mu/pull/1965,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1965#issuecomment-819069190,Fixes #1964,Thanks -- but this should not be necessary anymore.,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1967,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956","This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1967#issuecomment-814049547,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956","@baracunatana @hughwilliams94 This is a slightly different take on the composition of iCal replies.  May you help me to test it by making sure it works in your environments — it does in mine.
This is the mu4e part in order to org-msg not to activate for ical replies.  (There will be a part for org-msg as well — which will also fix the problem with Forward — but I'd like first to have other PR merged.)",True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1967#issuecomment-814055914,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",The org-msg patch.,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/1967#issuecomment-814725404,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956","@baracunatana @hughwilliams94 If you wish, you can send me an invite (email in my profile) and I'll accept it.",True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/hughwilliams94,5,https://github.com/djcb/mu/pull/1967#issuecomment-814760198,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",I'm a little swamped by work currently so can't test on my setup right now. I've sent a test invite to you at your profile email.,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,6,https://github.com/djcb/mu/pull/1967#issuecomment-814782089,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",Thanks.  Just accepted it.,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,7,https://github.com/djcb/mu/pull/1967#issuecomment-814892711,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956","@hughwilliams94 When you have time, please let us know whether you see your iCal invitation as accepted.",True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,8,https://github.com/djcb/mu/pull/1967#issuecomment-815080673,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",@hughwilliams94 I saw that you cancelled the meeting but it is not clear to me whether my accepted answer worked.,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/hughwilliams94,9,https://github.com/djcb/mu/pull/1967#issuecomment-815567482,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",Sorry the accept did come through fine thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,10,https://github.com/djcb/mu/pull/1967#issuecomment-815570177,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",@hughwilliams94 Thanks for your help!,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/Chris00,11,https://github.com/djcb/mu/pull/1967#issuecomment-815954610,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",@djcb I think this is ready to be considered for merge.,True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/djcb,12,https://github.com/djcb/mu/pull/1967#issuecomment-815981120,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956","Ok, let's merge this then. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1967,2021-04-06T11:27:56Z,2021-04-08T16:51:38Z,2021-04-09T18:23:11Z,MERGED,True,47,42,2,https://github.com/Chris00,mu4e/ical: Compose the response attaching the calendar,2,[],https://github.com/djcb/mu/pull/1967,https://github.com/baracunatana,13,https://github.com/djcb/mu/pull/1967#issuecomment-816869423,"This composes the response before any hook is run which is important so that, if those hooks modify the message, they are aware that some MML is present.  In particular, this is needed to have the compatibility with the org-msg package; see #1956",Can confirm that it now works as intended one you apply the MML patch to org-msg,True,{}
djcb/mu,https://github.com/djcb/mu,1970,2021-04-09T14:54:13Z,2021-04-11T13:38:42Z,2021-04-11T13:38:51Z,MERGED,True,1,1,1,https://github.com/Gallipo,skip confirmation when executing marks,1,[],https://github.com/djcb/mu/pull/1970,https://github.com/Gallipo,1,https://github.com/djcb/mu/pull/1970,When running u4e-mark-execute-all with any prefix-arg you can skip the confirmation-prompt. The potential for accidentally hitting this is quite low.,When running u4e-mark-execute-all with any prefix-arg you can skip the confirmation-prompt. The potential for accidentally hitting this is quite low.,True,{}
djcb/mu,https://github.com/djcb/mu,1970,2021-04-09T14:54:13Z,2021-04-11T13:38:42Z,2021-04-11T13:38:51Z,MERGED,True,1,1,1,https://github.com/Gallipo,skip confirmation when executing marks,1,[],https://github.com/djcb/mu/pull/1970,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1970#issuecomment-817309548,When running u4e-mark-execute-all with any prefix-arg you can skip the confirmation-prompt. The potential for accidentally hitting this is quite low.,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1976,2021-04-12T20:04:07Z,2021-04-12T20:45:07Z,2021-04-12T20:46:40Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-mark: Allow executing marks without passing a prefix argument,1,[],https://github.com/djcb/mu/pull/1976,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1976,,,True,{}
djcb/mu,https://github.com/djcb/mu,1976,2021-04-12T20:04:07Z,2021-04-12T20:45:07Z,2021-04-12T20:46:40Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-mark: Allow executing marks without passing a prefix argument,1,[],https://github.com/djcb/mu/pull/1976,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1976#issuecomment-818151961,,"Hmm, calling this without a prefix argument works just fine... did you you mean calling it non-interactively?",True,{}
djcb/mu,https://github.com/djcb/mu,1976,2021-04-12T20:04:07Z,2021-04-12T20:45:07Z,2021-04-12T20:46:40Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-mark: Allow executing marks without passing a prefix argument,1,[],https://github.com/djcb/mu/pull/1976,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/1976#issuecomment-818172142,,"Sometimes, when I press x, the following is triggered (with debugger on);
Debugger entered--Lisp error: (wrong-number-of-arguments (1 . 1) 0)
  mu4e-mark-execute-all()
  mu4e-view-marked-execute()
  funcall-interactively(mu4e-view-marked-execute)
  call-interactively(mu4e-view-marked-execute nil nil)
  command-execute(mu4e-view-marked-execute)

Sometimes it works...  A bit puzzled.",True,{}
djcb/mu,https://github.com/djcb/mu,1976,2021-04-12T20:04:07Z,2021-04-12T20:45:07Z,2021-04-12T20:46:40Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-mark: Allow executing marks without passing a prefix argument,1,[],https://github.com/djcb/mu/pull/1976,https://github.com/djcb,4,https://github.com/djcb/mu/pull/1976#issuecomment-818216152,,"Guess the ""interactiveness"" doesn't propagate.. anyway, the optional should fix that, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1978,2021-04-12T21:55:44Z,2021-04-13T06:33:03Z,2021-04-13T06:35:00Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-headers: Set the point in the correct frame after search,1,[],https://github.com/djcb/mu/pull/1978,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1978,Fixes #1977,Fixes #1977,True,{}
djcb/mu,https://github.com/djcb/mu,1978,2021-04-12T21:55:44Z,2021-04-13T06:33:03Z,2021-04-13T06:35:00Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-headers: Set the point in the correct frame after search,1,[],https://github.com/djcb/mu/pull/1978,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1978#issuecomment-818479139,Fixes #1977,"Oh, great, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1980,2021-04-13T16:16:24Z,2021-04-13T19:13:11Z,2021-04-13T19:13:14Z,MERGED,True,7,26,1,https://github.com/sje30,Spelling fixes and simplifying some code,2,[],https://github.com/djcb/mu/pull/1980,https://github.com/sje30,1,https://github.com/djcb/mu/pull/1980,,,True,{}
djcb/mu,https://github.com/djcb/mu,1980,2021-04-13T16:16:24Z,2021-04-13T19:13:11Z,2021-04-13T19:13:14Z,MERGED,True,7,26,1,https://github.com/sje30,Spelling fixes and simplifying some code,2,[],https://github.com/djcb/mu/pull/1980,https://github.com/sje30,2,https://github.com/djcb/mu/pull/1980#issuecomment-818874441,,"sorry, I think I may have sent two PRs.",True,{}
djcb/mu,https://github.com/djcb/mu,1980,2021-04-13T16:16:24Z,2021-04-13T19:13:11Z,2021-04-13T19:13:14Z,MERGED,True,7,26,1,https://github.com/sje30,Spelling fixes and simplifying some code,2,[],https://github.com/djcb/mu/pull/1980,https://github.com/sje30,3,https://github.com/djcb/mu/pull/1980#issuecomment-818876557,,"there should be two independent commits to the mu4e.texi

some typos
simplification of the gnus-dired section as most code has been folded into gnus-dired.el",True,{}
djcb/mu,https://github.com/djcb/mu,1980,2021-04-13T16:16:24Z,2021-04-13T19:13:11Z,2021-04-13T19:13:14Z,MERGED,True,7,26,1,https://github.com/sje30,Spelling fixes and simplifying some code,2,[],https://github.com/djcb/mu/pull/1980,https://github.com/sje30,4,https://github.com/djcb/mu/pull/1980#issuecomment-818881436,,"https://github.com/djcb/mu/runs/2335441098 is failing on mac, but looks unrelated to the .texi edits.",True,{}
djcb/mu,https://github.com/djcb/mu,1980,2021-04-13T16:16:24Z,2021-04-13T19:13:11Z,2021-04-13T19:13:14Z,MERGED,True,7,26,1,https://github.com/sje30,Spelling fixes and simplifying some code,2,[],https://github.com/djcb/mu/pull/1980,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1980#issuecomment-818988394,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1986,2021-04-22T17:35:27Z,2021-04-22T18:03:18Z,2021-09-30T16:21:09Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Remove unneeded `or` clause in mu4e-view-save-attachments,1,[],https://github.com/djcb/mu/pull/1986,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/1986,Was not removed with commit 55d8d20.,Was not removed with commit 55d8d20.,True,{}
djcb/mu,https://github.com/djcb/mu,1986,2021-04-22T17:35:27Z,2021-04-22T18:03:18Z,2021-09-30T16:21:09Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Remove unneeded `or` clause in mu4e-view-save-attachments,1,[],https://github.com/djcb/mu/pull/1986,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1986#issuecomment-825069164,Was not removed with commit 55d8d20.,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1987,2021-04-22T18:37:44Z,2021-04-22T19:39:07Z,2021-04-22T19:39:11Z,MERGED,True,9,7,6,https://github.com/derek-zhou,seperate Mu::format and Mu::vformat,1,[],https://github.com/djcb/mu/pull/1987,https://github.com/derek-zhou,1,https://github.com/djcb/mu/pull/1987,"All the call site that issues a va_list in the second argument are converted to use vformat.
There is also a unrelated type cast to suppress a compiler warning.","All the call site that issues a va_list in the second argument are converted to use vformat.
There is also a unrelated type cast to suppress a compiler warning.",True,{}
djcb/mu,https://github.com/djcb/mu,1987,2021-04-22T18:37:44Z,2021-04-22T19:39:07Z,2021-04-22T19:39:11Z,MERGED,True,9,7,6,https://github.com/derek-zhou,seperate Mu::format and Mu::vformat,1,[],https://github.com/djcb/mu/pull/1987,https://github.com/derek-zhou,2,https://github.com/djcb/mu/pull/1987#issuecomment-825112905,"All the call site that issues a va_list in the second argument are converted to use vformat.
There is also a unrelated type cast to suppress a compiler warning.","forgot to mention this is for:
#1984",True,{}
djcb/mu,https://github.com/djcb/mu,1987,2021-04-22T18:37:44Z,2021-04-22T19:39:07Z,2021-04-22T19:39:11Z,MERGED,True,9,7,6,https://github.com/derek-zhou,seperate Mu::format and Mu::vformat,1,[],https://github.com/djcb/mu/pull/1987,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1987#issuecomment-825133061,"All the call site that issues a va_list in the second argument are converted to use vformat.
There is also a unrelated type cast to suppress a compiler warning.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1989,2021-04-25T23:41:06Z,2021-04-26T06:35:25Z,2021-04-26T06:35:32Z,MERGED,True,9,8,2,https://github.com/Chris00,mu4e: Minor fixes to texinfo documentation,2,[],https://github.com/djcb/mu/pull/1989,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/1989,,,True,{}
djcb/mu,https://github.com/djcb/mu,1989,2021-04-25T23:41:06Z,2021-04-26T06:35:25Z,2021-04-26T06:35:32Z,MERGED,True,9,8,2,https://github.com/Chris00,mu4e: Minor fixes to texinfo documentation,2,[],https://github.com/djcb/mu/pull/1989,https://github.com/Chris00,2,https://github.com/djcb/mu/pull/1989#issuecomment-826417680,,I also added decoding the message before fetching fields for the HTML header.,True,{}
djcb/mu,https://github.com/djcb/mu,1989,2021-04-25T23:41:06Z,2021-04-26T06:35:25Z,2021-04-26T06:35:32Z,MERGED,True,9,8,2,https://github.com/Chris00,mu4e: Minor fixes to texinfo documentation,2,[],https://github.com/djcb/mu/pull/1989,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1989#issuecomment-826547713,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,1991,2021-04-26T02:28:00Z,2021-06-12T15:35:19Z,2021-06-15T02:33:22Z,CLOSED,False,19,15,1,https://github.com/seanfarley,main-view: make the bullet char a variable,1,[],https://github.com/djcb/mu/pull/1991,https://github.com/seanfarley,1,https://github.com/djcb/mu/pull/1991,"There has been some code from Doom to prettify the main view of mu4e
from an asterisk to a unicode symbol. This has been difficult because
`mu4e~main-redraw-buffer' isn't easy to advise or hook into since it
directly inserts an ""*"".
This patch creates a new variable `mu4e-main-bullet-char' so that
third-parties can use their own bullet character.","There has been some code from Doom to prettify the main view of mu4e
from an asterisk to a unicode symbol. This has been difficult because
`mu4e~main-redraw-buffer' isn't easy to advise or hook into since it
directly inserts an ""*"".
This patch creates a new variable `mu4e-main-bullet-char' so that
third-parties can use their own bullet character.",True,"{'THUMBS_UP': ['https://github.com/jeetelongname', 'https://github.com/bdarcus', 'https://github.com/peterhoeg', 'https://github.com/MoskitoHero', 'https://github.com/andreiltd', 'https://github.com/tecosaur']}"
djcb/mu,https://github.com/djcb/mu,1991,2021-04-26T02:28:00Z,2021-06-12T15:35:19Z,2021-06-15T02:33:22Z,CLOSED,False,19,15,1,https://github.com/seanfarley,main-view: make the bullet char a variable,1,[],https://github.com/djcb/mu/pull/1991,https://github.com/seanfarley,2,https://github.com/djcb/mu/pull/1991#issuecomment-826459357,"There has been some code from Doom to prettify the main view of mu4e
from an asterisk to a unicode symbol. This has been difficult because
`mu4e~main-redraw-buffer' isn't easy to advise or hook into since it
directly inserts an ""*"".
This patch creates a new variable `mu4e-main-bullet-char' so that
third-parties can use their own bullet character.",Here is a screenshot:,True,{}
djcb/mu,https://github.com/djcb/mu,1991,2021-04-26T02:28:00Z,2021-06-12T15:35:19Z,2021-06-15T02:33:22Z,CLOSED,False,19,15,1,https://github.com/seanfarley,main-view: make the bullet char a variable,1,[],https://github.com/djcb/mu/pull/1991,https://github.com/djcb,3,https://github.com/djcb/mu/pull/1991#issuecomment-860069506,"There has been some code from Doom to prettify the main view of mu4e
from an asterisk to a unicode symbol. This has been difficult because
`mu4e~main-redraw-buffer' isn't easy to advise or hook into since it
directly inserts an ""*"".
This patch creates a new variable `mu4e-main-bullet-char' so that
third-parties can use their own bullet character.","Thanks for the effort, but this is a bit too much code churn for something fairly unimportant (to me at least), also, this doesn't really scale for all the other characters people may want some replacement for. So sorry, have to decline this.",True,{}
djcb/mu,https://github.com/djcb/mu,1991,2021-04-26T02:28:00Z,2021-06-12T15:35:19Z,2021-06-15T02:33:22Z,CLOSED,False,19,15,1,https://github.com/seanfarley,main-view: make the bullet char a variable,1,[],https://github.com/djcb/mu/pull/1991,https://github.com/seanfarley,4,https://github.com/djcb/mu/pull/1991#issuecomment-860128252,"There has been some code from Doom to prettify the main view of mu4e
from an asterisk to a unicode symbol. This has been difficult because
`mu4e~main-redraw-buffer' isn't easy to advise or hook into since it
directly inserts an ""*"".
This patch creates a new variable `mu4e-main-bullet-char' so that
third-parties can use their own bullet character.","Thanks for the effort, but this is a bit too much code churn for something fairly unimportant (to me at least), also, this doesn't really scale for all the other characters people may want some replacement for. So sorry, have to decline this.

I can understand that but there's a lot of effort going on in third-party repos to try and theme some of mu4e (mostly with unicode). Is there some path forward with theming so that the monkey-patching can stop?",True,{}
djcb/mu,https://github.com/djcb/mu,1991,2021-04-26T02:28:00Z,2021-06-12T15:35:19Z,2021-06-15T02:33:22Z,CLOSED,False,19,15,1,https://github.com/seanfarley,main-view: make the bullet char a variable,1,[],https://github.com/djcb/mu/pull/1991,https://github.com/djcb,5,https://github.com/djcb/mu/pull/1991#issuecomment-860159665,"There has been some code from Doom to prettify the main view of mu4e
from an asterisk to a unicode symbol. This has been difficult because
`mu4e~main-redraw-buffer' isn't easy to advise or hook into since it
directly inserts an ""*"".
This patch creates a new variable `mu4e-main-bullet-char' so that
third-parties can use their own bullet character.","The best would be for people care less about tweaking such things, but I have no illusions in that regard :-)
What I might do at some point (time permitting) is make the main screen an org-mode file (well, org-mode with a few mu4e-specifics), and allow people to use a different one from the default.",True,{}
djcb/mu,https://github.com/djcb/mu,1991,2021-04-26T02:28:00Z,2021-06-12T15:35:19Z,2021-06-15T02:33:22Z,CLOSED,False,19,15,1,https://github.com/seanfarley,main-view: make the bullet char a variable,1,[],https://github.com/djcb/mu/pull/1991,https://github.com/peterhoeg,6,https://github.com/djcb/mu/pull/1991#issuecomment-861123736,"There has been some code from Doom to prettify the main view of mu4e
from an asterisk to a unicode symbol. This has been difficult because
`mu4e~main-redraw-buffer' isn't easy to advise or hook into since it
directly inserts an ""*"".
This patch creates a new variable `mu4e-main-bullet-char' so that
third-parties can use their own bullet character.","With all due respect, this PR is self-contained and while I don't particularly care very much about how this looks either, that doesn't change the fact that a lot of people do. To me this PR seems like an easy way to make things customizable for those who care with very little down-side.",True,{}
djcb/mu,https://github.com/djcb/mu,1992,2021-04-26T05:31:14Z,2021-04-26T06:36:05Z,2021-04-26T06:40:41Z,MERGED,True,1,1,1,https://github.com/nicolasavru,fix typo,1,[],https://github.com/djcb/mu/pull/1992,https://github.com/nicolasavru,1,https://github.com/djcb/mu/pull/1992,,,True,{}
djcb/mu,https://github.com/djcb/mu,1992,2021-04-26T05:31:14Z,2021-04-26T06:36:05Z,2021-04-26T06:40:41Z,MERGED,True,1,1,1,https://github.com/nicolasavru,fix typo,1,[],https://github.com/djcb/mu/pull/1992,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1992#issuecomment-826548082,,"Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,1996,2021-04-26T10:09:50Z,2021-05-02T09:39:28Z,2021-05-02T17:24:28Z,MERGED,True,1,1,1,https://github.com/nicolasavru,fix formatting,1,[],https://github.com/djcb/mu/pull/1996,https://github.com/nicolasavru,1,https://github.com/djcb/mu/pull/1996,,,True,{}
djcb/mu,https://github.com/djcb/mu,1996,2021-04-26T10:09:50Z,2021-05-02T09:39:28Z,2021-05-02T17:24:28Z,MERGED,True,1,1,1,https://github.com/nicolasavru,fix formatting,1,[],https://github.com/djcb/mu/pull/1996,https://github.com/djcb,2,https://github.com/djcb/mu/pull/1996#issuecomment-830779899,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2001,2021-04-27T12:24:10Z,2021-04-27T12:31:18Z,2021-04-27T12:31:18Z,CLOSED,False,7,8,1,https://github.com/Chris00,mu4e/gnus: Switch to the buffer before rendering the message,1,[],https://github.com/djcb/mu/pull/2001,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2001,"This is necessary for `shr' to know the size of the window and dimension the line width and images properly.
Fixes #1998","This is necessary for `shr' to know the size of the window and dimension the line width and images properly.
Fixes #1998",True,{}
djcb/mu,https://github.com/djcb/mu,2005,2021-05-02T05:52:42Z,2021-05-02T09:37:01Z,2021-09-30T16:21:09Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Insert text without its text properties when replying,1,[],https://github.com/djcb/mu/pull/2005,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2005,Fix #2004.,Fix #2004.,True,{}
djcb/mu,https://github.com/djcb/mu,2005,2021-05-02T05:52:42Z,2021-05-02T09:37:01Z,2021-09-30T16:21:09Z,MERGED,True,1,1,1,https://github.com/thierryvolpiatto,Insert text without its text properties when replying,1,[],https://github.com/djcb/mu/pull/2005,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2005#issuecomment-830779601,Fix #2004.,"Ah yeah, actually it shouldn't include those buttons in the first place, but this fixes the immediate problem. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2007,2021-05-02T16:36:40Z,2021-05-02T20:25:04Z,2021-09-30T16:13:44Z,MERGED,True,3,6,1,https://github.com/thierryvolpiatto,Fix #2006 by using cl-loop in mu4e-action-view-in-browser instead of seq,1,[],https://github.com/djcb/mu/pull/2007,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2007,"Using cl-loop is much simpler and readable, than using mapconcat+seq+seq.
Also it avoids requiring seq (which is not done actually).","Using cl-loop is much simpler and readable, than using mapconcat+seq+seq.
Also it avoids requiring seq (which is not done actually).",True,{}
djcb/mu,https://github.com/djcb/mu,2007,2021-05-02T16:36:40Z,2021-05-02T20:25:04Z,2021-09-30T16:13:44Z,MERGED,True,3,6,1,https://github.com/thierryvolpiatto,Fix #2006 by using cl-loop in mu4e-action-view-in-browser instead of seq,1,[],https://github.com/djcb/mu/pull/2007,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2007#issuecomment-830866674,"Using cl-loop is much simpler and readable, than using mapconcat+seq+seq.
Also it avoids requiring seq (which is not done actually).","Thanks, generally not a fan of CL-style loop, but here it does make things clearer.",True,{}
djcb/mu,https://github.com/djcb/mu,2008,2021-05-02T18:33:13Z,2021-05-02T20:30:09Z,2021-05-02T21:03:36Z,MERGED,True,37,18,1,https://github.com/nicolasavru,threads: fix flag handling of orphan children,1,[],https://github.com/djcb/mu/pull/2008,https://github.com/nicolasavru,1,https://github.com/djcb/mu/pull/2008,"Even if a container has no query_match, it may still have children that need to
have flags applied.
This was broken by 6ff9829.
Fixes: #1995","Even if a container has no query_match, it may still have children that need to
have flags applied.
This was broken by 6ff9829.
Fixes: #1995",True,{}
djcb/mu,https://github.com/djcb/mu,2008,2021-05-02T18:33:13Z,2021-05-02T20:30:09Z,2021-05-02T21:03:36Z,MERGED,True,37,18,1,https://github.com/nicolasavru,threads: fix flag handling of orphan children,1,[],https://github.com/djcb/mu/pull/2008,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2008#issuecomment-830867231,"Even if a container has no query_match, it may still have children that need to
have flags applied.
This was broken by 6ff9829.
Fixes: #1995","Oh yes, good catch! Thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2016,2021-05-20T12:18:20Z,2021-05-29T12:31:52Z,2021-05-29T12:32:20Z,MERGED,True,0,4,2,https://github.com/Profpatsch,mu4e-view: remove <home> and <end> bindings,1,[],https://github.com/djcb/mu/pull/2016,https://github.com/Profpatsch,1,https://github.com/djcb/mu/pull/2016,"Users usually have <home> and <end> bound in their configuration,
for Spacemacs the default is “move-beginning-of-line” and “move-end-of-line”.
The mu4e view mode should not rebind basic navigation keys like these.","Users usually have <home> and <end> bound in their configuration,
for Spacemacs the default is “move-beginning-of-line” and “move-end-of-line”.
The mu4e view mode should not rebind basic navigation keys like these.",True,{}
djcb/mu,https://github.com/djcb/mu,2016,2021-05-20T12:18:20Z,2021-05-29T12:31:52Z,2021-05-29T12:32:20Z,MERGED,True,0,4,2,https://github.com/Profpatsch,mu4e-view: remove <home> and <end> bindings,1,[],https://github.com/djcb/mu/pull/2016,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2016#issuecomment-850825373,"Users usually have <home> and <end> bound in their configuration,
for Spacemacs the default is “move-beginning-of-line” and “move-end-of-line”.
The mu4e view mode should not rebind basic navigation keys like these.","Merged, thanks. Wonder how they got in in the first place!",True,{'ROCKET': ['https://github.com/Profpatsch']}
djcb/mu,https://github.com/djcb/mu,2020,2021-05-27T11:09:22Z,2021-05-29T12:29:22Z,2021-05-31T13:39:57Z,MERGED,True,1,1,1,https://github.com/torgeir,Link to mu cheatsheet from readme,1,[],https://github.com/djcb/mu/pull/2020,https://github.com/torgeir,1,https://github.com/djcb/mu/pull/2020,,,True,{}
djcb/mu,https://github.com/djcb/mu,2020,2021-05-27T11:09:22Z,2021-05-29T12:29:22Z,2021-05-31T13:39:57Z,MERGED,True,1,1,1,https://github.com/torgeir,Link to mu cheatsheet from readme,1,[],https://github.com/djcb/mu/pull/2020,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2020#issuecomment-850824961,,"Merged, thanks!",True,{'THUMBS_UP': ['https://github.com/torgeir']}
djcb/mu,https://github.com/djcb/mu,2021,2021-05-28T21:41:47Z,2021-05-29T12:28:41Z,2021-08-30T20:02:03Z,MERGED,True,33,0,1,https://github.com/tsdh,Add support for bug-reference auto-setup in mu4e-view-mode,1,[],https://github.com/djcb/mu/pull/2021,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2021,"The bug-reference mode in Emacs 28 has support for several kinds of auto-setup, one of them being for mail customizable by the variable bug-reference-setup-from-mail-alist.  Add mu4e support for that so that users can simply do
(add-hook 'mu4e-view-mode-hook #'bug-reference-mode)
and have it working.
Also squash one byte-compiler warning about the (at compile-time) undefined variable gnus-article-buffer.","The bug-reference mode in Emacs 28 has support for several kinds of auto-setup, one of them being for mail customizable by the variable bug-reference-setup-from-mail-alist.  Add mu4e support for that so that users can simply do
(add-hook 'mu4e-view-mode-hook #'bug-reference-mode)
and have it working.
Also squash one byte-compiler warning about the (at compile-time) undefined variable gnus-article-buffer.",True,{}
djcb/mu,https://github.com/djcb/mu,2021,2021-05-28T21:41:47Z,2021-05-29T12:28:41Z,2021-08-30T20:02:03Z,MERGED,True,33,0,1,https://github.com/tsdh,Add support for bug-reference auto-setup in mu4e-view-mode,1,[],https://github.com/djcb/mu/pull/2021,https://github.com/tsdh,2,https://github.com/djcb/mu/pull/2021#issuecomment-850700797,"The bug-reference mode in Emacs 28 has support for several kinds of auto-setup, one of them being for mail customizable by the variable bug-reference-setup-from-mail-alist.  Add mu4e support for that so that users can simply do
(add-hook 'mu4e-view-mode-hook #'bug-reference-mode)
and have it working.
Also squash one byte-compiler warning about the (at compile-time) undefined variable gnus-article-buffer.","I have nothing to do with the failure on Mac OS, AFAICT...",True,{}
djcb/mu,https://github.com/djcb/mu,2021,2021-05-28T21:41:47Z,2021-05-29T12:28:41Z,2021-08-30T20:02:03Z,MERGED,True,33,0,1,https://github.com/tsdh,Add support for bug-reference auto-setup in mu4e-view-mode,1,[],https://github.com/djcb/mu/pull/2021,https://github.com/djcb,3,https://github.com/djcb/mu/pull/2021#issuecomment-850824859,"The bug-reference mode in Emacs 28 has support for several kinds of auto-setup, one of them being for mail customizable by the variable bug-reference-setup-from-mail-alist.  Add mu4e support for that so that users can simply do
(add-hook 'mu4e-view-mode-hook #'bug-reference-mode)
and have it working.
Also squash one byte-compiler warning about the (at compile-time) undefined variable gnus-article-buffer.","That seems useful. Merged, thanks!",True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,2022,2021-05-29T21:50:07Z,2021-05-30T08:27:59Z,2021-05-30T08:28:06Z,MERGED,True,65,64,21,https://github.com/smohaorg,mu4e/*: fix license notice at the start of source files,1,[],https://github.com/djcb/mu/pull/2022,https://github.com/smohaorg,1,https://github.com/djcb/mu/pull/2022,"At the start of mu4e/* files, the license has been wrongly attributed
to GNU Emacs instead of mu4e.
Fixes #2019","At the start of mu4e/* files, the license has been wrongly attributed
to GNU Emacs instead of mu4e.
Fixes #2019",True,{}
djcb/mu,https://github.com/djcb/mu,2022,2021-05-29T21:50:07Z,2021-05-30T08:27:59Z,2021-05-30T08:28:06Z,MERGED,True,65,64,21,https://github.com/smohaorg,mu4e/*: fix license notice at the start of source files,1,[],https://github.com/djcb/mu/pull/2022,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2022#issuecomment-850962526,"At the start of mu4e/* files, the license has been wrongly attributed
to GNU Emacs instead of mu4e.
Fixes #2019",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,2025,2021-06-01T07:14:42Z,2021-06-02T19:09:52Z,2021-06-02T19:10:07Z,MERGED,True,1,1,1,https://github.com/peterhoeg,fix wrong configuration key reference,1,[],https://github.com/djcb/mu/pull/2025,https://github.com/peterhoeg,1,https://github.com/djcb/mu/pull/2025,Looks like a copy/paste error.,Looks like a copy/paste error.,True,{}
djcb/mu,https://github.com/djcb/mu,2025,2021-06-01T07:14:42Z,2021-06-02T19:09:52Z,2021-06-02T19:10:07Z,MERGED,True,1,1,1,https://github.com/peterhoeg,fix wrong configuration key reference,1,[],https://github.com/djcb/mu/pull/2025,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2025#issuecomment-853314942,Looks like a copy/paste error.,"Oh, good catch! Thanks, merged.",True,{}
djcb/mu,https://github.com/djcb/mu,2026,2021-06-02T05:30:09Z,2021-06-12T15:30:58Z,2021-06-12T15:30:58Z,CLOSED,False,64,2,2,https://github.com/rayw000,Add new hook: mu4e-new-incoming-mails-hook,1,[],https://github.com/djcb/mu/pull/2026,https://github.com/rayw000,1,https://github.com/djcb/mu/pull/2026,"Functions hooked on this hook will be invoked when there are new incoming mails.
Meta information of new mails will be passed as argument to hooked functions.
This would be useful when you implement something like mail auto tagging etc.
This PR is inspired by https://github.com/iqbalansari/mu4e-alert
Fix: #1955","Functions hooked on this hook will be invoked when there are new incoming mails.
Meta information of new mails will be passed as argument to hooked functions.
This would be useful when you implement something like mail auto tagging etc.
This PR is inspired by https://github.com/iqbalansari/mu4e-alert
Fix: #1955",True,{}
djcb/mu,https://github.com/djcb/mu,2026,2021-06-02T05:30:09Z,2021-06-12T15:30:58Z,2021-06-12T15:30:58Z,CLOSED,False,64,2,2,https://github.com/rayw000,Add new hook: mu4e-new-incoming-mails-hook,1,[],https://github.com/djcb/mu/pull/2026,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2026#issuecomment-860069018,"Functions hooked on this hook will be invoked when there are new incoming mails.
Meta information of new mails will be passed as argument to hooked functions.
This would be useful when you implement something like mail auto tagging etc.
This PR is inspired by https://github.com/iqbalansari/mu4e-alert
Fix: #1955","Thanks for the effort, but I don't want mu4e to fork calls to mu binary; so have to decline this.",True,{}
djcb/mu,https://github.com/djcb/mu,2028,2021-06-02T16:03:03Z,2021-06-02T19:04:58Z,2021-06-02T19:05:07Z,MERGED,True,2,2,1,https://github.com/andersjohansson,Fix bug with helm completing-read when saving attachments,1,[],https://github.com/djcb/mu/pull/2028,https://github.com/andersjohansson,1,https://github.com/djcb/mu/pull/2028,"Previously helm-comp-read-use-marked was bound also when completing on
a directory for saving attachments (when using a prefix argument). This
returned a list with the selected directory, which caused an error.","Previously helm-comp-read-use-marked was bound also when completing on
a directory for saving attachments (when using a prefix argument). This
returned a list with the selected directory, which caused an error.",True,{}
djcb/mu,https://github.com/djcb/mu,2028,2021-06-02T16:03:03Z,2021-06-02T19:04:58Z,2021-06-02T19:05:07Z,MERGED,True,2,2,1,https://github.com/andersjohansson,Fix bug with helm completing-read when saving attachments,1,[],https://github.com/djcb/mu/pull/2028,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/2028#issuecomment-853212491,"Previously helm-comp-read-use-marked was bound also when completing on
a directory for saving attachments (when using a prefix argument). This
returned a list with the selected directory, which caused an error.","Anders Johansson ***@***.***> writes:
 Previously helm-comp-read-use-marked was bound also when completing on
 a directory for saving attachments (when using a prefix argument). This
 returned a list with the selected directory, which caused an error.
Good catch, you can use as well `(or (car-safe dir) dir)` to avoid
creating another let clause.

Thanks.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,2028,2021-06-02T16:03:03Z,2021-06-02T19:04:58Z,2021-06-02T19:05:07Z,MERGED,True,2,2,1,https://github.com/andersjohansson,Fix bug with helm completing-read when saving attachments,1,[],https://github.com/djcb/mu/pull/2028,https://github.com/djcb,3,https://github.com/djcb/mu/pull/2028#issuecomment-853311999,"Previously helm-comp-read-use-marked was bound also when completing on
a directory for saving attachments (when using a prefix argument). This
returned a list with the selected directory, which caused an error.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2034,2021-06-10T12:28:07Z,2021-06-17T19:22:00Z,2021-09-30T16:21:09Z,MERGED,True,4,2,1,https://github.com/thierryvolpiatto,Only remove mark overlays in `mu4e-mark-at-point`,2,[],https://github.com/djcb/mu/pull/2034,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2034,"This prevent deleting overlays added by third party packages working as well
with overlays in mu4e-headers e.g. thread-folding , and probably in mu4e
itself as well with future features.  Also having a named overlay allows in
future features to modify any other overlays but these ones.
As it is this patch doesn't modify the actual behavior.","This prevent deleting overlays added by third party packages working as well
with overlays in mu4e-headers e.g. thread-folding , and probably in mu4e
itself as well with future features.  Also having a named overlay allows in
future features to modify any other overlays but these ones.
As it is this patch doesn't modify the actual behavior.",True,{}
djcb/mu,https://github.com/djcb/mu,2034,2021-06-10T12:28:07Z,2021-06-17T19:22:00Z,2021-09-30T16:21:09Z,MERGED,True,4,2,1,https://github.com/thierryvolpiatto,Only remove mark overlays in `mu4e-mark-at-point`,2,[],https://github.com/djcb/mu/pull/2034,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/2034#issuecomment-863498249,"This prevent deleting overlays added by third party packages working as well
with overlays in mu4e-headers e.g. thread-folding , and probably in mu4e
itself as well with future features.  Also having a named overlay allows in
future features to modify any other overlays but these ones.
As it is this patch doesn't modify the actual behavior.","""Dirk-Jan C. Binnema"" ***@***.***> writes:
 @djcb commented on this pull request.

 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

 In mu4e/mu4e-mark.el:

> @@ -266,8 +266,8 @@ The following marks are available, and the corresponding props:
          ;; update the hash -- remove everything current, and if add the new
          ;; stuff, unless we're unmarking
          (remhash docid mu4e~mark-map)
 -        ;; remove possible overlays
 -        (remove-overlays (line-beginning-position) (line-end-position))
 +        ;; remove possible mark overlays
 +        (remove-overlays (line-beginning-position) (line-end-position) 'mmark t)
          ;; now, let's set a mark (unless we were unmarking)

 What does mmark mean? If it's short for mu4e-mark, can you rename it to that?
Done.

Thanks.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,2034,2021-06-10T12:28:07Z,2021-06-17T19:22:00Z,2021-09-30T16:21:09Z,MERGED,True,4,2,1,https://github.com/thierryvolpiatto,Only remove mark overlays in `mu4e-mark-at-point`,2,[],https://github.com/djcb/mu/pull/2034,https://github.com/djcb,3,https://github.com/djcb/mu/pull/2034#issuecomment-863503117,"This prevent deleting overlays added by third party packages working as well
with overlays in mu4e-headers e.g. thread-folding , and probably in mu4e
itself as well with future features.  Also having a named overlay allows in
future features to modify any other overlays but these ones.
As it is this patch doesn't modify the actual behavior.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2036,2021-06-11T18:04:03Z,2021-06-17T17:33:35Z,2021-09-30T16:22:06Z,MERGED,True,26,20,1,https://github.com/thierryvolpiatto,Ensure mu4e~headers-move honor line-move-ignore-invisible,1,[],https://github.com/djcb/mu/pull/2036,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2036,"This change is needed because forward-line doesn't honor this variable, more
generally visual lines.
Using next-line instead of forward-line allows this but it is more focused
on interactive use, so use line-move which handles visual lines without
warnings and return 0 or 1 just like forward-line.","This change is needed because forward-line doesn't honor this variable, more
generally visual lines.
Using next-line instead of forward-line allows this but it is more focused
on interactive use, so use line-move which handles visual lines without
warnings and return 0 or 1 just like forward-line.",True,{}
djcb/mu,https://github.com/djcb/mu,2036,2021-06-11T18:04:03Z,2021-06-17T17:33:35Z,2021-09-30T16:22:06Z,MERGED,True,26,20,1,https://github.com/thierryvolpiatto,Ensure mu4e~headers-move honor line-move-ignore-invisible,1,[],https://github.com/djcb/mu/pull/2036,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2036#issuecomment-863429704,"This change is needed because forward-line doesn't honor this variable, more
generally visual lines.
Using next-line instead of forward-line allows this but it is more focused
on interactive use, so use line-move which handles visual lines without
warnings and return 0 or 1 just like forward-line.",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,2045,2021-07-06T03:03:02Z,2021-07-11T19:21:16Z,2021-07-11T19:21:26Z,MERGED,True,2,1,1,https://github.com/DiGitHubCap,Fix #2044: broken header movement with visual-line-mode,1,[],https://github.com/djcb/mu/pull/2045,https://github.com/DiGitHubCap,1,https://github.com/djcb/mu/pull/2045,"This fixes the issue introduced by 50f6f53 where header navigation
would break when visual-line-mode was enabled. Previously,
forward-line was used in mu4e-view-headers-next, which disregarded
visual lines and moved by logical lines, but this was changed to
line-move, which moves by visual lines when line-move-visual is
non-nil (the default when visual-line-mode is enabled). Thus, when
the current header line was wrapped and a message was open in the
split view, mu4e-view-headers-next would move to the next visual
line in the headers buffer (the same message), and then jump back to
the start of the previous line, preventing switching to the next
message.
This would also throw off navigation when mu4e-view-headers-next was
used with a prefix argument, since it would move by visual lines and
not headers.
line-move-visual is therefore set to nil before using `line-move' to
prevent these issues.","This fixes the issue introduced by 50f6f53 where header navigation
would break when visual-line-mode was enabled. Previously,
forward-line was used in mu4e-view-headers-next, which disregarded
visual lines and moved by logical lines, but this was changed to
line-move, which moves by visual lines when line-move-visual is
non-nil (the default when visual-line-mode is enabled). Thus, when
the current header line was wrapped and a message was open in the
split view, mu4e-view-headers-next would move to the next visual
line in the headers buffer (the same message), and then jump back to
the start of the previous line, preventing switching to the next
message.
This would also throw off navigation when mu4e-view-headers-next was
used with a prefix argument, since it would move by visual lines and
not headers.
line-move-visual is therefore set to nil before using `line-move' to
prevent these issues.",True,{}
djcb/mu,https://github.com/djcb/mu,2045,2021-07-06T03:03:02Z,2021-07-11T19:21:16Z,2021-07-11T19:21:26Z,MERGED,True,2,1,1,https://github.com/DiGitHubCap,Fix #2044: broken header movement with visual-line-mode,1,[],https://github.com/djcb/mu/pull/2045,https://github.com/thierryvolpiatto,2,https://github.com/djcb/mu/pull/2045#issuecomment-874476414,"This fixes the issue introduced by 50f6f53 where header navigation
would break when visual-line-mode was enabled. Previously,
forward-line was used in mu4e-view-headers-next, which disregarded
visual lines and moved by logical lines, but this was changed to
line-move, which moves by visual lines when line-move-visual is
non-nil (the default when visual-line-mode is enabled). Thus, when
the current header line was wrapped and a message was open in the
split view, mu4e-view-headers-next would move to the next visual
line in the headers buffer (the same message), and then jump back to
the start of the previous line, preventing switching to the next
message.
This would also throw off navigation when mu4e-view-headers-next was
used with a prefix argument, since it would move by visual lines and
not headers.
line-move-visual is therefore set to nil before using `line-move' to
prevent these issues.","DiGitHubCap ***@***.***> writes:
 line-move-visual is therefore set to nil before using `line-move' to
 prevent these issues.
No, this fix the visual-mode issue but always move by logical lines, no
more by visual lines which was the purpose of this change to be able to
skip invisible lines with mu4e-thread-folding.
IOW with this change it is the same as using forward-line as before.
…
 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

 You can view, comment on, or merge this pull request online at:

   #2045

 Commit Summary

   • Fix #2044: broken header movement with visual-line-mode

 File Changes

   • M mu4e/mu4e-headers.el (3)

 Patch Links:

   • https://github.com/djcb/mu/pull/2045.patch
   • https://github.com/djcb/mu/pull/2045.diff

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.*

-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,2045,2021-07-06T03:03:02Z,2021-07-11T19:21:16Z,2021-07-11T19:21:26Z,MERGED,True,2,1,1,https://github.com/DiGitHubCap,Fix #2044: broken header movement with visual-line-mode,1,[],https://github.com/djcb/mu/pull/2045,https://github.com/DiGitHubCap,3,https://github.com/djcb/mu/pull/2045#issuecomment-874755619,"This fixes the issue introduced by 50f6f53 where header navigation
would break when visual-line-mode was enabled. Previously,
forward-line was used in mu4e-view-headers-next, which disregarded
visual lines and moved by logical lines, but this was changed to
line-move, which moves by visual lines when line-move-visual is
non-nil (the default when visual-line-mode is enabled). Thus, when
the current header line was wrapped and a message was open in the
split view, mu4e-view-headers-next would move to the next visual
line in the headers buffer (the same message), and then jump back to
the start of the previous line, preventing switching to the next
message.
This would also throw off navigation when mu4e-view-headers-next was
used with a prefix argument, since it would move by visual lines and
not headers.
line-move-visual is therefore set to nil before using `line-move' to
prevent these issues.","No, this fix the visual-mode issue but always move by logical lines, no more by visual lines which was the purpose of this change to be able to skip invisible lines with mu4e-thread-folding. IOW with this change it is the same as using forward-line as before.

Moving by visual lines and skipping invisible lines are two separate things, I think. The variable line-move-ignore-invisible should control whether line-move ignores invisible lines, and it is t by default. Have you actually tested whether this fix will break skipping invisible lines with mu4e-thread-folding?
Alternatively, using forward-visible-line might work if this doesn't work for you.",True,{}
djcb/mu,https://github.com/djcb/mu,2045,2021-07-06T03:03:02Z,2021-07-11T19:21:16Z,2021-07-11T19:21:26Z,MERGED,True,2,1,1,https://github.com/DiGitHubCap,Fix #2044: broken header movement with visual-line-mode,1,[],https://github.com/djcb/mu/pull/2045,https://github.com/thierryvolpiatto,4,https://github.com/djcb/mu/pull/2045#issuecomment-874967059,"This fixes the issue introduced by 50f6f53 where header navigation
would break when visual-line-mode was enabled. Previously,
forward-line was used in mu4e-view-headers-next, which disregarded
visual lines and moved by logical lines, but this was changed to
line-move, which moves by visual lines when line-move-visual is
non-nil (the default when visual-line-mode is enabled). Thus, when
the current header line was wrapped and a message was open in the
split view, mu4e-view-headers-next would move to the next visual
line in the headers buffer (the same message), and then jump back to
the start of the previous line, preventing switching to the next
message.
This would also throw off navigation when mu4e-view-headers-next was
used with a prefix argument, since it would move by visual lines and
not headers.
line-move-visual is therefore set to nil before using `line-move' to
prevent these issues.","DiGitHubCap ***@***.***> writes:
 The variable line-move-ignore-invisible should control whether
 line-move ignores invisible lines, and it is t by default.
Oh yes, you are right line-move-ignore-invisible seems enough, so yes,
let-binding line-move-visual is working, I was confused by the
documentation which is unclear for all this (line-move etc...) at least
for me.

Thanks.
 Have you actually tested whether this fix will break skipping
 invisible lines with mu4e-thread-folding?
Just tested, it is working, thanks.
…
-- 
Thierry",True,{}
djcb/mu,https://github.com/djcb/mu,2045,2021-07-06T03:03:02Z,2021-07-11T19:21:16Z,2021-07-11T19:21:26Z,MERGED,True,2,1,1,https://github.com/DiGitHubCap,Fix #2044: broken header movement with visual-line-mode,1,[],https://github.com/djcb/mu/pull/2045,https://github.com/djcb,5,https://github.com/djcb/mu/pull/2045#issuecomment-877848604,"This fixes the issue introduced by 50f6f53 where header navigation
would break when visual-line-mode was enabled. Previously,
forward-line was used in mu4e-view-headers-next, which disregarded
visual lines and moved by logical lines, but this was changed to
line-move, which moves by visual lines when line-move-visual is
non-nil (the default when visual-line-mode is enabled). Thus, when
the current header line was wrapped and a message was open in the
split view, mu4e-view-headers-next would move to the next visual
line in the headers buffer (the same message), and then jump back to
the start of the previous line, preventing switching to the next
message.
This would also throw off navigation when mu4e-view-headers-next was
used with a prefix argument, since it would move by visual lines and
not headers.
line-move-visual is therefore set to nil before using `line-move' to
prevent these issues.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2046,2021-07-06T18:22:37Z,2022-05-07T06:33:31Z,2022-05-07T11:50:57Z,MERGED,True,1,0,1,https://github.com/nagy,Assign `list-buffers-directory`,1,[],https://github.com/djcb/mu/pull/2046,https://github.com/nagy,1,https://github.com/djcb/mu/pull/2046,"for mu4e-header buffers, this displays the search query in
M-x list-buffers instead of showing an empty path column.","for mu4e-header buffers, this displays the search query in
M-x list-buffers instead of showing an empty path column.",True,{}
djcb/mu,https://github.com/djcb/mu,2046,2021-07-06T18:22:37Z,2022-05-07T06:33:31Z,2022-05-07T11:50:57Z,MERGED,True,1,0,1,https://github.com/nagy,Assign `list-buffers-directory`,1,[],https://github.com/djcb/mu/pull/2046,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2046#issuecomment-1120146422,"for mu4e-header buffers, this displays the search query in
M-x list-buffers instead of showing an empty path column.","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2048,2021-07-11T20:25:21Z,2021-07-17T08:09:19Z,2021-07-29T21:42:21Z,MERGED,True,15,21,2,https://github.com/nicolasavru,query: fix include-related.,1,[],https://github.com/djcb/mu/pull/2048,https://github.com/nicolasavru,1,https://github.com/djcb/mu/pull/2048,"mu-query.cc:

make_related_enquire: don't include first query in qvec, we already have all
thread IDs we need to query in thread_ids.
run_related: always sort first query by date, as explained in the code
comment.
run_related: include qflags (in particular ascending vs descending) in
leader_qflags.
run_threaded: don't limit results to maxnum, that results in threads
potentially being cut off.

mu-server.cc:

output_sexp: don't limit results to maxnum so as to match the behaviour of
mu find (and avoid cutting off threads).

Fixes #1924 and #1911.","mu-query.cc:

make_related_enquire: don't include first query in qvec, we already have all
thread IDs we need to query in thread_ids.
run_related: always sort first query by date, as explained in the code
comment.
run_related: include qflags (in particular ascending vs descending) in
leader_qflags.
run_threaded: don't limit results to maxnum, that results in threads
potentially being cut off.

mu-server.cc:

output_sexp: don't limit results to maxnum so as to match the behaviour of
mu find (and avoid cutting off threads).

Fixes #1924 and #1911.",True,{}
djcb/mu,https://github.com/djcb/mu,2048,2021-07-11T20:25:21Z,2021-07-17T08:09:19Z,2021-07-29T21:42:21Z,MERGED,True,15,21,2,https://github.com/nicolasavru,query: fix include-related.,1,[],https://github.com/djcb/mu/pull/2048,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2048#issuecomment-881854556,"mu-query.cc:

make_related_enquire: don't include first query in qvec, we already have all
thread IDs we need to query in thread_ids.
run_related: always sort first query by date, as explained in the code
comment.
run_related: include qflags (in particular ascending vs descending) in
leader_qflags.
run_threaded: don't limit results to maxnum, that results in threads
potentially being cut off.

mu-server.cc:

output_sexp: don't limit results to maxnum so as to match the behaviour of
mu find (and avoid cutting off threads).

Fixes #1924 and #1911.","I've played with for the last days, and it worked well for me (though admittedly, I never really encountered the original issue).
Anyway, merged.... Thanks for working on this!",True,{}
djcb/mu,https://github.com/djcb/mu,2049,2021-07-12T18:08:51Z,2021-07-17T08:09:50Z,2021-09-30T16:21:09Z,MERGED,True,7,2,1,https://github.com/thierryvolpiatto,Fix mu4e-headers-prev with invisible lines,1,[],https://github.com/djcb/mu/pull/2049,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2049,"Skip invisible text at BOL possibly hidden by
the end of another invisible overlay covering
previous EOL.
This patch affects people using mu4e-thread-folding-mode but change nothing
when using mu4e as it is.","Skip invisible text at BOL possibly hidden by
the end of another invisible overlay covering
previous EOL.
This patch affects people using mu4e-thread-folding-mode but change nothing
when using mu4e as it is.",True,{}
djcb/mu,https://github.com/djcb/mu,2049,2021-07-12T18:08:51Z,2021-07-17T08:09:50Z,2021-09-30T16:21:09Z,MERGED,True,7,2,1,https://github.com/thierryvolpiatto,Fix mu4e-headers-prev with invisible lines,1,[],https://github.com/djcb/mu/pull/2049,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2049#issuecomment-881854624,"Skip invisible text at BOL possibly hidden by
the end of another invisible overlay covering
previous EOL.
This patch affects people using mu4e-thread-folding-mode but change nothing
when using mu4e as it is.","Thanks, merged.",True,{}
djcb/mu,https://github.com/djcb/mu,2050,2021-07-13T19:34:05Z,2021-08-30T13:12:31Z,2021-08-30T13:12:31Z,CLOSED,False,6017,4578,45,https://github.com/tsdh,Allow a function as value of mu4e-split-view,3,[],https://github.com/djcb/mu/pull/2050,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2050,"This allows for splitting depending on geometry using split-window-sensibly
or more advanced home-brewn functions.  As a starter, which already suits my
needs better than the previously supported values, I use the following config:
(defun th/mu4e-split-view ()
  (let* ((headers (mu4e-get-headers-buffer))
         (headers-win (and headers (get-buffer-window headers)))
         (view (mu4e-get-view-buffer))
         (view-win (and view (get-buffer-window view))))
    (cond
     (view-win view-win)
     ((one-window-p) (split-window-sensibly))
     ;; Use the tallest window.
     (t (car (sort (delq headers-win (window-list))
                   (lambda (a b)
                     (> (window-height a) (window-height b)))))))))
(setq mu4e-split-view #'th/mu4e-split-view)","This allows for splitting depending on geometry using split-window-sensibly
or more advanced home-brewn functions.  As a starter, which already suits my
needs better than the previously supported values, I use the following config:
(defun th/mu4e-split-view ()
  (let* ((headers (mu4e-get-headers-buffer))
         (headers-win (and headers (get-buffer-window headers)))
         (view (mu4e-get-view-buffer))
         (view-win (and view (get-buffer-window view))))
    (cond
     (view-win view-win)
     ((one-window-p) (split-window-sensibly))
     ;; Use the tallest window.
     (t (car (sort (delq headers-win (window-list))
                   (lambda (a b)
                     (> (window-height a) (window-height b)))))))))
(setq mu4e-split-view #'th/mu4e-split-view)",True,{}
djcb/mu,https://github.com/djcb/mu,2050,2021-07-13T19:34:05Z,2021-08-30T13:12:31Z,2021-08-30T13:12:31Z,CLOSED,False,6017,4578,45,https://github.com/tsdh,Allow a function as value of mu4e-split-view,3,[],https://github.com/djcb/mu/pull/2050,https://github.com/tsdh,2,https://github.com/djcb/mu/pull/2050#issuecomment-908331371,"This allows for splitting depending on geometry using split-window-sensibly
or more advanced home-brewn functions.  As a starter, which already suits my
needs better than the previously supported values, I use the following config:
(defun th/mu4e-split-view ()
  (let* ((headers (mu4e-get-headers-buffer))
         (headers-win (and headers (get-buffer-window headers)))
         (view (mu4e-get-view-buffer))
         (view-win (and view (get-buffer-window view))))
    (cond
     (view-win view-win)
     ((one-window-p) (split-window-sensibly))
     ;; Use the tallest window.
     (t (car (sort (delq headers-win (window-list))
                   (lambda (a b)
                     (> (window-height a) (window-height b)))))))))
(setq mu4e-split-view #'th/mu4e-split-view)","I'll close this PR and come back later with a similar change to master.  For the time being (and my convenience), I've based this branch on the 1.6 release branch.",True,{}
djcb/mu,https://github.com/djcb/mu,2054,2021-07-23T16:45:15Z,2021-07-25T13:26:33Z,2021-07-25T13:26:33Z,CLOSED,False,4,3,1,https://github.com/milouse,mu4e: Add support for gemini/gopher in mu4e~view-beginning-of-url-regexp,1,[],https://github.com/djcb/mu/pull/2054,https://github.com/milouse,1,https://github.com/djcb/mu/pull/2054,"This allow such URLs to be clickable and openable through Elpher (for example).
Gemini is a new kind of ""Web"" built around SSL and a light text markup language (learn more at https://gemini.circumlunar.space/). Gopher is an older internet protocol, still in use by some. Both protocol may be browse with Elpher, the same way than EWW or other web browser.
This commit make it possible to have links to these networks in email clickable again.
However, maybe it could be a better idea in the long term to follow values of thing-at-point-uri-schemes (in thingatpt package)?","This allow such URLs to be clickable and openable through Elpher (for example).
Gemini is a new kind of ""Web"" built around SSL and a light text markup language (learn more at https://gemini.circumlunar.space/). Gopher is an older internet protocol, still in use by some. Both protocol may be browse with Elpher, the same way than EWW or other web browser.
This commit make it possible to have links to these networks in email clickable again.
However, maybe it could be a better idea in the long term to follow values of thing-at-point-uri-schemes (in thingatpt package)?",True,{}
djcb/mu,https://github.com/djcb/mu,2054,2021-07-23T16:45:15Z,2021-07-25T13:26:33Z,2021-07-25T13:26:33Z,CLOSED,False,4,3,1,https://github.com/milouse,mu4e: Add support for gemini/gopher in mu4e~view-beginning-of-url-regexp,1,[],https://github.com/djcb/mu/pull/2054,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2054#issuecomment-886025793,"This allow such URLs to be clickable and openable through Elpher (for example).
Gemini is a new kind of ""Web"" built around SSL and a light text markup language (learn more at https://gemini.circumlunar.space/). Gopher is an older internet protocol, still in use by some. Both protocol may be browse with Elpher, the same way than EWW or other web browser.
This commit make it possible to have links to these networks in email clickable again.
However, maybe it could be a better idea in the long term to follow values of thing-at-point-uri-schemes (in thingatpt package)?","mu4e uses thing-at-point for URIs, but the we filter out anything that's not mailto/http/https before that.
what does emacs do with gemini: links?",True,{}
djcb/mu,https://github.com/djcb/mu,2054,2021-07-23T16:45:15Z,2021-07-25T13:26:33Z,2021-07-25T13:26:33Z,CLOSED,False,4,3,1,https://github.com/milouse,mu4e: Add support for gemini/gopher in mu4e~view-beginning-of-url-regexp,1,[],https://github.com/djcb/mu/pull/2054,https://github.com/milouse,3,https://github.com/djcb/mu/pull/2054#issuecomment-886202097,"This allow such URLs to be clickable and openable through Elpher (for example).
Gemini is a new kind of ""Web"" built around SSL and a light text markup language (learn more at https://gemini.circumlunar.space/). Gopher is an older internet protocol, still in use by some. Both protocol may be browse with Elpher, the same way than EWW or other web browser.
This commit make it possible to have links to these networks in email clickable again.
However, maybe it could be a better idea in the long term to follow values of thing-at-point-uri-schemes (in thingatpt package)?","Currently, Emacs won’t do anything with gemini: links.
After a second look (mainly at thingatpt comment about thing-at-point-uri-schemes which states that protocol listed there are here only because they are recognised standard by IANA, and https://gitlab.com/gemini-specification/protocol/-/issues/6 where people thought it is urgent to wait before trying to published something about gemini), I think it is not yet the good time to add gemini support in various packages.
Also the next version of browse-url will make it more easily to declare a new protocol, thus we should wait for things to be clarified before adding anything not well defined.
However, finger and gopher are well established standard and are mentioned in the browse-url package. I’ll look forward to propose a patch to support them (through gophie or elpher) more easily. When done, it would be the right time to open again this MR.
Thank you very much for your quick answer !",True,{}
djcb/mu,https://github.com/djcb/mu,2059,2021-07-28T08:29:06Z,2021-07-28T14:09:08Z,2021-07-29T10:25:45Z,MERGED,True,1,1,1,https://github.com/japhir,README: fix grammatical error,1,[],https://github.com/djcb/mu/pull/2059,https://github.com/japhir,1,https://github.com/djcb/mu/pull/2059,,,True,{}
djcb/mu,https://github.com/djcb/mu,2059,2021-07-28T08:29:06Z,2021-07-28T14:09:08Z,2021-07-29T10:25:45Z,MERGED,True,1,1,1,https://github.com/japhir,README: fix grammatical error,1,[],https://github.com/djcb/mu/pull/2059,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2059#issuecomment-888340294,,Merged -- thanks!,True,{'THUMBS_UP': ['https://github.com/japhir']}
djcb/mu,https://github.com/djcb/mu,2063,2021-07-29T11:44:07Z,2021-08-01T07:39:03Z,2021-08-01T07:39:11Z,MERGED,True,1,1,1,https://github.com/nbarrientos,Fix typo in docstring,1,[],https://github.com/djcb/mu/pull/2063,https://github.com/nbarrientos,1,https://github.com/djcb/mu/pull/2063,"Found this by accident when debugging something and reading the code. However, the resulting sentence does not make complete sense to me, perhaps it's time to reword it a bit. Maybe I'm missing something, though. Feel free to edit my patch if so :)","Found this by accident when debugging something and reading the code. However, the resulting sentence does not make complete sense to me, perhaps it's time to reword it a bit. Maybe I'm missing something, though. Feel free to edit my patch if so :)",True,{}
djcb/mu,https://github.com/djcb/mu,2063,2021-07-29T11:44:07Z,2021-08-01T07:39:03Z,2021-08-01T07:39:11Z,MERGED,True,1,1,1,https://github.com/nbarrientos,Fix typo in docstring,1,[],https://github.com/djcb/mu/pull/2063,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2063#issuecomment-890468689,"Found this by accident when debugging something and reading the code. However, the resulting sentence does not make complete sense to me, perhaps it's time to reword it a bit. Maybe I'm missing something, though. Feel free to edit my patch if so :)","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2070,2021-08-01T01:54:37Z,2021-08-01T07:37:48Z,2021-08-01T07:38:42Z,MERGED,True,1,2,1,https://github.com/lordpretzel,[mu4e bug] (1.6.0) - messages in old view are shown without line break,1,"['bug', 'mu4e', 'new']",https://github.com/djcb/mu/pull/2070,https://github.com/lordpretzel,1,https://github.com/djcb/mu/pull/2070,"Describe the bug
When using mu4e-view-use-old, then messages are shown without linebreak.
To Reproduce
Use the ""old"" view and open an email with multiple lines or reply to an email (also affects cited email).
This is caused by mu4e-message-outlook-cleanup. Where linefeed instead of carriage return is replaced. Looks like this was introduced in commit 539a946a and was correct before.
Environment
happens on both linux and Mac OS X
Checklist

 you are running vanilla emacs (i.e. without Doom, Evil, Spacemacs etc.) (otherwise, please try to reproduce without those
 you are running mu4e without any third-party extensions (otherwise, please try to reproduce without those)
 you are running either the latest 1.4.x release, or a 1.5.11+ development release (otherwise, please upgrade).","Describe the bug
When using mu4e-view-use-old, then messages are shown without linebreak.
To Reproduce
Use the ""old"" view and open an email with multiple lines or reply to an email (also affects cited email).
This is caused by mu4e-message-outlook-cleanup. Where linefeed instead of carriage return is replaced. Looks like this was introduced in commit 539a946a and was correct before.
Environment
happens on both linux and Mac OS X
Checklist

 you are running vanilla emacs (i.e. without Doom, Evil, Spacemacs etc.) (otherwise, please try to reproduce without those
 you are running mu4e without any third-party extensions (otherwise, please try to reproduce without those)
 you are running either the latest 1.4.x release, or a 1.5.11+ development release (otherwise, please upgrade).",True,{}
djcb/mu,https://github.com/djcb/mu,2070,2021-08-01T01:54:37Z,2021-08-01T07:37:48Z,2021-08-01T07:38:42Z,MERGED,True,1,2,1,https://github.com/lordpretzel,[mu4e bug] (1.6.0) - messages in old view are shown without line break,1,"['bug', 'mu4e', 'new']",https://github.com/djcb/mu/pull/2070,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2070#issuecomment-890468631,"Describe the bug
When using mu4e-view-use-old, then messages are shown without linebreak.
To Reproduce
Use the ""old"" view and open an email with multiple lines or reply to an email (also affects cited email).
This is caused by mu4e-message-outlook-cleanup. Where linefeed instead of carriage return is replaced. Looks like this was introduced in commit 539a946a and was correct before.
Environment
happens on both linux and Mac OS X
Checklist

 you are running vanilla emacs (i.e. without Doom, Evil, Spacemacs etc.) (otherwise, please try to reproduce without those
 you are running mu4e without any third-party extensions (otherwise, please try to reproduce without those)
 you are running either the latest 1.4.x release, or a 1.5.11+ development release (otherwise, please upgrade).","Oh thanks, that was a sneaky bug! Merged.",True,{}
djcb/mu,https://github.com/djcb/mu,2077,2021-08-03T16:56:44Z,,2022-01-10T23:49:36Z,OPEN,False,104,0,1,https://github.com/AriT93,Revive Xwidget view,1,[],https://github.com/djcb/mu/pull/2077,https://github.com/AriT93,1,https://github.com/djcb/mu/pull/2077,"extracted the 3 methods needed for viewing as message in an xwidget
in local testing this does not seem to cause any issues with the new
gnus view","extracted the 3 methods needed for viewing as message in an xwidget
in local testing this does not seem to cause any issues with the new
gnus view",True,{}
djcb/mu,https://github.com/djcb/mu,2077,2021-08-03T16:56:44Z,,2022-01-10T23:49:36Z,OPEN,False,104,0,1,https://github.com/AriT93,Revive Xwidget view,1,[],https://github.com/djcb/mu/pull/2077,https://github.com/cfriesicke,2,https://github.com/djcb/mu/pull/2077#issuecomment-1008424807,"extracted the 3 methods needed for viewing as message in an xwidget
in local testing this does not seem to cause any issues with the new
gnus view","This PR has been open for a few months, and so far there is no discussion yet whether the feature will be included. Are there plans to integrate these changes into a future release?
Personally, I would like to have the Xwidget view feature; it feels a bit more ""integrated"" than spawning an external browser on top of Emacs. I tested the code provided in the above PR on the latest Emacs from git (29.0.50) after applying the code to the latest stable release of mu (1.6.10). I can confirm that everything seems to work, both in mu4e's ""old"" view and in the new ""gnus"" view.
So far, the only two things that maybe could be added is (a) some code that will require the new file/feature so that it can be discovered after loading mu4e, and (b) the new file needs to be added to the build configuration for the feature to install. I have already made these changes in my local repo; would it help if I provide this as well?",True,{}
djcb/mu,https://github.com/djcb/mu,2077,2021-08-03T16:56:44Z,,2022-01-10T23:49:36Z,OPEN,False,104,0,1,https://github.com/AriT93,Revive Xwidget view,1,[],https://github.com/djcb/mu/pull/2077,https://github.com/djcb,3,https://github.com/djcb/mu/pull/2077#issuecomment-1009303430,"extracted the 3 methods needed for viewing as message in an xwidget
in local testing this does not seem to cause any issues with the new
gnus view","Appreciate the work, but things work a little different in 1.7.x. It's perfectly possible to make an ""action"" for this, and use is with mu4e (esp 1.6.x).
I pushed a change for 1.7 to implement the feature; that seems to work, though not for all messages.",True,{}
djcb/mu,https://github.com/djcb/mu,2077,2021-08-03T16:56:44Z,,2022-01-10T23:49:36Z,OPEN,False,104,0,1,https://github.com/AriT93,Revive Xwidget view,1,[],https://github.com/djcb/mu/pull/2077,https://github.com/cfriesicke,4,https://github.com/djcb/mu/pull/2077#issuecomment-1009424499,"extracted the 3 methods needed for viewing as message in an xwidget
in local testing this does not seem to cause any issues with the new
gnus view","Thank you for reviving the xwidgets feature in the 1.7 branch!
I pulled the newest commit from master and it seems to work! As you already said, maybe not for all mails. I had one from Amazon where webkit throws some XML parsing error. But having that experimental feature is already great! I will try to test in the next days/weeks.",True,{}
djcb/mu,https://github.com/djcb/mu,2077,2021-08-03T16:56:44Z,,2022-01-10T23:49:36Z,OPEN,False,104,0,1,https://github.com/AriT93,Revive Xwidget view,1,[],https://github.com/djcb/mu/pull/2077,https://github.com/AriT93,5,https://github.com/djcb/mu/pull/2077#issuecomment-1009464129,"extracted the 3 methods needed for viewing as message in an xwidget
in local testing this does not seem to cause any issues with the new
gnus view",yay!  thank you for that.  I've just been loading this separately.  I'm still on 1.6 but will give 1.7 a try later this week.,True,{}
djcb/mu,https://github.com/djcb/mu,2081,2021-08-08T14:49:05Z,2021-08-09T04:58:31Z,2021-08-09T04:58:45Z,MERGED,True,22,2,2,https://github.com/danielfleischer,Customize the mu4e org link description,1,[],https://github.com/djcb/mu/pull/2081,https://github.com/danielfleischer,1,https://github.com/djcb/mu/pull/2081,"There's a default function that extracts the subject but users can define their own function.
Added a mention in the documentation.
Based on code from v1.4.15.","There's a default function that extracts the subject but users can define their own function.
Added a mention in the documentation.
Based on code from v1.4.15.",True,{}
djcb/mu,https://github.com/djcb/mu,2081,2021-08-08T14:49:05Z,2021-08-09T04:58:31Z,2021-08-09T04:58:45Z,MERGED,True,22,2,2,https://github.com/danielfleischer,Customize the mu4e org link description,1,[],https://github.com/djcb/mu/pull/2081,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2081#issuecomment-894950483,"There's a default function that extracts the subject but users can define their own function.
Added a mention in the documentation.
Based on code from v1.4.15.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2087,2021-08-14T15:45:34Z,2021-08-15T17:55:25Z,2021-08-25T17:14:03Z,MERGED,True,14,0,1,https://github.com/milouse,mu4e: Add back the `h' keybinding to toggle HTML view in a gnus article,1,[],https://github.com/djcb/mu/pull/2087,https://github.com/milouse,1,https://github.com/djcb/mu/pull/2087,"This MR adds a simple function, which loops over the different parts of a message and makes use of gnus internal function to toggle the HTML part of it.
Fixes: #2013","This MR adds a simple function, which loops over the different parts of a message and makes use of gnus internal function to toggle the HTML part of it.
Fixes: #2013",True,{}
djcb/mu,https://github.com/djcb/mu,2087,2021-08-14T15:45:34Z,2021-08-15T17:55:25Z,2021-08-25T17:14:03Z,MERGED,True,14,0,1,https://github.com/milouse,mu4e: Add back the `h' keybinding to toggle HTML view in a gnus article,1,[],https://github.com/djcb/mu/pull/2087,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2087#issuecomment-899089010,"This MR adds a simple function, which loops over the different parts of a message and makes use of gnus internal function to toggle the HTML part of it.
Fixes: #2013","Merged, thanks!  Note: I did modify a some impl details in a follow up commit, but it's your idea that counts :)",True,{'HEART': ['https://github.com/milouse']}
djcb/mu,https://github.com/djcb/mu,2093,2021-08-16T11:34:06Z,2021-08-21T13:29:31Z,2021-09-30T16:21:09Z,MERGED,True,14,1,1,https://github.com/thierryvolpiatto,Create numbered backup of attached file when already exists #2090,3,[],https://github.com/djcb/mu/pull/2093,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2093,Fix #2090.,Fix #2090.,True,{}
djcb/mu,https://github.com/djcb/mu,2093,2021-08-16T11:34:06Z,2021-08-21T13:29:31Z,2021-09-30T16:21:09Z,MERGED,True,14,1,1,https://github.com/thierryvolpiatto,Create numbered backup of attached file when already exists #2090,3,[],https://github.com/djcb/mu/pull/2093,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2093#issuecomment-903115312,Fix #2090.,Merged -- thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,2105,2021-08-24T10:07:46Z,2021-09-02T20:54:23Z,2021-09-02T20:54:28Z,MERGED,True,1,1,1,https://github.com/c0dev0id,Fix mu-init manpage markup,1,[],https://github.com/djcb/mu/pull/2105,https://github.com/c0dev0id,1,https://github.com/djcb/mu/pull/2105,"Hi,
The manpage markup in mu-init is broken and renders like this when escape sequences are enabled:
<my-email-address> can be either a plain e-mail address (such as
foo@example.com), or a regular-expression (of the 'Basic POSIX'
flavor), wrapped in 0

This PR fixes the markup to what I think was meant. Also, I think the second '/' was missing in the wrapped regex email address notation.
With this fix, it reads like:
<my-email-address> can be either a plain e-mail address (such as
foo@example.com), or a regular-expression (of the 'Basic POSIX'
flavor), wrapped in / (such as /foo-.*@example\.com/).

The '/' as well as '/foo-.*@example.com/' are bold.","Hi,
The manpage markup in mu-init is broken and renders like this when escape sequences are enabled:
<my-email-address> can be either a plain e-mail address (such as
foo@example.com), or a regular-expression (of the 'Basic POSIX'
flavor), wrapped in 0

This PR fixes the markup to what I think was meant. Also, I think the second '/' was missing in the wrapped regex email address notation.
With this fix, it reads like:
<my-email-address> can be either a plain e-mail address (such as
foo@example.com), or a regular-expression (of the 'Basic POSIX'
flavor), wrapped in / (such as /foo-.*@example\.com/).

The '/' as well as '/foo-.*@example.com/' are bold.",True,{}
djcb/mu,https://github.com/djcb/mu,2105,2021-08-24T10:07:46Z,2021-09-02T20:54:23Z,2021-09-02T20:54:28Z,MERGED,True,1,1,1,https://github.com/c0dev0id,Fix mu-init manpage markup,1,[],https://github.com/djcb/mu/pull/2105,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2105#issuecomment-912048798,"Hi,
The manpage markup in mu-init is broken and renders like this when escape sequences are enabled:
<my-email-address> can be either a plain e-mail address (such as
foo@example.com), or a regular-expression (of the 'Basic POSIX'
flavor), wrapped in 0

This PR fixes the markup to what I think was meant. Also, I think the second '/' was missing in the wrapped regex email address notation.
With this fix, it reads like:
<my-email-address> can be either a plain e-mail address (such as
foo@example.com), or a regular-expression (of the 'Basic POSIX'
flavor), wrapped in / (such as /foo-.*@example\.com/).

The '/' as well as '/foo-.*@example.com/' are bold.","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2109,2021-08-25T13:02:31Z,2021-08-25T15:39:57Z,2021-08-25T16:27:34Z,MERGED,True,1,1,1,https://github.com/JakDar,mu4e: fix mu4e-view-save-attachments void variable arg,1,[],https://github.com/djcb/mu/pull/2109,https://github.com/JakDar,1,https://github.com/djcb/mu/pull/2109,"This _ looks like typo (correct me if I'm mistaken 😅).
_arg instead of arg here caused Symbol’s value as variable is void: arg for me when invoking mu4e-view-save-attachments .","This _ looks like typo (correct me if I'm mistaken 😅).
_arg instead of arg here caused Symbol’s value as variable is void: arg for me when invoking mu4e-view-save-attachments .",True,{}
djcb/mu,https://github.com/djcb/mu,2109,2021-08-25T13:02:31Z,2021-08-25T15:39:57Z,2021-08-25T16:27:34Z,MERGED,True,1,1,1,https://github.com/JakDar,mu4e: fix mu4e-view-save-attachments void variable arg,1,[],https://github.com/djcb/mu/pull/2109,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2109#issuecomment-905624799,"This _ looks like typo (correct me if I'm mistaken 😅).
_arg instead of arg here caused Symbol’s value as variable is void: arg for me when invoking mu4e-view-save-attachments .","Don't think it's a typo, I was meant to signify that _arg was unused. However, that's not (or no longer) the case, so indeed it should be arg now. Thanks, merged!",True,{}
djcb/mu,https://github.com/djcb/mu,2110,2021-08-25T18:21:00Z,,2021-08-25T18:21:00Z,OPEN,False,9,3,2,https://github.com/llmII,Support maildir shortcuts without keys,1,[],https://github.com/djcb/mu/pull/2110,https://github.com/llmII,1,https://github.com/djcb/mu/pull/2110,"This adds support for mu4e-maildir-shortuct to include maildirs
without a :key for jumping to.
Fixes mu4e~main-maildirs to not error upon a maildir shortcut without
a key.
Fixes mu4e-ask-maildir to not include maildir shortcuts without keys.
Resolves #2106.
Justification:
Allows one to display more maildir's, their counts (unread/total), in
the mu4e main view. Before this if a user had more maildirs than the
total amount of displayable and usable single key shortcuts they would
have to pick and choose which ones they want displayed be they important
to them or not.","This adds support for mu4e-maildir-shortuct to include maildirs
without a :key for jumping to.
Fixes mu4e~main-maildirs to not error upon a maildir shortcut without
a key.
Fixes mu4e-ask-maildir to not include maildir shortcuts without keys.
Resolves #2106.
Justification:
Allows one to display more maildir's, their counts (unread/total), in
the mu4e main view. Before this if a user had more maildirs than the
total amount of displayable and usable single key shortcuts they would
have to pick and choose which ones they want displayed be they important
to them or not.",True,{}
djcb/mu,https://github.com/djcb/mu,2111,2021-08-25T19:19:52Z,2021-10-23T08:15:21Z,2021-10-23T08:15:21Z,CLOSED,False,8,0,1,https://github.com/llmII,Add new hook `mu4e-processing-finished-hook`.,1,[],https://github.com/djcb/mu/pull/2111,https://github.com/llmII,1,https://github.com/djcb/mu/pull/2111,"Fix: #2099
Serves as a way to guarantee a function gets ran anytime mu4e finishes
handling data from mu related to index operations, regardless of the
index actually being updated.
An example use case is when making use of goimapnotify to trigger when mu4e does an index by using file watchers. If goimapnotify is watching several boxes (different or same account(s)) it may generate that trigger multiple time (one user used file deletion as a trigger, I use file change and appending a single character as a trigger). Rather than creating hold down timers, what I do is just add a hook to the new hook that will remove itself once it runs, and the code that adds it refuses to add it if it's already present. This means that if goimapnotify triggers multiple times while mu4e is indexing, then mu4e will reindex after indexing, but not attempt to do so during an index. With my configuration this comes in handy as a way to manage indexing without lots of complexity.
I also use this to sync (in my doom config) +mu4e-personal-addresses which is used for selecting who you're sending as from a reply. The idea is to filter all contacts for contacts that fit my definition of ""who am I"" and add them to that list for selection upon reply later (which is an automatic selection).","Fix: #2099
Serves as a way to guarantee a function gets ran anytime mu4e finishes
handling data from mu related to index operations, regardless of the
index actually being updated.
An example use case is when making use of goimapnotify to trigger when mu4e does an index by using file watchers. If goimapnotify is watching several boxes (different or same account(s)) it may generate that trigger multiple time (one user used file deletion as a trigger, I use file change and appending a single character as a trigger). Rather than creating hold down timers, what I do is just add a hook to the new hook that will remove itself once it runs, and the code that adds it refuses to add it if it's already present. This means that if goimapnotify triggers multiple times while mu4e is indexing, then mu4e will reindex after indexing, but not attempt to do so during an index. With my configuration this comes in handy as a way to manage indexing without lots of complexity.
I also use this to sync (in my doom config) +mu4e-personal-addresses which is used for selecting who you're sending as from a reply. The idea is to filter all contacts for contacts that fit my definition of ""who am I"" and add them to that list for selection upon reply later (which is an automatic selection).",True,{}
djcb/mu,https://github.com/djcb/mu,2111,2021-08-25T19:19:52Z,2021-10-23T08:15:21Z,2021-10-23T08:15:21Z,CLOSED,False,8,0,1,https://github.com/llmII,Add new hook `mu4e-processing-finished-hook`.,1,[],https://github.com/djcb/mu/pull/2111,https://github.com/pmatos,2,https://github.com/djcb/mu/pull/2111#issuecomment-947402439,"Fix: #2099
Serves as a way to guarantee a function gets ran anytime mu4e finishes
handling data from mu related to index operations, regardless of the
index actually being updated.
An example use case is when making use of goimapnotify to trigger when mu4e does an index by using file watchers. If goimapnotify is watching several boxes (different or same account(s)) it may generate that trigger multiple time (one user used file deletion as a trigger, I use file change and appending a single character as a trigger). Rather than creating hold down timers, what I do is just add a hook to the new hook that will remove itself once it runs, and the code that adds it refuses to add it if it's already present. This means that if goimapnotify triggers multiple times while mu4e is indexing, then mu4e will reindex after indexing, but not attempt to do so during an index. With my configuration this comes in handy as a way to manage indexing without lots of complexity.
I also use this to sync (in my doom config) +mu4e-personal-addresses which is used for selecting who you're sending as from a reply. The idea is to filter all contacts for contacts that fit my definition of ""who am I"" and add them to that list for selection upon reply later (which is an automatic selection).",Is this related to #2136 as well?,True,{}
djcb/mu,https://github.com/djcb/mu,2111,2021-08-25T19:19:52Z,2021-10-23T08:15:21Z,2021-10-23T08:15:21Z,CLOSED,False,8,0,1,https://github.com/llmII,Add new hook `mu4e-processing-finished-hook`.,1,[],https://github.com/djcb/mu/pull/2111,https://github.com/llmII,3,https://github.com/djcb/mu/pull/2111#issuecomment-947516334,"Fix: #2099
Serves as a way to guarantee a function gets ran anytime mu4e finishes
handling data from mu related to index operations, regardless of the
index actually being updated.
An example use case is when making use of goimapnotify to trigger when mu4e does an index by using file watchers. If goimapnotify is watching several boxes (different or same account(s)) it may generate that trigger multiple time (one user used file deletion as a trigger, I use file change and appending a single character as a trigger). Rather than creating hold down timers, what I do is just add a hook to the new hook that will remove itself once it runs, and the code that adds it refuses to add it if it's already present. This means that if goimapnotify triggers multiple times while mu4e is indexing, then mu4e will reindex after indexing, but not attempt to do so during an index. With my configuration this comes in handy as a way to manage indexing without lots of complexity.
I also use this to sync (in my doom config) +mu4e-personal-addresses which is used for selecting who you're sending as from a reply. The idea is to filter all contacts for contacts that fit my definition of ""who am I"" and add them to that list for selection upon reply later (which is an automatic selection).","Is this related to #2136 as well?

No - if I'm reading correctly they want a hook called once per mail processed. This is a hook that gets called once after mu handles indexing, regardless of if new messages were found during indexing or not. It only gets called after, not during, and not per message.",True,{}
djcb/mu,https://github.com/djcb/mu,2111,2021-08-25T19:19:52Z,2021-10-23T08:15:21Z,2021-10-23T08:15:21Z,CLOSED,False,8,0,1,https://github.com/llmII,Add new hook `mu4e-processing-finished-hook`.,1,[],https://github.com/djcb/mu/pull/2111,https://github.com/djcb,4,https://github.com/djcb/mu/pull/2111#issuecomment-950115339,"Fix: #2099
Serves as a way to guarantee a function gets ran anytime mu4e finishes
handling data from mu related to index operations, regardless of the
index actually being updated.
An example use case is when making use of goimapnotify to trigger when mu4e does an index by using file watchers. If goimapnotify is watching several boxes (different or same account(s)) it may generate that trigger multiple time (one user used file deletion as a trigger, I use file change and appending a single character as a trigger). Rather than creating hold down timers, what I do is just add a hook to the new hook that will remove itself once it runs, and the code that adds it refuses to add it if it's already present. This means that if goimapnotify triggers multiple times while mu4e is indexing, then mu4e will reindex after indexing, but not attempt to do so during an index. With my configuration this comes in handy as a way to manage indexing without lots of complexity.
I also use this to sync (in my doom config) +mu4e-personal-addresses which is used for selecting who you're sending as from a reply. The idea is to filter all contacts for contacts that fit my definition of ""who am I"" and add them to that list for selection upon reply later (which is an automatic selection).","Thanks!
I have solved this in a slightly different way, by changing the behavior of mu4e-index-updated-hook (and added a variable mu4e-index-update-status to see what happened.",True,{}
djcb/mu,https://github.com/djcb/mu,2118,2021-08-30T11:01:56Z,2021-08-30T15:31:21Z,2021-08-30T16:25:00Z,MERGED,True,4,1,1,https://github.com/danielfleischer,Attachments Saving Improvment,1,[],https://github.com/djcb/mu/pull/2118,https://github.com/danielfleischer,1,https://github.com/djcb/mu/pull/2118,"Different MIME configurations need a fallback logic.
Instead of looking for the attachment ""fname"" in the structure
(""attachment"" . (filename ""fname""))
we find the same file name in the structure
(""mime-type"" . (name . ""fname""))
by searching, since we don't know the MIME type beforehand.
Should solve #2116 .","Different MIME configurations need a fallback logic.
Instead of looking for the attachment ""fname"" in the structure
(""attachment"" . (filename ""fname""))
we find the same file name in the structure
(""mime-type"" . (name . ""fname""))
by searching, since we don't know the MIME type beforehand.
Should solve #2116 .",True,{}
djcb/mu,https://github.com/djcb/mu,2118,2021-08-30T11:01:56Z,2021-08-30T15:31:21Z,2021-08-30T16:25:00Z,MERGED,True,4,1,1,https://github.com/danielfleischer,Attachments Saving Improvment,1,[],https://github.com/djcb/mu/pull/2118,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2118#issuecomment-908268351,"Different MIME configurations need a fallback logic.
Instead of looking for the attachment ""fname"" in the structure
(""attachment"" . (filename ""fname""))
we find the same file name in the structure
(""mime-type"" . (name . ""fname""))
by searching, since we don't know the MIME type beforehand.
Should solve #2116 .","Thanks!
You just got in the middle of the master refactoring, so the merge doesn't quite apply... can you make it instead use release/1.6 as the target branch?",True,{}
djcb/mu,https://github.com/djcb/mu,2118,2021-08-30T11:01:56Z,2021-08-30T15:31:21Z,2021-08-30T16:25:00Z,MERGED,True,4,1,1,https://github.com/danielfleischer,Attachments Saving Improvment,1,[],https://github.com/djcb/mu/pull/2118,https://github.com/danielfleischer,3,https://github.com/djcb/mu/pull/2118#issuecomment-908275037,"Different MIME configurations need a fallback logic.
Instead of looking for the attachment ""fname"" in the structure
(""attachment"" . (filename ""fname""))
we find the same file name in the structure
(""mime-type"" . (name . ""fname""))
by searching, since we don't know the MIME type beforehand.
Should solve #2116 .","I see there's a lot of going on. Done.
It will have to be moved later from mu4e-view-gnus.el to mu4e-view.el.",True,{}
djcb/mu,https://github.com/djcb/mu,2118,2021-08-30T11:01:56Z,2021-08-30T15:31:21Z,2021-08-30T16:25:00Z,MERGED,True,4,1,1,https://github.com/danielfleischer,Attachments Saving Improvment,1,[],https://github.com/djcb/mu/pull/2118,https://github.com/djcb,4,https://github.com/djcb/mu/pull/2118#issuecomment-908442452,"Different MIME configurations need a fallback logic.
Instead of looking for the attachment ""fname"" in the structure
(""attachment"" . (filename ""fname""))
we find the same file name in the structure
(""mime-type"" . (name . ""fname""))
by searching, since we don't know the MIME type beforehand.
Should solve #2116 .","Merged -- thanks! I'll ""port"" it to mu4e-view in the new setup.",True,{}
djcb/mu,https://github.com/djcb/mu,2118,2021-08-30T11:01:56Z,2021-08-30T15:31:21Z,2021-08-30T16:25:00Z,MERGED,True,4,1,1,https://github.com/danielfleischer,Attachments Saving Improvment,1,[],https://github.com/djcb/mu/pull/2118,https://github.com/danielfleischer,5,https://github.com/djcb/mu/pull/2118#issuecomment-908485570,"Different MIME configurations need a fallback logic.
Instead of looking for the attachment ""fname"" in the structure
(""attachment"" . (filename ""fname""))
we find the same file name in the structure
(""mime-type"" . (name . ""fname""))
by searching, since we don't know the MIME type beforehand.
Should solve #2116 .","Great, you should probably close issue #2116.",True,{}
djcb/mu,https://github.com/djcb/mu,2120,2021-08-31T10:00:35Z,,2022-05-16T08:02:23Z,OPEN,False,2,37,3,https://github.com/andersjohansson,Remove unnecessary faces,1,[],https://github.com/djcb/mu/pull/2120,https://github.com/andersjohansson,1,https://github.com/djcb/mu/pull/2120,"With the removal of the old mu4e-view, most of these faces were only used in compose, where it seems more reasonable to not remap the faces from message-mode (which can be suitably customized by users in any case).
The only face that was actually used in more places was mu4e-header-key-face which perhaps could be removed as well, but I didn’t do that for this initial suggestion.","With the removal of the old mu4e-view, most of these faces were only used in compose, where it seems more reasonable to not remap the faces from message-mode (which can be suitably customized by users in any case).
The only face that was actually used in more places was mu4e-header-key-face which perhaps could be removed as well, but I didn’t do that for this initial suggestion.",True,{}
djcb/mu,https://github.com/djcb/mu,2125,2021-09-04T08:15:24Z,2021-09-04T14:41:58Z,2021-09-04T14:41:58Z,CLOSED,False,5,0,1,https://github.com/Chris00,Document the use of regular expressions for --my-address,1,[],https://github.com/djcb/mu/pull/2125,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2125,See #2124,See #2124,True,{}
djcb/mu,https://github.com/djcb/mu,2125,2021-09-04T08:15:24Z,2021-09-04T14:41:58Z,2021-09-04T14:41:58Z,CLOSED,False,5,0,1,https://github.com/Chris00,Document the use of regular expressions for --my-address,1,[],https://github.com/djcb/mu/pull/2125,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2125#issuecomment-912985359,See #2124,"Ah, thanks, but I already did the same this morning :-)",True,{}
djcb/mu,https://github.com/djcb/mu,2127,2021-09-07T09:55:28Z,2021-09-07T18:26:05Z,2021-09-07T18:26:15Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-list: fix typo,1,[],https://github.com/djcb/mu/pull/2127,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2127,,,True,{}
djcb/mu,https://github.com/djcb/mu,2127,2021-09-07T09:55:28Z,2021-09-07T18:26:05Z,2021-09-07T18:26:15Z,MERGED,True,1,1,1,https://github.com/Chris00,mu4e-list: fix typo,1,[],https://github.com/djcb/mu/pull/2127,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2127#issuecomment-914525725,,Thanks.,True,{}
djcb/mu,https://github.com/djcb/mu,2128,2021-09-07T16:50:52Z,2021-09-08T06:42:10Z,2021-09-08T06:42:20Z,CLOSED,False,3,3,1,https://github.com/Chris00,mu4e: Update the instructions to initialize mu,1,[],https://github.com/djcb/mu/pull/2128,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2128,"Using “mu init --maildir=~/Maildir” the yield
$ mu index
error: '~/Maildir' is not readable: No such file or directory","Using “mu init --maildir=~/Maildir” the yield
$ mu index
error: '~/Maildir' is not readable: No such file or directory",True,{}
djcb/mu,https://github.com/djcb/mu,2128,2021-09-07T16:50:52Z,2021-09-08T06:42:10Z,2021-09-08T06:42:20Z,CLOSED,False,3,3,1,https://github.com/Chris00,mu4e: Update the instructions to initialize mu,1,[],https://github.com/djcb/mu/pull/2128,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2128#issuecomment-914528504,"Using “mu init --maildir=~/Maildir” the yield
$ mu index
error: '~/Maildir' is not readable: No such file or directory",Hmmm... at least zsh handles the '~'...; what shell are you using?,True,{}
djcb/mu,https://github.com/djcb/mu,2128,2021-09-07T16:50:52Z,2021-09-08T06:42:10Z,2021-09-08T06:42:20Z,CLOSED,False,3,3,1,https://github.com/Chris00,mu4e: Update the instructions to initialize mu,1,[],https://github.com/djcb/mu/pull/2128,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/2128#issuecomment-914583346,"Using “mu init --maildir=~/Maildir” the yield
$ mu index
error: '~/Maildir' is not readable: No such file or directory","I use bash.  ~ seems not to be expanded in all situations:
$ echo x=~/Maildir
x=/home/trch/Maildir
$ echo --maildir=~/Maildir
--maildir=~/Maildir
$ echo --maildir= ~/Maildir
--maildir= /home/trch/Maildir",True,{}
djcb/mu,https://github.com/djcb/mu,2128,2021-09-07T16:50:52Z,2021-09-08T06:42:10Z,2021-09-08T06:42:20Z,CLOSED,False,3,3,1,https://github.com/Chris00,mu4e: Update the instructions to initialize mu,1,[],https://github.com/djcb/mu/pull/2128,https://github.com/djcb,4,https://github.com/djcb/mu/pull/2128#issuecomment-914948949,"Using “mu init --maildir=~/Maildir” the yield
$ mu index
error: '~/Maildir' is not readable: No such file or directory",I checked and actually mu is supposed to do the expansion itself when the shell doesn't... but it didn't work in the meson case... until (hopefully) now. Can you check? Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,2128,2021-09-07T16:50:52Z,2021-09-08T06:42:10Z,2021-09-08T06:42:20Z,CLOSED,False,3,3,1,https://github.com/Chris00,mu4e: Update the instructions to initialize mu,1,[],https://github.com/djcb/mu/pull/2128,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/2128#issuecomment-914963472,"Using “mu init --maildir=~/Maildir” the yield
$ mu index
error: '~/Maildir' is not readable: No such file or directory",It works.,True,{}
djcb/mu,https://github.com/djcb/mu,2129,2021-09-08T07:25:50Z,2021-09-30T12:34:27Z,2021-09-30T12:34:34Z,MERGED,True,2,2,1,https://github.com/Chris00,mu4e-headers: Avoid the obsolete command warning,1,[],https://github.com/djcb/mu/pull/2129,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2129,,,True,{}
djcb/mu,https://github.com/djcb/mu,2129,2021-09-08T07:25:50Z,2021-09-30T12:34:27Z,2021-09-30T12:34:34Z,MERGED,True,2,2,1,https://github.com/Chris00,mu4e-headers: Avoid the obsolete command warning,1,[],https://github.com/djcb/mu/pull/2129,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2129#issuecomment-915170648,,"Those commands should go to the mu4e-search-minor-mode. Not sure if that works yet, but at least that's the correct place.
So instead of having to duplicate the command in various major-modes (header/view/main), they just enable the search minor mode. It's work-in-progress though.",True,{}
djcb/mu,https://github.com/djcb/mu,2129,2021-09-08T07:25:50Z,2021-09-30T12:34:27Z,2021-09-30T12:34:34Z,MERGED,True,2,2,1,https://github.com/Chris00,mu4e-headers: Avoid the obsolete command warning,1,[],https://github.com/djcb/mu/pull/2129,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/2129#issuecomment-915314179,,"That's a good idea.  I activated mu4e-search-minor-mode in header mode (I like to live dangerously 😀).  I was expecting that it overrides the g key but it doesn't.  I guess it is because, in view mode, g is bound to mu4e-view-go-to-url.  So, to which map will g be attached?",True,{}
djcb/mu,https://github.com/djcb/mu,2129,2021-09-08T07:25:50Z,2021-09-30T12:34:27Z,2021-09-30T12:34:34Z,MERGED,True,2,2,1,https://github.com/Chris00,mu4e-headers: Avoid the obsolete command warning,1,[],https://github.com/djcb/mu/pull/2129,https://github.com/djcb,4,https://github.com/djcb/mu/pull/2129#issuecomment-915533658,,"There are a few clashes (esp. when more things will be move to minor-modes) , we can solve those on a case-by-case basis.... for 'g' I think it's 'go-to-url' is more useful. Perhaps we need two bindings in the minor mode map.",True,{}
djcb/mu,https://github.com/djcb/mu,2129,2021-09-08T07:25:50Z,2021-09-30T12:34:27Z,2021-09-30T12:34:34Z,MERGED,True,2,2,1,https://github.com/Chris00,mu4e-headers: Avoid the obsolete command warning,1,[],https://github.com/djcb/mu/pull/2129,https://github.com/djcb,5,https://github.com/djcb/mu/pull/2129#issuecomment-931280645,,"Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2137,2021-09-23T16:03:37Z,2021-09-30T12:35:22Z,2021-09-30T16:21:10Z,MERGED,True,7,6,1,https://github.com/thierryvolpiatto,Fix `mu4e-get-view-buffer` (#2132),1,[],https://github.com/djcb/mu/pull/2137,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2137,"It actually returns a buffer-name whereas it should return a buffer
object which make mu4e~switch-back-to-mu4e-buffer fail because
buffer-live-p expects a buffer object.","It actually returns a buffer-name whereas it should return a buffer
object which make mu4e~switch-back-to-mu4e-buffer fail because
buffer-live-p expects a buffer object.",True,{}
djcb/mu,https://github.com/djcb/mu,2137,2021-09-23T16:03:37Z,2021-09-30T12:35:22Z,2021-09-30T16:21:10Z,MERGED,True,7,6,1,https://github.com/thierryvolpiatto,Fix `mu4e-get-view-buffer` (#2132),1,[],https://github.com/djcb/mu/pull/2137,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2137#issuecomment-931281229,"It actually returns a buffer-name whereas it should return a buffer
object which make mu4e~switch-back-to-mu4e-buffer fail because
buffer-live-p expects a buffer object.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2141,2021-09-25T08:30:55Z,2021-09-30T12:33:23Z,2021-10-01T14:38:12Z,MERGED,True,8,8,2,https://github.com/tsdh,Fix declare-function statements referencing the now-gone mu4e-utils,1,[],https://github.com/djcb/mu/pull/2141,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2141,"This fixes some declare-function statements referencing the now-gone mu4e-utils.el.
BTW, I've already sent you this patch by mail on August, 31st, but never got a response.  Did your spam filter classify my mails as spam, or is git send-email simply a way to contribute that you are not interested in, or is that fine but should go to the mailinglist rather than your private mail address to allow for broader discussion?","This fixes some declare-function statements referencing the now-gone mu4e-utils.el.
BTW, I've already sent you this patch by mail on August, 31st, but never got a response.  Did your spam filter classify my mails as spam, or is git send-email simply a way to contribute that you are not interested in, or is that fine but should go to the mailinglist rather than your private mail address to allow for broader discussion?",True,{}
djcb/mu,https://github.com/djcb/mu,2141,2021-09-25T08:30:55Z,2021-09-30T12:33:23Z,2021-10-01T14:38:12Z,MERGED,True,8,8,2,https://github.com/tsdh,Fix declare-function statements referencing the now-gone mu4e-utils,1,[],https://github.com/djcb/mu/pull/2141,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2141#issuecomment-931279857,"This fixes some declare-function statements referencing the now-gone mu4e-utils.el.
BTW, I've already sent you this patch by mail on August, 31st, but never got a response.  Did your spam filter classify my mails as spam, or is git send-email simply a way to contribute that you are not interested in, or is that fine but should go to the mailinglist rather than your private mail address to allow for broader discussion?","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2141,2021-09-25T08:30:55Z,2021-09-30T12:33:23Z,2021-10-01T14:38:12Z,MERGED,True,8,8,2,https://github.com/tsdh,Fix declare-function statements referencing the now-gone mu4e-utils,1,[],https://github.com/djcb/mu/pull/2141,https://github.com/tsdh,3,https://github.com/djcb/mu/pull/2141#issuecomment-932287976,"This fixes some declare-function statements referencing the now-gone mu4e-utils.el.
BTW, I've already sent you this patch by mail on August, 31st, but never got a response.  Did your spam filter classify my mails as spam, or is git send-email simply a way to contribute that you are not interested in, or is that fine but should go to the mailinglist rather than your private mail address to allow for broader discussion?","@djcb Hey Dirk, thanks for merging!
What about the question about the patch gone unseen when I've sent it per mail?",True,{}
djcb/mu,https://github.com/djcb/mu,2142,2021-09-25T11:56:24Z,2021-09-30T12:38:43Z,2021-10-01T07:15:54Z,MERGED,True,13,12,2,https://github.com/tsdh,Allow a function as mu4e-split-view value,1,[],https://github.com/djcb/mu/pull/2142,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2142,"This allows to have a function returning a window as value of
mu4e-split-view.  I'm using this patch since quite some time locally with the
following function.
(defun th/mu4e-split-view ()
  (let* ((headers (mu4e-get-headers-buffer))
         (headers-win (and headers (get-buffer-window headers)))
         (view (mu4e-get-view-buffer))
         (view-win (and view (get-buffer-window view))))
    (cond
     ;; There's a view window, just use it.
     (view-win view-win)
     ;; Just one window, split sensibly, i.e., horizontally or
     ;; vertically depending on geometry.
     ((one-window-p) (split-window-sensibly))
     ;; Otherwise, use the tallest window.
     (t (car (sort (delq headers-win (window-list))
                   (lambda (a b)
                     (> (window-height a) (window-height b)))))))))

(setq mu4e-split-view #'th/mu4e-split-view)","This allows to have a function returning a window as value of
mu4e-split-view.  I'm using this patch since quite some time locally with the
following function.
(defun th/mu4e-split-view ()
  (let* ((headers (mu4e-get-headers-buffer))
         (headers-win (and headers (get-buffer-window headers)))
         (view (mu4e-get-view-buffer))
         (view-win (and view (get-buffer-window view))))
    (cond
     ;; There's a view window, just use it.
     (view-win view-win)
     ;; Just one window, split sensibly, i.e., horizontally or
     ;; vertically depending on geometry.
     ((one-window-p) (split-window-sensibly))
     ;; Otherwise, use the tallest window.
     (t (car (sort (delq headers-win (window-list))
                   (lambda (a b)
                     (> (window-height a) (window-height b)))))))))

(setq mu4e-split-view #'th/mu4e-split-view)",True,{}
djcb/mu,https://github.com/djcb/mu,2142,2021-09-25T11:56:24Z,2021-09-30T12:38:43Z,2021-10-01T07:15:54Z,MERGED,True,13,12,2,https://github.com/tsdh,Allow a function as mu4e-split-view value,1,[],https://github.com/djcb/mu/pull/2142,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2142#issuecomment-931283587,"This allows to have a function returning a window as value of
mu4e-split-view.  I'm using this patch since quite some time locally with the
following function.
(defun th/mu4e-split-view ()
  (let* ((headers (mu4e-get-headers-buffer))
         (headers-win (and headers (get-buffer-window headers)))
         (view (mu4e-get-view-buffer))
         (view-win (and view (get-buffer-window view))))
    (cond
     ;; There's a view window, just use it.
     (view-win view-win)
     ;; Just one window, split sensibly, i.e., horizontally or
     ;; vertically depending on geometry.
     ((one-window-p) (split-window-sensibly))
     ;; Otherwise, use the tallest window.
     (t (car (sort (delq headers-win (window-list))
                   (lambda (a b)
                     (> (window-height a) (window-height b)))))))))

(setq mu4e-split-view #'th/mu4e-split-view)","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2147,2021-09-29T19:27:25Z,2021-09-30T12:39:17Z,2021-10-01T07:15:59Z,MERGED,True,2,2,1,https://github.com/tsdh,Fix refs to mu4e~update-buffer which has been renamed to mu4e--update-buffer,1,[],https://github.com/djcb/mu/pull/2147,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2147,"On master, mu4e~update-buffer has been renamed to mu4e--update-buffer but some references haven't been adapted.  When mu4e-display-update-status-in-modeline is non-nil, one gets the following error on every search:
Error during redisplay: (eval (concat (propertize (mu4e-quote-for-modeline ""T maildir:\""/Fastmail/INBOX\"""") 'face 'mu4e-modeline-face) "" "" (if (and mu4e-display-update-status-in-modeline (buffer-live-p mu4e~update-buffer) (process-live-p (get-buffer-process mu4e~update-buffer))) (propertize "" (updating)"" 'face 'mu4e-modeline-face) """"))) signaled (void-variable mu4e~update-buffer)
This PR fixes those two leftovers.","On master, mu4e~update-buffer has been renamed to mu4e--update-buffer but some references haven't been adapted.  When mu4e-display-update-status-in-modeline is non-nil, one gets the following error on every search:
Error during redisplay: (eval (concat (propertize (mu4e-quote-for-modeline ""T maildir:\""/Fastmail/INBOX\"""") 'face 'mu4e-modeline-face) "" "" (if (and mu4e-display-update-status-in-modeline (buffer-live-p mu4e~update-buffer) (process-live-p (get-buffer-process mu4e~update-buffer))) (propertize "" (updating)"" 'face 'mu4e-modeline-face) """"))) signaled (void-variable mu4e~update-buffer)
This PR fixes those two leftovers.",True,{}
djcb/mu,https://github.com/djcb/mu,2147,2021-09-29T19:27:25Z,2021-09-30T12:39:17Z,2021-10-01T07:15:59Z,MERGED,True,2,2,1,https://github.com/tsdh,Fix refs to mu4e~update-buffer which has been renamed to mu4e--update-buffer,1,[],https://github.com/djcb/mu/pull/2147,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2147#issuecomment-931283973,"On master, mu4e~update-buffer has been renamed to mu4e--update-buffer but some references haven't been adapted.  When mu4e-display-update-status-in-modeline is non-nil, one gets the following error on every search:
Error during redisplay: (eval (concat (propertize (mu4e-quote-for-modeline ""T maildir:\""/Fastmail/INBOX\"""") 'face 'mu4e-modeline-face) "" "" (if (and mu4e-display-update-status-in-modeline (buffer-live-p mu4e~update-buffer) (process-live-p (get-buffer-process mu4e~update-buffer))) (propertize "" (updating)"" 'face 'mu4e-modeline-face) """"))) signaled (void-variable mu4e~update-buffer)
This PR fixes those two leftovers.","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2150,2021-09-30T15:00:57Z,2021-09-30T15:50:39Z,2021-09-30T16:13:43Z,MERGED,True,4,3,1,https://github.com/thierryvolpiatto,Reset `gnus-article-buffer` in mu4e-view (#2139),1,[],https://github.com/djcb/mu/pull/2150,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2150,"This is needed when gnus is used along mu4e for other purpose like
reading News, in this case gnus rename gnus-article-buffer and we
end up with an unrelated buffer-name in mu4e.","This is needed when gnus is used along mu4e for other purpose like
reading News, in this case gnus rename gnus-article-buffer and we
end up with an unrelated buffer-name in mu4e.",True,{}
djcb/mu,https://github.com/djcb/mu,2150,2021-09-30T15:00:57Z,2021-09-30T15:50:39Z,2021-09-30T16:13:43Z,MERGED,True,4,3,1,https://github.com/thierryvolpiatto,Reset `gnus-article-buffer` in mu4e-view (#2139),1,[],https://github.com/djcb/mu/pull/2150,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2150#issuecomment-931447049,"This is needed when gnus is used along mu4e for other purpose like
reading News, in this case gnus rename gnus-article-buffer and we
end up with an unrelated buffer-name in mu4e.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2152,2021-10-03T14:44:25Z,2021-10-13T11:47:48Z,2021-10-15T22:12:05Z,MERGED,True,2,2,2,https://github.com/progfolio,mu4e-search-edit: Fix obsolete alias; update documentation,1,[],https://github.com/djcb/mu/pull/2152,https://github.com/progfolio,1,https://github.com/djcb/mu/pull/2152,"Replace obsolete variable alias with obsolete function alias for mu4e-headers-search-edit.
Update docstring for mu4e-view-search-edit to reference the new function.","Replace obsolete variable alias with obsolete function alias for mu4e-headers-search-edit.
Update docstring for mu4e-view-search-edit to reference the new function.",True,{}
djcb/mu,https://github.com/djcb/mu,2152,2021-10-03T14:44:25Z,2021-10-13T11:47:48Z,2021-10-15T22:12:05Z,MERGED,True,2,2,2,https://github.com/progfolio,mu4e-search-edit: Fix obsolete alias; update documentation,1,[],https://github.com/djcb/mu/pull/2152,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2152#issuecomment-942218822,"Replace obsolete variable alias with obsolete function alias for mu4e-headers-search-edit.
Update docstring for mu4e-view-search-edit to reference the new function.","Merged, thanks.",True,{'THUMBS_UP': ['https://github.com/progfolio']}
djcb/mu,https://github.com/djcb/mu,2156,2021-10-11T12:39:36Z,2021-10-13T11:45:20Z,2021-10-13T11:47:08Z,MERGED,True,1,1,1,https://github.com/corderophi678,Add Emacs v29 support for enabling mu4e,1,[],https://github.com/djcb/mu/pull/2156,https://github.com/corderophi678,1,https://github.com/djcb/mu/pull/2156,"Current version checks for enabling mu4e don't include checking for Emacs 29, as such installing mu when using Emacs 29 does not appear to install mu4e. This suggestion changes that behavior.","Current version checks for enabling mu4e don't include checking for Emacs 29, as such installing mu when using Emacs 29 does not appear to install mu4e. This suggestion changes that behavior.",True,{}
djcb/mu,https://github.com/djcb/mu,2156,2021-10-11T12:39:36Z,2021-10-13T11:45:20Z,2021-10-13T11:47:08Z,MERGED,True,1,1,1,https://github.com/corderophi678,Add Emacs v29 support for enabling mu4e,1,[],https://github.com/djcb/mu/pull/2156,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2156#issuecomment-942218101,"Current version checks for enabling mu4e don't include checking for Emacs 29, as such installing mu when using Emacs 29 does not appear to install mu4e. This suggestion changes that behavior.","Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2161,2021-10-21T20:16:52Z,2021-10-22T05:32:32Z,2021-10-22T09:14:30Z,MERGED,True,4,4,1,https://github.com/tsdh,Re-enable maildir completion in search query,1,[],https://github.com/djcb/mu/pull/2161,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2161,This has been commented out in 3cd127d for no apparent reason.,This has been commented out in 3cd127d for no apparent reason.,True,{}
djcb/mu,https://github.com/djcb/mu,2161,2021-10-21T20:16:52Z,2021-10-22T05:32:32Z,2021-10-22T09:14:30Z,MERGED,True,4,4,1,https://github.com/tsdh,Re-enable maildir completion in search query,1,[],https://github.com/djcb/mu/pull/2161,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2161#issuecomment-949300141,This has been commented out in 3cd127d for no apparent reason.,Hmmm. I think perhaps mu4e-get-maildirs didn't work during dev?,True,{}
djcb/mu,https://github.com/djcb/mu,2161,2021-10-21T20:16:52Z,2021-10-22T05:32:32Z,2021-10-22T09:14:30Z,MERGED,True,4,4,1,https://github.com/tsdh,Re-enable maildir completion in search query,1,[],https://github.com/djcb/mu/pull/2161,https://github.com/tsdh,3,https://github.com/djcb/mu/pull/2161#issuecomment-949438789,This has been commented out in 3cd127d for no apparent reason.,"@djcb Yeah, I guess that was the problem you have faced.  That's why I wrote no apparent reason.  I'm sure there was a reason.  But, praise the Lord, it is gone now. ;-)",True,{}
djcb/mu,https://github.com/djcb/mu,2162,2021-10-22T15:22:15Z,2021-10-23T08:16:19Z,2021-10-23T11:58:42Z,MERGED,True,77,0,1,https://github.com/thierryvolpiatto,Mu4e bug report as yaml (fixes #2135),2,[],https://github.com/djcb/mu/pull/2162,https://github.com/thierryvolpiatto,1,https://github.com/djcb/mu/pull/2162,@djcb To try it you will have to remove the .md file used for bug report.,@djcb To try it you will have to remove the .md file used for bug report.,True,{}
djcb/mu,https://github.com/djcb/mu,2162,2021-10-22T15:22:15Z,2021-10-23T08:16:19Z,2021-10-23T11:58:42Z,MERGED,True,77,0,1,https://github.com/thierryvolpiatto,Mu4e bug report as yaml (fixes #2135),2,[],https://github.com/djcb/mu/pull/2162,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2162#issuecomment-950115456,@djcb To try it you will have to remove the .md file used for bug report.,"Thanks, let's give this a shot!",True,{}
djcb/mu,https://github.com/djcb/mu,2165,2021-10-27T15:24:43Z,2021-10-28T04:58:34Z,2021-10-28T04:58:38Z,MERGED,True,19,4,1,https://github.com/yamanq,Add contact completion in search,1,[],https://github.com/djcb/mu/pull/2165,https://github.com/yamanq,1,https://github.com/djcb/mu/pull/2165,"Extend search completion for contacts using mu4e--contacts-hash. It looks like the full name + alias (e.g ""John <john@example.com>"") does not return any results, even when quoted, so I added an :exit-action to remove that. Let me know if there is a better approach.","Extend search completion for contacts using mu4e--contacts-hash. It looks like the full name + alias (e.g ""John <john@example.com>"") does not return any results, even when quoted, so I added an :exit-action to remove that. Let me know if there is a better approach.",True,{}
djcb/mu,https://github.com/djcb/mu,2165,2021-10-27T15:24:43Z,2021-10-28T04:58:34Z,2021-10-28T04:58:38Z,MERGED,True,19,4,1,https://github.com/yamanq,Add contact completion in search,1,[],https://github.com/djcb/mu/pull/2165,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2165#issuecomment-953077799,"Extend search completion for contacts using mu4e--contacts-hash. It looks like the full name + alias (e.g ""John <john@example.com>"") does not return any results, even when quoted, so I added an :exit-action to remove that. Let me know if there is a better approach.",@tsdh: what do you think?,True,{}
djcb/mu,https://github.com/djcb/mu,2165,2021-10-27T15:24:43Z,2021-10-28T04:58:34Z,2021-10-28T04:58:38Z,MERGED,True,19,4,1,https://github.com/yamanq,Add contact completion in search,1,[],https://github.com/djcb/mu/pull/2165,https://github.com/yamanq,3,https://github.com/djcb/mu/pull/2165#issuecomment-953331616,"Extend search completion for contacts using mu4e--contacts-hash. It looks like the full name + alias (e.g ""John <john@example.com>"") does not return any results, even when quoted, so I added an :exit-action to remove that. Let me know if there is a better approach.","Fixed, thanks for the review :)",True,{'THUMBS_UP': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,2165,2021-10-27T15:24:43Z,2021-10-28T04:58:34Z,2021-10-28T04:58:38Z,MERGED,True,19,4,1,https://github.com/yamanq,Add contact completion in search,1,[],https://github.com/djcb/mu/pull/2165,https://github.com/djcb,4,https://github.com/djcb/mu/pull/2165#issuecomment-953502785,"Extend search completion for contacts using mu4e--contacts-hash. It looks like the full name + alias (e.g ""John <john@example.com>"") does not return any results, even when quoted, so I added an :exit-action to remove that. Let me know if there is a better approach.","Okay, thanks all! Let's merge this.",True,{}
djcb/mu,https://github.com/djcb/mu,2168,2021-10-28T17:18:18Z,,2021-10-31T13:17:38Z,OPEN,False,14,0,1,https://github.com/c3d,parser: Deal with dash-separated query values,1,[],https://github.com/djcb/mu/pull/2168,https://github.com/c3d,1,https://github.com/djcb/mu/pull/2168,"Xapian uses - as a word separator, so a query like mu find s:kata-containers
would find no results.
This commit brute-forces it by replacing - with a [-] regexp and
transparently turning the query into a regexp query when this situation occurs.
Fixes: #2167
Signed-off-by: Christophe de Dinechin christophe@dinechin.org","Xapian uses - as a word separator, so a query like mu find s:kata-containers
would find no results.
This commit brute-forces it by replacing - with a [-] regexp and
transparently turning the query into a regexp query when this situation occurs.
Fixes: #2167
Signed-off-by: Christophe de Dinechin christophe@dinechin.org",True,{}
djcb/mu,https://github.com/djcb/mu,2168,2021-10-28T17:18:18Z,,2021-10-31T13:17:38Z,OPEN,False,14,0,1,https://github.com/c3d,parser: Deal with dash-separated query values,1,[],https://github.com/djcb/mu/pull/2168,https://github.com/c3d,2,https://github.com/djcb/mu/pull/2168#issuecomment-954591151,"Xapian uses - as a word separator, so a query like mu find s:kata-containers
would find no results.
This commit brute-forces it by replacing - with a [-] regexp and
transparently turning the query into a regexp query when this situation occurs.
Fixes: #2167
Signed-off-by: Christophe de Dinechin christophe@dinechin.org","A query on tags fails, apparently. I need to look at it.",True,{}
djcb/mu,https://github.com/djcb/mu,2168,2021-10-28T17:18:18Z,,2021-10-31T13:17:38Z,OPEN,False,14,0,1,https://github.com/c3d,parser: Deal with dash-separated query values,1,[],https://github.com/djcb/mu/pull/2168,https://github.com/wavexx,3,https://github.com/djcb/mu/pull/2168#issuecomment-955699253,"Xapian uses - as a word separator, so a query like mu find s:kata-containers
would find no results.
This commit brute-forces it by replacing - with a [-] regexp and
transparently turning the query into a regexp query when this situation occurs.
Fixes: #2167
Signed-off-by: Christophe de Dinechin christophe@dinechin.org","I've been bitten by the word separator, however I'm not sure turning the search into a regexp is a good idea. It it would unsuspectingly turn a fast query into a slow one.
Wouldn't it make more sense to turn this transparently into a phrase search instead?
this-that => ""this that""",True,{}
djcb/mu,https://github.com/djcb/mu,2175,2021-11-03T14:10:37Z,,2021-11-11T09:52:24Z,OPEN,False,1,1,1,https://github.com/berke,Use file timestamp for indexing non-RFC-822-compliant messages where the Date: field is missing,1,[],https://github.com/djcb/mu/pull/2175,https://github.com/berke,1,https://github.com/djcb/mu/pull/2175,This is a proposed fix for the closed issue : #1083,This is a proposed fix for the closed issue : #1083,True,{}
djcb/mu,https://github.com/djcb/mu,2175,2021-11-03T14:10:37Z,,2021-11-11T09:52:24Z,OPEN,False,1,1,1,https://github.com/berke,Use file timestamp for indexing non-RFC-822-compliant messages where the Date: field is missing,1,[],https://github.com/djcb/mu/pull/2175,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2175#issuecomment-965744160,This is a proposed fix for the closed issue : #1083,"Hmmm... I think it's better to have a known value for ""No date"" than to invent a confusing/wrong version.",True,{}
djcb/mu,https://github.com/djcb/mu,2175,2021-11-03T14:10:37Z,,2021-11-11T09:52:24Z,OPEN,False,1,1,1,https://github.com/berke,Use file timestamp for indexing non-RFC-822-compliant messages where the Date: field is missing,1,[],https://github.com/djcb/mu/pull/2175,https://github.com/berke,3,https://github.com/djcb/mu/pull/2175#issuecomment-966161520,This is a proposed fix for the closed issue : #1083,"Hmmm... I think it's better to have a known value for ""No date"" than to invent a confusing/wrong version.

Maybe you can add a flag that records where the date value came from: the Date: header, or the file timestamp.  If it's not the mail header, the flag can be displayed next to the date in mu4e.",True,{}
djcb/mu,https://github.com/djcb/mu,2180,2021-11-13T13:42:18Z,2021-12-15T18:22:37Z,2021-12-15T18:22:46Z,MERGED,True,1,0,1,https://github.com/wavexx,Ignore existing compiled files when byte-compiling,1,[],https://github.com/djcb/mu/pull/2180,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/2180,"In the new build system we call batch-byte-compile manually for incremental compilation. Sadly the default behavior of emacs is to load the byte-compiled version of a source file, even if it refers to an older version. After a git update, this results in emacs loading the existing (old) source when other sources are compiled, which is incorrect.
A warning is emitted though:
Source file ‘~/src/mu/build/mu4e/mu4e-view.el’ newer than byte-compiled file; using older file
A simple fix is to use load-prefer-newer in the rule to always avoid loading stale byte-compiled files.","In the new build system we call batch-byte-compile manually for incremental compilation. Sadly the default behavior of emacs is to load the byte-compiled version of a source file, even if it refers to an older version. After a git update, this results in emacs loading the existing (old) source when other sources are compiled, which is incorrect.
A warning is emitted though:
Source file ‘~/src/mu/build/mu4e/mu4e-view.el’ newer than byte-compiled file; using older file
A simple fix is to use load-prefer-newer in the rule to always avoid loading stale byte-compiled files.",True,{}
djcb/mu,https://github.com/djcb/mu,2180,2021-11-13T13:42:18Z,2021-12-15T18:22:37Z,2021-12-15T18:22:46Z,MERGED,True,1,0,1,https://github.com/wavexx,Ignore existing compiled files when byte-compiling,1,[],https://github.com/djcb/mu/pull/2180,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2180#issuecomment-995049883,"In the new build system we call batch-byte-compile manually for incremental compilation. Sadly the default behavior of emacs is to load the byte-compiled version of a source file, even if it refers to an older version. After a git update, this results in emacs loading the existing (old) source when other sources are compiled, which is incorrect.
A warning is emitted though:
Source file ‘~/src/mu/build/mu4e/mu4e-view.el’ newer than byte-compiled file; using older file
A simple fix is to use load-prefer-newer in the rule to always avoid loading stale byte-compiled files.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2191,2021-12-15T20:29:08Z,2021-12-19T20:52:35Z,2021-12-27T20:57:55Z,MERGED,True,41,0,1,https://github.com/tsdh,Add eldoc support in headers views,1,[],https://github.com/djcb/mu/pull/2191,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2191,"When using a side-by-side split layout, i.e., headers left of message view, it
easily can happen that parts of the headers (like a longer subject) are not
visible without horizontal scrolling.  So eldoc to the rescue, which can echo a
customizable message (see mu4e-headers-eldoc-format) containing stuff like
subject, from, to, date, etc. in the echo area.
This PR just adds a suitable documentation function buffer-locally.  It does not enable eldoc.","When using a side-by-side split layout, i.e., headers left of message view, it
easily can happen that parts of the headers (like a longer subject) are not
visible without horizontal scrolling.  So eldoc to the rescue, which can echo a
customizable message (see mu4e-headers-eldoc-format) containing stuff like
subject, from, to, date, etc. in the echo area.
This PR just adds a suitable documentation function buffer-locally.  It does not enable eldoc.",True,{}
djcb/mu,https://github.com/djcb/mu,2191,2021-12-15T20:29:08Z,2021-12-19T20:52:35Z,2021-12-27T20:57:55Z,MERGED,True,41,0,1,https://github.com/tsdh,Add eldoc support in headers views,1,[],https://github.com/djcb/mu/pull/2191,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2191#issuecomment-997459495,"When using a side-by-side split layout, i.e., headers left of message view, it
easily can happen that parts of the headers (like a longer subject) are not
visible without horizontal scrolling.  So eldoc to the rescue, which can echo a
customizable message (see mu4e-headers-eldoc-format) containing stuff like
subject, from, to, date, etc. in the echo area.
This PR just adds a suitable documentation function buffer-locally.  It does not enable eldoc.","Looks useful, thanks. Merged.",True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,2194,2021-12-25T13:41:43Z,2022-02-06T14:39:37Z,2022-02-06T17:49:16Z,CLOSED,False,4,1,1,https://github.com/l2dy,utils: validate string before g_utf8_next_char(),1,[],https://github.com/djcb/mu/pull/2194,https://github.com/l2dy,1,https://github.com/djcb/mu/pull/2194,"Before using this macro, use g_utf8_validate() to validate strings that may contain invalid UTF-8.

https://docs.gtk.org/glib/func.utf8_next_char.html","Before using this macro, use g_utf8_validate() to validate strings that may contain invalid UTF-8.

https://docs.gtk.org/glib/func.utf8_next_char.html",True,{}
djcb/mu,https://github.com/djcb/mu,2194,2021-12-25T13:41:43Z,2022-02-06T14:39:37Z,2022-02-06T17:49:16Z,CLOSED,False,4,1,1,https://github.com/l2dy,utils: validate string before g_utf8_next_char(),1,[],https://github.com/djcb/mu/pull/2194,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2194#issuecomment-1030845713,"Before using this macro, use g_utf8_validate() to validate strings that may contain invalid UTF-8.

https://docs.gtk.org/glib/func.utf8_next_char.html","Merged (outside github), thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2203,2022-01-19T20:11:07Z,2022-02-06T08:41:28Z,2022-02-08T16:22:50Z,MERGED,True,9,1,1,https://github.com/mhcerri,mu4e-headers: Add mu4e-headers-thread-mark-as-orphan option,1,[],https://github.com/djcb/mu/pull/2203,https://github.com/mhcerri,1,https://github.com/djcb/mu/pull/2203,"To mark only the first message in the thread as orphan, allowing to
replicate the thread structure used by mutt and other clients.
This way it might be possible to replicate the same threading style from mutt. For example, with this configuration:
  (setq mu4e-headers-thread-mark-as-orphan 'first
	mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
	mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
        mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
        mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
	mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
	mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
I can have something like that:
  12/17/21   Sa   John    ┬>Some orphan thread..
  14:08:36   Nau  John    ├>
  15:13:33   Nau  John    └>
  12:27:12   S    Anne    A regular thread
  13:24:43   u    Ben     ├>
  13:26:43   u    Sandra  └>
  13:34:38   u    Anne     └>","To mark only the first message in the thread as orphan, allowing to
replicate the thread structure used by mutt and other clients.
This way it might be possible to replicate the same threading style from mutt. For example, with this configuration:
  (setq mu4e-headers-thread-mark-as-orphan 'first
	mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
	mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
        mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
        mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
	mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
	mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
I can have something like that:
  12/17/21   Sa   John    ┬>Some orphan thread..
  14:08:36   Nau  John    ├>
  15:13:33   Nau  John    └>
  12:27:12   S    Anne    A regular thread
  13:24:43   u    Ben     ├>
  13:26:43   u    Sandra  └>
  13:34:38   u    Anne     └>",True,{}
djcb/mu,https://github.com/djcb/mu,2203,2022-01-19T20:11:07Z,2022-02-06T08:41:28Z,2022-02-08T16:22:50Z,MERGED,True,9,1,1,https://github.com/mhcerri,mu4e-headers: Add mu4e-headers-thread-mark-as-orphan option,1,[],https://github.com/djcb/mu/pull/2203,https://github.com/mhcerri,2,https://github.com/djcb/mu/pull/2203#issuecomment-1017608502,"To mark only the first message in the thread as orphan, allowing to
replicate the thread structure used by mutt and other clients.
This way it might be possible to replicate the same threading style from mutt. For example, with this configuration:
  (setq mu4e-headers-thread-mark-as-orphan 'first
	mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
	mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
        mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
        mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
	mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
	mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
I can have something like that:
  12/17/21   Sa   John    ┬>Some orphan thread..
  14:08:36   Nau  John    ├>
  15:13:33   Nau  John    └>
  12:27:12   S    Anne    A regular thread
  13:24:43   u    Ben     ├>
  13:26:43   u    Sandra  └>
  13:34:38   u    Anne     └>","@djcb I tried to keep the current behavior while giving the option to replicate Mutt's threads. If you have any other suggestions, please let me know and I can try to adapt it. Thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2203,2022-01-19T20:11:07Z,2022-02-06T08:41:28Z,2022-02-08T16:22:50Z,MERGED,True,9,1,1,https://github.com/mhcerri,mu4e-headers: Add mu4e-headers-thread-mark-as-orphan option,1,[],https://github.com/djcb/mu/pull/2203,https://github.com/djcb,3,https://github.com/djcb/mu/pull/2203#issuecomment-1019223951,"To mark only the first message in the thread as orphan, allowing to
replicate the thread structure used by mutt and other clients.
This way it might be possible to replicate the same threading style from mutt. For example, with this configuration:
  (setq mu4e-headers-thread-mark-as-orphan 'first
	mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
	mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
        mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
        mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
	mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
	mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
I can have something like that:
  12/17/21   Sa   John    ┬>Some orphan thread..
  14:08:36   Nau  John    ├>
  15:13:33   Nau  John    └>
  12:27:12   S    Anne    A regular thread
  13:24:43   u    Ben     ├>
  13:26:43   u    Sandra  └>
  13:34:38   u    Anne     └>",Looks interesting.... can you show how it looks with the current settings vs with your patch (and with 'first)?,True,{}
djcb/mu,https://github.com/djcb/mu,2203,2022-01-19T20:11:07Z,2022-02-06T08:41:28Z,2022-02-08T16:22:50Z,MERGED,True,9,1,1,https://github.com/mhcerri,mu4e-headers: Add mu4e-headers-thread-mark-as-orphan option,1,[],https://github.com/djcb/mu/pull/2203,https://github.com/mhcerri,4,https://github.com/djcb/mu/pull/2203#issuecomment-1020046105,"To mark only the first message in the thread as orphan, allowing to
replicate the thread structure used by mutt and other clients.
This way it might be possible to replicate the same threading style from mutt. For example, with this configuration:
  (setq mu4e-headers-thread-mark-as-orphan 'first
	mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
	mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
        mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
        mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
	mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
	mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
I can have something like that:
  12/17/21   Sa   John    ┬>Some orphan thread..
  14:08:36   Nau  John    ├>
  15:13:33   Nau  John    └>
  12:27:12   S    Anne    A regular thread
  13:24:43   u    Ben     ├>
  13:26:43   u    Sandra  └>
  13:34:38   u    Anne     └>","Hi, @djcb. I didn't have the same messages anymore, so I'm using different messages for this example. I also removed the other columns for simplicity:
With:
(setq mu4e-headers-thread-mark-as-orphan 'all)
;; or without the patch
 A regular thread
 L
  o
  |L
  L
 <>Some orphan thread
 <>
 <>
 |L
 <>
 <>

With:
(setq mu4e-headers-thread-mark-as-orphan 'first)
 A regular thread
 L
  o
  |L
  L
 <>Some orphan thread
 |>
 |>
 |L
 |>
 L

With:
(setq mu4e-headers-thread-mark-as-orphan 'first
      mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
      mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
      mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
      mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
      mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
      mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
 A regular thread
 └>
  ├>
  │└>
  └>
 ┬>Some orphan thread
 ├>
 ├>
 │└>
 ├>
 └>",True,{}
djcb/mu,https://github.com/djcb/mu,2203,2022-01-19T20:11:07Z,2022-02-06T08:41:28Z,2022-02-08T16:22:50Z,MERGED,True,9,1,1,https://github.com/mhcerri,mu4e-headers: Add mu4e-headers-thread-mark-as-orphan option,1,[],https://github.com/djcb/mu/pull/2203,https://github.com/djcb,5,https://github.com/djcb/mu/pull/2203#issuecomment-1030778659,"To mark only the first message in the thread as orphan, allowing to
replicate the thread structure used by mutt and other clients.
This way it might be possible to replicate the same threading style from mutt. For example, with this configuration:
  (setq mu4e-headers-thread-mark-as-orphan 'first
	mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
	mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
        mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
        mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
	mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
	mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
I can have something like that:
  12/17/21   Sa   John    ┬>Some orphan thread..
  14:08:36   Nau  John    ├>
  15:13:33   Nau  John    └>
  12:27:12   S    Anne    A regular thread
  13:24:43   u    Ben     ├>
  13:26:43   u    Sandra  └>
  13:34:38   u    Anne     └>","Thanks. I have merged this, and set the default to 'first. Let's see if anyone complains...",True,{}
djcb/mu,https://github.com/djcb/mu,2203,2022-01-19T20:11:07Z,2022-02-06T08:41:28Z,2022-02-08T16:22:50Z,MERGED,True,9,1,1,https://github.com/mhcerri,mu4e-headers: Add mu4e-headers-thread-mark-as-orphan option,1,[],https://github.com/djcb/mu/pull/2203,https://github.com/mhcerri,6,https://github.com/djcb/mu/pull/2203#issuecomment-1032806560,"To mark only the first message in the thread as orphan, allowing to
replicate the thread structure used by mutt and other clients.
This way it might be possible to replicate the same threading style from mutt. For example, with this configuration:
  (setq mu4e-headers-thread-mark-as-orphan 'first
	mu4e-headers-thread-child-prefix '(""├>"" . ""├▸ "")
	mu4e-headers-thread-first-child-prefix '(""├>"" . ""├▸ "")
        mu4e-headers-thread-last-child-prefix '(""└>"" . ""└▸ "")
        mu4e-headers-thread-connection-prefix '(""│"" . ""│ "")
	mu4e-headers-thread-single-orphan-prefix '(""─>"" . ""─▸"")
	mu4e-headers-thread-orphan-prefix '(""┬>"" . ""┬▸""))
I can have something like that:
  12/17/21   Sa   John    ┬>Some orphan thread..
  14:08:36   Nau  John    ├>
  15:13:33   Nau  John    └>
  12:27:12   S    Anne    A regular thread
  13:24:43   u    Ben     ├>
  13:26:43   u    Sandra  └>
  13:34:38   u    Anne     └>",Thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,2212,2022-02-20T17:09:14Z,,2022-02-27T08:33:49Z,OPEN,False,1,2,1,https://github.com/averter,Fix broken link  in the online manual,1,[],https://github.com/djcb/mu/pull/2212,https://github.com/averter,1,https://github.com/djcb/mu/pull/2212,Solves issue #2182 Please confirm that it works since I am not familiar with texi.,Solves issue #2182 Please confirm that it works since I am not familiar with texi.,True,{}
djcb/mu,https://github.com/djcb/mu,2212,2022-02-20T17:09:14Z,,2022-02-27T08:33:49Z,OPEN,False,1,2,1,https://github.com/averter,Fix broken link  in the online manual,1,[],https://github.com/djcb/mu/pull/2212,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2212#issuecomment-1053363067,Solves issue #2182 Please confirm that it works since I am not familiar with texi.,"Thanks, but I think external links should be fixed by using something like htmlxref.cnf.",True,{}
djcb/mu,https://github.com/djcb/mu,2224,2022-03-25T11:11:36Z,2022-04-30T06:04:53Z,2022-04-30T06:04:54Z,CLOSED,False,1,0,1,https://github.com/wavexx,Include <functional> for std::invoke,1,[],https://github.com/djcb/mu/pull/2224,https://github.com/wavexx,1,https://github.com/djcb/mu/pull/2224,Fixes a build failure under gcc 12,Fixes a build failure under gcc 12,True,{}
djcb/mu,https://github.com/djcb/mu,2224,2022-03-25T11:11:36Z,2022-04-30T06:04:53Z,2022-04-30T06:04:54Z,CLOSED,False,1,0,1,https://github.com/wavexx,Include <functional> for std::invoke,1,[],https://github.com/djcb/mu/pull/2224,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2224#issuecomment-1113926517,Fixes a build failure under gcc 12,"Thanks - was a good fix, but no longer needed.",True,{}
djcb/mu,https://github.com/djcb/mu,2225,2022-03-26T20:06:13Z,2022-04-30T07:33:19Z,2022-04-30T21:41:55Z,MERGED,True,3,0,1,https://github.com/PRESFIL,meson: Install mu4e/mu4e-about.org,1,[],https://github.com/djcb/mu/pull/2225,https://github.com/PRESFIL,1,https://github.com/djcb/mu/pull/2225,"mu4e expects this file when activating the [A]bout link in mu4e-main
view, but when building the mu-git package from the AUR, this file
did not appear in the resulting package.
Now this file is not lost.","mu4e expects this file when activating the [A]bout link in mu4e-main
view, but when building the mu-git package from the AUR, this file
did not appear in the resulting package.
Now this file is not lost.",True,{}
djcb/mu,https://github.com/djcb/mu,2225,2022-03-26T20:06:13Z,2022-04-30T07:33:19Z,2022-04-30T21:41:55Z,MERGED,True,3,0,1,https://github.com/PRESFIL,meson: Install mu4e/mu4e-about.org,1,[],https://github.com/djcb/mu/pull/2225,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2225#issuecomment-1113941501,"mu4e expects this file when activating the [A]bout link in mu4e-main
view, but when building the mu-git package from the AUR, this file
did not appear in the resulting package.
Now this file is not lost.","Merged, thanks!",True,{}
djcb/mu,https://github.com/djcb/mu,2234,2022-04-14T09:36:27Z,,2022-04-14T09:36:27Z,OPEN,False,22,6,4,https://github.com/stsquad,Giving inditcations of hung email collection,2,[],https://github.com/djcb/mu/pull/2234,https://github.com/stsquad,1,https://github.com/djcb/mu/pull/2234,As described in the second patch. This is very much an RFC and I'm open to suggestions of better ways to solve the problem.,As described in the second patch. This is very much an RFC and I'm open to suggestions of better ways to solve the problem.,True,{}
djcb/mu,https://github.com/djcb/mu,2235,2022-04-18T16:12:34Z,2022-04-30T07:34:15Z,2022-04-30T07:34:18Z,MERGED,True,1,0,1,https://github.com/danielfleischer,Last updated timestamp in main screen,1,[],https://github.com/djcb/mu/pull/2235,https://github.com/danielfleischer,1,https://github.com/djcb/mu/pull/2235,"Based on the :tstamp key in mu4e-index-update-status plist.
Looks like this:","Based on the :tstamp key in mu4e-index-update-status plist.
Looks like this:",True,{}
djcb/mu,https://github.com/djcb/mu,2235,2022-04-18T16:12:34Z,2022-04-30T07:34:15Z,2022-04-30T07:34:18Z,MERGED,True,1,0,1,https://github.com/danielfleischer,Last updated timestamp in main screen,1,[],https://github.com/djcb/mu/pull/2235,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2235#issuecomment-1113941594,"Based on the :tstamp key in mu4e-index-update-status plist.
Looks like this:","Merged, thanks. Seems you read my thoughts :)",True,{}
djcb/mu,https://github.com/djcb/mu,2241,2022-04-29T08:30:41Z,2022-04-30T07:34:39Z,2022-04-30T07:40:56Z,MERGED,True,5,1,1,https://github.com/tsdh,Add support for List-Id completion (list:<List-Id>),1,[],https://github.com/djcb/mu/pull/2241,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2241,"As the title suggests, this commit adds completion support for the known List-Id values after the search keyword list: just like we already support email address completion after to:, from:, and friends.","As the title suggests, this commit adds completion support for the known List-Id values after the search keyword list: just like we already support email address completion after to:, from:, and friends.",True,{}
djcb/mu,https://github.com/djcb/mu,2241,2022-04-29T08:30:41Z,2022-04-30T07:34:39Z,2022-04-30T07:40:56Z,MERGED,True,5,1,1,https://github.com/tsdh,Add support for List-Id completion (list:<List-Id>),1,[],https://github.com/djcb/mu/pull/2241,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2241#issuecomment-1113941642,"As the title suggests, this commit adds completion support for the known List-Id values after the search keyword list: just like we already support email address completion after to:, from:, and friends.","Merged, thanks.",True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,2242,2022-04-29T12:08:05Z,2022-04-30T07:35:46Z,2022-04-30T07:40:47Z,MERGED,True,18,8,1,https://github.com/tsdh,Allow a function as mu4e-view-open-program,1,[],https://github.com/djcb/mu/pull/2242,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2242,"Allow mu4e-view-open-program to be set to a function instead of a string naming some external application.  In the function case, it must be a function receiving one single argument, the filename.","Allow mu4e-view-open-program to be set to a function instead of a string naming some external application.  In the function case, it must be a function receiving one single argument, the filename.",True,{}
djcb/mu,https://github.com/djcb/mu,2242,2022-04-29T12:08:05Z,2022-04-30T07:35:46Z,2022-04-30T07:40:47Z,MERGED,True,18,8,1,https://github.com/tsdh,Allow a function as mu4e-view-open-program,1,[],https://github.com/djcb/mu/pull/2242,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2242#issuecomment-1113941795,"Allow mu4e-view-open-program to be set to a function instead of a string naming some external application.  In the function case, it must be a function receiving one single argument, the filename.","Merged, thanks.",True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,2250,2022-05-08T12:55:34Z,2022-05-08T13:55:46Z,2022-05-08T13:55:54Z,MERGED,True,1,1,1,https://github.com/fintelkai,Fixed typo in mu4e.texi,1,[],https://github.com/djcb/mu/pull/2250,https://github.com/fintelkai,1,https://github.com/djcb/mu/pull/2250,"This typo prevented the build:
[...]

[98/121] Generating mu4e/mu4e_info with a custom command
FAILED: mu4e/mu4e.info
/usr/bin/makeinfo -o /Users/fintel/Repos/notmine/mu/build/mu4e/mu4e.info /Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi -I /Users/fintel/Repos/notmine/mu/build/mu4e/..
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:55: warning: undefined flag: VERSION.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: @t expected braces.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: Misplaced {.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: Misplaced }.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: @t missing close brace.
makeinfo: Removing output file `/Users/fintel/Repos/notmine/mu/build/mu4e/mu4e.info' due to errors; use --force to preserve.

[...]

ninja: build stopped: subcommand failed.
make: *** [all] Error 1","This typo prevented the build:
[...]

[98/121] Generating mu4e/mu4e_info with a custom command
FAILED: mu4e/mu4e.info
/usr/bin/makeinfo -o /Users/fintel/Repos/notmine/mu/build/mu4e/mu4e.info /Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi -I /Users/fintel/Repos/notmine/mu/build/mu4e/..
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:55: warning: undefined flag: VERSION.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: @t expected braces.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: Misplaced {.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: Misplaced }.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: @t missing close brace.
makeinfo: Removing output file `/Users/fintel/Repos/notmine/mu/build/mu4e/mu4e.info' due to errors; use --force to preserve.

[...]

ninja: build stopped: subcommand failed.
make: *** [all] Error 1",True,{}
djcb/mu,https://github.com/djcb/mu,2250,2022-05-08T12:55:34Z,2022-05-08T13:55:46Z,2022-05-08T13:55:54Z,MERGED,True,1,1,1,https://github.com/fintelkai,Fixed typo in mu4e.texi,1,[],https://github.com/djcb/mu/pull/2250,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2250#issuecomment-1120423505,"This typo prevented the build:
[...]

[98/121] Generating mu4e/mu4e_info with a custom command
FAILED: mu4e/mu4e.info
/usr/bin/makeinfo -o /Users/fintel/Repos/notmine/mu/build/mu4e/mu4e.info /Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi -I /Users/fintel/Repos/notmine/mu/build/mu4e/..
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:55: warning: undefined flag: VERSION.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: @t expected braces.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: Misplaced {.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: Misplaced }.
/Users/fintel/Repos/notmine/mu/mu4e/mu4e.texi:3748: @t missing close brace.
makeinfo: Removing output file `/Users/fintel/Repos/notmine/mu/build/mu4e/mu4e.info' due to errors; use --force to preserve.

[...]

ninja: build stopped: subcommand failed.
make: *** [all] Error 1",Merged -- thanks!,True,{}
djcb/mu,https://github.com/djcb/mu,2251,2022-05-09T08:59:39Z,2022-05-09T10:50:28Z,2022-05-09T12:41:34Z,MERGED,True,2,2,2,https://github.com/tsdh,Add support for flag:personal & fix mu4e-contacts-info,1,[],https://github.com/djcb/mu/pull/2251,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2251,"I guess the change in mu4e-search.el is pretty self-explanatory.
Wrt. mu4e-contacts-info: contacts is a list with entries of the form (rank . full-mail-address) where full-mail-address is a string like ""Name"" <mail@address.com> and not a contact plist.","I guess the change in mu4e-search.el is pretty self-explanatory.
Wrt. mu4e-contacts-info: contacts is a list with entries of the form (rank . full-mail-address) where full-mail-address is a string like ""Name"" <mail@address.com> and not a contact plist.",True,{}
djcb/mu,https://github.com/djcb/mu,2251,2022-05-09T08:59:39Z,2022-05-09T10:50:28Z,2022-05-09T12:41:34Z,MERGED,True,2,2,2,https://github.com/tsdh,Add support for flag:personal & fix mu4e-contacts-info,1,[],https://github.com/djcb/mu/pull/2251,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2251#issuecomment-1120945367,"I guess the change in mu4e-search.el is pretty self-explanatory.
Wrt. mu4e-contacts-info: contacts is a list with entries of the form (rank . full-mail-address) where full-mail-address is a string like ""Name"" <mail@address.com> and not a contact plist.","Ah, good catch, thanks. Merged.",True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,2253,2022-05-11T19:11:09Z,2022-05-12T05:55:56Z,2022-05-12T08:56:37Z,MERGED,True,27,22,1,https://github.com/tsdh,Simplify mu4e-view-mode-map creation and fix `-` binding,1,[],https://github.com/djcb/mu/pull/2253,https://github.com/tsdh,1,https://github.com/djcb/mu/pull/2253,"mu4e-view-mode-map was initialized from a sparse keymap and eventually passed to suppress-keymap in order to remove bindings to self-insert-command which obviously make no sense in read-only buffers.  However, suppress-keymap also remaps all digits and the minus sign to make prefix args, i.e., pressing 8 would be equal to C-u 8 and - got bound to negative-argument instead of mu4e-view-mark-for-unflag as defined.
While suppress-keymap has a NODIGITS arg to suppress the rebinding of digits and minus sign (which would also mean that pressing a digit would try inserting that digit and lead to an error), I chose the more straight-forward solution and start from an empty rather than a sparse keymap and added the digit-argument bindings for 0..9 explicitly.","mu4e-view-mode-map was initialized from a sparse keymap and eventually passed to suppress-keymap in order to remove bindings to self-insert-command which obviously make no sense in read-only buffers.  However, suppress-keymap also remaps all digits and the minus sign to make prefix args, i.e., pressing 8 would be equal to C-u 8 and - got bound to negative-argument instead of mu4e-view-mark-for-unflag as defined.
While suppress-keymap has a NODIGITS arg to suppress the rebinding of digits and minus sign (which would also mean that pressing a digit would try inserting that digit and lead to an error), I chose the more straight-forward solution and start from an empty rather than a sparse keymap and added the digit-argument bindings for 0..9 explicitly.",True,{}
djcb/mu,https://github.com/djcb/mu,2253,2022-05-11T19:11:09Z,2022-05-12T05:55:56Z,2022-05-12T08:56:37Z,MERGED,True,27,22,1,https://github.com/tsdh,Simplify mu4e-view-mode-map creation and fix `-` binding,1,[],https://github.com/djcb/mu/pull/2253,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2253#issuecomment-1124559866,"mu4e-view-mode-map was initialized from a sparse keymap and eventually passed to suppress-keymap in order to remove bindings to self-insert-command which obviously make no sense in read-only buffers.  However, suppress-keymap also remaps all digits and the minus sign to make prefix args, i.e., pressing 8 would be equal to C-u 8 and - got bound to negative-argument instead of mu4e-view-mark-for-unflag as defined.
While suppress-keymap has a NODIGITS arg to suppress the rebinding of digits and minus sign (which would also mean that pressing a digit would try inserting that digit and lead to an error), I chose the more straight-forward solution and start from an empty rather than a sparse keymap and added the digit-argument bindings for 0..9 explicitly.","Ah, good catch! Thanks, merged.",True,{'HOORAY': ['https://github.com/tsdh']}
djcb/mu,https://github.com/djcb/mu,2254,2022-05-11T21:02:17Z,2022-05-14T09:14:10Z,2022-05-14T09:21:16Z,MERGED,True,11,2,1,https://github.com/Chris00,Make mu4e~headers-from-or-to respect its documentation,1,[],https://github.com/djcb/mu/pull/2254,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2254,"The variable mu4e-headers-from-or-to-prefix was not defined nor used, contrarily to what the documentation says.  (I like to customize the prefix to a non-textual symbol as I find it increases legibility for me.)","The variable mu4e-headers-from-or-to-prefix was not defined nor used, contrarily to what the documentation says.  (I like to customize the prefix to a non-textual symbol as I find it increases legibility for me.)",True,{}
djcb/mu,https://github.com/djcb/mu,2254,2022-05-11T21:02:17Z,2022-05-14T09:14:10Z,2022-05-14T09:21:16Z,MERGED,True,11,2,1,https://github.com/Chris00,Make mu4e~headers-from-or-to respect its documentation,1,[],https://github.com/djcb/mu/pull/2254,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2254#issuecomment-1126663574,"The variable mu4e-headers-from-or-to-prefix was not defined nor used, contrarily to what the documentation says.  (I like to customize the prefix to a non-textual symbol as I find it increases legibility for me.)","It's more like the documentation wasn't updated for the new implementation... so there was (since 2012!) a
(defconst mu4e-headers-from-or-to-prefix '("""" . ""To "")

which is not meant to be user-settable.
We can re-introduce that, but then please with the cons-pair as before, and as a defcustom.",True,{}
djcb/mu,https://github.com/djcb/mu,2254,2022-05-11T21:02:17Z,2022-05-14T09:14:10Z,2022-05-14T09:21:16Z,MERGED,True,11,2,1,https://github.com/Chris00,Make mu4e~headers-from-or-to respect its documentation,1,[],https://github.com/djcb/mu/pull/2254,https://github.com/Chris00,3,https://github.com/djcb/mu/pull/2254#issuecomment-1126670123,"The variable mu4e-headers-from-or-to-prefix was not defined nor used, contrarily to what the documentation says.  (I like to customize the prefix to a non-textual symbol as I find it increases legibility for me.)","(defconst mu4e-headers-from-or-to-prefix '("""" . ""To "")

 which is not meant to be user-settable.

 We can re-introduce that, but then please with the cons-pair as before, and as a defcustom.
Sure, I'll do that when I have a bit of time.  May you remind me the purpose of the `car` of the pair?  Is it to have two possibilities according to `mu4e-use-fancy-chars`??",True,{}
djcb/mu,https://github.com/djcb/mu,2254,2022-05-11T21:02:17Z,2022-05-14T09:14:10Z,2022-05-14T09:21:16Z,MERGED,True,11,2,1,https://github.com/Chris00,Make mu4e~headers-from-or-to respect its documentation,1,[],https://github.com/djcb/mu/pull/2254,https://github.com/Chris00,4,https://github.com/djcb/mu/pull/2254#issuecomment-1126670994,"The variable mu4e-headers-from-or-to-prefix was not defined nor used, contrarily to what the documentation says.  (I like to customize the prefix to a non-textual symbol as I find it increases legibility for me.)","May you remind me the purpose of the car of the pair?

Never mind, I found it in the Git history.",True,{}
djcb/mu,https://github.com/djcb/mu,2254,2022-05-11T21:02:17Z,2022-05-14T09:14:10Z,2022-05-14T09:21:16Z,MERGED,True,11,2,1,https://github.com/Chris00,Make mu4e~headers-from-or-to respect its documentation,1,[],https://github.com/djcb/mu/pull/2254,https://github.com/Chris00,5,https://github.com/djcb/mu/pull/2254#issuecomment-1126674251,"The variable mu4e-headers-from-or-to-prefix was not defined nor used, contrarily to what the documentation says.  (I like to customize the prefix to a non-textual symbol as I find it increases legibility for me.)",Done.  (Better now than much later! 😜),True,{}
djcb/mu,https://github.com/djcb/mu,2254,2022-05-11T21:02:17Z,2022-05-14T09:14:10Z,2022-05-14T09:21:16Z,MERGED,True,11,2,1,https://github.com/Chris00,Make mu4e~headers-from-or-to respect its documentation,1,[],https://github.com/djcb/mu/pull/2254,https://github.com/djcb,6,https://github.com/djcb/mu/pull/2254#issuecomment-1126677303,"The variable mu4e-headers-from-or-to-prefix was not defined nor used, contrarily to what the documentation says.  (I like to customize the prefix to a non-textual symbol as I find it increases legibility for me.)","Looks good :) Merged, thanks.",True,{}
djcb/mu,https://github.com/djcb/mu,2258,2022-05-13T16:54:34Z,,2022-05-13T16:54:34Z,OPEN,False,1,0,1,https://github.com/Chris00,Normalize newlines on messages,1,[],https://github.com/djcb/mu/pull/2258,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2258,"Fixes #2257
This is just a suggestion.  There may be a better solution.","Fixes #2257
This is just a suggestion.  There may be a better solution.",True,{}
djcb/mu,https://github.com/djcb/mu,2262,2022-05-20T18:39:13Z,2022-05-27T21:23:30Z,2022-05-28T07:59:02Z,MERGED,True,6,9,1,https://github.com/progfolio,mu4e-org-store-link: prevent error when no message at point,1,[],https://github.com/djcb/mu/pull/2262,https://github.com/progfolio,1,https://github.com/djcb/mu/pull/2262,The error can cause org-store-link to short circuit before it should (e.g. when org-store-link is called by org-babel-tangle-file).,The error can cause org-store-link to short circuit before it should (e.g. when org-store-link is called by org-babel-tangle-file).,True,{}
djcb/mu,https://github.com/djcb/mu,2262,2022-05-20T18:39:13Z,2022-05-27T21:23:30Z,2022-05-28T07:59:02Z,MERGED,True,6,9,1,https://github.com/progfolio,mu4e-org-store-link: prevent error when no message at point,1,[],https://github.com/djcb/mu/pull/2262,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2262#issuecomment-1133647407,The error can cause org-store-link to short circuit before it should (e.g. when org-store-link is called by org-babel-tangle-file).,"Hmm, when you try to store a link in view/headers mode when there's no header, an error seems to be appropriate?",True,{}
djcb/mu,https://github.com/djcb/mu,2262,2022-05-20T18:39:13Z,2022-05-27T21:23:30Z,2022-05-28T07:59:02Z,MERGED,True,6,9,1,https://github.com/progfolio,mu4e-org-store-link: prevent error when no message at point,1,[],https://github.com/djcb/mu/pull/2262,https://github.com/EuklidAlexandria,3,https://github.com/djcb/mu/pull/2262#issuecomment-1136368186,The error can cause org-store-link to short circuit before it should (e.g. when org-store-link is called by org-babel-tangle-file).,"The problem is that org-store-link loops over all org-store-link functions regardless of the mode via org-store-link-functions. Hence, mu4e-message-at-point is also called for non-mu4e buffers and returns an error. Maybe it should only be called if view-mode-p or headers-mode-p are non-nil?",True,{}
djcb/mu,https://github.com/djcb/mu,2262,2022-05-20T18:39:13Z,2022-05-27T21:23:30Z,2022-05-28T07:59:02Z,MERGED,True,6,9,1,https://github.com/progfolio,mu4e-org-store-link: prevent error when no message at point,1,[],https://github.com/djcb/mu/pull/2262,https://github.com/progfolio,4,https://github.com/djcb/mu/pull/2262#issuecomment-1136455362,The error can cause org-store-link to short circuit before it should (e.g. when org-store-link is called by org-babel-tangle-file).,"Hmm, when you try to store a link in view/headers mode when there's no header, an error seems to be appropriate?

Agreed.
The main problem, as @EuklidAlexandria correctly noted, is the user-error signaled by `mu4e-message-at-point' short-circuits the calling function.
I've cleaned up the logic a bit, too.
If I understand correctly, mu4e--org-store-link-message calls mu4e-message-at-point itself. If there is no message, the error will be signaled there. No need to check ahead of time by calling mu4e-message-at-point.",True,{}
djcb/mu,https://github.com/djcb/mu,2262,2022-05-20T18:39:13Z,2022-05-27T21:23:30Z,2022-05-28T07:59:02Z,MERGED,True,6,9,1,https://github.com/progfolio,mu4e-org-store-link: prevent error when no message at point,1,[],https://github.com/djcb/mu/pull/2262,https://github.com/djcb,5,https://github.com/djcb/mu/pull/2262#issuecomment-1140050185,The error can cause org-store-link to short circuit before it should (e.g. when org-store-link is called by org-babel-tangle-file).,"Ah, yes, good point.  Thanks, merged!",True,{'THUMBS_UP': ['https://github.com/progfolio']}
djcb/mu,https://github.com/djcb/mu,2267,2022-05-28T18:09:52Z,2022-05-28T20:54:18Z,2022-05-28T20:54:21Z,MERGED,True,24,24,1,https://github.com/Chris00,Make mu4e-message-contact-field-matches accept a list of fields,1,[],https://github.com/djcb/mu/pull/2267,https://github.com/Chris00,1,https://github.com/djcb/mu/pull/2267,Fixes #2265,Fixes #2265,True,{}
djcb/mu,https://github.com/djcb/mu,2267,2022-05-28T18:09:52Z,2022-05-28T20:54:18Z,2022-05-28T20:54:21Z,MERGED,True,24,24,1,https://github.com/Chris00,Make mu4e-message-contact-field-matches accept a list of fields,1,[],https://github.com/djcb/mu/pull/2267,https://github.com/djcb,2,https://github.com/djcb/mu/pull/2267#issuecomment-1140328356,Fixes #2265,"Looks good, thanks!",True,{}
