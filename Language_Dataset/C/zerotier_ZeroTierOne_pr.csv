zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,309,2016-02-28T16:08:59Z,2016-03-01T20:31:10Z,2016-03-01T20:31:23Z,CLOSED,False,2116,814,63,https://github.com/krisek,Dev,48,[],https://github.com/zerotier/ZeroTierOne/pull/309,https://github.com/krisek,1,https://github.com/zerotier/ZeroTierOne/pull/309,New source code based rpmbuild specification file.,New source code based rpmbuild specification file.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,309,2016-02-28T16:08:59Z,2016-03-01T20:31:10Z,2016-03-01T20:31:23Z,CLOSED,False,2116,814,63,https://github.com/krisek,Dev,48,[],https://github.com/zerotier/ZeroTierOne/pull/309,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/309#issuecomment-190888847,New source code based rpmbuild specification file.,I manually merged this to dev -- go ahead and do pull requests from dev in the future since we like to make master our stable release branch that people can pull+build+go.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,309,2016-02-28T16:08:59Z,2016-03-01T20:31:10Z,2016-03-01T20:31:23Z,CLOSED,False,2116,814,63,https://github.com/krisek,Dev,48,[],https://github.com/zerotier/ZeroTierOne/pull/309,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/309#issuecomment-190888911,New source code based rpmbuild specification file.,Thanks! Will take a look... we have someone working on Debian too.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,318,2016-03-28T14:01:13Z,2016-03-28T14:04:57Z,2016-04-02T03:28:50Z,CLOSED,False,1,1,1,https://github.com/hexchain,Fix escaping in controller/README.md,1,[],https://github.com/zerotier/ZeroTierOne/pull/318,https://github.com/hexchain,1,https://github.com/zerotier/ZeroTierOne/pull/318,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,318,2016-03-28T14:01:13Z,2016-03-28T14:04:57Z,2016-04-02T03:28:50Z,CLOSED,False,1,1,1,https://github.com/hexchain,Fix escaping in controller/README.md,1,[],https://github.com/zerotier/ZeroTierOne/pull/318,https://github.com/hexchain,2,https://github.com/zerotier/ZeroTierOne/pull/318#issuecomment-202407069,,My bad for not reading README about contributions. Will reopen against edge.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,319,2016-03-28T14:06:46Z,2016-04-01T21:58:04Z,2016-04-02T03:28:50Z,MERGED,True,1,1,1,https://github.com/hexchain,Fix escaping,1,[],https://github.com/zerotier/ZeroTierOne/pull/319,https://github.com/hexchain,1,https://github.com/zerotier/ZeroTierOne/pull/319,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,335,2016-06-07T21:23:39Z,2016-06-07T21:25:47Z,2016-06-07T21:30:07Z,CLOSED,False,1,0,1,https://github.com/nucleardreamer,.deb installer missing Section header,1,[],https://github.com/zerotier/ZeroTierOne/pull/335,https://github.com/nucleardreamer,1,https://github.com/zerotier/ZeroTierOne/pull/335,"Hi guys!
The Section header on the deb installer control file is definitely optional, however, it breaks some automation using local deb repos. An example is installing with reprepro, you will just get:
No section given for 'zerotier-one', skipping.

This isn't particularly a problem because there is a flag to ignore this, but it breaks when doing auto-installation and sticking to the ""rules"". It would also be good in advance of a possible PPA or mirror opportunities ;)","Hi guys!
The Section header on the deb installer control file is definitely optional, however, it breaks some automation using local deb repos. An example is installing with reprepro, you will just get:
No section given for 'zerotier-one', skipping.

This isn't particularly a problem because there is a flag to ignore this, but it breaks when doing auto-installation and sticking to the ""rules"". It would also be good in advance of a possible PPA or mirror opportunities ;)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,335,2016-06-07T21:23:39Z,2016-06-07T21:25:47Z,2016-06-07T21:30:07Z,CLOSED,False,1,0,1,https://github.com/nucleardreamer,.deb installer missing Section header,1,[],https://github.com/zerotier/ZeroTierOne/pull/335,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/335#issuecomment-224419398,"Hi guys!
The Section header on the deb installer control file is definitely optional, however, it breaks some automation using local deb repos. An example is installing with reprepro, you will just get:
No section given for 'zerotier-one', skipping.

This isn't particularly a problem because there is a flag to ignore this, but it breaks when doing auto-installation and sticking to the ""rules"". It would also be good in advance of a possible PPA or mirror opportunities ;)",Thanks but we're totally re-doing packaging right now from scratch for both DEB and RPM with the hope of getting this into core distros. The existing packages are very bare bones and not quite up to distro specs.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,335,2016-06-07T21:23:39Z,2016-06-07T21:25:47Z,2016-06-07T21:30:07Z,CLOSED,False,1,0,1,https://github.com/nucleardreamer,.deb installer missing Section header,1,[],https://github.com/zerotier/ZeroTierOne/pull/335,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/335#issuecomment-224419472,"Hi guys!
The Section header on the deb installer control file is definitely optional, however, it breaks some automation using local deb repos. An example is installing with reprepro, you will just get:
No section given for 'zerotier-one', skipping.

This isn't particularly a problem because there is a flag to ignore this, but it breaks when doing auto-installation and sticking to the ""rules"". It would also be good in advance of a possible PPA or mirror opportunities ;)",We will make sure this is fixed in the next rev of packaging.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,335,2016-06-07T21:23:39Z,2016-06-07T21:25:47Z,2016-06-07T21:30:07Z,CLOSED,False,1,0,1,https://github.com/nucleardreamer,.deb installer missing Section header,1,[],https://github.com/zerotier/ZeroTierOne/pull/335,https://github.com/nucleardreamer,4,https://github.com/zerotier/ZeroTierOne/pull/335#issuecomment-224420511,"Hi guys!
The Section header on the deb installer control file is definitely optional, however, it breaks some automation using local deb repos. An example is installing with reprepro, you will just get:
No section given for 'zerotier-one', skipping.

This isn't particularly a problem because there is a flag to ignore this, but it breaks when doing auto-installation and sticking to the ""rules"". It would also be good in advance of a possible PPA or mirror opportunities ;)",Sounds good to me. Feel free to @ me on any threads if you guys are looking for help!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,348,2016-07-06T07:40:39Z,2016-07-21T22:16:22Z,2016-07-21T22:16:22Z,MERGED,True,0,6,6,https://github.com/the-maldridge,Remove explicit sys/sysctl.h includes,1,[],https://github.com/zerotier/ZeroTierOne/pull/348,https://github.com/the-maldridge,1,https://github.com/zerotier/ZeroTierOne/pull/348,Explicitly including sys/sysctl.h breaks the ability to build against muslc.,Explicitly including sys/sysctl.h breaks the ability to build against muslc.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,362,2016-07-21T20:49:09Z,2016-07-21T22:16:05Z,2016-07-21T22:16:05Z,MERGED,True,84,84,1,https://github.com/mwarning,C++11 requires a space between literal and string macro,1,[],https://github.com/zerotier/ZeroTierOne/pull/362,https://github.com/mwarning,1,https://github.com/zerotier/ZeroTierOne/pull/362,"Compiling gives a bunch of warnings:
[...]
one.cpp:1178:18: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
   fprintf(stderr,""%s: must be run as root (uid 0)""ZT_EOL_S,argv[0]);
                  ^
one.cpp:1185:19: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
    fprintf(stderr,""%s: could not fork""ZT_EOL_S,argv[0]);
[...]

$ gcc --version
gcc (GCC) 6.1.1 20160707
Copyright (C) 2016 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.","Compiling gives a bunch of warnings:
[...]
one.cpp:1178:18: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
   fprintf(stderr,""%s: must be run as root (uid 0)""ZT_EOL_S,argv[0]);
                  ^
one.cpp:1185:19: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
    fprintf(stderr,""%s: could not fork""ZT_EOL_S,argv[0]);
[...]

$ gcc --version
gcc (GCC) 6.1.1 20160707
Copyright (C) 2016 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,363,2016-07-21T21:04:00Z,2016-07-21T22:15:27Z,2016-07-21T22:15:27Z,MERGED,True,2,2,1,https://github.com/mwarning,move sourceAddress out of scope,1,[],https://github.com/zerotier/ZeroTierOne/pull/363,https://github.com/mwarning,1,https://github.com/zerotier/ZeroTierOne/pull/363,sourceAddress is used in the catch block,sourceAddress is used in the catch block,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,364,2016-07-21T21:10:45Z,2016-07-21T22:15:42Z,2016-07-21T22:15:42Z,MERGED,True,2,2,1,https://github.com/mwarning,fix _FORTIFY_SOURCE warning,1,[],https://github.com/zerotier/ZeroTierOne/pull/364,https://github.com/mwarning,1,https://github.com/zerotier/ZeroTierOne/pull/364,"Error message:
/usr/include/features.h:331:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]
 #  warning _FORTIFY_SOURCE requires compiling with optimization (-O)","Error message:
/usr/include/features.h:331:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]
 #  warning _FORTIFY_SOURCE requires compiling with optimization (-O)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,376,2016-08-16T20:10:36Z,2016-10-21T20:39:55Z,2016-10-21T20:39:55Z,MERGED,True,0,0,1,https://github.com/siigna,Move debian/format to debian/source/format,1,[],https://github.com/zerotier/ZeroTierOne/pull/376,https://github.com/siigna,1,https://github.com/zerotier/ZeroTierOne/pull/376,"Fixes the following error during package building:
dpkg-source: warning: no source format specified in debian/source/format, see dpkg-source(1)
Reference:
https://www.debian.org/doc/manuals/maint-guide/dother.en.html#sourcef","Fixes the following error during package building:
dpkg-source: warning: no source format specified in debian/source/format, see dpkg-source(1)
Reference:
https://www.debian.org/doc/manuals/maint-guide/dother.en.html#sourcef",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,378,2016-08-17T16:05:48Z,2017-10-24T19:23:57Z,2017-10-24T19:23:57Z,CLOSED,False,65,10,2,https://github.com/kraney,Quick and dirty implementation of network-specific netns settings.,1,[],https://github.com/zerotier/ZeroTierOne/pull/378,https://github.com/kraney,1,https://github.com/zerotier/ZeroTierOne/pull/378,"In reference to this forum topic:
https://www.zerotier.com/community/topic/94/question-change-netns-of-zerotier-network-device
I made a quick-and-dirty implementation of this network namespace feature. To use it,

create a network namespace, for example ip netns add mynetns
Add a value for ""netns="" to /var/lib/zerotier-one/networks.d/#########.local.conf
Join the network

An example local.conf:
allowManaged=1
allowGlobal=0
allowDefault=0
netns=mynetns

The reason I call it 'quick and dirty' is that I didn't make any attempt to make it cross-platform clean. Also, I did not make it very robust for the case where the desired network namespace might not exist yet. It would be nice to automatically create it if necessary. Finally, it's just a cut-and-paste implementation. It would probably be desirable to create a class that would alter the network namespace in its constructor, then revert to its original namespace in its destructor. That way, there will be reliable cleanup when the class goes out of scope. The current implementation has a very C-like feel. Sorry, my C++ has gotten pretty rusty.
On a cursory scan, I didn't see an example of an OS-specific setting like this. Since there wasn't a precedent to follow, my intent here is only to prove the concept, leaving the question of how to best fit such a thing into the design for the maintainers to solve according to their preferences.","In reference to this forum topic:
https://www.zerotier.com/community/topic/94/question-change-netns-of-zerotier-network-device
I made a quick-and-dirty implementation of this network namespace feature. To use it,

create a network namespace, for example ip netns add mynetns
Add a value for ""netns="" to /var/lib/zerotier-one/networks.d/#########.local.conf
Join the network

An example local.conf:
allowManaged=1
allowGlobal=0
allowDefault=0
netns=mynetns

The reason I call it 'quick and dirty' is that I didn't make any attempt to make it cross-platform clean. Also, I did not make it very robust for the case where the desired network namespace might not exist yet. It would be nice to automatically create it if necessary. Finally, it's just a cut-and-paste implementation. It would probably be desirable to create a class that would alter the network namespace in its constructor, then revert to its original namespace in its destructor. That way, there will be reliable cleanup when the class goes out of scope. The current implementation has a very C-like feel. Sorry, my C++ has gotten pretty rusty.
On a cursory scan, I didn't see an example of an OS-specific setting like this. Since there wasn't a precedent to follow, my intent here is only to prove the concept, leaving the question of how to best fit such a thing into the design for the maintainers to solve according to their preferences.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,378,2016-08-17T16:05:48Z,2017-10-24T19:23:57Z,2017-10-24T19:23:57Z,CLOSED,False,65,10,2,https://github.com/kraney,Quick and dirty implementation of network-specific netns settings.,1,[],https://github.com/zerotier/ZeroTierOne/pull/378,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/378#issuecomment-265031332,"In reference to this forum topic:
https://www.zerotier.com/community/topic/94/question-change-netns-of-zerotier-network-device
I made a quick-and-dirty implementation of this network namespace feature. To use it,

create a network namespace, for example ip netns add mynetns
Add a value for ""netns="" to /var/lib/zerotier-one/networks.d/#########.local.conf
Join the network

An example local.conf:
allowManaged=1
allowGlobal=0
allowDefault=0
netns=mynetns

The reason I call it 'quick and dirty' is that I didn't make any attempt to make it cross-platform clean. Also, I did not make it very robust for the case where the desired network namespace might not exist yet. It would be nice to automatically create it if necessary. Finally, it's just a cut-and-paste implementation. It would probably be desirable to create a class that would alter the network namespace in its constructor, then revert to its original namespace in its destructor. That way, there will be reliable cleanup when the class goes out of scope. The current implementation has a very C-like feel. Sorry, my C++ has gotten pretty rusty.
On a cursory scan, I didn't see an example of an OS-specific setting like this. Since there wasn't a precedent to follow, my intent here is only to prove the concept, leaving the question of how to best fit such a thing into the design for the maintainers to solve according to their preferences.","I think we'll be doing this, but we'll probably use this as a basis/hint. I think we'll be refactoring to put everything in local.conf -- including the network local configurations. Might not happen for this version.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,378,2016-08-17T16:05:48Z,2017-10-24T19:23:57Z,2017-10-24T19:23:57Z,CLOSED,False,65,10,2,https://github.com/kraney,Quick and dirty implementation of network-specific netns settings.,1,[],https://github.com/zerotier/ZeroTierOne/pull/378,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/378#issuecomment-265031372,"In reference to this forum topic:
https://www.zerotier.com/community/topic/94/question-change-netns-of-zerotier-network-device
I made a quick-and-dirty implementation of this network namespace feature. To use it,

create a network namespace, for example ip netns add mynetns
Add a value for ""netns="" to /var/lib/zerotier-one/networks.d/#########.local.conf
Join the network

An example local.conf:
allowManaged=1
allowGlobal=0
allowDefault=0
netns=mynetns

The reason I call it 'quick and dirty' is that I didn't make any attempt to make it cross-platform clean. Also, I did not make it very robust for the case where the desired network namespace might not exist yet. It would be nice to automatically create it if necessary. Finally, it's just a cut-and-paste implementation. It would probably be desirable to create a class that would alter the network namespace in its constructor, then revert to its original namespace in its destructor. That way, there will be reliable cleanup when the class goes out of scope. The current implementation has a very C-like feel. Sorry, my C++ has gotten pretty rusty.
On a cursory scan, I didn't see an example of an OS-specific setting like this. Since there wasn't a precedent to follow, my intent here is only to prove the concept, leaving the question of how to best fit such a thing into the design for the maintainers to solve according to their preferences.",Leaving open...,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,401,2016-10-16T11:43:42Z,2016-10-21T20:37:28Z,2016-10-21T20:38:28Z,MERGED,True,197,3,5,https://github.com/zielmicha,Run as nonroot user on Linux (with CAP_NET_ADMIN and CAP_NET_RAW added).,1,[],https://github.com/zerotier/ZeroTierOne/pull/401,https://github.com/zielmicha,1,https://github.com/zerotier/ZeroTierOne/pull/401,"ZT will only drop root privileges if zerotier-one user exists. It is created by Debian postinst script - in other cases the user has to be created by administrator.
Linux >=4.3 with ambient capabilities is required, otherwise ZT will silently run as root
""-U"" option now also disables privileges dropping","ZT will only drop root privileges if zerotier-one user exists. It is created by Debian postinst script - in other cases the user has to be created by administrator.
Linux >=4.3 with ambient capabilities is required, otherwise ZT will silently run as root
""-U"" option now also disables privileges dropping",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,401,2016-10-16T11:43:42Z,2016-10-21T20:37:28Z,2016-10-21T20:38:28Z,MERGED,True,197,3,5,https://github.com/zielmicha,Run as nonroot user on Linux (with CAP_NET_ADMIN and CAP_NET_RAW added).,1,[],https://github.com/zerotier/ZeroTierOne/pull/401,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/401#issuecomment-255459187,"ZT will only drop root privileges if zerotier-one user exists. It is created by Debian postinst script - in other cases the user has to be created by administrator.
Linux >=4.3 with ambient capabilities is required, otherwise ZT will silently run as root
""-U"" option now also disables privileges dropping",Merged! Will test and review some more but this looks like really great high-quality work. Thanks!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,401,2016-10-16T11:43:42Z,2016-10-21T20:37:28Z,2016-10-21T20:38:28Z,MERGED,True,197,3,5,https://github.com/zielmicha,Run as nonroot user on Linux (with CAP_NET_ADMIN and CAP_NET_RAW added).,1,[],https://github.com/zerotier/ZeroTierOne/pull/401,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/401#issuecomment-255459282,"ZT will only drop root privileges if zerotier-one user exists. It is created by Debian postinst script - in other cases the user has to be created by administrator.
Linux >=4.3 with ambient capabilities is required, otherwise ZT will silently run as root
""-U"" option now also disables privileges dropping",This addresses issue #401 -- which will be closed soon.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,402,2016-10-23T19:45:52Z,2016-11-08T16:32:47Z,2016-11-08T16:32:47Z,MERGED,True,1,1,1,https://github.com/bobberb,Typo fix line 77,1,[],https://github.com/zerotier/ZeroTierOne/pull/402,https://github.com/bobberb,1,https://github.com/zerotier/ZeroTierOne/pull/402,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,407,2016-11-08T14:57:34Z,2016-11-08T16:32:31Z,2016-11-08T16:32:32Z,MERGED,True,2,2,1,https://github.com/misuzu,Chown fix,1,[],https://github.com/zerotier/ZeroTierOne/pull/407,https://github.com/misuzu,1,https://github.com/zerotier/ZeroTierOne/pull/407,"zerotier-one is not starting if /var/lib/zerotier-one already exists and belongs to root.
With this patch zerotier-one chown's home directory before dropping privileges.","zerotier-one is not starting if /var/lib/zerotier-one already exists and belongs to root.
With this patch zerotier-one chown's home directory before dropping privileges.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,428,2016-12-27T11:47:40Z,2018-04-25T13:39:38Z,2018-04-25T13:39:38Z,MERGED,True,928,1,8,https://github.com/danielskowronski,NetBSD support,7,[],https://github.com/zerotier/ZeroTierOne/pull/428,https://github.com/danielskowronski,1,https://github.com/zerotier/ZeroTierOne/pull/428,"I've added (very) experimental support for NetBSD - highly portable BSD distribution.
Only osdep/*EthernetTap needed to be changed (plus some adding __NetBSD__ in some places in code and custom makefile). As on older OS X getifmaddrs() and related are missing in NetBSD kernel so I've added them from FreeBSD. Implementation of creating tap device is quick and dirty but for now - it works.","I've added (very) experimental support for NetBSD - highly portable BSD distribution.
Only osdep/*EthernetTap needed to be changed (plus some adding __NetBSD__ in some places in code and custom makefile). As on older OS X getifmaddrs() and related are missing in NetBSD kernel so I've added them from FreeBSD. Implementation of creating tap device is quick and dirty but for now - it works.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,428,2016-12-27T11:47:40Z,2018-04-25T13:39:38Z,2018-04-25T13:39:38Z,MERGED,True,928,1,8,https://github.com/danielskowronski,NetBSD support,7,[],https://github.com/zerotier/ZeroTierOne/pull/428,https://github.com/danielskowronski,2,https://github.com/zerotier/ZeroTierOne/pull/428#issuecomment-269315703,"I've added (very) experimental support for NetBSD - highly portable BSD distribution.
Only osdep/*EthernetTap needed to be changed (plus some adding __NetBSD__ in some places in code and custom makefile). As on older OS X getifmaddrs() and related are missing in NetBSD kernel so I've added them from FreeBSD. Implementation of creating tap device is quick and dirty but for now - it works.",Tested with NetBSD 7.0.2 (GENERIC.201610210724Z) i386 and gcc version 4.8.4 (nb2 20150115),True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,428,2016-12-27T11:47:40Z,2018-04-25T13:39:38Z,2018-04-25T13:39:38Z,MERGED,True,928,1,8,https://github.com/danielskowronski,NetBSD support,7,[],https://github.com/zerotier/ZeroTierOne/pull/428,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/428#issuecomment-273862810,"I've added (very) experimental support for NetBSD - highly portable BSD distribution.
Only osdep/*EthernetTap needed to be changed (plus some adding __NetBSD__ in some places in code and custom makefile). As on older OS X getifmaddrs() and related are missing in NetBSD kernel so I've added them from FreeBSD. Implementation of creating tap device is quick and dirty but for now - it works.",Hmm... will have to see if this works against dev. Thanks!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,428,2016-12-27T11:47:40Z,2018-04-25T13:39:38Z,2018-04-25T13:39:38Z,MERGED,True,928,1,8,https://github.com/danielskowronski,NetBSD support,7,[],https://github.com/zerotier/ZeroTierOne/pull/428,https://github.com/adamierymenko,4,https://github.com/zerotier/ZeroTierOne/pull/428#issuecomment-276083487,"I've added (very) experimental support for NetBSD - highly portable BSD distribution.
Only osdep/*EthernetTap needed to be changed (plus some adding __NetBSD__ in some places in code and custom makefile). As on older OS X getifmaddrs() and related are missing in NetBSD kernel so I've added them from FreeBSD. Implementation of creating tap device is quick and dirty but for now - it works.",Now that OpenBSD is in dev I think we will have to look at this. Will have to be ported to dev.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,428,2016-12-27T11:47:40Z,2018-04-25T13:39:38Z,2018-04-25T13:39:38Z,MERGED,True,928,1,8,https://github.com/danielskowronski,NetBSD support,7,[],https://github.com/zerotier/ZeroTierOne/pull/428,https://github.com/adamierymenko,5,https://github.com/zerotier/ZeroTierOne/pull/428#issuecomment-276083700,"I've added (very) experimental support for NetBSD - highly portable BSD distribution.
Only osdep/*EthernetTap needed to be changed (plus some adding __NetBSD__ in some places in code and custom makefile). As on older OS X getifmaddrs() and related are missing in NetBSD kernel so I've added them from FreeBSD. Implementation of creating tap device is quick and dirty but for now - it works.",We will have to make a NetBSD CI VM on our VM host too.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,428,2016-12-27T11:47:40Z,2018-04-25T13:39:38Z,2018-04-25T13:39:38Z,MERGED,True,928,1,8,https://github.com/danielskowronski,NetBSD support,7,[],https://github.com/zerotier/ZeroTierOne/pull/428,https://github.com/krytarowski,6,https://github.com/zerotier/ZeroTierOne/pull/428#issuecomment-276171411,"I've added (very) experimental support for NetBSD - highly portable BSD distribution.
Only osdep/*EthernetTap needed to be changed (plus some adding __NetBSD__ in some places in code and custom makefile). As on older OS X getifmaddrs() and related are missing in NetBSD kernel so I've added them from FreeBSD. Implementation of creating tap device is quick and dirty but for now - it works.",I'm looking forward to it.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,431,2017-01-01T00:59:17Z,2017-01-01T00:59:47Z,2017-01-01T00:59:47Z,CLOSED,False,0,0,0,https://github.com/sbilly,Merge pull request #1 from zerotier/master,1,[],https://github.com/zerotier/ZeroTierOne/pull/431,https://github.com/sbilly,1,https://github.com/zerotier/ZeroTierOne/pull/431,20170101 - up2date,20170101 - up2date,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,431,2017-01-01T00:59:17Z,2017-01-01T00:59:47Z,2017-01-01T00:59:47Z,CLOSED,False,0,0,0,https://github.com/sbilly,Merge pull request #1 from zerotier/master,1,[],https://github.com/zerotier/ZeroTierOne/pull/431,https://github.com/sbilly,2,https://github.com/zerotier/ZeroTierOne/pull/431#issuecomment-269887989,20170101 - up2date,sorry,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,434,2017-01-01T23:17:14Z,2017-01-19T18:47:48Z,2017-01-19T18:47:48Z,MERGED,True,37,21,1,https://github.com/zielmicha,Binder.hpp: gather all IPv4 interface addresses,1,[],https://github.com/zerotier/ZeroTierOne/pull/434,https://github.com/zielmicha,1,https://github.com/zerotier/ZeroTierOne/pull/434,"Fixes #430.
Changes binder to use slightly different method for obtaining IPv4 addresses that doesn't miss addresses with non-empty labels.","Fixes #430.
Changes binder to use slightly different method for obtaining IPv4 addresses that doesn't miss addresses with non-empty labels.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,442,2017-01-22T22:10:48Z,2017-01-30T14:54:49Z,2017-01-30T14:54:50Z,MERGED,True,60,9,4,https://github.com/zielmicha,allow user to specify arbitrary allowed IP networks in allowManaged,1,[],https://github.com/zerotier/ZeroTierOne/pull/442,https://github.com/zielmicha,1,https://github.com/zerotier/ZeroTierOne/pull/442,"Implements #440. (I haven't tested this much yet)
There is also a fix for compilation problem in Buffer.hpp. It seems that Buffer::begin/Buffer::end was not previously used, so it wasn't catched.","Implements #440. (I haven't tested this much yet)
There is also a fix for compilation problem in Buffer.hpp. It seems that Buffer::begin/Buffer::end was not previously used, so it wasn't catched.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,449,2017-03-13T16:54:04Z,2017-03-17T19:35:41Z,2017-03-18T19:07:52Z,CLOSED,False,1,0,1,https://github.com/makersphereLabs,Add make command for linux-build-farm,1,[],https://github.com/zerotier/ZeroTierOne/pull/449,https://github.com/makersphereLabs,1,https://github.com/zerotier/ZeroTierOne/pull/449,"Without the make one command in the Makefile, building the .deb packages using the linux-build-farm (which runs make debian inside a Docker container) fails when executed on a non-Linux machine. (e.g. macOS)","Without the make one command in the Makefile, building the .deb packages using the linux-build-farm (which runs make debian inside a Docker container) fails when executed on a non-Linux machine. (e.g. macOS)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,449,2017-03-13T16:54:04Z,2017-03-17T19:35:41Z,2017-03-18T19:07:52Z,CLOSED,False,1,0,1,https://github.com/makersphereLabs,Add make command for linux-build-farm,1,[],https://github.com/zerotier/ZeroTierOne/pull/449,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/449#issuecomment-287451208,"Without the make one command in the Makefile, building the .deb packages using the linux-build-farm (which runs make debian inside a Docker container) fails when executed on a non-Linux machine. (e.g. macOS)",Closing since linux-build-farm is deprecated. We will be publishing a torrent or something of our new qemu-chroot based multi-arch system.,True,{'THUMBS_UP': ['https://github.com/makersphereLabs']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/makersphereLabs,1,https://github.com/zerotier/ZeroTierOne/pull/450,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/misuzu,2,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-286189146,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","I think there is a better approach:
https://git.kernel.org/pub/scm/network/connman/connman.git/tree/src/connman-wait-online.service.in",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/makersphereLabs,3,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-286240296,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","@misuzu Well, this doesn't work with ZeroTier... Already tried that.
Because ZT networks are virtual interfaces, it's a bit more complicated.
In a nutshell, systemd starts zerotier-one.service and moves on with the startup sequence, but the ZT interfaces (zt0, zt1, etc.) need some time to become available. Just using After= or Before= doesn't do the trick because systemd does not wait/know about these virtual interfaces.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/keesbos,4,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-286354846,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","I'm not sure if this will be generally favorable. It assumes you want all interfaces to be up before continuing (if I read it right). Per interface could be done with normal if-scripts. E.g. something like:
/etc/network/interfaces:
iface zt0 inet static
	address 192.168.0.10
	netmask 255.255.255.0
	broadcast 192.168.0.255

/etc/network/if-pre-up.d/zt0:
#!/bin/sh
# Start zerotier-one (if it's not started yet) and wait for zt0
/etc/init.d/zerotier-one start
echo -en ""Waiting for zt0""
while ! ifconfig zt0 >/dev/null 2>&1; do echo -en '.' ; sleep 1 ; done
echo",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/makersphereLabs,5,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-286525643,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","@keesbos Na, not really. Maybe the PR desc. is a bit misleading. 😬
It's not about the physical interfaces eth0, eth1... For those ifaces if-pre-up scripts work just fine.
But ZeroTier networks are virtual interfaces and their IPs are assigned via ZT.
Also messing with the /etc/network/interfaces config doesn't work here and isn't really scalable, when you need to provision multiple networks & machines. Btw. already tried that too. 😅
Since the last few releases, Ubuntu uses systemd to start services, incl. Docker, ZeroTier, SSH, etc.
Which means that you have to modify the .service file, to make sure the ZT networks are up before continuing the startup sequence. Most people expect ZeroTier interfaces to behave like ""normal"", physical network connections. (They're obviously not.) This tweak ensures that these virtual ifaces are created & available before you launch other services. Now they can be used like any other (physical) interface. ✌️
Use Case: E.g. SSH binds to zt0, for remote access only via a ZT network.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/victorqhong,6,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-286595931,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE",@makersphereLabs Try changing After=network.target in the unit file to After=network-pre.target. That should make the service start a bit earlier and fixed it for me.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/makersphereLabs,7,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-286624539,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","@victorqhong Interesting, which OS are you using and how many ZT networks are configured?
Have you tried to verify the startup order with something like systemd-analyze plot > plot.svg to make sure it doesn't come down to random luck if it works or not? Especially important when you're using SSH only via ZeroTier. 🤔
Update: Found some useful documentation. The last section is quite important.
The delay function in this PR doesn't use a static wait value. It's dynamic and depends on the number of virtual ZT interfaces. https://www.freedesktop.org/wiki/Software/systemd/NetworkTarget/",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/makersphereLabs,8,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-287572487,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","We could add some kind of timeout function, to make sure the script doesn't block the boot process.
This would prevent a scenario, like @zielmicha described it in a comment to #451.
@adamierymenko What do you think?
And is this tweak too specific to Ubuntu? Should we add version for other systemd-based OS?
We would need to update the zerotier-one.spec tho...",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/lloesche,9,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-339129719,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","Why not change it to be a built-in that works on all platforms. Maybe add a zerotier-wait personality that blocks until a given network or all networks are connected.
Then you could have something like ExecStartPost=-/usr/sbin/zerotier-wait all in your service unit. Folks who want to block until the networks are up create the symlink, others don't.
Or if you don't like user created symlinks in /usr/sbin/ maybe allow for an optional EnvironmentFile=-/etc/zerotier/wait with ZT_WAIT_FOR=all in it and process that environment variable in the tool itself with the default (ZT_WAIT_FOR is empty/undefined) being to not wait and return immediately.
Just some ideas to make this otherwise really useful feature more portable.",True,"{'THUMBS_UP': ['https://github.com/misuzu', 'https://github.com/sensorii', 'https://github.com/Lillecarl']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/dch,10,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-339714125,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","as a non-systemd os user, I've found that I can't start firewall successfully until zt interfaces are up, which is awkward for automated startup. Something that supports this would be useful, but I may be able to get away with a simpler solution on FreeBSD at least. Still testing.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/dch,11,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-347011400,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","FWIW I've found a similar constraint - while I can ensure via rcorder(8) that network interfaces are created prior to zerotier, and that zerotier starts before the firewalls do, but the firewalls themselves still need assigned IPs before ""things just work"". Making zerotier not return from startup until all interfaces are up and have an IP assigned would be great, ideally via option flag. --wait-for-IPs sort of thing.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/fschulze,12,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-352172122,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE",This might be the reason why my firewall port forwards on freebsd sometimes don't work. Is there a way to do stuff when a zero tear network comes up? Then I could reload the firewall config. Waiting on zerotier IPs to become available is risky if other firewall rules are required to get access to a server at all.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/dch,13,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-352173010,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","@fschulze the changes I made are as follows:

make zt dependent on ipfw & pf startup
tweak my pf.conf slightly:

normally you'd use this approach zero_net = $zero_if:network and then pf works out the correct ip range from the live interface. If you use instead zero_net = ""10.144.0.0/16"" then pf doesn't have to wait for actual IP addresses to be present on the tap interface, and startup + rules can proceed without issue.
the changes for zt in ports to support this will go in this weekend, but you can try it out with the following manual change to /usr/local/etc/rc.d/zerotier
6c6,7
< # REQUIRE: LOGIN
---
> # REQUIRE: FILESYSTEMS netif
> # BEFORE:  pf ipfw",True,{'HEART': ['https://github.com/fschulze']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/fschulze,14,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-374000047,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","@dch that change doesn't seem to be in ports yet, do you have a link to the issue/PR for it?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/dch,15,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-374738523,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","my bad, had a run of health issues and this slipped through. see https://reviews.freebsd.org/D14777 should land soon as its not overly complicated.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/dch,16,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-374781945,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE",@fschulze done - thanks for the reminder,True,{'HEART': ['https://github.com/fschulze']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,450,2017-03-13T17:24:04Z,2018-04-25T13:33:09Z,2018-04-25T13:33:09Z,CLOSED,False,7,0,1,https://github.com/makersphereLabs,Wait for ZT networks to become available,2,[],https://github.com/zerotier/ZeroTierOne/pull/450,https://github.com/adamierymenko,17,https://github.com/zerotier/ZeroTierOne/pull/450#issuecomment-384287831,"It's not very pretty but it works. 😅
If you're running services like SSH, Docker etc. which bind to a specific ZeroTier interface, they will most likely fail during startup because systemd doesn't waits for ZT networks to come up.
Adding a this ""dynamic"" delay doesn't impact startup time in any substantial way.
Without this small hack, it's just random luck when e.g. Docker successfully starts after all configured ZT (networks) interfaces are up.
Tested on Ubuntu 16.04 with ZeroTier One v1.1.17 and Docker 17.03 CE","We are going to close this unfortunately. While we really appreciate the work, we think this is out of scope and should be handled by a script, systemd, or some other aspect of the system as it affects any kind of network interface (e.g. WiFi) and not just ZeroTier.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,453,2017-03-15T08:44:51Z,2017-03-15T19:57:25Z,2017-03-15T20:12:10Z,CLOSED,False,0,7,2,https://github.com/jonathonf,Empty override means it doesn't build,2,[],https://github.com/zerotier/ZeroTierOne/pull/453,https://github.com/jonathonf,1,https://github.com/zerotier/ZeroTierOne/pull/453,"Having a blank override_dh_auto_build means it doesn't actually build anything. Either comment out entirely, or just remove it.","Having a blank override_dh_auto_build means it doesn't actually build anything. Either comment out entirely, or just remove it.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,453,2017-03-15T08:44:51Z,2017-03-15T19:57:25Z,2017-03-15T20:12:10Z,CLOSED,False,0,7,2,https://github.com/jonathonf,Empty override means it doesn't build,2,[],https://github.com/zerotier/ZeroTierOne/pull/453,https://github.com/jonathonf,2,https://github.com/zerotier/ZeroTierOne/pull/453#issuecomment-286860312,"Having a blank override_dh_auto_build means it doesn't actually build anything. Either comment out entirely, or just remove it.",Wrong destination branch... should PR into dev...,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,453,2017-03-15T08:44:51Z,2017-03-15T19:57:25Z,2017-03-15T20:12:10Z,CLOSED,False,0,7,2,https://github.com/jonathonf,Empty override means it doesn't build,2,[],https://github.com/zerotier/ZeroTierOne/pull/453,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/453#issuecomment-286864178,"Having a blank override_dh_auto_build means it doesn't actually build anything. Either comment out entirely, or just remove it.","Okay, I think we'll figure out some way to make this the default.
It was done this way intentionally since in our build farm we just want to package a pre-build binary, not build in each variant.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,455,2017-03-15T20:08:26Z,2017-03-18T01:47:46Z,2017-03-18T01:47:46Z,CLOSED,False,0,6,2,https://github.com/jonathonf,Fix empty override_dh_auto_build causing build failure,5,[],https://github.com/zerotier/ZeroTierOne/pull/455,https://github.com/jonathonf,1,https://github.com/zerotier/ZeroTierOne/pull/455,"A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.","A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,455,2017-03-15T20:08:26Z,2017-03-18T01:47:46Z,2017-03-18T01:47:46Z,CLOSED,False,0,6,2,https://github.com/jonathonf,Fix empty override_dh_auto_build causing build failure,5,[],https://github.com/zerotier/ZeroTierOne/pull/455,https://github.com/makersphereLabs,2,https://github.com/zerotier/ZeroTierOne/pull/455#issuecomment-286869562,"A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.","@jonathonf Not entirely sure, but can #449 be fix with this?
Because building the .deb packages fails when you're using the linux-build-farm (Docker)... 🤔",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,455,2017-03-15T20:08:26Z,2017-03-18T01:47:46Z,2017-03-18T01:47:46Z,CLOSED,False,0,6,2,https://github.com/jonathonf,Fix empty override_dh_auto_build causing build failure,5,[],https://github.com/zerotier/ZeroTierOne/pull/455,https://github.com/jonathonf,3,https://github.com/zerotier/ZeroTierOne/pull/455#issuecomment-286886750,"A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.","I don't think so - running debuild normally cleans the build area and initiates a fresh build from the source archive. Any command run beforehand (as in the makefile change) adding files will be caught by debuild (e.g. 'unable to represent binary changes in source'), or those files will be cleaned during e.g. dh_auto_clean.
From #453 (comment) it looks like debian/rules is being used to package pre-compiled binaries, rather than compiling from source, and (AFAIK) you normally do that with just a basic directory layout and .install rules (e.g. any of the binary-only packages in my Launchpad PPAs).
As a first thought, a better approach might be to enable static compilation via debian/rules, and use that build process to produce static binaries within a common package.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,455,2017-03-15T20:08:26Z,2017-03-18T01:47:46Z,2017-03-18T01:47:46Z,CLOSED,False,0,6,2,https://github.com/jonathonf,Fix empty override_dh_auto_build causing build failure,5,[],https://github.com/zerotier/ZeroTierOne/pull/455,https://github.com/makersphereLabs,4,https://github.com/zerotier/ZeroTierOne/pull/455#issuecomment-286905326,"A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.","@jonathonf The weird thing is, without make one in the Makefile, debuild (inside the Docker container) will attempt to install the package, instead of compiling and packaging the binaries. 😬
Update: Just saw #453. Well, then it makes sense, because we you compile on macOS, you rely on the linux-bild-farm to compile & package the code.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,455,2017-03-15T20:08:26Z,2017-03-18T01:47:46Z,2017-03-18T01:47:46Z,CLOSED,False,0,6,2,https://github.com/jonathonf,Fix empty override_dh_auto_build causing build failure,5,[],https://github.com/zerotier/ZeroTierOne/pull/455,https://github.com/adamierymenko,5,https://github.com/zerotier/ZeroTierOne/pull/455#issuecomment-287437706,"A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.","That was intentional. Our new build farm builds static binaries and then packages them on all the distro images so our official binaries can be as dependency-free as possible.
We should have our own version for this though. Might revert debian in the distro and make a debian.staticbuild or something that gets moved into place by our build script.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,455,2017-03-15T20:08:26Z,2017-03-18T01:47:46Z,2017-03-18T01:47:46Z,CLOSED,False,0,6,2,https://github.com/jonathonf,Fix empty override_dh_auto_build causing build failure,5,[],https://github.com/zerotier/ZeroTierOne/pull/455,https://github.com/jonathonf,6,https://github.com/zerotier/ZeroTierOne/pull/455#issuecomment-287441177,"A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.",Depending on your build hosts (e.g. if they have a common identifier) or even just an environment variable it should be possible to make it a conditional without adding extra files.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,455,2017-03-15T20:08:26Z,2017-03-18T01:47:46Z,2017-03-18T01:47:46Z,CLOSED,False,0,6,2,https://github.com/jonathonf,Fix empty override_dh_auto_build causing build failure,5,[],https://github.com/zerotier/ZeroTierOne/pull/455,https://github.com/adamierymenko,7,https://github.com/zerotier/ZeroTierOne/pull/455#issuecomment-287508088,"A blank debian/rules directive means nothing happens. In this case, it means the build process fails. Removing the empty directive lets builds continue correctly.",Closing since we fixed this in the next release -- we will keep alternate .static files and move them into place on our build host.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,457,2017-03-16T12:03:42Z,2017-03-17T19:18:54Z,2017-03-17T19:29:07Z,MERGED,True,2,2,1,https://github.com/dch,build: use clang on FreeBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/457,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/457,"this avoids a whopping 500+Mb dependency on gcc and friends at runtime
passes zerotier selftest at least

closes #456
$ git show HEAD
commit 25dc5963977a3ca7e8a2e6e09a3ed9a4d43fe527
Author: Dave Cottlehuber <dch@skunkwerks.at>
Date:   Thu Mar 16 12:58:04 2017 +0100

    build: use clang on FreeBSD

    this avoids a whopping 500+Mb dependency on gcc and friends at runtime

diff --git a/Makefile b/Makefile
index 2f11e5fa..95118621 100644
--- a/Makefile
+++ b/Makefile
@@ -11,8 +11,8 @@ ifeq ($(OSTYPE),Linux)
 endif

 ifeq ($(OSTYPE),FreeBSD)
-       CC=gcc
-       CXX=g++
+       CC=clang
+       CXX=clang++
        ZT_BUILD_PLATFORM=7
        include make-bsd.mk
 endif
$ gmake
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/EmbeddedNetworkController.o controller/EmbeddedNetworkController.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/JSONDB.o controller/JSONDB.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/C25519.o node/C25519.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Capability.o node/Capability.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Cluster.o node/Cluster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Identity.o node/Identity.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Membership.o node/Membership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Network.o node/Network.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Node.o node/Node.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Packet.o node/Packet.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Path.o node/Path.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Peer.o node/Peer.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Poly1305.o node/Poly1305.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Revocation.o node/Revocation.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Salsa20.o node/Salsa20.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SelfAwareness.o node/SelfAwareness.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SHA512.o node/SHA512.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Switch.o node/Switch.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Tag.o node/Tag.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Topology.o node/Topology.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Utils.o node/Utils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/ManagedRoute.o osdep/ManagedRoute.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/Http.o osdep/Http.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/OSUtils.o osdep/OSUtils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/ClusterGeoIpService.o service/ClusterGeoIpService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/SoftwareUpdater.o service/SoftwareUpdater.cpp
service/SoftwareUpdater.cpp:261:110: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unrecognized verb)"" ZT_EOL_S,origin,(unsigned int)v,len);
                       ~~~~~~~                                                                               ^~~~~~
                       %.10lx
service/SoftwareUpdater.cpp:268:132: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unexpected exception, likely invalid JSON)"" ZT_EOL_S,origin,(unsigned int)v...
                       ~~~~~~~                                                                                                       ^~~~~~
                       %.10lx
2 warnings generated.
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/BSDEthernetTap.o osdep/BSDEthernetTap.cpp
clang -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\""""   -c -o ext/http-parser/http_parser.o ext/http-parser/http_parser.c
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/OneService.o service/OneService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o one.o one.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-one controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o service/OneService.o one.o
strip --strip-all zerotier-one
ln -sf zerotier-one zerotier-idtool
ln -sf zerotier-one zerotier-cli

$ gmake selftest
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o selftest.o selftest.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-selftest selftest.o controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o
strip --strip-all zerotier-selftest

$ ./zerotier-selftest
[info] sizeof(void *) == 8
[info] sizeof(NetworkConfig) == 431496
[other] Testing Hashtable... PASS
[other] Testing hex encode/decode... PASS
[other] Testing/fuzzing Dictionary... PASS (junk value to prevent optimization-out of test: -17891)
[crypto] getSecureRandom: 03db82b85a985aeef837c9dbfd72311ebf8a6fa4f4bc33c42aa39c8f817b17a6103bdcaac6d72a284fb014b59b3f89a80d41e471620bb16b73d875752c218f96
[crypto] getSecureRandom: b52cb7da8d4ed4ff8f8d78f7d8310e7ba32d2e3a5107f5ed11219a3e1222a721876dc6a0018561149c7a13d86749e14277a66f826f650758e583b666f7939d14
[crypto] getSecureRandom: 9dc2cb19225177749355cfd0c793bf44946555411d8880a4dcd4929e4527828fca9f41113853e000c0a20deded41c8f55633bacf3902e39d813908c1f8a01a8e
[crypto] Testing Salsa20... PASS
[crypto] Salsa20 SSE: ENABLED
[crypto] Benchmarking Salsa20/12... 888.585 MiB/second (f31ddbcdb3b69d0a5e19ba94a7e2facc)
[crypto] Benchmarking Salsa20/20... 550.175 MiB/second (24c619994ae7f1549136169c9072f3d7)
[crypto] Testing SHA-512... PASS
[crypto] Testing Poly1305... PASS
[crypto] Benchmarking Poly1305... 1220.08 MiB/second
[crypto] Testing C25519 and Ed25519 against test vectors... PASS
[crypto] Testing C25519 ECC key agreement... PASS
[crypto] Benchmarking C25519 ECC key agreement... 1.94ms per agreement.
[crypto] Testing Ed25519 ECC signatures... PASS
[packet] Testing Packet encoder/decoder... (compressed: 77, decompressed: 1116) PASS
[identity] Validate known-good identity... PASS (19.8ms per validation)
[identity] Validate known-bad identity... PASS (i.e. it failed)
[identity] Generate identity... (took 105ms): 4137fb91a5:0:178ae75f22bb62961bcf1b8dfae422c6f71893732a27f00462c320e838b42f237a37a37bd397cdd49521c63a2d10fdb81a43c362c62fc9c6758e5ae0e452083f:147e490033ef50cb1e130fd033a6a2f2224666f25e14adf4319343547181e6bd8da5353f2054d05f10696756c1a18b33d4fd45d5d849d669b36cae500c195bf5
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 352ms): 14706b535f:0:9a53fe713535f0acb4891be5154353ef589ca453b6d9a22e7d2ae9e29f44cd44cbd052abc28694353719e44824248e84a86542ef9b246723b3f415b0359225d9:e762328d822812318a205d690d9365be7c140e722148b0b61cf2d0aa5ee782745e7cbe6f53915a66eee20a2882f7eec01e95c6e12d115a96ed9485687ef30ced
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 187ms): ddb1329100:0:b0288e2cbece0a8513a1e8fdcdf0b33b7678822e8db58f6c51403d294007fe7969cb973a34abda7cc5166593f8991afa058bf2d5b48e88d5f32306237e57e66d:ef019663074289b34502d6afd83ed7c0ba639e4acce0e07748ba0d99dfa8622cecdf04afbc8e501bfe4259c95a7996fb71d4210b90c5277886b668b5fb08b56c
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 160ms): 517116edd5:0:cf5e8339b77a0593f820d68bc1d5e4507d5dcf3ea25a87e5e850e21eb142b276c4d04bf7d84209485e5d608768b36c3eff797aa01705650db92e7c3fd64b0482:ad8f36a96ffc945e5db3595c8d1dbcf0706a0f7778c28c99ba4a405ff11616c66d6528d4c90c22cdf2c327dc2983c0454ea8661a1b478f8dc2e26300ada3611e
[identity] Locally validate identity: PASS
[identity] Serialize and deserialize (w/private): PASS
[identity] Serialize and deserialize (no private): PASS
[identity] Serialize and deserialize (ASCII w/private): PASS
[identity] Serialize and deserialize (ASCII no private): PASS
[certificate] Generating identity to act as authority... 2854f72334
[certificate] Generating identities A and B... 47f54954a9, 1d8297829d
[certificate] Generating certificates A and B...
[certificate] Signing certificates A and B with authority...
[certificate] A agrees with B and B with A... yes, yes.
[certificate] Generating two certificates that should not agree...
[certificate] A agrees with B and B with A... no, no.
[phy] Creating phy endpoint...
[phy] Binding UDP listen socket to 127.0.0.1/60002... OK
[phy] Binding TCP listen socket to 127.0.0.1/60002... OK
[phy] Testing UDP send/receive... got 10000 packets, OK
[phy] Testing TCP... got 10 connect successes, 2 failures, and 10000000 bytes, OK
$","this avoids a whopping 500+Mb dependency on gcc and friends at runtime
passes zerotier selftest at least

closes #456
$ git show HEAD
commit 25dc5963977a3ca7e8a2e6e09a3ed9a4d43fe527
Author: Dave Cottlehuber <dch@skunkwerks.at>
Date:   Thu Mar 16 12:58:04 2017 +0100

    build: use clang on FreeBSD

    this avoids a whopping 500+Mb dependency on gcc and friends at runtime

diff --git a/Makefile b/Makefile
index 2f11e5fa..95118621 100644
--- a/Makefile
+++ b/Makefile
@@ -11,8 +11,8 @@ ifeq ($(OSTYPE),Linux)
 endif

 ifeq ($(OSTYPE),FreeBSD)
-       CC=gcc
-       CXX=g++
+       CC=clang
+       CXX=clang++
        ZT_BUILD_PLATFORM=7
        include make-bsd.mk
 endif
$ gmake
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/EmbeddedNetworkController.o controller/EmbeddedNetworkController.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/JSONDB.o controller/JSONDB.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/C25519.o node/C25519.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Capability.o node/Capability.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Cluster.o node/Cluster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Identity.o node/Identity.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Membership.o node/Membership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Network.o node/Network.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Node.o node/Node.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Packet.o node/Packet.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Path.o node/Path.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Peer.o node/Peer.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Poly1305.o node/Poly1305.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Revocation.o node/Revocation.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Salsa20.o node/Salsa20.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SelfAwareness.o node/SelfAwareness.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SHA512.o node/SHA512.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Switch.o node/Switch.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Tag.o node/Tag.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Topology.o node/Topology.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Utils.o node/Utils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/ManagedRoute.o osdep/ManagedRoute.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/Http.o osdep/Http.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/OSUtils.o osdep/OSUtils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/ClusterGeoIpService.o service/ClusterGeoIpService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/SoftwareUpdater.o service/SoftwareUpdater.cpp
service/SoftwareUpdater.cpp:261:110: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unrecognized verb)"" ZT_EOL_S,origin,(unsigned int)v,len);
                       ~~~~~~~                                                                               ^~~~~~
                       %.10lx
service/SoftwareUpdater.cpp:268:132: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unexpected exception, likely invalid JSON)"" ZT_EOL_S,origin,(unsigned int)v...
                       ~~~~~~~                                                                                                       ^~~~~~
                       %.10lx
2 warnings generated.
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/BSDEthernetTap.o osdep/BSDEthernetTap.cpp
clang -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\""""   -c -o ext/http-parser/http_parser.o ext/http-parser/http_parser.c
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/OneService.o service/OneService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o one.o one.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-one controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o service/OneService.o one.o
strip --strip-all zerotier-one
ln -sf zerotier-one zerotier-idtool
ln -sf zerotier-one zerotier-cli

$ gmake selftest
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o selftest.o selftest.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-selftest selftest.o controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o
strip --strip-all zerotier-selftest

$ ./zerotier-selftest
[info] sizeof(void *) == 8
[info] sizeof(NetworkConfig) == 431496
[other] Testing Hashtable... PASS
[other] Testing hex encode/decode... PASS
[other] Testing/fuzzing Dictionary... PASS (junk value to prevent optimization-out of test: -17891)
[crypto] getSecureRandom: 03db82b85a985aeef837c9dbfd72311ebf8a6fa4f4bc33c42aa39c8f817b17a6103bdcaac6d72a284fb014b59b3f89a80d41e471620bb16b73d875752c218f96
[crypto] getSecureRandom: b52cb7da8d4ed4ff8f8d78f7d8310e7ba32d2e3a5107f5ed11219a3e1222a721876dc6a0018561149c7a13d86749e14277a66f826f650758e583b666f7939d14
[crypto] getSecureRandom: 9dc2cb19225177749355cfd0c793bf44946555411d8880a4dcd4929e4527828fca9f41113853e000c0a20deded41c8f55633bacf3902e39d813908c1f8a01a8e
[crypto] Testing Salsa20... PASS
[crypto] Salsa20 SSE: ENABLED
[crypto] Benchmarking Salsa20/12... 888.585 MiB/second (f31ddbcdb3b69d0a5e19ba94a7e2facc)
[crypto] Benchmarking Salsa20/20... 550.175 MiB/second (24c619994ae7f1549136169c9072f3d7)
[crypto] Testing SHA-512... PASS
[crypto] Testing Poly1305... PASS
[crypto] Benchmarking Poly1305... 1220.08 MiB/second
[crypto] Testing C25519 and Ed25519 against test vectors... PASS
[crypto] Testing C25519 ECC key agreement... PASS
[crypto] Benchmarking C25519 ECC key agreement... 1.94ms per agreement.
[crypto] Testing Ed25519 ECC signatures... PASS
[packet] Testing Packet encoder/decoder... (compressed: 77, decompressed: 1116) PASS
[identity] Validate known-good identity... PASS (19.8ms per validation)
[identity] Validate known-bad identity... PASS (i.e. it failed)
[identity] Generate identity... (took 105ms): 4137fb91a5:0:178ae75f22bb62961bcf1b8dfae422c6f71893732a27f00462c320e838b42f237a37a37bd397cdd49521c63a2d10fdb81a43c362c62fc9c6758e5ae0e452083f:147e490033ef50cb1e130fd033a6a2f2224666f25e14adf4319343547181e6bd8da5353f2054d05f10696756c1a18b33d4fd45d5d849d669b36cae500c195bf5
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 352ms): 14706b535f:0:9a53fe713535f0acb4891be5154353ef589ca453b6d9a22e7d2ae9e29f44cd44cbd052abc28694353719e44824248e84a86542ef9b246723b3f415b0359225d9:e762328d822812318a205d690d9365be7c140e722148b0b61cf2d0aa5ee782745e7cbe6f53915a66eee20a2882f7eec01e95c6e12d115a96ed9485687ef30ced
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 187ms): ddb1329100:0:b0288e2cbece0a8513a1e8fdcdf0b33b7678822e8db58f6c51403d294007fe7969cb973a34abda7cc5166593f8991afa058bf2d5b48e88d5f32306237e57e66d:ef019663074289b34502d6afd83ed7c0ba639e4acce0e07748ba0d99dfa8622cecdf04afbc8e501bfe4259c95a7996fb71d4210b90c5277886b668b5fb08b56c
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 160ms): 517116edd5:0:cf5e8339b77a0593f820d68bc1d5e4507d5dcf3ea25a87e5e850e21eb142b276c4d04bf7d84209485e5d608768b36c3eff797aa01705650db92e7c3fd64b0482:ad8f36a96ffc945e5db3595c8d1dbcf0706a0f7778c28c99ba4a405ff11616c66d6528d4c90c22cdf2c327dc2983c0454ea8661a1b478f8dc2e26300ada3611e
[identity] Locally validate identity: PASS
[identity] Serialize and deserialize (w/private): PASS
[identity] Serialize and deserialize (no private): PASS
[identity] Serialize and deserialize (ASCII w/private): PASS
[identity] Serialize and deserialize (ASCII no private): PASS
[certificate] Generating identity to act as authority... 2854f72334
[certificate] Generating identities A and B... 47f54954a9, 1d8297829d
[certificate] Generating certificates A and B...
[certificate] Signing certificates A and B with authority...
[certificate] A agrees with B and B with A... yes, yes.
[certificate] Generating two certificates that should not agree...
[certificate] A agrees with B and B with A... no, no.
[phy] Creating phy endpoint...
[phy] Binding UDP listen socket to 127.0.0.1/60002... OK
[phy] Binding TCP listen socket to 127.0.0.1/60002... OK
[phy] Testing UDP send/receive... got 10000 packets, OK
[phy] Testing TCP... got 10 connect successes, 2 failures, and 10000000 bytes, OK
$",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,457,2017-03-16T12:03:42Z,2017-03-17T19:18:54Z,2017-03-17T19:29:07Z,MERGED,True,2,2,1,https://github.com/dch,build: use clang on FreeBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/457,https://github.com/dch,2,https://github.com/zerotier/ZeroTierOne/pull/457#issuecomment-287301792,"this avoids a whopping 500+Mb dependency on gcc and friends at runtime
passes zerotier selftest at least

closes #456
$ git show HEAD
commit 25dc5963977a3ca7e8a2e6e09a3ed9a4d43fe527
Author: Dave Cottlehuber <dch@skunkwerks.at>
Date:   Thu Mar 16 12:58:04 2017 +0100

    build: use clang on FreeBSD

    this avoids a whopping 500+Mb dependency on gcc and friends at runtime

diff --git a/Makefile b/Makefile
index 2f11e5fa..95118621 100644
--- a/Makefile
+++ b/Makefile
@@ -11,8 +11,8 @@ ifeq ($(OSTYPE),Linux)
 endif

 ifeq ($(OSTYPE),FreeBSD)
-       CC=gcc
-       CXX=g++
+       CC=clang
+       CXX=clang++
        ZT_BUILD_PLATFORM=7
        include make-bsd.mk
 endif
$ gmake
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/EmbeddedNetworkController.o controller/EmbeddedNetworkController.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/JSONDB.o controller/JSONDB.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/C25519.o node/C25519.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Capability.o node/Capability.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Cluster.o node/Cluster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Identity.o node/Identity.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Membership.o node/Membership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Network.o node/Network.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Node.o node/Node.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Packet.o node/Packet.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Path.o node/Path.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Peer.o node/Peer.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Poly1305.o node/Poly1305.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Revocation.o node/Revocation.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Salsa20.o node/Salsa20.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SelfAwareness.o node/SelfAwareness.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SHA512.o node/SHA512.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Switch.o node/Switch.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Tag.o node/Tag.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Topology.o node/Topology.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Utils.o node/Utils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/ManagedRoute.o osdep/ManagedRoute.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/Http.o osdep/Http.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/OSUtils.o osdep/OSUtils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/ClusterGeoIpService.o service/ClusterGeoIpService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/SoftwareUpdater.o service/SoftwareUpdater.cpp
service/SoftwareUpdater.cpp:261:110: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unrecognized verb)"" ZT_EOL_S,origin,(unsigned int)v,len);
                       ~~~~~~~                                                                               ^~~~~~
                       %.10lx
service/SoftwareUpdater.cpp:268:132: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unexpected exception, likely invalid JSON)"" ZT_EOL_S,origin,(unsigned int)v...
                       ~~~~~~~                                                                                                       ^~~~~~
                       %.10lx
2 warnings generated.
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/BSDEthernetTap.o osdep/BSDEthernetTap.cpp
clang -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\""""   -c -o ext/http-parser/http_parser.o ext/http-parser/http_parser.c
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/OneService.o service/OneService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o one.o one.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-one controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o service/OneService.o one.o
strip --strip-all zerotier-one
ln -sf zerotier-one zerotier-idtool
ln -sf zerotier-one zerotier-cli

$ gmake selftest
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o selftest.o selftest.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-selftest selftest.o controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o
strip --strip-all zerotier-selftest

$ ./zerotier-selftest
[info] sizeof(void *) == 8
[info] sizeof(NetworkConfig) == 431496
[other] Testing Hashtable... PASS
[other] Testing hex encode/decode... PASS
[other] Testing/fuzzing Dictionary... PASS (junk value to prevent optimization-out of test: -17891)
[crypto] getSecureRandom: 03db82b85a985aeef837c9dbfd72311ebf8a6fa4f4bc33c42aa39c8f817b17a6103bdcaac6d72a284fb014b59b3f89a80d41e471620bb16b73d875752c218f96
[crypto] getSecureRandom: b52cb7da8d4ed4ff8f8d78f7d8310e7ba32d2e3a5107f5ed11219a3e1222a721876dc6a0018561149c7a13d86749e14277a66f826f650758e583b666f7939d14
[crypto] getSecureRandom: 9dc2cb19225177749355cfd0c793bf44946555411d8880a4dcd4929e4527828fca9f41113853e000c0a20deded41c8f55633bacf3902e39d813908c1f8a01a8e
[crypto] Testing Salsa20... PASS
[crypto] Salsa20 SSE: ENABLED
[crypto] Benchmarking Salsa20/12... 888.585 MiB/second (f31ddbcdb3b69d0a5e19ba94a7e2facc)
[crypto] Benchmarking Salsa20/20... 550.175 MiB/second (24c619994ae7f1549136169c9072f3d7)
[crypto] Testing SHA-512... PASS
[crypto] Testing Poly1305... PASS
[crypto] Benchmarking Poly1305... 1220.08 MiB/second
[crypto] Testing C25519 and Ed25519 against test vectors... PASS
[crypto] Testing C25519 ECC key agreement... PASS
[crypto] Benchmarking C25519 ECC key agreement... 1.94ms per agreement.
[crypto] Testing Ed25519 ECC signatures... PASS
[packet] Testing Packet encoder/decoder... (compressed: 77, decompressed: 1116) PASS
[identity] Validate known-good identity... PASS (19.8ms per validation)
[identity] Validate known-bad identity... PASS (i.e. it failed)
[identity] Generate identity... (took 105ms): 4137fb91a5:0:178ae75f22bb62961bcf1b8dfae422c6f71893732a27f00462c320e838b42f237a37a37bd397cdd49521c63a2d10fdb81a43c362c62fc9c6758e5ae0e452083f:147e490033ef50cb1e130fd033a6a2f2224666f25e14adf4319343547181e6bd8da5353f2054d05f10696756c1a18b33d4fd45d5d849d669b36cae500c195bf5
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 352ms): 14706b535f:0:9a53fe713535f0acb4891be5154353ef589ca453b6d9a22e7d2ae9e29f44cd44cbd052abc28694353719e44824248e84a86542ef9b246723b3f415b0359225d9:e762328d822812318a205d690d9365be7c140e722148b0b61cf2d0aa5ee782745e7cbe6f53915a66eee20a2882f7eec01e95c6e12d115a96ed9485687ef30ced
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 187ms): ddb1329100:0:b0288e2cbece0a8513a1e8fdcdf0b33b7678822e8db58f6c51403d294007fe7969cb973a34abda7cc5166593f8991afa058bf2d5b48e88d5f32306237e57e66d:ef019663074289b34502d6afd83ed7c0ba639e4acce0e07748ba0d99dfa8622cecdf04afbc8e501bfe4259c95a7996fb71d4210b90c5277886b668b5fb08b56c
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 160ms): 517116edd5:0:cf5e8339b77a0593f820d68bc1d5e4507d5dcf3ea25a87e5e850e21eb142b276c4d04bf7d84209485e5d608768b36c3eff797aa01705650db92e7c3fd64b0482:ad8f36a96ffc945e5db3595c8d1dbcf0706a0f7778c28c99ba4a405ff11616c66d6528d4c90c22cdf2c327dc2983c0454ea8661a1b478f8dc2e26300ada3611e
[identity] Locally validate identity: PASS
[identity] Serialize and deserialize (w/private): PASS
[identity] Serialize and deserialize (no private): PASS
[identity] Serialize and deserialize (ASCII w/private): PASS
[identity] Serialize and deserialize (ASCII no private): PASS
[certificate] Generating identity to act as authority... 2854f72334
[certificate] Generating identities A and B... 47f54954a9, 1d8297829d
[certificate] Generating certificates A and B...
[certificate] Signing certificates A and B with authority...
[certificate] A agrees with B and B with A... yes, yes.
[certificate] Generating two certificates that should not agree...
[certificate] A agrees with B and B with A... no, no.
[phy] Creating phy endpoint...
[phy] Binding UDP listen socket to 127.0.0.1/60002... OK
[phy] Binding TCP listen socket to 127.0.0.1/60002... OK
[phy] Testing UDP send/receive... got 10000 packets, OK
[phy] Testing TCP... got 10 connect successes, 2 failures, and 10000000 bytes, OK
$",PR for ports update,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,457,2017-03-16T12:03:42Z,2017-03-17T19:18:54Z,2017-03-17T19:29:07Z,MERGED,True,2,2,1,https://github.com/dch,build: use clang on FreeBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/457,https://github.com/jungle-boogie,3,https://github.com/zerotier/ZeroTierOne/pull/457#issuecomment-287449825,"this avoids a whopping 500+Mb dependency on gcc and friends at runtime
passes zerotier selftest at least

closes #456
$ git show HEAD
commit 25dc5963977a3ca7e8a2e6e09a3ed9a4d43fe527
Author: Dave Cottlehuber <dch@skunkwerks.at>
Date:   Thu Mar 16 12:58:04 2017 +0100

    build: use clang on FreeBSD

    this avoids a whopping 500+Mb dependency on gcc and friends at runtime

diff --git a/Makefile b/Makefile
index 2f11e5fa..95118621 100644
--- a/Makefile
+++ b/Makefile
@@ -11,8 +11,8 @@ ifeq ($(OSTYPE),Linux)
 endif

 ifeq ($(OSTYPE),FreeBSD)
-       CC=gcc
-       CXX=g++
+       CC=clang
+       CXX=clang++
        ZT_BUILD_PLATFORM=7
        include make-bsd.mk
 endif
$ gmake
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/EmbeddedNetworkController.o controller/EmbeddedNetworkController.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o controller/JSONDB.o controller/JSONDB.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/C25519.o node/C25519.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Capability.o node/Capability.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Cluster.o node/Cluster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Identity.o node/Identity.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Membership.o node/Membership.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Network.o node/Network.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Node.o node/Node.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Packet.o node/Packet.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Path.o node/Path.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Peer.o node/Peer.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Poly1305.o node/Poly1305.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Revocation.o node/Revocation.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Salsa20.o node/Salsa20.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SelfAwareness.o node/SelfAwareness.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/SHA512.o node/SHA512.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Switch.o node/Switch.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Tag.o node/Tag.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Topology.o node/Topology.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o node/Utils.o node/Utils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/ManagedRoute.o osdep/ManagedRoute.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/Http.o osdep/Http.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/OSUtils.o osdep/OSUtils.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/ClusterGeoIpService.o service/ClusterGeoIpService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/SoftwareUpdater.o service/SoftwareUpdater.cpp
service/SoftwareUpdater.cpp:261:110: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unrecognized verb)"" ZT_EOL_S,origin,(unsigned int)v,len);
                       ~~~~~~~                                                                               ^~~~~~
                       %.10lx
service/SoftwareUpdater.cpp:268:132: warning: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Wformat]
  ...fprintf(_distLog,""%.10llx WARNING: bad update message verb==%u length==%u (unexpected exception, likely invalid JSON)"" ZT_EOL_S,origin,(unsigned int)v...
                       ~~~~~~~                                                                                                       ^~~~~~
                       %.10lx
2 warnings generated.
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o osdep/BSDEthernetTap.o osdep/BSDEthernetTap.cpp
clang -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\""""   -c -o ext/http-parser/http_parser.o ext/http-parser/http_parser.c
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o service/OneService.o service/OneService.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o one.o one.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-one controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o service/OneService.o one.o
strip --strip-all zerotier-one
ln -sf zerotier-one zerotier-idtool
ln -sf zerotier-one zerotier-cli

$ gmake selftest
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1   -c -o selftest.o selftest.cpp
clang++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11 -D_GLIBCXX_USE_C99 -D_GLIBCXX_USE_C99_MATH -D_GLIBCXX_USE_C99_MATH_TR1 -pie -Wl,-z,relro,-z,now -o zerotier-selftest selftest.o controller/EmbeddedNetworkController.o controller/JSONDB.o node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Cluster.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Utils.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/ClusterGeoIpService.o service/SoftwareUpdater.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o
strip --strip-all zerotier-selftest

$ ./zerotier-selftest
[info] sizeof(void *) == 8
[info] sizeof(NetworkConfig) == 431496
[other] Testing Hashtable... PASS
[other] Testing hex encode/decode... PASS
[other] Testing/fuzzing Dictionary... PASS (junk value to prevent optimization-out of test: -17891)
[crypto] getSecureRandom: 03db82b85a985aeef837c9dbfd72311ebf8a6fa4f4bc33c42aa39c8f817b17a6103bdcaac6d72a284fb014b59b3f89a80d41e471620bb16b73d875752c218f96
[crypto] getSecureRandom: b52cb7da8d4ed4ff8f8d78f7d8310e7ba32d2e3a5107f5ed11219a3e1222a721876dc6a0018561149c7a13d86749e14277a66f826f650758e583b666f7939d14
[crypto] getSecureRandom: 9dc2cb19225177749355cfd0c793bf44946555411d8880a4dcd4929e4527828fca9f41113853e000c0a20deded41c8f55633bacf3902e39d813908c1f8a01a8e
[crypto] Testing Salsa20... PASS
[crypto] Salsa20 SSE: ENABLED
[crypto] Benchmarking Salsa20/12... 888.585 MiB/second (f31ddbcdb3b69d0a5e19ba94a7e2facc)
[crypto] Benchmarking Salsa20/20... 550.175 MiB/second (24c619994ae7f1549136169c9072f3d7)
[crypto] Testing SHA-512... PASS
[crypto] Testing Poly1305... PASS
[crypto] Benchmarking Poly1305... 1220.08 MiB/second
[crypto] Testing C25519 and Ed25519 against test vectors... PASS
[crypto] Testing C25519 ECC key agreement... PASS
[crypto] Benchmarking C25519 ECC key agreement... 1.94ms per agreement.
[crypto] Testing Ed25519 ECC signatures... PASS
[packet] Testing Packet encoder/decoder... (compressed: 77, decompressed: 1116) PASS
[identity] Validate known-good identity... PASS (19.8ms per validation)
[identity] Validate known-bad identity... PASS (i.e. it failed)
[identity] Generate identity... (took 105ms): 4137fb91a5:0:178ae75f22bb62961bcf1b8dfae422c6f71893732a27f00462c320e838b42f237a37a37bd397cdd49521c63a2d10fdb81a43c362c62fc9c6758e5ae0e452083f:147e490033ef50cb1e130fd033a6a2f2224666f25e14adf4319343547181e6bd8da5353f2054d05f10696756c1a18b33d4fd45d5d849d669b36cae500c195bf5
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 352ms): 14706b535f:0:9a53fe713535f0acb4891be5154353ef589ca453b6d9a22e7d2ae9e29f44cd44cbd052abc28694353719e44824248e84a86542ef9b246723b3f415b0359225d9:e762328d822812318a205d690d9365be7c140e722148b0b61cf2d0aa5ee782745e7cbe6f53915a66eee20a2882f7eec01e95c6e12d115a96ed9485687ef30ced
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 187ms): ddb1329100:0:b0288e2cbece0a8513a1e8fdcdf0b33b7678822e8db58f6c51403d294007fe7969cb973a34abda7cc5166593f8991afa058bf2d5b48e88d5f32306237e57e66d:ef019663074289b34502d6afd83ed7c0ba639e4acce0e07748ba0d99dfa8622cecdf04afbc8e501bfe4259c95a7996fb71d4210b90c5277886b668b5fb08b56c
[identity] Locally validate identity: PASS
[identity] Generate identity... (took 160ms): 517116edd5:0:cf5e8339b77a0593f820d68bc1d5e4507d5dcf3ea25a87e5e850e21eb142b276c4d04bf7d84209485e5d608768b36c3eff797aa01705650db92e7c3fd64b0482:ad8f36a96ffc945e5db3595c8d1dbcf0706a0f7778c28c99ba4a405ff11616c66d6528d4c90c22cdf2c327dc2983c0454ea8661a1b478f8dc2e26300ada3611e
[identity] Locally validate identity: PASS
[identity] Serialize and deserialize (w/private): PASS
[identity] Serialize and deserialize (no private): PASS
[identity] Serialize and deserialize (ASCII w/private): PASS
[identity] Serialize and deserialize (ASCII no private): PASS
[certificate] Generating identity to act as authority... 2854f72334
[certificate] Generating identities A and B... 47f54954a9, 1d8297829d
[certificate] Generating certificates A and B...
[certificate] Signing certificates A and B with authority...
[certificate] A agrees with B and B with A... yes, yes.
[certificate] Generating two certificates that should not agree...
[certificate] A agrees with B and B with A... no, no.
[phy] Creating phy endpoint...
[phy] Binding UDP listen socket to 127.0.0.1/60002... OK
[phy] Binding TCP listen socket to 127.0.0.1/60002... OK
[phy] Testing UDP send/receive... got 10000 packets, OK
[phy] Testing TCP... got 10 connect successes, 2 failures, and 10000000 bytes, OK
$",A million thanks for this!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/fkooman,1,https://github.com/zerotier/ZeroTierOne/pull/462,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.","This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/fkooman,2,https://github.com/zerotier/ZeroTierOne/pull/462#issuecomment-287912624,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.",I also found lz4 is now embedded in the code itself. Ideally this would also be extractable.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/462#issuecomment-287913026,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.","We did this specifically to get rid of outside dependencies. Ideally we would like none.
When we attempted to ship packages that depended on lz4, http-parser, etc., we received many complaints about the package ""not working"" because upstream packages were broken or segfaulting because some weird Linux distribution had a slightly different version of the package.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/adamierymenko,4,https://github.com/zerotier/ZeroTierOne/pull/462#issuecomment-287913454,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.","BTW, nlohmann::json is header-only? How would this patch even work? It has no compiled library component.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/adamierymenko,5,https://github.com/zerotier/ZeroTierOne/pull/462#issuecomment-287915481,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.",The other problem we had was odd versions of libraries on some distributions causing bugs that don't exist on other distributions.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/adamierymenko,6,https://github.com/zerotier/ZeroTierOne/pull/462#issuecomment-287917703,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.","Ahh I see. It uses the system header version of the library.
We can make this kind of thing optional if it's needed for inclusion into other repositories. Most of what we do we do for our own build process and official binaries.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/fkooman,7,https://github.com/zerotier/ZeroTierOne/pull/462#issuecomment-288013497,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.","First, I think it is very good idea to have your own build for (paying) customers where you have full control over the dependencies and their versions, i.e. the ext/ directory.
Second, for distribution packaging, what would help, is to actually put all (external) dependencies in the ext/ directory, including lz and also specify the (API) versions of those dependencies that is required. That way packagers can figure out if their OS is up to date enough regarding the dependencies and bug their co-maintainers to update the packages. I did exactly this for Fedora/CentOS. That way there is at least a path to eventual distribution inclusion.
If some dependencies are low quality, i.e. they break API in minor version updates, have crappy release management, or are unreliable, then maybe those dependencies should not be depended on at all... A well maintained (upstream) library with timely security releases etc. should not cause issues and crashes, or maybe that particular distribution just sucks ;-)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,462,2017-03-18T11:52:53Z,2017-10-24T19:23:17Z,2017-10-24T19:23:17Z,CLOSED,False,33,1,7,https://github.com/fkooman,use system libs for json and http-parser,1,[],https://github.com/zerotier/ZeroTierOne/pull/462,https://github.com/dch,8,https://github.com/zerotier/ZeroTierOne/pull/462#issuecomment-288017612,"This patch introduces the option to use the system library for json instead of the one in the ""ext"" directory.
The makefile needs work, as now I hard coded the use of the system libraries (both json and http-parser), which will obviously not work for regular builds.","As somebody who has spent a fair bit of time unbundling upstream projects like this, and in additional somebody who has cursed downstream projects for their inept (aka breaks my project) unbundling I feel the concerns from both sides.
It is a reasonable expectation that zerotier could be used as the primary functional network connection for a device. Having a single binary built without external dependencies is in this case is definitely a good thing. Nobody wants to go out on foot and find thousands of IoT devices to fix their networking that broke because of a dependency upgrade failure that wasn't tested by the OS distrubution.
Having the option to depend on platform libraries is a reasonable compromise, but considering ZT is < 1Mib size I think shipping a single no-dependencies binary is actually a big win.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,464,2017-03-19T16:23:03Z,2017-03-19T16:23:23Z,2017-03-19T16:23:35Z,CLOSED,False,0,0,0,https://github.com/sbilly,Merge pull request #1 from zerotier/master,1,[],https://github.com/zerotier/ZeroTierOne/pull/464,https://github.com/sbilly,1,https://github.com/zerotier/ZeroTierOne/pull/464,sorry,sorry,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,493,2017-05-02T14:43:00Z,2017-05-02T14:43:16Z,2017-05-02T14:43:16Z,CLOSED,False,0,0,0,https://github.com/sbilly,up2date - 20170502,2,[],https://github.com/zerotier/ZeroTierOne/pull/493,https://github.com/sbilly,1,https://github.com/zerotier/ZeroTierOne/pull/493,up2date - 20170502,up2date - 20170502,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,506,2017-05-13T15:14:32Z,2017-07-07T14:38:44Z,2017-07-07T14:44:31Z,CLOSED,False,4,0,1,https://github.com/sowelisuwi,Add ZT_DEFAULT_HOME_PATH,1,[],https://github.com/zerotier/ZeroTierOne/pull/506,https://github.com/sowelisuwi,1,https://github.com/zerotier/ZeroTierOne/pull/506,"I'm preparing a ZeroTier One package for Gentoo and Gentoo Prefix. To support the latter, I need to be able to specify a custom default ZeroTier home path at compile time.","I'm preparing a ZeroTier One package for Gentoo and Gentoo Prefix. To support the latter, I need to be able to specify a custom default ZeroTier home path at compile time.",True,{'THUMBS_UP': ['https://github.com/sbilly']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,506,2017-05-13T15:14:32Z,2017-07-07T14:38:44Z,2017-07-07T14:44:31Z,CLOSED,False,4,0,1,https://github.com/sowelisuwi,Add ZT_DEFAULT_HOME_PATH,1,[],https://github.com/zerotier/ZeroTierOne/pull/506,https://github.com/sowelisuwi,2,https://github.com/zerotier/ZeroTierOne/pull/506#issuecomment-301275426,"I'm preparing a ZeroTier One package for Gentoo and Gentoo Prefix. To support the latter, I need to be able to specify a custom default ZeroTier home path at compile time.",Should I wrap this in std::string?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,506,2017-05-13T15:14:32Z,2017-07-07T14:38:44Z,2017-07-07T14:44:31Z,CLOSED,False,4,0,1,https://github.com/sowelisuwi,Add ZT_DEFAULT_HOME_PATH,1,[],https://github.com/zerotier/ZeroTierOne/pull/506,https://github.com/sowelisuwi,3,https://github.com/zerotier/ZeroTierOne/pull/506#issuecomment-313700603,"I'm preparing a ZeroTier One package for Gentoo and Gentoo Prefix. To support the latter, I need to be able to specify a custom default ZeroTier home path at compile time.",Whatever.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,506,2017-05-13T15:14:32Z,2017-07-07T14:38:44Z,2017-07-07T14:44:31Z,CLOSED,False,4,0,1,https://github.com/sowelisuwi,Add ZT_DEFAULT_HOME_PATH,1,[],https://github.com/zerotier/ZeroTierOne/pull/506,https://github.com/adamierymenko,4,https://github.com/zerotier/ZeroTierOne/pull/506#issuecomment-313702239,"I'm preparing a ZeroTier One package for Gentoo and Gentoo Prefix. To support the latter, I need to be able to specify a custom default ZeroTier home path at compile time.",Missed this for some reason. If you still need this it's an easy merge.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,518,2017-06-05T00:54:43Z,2017-06-05T00:55:08Z,2017-06-05T00:55:08Z,CLOSED,False,0,0,0,https://github.com/sbilly,20170605 - up2date,3,[],https://github.com/zerotier/ZeroTierOne/pull/518,https://github.com/sbilly,1,https://github.com/zerotier/ZeroTierOne/pull/518,up2date,up2date,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,524,2017-06-13T20:41:21Z,2017-06-13T20:41:50Z,2017-06-13T20:41:50Z,CLOSED,False,15534,4528,180,https://github.com/asidorenko,Dev,66,[],https://github.com/zerotier/ZeroTierOne/pull/524,https://github.com/asidorenko,1,https://github.com/zerotier/ZeroTierOne/pull/524,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,537,2017-06-26T18:55:50Z,2017-07-07T16:32:38Z,2017-07-07T16:32:38Z,MERGED,True,6,0,1,https://github.com/laduke,Update README.md,1,[],https://github.com/zerotier/ZeroTierOne/pull/537,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/537,"We've had multiple questions in the community chat regarding posting new
network and getting the curl syntax correct, so adding an example.","We've had multiple questions in the community chat regarding posting new
network and getting the curl syntax correct, so adding an example.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,537,2017-06-26T18:55:50Z,2017-07-07T16:32:38Z,2017-07-07T16:32:38Z,MERGED,True,6,0,1,https://github.com/laduke,Update README.md,1,[],https://github.com/zerotier/ZeroTierOne/pull/537,https://github.com/lflare,2,https://github.com/zerotier/ZeroTierOne/pull/537#issuecomment-312472243,"We've had multiple questions in the community chat regarding posting new
network and getting the curl syntax correct, so adding an example.","I for one would love some contribution towards a tool I've been building with Python, unless there's a similar tool underworks by the proper developers in C?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,540,2017-06-30T13:16:04Z,2017-06-30T16:55:44Z,2017-06-30T16:55:44Z,MERGED,True,1,1,1,https://github.com/dch,build: all BSDs expect gmake here,1,[],https://github.com/zerotier/ZeroTierOne/pull/540,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/540,"The provided make ... command would not have worked on any of the BSDs, which have GNU make
installed via ports as gmake. I've not tested this on the other flavours but just google-checked this.
This resolves #529 by using the provided makefile target, will be included in next revision of the FreeBSD
port to toggle debugging.","The provided make ... command would not have worked on any of the BSDs, which have GNU make
installed via ports as gmake. I've not tested this on the other flavours but just google-checked this.
This resolves #529 by using the provided makefile target, will be included in next revision of the FreeBSD
port to toggle debugging.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,547,2017-07-07T09:11:36Z,2017-07-07T16:32:23Z,2017-07-07T16:32:24Z,MERGED,True,1,1,1,https://github.com/surgicalcoder,Clarification on how to use JSON API with secret,1,[],https://github.com/zerotier/ZeroTierOne/pull/547,https://github.com/surgicalcoder,1,https://github.com/zerotier/ZeroTierOne/pull/547,Makes it clear on how to use the authtoken.secret file when making requests.,Makes it clear on how to use the authtoken.secret file when making requests.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,549,2017-07-08T20:11:37Z,2017-07-08T20:23:17Z,2017-07-08T20:23:17Z,CLOSED,False,1,1,1,https://github.com/surgicalcoder,Null ref fix,1,[],https://github.com/zerotier/ZeroTierOne/pull/549,https://github.com/surgicalcoder,1,https://github.com/zerotier/ZeroTierOne/pull/549,Fixes zerotier/ZeroTierOne/#515,Fixes zerotier/ZeroTierOne/#515,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,549,2017-07-08T20:11:37Z,2017-07-08T20:23:17Z,2017-07-08T20:23:17Z,CLOSED,False,1,1,1,https://github.com/surgicalcoder,Null ref fix,1,[],https://github.com/zerotier/ZeroTierOne/pull/549,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/549#issuecomment-313878940,Fixes zerotier/ZeroTierOne/#515,"Merges must be against dev
This is already fixed in dev",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,550,2017-07-09T14:40:00Z,2017-10-24T19:22:38Z,2017-10-24T19:22:39Z,MERGED,True,1,1,1,https://github.com/surgicalcoder,Peer's role misses a PLANET role,1,[],https://github.com/zerotier/ZeroTierOne/pull/550,https://github.com/surgicalcoder,1,https://github.com/zerotier/ZeroTierOne/pull/550,Peer's role misses a PLANET role in documentation vs what's returned from API.,Peer's role misses a PLANET role in documentation vs what's returned from API.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,552,2017-07-11T18:17:01Z,2017-09-19T12:51:29Z,2017-09-19T12:51:46Z,CLOSED,False,30,1,2,https://github.com/janjaapbos,Enable shared libzerotiercore build,6,[],https://github.com/zerotier/ZeroTierOne/pull/552,https://github.com/janjaapbos,1,https://github.com/zerotier/ZeroTierOne/pull/552,make ZT_STATIC=0 core-shared,make ZT_STATIC=0 core-shared,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,559,2017-08-06T09:02:47Z,2017-08-06T09:03:21Z,2017-08-06T09:03:24Z,CLOSED,False,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/559,https://github.com/andyfangdz,1,https://github.com/zerotier/ZeroTierOne/pull/559,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.","I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,559,2017-08-06T09:02:47Z,2017-08-06T09:03:21Z,2017-08-06T09:03:24Z,CLOSED,False,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/559,https://github.com/andyfangdz,2,https://github.com/zerotier/ZeroTierOne/pull/559#issuecomment-320494735,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",Closing as made to the wrong branch,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/andyfangdz,1,https://github.com/zerotier/ZeroTierOne/pull/560,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.","I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/andyfangdz,2,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323465284,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",@adamierymenko bump,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323466730,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",Isn't the arch ppc64el?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/adamierymenko,4,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323466851,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",Ahh I see... PR merged.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/adamierymenko,5,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323467097,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",I fixed this PR. The arch should be 8 for POWER64,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/adamierymenko,6,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323467386,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.","Going to test adding this to the standard build stack for the next version, at least for Debian and Ubuntu.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/andyfangdz,7,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323471197,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.","I think it’s just a Debian thing that calls it ppc64el haha, but are you sure that arch 8 works for little endian version of power8?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/adamierymenko,8,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323471303,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.",Is there a big-endian version? Does anyone actually use it?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,560,2017-08-06T09:06:09Z,2017-08-18T21:38:42Z,2017-08-20T08:19:57Z,MERGED,True,3,0,1,https://github.com/andyfangdz,Add `ppc64le` arch,1,[],https://github.com/zerotier/ZeroTierOne/pull/560,https://github.com/andyfangdz,9,https://github.com/zerotier/ZeroTierOne/pull/560#issuecomment-323472233,"I've only tested locally, on a power8 box running Ubuntu 16.10, but everything (and earth) checks out.
Let me know if more testing infrastructure is needed.","ppc64le is little endian, and ppc64 is big endian. I can't answer the question about market share tho.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,582,2017-09-11T13:55:26Z,2017-09-11T16:12:39Z,2017-09-11T16:35:08Z,CLOSED,False,20,43,7,https://github.com/dharrigan,Java fixup/1,1,[],https://github.com/zerotier/ZeroTierOne/pull/582,https://github.com/dharrigan,1,https://github.com/zerotier/ZeroTierOne/pull/582,"In Java:

methods in interfaces are public by default
not traditionally broken at a short column length

Some little other tidy-ups.
-=david=-","In Java:

methods in interfaces are public by default
not traditionally broken at a short column length

Some little other tidy-ups.
-=david=-",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,582,2017-09-11T13:55:26Z,2017-09-11T16:12:39Z,2017-09-11T16:35:08Z,CLOSED,False,20,43,7,https://github.com/dharrigan,Java fixup/1,1,[],https://github.com/zerotier/ZeroTierOne/pull/582,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/582#issuecomment-328579362,"In Java:

methods in interfaces are public by default
not traditionally broken at a short column length

Some little other tidy-ups.
-=david=-",This is nothing but cosmetic.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,582,2017-09-11T13:55:26Z,2017-09-11T16:12:39Z,2017-09-11T16:35:08Z,CLOSED,False,20,43,7,https://github.com/dharrigan,Java fixup/1,1,[],https://github.com/zerotier/ZeroTierOne/pull/582,https://github.com/dharrigan,3,https://github.com/zerotier/ZeroTierOne/pull/582#issuecomment-328585535,"In Java:

methods in interfaces are public by default
not traditionally broken at a short column length

Some little other tidy-ups.
-=david=-","Hi,

Thank you for your feedback. With respect, I disagree with your comment
because:

1. It removes from the interfaces an unnecessary construct that adds noise
and confusion to Java developers. Methods in Java interfaces are public by
default, so having default there is redundant and looks weird. Why keep it?

2. An additional two items of JavaDoc where added.

3. I admit, joining the lines may feel cosmetic, but what is there already
doesn't look correct to Java developers.

Whilst it is a small patch, it does no harm to merge in as it doesn't break
anything, but leaves the code a little tidier and friendlier for Java
developers. After all, adoption is good and having the code start to adhere
to Java norms should be encouraged.

I would hope, also, given my comments on the community mattermost, that
this would be the basis of other commits coming to bring the code
up-to-date for Java 8 and eventually 9.

I would be happy to resubmit the patch, removing the joined lines if you
feel very much against it.

-=david=-
…
On 11 Sep 2017 5:12 pm, ""Grant Limberg"" ***@***.***> wrote:
 This is nothing but cosmetic.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#582 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAaEjqkIeE2nBK60LkMJPUElOBB4vx9qks5shVv9gaJpZM4PTMr_>
 .",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,605,2017-10-19T13:21:36Z,2017-10-24T19:21:33Z,2017-10-24T20:38:05Z,MERGED,True,5,0,1,https://github.com/oneguynick,Update make-linux.mk to include support for Armv7l,1,[],https://github.com/zerotier/ZeroTierOne/pull/605,https://github.com/oneguynick,1,https://github.com/zerotier/ZeroTierOne/pull/605,"When running ArchlinuxARM with 64bit support on Raspberry Pi3, the default build fails due to the architecture look-up at the beginning of the build process. A simple addition of the Armv7l section above allows the build to continue and successfully run.","When running ArchlinuxARM with 64bit support on Raspberry Pi3, the default build fails due to the architecture look-up at the beginning of the build process. A simple addition of the Armv7l section above allows the build to continue and successfully run.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,641,2017-12-08T08:15:36Z,2018-04-18T15:07:13Z,2018-04-18T15:07:13Z,CLOSED,False,1,1,1,https://github.com/amphineko,Fixed typo in controller/README.md,2,[],https://github.com/zerotier/ZeroTierOne/pull/641,https://github.com/amphineko,1,https://github.com/zerotier/ZeroTierOne/pull/641,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,654,2018-01-02T10:33:22Z,2018-04-18T15:06:53Z,2018-04-18T16:36:29Z,MERGED,True,5,0,1,https://github.com/atopuzov,Add support for armv7l,1,[],https://github.com/zerotier/ZeroTierOne/pull/654,https://github.com/atopuzov,1,https://github.com/zerotier/ZeroTierOne/pull/654,"GCC running on Raspberry Pi 3 on Arch linux ARM reports arch as
armv7l-unknown-linux-gnueabihf

[aco@pi ~]$ uname -m
armv7l
[aco@pi ~]$ gcc -dumpmachine
armv7l-unknown-linux-gnueabihf

Tested and working.
Solves #601","GCC running on Raspberry Pi 3 on Arch linux ARM reports arch as
armv7l-unknown-linux-gnueabihf

[aco@pi ~]$ uname -m
armv7l
[aco@pi ~]$ gcc -dumpmachine
armv7l-unknown-linux-gnueabihf

Tested and working.
Solves #601",True,{'THUMBS_UP': ['https://github.com/Lillecarl']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,658,2018-01-06T17:47:22Z,2018-04-18T15:06:11Z,2018-04-18T15:06:11Z,CLOSED,False,10,10,10,https://github.com/yangfl,Fix typo.,1,[],https://github.com/zerotier/ZeroTierOne/pull/658,https://github.com/yangfl,1,https://github.com/zerotier/ZeroTierOne/pull/658,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,662,2018-01-16T23:47:48Z,2018-04-20T22:08:37Z,2018-04-20T22:08:37Z,CLOSED,False,86,122,9,https://github.com/Lillecarl,Simplify JoinNetworkView,1,[],https://github.com/zerotier/ZeroTierOne/pull/662,https://github.com/Lillecarl,1,https://github.com/zerotier/ZeroTierOne/pull/662,"Simplify JoinNetworkView
Update to .net 4.5.2 which ""every"" nuget in the world targets
Probably shouldn't have changed PlatformToolset and ToolsVersion in the project, I'm open for input.
The relevant changes are
JoinNetworkView.xaml
JoinNetworkView.xaml.cs
FodyWeavers.xml
packages.config
packages.config could probably have restsharp removed for now.","Simplify JoinNetworkView
Update to .net 4.5.2 which ""every"" nuget in the world targets
Probably shouldn't have changed PlatformToolset and ToolsVersion in the project, I'm open for input.
The relevant changes are
JoinNetworkView.xaml
JoinNetworkView.xaml.cs
FodyWeavers.xml
packages.config
packages.config could probably have restsharp removed for now.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,672,2018-02-03T17:36:33Z,2018-02-03T19:39:50Z,2018-02-03T19:39:50Z,CLOSED,False,17,0,1,https://github.com/neutronscott,check physical blacklist for interface binding as well,1,[],https://github.com/zerotier/ZeroTierOne/pull/672,https://github.com/neutronscott,1,https://github.com/zerotier/ZeroTierOne/pull/672,"Not a C++ guy, and certainly not very familiar with ZeroTier code yet, but I did this to keep ZeroTier from sending so much useless traffic across interface addresses that I know won't go anywhere. This might help with #670 as well?","Not a C++ guy, and certainly not very familiar with ZeroTier code yet, but I did this to keep ZeroTier from sending so much useless traffic across interface addresses that I know won't go anywhere. This might help with #670 as well?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,673,2018-02-03T19:58:37Z,2018-04-18T15:05:52Z,2018-04-18T15:05:52Z,MERGED,True,16,1,1,https://github.com/neutronscott,check physical blacklist for interface binding as well,1,[],https://github.com/zerotier/ZeroTierOne/pull/673,https://github.com/neutronscott,1,https://github.com/zerotier/ZeroTierOne/pull/673,"This may relevant for #670
This applies local.conf physical blacklists to interface binds as well.","This may relevant for #670
This applies local.conf physical blacklists to interface binds as well.",True,{'HEART': ['https://github.com/leleobhz']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,690,2018-03-11T02:46:42Z,2018-04-18T15:05:29Z,2018-04-18T15:05:29Z,MERGED,True,3,3,1,https://github.com/Pablohn26,Warn about invalid network id instead of help,1,[],https://github.com/zerotier/ZeroTierOne/pull/690,https://github.com/Pablohn26,1,https://github.com/zerotier/ZeroTierOne/pull/690,I change help output by an invalid network id warn (when not a 16 characters id),I change help output by an invalid network id warn (when not a 16 characters id),True,{'HEART': ['https://github.com/laduke']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,712,2018-04-14T08:55:00Z,2018-04-18T15:04:20Z,2018-04-18T15:04:20Z,MERGED,True,1,1,1,https://github.com/elmar,fix typo in documentation,1,[],https://github.com/zerotier/ZeroTierOne/pull/712,https://github.com/elmar,1,https://github.com/zerotier/ZeroTierOne/pull/712,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,721,2018-04-21T11:20:25Z,2018-04-21T15:12:24Z,2018-04-21T15:12:24Z,CLOSED,False,191,201,12,https://github.com/jonathonf, Fix ed25519-amd64-asm PIC compatibility,2,[],https://github.com/zerotier/ZeroTierOne/pull/721,https://github.com/jonathonf,1,https://github.com/zerotier/ZeroTierOne/pull/721,"The Hyperledger implementation (https://github.com/hyperledger/iroha-ed25519) contains changes to the assembly code to allow PIC. This in turn fixes compilation/linking of ZeroTier One when ""full hardening"" flags are used.
This is a full fix for #717.","The Hyperledger implementation (https://github.com/hyperledger/iroha-ed25519) contains changes to the assembly code to allow PIC. This in turn fixes compilation/linking of ZeroTier One when ""full hardening"" flags are used.
This is a full fix for #717.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,721,2018-04-21T11:20:25Z,2018-04-21T15:12:24Z,2018-04-21T15:12:24Z,CLOSED,False,191,201,12,https://github.com/jonathonf, Fix ed25519-amd64-asm PIC compatibility,2,[],https://github.com/zerotier/ZeroTierOne/pull/721,https://github.com/jonathonf,2,https://github.com/zerotier/ZeroTierOne/pull/721#issuecomment-383304138,"The Hyperledger implementation (https://github.com/hyperledger/iroha-ed25519) contains changes to the assembly code to allow PIC. This in turn fixes compilation/linking of ZeroTier One when ""full hardening"" flags are used.
This is a full fix for #717.","Oops, let me rebase against the dev branch...",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,722,2018-04-21T15:20:54Z,2018-04-25T13:08:13Z,2018-04-25T13:13:01Z,MERGED,True,185,185,11,https://github.com/jonathonf,Fix ed25519-amd64-asm PIC compatibility,1,[],https://github.com/zerotier/ZeroTierOne/pull/722,https://github.com/jonathonf,1,https://github.com/zerotier/ZeroTierOne/pull/722,"The Hyperledger implementation (https://github.com/hyperledger/iroha-ed25519) contains changes to the assembly code to allow PIC. This in turn fixes compilation/linking of ZeroTier One when ""full hardening"" flags are used.
This is a full fix for #717.","The Hyperledger implementation (https://github.com/hyperledger/iroha-ed25519) contains changes to the assembly code to allow PIC. This in turn fixes compilation/linking of ZeroTier One when ""full hardening"" flags are used.
This is a full fix for #717.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,722,2018-04-21T15:20:54Z,2018-04-25T13:08:13Z,2018-04-25T13:13:01Z,MERGED,True,185,185,11,https://github.com/jonathonf,Fix ed25519-amd64-asm PIC compatibility,1,[],https://github.com/zerotier/ZeroTierOne/pull/722,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/722#issuecomment-384280104,"The Hyperledger implementation (https://github.com/hyperledger/iroha-ed25519) contains changes to the assembly code to allow PIC. This in turn fixes compilation/linking of ZeroTier One when ""full hardening"" flags are used.
This is a full fix for #717.",You rock 🍻 🍻 🍻 🍻,True,{'LAUGH': ['https://github.com/jonathonf']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,722,2018-04-21T15:20:54Z,2018-04-25T13:08:13Z,2018-04-25T13:13:01Z,MERGED,True,185,185,11,https://github.com/jonathonf,Fix ed25519-amd64-asm PIC compatibility,1,[],https://github.com/zerotier/ZeroTierOne/pull/722,https://github.com/jonathonf,3,https://github.com/zerotier/ZeroTierOne/pull/722#issuecomment-384281418,"The Hyperledger implementation (https://github.com/hyperledger/iroha-ed25519) contains changes to the assembly code to allow PIC. This in turn fixes compilation/linking of ZeroTier One when ""full hardening"" flags are used.
This is a full fix for #717.","@l4l rocks more, I just managed to find their code. 😉",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,746,2018-05-13T17:41:44Z,2018-06-05T19:57:56Z,2018-06-05T19:57:56Z,CLOSED,False,1,1,1,https://github.com/michaelansel,Fix invalid JSON in network member list,1,[],https://github.com/zerotier/ZeroTierOne/pull/746,https://github.com/michaelansel,1,https://github.com/zerotier/ZeroTierOne/pull/746,"/controller/network/NWID/member is returning an invalid JSON response. This appears to have just been a minor oversight when introducing the RethinkDB integration (f5014d7#diff-7433eba40b07c5fb84c2b5f295789d80R544)
Actual behavior:
curl -s -X GET --header ""X-ZT1-Auth: $authtoken"" http://localhost:9993/controller/network/$nwid/member
{""""member1"":1,""""member2"":1}

Expected behavior:
curl -s -X GET --header ""X-ZT1-Auth: $authtoken"" http://localhost:9993/controller/network/$nwid/member
{""member1"":1,""member2"":1}

I don't have a development environment set up to test this, but it seems pretty straight forward (famous last words).","/controller/network/NWID/member is returning an invalid JSON response. This appears to have just been a minor oversight when introducing the RethinkDB integration (f5014d7#diff-7433eba40b07c5fb84c2b5f295789d80R544)
Actual behavior:
curl -s -X GET --header ""X-ZT1-Auth: $authtoken"" http://localhost:9993/controller/network/$nwid/member
{""""member1"":1,""""member2"":1}

Expected behavior:
curl -s -X GET --header ""X-ZT1-Auth: $authtoken"" http://localhost:9993/controller/network/$nwid/member
{""member1"":1,""member2"":1}

I don't have a development environment set up to test this, but it seems pretty straight forward (famous last words).",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,746,2018-05-13T17:41:44Z,2018-06-05T19:57:56Z,2018-06-05T19:57:56Z,CLOSED,False,1,1,1,https://github.com/michaelansel,Fix invalid JSON in network member list,1,[],https://github.com/zerotier/ZeroTierOne/pull/746,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/746#issuecomment-394840053,"/controller/network/NWID/member is returning an invalid JSON response. This appears to have just been a minor oversight when introducing the RethinkDB integration (f5014d7#diff-7433eba40b07c5fb84c2b5f295789d80R544)
Actual behavior:
curl -s -X GET --header ""X-ZT1-Auth: $authtoken"" http://localhost:9993/controller/network/$nwid/member
{""""member1"":1,""""member2"":1}

Expected behavior:
curl -s -X GET --header ""X-ZT1-Auth: $authtoken"" http://localhost:9993/controller/network/$nwid/member
{""member1"":1,""member2"":1}

I don't have a development environment set up to test this, but it seems pretty straight forward (famous last words).","Closing because PR was issued against the master branch instead of dev.  Patch has been put into the dev branch, though.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,755,2018-05-18T09:12:34Z,2018-06-12T16:38:27Z,2018-06-12T16:38:27Z,MERGED,True,1,1,1,https://github.com/dch,fix clang C++17 deprecation when building with ZT_DEBUG=1,1,[],https://github.com/zerotier/ZeroTierOne/pull/755,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/755,"I'd really like to get debug info out to our users via FreeBSD ports; however I get a failure when building with ZT_DEBUG=1

node/Packet.cpp:335:43: error: 'register' storage class specifier is deprecated and incompatible with C++17 [-Werror,-Wdeprecated-register]

This has been deprecated, and as far as I can see it's simply a compiler hint so we can simply remove it -- see http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4340

OS: FreeBSD 12.0-CURRENT amd64
CC: clang++ 6.0.0
MAKE: GNU Make 4.2.1

dch@wintermute /u/p/n/zerotier> gmake --version
GNU Make 4.2.1
Built for amd64-portbld-freebsd12.0
Copyright (C) 1988-2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
dch@wintermute /u/p/n/zerotier> uname -a
FreeBSD wintermute.skunkwerks.at 12.0-CURRENT FreeBSD 12.0-CURRENT  r333761+cdcdb3cf1f15(master)  amd64
dch@wintermute /u/p/n/zerotier> clang++ --version
FreeBSD clang version 6.0.0 (tags/RELEASE_600/final 326565) (based on LLVM 6.0.0)
Target: x86_64-unknown-freebsd12.0
Thread model: posix
InstalledDir: /usr/bin
dch@wintermute /u/p/n/zerotier> 

===>  License GPLv3 accepted by the user
===>   zerotier-1.2.8 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by zerotier-1.2.8 for building
=> SHA256 Checksum OK for zerotier-ZeroTierOne-1.2.8_GH0.tar.gz.
===>  Extracting for zerotier-1.2.8
===>  Patching for zerotier-1.2.8
===>  Applying FreeBSD patches for zerotier-1.2.8
===>   zerotier-1.2.8 depends on executable: gmake - found
===>  Configuring for zerotier-1.2.8
===>  Building for zerotier-1.2.8
gmake[1]: Entering directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake -j 4 ZT_DEBUG=1
gmake[2]: Entering directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/C25519.o node/C25519.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Capability.o node/Capability.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Identity.o node/Identity.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Membership.o node/Membership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Network.o node/Network.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Node.o node/Node.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Packet.o node/Packet.cpp
node/Packet.cpp:335:43: error: 'register' storage class specifier is deprecated and incompatible with C++17 [-Werror,-Wdeprecated-register]
static inline unsigned LZ4_NbCommonBytes (register reg_t val)
                                          ^~~~~~~~~
1 error generated.
gmake[2]: *** [<builtin>: node/Packet.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
gmake[2]: Leaving directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake[1]: *** [make-bsd.mk:162: debug] Error 2
gmake[1]: Leaving directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
===> Compilation failed unexpectedly.
Try to set MAKE_JOBS_UNSAFE=yes and rebuild before reporting the failure to
the maintainer.
*** Error code 1

Stop.
make: stopped in /projects/freebsd/wip/zerotier","I'd really like to get debug info out to our users via FreeBSD ports; however I get a failure when building with ZT_DEBUG=1

node/Packet.cpp:335:43: error: 'register' storage class specifier is deprecated and incompatible with C++17 [-Werror,-Wdeprecated-register]

This has been deprecated, and as far as I can see it's simply a compiler hint so we can simply remove it -- see http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4340

OS: FreeBSD 12.0-CURRENT amd64
CC: clang++ 6.0.0
MAKE: GNU Make 4.2.1

dch@wintermute /u/p/n/zerotier> gmake --version
GNU Make 4.2.1
Built for amd64-portbld-freebsd12.0
Copyright (C) 1988-2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
dch@wintermute /u/p/n/zerotier> uname -a
FreeBSD wintermute.skunkwerks.at 12.0-CURRENT FreeBSD 12.0-CURRENT  r333761+cdcdb3cf1f15(master)  amd64
dch@wintermute /u/p/n/zerotier> clang++ --version
FreeBSD clang version 6.0.0 (tags/RELEASE_600/final 326565) (based on LLVM 6.0.0)
Target: x86_64-unknown-freebsd12.0
Thread model: posix
InstalledDir: /usr/bin
dch@wintermute /u/p/n/zerotier> 

===>  License GPLv3 accepted by the user
===>   zerotier-1.2.8 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by zerotier-1.2.8 for building
=> SHA256 Checksum OK for zerotier-ZeroTierOne-1.2.8_GH0.tar.gz.
===>  Extracting for zerotier-1.2.8
===>  Patching for zerotier-1.2.8
===>  Applying FreeBSD patches for zerotier-1.2.8
===>   zerotier-1.2.8 depends on executable: gmake - found
===>  Configuring for zerotier-1.2.8
===>  Building for zerotier-1.2.8
gmake[1]: Entering directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake -j 4 ZT_DEBUG=1
gmake[2]: Entering directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/C25519.o node/C25519.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Capability.o node/Capability.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Identity.o node/Identity.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Membership.o node/Membership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Network.o node/Network.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Node.o node/Node.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Packet.o node/Packet.cpp
node/Packet.cpp:335:43: error: 'register' storage class specifier is deprecated and incompatible with C++17 [-Werror,-Wdeprecated-register]
static inline unsigned LZ4_NbCommonBytes (register reg_t val)
                                          ^~~~~~~~~
1 error generated.
gmake[2]: *** [<builtin>: node/Packet.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
gmake[2]: Leaving directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake[1]: *** [make-bsd.mk:162: debug] Error 2
gmake[1]: Leaving directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
===> Compilation failed unexpectedly.
Try to set MAKE_JOBS_UNSAFE=yes and rebuild before reporting the failure to
the maintainer.
*** Error code 1

Stop.
make: stopped in /projects/freebsd/wip/zerotier",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,755,2018-05-18T09:12:34Z,2018-06-12T16:38:27Z,2018-06-12T16:38:27Z,MERGED,True,1,1,1,https://github.com/dch,fix clang C++17 deprecation when building with ZT_DEBUG=1,1,[],https://github.com/zerotier/ZeroTierOne/pull/755,https://github.com/dch,2,https://github.com/zerotier/ZeroTierOne/pull/755#issuecomment-390177266,"I'd really like to get debug info out to our users via FreeBSD ports; however I get a failure when building with ZT_DEBUG=1

node/Packet.cpp:335:43: error: 'register' storage class specifier is deprecated and incompatible with C++17 [-Werror,-Wdeprecated-register]

This has been deprecated, and as far as I can see it's simply a compiler hint so we can simply remove it -- see http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4340

OS: FreeBSD 12.0-CURRENT amd64
CC: clang++ 6.0.0
MAKE: GNU Make 4.2.1

dch@wintermute /u/p/n/zerotier> gmake --version
GNU Make 4.2.1
Built for amd64-portbld-freebsd12.0
Copyright (C) 1988-2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
dch@wintermute /u/p/n/zerotier> uname -a
FreeBSD wintermute.skunkwerks.at 12.0-CURRENT FreeBSD 12.0-CURRENT  r333761+cdcdb3cf1f15(master)  amd64
dch@wintermute /u/p/n/zerotier> clang++ --version
FreeBSD clang version 6.0.0 (tags/RELEASE_600/final 326565) (based on LLVM 6.0.0)
Target: x86_64-unknown-freebsd12.0
Thread model: posix
InstalledDir: /usr/bin
dch@wintermute /u/p/n/zerotier> 

===>  License GPLv3 accepted by the user
===>   zerotier-1.2.8 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by zerotier-1.2.8 for building
=> SHA256 Checksum OK for zerotier-ZeroTierOne-1.2.8_GH0.tar.gz.
===>  Extracting for zerotier-1.2.8
===>  Patching for zerotier-1.2.8
===>  Applying FreeBSD patches for zerotier-1.2.8
===>   zerotier-1.2.8 depends on executable: gmake - found
===>  Configuring for zerotier-1.2.8
===>  Building for zerotier-1.2.8
gmake[1]: Entering directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake -j 4 ZT_DEBUG=1
gmake[2]: Entering directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/C25519.o node/C25519.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Capability.o node/Capability.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Identity.o node/Identity.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Membership.o node/Membership.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Network.o node/Network.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Node.o node/Node.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -pipe -fno-omit-frame-pointer -flax-vector-conversions -g -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_USE_X64_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Packet.o node/Packet.cpp
node/Packet.cpp:335:43: error: 'register' storage class specifier is deprecated and incompatible with C++17 [-Werror,-Wdeprecated-register]
static inline unsigned LZ4_NbCommonBytes (register reg_t val)
                                          ^~~~~~~~~
1 error generated.
gmake[2]: *** [<builtin>: node/Packet.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
gmake[2]: Leaving directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
gmake[1]: *** [make-bsd.mk:162: debug] Error 2
gmake[1]: Leaving directory '/tmp/projects/freebsd/wip/zerotier/work/ZeroTierOne-1.2.8'
===> Compilation failed unexpectedly.
Try to set MAKE_JOBS_UNSAFE=yes and rebuild before reporting the failure to
the maintainer.
*** Error code 1

Stop.
make: stopped in /projects/freebsd/wip/zerotier",see https://reviews.freebsd.org/D15133 for downstream,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,764,2018-05-26T19:04:08Z,2018-06-12T16:37:28Z,2018-06-12T17:07:06Z,MERGED,True,5,1,1,https://github.com/Elfe,fix MAC address rule parsing as even/uneven switches at every colon,1,[],https://github.com/zerotier/ZeroTierOne/pull/764,https://github.com/Elfe,1,https://github.com/zerotier/ZeroTierOne/pull/764,"currently mac address rules do not parse correctly
drop macsrc aabbccddeeff;
drop macsrc 11:22:33:44:55:66;
both produce json with broken MACs, this patch should fix this issue","currently mac address rules do not parse correctly
drop macsrc aabbccddeeff;
drop macsrc 11:22:33:44:55:66;
both produce json with broken MACs, this patch should fix this issue",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,764,2018-05-26T19:04:08Z,2018-06-12T16:37:28Z,2018-06-12T17:07:06Z,MERGED,True,5,1,1,https://github.com/Elfe,fix MAC address rule parsing as even/uneven switches at every colon,1,[],https://github.com/zerotier/ZeroTierOne/pull/764,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/764#issuecomment-394878055,"currently mac address rules do not parse correctly
drop macsrc aabbccddeeff;
drop macsrc 11:22:33:44:55:66;
both produce json with broken MACs, this patch should fix this issue",Pull requests are only accepted against the dev branch as noted in the README.  Please close and resubmit.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,764,2018-05-26T19:04:08Z,2018-06-12T16:37:28Z,2018-06-12T17:07:06Z,MERGED,True,5,1,1,https://github.com/Elfe,fix MAC address rule parsing as even/uneven switches at every colon,1,[],https://github.com/zerotier/ZeroTierOne/pull/764,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/764#issuecomment-396654996,"currently mac address rules do not parse correctly
drop macsrc aabbccddeeff;
drop macsrc 11:22:33:44:55:66;
both produce json with broken MACs, this patch should fix this issue",Went ahead and accepted it. We will do another bug fix release soon. But in the future we should do dev... or maybe we should swap master and dev with master and release and make master dev? Not sure.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,764,2018-05-26T19:04:08Z,2018-06-12T16:37:28Z,2018-06-12T17:07:06Z,MERGED,True,5,1,1,https://github.com/Elfe,fix MAC address rule parsing as even/uneven switches at every colon,1,[],https://github.com/zerotier/ZeroTierOne/pull/764,https://github.com/laduke,4,https://github.com/zerotier/ZeroTierOne/pull/764#issuecomment-396664022,"currently mac address rules do not parse correctly
drop macsrc aabbccddeeff;
drop macsrc 11:22:33:44:55:66;
both produce json with broken MACs, this patch should fix this issue",You can edit the pull request and change the target branch (not that it wouldn't probably conflict),True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,773,2018-05-31T02:14:07Z,2018-06-12T16:37:01Z,2018-06-12T16:37:01Z,MERGED,True,4,0,1,https://github.com/alexforencich,Add UFW firewall application preset,1,[],https://github.com/zerotier/ZeroTierOne/pull/773,https://github.com/alexforencich,1,https://github.com/zerotier/ZeroTierOne/pull/773,"Install this in /etc/ufw/applications.d so users can add a firewall rule with
$ ufw allow zerotier-one","Install this in /etc/ufw/applications.d so users can add a firewall rule with
$ ufw allow zerotier-one",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,776,2018-05-31T21:57:40Z,2018-06-12T16:36:46Z,2018-06-12T16:36:47Z,MERGED,True,2,1,1,https://github.com/Wykks,Improve debian service requirements,1,[],https://github.com/zerotier/ZeroTierOne/pull/776,https://github.com/Wykks,1,https://github.com/zerotier/ZeroTierOne/pull/776,https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Wants=,https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Wants=,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,776,2018-05-31T21:57:40Z,2018-06-12T16:36:46Z,2018-06-12T16:36:47Z,MERGED,True,2,1,1,https://github.com/Wykks,Improve debian service requirements,1,[],https://github.com/zerotier/ZeroTierOne/pull/776,https://github.com/janjaapbos,2,https://github.com/zerotier/ZeroTierOne/pull/776#issuecomment-393697586,https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Wants=,There are cases where zerotier is used to provide the functional network that other services depend on. Postponing zerotier is not needed I think. It should be able to handle not being online and detect when it becomes online.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,776,2018-05-31T21:57:40Z,2018-06-12T16:36:46Z,2018-06-12T16:36:47Z,MERGED,True,2,1,1,https://github.com/Wykks,Improve debian service requirements,1,[],https://github.com/zerotier/ZeroTierOne/pull/776,https://github.com/Wykks,3,https://github.com/zerotier/ZeroTierOne/pull/776#issuecomment-393822640,https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Wants=,"It's just a small optimisation.
Of course, ZeroTier can start without network, and then detect when network goes up (that's why I used Wants instead of Requires). But I think, it's better if this step can be avoided most of the times.
To back up my point, in the service conf of OpenVPN server you can find
After=syslog.target network-online.target
Wants=network-online.target


There are cases where zerotier is used to provide the functional network that other services depend on.

Welp after reading this multiple times, I'm starting to wonder if Before=network-pre.target (with Wants too) is more appropriate (https://www.freedesktop.org/wiki/Software/systemd/NetworkTarget/)
It's ok If you leave this as is, I won't bother you anymore with this :D",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,794,2018-06-19T20:25:39Z,2018-06-21T17:02:03Z,2018-06-21T17:02:03Z,CLOSED,False,2,0,1,https://github.com/laduke,Make sure controller.d/network/${networkId}/ exists,1,[],https://github.com/zerotier/ZeroTierOne/pull/794,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/794,"FileDB tries to write to files in controller.d/network/${networkId}/member/
but controller.d/network/${networkId}/ doesn't exist, so it fails.
controller.d/
├── network
│   ├── d7bab7f079eef5d8
│   │   └── member
│   │       └── 9935981b1e.json
│   └── d7bab7f079eef5d8.json
└── trace","FileDB tries to write to files in controller.d/network/${networkId}/member/
but controller.d/network/${networkId}/ doesn't exist, so it fails.
controller.d/
├── network
│   ├── d7bab7f079eef5d8
│   │   └── member
│   │       └── 9935981b1e.json
│   └── d7bab7f079eef5d8.json
└── trace",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,794,2018-06-19T20:25:39Z,2018-06-21T17:02:03Z,2018-06-21T17:02:03Z,CLOSED,False,2,0,1,https://github.com/laduke,Make sure controller.d/network/${networkId}/ exists,1,[],https://github.com/zerotier/ZeroTierOne/pull/794,https://github.com/laduke,2,https://github.com/zerotier/ZeroTierOne/pull/794#issuecomment-398940798,"FileDB tries to write to files in controller.d/network/${networkId}/member/
but controller.d/network/${networkId}/ doesn't exist, so it fails.
controller.d/
├── network
│   ├── d7bab7f079eef5d8
│   │   └── member
│   │       └── 9935981b1e.json
│   └── d7bab7f079eef5d8.json
└── trace","Hrm, when you delete a network from the controller, the member files stick around.
After deleting the networks:
controller.d/
├── network
│   ├── 9935981b1e286d21
│   │   └── member
│   │       └── 9935981b1e.json",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,797,2018-06-25T22:34:51Z,2018-06-25T22:39:14Z,2018-06-25T22:42:13Z,CLOSED,False,1,1,1,https://github.com/dschulz,Fix member list JSON formatting emitted from controller API,1,[],https://github.com/zerotier/ZeroTierOne/pull/797,https://github.com/dschulz,1,https://github.com/zerotier/ZeroTierOne/pull/797,The controller API emits invalid JSON when querying the controller/network/<network id>/member endpoint. There's a single stray quotation mark that needs to be removed.,The controller API emits invalid JSON when querying the controller/network/<network id>/member endpoint. There's a single stray quotation mark that needs to be removed.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,797,2018-06-25T22:34:51Z,2018-06-25T22:39:14Z,2018-06-25T22:42:13Z,CLOSED,False,1,1,1,https://github.com/dschulz,Fix member list JSON formatting emitted from controller API,1,[],https://github.com/zerotier/ZeroTierOne/pull/797,https://github.com/laduke,2,https://github.com/zerotier/ZeroTierOne/pull/797#issuecomment-400118103,The controller API emits invalid JSON when querying the controller/network/<network id>/member endpoint. There's a single stray quotation mark that needs to be removed.,hey thanks! is this the same as #746 ?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,797,2018-06-25T22:34:51Z,2018-06-25T22:39:14Z,2018-06-25T22:42:13Z,CLOSED,False,1,1,1,https://github.com/dschulz,Fix member list JSON formatting emitted from controller API,1,[],https://github.com/zerotier/ZeroTierOne/pull/797,https://github.com/glimberg,3,https://github.com/zerotier/ZeroTierOne/pull/797#issuecomment-400118171,The controller API emits invalid JSON when querying the controller/network/<network id>/member endpoint. There's a single stray quotation mark that needs to be removed.,Already fixed in the dev branch,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,797,2018-06-25T22:34:51Z,2018-06-25T22:39:14Z,2018-06-25T22:42:13Z,CLOSED,False,1,1,1,https://github.com/dschulz,Fix member list JSON formatting emitted from controller API,1,[],https://github.com/zerotier/ZeroTierOne/pull/797,https://github.com/dschulz,4,https://github.com/zerotier/ZeroTierOne/pull/797#issuecomment-400118735,The controller API emits invalid JSON when querying the controller/network/<network id>/member endpoint. There's a single stray quotation mark that needs to be removed.,"Indeed, it's the same as #746. Thanks and sorry for the noise :)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,803,2018-06-30T12:42:03Z,2018-08-24T08:16:59Z,2018-08-24T08:17:49Z,CLOSED,False,0,0,0,https://github.com/dch,add support for debug flags in FreeBSD,0,[],https://github.com/zerotier/ZeroTierOne/pull/803,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/803,"I think these should be fine; they certainly enabled debugging for me here, but I can't check for other platforms.","I think these should be fine; they certainly enabled debugging for me here, but I can't check for other platforms.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,806,2018-07-04T15:07:29Z,2018-11-18T01:17:11Z,2018-11-18T01:17:12Z,CLOSED,False,40,8,4,https://github.com/neVERberleRfellerER,Add Linux route metrics,1,[],https://github.com/zerotier/ZeroTierOne/pull/806,https://github.com/neVERberleRfellerER,1,https://github.com/zerotier/ZeroTierOne/pull/806,"Add metrics based on ZT_IF_METRIC.
There are negative implications of this - when somebody connected over zerotiers enters network that is same as one routed through managed routes, it might result in data leak as data are send to nodes in different network directly (not over zt). However, this is what allegedly happens on other platforms due to high interface metric, so this makes this Linux consistent with other platforms (who are in majority and this is what most people want anyway).
It is not marvel of great engineering, but propagating something hrough zt code is not exactly easy.
Tested on Arch and Fedora.","Add metrics based on ZT_IF_METRIC.
There are negative implications of this - when somebody connected over zerotiers enters network that is same as one routed through managed routes, it might result in data leak as data are send to nodes in different network directly (not over zt). However, this is what allegedly happens on other platforms due to high interface metric, so this makes this Linux consistent with other platforms (who are in majority and this is what most people want anyway).
It is not marvel of great engineering, but propagating something hrough zt code is not exactly easy.
Tested on Arch and Fedora.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,806,2018-07-04T15:07:29Z,2018-11-18T01:17:11Z,2018-11-18T01:17:12Z,CLOSED,False,40,8,4,https://github.com/neVERberleRfellerER,Add Linux route metrics,1,[],https://github.com/zerotier/ZeroTierOne/pull/806,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/806#issuecomment-424524628,"Add metrics based on ZT_IF_METRIC.
There are negative implications of this - when somebody connected over zerotiers enters network that is same as one routed through managed routes, it might result in data leak as data are send to nodes in different network directly (not over zt). However, this is what allegedly happens on other platforms due to high interface metric, so this makes this Linux consistent with other platforms (who are in majority and this is what most people want anyway).
It is not marvel of great engineering, but propagating something hrough zt code is not exactly easy.
Tested on Arch and Fedora.","Hmm... unfortunately we've changed Linux to get rid of external calls to /sbin/ip, which changes a bunch of stuff.
What's the scenario where this was needed?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,806,2018-07-04T15:07:29Z,2018-11-18T01:17:11Z,2018-11-18T01:17:12Z,CLOSED,False,40,8,4,https://github.com/neVERberleRfellerER,Add Linux route metrics,1,[],https://github.com/zerotier/ZeroTierOne/pull/806,https://github.com/neVERberleRfellerER,3,https://github.com/zerotier/ZeroTierOne/pull/806#issuecomment-425485225,"Add metrics based on ZT_IF_METRIC.
There are negative implications of this - when somebody connected over zerotiers enters network that is same as one routed through managed routes, it might result in data leak as data are send to nodes in different network directly (not over zt). However, this is what allegedly happens on other platforms due to high interface metric, so this makes this Linux consistent with other platforms (who are in majority and this is what most people want anyway).
It is not marvel of great engineering, but propagating something hrough zt code is not exactly easy.
Tested on Arch and Fedora.","On Linux, having same network in zerotier and physical network resulted in zerotier taking precedence which broke everything as all communications were pushed through zerotier and failed since zerotier itself could not communicate due to overlap. My PR gave metrics to routes to lower priority of routes managed by zerotier. This was necessary, because Linux does not have interface metrics that serve the same purpose on other platforms. Also, this was difference between Linux and other platforms, which is confising, since overlaping networks work fine on Windows and probably OSX, but not on Linux.
I can try to rewrite this to netlink.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,806,2018-07-04T15:07:29Z,2018-11-18T01:17:11Z,2018-11-18T01:17:12Z,CLOSED,False,40,8,4,https://github.com/neVERberleRfellerER,Add Linux route metrics,1,[],https://github.com/zerotier/ZeroTierOne/pull/806,https://github.com/neVERberleRfellerER,4,https://github.com/zerotier/ZeroTierOne/pull/806#issuecomment-439659947,"Add metrics based on ZT_IF_METRIC.
There are negative implications of this - when somebody connected over zerotiers enters network that is same as one routed through managed routes, it might result in data leak as data are send to nodes in different network directly (not over zt). However, this is what allegedly happens on other platforms due to high interface metric, so this makes this Linux consistent with other platforms (who are in majority and this is what most people want anyway).
It is not marvel of great engineering, but propagating something hrough zt code is not exactly easy.
Tested on Arch and Fedora.",I'll open new PR when/if I get it done.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,822,2018-08-02T21:19:58Z,2018-09-25T18:38:26Z,2019-01-11T05:59:41Z,MERGED,True,14,1,2,https://github.com/dschulz,Add functionality to erase members from networks using file backend i…,1,[],https://github.com/zerotier/ZeroTierOne/pull/822,https://github.com/dschulz,1,https://github.com/zerotier/ZeroTierOne/pull/822,"The FileDB.cpp was lacking the functionality to actually delete members from networks.
This patch allows to delete the .json files corresponding to members in any given network.
Signed-off-by: Diego Schulz dschulz@gmail.com","The FileDB.cpp was lacking the functionality to actually delete members from networks.
This patch allows to delete the .json files corresponding to members in any given network.
Signed-off-by: Diego Schulz dschulz@gmail.com",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,822,2018-08-02T21:19:58Z,2018-09-25T18:38:26Z,2019-01-11T05:59:41Z,MERGED,True,14,1,2,https://github.com/dschulz,Add functionality to erase members from networks using file backend i…,1,[],https://github.com/zerotier/ZeroTierOne/pull/822,https://github.com/dschulz,2,https://github.com/zerotier/ZeroTierOne/pull/822#issuecomment-410075438,"The FileDB.cpp was lacking the functionality to actually delete members from networks.
This patch allows to delete the .json files corresponding to members in any given network.
Signed-off-by: Diego Schulz dschulz@gmail.com","This is only a partial fix. The json files get deleted right away when the DELETE method is issued to the controller api, but the member still appears when querying the member list for the same network. When the daemon is restarted after that, the member disappears, though.
I'm not sure why this is not working as I expected. I can only guess it has something to do with the _memberChanged() function.
@adamierymenko can you please take a quick look and comment on this? Thanks!",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,822,2018-08-02T21:19:58Z,2018-09-25T18:38:26Z,2019-01-11T05:59:41Z,MERGED,True,14,1,2,https://github.com/dschulz,Add functionality to erase members from networks using file backend i…,1,[],https://github.com/zerotier/ZeroTierOne/pull/822,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/822#issuecomment-424455094,"The FileDB.cpp was lacking the functionality to actually delete members from networks.
This patch allows to delete the .json files corresponding to members in any given network.
Signed-off-by: Diego Schulz dschulz@gmail.com",This is related to #859,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,822,2018-08-02T21:19:58Z,2018-09-25T18:38:26Z,2019-01-11T05:59:41Z,MERGED,True,14,1,2,https://github.com/dschulz,Add functionality to erase members from networks using file backend i…,1,[],https://github.com/zerotier/ZeroTierOne/pull/822,https://github.com/lpbpu,4,https://github.com/zerotier/ZeroTierOne/pull/822#issuecomment-453387891,"The FileDB.cpp was lacking the functionality to actually delete members from networks.
This patch allows to delete the .json files corresponding to members in any given network.
Signed-off-by: Diego Schulz dschulz@gmail.com","@dschulz , the reason why member still appears when DELETE from controller api, just because misuse of DB:get function to get member's config
In FileDB::eraseMember
get(networkId,network);
get(memberId,member);
should changed to
get(networkId,network,memberId,member);",True,"{'THUMBS_UP': ['https://github.com/dschulz', 'https://github.com/lideming']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,836,2018-08-24T08:22:51Z,2018-09-14T15:09:00Z,2018-09-14T15:09:00Z,MERGED,True,20,4,4,https://github.com/dch, add support for debug flags in FreeBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/836,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/836,re-submitted as github decided to close #803 for me,re-submitted as github decided to close #803 for me,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,837,2018-08-24T08:33:53Z,2018-09-14T15:08:21Z,2018-09-14T15:08:21Z,MERGED,True,8653,4476,2,https://github.com/dch,update external JSON dependency to address libc++ compatibility,1,[],https://github.com/zerotier/ZeroTierOne/pull/837,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/837,"viz https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=230629
NB this fails to build on FreeBSD 10.4 i386 only, but support for this version drops end October so we're fine. This may impact other platforms though, build log follows if zt team can make sense of the build failure.
=>> Building net/zerotier
build started at Fri Aug 24 08:08:59 UTC 2018
port directory: /usr/ports/net/zerotier
package name: zerotier-1.2.12
building for: FreeBSD pkg.skunkwerks.at 10.4-RELEASE-p11 FreeBSD 10.4-RELEASE-p11 i386
maintained by: dch@FreeBSD.org
Makefile ident: 
Poudriere version: 3.2.99.20180601
Host OSVERSION: 1200077
Jail OSVERSION: 1004000
Job Id: 01

---Begin Environment---
SHELL=/bin/csh
UNAME_p=i386
UNAME_m=i386
OSVERSION=1004000
UNAME_v=FreeBSD 10.4-RELEASE-p11
UNAME_r=10.4-RELEASE-p11
BLOCKSIZE=K
MAIL=/var/mail/root
WARNING_WAIT=0
STATUS=1
HOME=/root
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/games:/usr/local/sbin:/usr/local/bin:/root/bin
LOCALBASE=/usr/local
USER=root
LIBEXECPREFIX=/usr/local/libexec/poudriere
POUDRIERE_VERSION=3.2.99.20180601
MASTERMNT=/usr/local/poudriere/data/.m/10_4_x86-default/ref
DEV_WARNING_WAIT=0
POUDRIERE_BUILD_TYPE=bulk
PACKAGE_BUILDING=yes
SAVED_TERM=xterm-256color
PWD=/usr/local/poudriere/data/.m/10_4_x86-default/ref/.p/pool
NO_WARNING_PKG_INSTALL_EOL=yes
P_PORTS_FEATURES=FLAVORS SELECTED_OPTIONS
MASTERNAME=10_4_x86-default
SCRIPTPREFIX=/usr/local/share/poudriere
OLDPWD=/usr/local/poudriere/data/.m/10_4_x86-default/ref/.p
SCRIPTPATH=/usr/local/share/poudriere/bulk.sh
POUDRIEREPATH=/usr/local/bin/poudriere
---End Environment---

---Begin Poudriere Port Flags/Env---
PORT_FLAGS=
PKGENV=
FLAVOR=
DEPENDS_ARGS=
MAKE_ARGS=
---End Poudriere Port Flags/Env---

---Begin OPTIONS List---
===> The following configuration options are available for zerotier-1.2.12:
     DBG=on: Enable foreground debugging for zerotier-one daemon
===> Use 'make config' to modify these settings
---End OPTIONS List---

--MAINTAINER--
dch@FreeBSD.org
--End MAINTAINER--

--CONFIGURE_ARGS--

--End CONFIGURE_ARGS--

--CONFIGURE_ENV--
MAKE=gmake XDG_DATA_HOME=/tmp/usr/ports/net/zerotier/work  XDG_CONFIG_HOME=/tmp/usr/ports/net/zerotier/work  HOME=/tmp/usr/ports/net/zerotier/work TMPDIR=""/tmp"" PATH=/tmp/usr/ports/net/zerotier/work/.bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/games:/usr/local/sbin:/usr/local/bin:/root/bin SHELL=/bin/sh CONFIG_SHELL=/bin/sh
--End CONFIGURE_ENV--

--MAKE_ENV--
XDG_DATA_HOME=/tmp/usr/ports/net/zerotier/work  XDG_CONFIG_HOME=/tmp/usr/ports/net/zerotier/work  HOME=/tmp/usr/ports/net/zerotier/work TMPDIR=""/tmp"" PATH=/tmp/usr/ports/net/zerotier/work/.bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/games:/usr/local/sbin:/usr/local/bin:/root/bin NO_PIE=yes MK_DEBUG_FILES=no MK_KERNEL_SYMBOLS=no SHELL=/bin/sh NO_LINT=YES PREFIX=/usr/local  LOCALBASE=/usr/local  CC=""cc"" CFLAGS=""-O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing""  CPP=""cpp"" CPPFLAGS=""""  LDFLAGS="" -fstack-protector"" LIBS=""""  CXX=""c++"" CXXFLAGS=""-O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing ""  MANPREFIX=""/usr/local"" BSD_INSTALL_PROGRAM=""install  -s -m 555""  BSD_INSTALL_LIB=""install  -s -m 0644""  BSD_INSTALL_SCRIPT=""install  -m 555""  BSD_INSTALL_DATA=""install  -m 0644""  BSD_INSTALL_MAN=""install  -m 444""
--End MAKE_ENV--

--PLIST_SUB--
PORTDOCS="""" PORTEXAMPLES="""" OSREL=10.4 PREFIX=%D LOCALBASE=/usr/local  RESETPREFIX=/usr/local LIB32DIR=lib DOCSDIR=""share/doc/zerotier""  EXAMPLESDIR=""share/examples/zerotier""  DATADIR=""share/zerotier""  WWWDIR=""www/zerotier""  ETCDIR=""etc/zerotier""
--End PLIST_SUB--

--SUB_LIST--
 ZEROTIER_SYSLOG="""" PREFIX=/usr/local LOCALBASE=/usr/local  DATADIR=/usr/local/share/zerotier DOCSDIR=/usr/local/share/doc/zerotier EXAMPLESDIR=/usr/local/share/examples/zerotier  WWWDIR=/usr/local/www/zerotier ETCDIR=/usr/local/etc/zerotier
--End SUB_LIST--

---Begin make.conf---
USE_PACKAGE_DEPENDS=yes
BATCH=yes
WRKDIRPREFIX=/wrkdirs
PORTSDIR=/usr/ports
PACKAGES=/packages
DISTDIR=/distfiles
FORCE_PACKAGE=yes
PACKAGE_BUILDING=yes
PACKAGE_BUILDING_FLAVORS=yes
MACHINE=i386
MACHINE_ARCH=i386
ARCH=${MACHINE_ARCH}
#### /usr/local/etc/poudriere.d/make.conf ####
BATCH=yes
PROXYDEPS_FATAL=yes
KEEP_OLD_PACKAGES=yes
USE_TMPFS=all
TMPFS_LIMIT=2
WRKDIRPREFIX=/tmp
CCACHE_DIR=/var/cache/ccache
# Erlang/OTP with DTrace
.if ${.CURDIR:M*/lang/erlang*}
STRIP=
WITH_CTF=1
CFLAGS+=-fno-omit-frame-pointer
.endif
# OpenSSL avoidance
# DEFAULT_VERSIONS+=ssl=libressl
# OPTIONS_UNSET= GSSAPI_BASE
# OPTIONS_SET=   GSSAPI_MIT
# enable our custom ports category
VALID_CATEGORIES+=koan-ci
LICENSES_ACCEPTED+=MIT BSD3CLAUSE APACHE20 LGPLV3 BSD2CLAUSE MPL MPL20 NONE

# Enable Tahoma in x11-fonts/webfonts if you have a Windows license
.if ${.CURDIR:M*/x11-fonts/webfonts}
WITH_MSWINDOWS_LICENSE=yes
.endif

#### /usr/ports/Mk/Scripts/ports_env.sh ####
_CCVERSION_921dbbb2=FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512 Target: i386-unknown-freebsd10.4 Thread model: posix
_ALTCCVERSION_921dbbb2=none
_CXXINTERNAL_acaad9ca=FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512 Target: i386-unknown-freebsd10.4 Thread model: posix ""/usr/bin/ld"" ""--eh-frame-hdr"" ""-dynamic-linker"" ""/libexec/ld-elf.so.1"" ""--hash-style=both"" ""--enable-new-dtags"" ""-m"" ""elf_i386_fbsd"" ""-o"" ""a.out"" ""/usr/lib/crt1.o"" ""/usr/lib/crti.o"" ""/usr/lib/crtbegin.o"" ""-L/usr/lib"" ""/dev/null"" ""-lc++"" ""-lm"" ""-lgcc"" ""--as-needed"" ""-lgcc_s"" ""--no-as-needed"" ""-lc"" ""-lgcc"" ""--as-needed"" ""-lgcc_s"" ""--no-as-needed"" ""/usr/lib/crtend.o"" ""/usr/lib/crtn.o""
CC_OUTPUT_921dbbb2_58173849=yes
CC_OUTPUT_921dbbb2_9bdba57c=yes
CC_OUTPUT_921dbbb2_6a4fe7f5=yes
CC_OUTPUT_921dbbb2_6bcac02b=yes
CC_OUTPUT_921dbbb2_67d20829=yes
CC_OUTPUT_921dbbb2_bfa62e83=yes
CC_OUTPUT_921dbbb2_f0b4d593=yes
CC_OUTPUT_921dbbb2_308abb44=yes
CC_OUTPUT_921dbbb2_f00456e5=yes
CC_OUTPUT_921dbbb2_65ad290d=error: invalid value 'c++14' in '-std=c++14'
CC_OUTPUT_921dbbb2_f2776b26=error: invalid value 'c++17' in '-std=c++17'
CC_OUTPUT_921dbbb2_b2657cc3=yes
CC_OUTPUT_921dbbb2_380987f7=yes
CC_OUTPUT_921dbbb2_160933ec=error: invalid value 'gnu++14' in '-std=gnu++14'
CC_OUTPUT_921dbbb2_fb62803b=error: invalid value 'gnu++17' in '-std=gnu++17'
_OBJC_CCVERSION_921dbbb2=FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512 Target: i386-unknown-freebsd10.4 Thread model: posix
_OBJC_ALTCCVERSION_921dbbb2=none
ARCH=i386
OPSYS=FreeBSD
_OSRELEASE=10.4-RELEASE-p11
OSREL=10.4
OSVERSION=1004000
PYTHONBASE=/usr/local
_SMP_CPUS=8
CONFIGURE_MAX_CMD_LEN=262144
HAVE_PORTS_ENV=1
#### Misc Poudriere ####
GID=0
UID=0
DISABLE_MAKE_JOBS=poudriere
---End make.conf---
--Resource limits--
cpu time               (seconds, -t)  unlimited
file size           (512-blocks, -f)  unlimited
data seg size           (kbytes, -d)  524288
stack size              (kbytes, -s)  65536
core file size      (512-blocks, -c)  unlimited
max memory size         (kbytes, -m)  unlimited
locked memory           (kbytes, -l)  unlimited
max user processes              (-u)  9000
open files                      (-n)  1024
virtual mem size        (kbytes, -v)  unlimited
swap limit              (kbytes, -w)  unlimited
sbsize                   (bytes, -b)  unlimited
pseudo-terminals                (-p)  unlimited
--End resource limits--
=======================<phase: check-sanity   >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===========================================================================
=======================<phase: pkg-depends    >============================
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - not found
===>   Installing existing package /packages/All/pkg-1.10.5_1.txz
[pkg.skunkwerks.at] Installing pkg-1.10.5_1...
[pkg.skunkwerks.at] Extracting pkg-1.10.5_1: .......... done
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
===>   Returning to build of zerotier-1.2.12
===========================================================================
=======================<phase: fetch-depends  >============================
===========================================================================
=======================<phase: fetch          >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
=> zerotier-ZeroTierOne-1.2.12_GH0.tar.gz doesn't seem to exist in /portdistfiles/.
=> Attempting to fetch https://codeload.github.com/zerotier/ZeroTierOne/tar.gz/1.2.12?dummy=/zerotier-ZeroTierOne-1.2.12_GH0.tar.gz
fetch: https://codeload.github.com/zerotier/ZeroTierOne/tar.gz/1.2.12?dummy=/zerotier-ZeroTierOne-1.2.12_GH0.tar.gz: size unknown
fetch: https://codeload.github.com/zerotier/ZeroTierOne/tar.gz/1.2.12?dummy=/zerotier-ZeroTierOne-1.2.12_GH0.tar.gz: size of remote file is not known
zerotier-ZeroTierOne-1.2.12_GH0.tar.gz                   0  B    0  Bps
===> Fetching all distfiles required by zerotier-1.2.12 for building
===========================================================================
=======================<phase: checksum       >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by zerotier-1.2.12 for building
=> SHA256 Checksum OK for zerotier-ZeroTierOne-1.2.12_GH0.tar.gz.
===========================================================================
=======================<phase: extract-depends>============================
===========================================================================
=======================<phase: extract        >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by zerotier-1.2.12 for building
===>  Extracting for zerotier-1.2.12
=> SHA256 Checksum OK for zerotier-ZeroTierOne-1.2.12_GH0.tar.gz.
===========================================================================
=======================<phase: patch-depends  >============================
===========================================================================
=======================<phase: patch          >============================
===>  Patching for zerotier-1.2.12
===>  Applying FreeBSD patches for zerotier-1.2.12
===========================================================================
=======================<phase: build-depends  >============================
===>   zerotier-1.2.12 depends on executable: gmake - not found
===>   Installing existing package /packages/All/gmake-4.2.1_2.txz
[pkg.skunkwerks.at] Installing gmake-4.2.1_2...
[pkg.skunkwerks.at] `-- Installing gettext-runtime-0.19.8.1_1...
[pkg.skunkwerks.at] |   `-- Installing indexinfo-0.3.1...
[pkg.skunkwerks.at] |   `-- Extracting indexinfo-0.3.1: .... done
[pkg.skunkwerks.at] `-- Extracting gettext-runtime-0.19.8.1_1: .......... done
[pkg.skunkwerks.at] Extracting gmake-4.2.1_2: .......... done
===>   zerotier-1.2.12 depends on executable: gmake - found
===>   Returning to build of zerotier-1.2.12
===========================================================================
=======================<phase: lib-depends    >============================
===========================================================================
=>> Recording filesystem state for prebuild... done
=======================<phase: configure      >============================
===>   zerotier-1.2.12 depends on executable: gmake - found
===>  Configuring for zerotier-1.2.12
===========================================================================
=======================<phase: build          >============================
===>  Building for zerotier-1.2.12
gmake[1]: Entering directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
gmake -j ZT_DEBUG=1
gmake[2]: Entering directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/C25519.o node/C25519.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Capability.o node/Capability.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Identity.o node/Identity.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Membership.o node/Membership.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Network.o node/Network.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Node.o node/Node.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Packet.o node/Packet.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Path.o node/Path.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Peer.o node/Peer.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Poly1305.o node/Poly1305.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Revocation.o node/Revocation.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Salsa20.o node/Salsa20.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/SelfAwareness.o node/SelfAwareness.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/SHA512.o node/SHA512.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Switch.o node/Switch.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Tag.o node/Tag.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Topology.o node/Topology.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Trace.o node/Trace.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Utils.o node/Utils.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/EmbeddedNetworkController.o controller/EmbeddedNetworkController.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/DB.o controller/DB.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/FileDB.o controller/FileDB.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/RethinkDB.o controller/RethinkDB.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/ManagedRoute.o osdep/ManagedRoute.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/Http.o osdep/Http.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/OSUtils.o osdep/OSUtils.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o service/SoftwareUpdater.o service/SoftwareUpdater.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o service/OneService.o service/OneService.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/BSDEthernetTap.o osdep/BSDEthernetTap.cpp
clang -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\""""   -c -o ext/http-parser/http_parser.o ext/http-parser/http_parser.c
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o one.o one.cpp
Stack dump:
0.	Program arguments: /usr/bin/clang++ -cc1 -triple i386-unknown-freebsd10.4 -emit-obj -disable-free -disable-llvm-verifier -main-file-name OSUtils.cpp -mrelocation-model pic -pic-level 2 -pie-level 2 -mdisable-fp-elim -relaxed-aliasing -masm-verbose -mconstructor-aliases -target-cpu i486 -gdwarf-2 -coverage-file /tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12/osdep/OSUtils.o -resource-dir /usr/bin/../lib/clang/3.4.1 -D NDEBUG -D ZT_BUILD_PLATFORM=7 -D ZT_BUILD_ARCHITECTURE=1 -D ZT_SOFTWARE_UPDATE_DEFAULT=""disable"" -D NDEBUG -D ZT_BUILD_PLATFORM=7 -D ZT_BUILD_ARCHITECTURE=1 -D ZT_SOFTWARE_UPDATE_DEFAULT=""disable"" -D ZT_TRACE -D ZT_BUILD_PLATFORM=7 -D ZT_BUILD_ARCHITECTURE=1 -D ZT_SOFTWARE_UPDATE_DEFAULT=""disable"" -internal-isystem /usr/include/c++/v1 -O2 -Wall -Wall -Wall -Werror -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12 -ferror-limit 19 -fmessage-length 0 -fvisibility hidden -pthread -stack-protector 1 -mstackrealign -fno-rtti -fobjc-runtime=gnustep -fcxx-exceptions -fexceptions -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o osdep/OSUtils.o -x c++ osdep/OSUtils.cpp 
1.	osdep/../ext/json/json.hpp:18807:52: current parser token 'value'
2.	osdep/../ext/json/json.hpp:18798:1: parsing namespace 'std'
clang++: error: unable to execute command: Segmentation fault (core dumped)
clang++: error: clang frontend command failed due to signal (use -v to see invocation)
FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512
Target: i386-unknown-freebsd10.4
Thread model: posix
clang++: note: diagnostic msg: PLEASE submit a bug report to https://bugs.freebsd.org/submit/ and include the crash backtrace, preprocessed source, and associated run script.
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/OSUtils-64660f.cpp
clang++: note: diagnostic msg: /tmp/OSUtils-64660f.sh
clang++: note: diagnostic msg: 

********************
gmake[2]: *** [<builtin>: osdep/OSUtils.o] Error 254
gmake[2]: *** Waiting for unfinished jobs....
gmake[2]: Leaving directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
gmake[1]: *** [make-bsd.mk:162: debug] Error 2
gmake[1]: Leaving directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
*** Error code 1

Stop.
make: stopped in /usr/ports/net/zerotier
=>> Cleaning up wrkdir
===>  Cleaning for zerotier-1.2.12
build of net/zerotier | zerotier-1.2.12 ended at Fri Aug 24 08:10:09 UTC 2018
build time: 00:01:10
!!! build failure encountered !!!","viz https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=230629
NB this fails to build on FreeBSD 10.4 i386 only, but support for this version drops end October so we're fine. This may impact other platforms though, build log follows if zt team can make sense of the build failure.
=>> Building net/zerotier
build started at Fri Aug 24 08:08:59 UTC 2018
port directory: /usr/ports/net/zerotier
package name: zerotier-1.2.12
building for: FreeBSD pkg.skunkwerks.at 10.4-RELEASE-p11 FreeBSD 10.4-RELEASE-p11 i386
maintained by: dch@FreeBSD.org
Makefile ident: 
Poudriere version: 3.2.99.20180601
Host OSVERSION: 1200077
Jail OSVERSION: 1004000
Job Id: 01

---Begin Environment---
SHELL=/bin/csh
UNAME_p=i386
UNAME_m=i386
OSVERSION=1004000
UNAME_v=FreeBSD 10.4-RELEASE-p11
UNAME_r=10.4-RELEASE-p11
BLOCKSIZE=K
MAIL=/var/mail/root
WARNING_WAIT=0
STATUS=1
HOME=/root
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/games:/usr/local/sbin:/usr/local/bin:/root/bin
LOCALBASE=/usr/local
USER=root
LIBEXECPREFIX=/usr/local/libexec/poudriere
POUDRIERE_VERSION=3.2.99.20180601
MASTERMNT=/usr/local/poudriere/data/.m/10_4_x86-default/ref
DEV_WARNING_WAIT=0
POUDRIERE_BUILD_TYPE=bulk
PACKAGE_BUILDING=yes
SAVED_TERM=xterm-256color
PWD=/usr/local/poudriere/data/.m/10_4_x86-default/ref/.p/pool
NO_WARNING_PKG_INSTALL_EOL=yes
P_PORTS_FEATURES=FLAVORS SELECTED_OPTIONS
MASTERNAME=10_4_x86-default
SCRIPTPREFIX=/usr/local/share/poudriere
OLDPWD=/usr/local/poudriere/data/.m/10_4_x86-default/ref/.p
SCRIPTPATH=/usr/local/share/poudriere/bulk.sh
POUDRIEREPATH=/usr/local/bin/poudriere
---End Environment---

---Begin Poudriere Port Flags/Env---
PORT_FLAGS=
PKGENV=
FLAVOR=
DEPENDS_ARGS=
MAKE_ARGS=
---End Poudriere Port Flags/Env---

---Begin OPTIONS List---
===> The following configuration options are available for zerotier-1.2.12:
     DBG=on: Enable foreground debugging for zerotier-one daemon
===> Use 'make config' to modify these settings
---End OPTIONS List---

--MAINTAINER--
dch@FreeBSD.org
--End MAINTAINER--

--CONFIGURE_ARGS--

--End CONFIGURE_ARGS--

--CONFIGURE_ENV--
MAKE=gmake XDG_DATA_HOME=/tmp/usr/ports/net/zerotier/work  XDG_CONFIG_HOME=/tmp/usr/ports/net/zerotier/work  HOME=/tmp/usr/ports/net/zerotier/work TMPDIR=""/tmp"" PATH=/tmp/usr/ports/net/zerotier/work/.bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/games:/usr/local/sbin:/usr/local/bin:/root/bin SHELL=/bin/sh CONFIG_SHELL=/bin/sh
--End CONFIGURE_ENV--

--MAKE_ENV--
XDG_DATA_HOME=/tmp/usr/ports/net/zerotier/work  XDG_CONFIG_HOME=/tmp/usr/ports/net/zerotier/work  HOME=/tmp/usr/ports/net/zerotier/work TMPDIR=""/tmp"" PATH=/tmp/usr/ports/net/zerotier/work/.bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/games:/usr/local/sbin:/usr/local/bin:/root/bin NO_PIE=yes MK_DEBUG_FILES=no MK_KERNEL_SYMBOLS=no SHELL=/bin/sh NO_LINT=YES PREFIX=/usr/local  LOCALBASE=/usr/local  CC=""cc"" CFLAGS=""-O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing""  CPP=""cpp"" CPPFLAGS=""""  LDFLAGS="" -fstack-protector"" LIBS=""""  CXX=""c++"" CXXFLAGS=""-O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing ""  MANPREFIX=""/usr/local"" BSD_INSTALL_PROGRAM=""install  -s -m 555""  BSD_INSTALL_LIB=""install  -s -m 0644""  BSD_INSTALL_SCRIPT=""install  -m 555""  BSD_INSTALL_DATA=""install  -m 0644""  BSD_INSTALL_MAN=""install  -m 444""
--End MAKE_ENV--

--PLIST_SUB--
PORTDOCS="""" PORTEXAMPLES="""" OSREL=10.4 PREFIX=%D LOCALBASE=/usr/local  RESETPREFIX=/usr/local LIB32DIR=lib DOCSDIR=""share/doc/zerotier""  EXAMPLESDIR=""share/examples/zerotier""  DATADIR=""share/zerotier""  WWWDIR=""www/zerotier""  ETCDIR=""etc/zerotier""
--End PLIST_SUB--

--SUB_LIST--
 ZEROTIER_SYSLOG="""" PREFIX=/usr/local LOCALBASE=/usr/local  DATADIR=/usr/local/share/zerotier DOCSDIR=/usr/local/share/doc/zerotier EXAMPLESDIR=/usr/local/share/examples/zerotier  WWWDIR=/usr/local/www/zerotier ETCDIR=/usr/local/etc/zerotier
--End SUB_LIST--

---Begin make.conf---
USE_PACKAGE_DEPENDS=yes
BATCH=yes
WRKDIRPREFIX=/wrkdirs
PORTSDIR=/usr/ports
PACKAGES=/packages
DISTDIR=/distfiles
FORCE_PACKAGE=yes
PACKAGE_BUILDING=yes
PACKAGE_BUILDING_FLAVORS=yes
MACHINE=i386
MACHINE_ARCH=i386
ARCH=${MACHINE_ARCH}
#### /usr/local/etc/poudriere.d/make.conf ####
BATCH=yes
PROXYDEPS_FATAL=yes
KEEP_OLD_PACKAGES=yes
USE_TMPFS=all
TMPFS_LIMIT=2
WRKDIRPREFIX=/tmp
CCACHE_DIR=/var/cache/ccache
# Erlang/OTP with DTrace
.if ${.CURDIR:M*/lang/erlang*}
STRIP=
WITH_CTF=1
CFLAGS+=-fno-omit-frame-pointer
.endif
# OpenSSL avoidance
# DEFAULT_VERSIONS+=ssl=libressl
# OPTIONS_UNSET= GSSAPI_BASE
# OPTIONS_SET=   GSSAPI_MIT
# enable our custom ports category
VALID_CATEGORIES+=koan-ci
LICENSES_ACCEPTED+=MIT BSD3CLAUSE APACHE20 LGPLV3 BSD2CLAUSE MPL MPL20 NONE

# Enable Tahoma in x11-fonts/webfonts if you have a Windows license
.if ${.CURDIR:M*/x11-fonts/webfonts}
WITH_MSWINDOWS_LICENSE=yes
.endif

#### /usr/ports/Mk/Scripts/ports_env.sh ####
_CCVERSION_921dbbb2=FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512 Target: i386-unknown-freebsd10.4 Thread model: posix
_ALTCCVERSION_921dbbb2=none
_CXXINTERNAL_acaad9ca=FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512 Target: i386-unknown-freebsd10.4 Thread model: posix ""/usr/bin/ld"" ""--eh-frame-hdr"" ""-dynamic-linker"" ""/libexec/ld-elf.so.1"" ""--hash-style=both"" ""--enable-new-dtags"" ""-m"" ""elf_i386_fbsd"" ""-o"" ""a.out"" ""/usr/lib/crt1.o"" ""/usr/lib/crti.o"" ""/usr/lib/crtbegin.o"" ""-L/usr/lib"" ""/dev/null"" ""-lc++"" ""-lm"" ""-lgcc"" ""--as-needed"" ""-lgcc_s"" ""--no-as-needed"" ""-lc"" ""-lgcc"" ""--as-needed"" ""-lgcc_s"" ""--no-as-needed"" ""/usr/lib/crtend.o"" ""/usr/lib/crtn.o""
CC_OUTPUT_921dbbb2_58173849=yes
CC_OUTPUT_921dbbb2_9bdba57c=yes
CC_OUTPUT_921dbbb2_6a4fe7f5=yes
CC_OUTPUT_921dbbb2_6bcac02b=yes
CC_OUTPUT_921dbbb2_67d20829=yes
CC_OUTPUT_921dbbb2_bfa62e83=yes
CC_OUTPUT_921dbbb2_f0b4d593=yes
CC_OUTPUT_921dbbb2_308abb44=yes
CC_OUTPUT_921dbbb2_f00456e5=yes
CC_OUTPUT_921dbbb2_65ad290d=error: invalid value 'c++14' in '-std=c++14'
CC_OUTPUT_921dbbb2_f2776b26=error: invalid value 'c++17' in '-std=c++17'
CC_OUTPUT_921dbbb2_b2657cc3=yes
CC_OUTPUT_921dbbb2_380987f7=yes
CC_OUTPUT_921dbbb2_160933ec=error: invalid value 'gnu++14' in '-std=gnu++14'
CC_OUTPUT_921dbbb2_fb62803b=error: invalid value 'gnu++17' in '-std=gnu++17'
_OBJC_CCVERSION_921dbbb2=FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512 Target: i386-unknown-freebsd10.4 Thread model: posix
_OBJC_ALTCCVERSION_921dbbb2=none
ARCH=i386
OPSYS=FreeBSD
_OSRELEASE=10.4-RELEASE-p11
OSREL=10.4
OSVERSION=1004000
PYTHONBASE=/usr/local
_SMP_CPUS=8
CONFIGURE_MAX_CMD_LEN=262144
HAVE_PORTS_ENV=1
#### Misc Poudriere ####
GID=0
UID=0
DISABLE_MAKE_JOBS=poudriere
---End make.conf---
--Resource limits--
cpu time               (seconds, -t)  unlimited
file size           (512-blocks, -f)  unlimited
data seg size           (kbytes, -d)  524288
stack size              (kbytes, -s)  65536
core file size      (512-blocks, -c)  unlimited
max memory size         (kbytes, -m)  unlimited
locked memory           (kbytes, -l)  unlimited
max user processes              (-u)  9000
open files                      (-n)  1024
virtual mem size        (kbytes, -v)  unlimited
swap limit              (kbytes, -w)  unlimited
sbsize                   (bytes, -b)  unlimited
pseudo-terminals                (-p)  unlimited
--End resource limits--
=======================<phase: check-sanity   >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===========================================================================
=======================<phase: pkg-depends    >============================
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - not found
===>   Installing existing package /packages/All/pkg-1.10.5_1.txz
[pkg.skunkwerks.at] Installing pkg-1.10.5_1...
[pkg.skunkwerks.at] Extracting pkg-1.10.5_1: .......... done
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
===>   Returning to build of zerotier-1.2.12
===========================================================================
=======================<phase: fetch-depends  >============================
===========================================================================
=======================<phase: fetch          >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
=> zerotier-ZeroTierOne-1.2.12_GH0.tar.gz doesn't seem to exist in /portdistfiles/.
=> Attempting to fetch https://codeload.github.com/zerotier/ZeroTierOne/tar.gz/1.2.12?dummy=/zerotier-ZeroTierOne-1.2.12_GH0.tar.gz
fetch: https://codeload.github.com/zerotier/ZeroTierOne/tar.gz/1.2.12?dummy=/zerotier-ZeroTierOne-1.2.12_GH0.tar.gz: size unknown
fetch: https://codeload.github.com/zerotier/ZeroTierOne/tar.gz/1.2.12?dummy=/zerotier-ZeroTierOne-1.2.12_GH0.tar.gz: size of remote file is not known
zerotier-ZeroTierOne-1.2.12_GH0.tar.gz                   0  B    0  Bps
===> Fetching all distfiles required by zerotier-1.2.12 for building
===========================================================================
=======================<phase: checksum       >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by zerotier-1.2.12 for building
=> SHA256 Checksum OK for zerotier-ZeroTierOne-1.2.12_GH0.tar.gz.
===========================================================================
=======================<phase: extract-depends>============================
===========================================================================
=======================<phase: extract        >============================
===>  License GPLv3 MIT PD BSD3CLAUSE APACHE20 accepted by the user
===>   zerotier-1.2.12 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by zerotier-1.2.12 for building
===>  Extracting for zerotier-1.2.12
=> SHA256 Checksum OK for zerotier-ZeroTierOne-1.2.12_GH0.tar.gz.
===========================================================================
=======================<phase: patch-depends  >============================
===========================================================================
=======================<phase: patch          >============================
===>  Patching for zerotier-1.2.12
===>  Applying FreeBSD patches for zerotier-1.2.12
===========================================================================
=======================<phase: build-depends  >============================
===>   zerotier-1.2.12 depends on executable: gmake - not found
===>   Installing existing package /packages/All/gmake-4.2.1_2.txz
[pkg.skunkwerks.at] Installing gmake-4.2.1_2...
[pkg.skunkwerks.at] `-- Installing gettext-runtime-0.19.8.1_1...
[pkg.skunkwerks.at] |   `-- Installing indexinfo-0.3.1...
[pkg.skunkwerks.at] |   `-- Extracting indexinfo-0.3.1: .... done
[pkg.skunkwerks.at] `-- Extracting gettext-runtime-0.19.8.1_1: .......... done
[pkg.skunkwerks.at] Extracting gmake-4.2.1_2: .......... done
===>   zerotier-1.2.12 depends on executable: gmake - found
===>   Returning to build of zerotier-1.2.12
===========================================================================
=======================<phase: lib-depends    >============================
===========================================================================
=>> Recording filesystem state for prebuild... done
=======================<phase: configure      >============================
===>   zerotier-1.2.12 depends on executable: gmake - found
===>  Configuring for zerotier-1.2.12
===========================================================================
=======================<phase: build          >============================
===>  Building for zerotier-1.2.12
gmake[1]: Entering directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
gmake -j ZT_DEBUG=1
gmake[2]: Entering directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/C25519.o node/C25519.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Capability.o node/Capability.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfMembership.o node/CertificateOfMembership.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/CertificateOfOwnership.o node/CertificateOfOwnership.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Identity.o node/Identity.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/IncomingPacket.o node/IncomingPacket.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/InetAddress.o node/InetAddress.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Membership.o node/Membership.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Multicaster.o node/Multicaster.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Network.o node/Network.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/NetworkConfig.o node/NetworkConfig.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Node.o node/Node.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/OutboundMulticast.o node/OutboundMulticast.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Packet.o node/Packet.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Path.o node/Path.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Peer.o node/Peer.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Poly1305.o node/Poly1305.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Revocation.o node/Revocation.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Salsa20.o node/Salsa20.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/SelfAwareness.o node/SelfAwareness.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -Wall -O2 -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/SHA512.o node/SHA512.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Switch.o node/Switch.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Tag.o node/Tag.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Topology.o node/Topology.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Trace.o node/Trace.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o node/Utils.o node/Utils.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/EmbeddedNetworkController.o controller/EmbeddedNetworkController.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/DB.o controller/DB.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/FileDB.o controller/FileDB.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o controller/RethinkDB.o controller/RethinkDB.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/ManagedRoute.o osdep/ManagedRoute.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/Http.o osdep/Http.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/OSUtils.o osdep/OSUtils.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o service/SoftwareUpdater.o service/SoftwareUpdater.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o service/OneService.o service/OneService.cpp
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o osdep/BSDEthernetTap.o osdep/BSDEthernetTap.cpp
clang -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\""""   -c -o ext/http-parser/http_parser.o ext/http-parser/http_parser.c
clang++ -O2 -pipe -flax-vector-conversions -fstack-protector -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fstack-protector -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=1 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11    -c -o one.o one.cpp
Stack dump:
0.	Program arguments: /usr/bin/clang++ -cc1 -triple i386-unknown-freebsd10.4 -emit-obj -disable-free -disable-llvm-verifier -main-file-name OSUtils.cpp -mrelocation-model pic -pic-level 2 -pie-level 2 -mdisable-fp-elim -relaxed-aliasing -masm-verbose -mconstructor-aliases -target-cpu i486 -gdwarf-2 -coverage-file /tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12/osdep/OSUtils.o -resource-dir /usr/bin/../lib/clang/3.4.1 -D NDEBUG -D ZT_BUILD_PLATFORM=7 -D ZT_BUILD_ARCHITECTURE=1 -D ZT_SOFTWARE_UPDATE_DEFAULT=""disable"" -D NDEBUG -D ZT_BUILD_PLATFORM=7 -D ZT_BUILD_ARCHITECTURE=1 -D ZT_SOFTWARE_UPDATE_DEFAULT=""disable"" -D ZT_TRACE -D ZT_BUILD_PLATFORM=7 -D ZT_BUILD_ARCHITECTURE=1 -D ZT_SOFTWARE_UPDATE_DEFAULT=""disable"" -internal-isystem /usr/include/c++/v1 -O2 -Wall -Wall -Wall -Werror -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12 -ferror-limit 19 -fmessage-length 0 -fvisibility hidden -pthread -stack-protector 1 -mstackrealign -fno-rtti -fobjc-runtime=gnustep -fcxx-exceptions -fexceptions -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o osdep/OSUtils.o -x c++ osdep/OSUtils.cpp 
1.	osdep/../ext/json/json.hpp:18807:52: current parser token 'value'
2.	osdep/../ext/json/json.hpp:18798:1: parsing namespace 'std'
clang++: error: unable to execute command: Segmentation fault (core dumped)
clang++: error: clang frontend command failed due to signal (use -v to see invocation)
FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512
Target: i386-unknown-freebsd10.4
Thread model: posix
clang++: note: diagnostic msg: PLEASE submit a bug report to https://bugs.freebsd.org/submit/ and include the crash backtrace, preprocessed source, and associated run script.
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/OSUtils-64660f.cpp
clang++: note: diagnostic msg: /tmp/OSUtils-64660f.sh
clang++: note: diagnostic msg: 

********************
gmake[2]: *** [<builtin>: osdep/OSUtils.o] Error 254
gmake[2]: *** Waiting for unfinished jobs....
gmake[2]: Leaving directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
gmake[1]: *** [make-bsd.mk:162: debug] Error 2
gmake[1]: Leaving directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
*** Error code 1

Stop.
make: stopped in /usr/ports/net/zerotier
=>> Cleaning up wrkdir
===>  Cleaning for zerotier-1.2.12
build of net/zerotier | zerotier-1.2.12 ended at Fri Aug 24 08:10:09 UTC 2018
build time: 00:01:10
!!! build failure encountered !!!",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,845,2018-09-07T12:22:09Z,2018-09-14T15:07:37Z,2018-09-14T15:07:48Z,MERGED,True,12,6,1,https://github.com/asbjornenge,Using multi-stage build for Dockerfile,1,[],https://github.com/zerotier/ZeroTierOne/pull/845,https://github.com/asbjornenge,1,https://github.com/zerotier/ZeroTierOne/pull/845,"Hi!
I've update the Dockerfile to leverage the mulit-stage builds. This way it's possible to build inside a container and still produce a small final image. That should also make it easier to automat builds by using github hooks into docker hub 👍
Take a look and please consider automating container builds 😉 🎉","Hi!
I've update the Dockerfile to leverage the mulit-stage builds. This way it's possible to build inside a container and still produce a small final image. That should also make it easier to automat builds by using github hooks into docker hub 👍
Take a look and please consider automating container builds 😉 🎉",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,845,2018-09-07T12:22:09Z,2018-09-14T15:07:37Z,2018-09-14T15:07:48Z,MERGED,True,12,6,1,https://github.com/asbjornenge,Using multi-stage build for Dockerfile,1,[],https://github.com/zerotier/ZeroTierOne/pull/845,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/845#issuecomment-421388870,"Hi!
I've update the Dockerfile to leverage the mulit-stage builds. This way it's possible to build inside a container and still produce a small final image. That should also make it easier to automat builds by using github hooks into docker hub 👍
Take a look and please consider automating container builds 😉 🎉",Merged to dev because that's where we work. Looks good.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,848,2018-09-13T04:36:34Z,2018-09-14T15:05:39Z,2018-09-14T16:39:06Z,MERGED,True,67,1,4,https://github.com/darkain,Fix compile on FreeBSD targeting ARMv6 (Raspberry Pi),5,[],https://github.com/zerotier/ZeroTierOne/pull/848,https://github.com/darkain,1,https://github.com/zerotier/ZeroTierOne/pull/848,"Attempting to compile ZeroTier on FreeBSD on ARM platforms such as older Raspberry Pi units results in the following error message:
fails to link: Source object ext/arm32-neon-salsa2012-asm/salsa2012.o has EABI version 0, but target zerotier-one has EABI version 5
EABI information has been added for the assembler.
Additionally, ARMv6 doesn't support NEON, and it is optional on ARMv7. NEON support is provided by a precompiler directive, so now we check if it exists before including NEON support.
With these changes, ZeroTier compiles and runs perfectly on my Raspberry Pi Zero (using USB NIC)","Attempting to compile ZeroTier on FreeBSD on ARM platforms such as older Raspberry Pi units results in the following error message:
fails to link: Source object ext/arm32-neon-salsa2012-asm/salsa2012.o has EABI version 0, but target zerotier-one has EABI version 5
EABI information has been added for the assembler.
Additionally, ARMv6 doesn't support NEON, and it is optional on ARMv7. NEON support is provided by a precompiler directive, so now we check if it exists before including NEON support.
With these changes, ZeroTier compiles and runs perfectly on my Raspberry Pi Zero (using USB NIC)",True,{'HEART': ['https://github.com/dch']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,848,2018-09-13T04:36:34Z,2018-09-14T15:05:39Z,2018-09-14T16:39:06Z,MERGED,True,67,1,4,https://github.com/darkain,Fix compile on FreeBSD targeting ARMv6 (Raspberry Pi),5,[],https://github.com/zerotier/ZeroTierOne/pull/848,https://github.com/dch,2,https://github.com/zerotier/ZeroTierOne/pull/848#issuecomment-421339968,"Attempting to compile ZeroTier on FreeBSD on ARM platforms such as older Raspberry Pi units results in the following error message:
fails to link: Source object ext/arm32-neon-salsa2012-asm/salsa2012.o has EABI version 0, but target zerotier-one has EABI version 5
EABI information has been added for the assembler.
Additionally, ARMv6 doesn't support NEON, and it is optional on ARMv7. NEON support is provided by a precompiler directive, so now we check if it exists before including NEON support.
With these changes, ZeroTier compiles and runs perfectly on my Raspberry Pi Zero (using USB NIC)","@darkain awesome, that compiles on armv6 but I can't get this to build on armv7 (only available in 12.0-CURRENT, but still)... I've tried sprinkling -fPIC and still get issues. Any suggestions for what needs changing?
clang++ -O2 -pipe -flax-vector-conversions -fno-strict-aliasing  -O2 -pipe  -flax-vector-conversions -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_NO_TYPE_PUNNING -DZT_USE_ARM32_NEON_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=3 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11  -O2 -pipe  -flax-vector-conversions -fno-strict-aliasing -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_NO_TYPE_PUNNING -DZT_USE_ARM32_NEON_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=3 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -Wall -Werror -g -pthread   -DZT_TRACE -DZT_NO_TYPE_PUNNING -DZT_USE_ARM32_NEON_ASM_SALSA2012 -DZT_BUILD_PLATFORM=7 -DZT_BUILD_ARCHITECTURE=3 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -fno-rtti -std=c++11   -pie -Wl,-z,relro,-z,now  -o zerotier-one node/C25519.o node/Capability.o node/CertificateOfMembership.o node/CertificateOfOwnership.o node/Identity.o node/IncomingPacket.o node/InetAddress.o node/Membership.o node/Multicaster.o node/Network.o node/NetworkConfig.o node/Node.o node/OutboundMulticast.o node/Packet.o node/Path.o node/Peer.o node/Poly1305.o node/Revocation.o node/Salsa20.o node/SelfAwareness.o node/SHA512.o node/Switch.o node/Tag.o node/Topology.o node/Trace.o node/Utils.o ext/arm32-neon-salsa2012-asm/salsa2012.o controller/EmbeddedNetworkController.o controller/DB.o controller/FileDB.o controller/RethinkDB.o osdep/ManagedRoute.o osdep/Http.o osdep/OSUtils.o service/SoftwareUpdater.o service/OneService.o osdep/BSDEthernetTap.o ext/http-parser/http_parser.o one.o 
/usr/bin/ld: error: can't create dynamic relocation R_ARM_ABS32 against local symbol in readonly segment; recompile object files with -fPIC
>>> defined in ext/arm32-neon-salsa2012-asm/salsa2012.o
>>> referenced by ext/arm32-neon-salsa2012-asm/salsa2012.o:(.text+0x630)
clang++: error: linker command failed with exit code 1 (use -v to see invocation)
gmake[2]: *** [make-bsd.mk:136: one] Error 1
gmake[2]: Leaving directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
gmake[1]: *** [make-bsd.mk:163: debug] Error 2
gmake[1]: Leaving directory '/tmp/usr/ports/net/zerotier/work/ZeroTierOne-1.2.12'
*** Error code 1",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,848,2018-09-13T04:36:34Z,2018-09-14T15:05:39Z,2018-09-14T16:39:06Z,MERGED,True,67,1,4,https://github.com/darkain,Fix compile on FreeBSD targeting ARMv6 (Raspberry Pi),5,[],https://github.com/zerotier/ZeroTierOne/pull/848,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/848#issuecomment-421388308,"Attempting to compile ZeroTier on FreeBSD on ARM platforms such as older Raspberry Pi units results in the following error message:
fails to link: Source object ext/arm32-neon-salsa2012-asm/salsa2012.o has EABI version 0, but target zerotier-one has EABI version 5
EABI information has been added for the assembler.
Additionally, ARMv6 doesn't support NEON, and it is optional on ARMv7. NEON support is provided by a precompiler directive, so now we check if it exists before including NEON support.
With these changes, ZeroTier compiles and runs perfectly on my Raspberry Pi Zero (using USB NIC)","Merged into dev since that's where we do work. Merge looks great, but you might want to pull dev and test. We don't have an ARM/FreeBSD box handy.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,848,2018-09-13T04:36:34Z,2018-09-14T15:05:39Z,2018-09-14T16:39:06Z,MERGED,True,67,1,4,https://github.com/darkain,Fix compile on FreeBSD targeting ARMv6 (Raspberry Pi),5,[],https://github.com/zerotier/ZeroTierOne/pull/848,https://github.com/darkain,4,https://github.com/zerotier/ZeroTierOne/pull/848#issuecomment-421400516,"Attempting to compile ZeroTier on FreeBSD on ARM platforms such as older Raspberry Pi units results in the following error message:
fails to link: Source object ext/arm32-neon-salsa2012-asm/salsa2012.o has EABI version 0, but target zerotier-one has EABI version 5
EABI information has been added for the assembler.
Additionally, ARMv6 doesn't support NEON, and it is optional on ARMv7. NEON support is provided by a precompiler directive, so now we check if it exists before including NEON support.
With these changes, ZeroTier compiles and runs perfectly on my Raspberry Pi Zero (using USB NIC)","@dch I currently only have physical boards for ARMv6, nothing for ARMv7. It might be best currently to entirely omit NEON support from the FreeBSD port for the time being.
Over my free time this weekend, I'll try messing around with QEMU to see if I can get this to build and run on virtual ARM units, but I know those don't perfectly match real-world hardware.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,848,2018-09-13T04:36:34Z,2018-09-14T15:05:39Z,2018-09-14T16:39:06Z,MERGED,True,67,1,4,https://github.com/darkain,Fix compile on FreeBSD targeting ARMv6 (Raspberry Pi),5,[],https://github.com/zerotier/ZeroTierOne/pull/848,https://github.com/darkain,5,https://github.com/zerotier/ZeroTierOne/pull/848#issuecomment-421415670,"Attempting to compile ZeroTier on FreeBSD on ARM platforms such as older Raspberry Pi units results in the following error message:
fails to link: Source object ext/arm32-neon-salsa2012-asm/salsa2012.o has EABI version 0, but target zerotier-one has EABI version 5
EABI information has been added for the assembler.
Additionally, ARMv6 doesn't support NEON, and it is optional on ARMv7. NEON support is provided by a precompiler directive, so now we check if it exists before including NEON support.
With these changes, ZeroTier compiles and runs perfectly on my Raspberry Pi Zero (using USB NIC)","WALP, screw it. Amazon Prime free same-day shipping. I'll have a Pi 3B+ tonight to test both ARMv7 and ARMv8 builds on.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,853,2018-09-17T20:18:52Z,2018-09-25T22:32:40Z,2018-09-25T22:32:40Z,MERGED,True,7,36,1,https://github.com/darkain,Fix IPv6 address string representation,2,[],https://github.com/zerotier/ZeroTierOne/pull/853,https://github.com/darkain,1,https://github.com/zerotier/ZeroTierOne/pull/853,"Switch from using self-supplied to standards compliant versions of IP address to/from string/binary conversion functions.
The version in ZT didn't understand IPv6 :: (double-colon) syntax, and would improperly convert shorthand IPv6 strings into the wrong binary representation.
The version in ZT didn't generate shorthand IPv6 strings either, so this makes them easier to visually parse.
No change in IPv4 conversion other than using the standard library instead of ZT custom code.","Switch from using self-supplied to standards compliant versions of IP address to/from string/binary conversion functions.
The version in ZT didn't understand IPv6 :: (double-colon) syntax, and would improperly convert shorthand IPv6 strings into the wrong binary representation.
The version in ZT didn't generate shorthand IPv6 strings either, so this makes them easier to visually parse.
No change in IPv4 conversion other than using the standard library instead of ZT custom code.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,858,2018-09-23T23:58:51Z,2018-09-25T18:36:28Z,2018-09-25T18:36:37Z,MERGED,True,1,1,1,https://github.com/tommyang,macOS uninstall script: remove symlinks from the actual location,1,[],https://github.com/zerotier/ZeroTierOne/pull/858,https://github.com/tommyang,1,https://github.com/zerotier/ZeroTierOne/pull/858,Binary symlinks are in /usr/local/bin instead of /usr/bin since commit 0cf4ddd,Binary symlinks are in /usr/local/bin instead of /usr/bin since commit 0cf4ddd,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,858,2018-09-23T23:58:51Z,2018-09-25T18:36:28Z,2018-09-25T18:36:37Z,MERGED,True,1,1,1,https://github.com/tommyang,macOS uninstall script: remove symlinks from the actual location,1,[],https://github.com/zerotier/ZeroTierOne/pull/858,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/858#issuecomment-424454373,Binary symlinks are in /usr/local/bin instead of /usr/bin since commit 0cf4ddd,Merged into dev for next release.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,869,2018-10-21T14:35:25Z,2018-11-28T16:41:43Z,2020-03-04T13:24:58Z,MERGED,True,17,7,2,https://github.com/bltavares,Update ZeroTier version on Docker,1,[],https://github.com/zerotier/ZeroTierOne/pull/869,https://github.com/bltavares,1,https://github.com/zerotier/ZeroTierOne/pull/869,"This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682","This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682",True,"{'THUMBS_UP': ['https://github.com/sbilly', 'https://github.com/shvchk']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,869,2018-10-21T14:35:25Z,2018-11-28T16:41:43Z,2020-03-04T13:24:58Z,MERGED,True,17,7,2,https://github.com/bltavares,Update ZeroTier version on Docker,1,[],https://github.com/zerotier/ZeroTierOne/pull/869,https://github.com/bltavares,2,https://github.com/zerotier/ZeroTierOne/pull/869#issuecomment-431674559,"This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682","I would be happy to help setup the necessary changes on docker-library/official-images to get ZeroTier as an official image with multi-architecture support.
There is a CHECKLIST
Take for example Consul. You can see on their Docker Hub page that they have multiple architecture supported, so any Raspberry Pi or Linux will always just have to execute docker run consul, without even having to specify which platform to use, nor use a prefix.
This could help promote the project, given the discoverability and how simple it would be to run on any Linux, either a x86, AMD64 or ARM. Maybe it would be simpler to manage this if a zerotier/docker project is created, given consul's example",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,869,2018-10-21T14:35:25Z,2018-11-28T16:41:43Z,2020-03-04T13:24:58Z,MERGED,True,17,7,2,https://github.com/bltavares,Update ZeroTier version on Docker,1,[],https://github.com/zerotier/ZeroTierOne/pull/869,https://github.com/bltavares,3,https://github.com/zerotier/ZeroTierOne/pull/869#issuecomment-431676514,"This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682","For example, I've made this image multi-architecture.
Running the following both on VM or an a Raspberry Pi will provide the desired result:
docker run --device=/dev/net/tun \
    --net=host --cap-add=NET_ADMIN --cap-add=SYS_ADMIN \
    -d -v /var/lib/zerotier-one:/var/lib/zerotier-one -n zerotier-one \
    bltavares/zerotier
And we can see it provides multiple architectures running the following:
$ docker run --rm mplatform/mquery bltavares/zerotier
Image: bltavares/zerotier
 * Manifest List: Yes
 * Supported platforms:
   - linux/arm/v7
   - linux/amd64",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,869,2018-10-21T14:35:25Z,2018-11-28T16:41:43Z,2020-03-04T13:24:58Z,MERGED,True,17,7,2,https://github.com/bltavares,Update ZeroTier version on Docker,1,[],https://github.com/zerotier/ZeroTierOne/pull/869,https://github.com/bltavares,4,https://github.com/zerotier/ZeroTierOne/pull/869#issuecomment-442632581,"This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682","Hi there @adamierymenko. Thanks for landing this changes.
Would it be of interest of ZeroTier to have the Docker oficial-image created, as my comments above?
I would be glad to contact them and get the infra setup for the multi-platform automated builds, specially if it would help spread awareness of the awesome product being built here.
I suppose that after the initial setup, it would be a matter of keeping the version on the Dockerfile updated with new versions, and update the commit hash on docker-library/official-images. I'm available to answer any questions.",True,"{'THUMBS_UP': ['https://github.com/shvchk', 'https://github.com/krystiansliwa']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,869,2018-10-21T14:35:25Z,2018-11-28T16:41:43Z,2020-03-04T13:24:58Z,MERGED,True,17,7,2,https://github.com/bltavares,Update ZeroTier version on Docker,1,[],https://github.com/zerotier/ZeroTierOne/pull/869,https://github.com/hawkinchina,5,https://github.com/zerotier/ZeroTierOne/pull/869#issuecomment-591224662,"This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682","@bltavares
I use the docker images of https://hub.docker.com/r/bltavares/zerotier
it cannot work for arm64.
docker run  --device=/dev/net/tun  --net=host --cap-add=NET_ADMIN --cap-add=SYS_ADMIN -v ~/dockfile/zerotier:/var/lib/zerotier-one --name zerotier-one -d bltavares/zerotier
9bedd5f818163635d2ae2b6eba6019c55441720cb34d25ba261b3cfa82d4d9fa
docker: Error response from daemon: error gathering device information while adding custom device ""/dev/net/tun"": no such file or directory.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,869,2018-10-21T14:35:25Z,2018-11-28T16:41:43Z,2020-03-04T13:24:58Z,MERGED,True,17,7,2,https://github.com/bltavares,Update ZeroTier version on Docker,1,[],https://github.com/zerotier/ZeroTierOne/pull/869,https://github.com/bltavares,6,https://github.com/zerotier/ZeroTierOne/pull/869#issuecomment-591391376,"This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682","@hawkinchina
Given the error message, does the Docker host have the tun device?

""/dev/net/tun"": no such file or directory.

Maybe it needs a package, to use mknode or just a restart to have the system create the missing file.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,869,2018-10-21T14:35:25Z,2018-11-28T16:41:43Z,2020-03-04T13:24:58Z,MERGED,True,17,7,2,https://github.com/bltavares,Update ZeroTier version on Docker,1,[],https://github.com/zerotier/ZeroTierOne/pull/869,https://github.com/hawkinchina,7,https://github.com/zerotier/ZeroTierOne/pull/869#issuecomment-594520142,"This commit changes the Dockerfile ot use the multi-stage build and help
to get an automated build on Docker.
The idea of the multi-stage build is to use the already stable Debian
distribution channel to provide up-to-date versions of ZeroTier.
The benefit is that it would be possible to automate the image build,
either on Docker Hub, Travis or taking advantage of the docker-library/official-images infrastructure.
This changes follows the best-practices suggested by
docker-library/official-images, such as using a High Availability GPG
keyserver, providing a default CMD, allowing ""bash"" on docker run and
others.
Given that both the builder debian:stretch and alpine:latest are
official messages and have manifests, this means that this Dockerfile
is also multi-platform. This means that this same Dockerfile will
pick-up the correct Debian package according to the architecture of the
running system during build.
With this changes we could try to promote the image to be parte of
docker-library/official-images, and take advantage of automated
publishing of multi-architecture images. Others would be able to use
docker run zerotier and download the latest version appropriate to
their system.
Related to #682","@bltavares
hi, bltavares, thanks. I used the rk3399 arm board for this docker.  I tested this docker on MacOS, it was ok, and check the /dev/net/tun again ,  it was fine.  so  I knew  maybe the linux for arm had some problem.
the linux kernel of this board  did not have the TUN module  as default configuration while making.
Maybe i need get the source code of rk3399, set TUN module = Y ,and compile again.
thanks anyway.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,928,2019-03-12T12:40:01Z,2019-07-31T23:36:01Z,2019-07-31T23:36:01Z,CLOSED,False,1,1,1,https://github.com/jstasiak,Label time since last send/receive in listpeers output,1,[],https://github.com/zerotier/ZeroTierOne/pull/928,https://github.com/jstasiak,1,https://github.com/zerotier/ZeroTierOne/pull/928,"Took me longer than it should to find out what those values meant, this
label could be useful to others.","Took me longer than it should to find out what those values meant, this
label could be useful to others.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,928,2019-03-12T12:40:01Z,2019-07-31T23:36:01Z,2019-07-31T23:36:01Z,CLOSED,False,1,1,1,https://github.com/jstasiak,Label time since last send/receive in listpeers output,1,[],https://github.com/zerotier/ZeroTierOne/pull/928,https://github.com/laduke,2,https://github.com/zerotier/ZeroTierOne/pull/928#issuecomment-472117875,"Took me longer than it should to find out what those values meant, this
label could be useful to others.",Neat. Can you post an example of the output?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,928,2019-03-12T12:40:01Z,2019-07-31T23:36:01Z,2019-07-31T23:36:01Z,CLOSED,False,1,1,1,https://github.com/jstasiak,Label time since last send/receive in listpeers output,1,[],https://github.com/zerotier/ZeroTierOne/pull/928,https://github.com/jstasiak,3,https://github.com/zerotier/ZeroTierOne/pull/928#issuecomment-472122797,"Took me longer than it should to find out what those values meant, this
label could be useful to others.","Sure:
% ./zerotier-cli listpeers
200 listpeers <ztaddr> <path;time in ms since last send;time in ms since last receive> <latency> <version> <role>
200 listpeers 3610ad5189 - -1 1.2.12 LEAF
200 listpeers 8841408a2e 46.101.160.249/9993;3836;3754 176 1.1.5 PLANET
200 listpeers 9d219039f3 188.166.94.177/9993;3836;14395 307 1.1.5 PLANET
200 listpeers af78bf9436 35.236.10.22/44740;3644;3644 299 1.2.13 LEAF

I realise it's a bit on the verbose side but I chose that instead of risking being too terse. I also thought about something like this <path;time in ms since last send;...receive> but I'm not sure how I feel about it.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,928,2019-03-12T12:40:01Z,2019-07-31T23:36:01Z,2019-07-31T23:36:01Z,CLOSED,False,1,1,1,https://github.com/jstasiak,Label time since last send/receive in listpeers output,1,[],https://github.com/zerotier/ZeroTierOne/pull/928,https://github.com/laduke,4,https://github.com/zerotier/ZeroTierOne/pull/928#issuecomment-472141191,"Took me longer than it should to find out what those values meant, this
label could be useful to others.","Hmm, that would make zerotier-cli listpeers | column -t not line up anymore.
(I have no control over merging here, just think this is interesting)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,928,2019-03-12T12:40:01Z,2019-07-31T23:36:01Z,2019-07-31T23:36:01Z,CLOSED,False,1,1,1,https://github.com/jstasiak,Label time since last send/receive in listpeers output,1,[],https://github.com/zerotier/ZeroTierOne/pull/928,https://github.com/adamierymenko,5,https://github.com/zerotier/ZeroTierOne/pull/928#issuecomment-477688647,"Took me longer than it should to find out what those values meant, this
label could be useful to others.",Might tweak a bit and merge. Thanks!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,931,2019-04-06T08:55:47Z,2019-04-06T08:56:50Z,2019-04-06T08:56:50Z,CLOSED,False,30892,30016,274,https://github.com/mapgccv,Dev,236,[],https://github.com/zerotier/ZeroTierOne/pull/931,https://github.com/mapgccv,1,https://github.com/zerotier/ZeroTierOne/pull/931,"Dear all, for your consideration a POC of a status window for windows that lists networks and members in a user friendly way: it can be enabled on the main context menu by checking the item ""Status window"".
Is it something you are potentially interested in?","Dear all, for your consideration a POC of a status window for windows that lists networks and members in a user friendly way: it can be enabled on the main context menu by checking the item ""Status window"".
Is it something you are potentially interested in?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,932,2019-04-06T08:58:55Z,2019-06-11T17:54:07Z,2019-06-11T17:54:08Z,CLOSED,False,1149,16,15,https://github.com/mapgccv,Dev,9,[],https://github.com/zerotier/ZeroTierOne/pull/932,https://github.com/mapgccv,1,https://github.com/zerotier/ZeroTierOne/pull/932,"Dear all, for your consideration a POC of a status window for windows that lists networks and members in a user friendly way. You can enable it by checking the menu item ""Status window"" in the main context menu.
If it is something of interest I can refactor it to be a bit more robust and elegant - and better looking too.
Thanks!","Dear all, for your consideration a POC of a status window for windows that lists networks and members in a user friendly way. You can enable it by checking the menu item ""Status window"" in the main context menu.
If it is something of interest I can refactor it to be a bit more robust and elegant - and better looking too.
Thanks!",True,{'THUMBS_UP': ['https://github.com/hex11']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,932,2019-04-06T08:58:55Z,2019-06-11T17:54:07Z,2019-06-11T17:54:08Z,CLOSED,False,1149,16,15,https://github.com/mapgccv,Dev,9,[],https://github.com/zerotier/ZeroTierOne/pull/932,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/932#issuecomment-500953875,"Dear all, for your consideration a POC of a status window for windows that lists networks and members in a user friendly way. You can enable it by checking the menu item ""Status window"" in the main context menu.
If it is something of interest I can refactor it to be a bit more robust and elegant - and better looking too.
Thanks!","Just tried this out and it's completely broken.

It pops up a window on startup and we don't want that.
The window doesn't populate with anythong other than ""Loading networks"" and shows exceptions being thrown in the console output
The members view is also blank and shows exceptions being thrown in the console output
It looks like what you're going for on this is for partial management of https://my.zerotier.com.  We're actually moving away from that for the tray application and have removed many things related to that in the Windows tray app.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,952,2019-05-31T20:53:27Z,2019-06-03T18:02:01Z,2019-06-04T12:13:19Z,CLOSED,False,1,1,1,https://github.com/dch,clang 8.0 requires -frtti on FreeBSD 13.0-CURRENT,1,[],https://github.com/zerotier/ZeroTierOne/pull/952,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/952,"node/RingBuffer.hpp:320:8: error: use of typeid requires -frtti
                        if (typeid(T) == typeid(int)) {
                            ^
node/RingBuffer.hpp:320:21: error: use of typeid requires -frtti
                        if (typeid(T) == typeid(int)) {
                                         ^
2 errors generated.

As usual I know nothing about what this means, shrug but this makes the pain go away.","node/RingBuffer.hpp:320:8: error: use of typeid requires -frtti
                        if (typeid(T) == typeid(int)) {
                            ^
node/RingBuffer.hpp:320:21: error: use of typeid requires -frtti
                        if (typeid(T) == typeid(int)) {
                                         ^
2 errors generated.

As usual I know nothing about what this means, shrug but this makes the pain go away.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,952,2019-05-31T20:53:27Z,2019-06-03T18:02:01Z,2019-06-04T12:13:19Z,CLOSED,False,1,1,1,https://github.com/dch,clang 8.0 requires -frtti on FreeBSD 13.0-CURRENT,1,[],https://github.com/zerotier/ZeroTierOne/pull/952,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/952#issuecomment-498362924,"node/RingBuffer.hpp:320:8: error: use of typeid requires -frtti
                        if (typeid(T) == typeid(int)) {
                            ^
node/RingBuffer.hpp:320:21: error: use of typeid requires -frtti
                        if (typeid(T) == typeid(int)) {
                                         ^
2 errors generated.

As usual I know nothing about what this means, shrug but this makes the pain go away.","Thanks for discovering this, since this issue resides in a debug function I'll just comment it out so we don't need to add RTTI.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,963,2019-07-01T14:05:54Z,2019-07-29T17:23:10Z,2019-07-29T17:23:10Z,MERGED,True,5,0,1,https://github.com/atopuzov,Fix compiling on Raspberry PI Zero W on Arch Linux,1,[],https://github.com/zerotier/ZeroTierOne/pull/963,https://github.com/atopuzov,1,https://github.com/zerotier/ZeroTierOne/pull/963,"Should also fix it for Raspberry PI 1

[root@pizero ZeroTierOne-1.2.12]# cat /proc/device-tree/model
Raspberry Pi Zero W Rev 1.1

[root@pizero ZeroTierOne-1.2.12]# uname -a
Linux pizero 4.19.56-2-ARCH #1 SMP PREEMPT Thu Jun 27 01:19:12 UTC 2019 armv6l GNU/Linux

[root@pizero ZeroTierOne-1.2.12]# gcc -dumpmachine | cut -d '-' -f 1
armv6l

[root@pizero ZeroTierOne-1.2.12]# cat /proc/cpuinfo
processor       : 0
model name      : ARMv6-compatible processor rev 7 (v6l)
BogoMIPS        : 697.95
Features        : half thumb fastmult vfp edsp java tls
CPU implementer : 0x41
CPU architecture: 7
CPU variant     : 0x0
CPU part        : 0xb76
CPU revision    : 7

Hardware        : BCM2835
Revision        : 9000c1
Serial          : 00000000d29b71b4","Should also fix it for Raspberry PI 1

[root@pizero ZeroTierOne-1.2.12]# cat /proc/device-tree/model
Raspberry Pi Zero W Rev 1.1

[root@pizero ZeroTierOne-1.2.12]# uname -a
Linux pizero 4.19.56-2-ARCH #1 SMP PREEMPT Thu Jun 27 01:19:12 UTC 2019 armv6l GNU/Linux

[root@pizero ZeroTierOne-1.2.12]# gcc -dumpmachine | cut -d '-' -f 1
armv6l

[root@pizero ZeroTierOne-1.2.12]# cat /proc/cpuinfo
processor       : 0
model name      : ARMv6-compatible processor rev 7 (v6l)
BogoMIPS        : 697.95
Features        : half thumb fastmult vfp edsp java tls
CPU implementer : 0x41
CPU architecture: 7
CPU variant     : 0x0
CPU part        : 0xb76
CPU revision    : 7

Hardware        : BCM2835
Revision        : 9000c1
Serial          : 00000000d29b71b4",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,973,2019-07-19T00:49:24Z,2019-07-29T17:22:37Z,2019-07-29T22:01:06Z,MERGED,True,13,11,1,https://github.com/unquietwiki,Update Dockerfile,1,[],https://github.com/zerotier/ZeroTierOne/pull/973,https://github.com/unquietwiki,1,https://github.com/zerotier/ZeroTierOne/pull/973,Update Dockerfile to use Debian 10 + pull the main.sh directly from Github; works for Portainer use.,Update Dockerfile to use Debian 10 + pull the main.sh directly from Github; works for Portainer use.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,974,2019-07-22T04:47:18Z,2019-07-29T17:21:36Z,2019-07-29T17:21:36Z,MERGED,True,11,17,4,https://github.com/squeakbat,Don't relink zerotier-one every time.,4,[],https://github.com/zerotier/ZeroTierOne/pull/974,https://github.com/squeakbat,1,https://github.com/zerotier/ZeroTierOne/pull/974,"Because zerotier-one depends on ""one"", which is a phony target,
making it relinks zerotier-one every time, which is probably
not the desired behavior.
In any case, zerotier-one, zerotier-cli, and zerotier-idtool are
real target, so they should have real dependencies and actions.
The ""one"" target now depends on these three files.
Behavior is mostly unchanged otherwise.","Because zerotier-one depends on ""one"", which is a phony target,
making it relinks zerotier-one every time, which is probably
not the desired behavior.
In any case, zerotier-one, zerotier-cli, and zerotier-idtool are
real target, so they should have real dependencies and actions.
The ""one"" target now depends on these three files.
Behavior is mostly unchanged otherwise.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,974,2019-07-22T04:47:18Z,2019-07-29T17:21:36Z,2019-07-29T17:21:36Z,MERGED,True,11,17,4,https://github.com/squeakbat,Don't relink zerotier-one every time.,4,[],https://github.com/zerotier/ZeroTierOne/pull/974,https://github.com/squeakbat,2,https://github.com/zerotier/ZeroTierOne/pull/974#issuecomment-513638715,"Because zerotier-one depends on ""one"", which is a phony target,
making it relinks zerotier-one every time, which is probably
not the desired behavior.
In any case, zerotier-one, zerotier-cli, and zerotier-idtool are
real target, so they should have real dependencies and actions.
The ""one"" target now depends on these three files.
Behavior is mostly unchanged otherwise.",I made my change based on master.  Not sure that the correct procedure is.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1012,2019-08-17T20:52:08Z,2019-08-21T15:14:39Z,2019-08-21T15:14:39Z,MERGED,True,0,1,1,https://github.com/wendelb,Controller-Docs little cleanup,1,[],https://github.com/zerotier/ZeroTierOne/pull/1012,https://github.com/wendelb,1,https://github.com/zerotier/ZeroTierOne/pull/1012,"In the controller Readme, the line for creationTime exists twice. This PR removed the second instance.
It threw me off while converting the table into code.","In the controller Readme, the line for creationTime exists twice. This PR removed the second instance.
It threw me off while converting the table into code.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1026,2019-09-02T10:03:01Z,2019-09-03T07:49:40Z,2019-11-02T04:46:56Z,CLOSED,False,1,1,1,https://github.com/AlexisTM,Fix ubuntu service to ensure Zerotier stops nicely.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1026,https://github.com/AlexisTM,1,https://github.com/zerotier/ZeroTierOne/pull/1026,"As explained in #738, the Ubuntu service is not stopping properly. It was initially due to the missing  Wants=network-online.target but is now caused by the wrong After argument.
Changing the service argument from After=network-online.target to After=network.target will ensure the service to stop nicely and avoid the 90 seconds delay before Ubuntu kills Zerotier.
It was only tested on Ubuntu 18.04.","As explained in #738, the Ubuntu service is not stopping properly. It was initially due to the missing  Wants=network-online.target but is now caused by the wrong After argument.
Changing the service argument from After=network-online.target to After=network.target will ensure the service to stop nicely and avoid the 90 seconds delay before Ubuntu kills Zerotier.
It was only tested on Ubuntu 18.04.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1026,2019-09-02T10:03:01Z,2019-09-03T07:49:40Z,2019-11-02T04:46:56Z,CLOSED,False,1,1,1,https://github.com/AlexisTM,Fix ubuntu service to ensure Zerotier stops nicely.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1026,https://github.com/AlexisTM,2,https://github.com/zerotier/ZeroTierOne/pull/1026#issuecomment-527346629,"As explained in #738, the Ubuntu service is not stopping properly. It was initially due to the missing  Wants=network-online.target but is now caused by the wrong After argument.
Changing the service argument from After=network-online.target to After=network.target will ensure the service to stop nicely and avoid the 90 seconds delay before Ubuntu kills Zerotier.
It was only tested on Ubuntu 18.04.",This fix doesn't work all the time. I still get to wait from time to time.,True,{'CONFUSED': ['https://github.com/JackPShafer']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1026,2019-09-02T10:03:01Z,2019-09-03T07:49:40Z,2019-11-02T04:46:56Z,CLOSED,False,1,1,1,https://github.com/AlexisTM,Fix ubuntu service to ensure Zerotier stops nicely.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1026,https://github.com/JackPShafer,3,https://github.com/zerotier/ZeroTierOne/pull/1026#issuecomment-549010501,"As explained in #738, the Ubuntu service is not stopping properly. It was initially due to the missing  Wants=network-online.target but is now caused by the wrong After argument.
Changing the service argument from After=network-online.target to After=network.target will ensure the service to stop nicely and avoid the 90 seconds delay before Ubuntu kills Zerotier.
It was only tested on Ubuntu 18.04.","@AlexisTM Yeah, it now sometimes works and sometimes doesn't :(",True,{'CONFUSED': ['https://github.com/AlexisTM']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1031,2019-09-08T00:22:52Z,2021-09-01T18:34:21Z,2021-09-01T18:34:21Z,CLOSED,False,6,2,1,https://github.com/ajd4096,Fix missing return value compile warning,1,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1031,https://github.com/ajd4096,1,https://github.com/zerotier/ZeroTierOne/pull/1031,"This fixes #987, tested on OpenBSD 6.4 amd64, OpenBSD 6.4 i386, OpenBSD 6.5 i386","This fixes #987, tested on OpenBSD 6.4 amd64, OpenBSD 6.4 i386, OpenBSD 6.5 i386",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1031,2019-09-08T00:22:52Z,2021-09-01T18:34:21Z,2021-09-01T18:34:21Z,CLOSED,False,6,2,1,https://github.com/ajd4096,Fix missing return value compile warning,1,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1031,https://github.com/ajd4096,2,https://github.com/zerotier/ZeroTierOne/pull/1031#issuecomment-529158916,"This fixes #987, tested on OpenBSD 6.4 amd64, OpenBSD 6.4 i386, OpenBSD 6.5 i386","The original warning was:
$ gmake
eg++ -O3 -fstack-protector -Wall -fPIE -fvisibility=hidden -fstack-protector -pthread  -DNDEBUG  -DZT_USE_X64_ASM_
SALSA2012 -DZT_BUILD_PLATFORM=9 -DZT_BUILD_ARCHITECTURE=2 -DZT_SOFTWARE_UPDATE_DEFAULT=""\""disable\"""" -std=c++11
 -c -o node/C25519.o node/C25519.cpp
In file included from node/C25519.hpp:17:0,
                 from node/C25519.cpp:15:
node/Utils.hpp: In static member function 'static uint64_t ZeroTier::Utils::hton(uint64_t)':
node/Utils.hpp:396:2: warning: no return statement in function returning non-void [-Wreturn-type]
  }
  ^
node/Utils.hpp: In static member function 'static uint64_t ZeroTier::Utils::ntoh(uint64_t)':
node/Utils.hpp:429:2: warning: no return statement in function returning non-void [-Wreturn-type]
  }",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1031,2019-09-08T00:22:52Z,2021-09-01T18:34:21Z,2021-09-01T18:34:21Z,CLOSED,False,6,2,1,https://github.com/ajd4096,Fix missing return value compile warning,1,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1031,https://github.com/dch,3,https://github.com/zerotier/ZeroTierOne/pull/1031#issuecomment-565347403,"This fixes #987, tested on OpenBSD 6.4 amd64, OpenBSD 6.4 i386, OpenBSD 6.5 i386",FWIW the 100% CPU peg bug still happens even with #1031 applied.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1031,2019-09-08T00:22:52Z,2021-09-01T18:34:21Z,2021-09-01T18:34:21Z,CLOSED,False,6,2,1,https://github.com/ajd4096,Fix missing return value compile warning,1,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1031,https://github.com/dch,4,https://github.com/zerotier/ZeroTierOne/pull/1031#issuecomment-565347483,"This fixes #987, tested on OpenBSD 6.4 amd64, OpenBSD 6.4 i386, OpenBSD 6.5 i386",but +1 LGTM this at least should go in,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1031,2019-09-08T00:22:52Z,2021-09-01T18:34:21Z,2021-09-01T18:34:21Z,CLOSED,False,6,2,1,https://github.com/ajd4096,Fix missing return value compile warning,1,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1031,https://github.com/joseph-henry,5,https://github.com/zerotier/ZeroTierOne/pull/1031#issuecomment-910554016,"This fixes #987, tested on OpenBSD 6.4 amd64, OpenBSD 6.4 i386, OpenBSD 6.5 i386","As far as I can tell this issue has been resolved. A more generic swapBytes should handle the OpenBSD case so long as __GNUC__ is defined. Going to close this without merging but if I'm wrong please re-open. As always, thanks for the effort on this.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/liweitianux,1,https://github.com/zerotier/ZeroTierOne/pull/1043,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron",True,{'THUMBS_UP': ['https://github.com/dch']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/dch,2,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-579635577,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron",@liweitianux I can add this as a diff to the FreeBSD ports if that helps DFly,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/liweitianux,3,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-579640232,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","@dch , That would be great. Thank you very much for the help.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/dch,4,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-638394984,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron",@liweitianux sorry this got lost in covid - https://reviews.freebsd.org/D25124 if that works for you I'll commit it downstream in ports,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/liweitianux,5,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-639558962,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","@dch, I've tested your patch to the net/zerotier port and it works well. Thanks you and hope you and your family are fine.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/unquietwiki,6,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-696443723,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","@liweitianux @dch We're trying to get ready for 1.6.0, and I noticed that this was already in FreshPorts. Did you have to make any additional changes, or can update here so we can integrate accordingly? Thanks!",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/liweitianux,7,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-699753371,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","Hi @unquietwiki, I don't have additional changes to push; this PR should be enough for me.  By the way, I've been using ZeroTier on my DragonFly BSD desktop since this PR, and it works great.  Thank you for the nice work and for this help.
Regards,
Aaron",True,{'THUMBS_UP': ['https://github.com/unquietwiki']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/unquietwiki,8,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-699796272,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron",@liweitianux No problem. The rest of the team is supposed to assess PRs soon; thank you for doing this!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/adamierymenko,9,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-703936474,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","Closing as a 'wont fix' for v1, while v2 uses cmake and is a heavily refactored code base. Cmake should fix this problem.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/liweitianux,10,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-748593624,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","@adamierymenko Hi, is it OK to get DragonFly BSD into the v1 versions? Considering that v1 is still the production version and FreeBSD and DragonFly BSD and other OSes are still using this version.
I've rebased this PR against the latest master. So please consider and reopen this PR.  Thank you.
By the way, I'll also try the v2 version (I think it's on the edge branch) and get it working on DragonFly BSD.
Regards.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/dch,11,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-925252647,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron",@liweitianux let me know if you have a new version of this for cmake etc  for DFLY.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1043,2019-09-22T13:28:46Z,2020-10-05T23:09:23Z,2021-09-23T06:53:42Z,CLOSED,False,45,14,10,https://github.com/liweitianux,Support DragonFly BSD,3,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1043,https://github.com/liweitianux,12,https://github.com/zerotier/ZeroTierOne/pull/1043#issuecomment-925548371,"DragonFly BSD is a fork of FreeBSD 4.8 in 2003. They share many similarities, so this patch makes ZeroTierOne build and work in the similar way as on FreeBSD, except for the following two differences:

DragonFly BSD doesn't have getifmaddrs(3).
DragonFly BSD's tap(4) interface doesn't support to set MTU (well, until revision 500708).

I have tested that ZeroTierOne builds and works fine on the latest DragonFly BSD (master version as of 2019-09-17):
DragonFly v5.7.0.531.gb7d3e1-DEVELOPMENT #0: Tue Sep 17 16:13:34 UTC 2019
Meanwhile, define ZT_DEBUG_TRACE in make-bsd.mk when build the debug version.
In addition, I use the spare number 8 for ZT_BUILD_PLATFORM on DragonFly BSD.  If it's not OK, we can just change this.
Thank you for reviewing this patch.
Cheers,
Aaron","@dch, thank you for the reminder. I'll work on a new patch during the coming National Holiday (Oct 1 - 7). Will let you know when it's ready 😄",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1081,2019-11-14T09:17:11Z,2019-11-14T18:30:30Z,2019-11-15T08:50:38Z,MERGED,True,1,1,1,https://github.com/0xflotus,fixed small error,1,[],https://github.com/zerotier/ZeroTierOne/pull/1081,https://github.com/0xflotus,1,https://github.com/zerotier/ZeroTierOne/pull/1081,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1082,2019-11-15T18:33:32Z,2019-11-15T18:35:13Z,2019-11-15T18:35:19Z,MERGED,True,20,0,1,https://github.com/laduke,Add Managed Routes example to controller readme.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1082,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1082,A few people have asked about this in the chat recently,A few people have asked about this in the chat recently,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1087,2019-11-19T16:46:09Z,2019-11-19T16:47:39Z,2019-11-19T16:47:39Z,MERGED,True,1,1,1,https://github.com/dch,drop -Werror from DEBUG builds,1,[],https://github.com/zerotier/ZeroTierOne/pull/1087,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/1087,"appease compilers
thanks @glimberg for the diff
Closes #1086","appease compilers
thanks @glimberg for the diff
Closes #1086",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/keur,1,https://github.com/zerotier/ZeroTierOne/pull/1093,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in","On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in",True,"{'THUMBS_UP': ['https://github.com/AlexisTM', 'https://github.com/Fantu', 'https://github.com/marcosx86', 'https://github.com/Arnie97', 'https://github.com/grinderz', 'https://github.com/eastack', 'https://github.com/MeinAccount', 'https://github.com/Aetf', 'https://github.com/SeerLite', 'https://github.com/paweljacewicz', 'https://github.com/WGH-', 'https://github.com/vosian', 'https://github.com/hannut', 'https://github.com/traverseda', 'https://github.com/laduke', 'https://github.com/dec0dOS', 'https://github.com/BratishkaErik']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/HaleTom,2,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-578387290,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in","I'd suggest the following additions:
[Unit]
# Shutdown zerotier before tearing down the network
# https://github.com/zerotier/ZeroTierOne/pull/1093/commits/c9f07e855e2abac9c1a29cd412d888500a6a0bbb
After=network.target

# Wait for connectivity (as well as networking) before starting (if NetworkManager-wait-online.service is enabled)
After=NetworkManager-wait-online.service

[Service]
# Override default 90 second timeout in pathological conditions
TimeoutStopSec=5

Have this config be applied on top of (override) the default by editing via:
 sudo EDITOR=vi systemctl edit zerotier-one && sudo systemctl daemon-reload

Check applied config:
systemctl cat zerotier-one",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/keur,3,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-578426814,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in",@HaleTom Thanks. But it looks like they are going to let this PR sit forever.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/marcosx86,4,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-596093145,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in",Confirming that happens on Debian 9 and 10,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/laduke,5,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-596648327,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in","In the mean time, between releases
sudo systemctl edit zerotier-one --full
https://www.digitalocean.com/community/tutorials/how-to-use-systemctl-to-manage-systemd-services-and-units#editing-unit-files",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/thurstylark,6,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-638442962,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in","I am also having this issue on Arch.
I would not use After=NetworkManager-wait-online.service as suggested because NM isn't guaranteed to be in use on every system
I would add TimeoutStopSec=5 as there shouldn't be any reason for ZT-O to hold up boot for more than that long. If there is, this can be overridden by the system admin.
Will test these options out and report back.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/HaleTom,7,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-656468784,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in","@thurstylark I tested on my system:
systemctl disable --now NetworkManager-wait-online.service

Things still start fine with the line:
After=NetworkManager-wait-online.service

It's an ordering, not a dependency (man page on After=):

Note that those settings are independent of and orthogonal to the requirement dependencies as configured by Requires=, Wants=, Requisite=, or BindsTo=. It is a common pattern to include a unit name in both the After= and Wants= options, in which case the unit listed will be started before the unit that is configured with these options.

So the line
After=NetworkManager-wait-online.service

should be there, in case NetworkManager-wait-online.service is enabled.
I edited my post above, to make it more tutorial-like (and updated the comments re non-necessity of NetworkManager)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/HaleTom,8,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-656472735,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in","@keur Given the above, would you please update the After line to be:
After=network-online.target network.target NetworkManager-wait-online.service",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1093,2019-11-28T00:20:34Z,2022-02-11T23:03:19Z,2022-02-11T23:03:19Z,MERGED,True,1,1,1,https://github.com/keur,systemd: fix zerotier hanging on shutdown,1,"['Type: Bug', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1093,https://github.com/traverseda,9,https://github.com/zerotier/ZeroTierOne/pull/1093#issuecomment-734957369,"On system shutdown, zerotier is stopped after the network and gets
itself into a connection timeout loop. It hits the TimeoutStopUSec= and
is forcibly killed by SIGKILL. Instead, order zerotier after
network.target so it can shutdown gracefully while the network is still
up.
From systemd.special(7):
at shutdown, a unit that is ordered after network.target will be stopped
before the network — to whatever level it might be set up then — is shut
down. It is hence useful when writing service files that require network
access on shutdown, which should order themselves after this target, but
not pull it in",Is this something we can get merged in? It would be nice to not have to edit this file for every device.,True,"{'THUMBS_UP': ['https://github.com/MarkoPaasila', 'https://github.com/alatteri', 'https://github.com/dec0dOS', 'https://github.com/Fantu', 'https://github.com/Paragoumba', 'https://github.com/AD-Wright', 'https://github.com/bwrsandman', 'https://github.com/foxpy', 'https://github.com/apfelchips', 'https://github.com/philclifford']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1100,2019-12-05T03:52:04Z,2019-12-05T16:53:04Z,2019-12-05T16:53:04Z,CLOSED,False,17,0,1,https://github.com/antarioj,new2,1,[],https://github.com/zerotier/ZeroTierOne/pull/1100,https://github.com/antarioj,1,https://github.com/zerotier/ZeroTierOne/pull/1100,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1100,2019-12-05T03:52:04Z,2019-12-05T16:53:04Z,2019-12-05T16:53:04Z,CLOSED,False,17,0,1,https://github.com/antarioj,new2,1,[],https://github.com/zerotier/ZeroTierOne/pull/1100,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/1100#issuecomment-562215865,,"Pull requests are only accepted against the dev branch.  Additionally, there's no description of what your pull request is for.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1110,2019-12-21T03:35:46Z,2022-03-07T18:53:15Z,2022-03-07T19:42:51Z,MERGED,True,2,0,1,https://github.com/neheb,LinuxNetLink: Add cerrno header for (str)errno,1,"['Type: CI / Build problem', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1110,https://github.com/neheb,1,https://github.com/zerotier/ZeroTierOne/pull/1110,Fixes compilation under libcxx.,Fixes compilation under libcxx.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1110,2019-12-21T03:35:46Z,2022-03-07T18:53:15Z,2022-03-07T19:42:51Z,MERGED,True,2,0,1,https://github.com/neheb,LinuxNetLink: Add cerrno header for (str)errno,1,"['Type: CI / Build problem', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1110,https://github.com/neheb,2,https://github.com/zerotier/ZeroTierOne/pull/1110#issuecomment-735672146,Fixes compilation under libcxx.,Rebased.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1123,2020-01-09T02:59:27Z,,2020-09-22T00:07:34Z,OPEN,False,20,38,2,https://github.com/fakuivan,Fix permissive filter and check 6plane for outbound packets,1,"['Type: Bug', 'Networking & Routing']",https://github.com/zerotier/ZeroTierOne/pull/1123,https://github.com/fakuivan,1,https://github.com/zerotier/ZeroTierOne/pull/1123,"As far as I understand it, the changes made in 52a166a to attempt to solve #990 made it so that any NDP emulated address would count as valid source for an inbound packet, regardless of the sender node.
Also, the output of _isV6NDPEmulated is only taken into account when marking inbound packets as ZT_RULE_PACKET_CHARACTERISTICS_SENDER_IP_AUTHENTICATED, outbound packets from the 6plane /80 subnet (other than ::1) would not get this this flag and thus dropped by the sender before they can get validated by the reciever as authentitcated (node/Network.cpp#387), I'm not sure the changes I made on that file are valid, so please provide feedback on this if possible.","As far as I understand it, the changes made in 52a166a to attempt to solve #990 made it so that any NDP emulated address would count as valid source for an inbound packet, regardless of the sender node.
Also, the output of _isV6NDPEmulated is only taken into account when marking inbound packets as ZT_RULE_PACKET_CHARACTERISTICS_SENDER_IP_AUTHENTICATED, outbound packets from the 6plane /80 subnet (other than ::1) would not get this this flag and thus dropped by the sender before they can get validated by the reciever as authentitcated (node/Network.cpp#387), I'm not sure the changes I made on that file are valid, so please provide feedback on this if possible.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1147,2020-02-28T02:48:23Z,2021-09-16T17:25:38Z,2021-09-16T17:25:38Z,CLOSED,False,27,1,1,https://github.com/bradsoto,Build tap driver for arm64 on Windows,1,"['Type: CI / Build problem', 'Windows']",https://github.com/zerotier/ZeroTierOne/pull/1147,https://github.com/bradsoto,1,https://github.com/zerotier/ZeroTierOne/pull/1147,"I was able to successfully build a load the driver on arm64 Windows. These are my notes.
Install Visual Studio 2017 Community with these individual components:

Visual C++ compilers and libraries for ARM64
Windows 10 SDK (10.0.16299.0) for Desktop C++ [ARMand ARM64]

Download and install WDK for Windows 10, version 1709. If the extension does not install run C:\Program Files (x86)\Windows Kits\10\Vsix\WDK.vsix. Give yourself modify permissions on the C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys folder.
Change zttap300.inf
; To build for x86, take NTamd64 off this and off the named section manually, build, then put it back!
[Manufacturer]
%Provider%=zttap300,NTarm64

[zttap300]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

[zttap300.NTarm64]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

Open Developer Command Prompt for VS 2017 in the TapDriver6 directory
set STAMPINF_VERSION=3.00.00.0
msbuild /p:Configuration=""Win10 Release"";Platform=arm64
Enable testsigning and the driver will install.","I was able to successfully build a load the driver on arm64 Windows. These are my notes.
Install Visual Studio 2017 Community with these individual components:

Visual C++ compilers and libraries for ARM64
Windows 10 SDK (10.0.16299.0) for Desktop C++ [ARMand ARM64]

Download and install WDK for Windows 10, version 1709. If the extension does not install run C:\Program Files (x86)\Windows Kits\10\Vsix\WDK.vsix. Give yourself modify permissions on the C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys folder.
Change zttap300.inf
; To build for x86, take NTamd64 off this and off the named section manually, build, then put it back!
[Manufacturer]
%Provider%=zttap300,NTarm64

[zttap300]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

[zttap300.NTarm64]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

Open Developer Command Prompt for VS 2017 in the TapDriver6 directory
set STAMPINF_VERSION=3.00.00.0
msbuild /p:Configuration=""Win10 Release"";Platform=arm64
Enable testsigning and the driver will install.",True,{'THUMBS_UP': ['https://github.com/laem']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1147,2020-02-28T02:48:23Z,2021-09-16T17:25:38Z,2021-09-16T17:25:38Z,CLOSED,False,27,1,1,https://github.com/bradsoto,Build tap driver for arm64 on Windows,1,"['Type: CI / Build problem', 'Windows']",https://github.com/zerotier/ZeroTierOne/pull/1147,https://github.com/laem,2,https://github.com/zerotier/ZeroTierOne/pull/1147#issuecomment-614723952,"I was able to successfully build a load the driver on arm64 Windows. These are my notes.
Install Visual Studio 2017 Community with these individual components:

Visual C++ compilers and libraries for ARM64
Windows 10 SDK (10.0.16299.0) for Desktop C++ [ARMand ARM64]

Download and install WDK for Windows 10, version 1709. If the extension does not install run C:\Program Files (x86)\Windows Kits\10\Vsix\WDK.vsix. Give yourself modify permissions on the C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys folder.
Change zttap300.inf
; To build for x86, take NTamd64 off this and off the named section manually, build, then put it back!
[Manufacturer]
%Provider%=zttap300,NTarm64

[zttap300]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

[zttap300.NTarm64]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

Open Developer Command Prompt for VS 2017 in the TapDriver6 directory
set STAMPINF_VERSION=3.00.00.0
msbuild /p:Configuration=""Win10 Release"";Platform=arm64
Enable testsigning and the driver will install.",@bradsoto is there a way to use what you've compiled until this PR is merged 🙂 ?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1147,2020-02-28T02:48:23Z,2021-09-16T17:25:38Z,2021-09-16T17:25:38Z,CLOSED,False,27,1,1,https://github.com/bradsoto,Build tap driver for arm64 on Windows,1,"['Type: CI / Build problem', 'Windows']",https://github.com/zerotier/ZeroTierOne/pull/1147,https://github.com/Aidas777,3,https://github.com/zerotier/ZeroTierOne/pull/1147#issuecomment-653201843,"I was able to successfully build a load the driver on arm64 Windows. These are my notes.
Install Visual Studio 2017 Community with these individual components:

Visual C++ compilers and libraries for ARM64
Windows 10 SDK (10.0.16299.0) for Desktop C++ [ARMand ARM64]

Download and install WDK for Windows 10, version 1709. If the extension does not install run C:\Program Files (x86)\Windows Kits\10\Vsix\WDK.vsix. Give yourself modify permissions on the C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys folder.
Change zttap300.inf
; To build for x86, take NTamd64 off this and off the named section manually, build, then put it back!
[Manufacturer]
%Provider%=zttap300,NTarm64

[zttap300]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

[zttap300.NTarm64]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

Open Developer Command Prompt for VS 2017 in the TapDriver6 directory
set STAMPINF_VERSION=3.00.00.0
msbuild /p:Configuration=""Win10 Release"";Platform=arm64
Enable testsigning and the driver will install.","Hi,
Could you please share zttap300.inf (if it is enough to install the driver) for ARM64 Win 10 Home ?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1147,2020-02-28T02:48:23Z,2021-09-16T17:25:38Z,2021-09-16T17:25:38Z,CLOSED,False,27,1,1,https://github.com/bradsoto,Build tap driver for arm64 on Windows,1,"['Type: CI / Build problem', 'Windows']",https://github.com/zerotier/ZeroTierOne/pull/1147,https://github.com/xinmodao,4,https://github.com/zerotier/ZeroTierOne/pull/1147#issuecomment-745156273,"I was able to successfully build a load the driver on arm64 Windows. These are my notes.
Install Visual Studio 2017 Community with these individual components:

Visual C++ compilers and libraries for ARM64
Windows 10 SDK (10.0.16299.0) for Desktop C++ [ARMand ARM64]

Download and install WDK for Windows 10, version 1709. If the extension does not install run C:\Program Files (x86)\Windows Kits\10\Vsix\WDK.vsix. Give yourself modify permissions on the C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys folder.
Change zttap300.inf
; To build for x86, take NTamd64 off this and off the named section manually, build, then put it back!
[Manufacturer]
%Provider%=zttap300,NTarm64

[zttap300]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

[zttap300.NTarm64]
%DeviceDescription% = zttap300.ndi, root\zttap300 ; Root enumerated
%DeviceDescription% = zttap300.ndi, zttap300      ; Legacy

Open Developer Command Prompt for VS 2017 in the TapDriver6 directory
set STAMPINF_VERSION=3.00.00.0
msbuild /p:Configuration=""Win10 Release"";Platform=arm64
Enable testsigning and the driver will install.","@bradsoto  HI，Compile according to your steps, but prompt ""Could not load file or assembly 'Microsoft.UniversalStore.HardwareWorkflow.InfReader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=4458b0725dc83cac' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)  Signability test failed.""
Please share your compiled tap driver for windows ARM64.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1159,2020-03-14T20:30:09Z,2020-10-05T23:11:21Z,2020-10-05T23:11:21Z,CLOSED,False,30,8,7,https://github.com/laffer1,Add support for MidnightBSD. Tested on 1.2 stable.,1,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1159,https://github.com/laffer1,1,https://github.com/zerotier/ZeroTierOne/pull/1159,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1159,2020-03-14T20:30:09Z,2020-10-05T23:11:21Z,2020-10-05T23:11:21Z,CLOSED,False,30,8,7,https://github.com/laffer1,Add support for MidnightBSD. Tested on 1.2 stable.,1,"['Type: CI / Build problem', 'BSD']",https://github.com/zerotier/ZeroTierOne/pull/1159,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/1159#issuecomment-703937133,,"1.2 is really, really ancient, and V2 will use cmake.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1187,2020-04-18T16:58:58Z,2022-03-07T18:52:41Z,2022-03-07T18:52:41Z,MERGED,True,6,1,1,https://github.com/rjsocha,Add description for Windows service,3,['Windows'],https://github.com/zerotier/ZeroTierOne/pull/1187,https://github.com/rjsocha,1,https://github.com/zerotier/ZeroTierOne/pull/1187,Cosmetic patch that add service description (for Windows),Cosmetic patch that add service description (for Windows),True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1191,2020-04-26T15:00:13Z,2020-11-25T00:25:54Z,2020-11-25T00:25:54Z,MERGED,True,5,0,1,https://github.com/athoik,Add support for armv7ve,1,"['Type: CI / Build problem', 'Embedded Devices', 'Android']",https://github.com/zerotier/ZeroTierOne/pull/1191,https://github.com/athoik,1,https://github.com/zerotier/ZeroTierOne/pull/1191,"This commit adds support for ARM armv7ve arch.
The extended version of the ARMv7-A architecture with support for virtualization.","This commit adds support for ARM armv7ve arch.
The extended version of the ARMv7-A architecture with support for virtualization.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1194,2020-04-29T10:58:52Z,2020-11-25T00:25:10Z,2020-11-25T00:25:11Z,MERGED,True,3,0,1,https://github.com/gutleib,Add support for Elbrus-family CPU,1,"['Type: CI / Build problem', 'Windows', 'Linux']",https://github.com/zerotier/ZeroTierOne/pull/1194,https://github.com/gutleib,1,https://github.com/zerotier/ZeroTierOne/pull/1194,"I've added lines to enable Elbrus (https://en.wikipedia.org/wiki/Elbrus-8S) microprocessor architecture. No changes in code, only in build procedure (recognize relevant ARCH output).","I've added lines to enable Elbrus (https://en.wikipedia.org/wiki/Elbrus-8S) microprocessor architecture. No changes in code, only in build procedure (recognize relevant ARCH output).",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1232,2020-07-14T12:26:12Z,2020-10-19T09:37:18Z,2020-10-19T09:38:32Z,CLOSED,False,3,3,1,https://github.com/diabonas,Fix compilation with GCC 10 by providing explicit cast of _bindingCount,1,"['Type: Bug', 'Type: CI / Build problem']",https://github.com/zerotier/ZeroTierOne/pull/1232,https://github.com/diabonas,1,https://github.com/zerotier/ZeroTierOne/pull/1232,"Compilation with GCC 10 fails with the following error:
service/../osdep/Binder.hpp: In member function ‘void ZeroTier::Binder::refresh(ZeroTier::Phy<PHY_HANDLER_TYPE>&, unsigned int*, unsigned int, std::vector<ZeroTier::InetAddress>, INTERFACE_CHECKER&)’:
service/../osdep/Binder.hpp:376:30: internal compiler error: unexpected expression ‘(std::__atomic_base<unsigned int>::__int_type)((ZeroTier::Binder*)this)->ZeroTier::Binder::_bindingCount’ of kind implicit_conv_expr
  376 |       _bindings[_bindingCount].udpSock = udps;
      |                              ^

Help the compiler by providing an explicit cast to the appropriate type like it is already done in l. 338 of the same file.
Fixes: #1213","Compilation with GCC 10 fails with the following error:
service/../osdep/Binder.hpp: In member function ‘void ZeroTier::Binder::refresh(ZeroTier::Phy<PHY_HANDLER_TYPE>&, unsigned int*, unsigned int, std::vector<ZeroTier::InetAddress>, INTERFACE_CHECKER&)’:
service/../osdep/Binder.hpp:376:30: internal compiler error: unexpected expression ‘(std::__atomic_base<unsigned int>::__int_type)((ZeroTier::Binder*)this)->ZeroTier::Binder::_bindingCount’ of kind implicit_conv_expr
  376 |       _bindings[_bindingCount].udpSock = udps;
      |                              ^

Help the compiler by providing an explicit cast to the appropriate type like it is already done in l. 338 of the same file.
Fixes: #1213",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1232,2020-07-14T12:26:12Z,2020-10-19T09:37:18Z,2020-10-19T09:38:32Z,CLOSED,False,3,3,1,https://github.com/diabonas,Fix compilation with GCC 10 by providing explicit cast of _bindingCount,1,"['Type: Bug', 'Type: CI / Build problem']",https://github.com/zerotier/ZeroTierOne/pull/1232,https://github.com/neheb,2,https://github.com/zerotier/ZeroTierOne/pull/1232#issuecomment-659081229,"Compilation with GCC 10 fails with the following error:
service/../osdep/Binder.hpp: In member function ‘void ZeroTier::Binder::refresh(ZeroTier::Phy<PHY_HANDLER_TYPE>&, unsigned int*, unsigned int, std::vector<ZeroTier::InetAddress>, INTERFACE_CHECKER&)’:
service/../osdep/Binder.hpp:376:30: internal compiler error: unexpected expression ‘(std::__atomic_base<unsigned int>::__int_type)((ZeroTier::Binder*)this)->ZeroTier::Binder::_bindingCount’ of kind implicit_conv_expr
  376 |       _bindings[_bindingCount].udpSock = udps;
      |                              ^

Help the compiler by providing an explicit cast to the appropriate type like it is already done in l. 338 of the same file.
Fixes: #1213",Can confirm this fixes it.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1232,2020-07-14T12:26:12Z,2020-10-19T09:37:18Z,2020-10-19T09:38:32Z,CLOSED,False,3,3,1,https://github.com/diabonas,Fix compilation with GCC 10 by providing explicit cast of _bindingCount,1,"['Type: Bug', 'Type: CI / Build problem']",https://github.com/zerotier/ZeroTierOne/pull/1232,https://github.com/diabonas,3,https://github.com/zerotier/ZeroTierOne/pull/1232#issuecomment-711928119,"Compilation with GCC 10 fails with the following error:
service/../osdep/Binder.hpp: In member function ‘void ZeroTier::Binder::refresh(ZeroTier::Phy<PHY_HANDLER_TYPE>&, unsigned int*, unsigned int, std::vector<ZeroTier::InetAddress>, INTERFACE_CHECKER&)’:
service/../osdep/Binder.hpp:376:30: internal compiler error: unexpected expression ‘(std::__atomic_base<unsigned int>::__int_type)((ZeroTier::Binder*)this)->ZeroTier::Binder::_bindingCount’ of kind implicit_conv_expr
  376 |       _bindings[_bindingCount].udpSock = udps;
      |                              ^

Help the compiler by providing an explicit cast to the appropriate type like it is already done in l. 338 of the same file.
Fixes: #1213","This issue does not occur for me any more using GCC 10.2.0 (it did with GCC 10.1.0), so I am closing this PR.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1233,2020-07-16T16:39:19Z,2020-11-25T00:24:36Z,2020-11-25T00:24:36Z,MERGED,True,33,33,10,https://github.com/dosuperuser,Minor C++ optimizations,2,[],https://github.com/zerotier/ZeroTierOne/pull/1233,https://github.com/dosuperuser,1,https://github.com/zerotier/ZeroTierOne/pull/1233,,,True,{'THUMBS_UP': ['https://github.com/mirzahalilcevic']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1257,2020-09-07T23:57:03Z,2021-06-29T18:44:53Z,2021-06-29T18:44:53Z,MERGED,True,7,2,1,https://github.com/thoradia,add ports to addresses specified by the bind setting,1,"['Type: Feature Request or Suggestion', 'Type: Documentation']",https://github.com/zerotier/ZeroTierOne/pull/1257,https://github.com/thoradia,1,https://github.com/zerotier/ZeroTierOne/pull/1257,"This addresses #1252
Ports are bound to the addresses specified in the bind settings
ps -ef | grep zero
  373 root      0:10 /storage/.kodi/addons/service.zerotier-one/bin/zerotier-one


more local.conf
{
  ""physical"": {
  },
  ""virtual"": {
  },
  ""settings"": {
    ""bind"": [ ""192.168.0.123"" ]
  }
}


zerotier-cli -j info
{
 ""address"": "".."",
 ""clock"": ..,
 ""config"": {
  ""physical"": {},
  ""settings"": {
   ""allowTcpFallbackRelay"": true,
   ""bind"": [
    ""192.168.0.123""
   ],
   ""controllerDbPath"": null,
   ""portMappingEnabled"": true,
   ""primaryPort"": 9993,
   ""rabbitmq"": null,
   ""softwareUpdate"": ""disable"",
   ""softwareUpdateChannel"": ""release""
  },
  ""virtual"": {}
 },
 ""online"": true,
 ""planetWorldId"": ..,
 ""planetWorldTimestamp"": ..,
 ""publicIdentity"": "".."",
 ""tcpFallbackActive"": false,
 ""version"": ""1.4.6"",
 ""versionBuild"": 0,
 ""versionMajor"": 1,
 ""versionMinor"": 4,
 ""versionRev"": 6
}


netstat -aptu | grep zero
tcp        0      0 192.168.0.123:23866     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:23867     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:9993      0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 localhost:9993          0.0.0.0:*               LISTEN      6368/zerotier-one
udp        0      0 192.168.0.123:9993      0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23866     0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23867     0.0.0.0:*                           6368/zerotier-one","This addresses #1252
Ports are bound to the addresses specified in the bind settings
ps -ef | grep zero
  373 root      0:10 /storage/.kodi/addons/service.zerotier-one/bin/zerotier-one


more local.conf
{
  ""physical"": {
  },
  ""virtual"": {
  },
  ""settings"": {
    ""bind"": [ ""192.168.0.123"" ]
  }
}


zerotier-cli -j info
{
 ""address"": "".."",
 ""clock"": ..,
 ""config"": {
  ""physical"": {},
  ""settings"": {
   ""allowTcpFallbackRelay"": true,
   ""bind"": [
    ""192.168.0.123""
   ],
   ""controllerDbPath"": null,
   ""portMappingEnabled"": true,
   ""primaryPort"": 9993,
   ""rabbitmq"": null,
   ""softwareUpdate"": ""disable"",
   ""softwareUpdateChannel"": ""release""
  },
  ""virtual"": {}
 },
 ""online"": true,
 ""planetWorldId"": ..,
 ""planetWorldTimestamp"": ..,
 ""publicIdentity"": "".."",
 ""tcpFallbackActive"": false,
 ""version"": ""1.4.6"",
 ""versionBuild"": 0,
 ""versionMajor"": 1,
 ""versionMinor"": 4,
 ""versionRev"": 6
}


netstat -aptu | grep zero
tcp        0      0 192.168.0.123:23866     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:23867     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:9993      0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 localhost:9993          0.0.0.0:*               LISTEN      6368/zerotier-one
udp        0      0 192.168.0.123:9993      0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23866     0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23867     0.0.0.0:*                           6368/zerotier-one",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1257,2020-09-07T23:57:03Z,2021-06-29T18:44:53Z,2021-06-29T18:44:53Z,MERGED,True,7,2,1,https://github.com/thoradia,add ports to addresses specified by the bind setting,1,"['Type: Feature Request or Suggestion', 'Type: Documentation']",https://github.com/zerotier/ZeroTierOne/pull/1257,https://github.com/StefanoBalocco,2,https://github.com/zerotier/ZeroTierOne/pull/1257#issuecomment-695833909,"This addresses #1252
Ports are bound to the addresses specified in the bind settings
ps -ef | grep zero
  373 root      0:10 /storage/.kodi/addons/service.zerotier-one/bin/zerotier-one


more local.conf
{
  ""physical"": {
  },
  ""virtual"": {
  },
  ""settings"": {
    ""bind"": [ ""192.168.0.123"" ]
  }
}


zerotier-cli -j info
{
 ""address"": "".."",
 ""clock"": ..,
 ""config"": {
  ""physical"": {},
  ""settings"": {
   ""allowTcpFallbackRelay"": true,
   ""bind"": [
    ""192.168.0.123""
   ],
   ""controllerDbPath"": null,
   ""portMappingEnabled"": true,
   ""primaryPort"": 9993,
   ""rabbitmq"": null,
   ""softwareUpdate"": ""disable"",
   ""softwareUpdateChannel"": ""release""
  },
  ""virtual"": {}
 },
 ""online"": true,
 ""planetWorldId"": ..,
 ""planetWorldTimestamp"": ..,
 ""publicIdentity"": "".."",
 ""tcpFallbackActive"": false,
 ""version"": ""1.4.6"",
 ""versionBuild"": 0,
 ""versionMajor"": 1,
 ""versionMinor"": 4,
 ""versionRev"": 6
}


netstat -aptu | grep zero
tcp        0      0 192.168.0.123:23866     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:23867     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:9993      0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 localhost:9993          0.0.0.0:*               LISTEN      6368/zerotier-one
udp        0      0 192.168.0.123:9993      0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23866     0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23867     0.0.0.0:*                           6368/zerotier-one","I built some deb packages for my servers (debian buster), for my desktop (ubuntu focal) and for my openwrt using this patch (and backporting another commit).
Seems that this resolve the problem, actually works flawless.",True,{'THUMBS_UP': ['https://github.com/thoradia']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1257,2020-09-07T23:57:03Z,2021-06-29T18:44:53Z,2021-06-29T18:44:53Z,MERGED,True,7,2,1,https://github.com/thoradia,add ports to addresses specified by the bind setting,1,"['Type: Feature Request or Suggestion', 'Type: Documentation']",https://github.com/zerotier/ZeroTierOne/pull/1257,https://github.com/StefanoBalocco,3,https://github.com/zerotier/ZeroTierOne/pull/1257#issuecomment-710578469,"This addresses #1252
Ports are bound to the addresses specified in the bind settings
ps -ef | grep zero
  373 root      0:10 /storage/.kodi/addons/service.zerotier-one/bin/zerotier-one


more local.conf
{
  ""physical"": {
  },
  ""virtual"": {
  },
  ""settings"": {
    ""bind"": [ ""192.168.0.123"" ]
  }
}


zerotier-cli -j info
{
 ""address"": "".."",
 ""clock"": ..,
 ""config"": {
  ""physical"": {},
  ""settings"": {
   ""allowTcpFallbackRelay"": true,
   ""bind"": [
    ""192.168.0.123""
   ],
   ""controllerDbPath"": null,
   ""portMappingEnabled"": true,
   ""primaryPort"": 9993,
   ""rabbitmq"": null,
   ""softwareUpdate"": ""disable"",
   ""softwareUpdateChannel"": ""release""
  },
  ""virtual"": {}
 },
 ""online"": true,
 ""planetWorldId"": ..,
 ""planetWorldTimestamp"": ..,
 ""publicIdentity"": "".."",
 ""tcpFallbackActive"": false,
 ""version"": ""1.4.6"",
 ""versionBuild"": 0,
 ""versionMajor"": 1,
 ""versionMinor"": 4,
 ""versionRev"": 6
}


netstat -aptu | grep zero
tcp        0      0 192.168.0.123:23866     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:23867     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:9993      0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 localhost:9993          0.0.0.0:*               LISTEN      6368/zerotier-one
udp        0      0 192.168.0.123:9993      0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23866     0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23867     0.0.0.0:*                           6368/zerotier-one","Why this is marked as suggestion when it fixes a ticket marked as bug?
It's a patch to correct a feature that isn't working.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1257,2020-09-07T23:57:03Z,2021-06-29T18:44:53Z,2021-06-29T18:44:53Z,MERGED,True,7,2,1,https://github.com/thoradia,add ports to addresses specified by the bind setting,1,"['Type: Feature Request or Suggestion', 'Type: Documentation']",https://github.com/zerotier/ZeroTierOne/pull/1257,https://github.com/thoradia,4,https://github.com/zerotier/ZeroTierOne/pull/1257#issuecomment-725635380,"This addresses #1252
Ports are bound to the addresses specified in the bind settings
ps -ef | grep zero
  373 root      0:10 /storage/.kodi/addons/service.zerotier-one/bin/zerotier-one


more local.conf
{
  ""physical"": {
  },
  ""virtual"": {
  },
  ""settings"": {
    ""bind"": [ ""192.168.0.123"" ]
  }
}


zerotier-cli -j info
{
 ""address"": "".."",
 ""clock"": ..,
 ""config"": {
  ""physical"": {},
  ""settings"": {
   ""allowTcpFallbackRelay"": true,
   ""bind"": [
    ""192.168.0.123""
   ],
   ""controllerDbPath"": null,
   ""portMappingEnabled"": true,
   ""primaryPort"": 9993,
   ""rabbitmq"": null,
   ""softwareUpdate"": ""disable"",
   ""softwareUpdateChannel"": ""release""
  },
  ""virtual"": {}
 },
 ""online"": true,
 ""planetWorldId"": ..,
 ""planetWorldTimestamp"": ..,
 ""publicIdentity"": "".."",
 ""tcpFallbackActive"": false,
 ""version"": ""1.4.6"",
 ""versionBuild"": 0,
 ""versionMajor"": 1,
 ""versionMinor"": 4,
 ""versionRev"": 6
}


netstat -aptu | grep zero
tcp        0      0 192.168.0.123:23866     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:23867     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:9993      0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 localhost:9993          0.0.0.0:*               LISTEN      6368/zerotier-one
udp        0      0 192.168.0.123:9993      0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23866     0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23867     0.0.0.0:*                           6368/zerotier-one",@laduke @joseph-henry any update about this?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1257,2020-09-07T23:57:03Z,2021-06-29T18:44:53Z,2021-06-29T18:44:53Z,MERGED,True,7,2,1,https://github.com/thoradia,add ports to addresses specified by the bind setting,1,"['Type: Feature Request or Suggestion', 'Type: Documentation']",https://github.com/zerotier/ZeroTierOne/pull/1257,https://github.com/StefanoBalocco,5,https://github.com/zerotier/ZeroTierOne/pull/1257#issuecomment-752798639,"This addresses #1252
Ports are bound to the addresses specified in the bind settings
ps -ef | grep zero
  373 root      0:10 /storage/.kodi/addons/service.zerotier-one/bin/zerotier-one


more local.conf
{
  ""physical"": {
  },
  ""virtual"": {
  },
  ""settings"": {
    ""bind"": [ ""192.168.0.123"" ]
  }
}


zerotier-cli -j info
{
 ""address"": "".."",
 ""clock"": ..,
 ""config"": {
  ""physical"": {},
  ""settings"": {
   ""allowTcpFallbackRelay"": true,
   ""bind"": [
    ""192.168.0.123""
   ],
   ""controllerDbPath"": null,
   ""portMappingEnabled"": true,
   ""primaryPort"": 9993,
   ""rabbitmq"": null,
   ""softwareUpdate"": ""disable"",
   ""softwareUpdateChannel"": ""release""
  },
  ""virtual"": {}
 },
 ""online"": true,
 ""planetWorldId"": ..,
 ""planetWorldTimestamp"": ..,
 ""publicIdentity"": "".."",
 ""tcpFallbackActive"": false,
 ""version"": ""1.4.6"",
 ""versionBuild"": 0,
 ""versionMajor"": 1,
 ""versionMinor"": 4,
 ""versionRev"": 6
}


netstat -aptu | grep zero
tcp        0      0 192.168.0.123:23866     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:23867     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:9993      0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 localhost:9993          0.0.0.0:*               LISTEN      6368/zerotier-one
udp        0      0 192.168.0.123:9993      0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23866     0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23867     0.0.0.0:*                           6368/zerotier-one",Any news?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1257,2020-09-07T23:57:03Z,2021-06-29T18:44:53Z,2021-06-29T18:44:53Z,MERGED,True,7,2,1,https://github.com/thoradia,add ports to addresses specified by the bind setting,1,"['Type: Feature Request or Suggestion', 'Type: Documentation']",https://github.com/zerotier/ZeroTierOne/pull/1257,https://github.com/StefanoBalocco,6,https://github.com/zerotier/ZeroTierOne/pull/1257#issuecomment-826629034,"This addresses #1252
Ports are bound to the addresses specified in the bind settings
ps -ef | grep zero
  373 root      0:10 /storage/.kodi/addons/service.zerotier-one/bin/zerotier-one


more local.conf
{
  ""physical"": {
  },
  ""virtual"": {
  },
  ""settings"": {
    ""bind"": [ ""192.168.0.123"" ]
  }
}


zerotier-cli -j info
{
 ""address"": "".."",
 ""clock"": ..,
 ""config"": {
  ""physical"": {},
  ""settings"": {
   ""allowTcpFallbackRelay"": true,
   ""bind"": [
    ""192.168.0.123""
   ],
   ""controllerDbPath"": null,
   ""portMappingEnabled"": true,
   ""primaryPort"": 9993,
   ""rabbitmq"": null,
   ""softwareUpdate"": ""disable"",
   ""softwareUpdateChannel"": ""release""
  },
  ""virtual"": {}
 },
 ""online"": true,
 ""planetWorldId"": ..,
 ""planetWorldTimestamp"": ..,
 ""publicIdentity"": "".."",
 ""tcpFallbackActive"": false,
 ""version"": ""1.4.6"",
 ""versionBuild"": 0,
 ""versionMajor"": 1,
 ""versionMinor"": 4,
 ""versionRev"": 6
}


netstat -aptu | grep zero
tcp        0      0 192.168.0.123:23866     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:23867     0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 192.168.0.123:9993      0.0.0.0:*               LISTEN      6368/zerotier-one
tcp        0      0 localhost:9993          0.0.0.0:*               LISTEN      6368/zerotier-one
udp        0      0 192.168.0.123:9993      0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23866     0.0.0.0:*                           6368/zerotier-one
udp        0      0 192.168.0.123:23867     0.0.0.0:*                           6368/zerotier-one","""7 months"" ping",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1261,2020-09-15T20:25:06Z,2020-09-18T19:22:23Z,2020-09-18T19:22:27Z,CLOSED,False,188,295,30,https://github.com/unquietwiki,.NET 4.5 -> 4.8; Rosylnator fixes,2,['Windows'],https://github.com/zerotier/ZeroTierOne/pull/1261,https://github.com/unquietwiki,1,https://github.com/zerotier/ZeroTierOne/pull/1261,"Removed a dependency in the project file for the deprecated Expressions product; it wouldn't load otherwise.
Set to use .NET 4.8 instead of .NET 4.5; this still covers Win Server 2012 R2 & Windows 7 SP1, while allowing C# 7 and older code.
Used https://github.com/JosefPihrt/Roslynator to apply assorted fixes. Went from over 100 possible fixes to 4.

@laduke you were asking about the API hook a few weeks ago; at one point in this process, the API variable was being declared as unused. Switching that to internal seemed to resolve that error.","Removed a dependency in the project file for the deprecated Expressions product; it wouldn't load otherwise.
Set to use .NET 4.8 instead of .NET 4.5; this still covers Win Server 2012 R2 & Windows 7 SP1, while allowing C# 7 and older code.
Used https://github.com/JosefPihrt/Roslynator to apply assorted fixes. Went from over 100 possible fixes to 4.

@laduke you were asking about the API hook a few weeks ago; at one point in this process, the API variable was being declared as unused. Switching that to internal seemed to resolve that error.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1263,2020-09-18T22:10:08Z,2020-09-23T03:39:20Z,2020-09-23T03:39:20Z,CLOSED,False,162,238,34,https://github.com/unquietwiki,WinUI cleanup,3,['Windows'],https://github.com/zerotier/ZeroTierOne/pull/1263,https://github.com/unquietwiki,1,https://github.com/zerotier/ZeroTierOne/pull/1263,"Cancelled PR #1261 & recreated with Grant's new DNS stuff. Also, no point in it being its own branch if forking on here.
Removed the broken Expressions dependency in the C# project file.
.NET 4.5 to 4.7.2; not sure if 4.8 was pushed on Windows Update to systems, but I know 4.7.x stuff was.
Rosylnator fixes
Minor UI tweaks","Cancelled PR #1261 & recreated with Grant's new DNS stuff. Also, no point in it being its own branch if forking on here.
Removed the broken Expressions dependency in the C# project file.
.NET 4.5 to 4.7.2; not sure if 4.8 was pushed on Windows Update to systems, but I know 4.7.x stuff was.
Rosylnator fixes
Minor UI tweaks",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1287,2020-11-06T05:41:10Z,2020-11-07T23:54:30Z,2020-11-07T23:54:31Z,CLOSED,False,36,3,2,https://github.com/darkain,Fixing build on FreeBSD ARM targets,2,[],https://github.com/zerotier/ZeroTierOne/pull/1287,https://github.com/darkain,1,https://github.com/zerotier/ZeroTierOne/pull/1287,"Fixing build on FreeBSD ARM targets

ARMv6
ARMv7
Aarch64","Fixing build on FreeBSD ARM targets

ARMv6
ARMv7
Aarch64",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1287,2020-11-06T05:41:10Z,2020-11-07T23:54:30Z,2020-11-07T23:54:31Z,CLOSED,False,36,3,2,https://github.com/darkain,Fixing build on FreeBSD ARM targets,2,[],https://github.com/zerotier/ZeroTierOne/pull/1287,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/1287#issuecomment-722857015,"Fixing build on FreeBSD ARM targets

ARMv6
ARMv7
Aarch64",This will need to be retargeted against the dev branch. We're preparing a beta 2 off of that,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1287,2020-11-06T05:41:10Z,2020-11-07T23:54:30Z,2020-11-07T23:54:31Z,CLOSED,False,36,3,2,https://github.com/darkain,Fixing build on FreeBSD ARM targets,2,[],https://github.com/zerotier/ZeroTierOne/pull/1287,https://github.com/darkain,3,https://github.com/zerotier/ZeroTierOne/pull/1287#issuecomment-723213336,"Fixing build on FreeBSD ARM targets

ARMv6
ARMv7
Aarch64",Noted! I'll pull from the dev branch and re-validate either tonight or this weekend. :),True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1287,2020-11-06T05:41:10Z,2020-11-07T23:54:30Z,2020-11-07T23:54:31Z,CLOSED,False,36,3,2,https://github.com/darkain,Fixing build on FreeBSD ARM targets,2,[],https://github.com/zerotier/ZeroTierOne/pull/1287,https://github.com/darkain,4,https://github.com/zerotier/ZeroTierOne/pull/1287#issuecomment-723510540,"Fixing build on FreeBSD ARM targets

ARMv6
ARMv7
Aarch64",Moved to #1288,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1288,2020-11-07T23:53:55Z,2020-11-10T00:50:46Z,2020-11-14T12:35:30Z,MERGED,True,36,3,2,https://github.com/darkain,"FreeBSD ARMv6, ARMv7, and Aarch64 support",1,[],https://github.com/zerotier/ZeroTierOne/pull/1288,https://github.com/darkain,1,https://github.com/zerotier/ZeroTierOne/pull/1288,"Fixing builds on FreeBSD

Added linker flags to fix arm32-neon-salsa2012-asm
Added ZT_AES_NO_ACCEL to ARMv7 (this could possibly be improved, but I think it'll require changes in the FreeBSD source tree)
Added -march=armv8-a+crypto to ARM64 (without this, clang refused to recognize crypto intrinsic)
Added a shim for getauxval since this isn't available on FreeBSD
The HWCAP defines and detection could probably be cleaned up / improved, but this at least works","Fixing builds on FreeBSD

Added linker flags to fix arm32-neon-salsa2012-asm
Added ZT_AES_NO_ACCEL to ARMv7 (this could possibly be improved, but I think it'll require changes in the FreeBSD source tree)
Added -march=armv8-a+crypto to ARM64 (without this, clang refused to recognize crypto intrinsic)
Added a shim for getauxval since this isn't available on FreeBSD
The HWCAP defines and detection could probably be cleaned up / improved, but this at least works",True,{'ROCKET': ['https://github.com/laduke']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1288,2020-11-07T23:53:55Z,2020-11-10T00:50:46Z,2020-11-14T12:35:30Z,MERGED,True,36,3,2,https://github.com/darkain,"FreeBSD ARMv6, ARMv7, and Aarch64 support",1,[],https://github.com/zerotier/ZeroTierOne/pull/1288,https://github.com/dch,2,https://github.com/zerotier/ZeroTierOne/pull/1288#issuecomment-727201388,"Fixing builds on FreeBSD

Added linker flags to fix arm32-neon-salsa2012-asm
Added ZT_AES_NO_ACCEL to ARMv7 (this could possibly be improved, but I think it'll require changes in the FreeBSD source tree)
Added -march=armv8-a+crypto to ARM64 (without this, clang refused to recognize crypto intrinsic)
Added a shim for getauxval since this isn't available on FreeBSD
The HWCAP defines and detection could probably be cleaned up / improved, but this at least works","@darkain awesome, please @ me for any future patches!",True,{'THUMBS_UP': ['https://github.com/darkain']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1294,2020-11-21T21:32:37Z,2020-11-25T00:23:19Z,2020-11-25T00:23:19Z,MERGED,True,2,2,1,https://github.com/darkain,Add ZT_NO_UNALIGNED_ACCESS for ARMv6/7 on FreeBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/1294,https://github.com/darkain,1,https://github.com/zerotier/ZeroTierOne/pull/1294,"Unaligned access caused SIGBUS errors on ARMv6 and ARMv7 targets under FreeBSD.
This was also the cause of the repeating TAP devices. Each time the SIGBUS happened, the service would auto-restart itself, create a new TAP device, and then crash again.
The particular place causing the SIGBUS was:
https://github.com/zerotier/ZeroTierOne/blob/master/node/Utils.hpp#L695","Unaligned access caused SIGBUS errors on ARMv6 and ARMv7 targets under FreeBSD.
This was also the cause of the repeating TAP devices. Each time the SIGBUS happened, the service would auto-restart itself, create a new TAP device, and then crash again.
The particular place causing the SIGBUS was:
https://github.com/zerotier/ZeroTierOne/blob/master/node/Utils.hpp#L695",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/dch,1,https://github.com/zerotier/ZeroTierOne/pull/1304,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.","Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/dch,2,https://github.com/zerotier/ZeroTierOne/pull/1304#issuecomment-782633557,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.","@darkain I'm considering adding this as a patch to the FreeBSD port. Do you think there's a better way than my changes above to do this? Would it be a useful debugging addition? It only appears if you run ZT in the foreground, obviously.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/darkain,3,https://github.com/zerotier/ZeroTierOne/pull/1304#issuecomment-782723925,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.","I think there should be either a compile-time or run-time flip to enable/disable the extra verbosity. Compile time with macros, or run time with either a config item or command line item to add them in. Because otherwise, all of that verbosity may end up in log files instead, which could be a distraction from general logging.",True,{'THUMBS_UP': ['https://github.com/dch']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/joseph-henry,4,https://github.com/zerotier/ZeroTierOne/pull/1304#issuecomment-793256207,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.","Thanks for this, guys.
I'd suggest gating it as such:
#ifdef ZT_TRACE
...
#endif

Once we've done that I will go ahead and merge the request if it's still needed.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/dch,5,https://github.com/zerotier/ZeroTierOne/pull/1304#issuecomment-820157700,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.","@joseph-henry done, and yes these are needed - thanks!",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/dch,6,https://github.com/zerotier/ZeroTierOne/pull/1304#issuecomment-820187080,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.","BTW it would be much more convenient if we could have these debug flags compiled in by default, but only displayed by toggling an env var or something. Rebuilding is not really practical for end users.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/dch,7,https://github.com/zerotier/ZeroTierOne/pull/1304#issuecomment-821723779,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.","Regarding making it toggle-able without recompiling there are a few options:

add a commandline flag or environment var, set a global var, and check that before displaying
add a setting in local.conf, which would allow enabling debugging without daemon restart. as state changes (tap interfaces, route propagations) are relatively rare, this would not slow down the ""hot path""",True,{'THUMBS_UP': ['https://github.com/joseph-henry']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1304,2020-11-26T11:27:22Z,2021-08-30T17:11:53Z,2021-08-30T17:11:53Z,MERGED,True,34,1,2,https://github.com/dch,BSD: add debug fprintf for all external commands,1,[],https://github.com/zerotier/ZeroTierOne/pull/1304,https://github.com/joseph-henry,8,https://github.com/zerotier/ZeroTierOne/pull/1304#issuecomment-908523056,"Clearly there will be a better way to wrap/handle this from the
C++ side, if there's a preferred approach please give me an example.
I'll be pushing a few more patches to this as I find the last few execl
calls.",Looks great. Thanks for the modification. And yes I do agree that this should be compiled in and controlled via a flag. We're in the planning stages for a much more detailed logging system so it won't be like this forever.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1306,2020-11-27T08:28:49Z,2020-11-30T16:59:39Z,2020-11-30T16:59:39Z,MERGED,True,2,2,1,https://github.com/darkain,Fixing regression in AES for ARM targets,1,[],https://github.com/zerotier/ZeroTierOne/pull/1306,https://github.com/darkain,1,https://github.com/zerotier/ZeroTierOne/pull/1306,"Broken commit: 9d66d87
Just forgot to properly increment input buffer, breaking AES (and thus, everything)","Broken commit: 9d66d87
Just forgot to properly increment input buffer, breaking AES (and thus, everything)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1322,2020-12-13T12:55:12Z,2021-02-02T22:05:19Z,2021-02-02T22:05:20Z,MERGED,True,2,2,1,https://github.com/capruro,Update Dockerfile to 1.6.2,1,[],https://github.com/zerotier/ZeroTierOne/pull/1322,https://github.com/capruro,1,https://github.com/zerotier/ZeroTierOne/pull/1322,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1330,2020-12-20T09:15:51Z,2021-02-02T22:05:04Z,2021-02-02T22:05:04Z,MERGED,True,5,5,1,https://github.com/liweitianux,README: Minor format fixes,1,[],https://github.com/zerotier/ZeroTierOne/pull/1330,https://github.com/liweitianux,1,https://github.com/zerotier/ZeroTierOne/pull/1330,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1331,2020-12-21T10:58:58Z,2021-02-02T22:02:37Z,2021-02-02T22:02:37Z,CLOSED,False,2,2,1,https://github.com/RookieZoe,fix issue [#1317] [Fails to compile for ARMv8],1,[],https://github.com/zerotier/ZeroTierOne/pull/1331,https://github.com/RookieZoe,1,https://github.com/zerotier/ZeroTierOne/pull/1331,as titled.,as titled.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1331,2020-12-21T10:58:58Z,2021-02-02T22:02:37Z,2021-02-02T22:02:37Z,CLOSED,False,2,2,1,https://github.com/RookieZoe,fix issue [#1317] [Fails to compile for ARMv8],1,[],https://github.com/zerotier/ZeroTierOne/pull/1331,https://github.com/adamierymenko,2,https://github.com/zerotier/ZeroTierOne/pull/1331#issuecomment-772031641,as titled.,"Merged into dev manually, thanks!",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1339,2021-01-13T17:08:05Z,2021-02-02T22:04:42Z,2021-02-02T22:04:42Z,MERGED,True,1,1,1,https://github.com/dnadlinger,.github: Fix typo in bug report template,1,[],https://github.com/zerotier/ZeroTierOne/pull/1339,https://github.com/dnadlinger,1,https://github.com/zerotier/ZeroTierOne/pull/1339,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1341,2021-01-14T08:52:34Z,2021-02-02T22:03:37Z,2021-02-02T22:03:37Z,MERGED,True,2,0,1,https://github.com/bradleydiggs,blacklist wg# (WireGuard) interfaces by default,2,[],https://github.com/zerotier/ZeroTierOne/pull/1341,https://github.com/bradleydiggs,1,https://github.com/zerotier/ZeroTierOne/pull/1341,"This adds wg# interfaces to the default WAN blacklist for certain OSes as tun#, tap#, and of course zt# are already blacklisted by default.","This adds wg# interfaces to the default WAN blacklist for certain OSes as tun#, tap#, and of course zt# are already blacklisted by default.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1347,2021-02-04T03:36:49Z,2021-03-09T01:23:26Z,2021-03-09T01:23:27Z,MERGED,True,6,6,4,https://github.com/showipintbri,Patch 1 - Language suggestion,4,[],https://github.com/zerotier/ZeroTierOne/pull/1347,https://github.com/showipintbri,1,https://github.com/zerotier/ZeroTierOne/pull/1347,"Removed some language from the comments in the *.inf files.
Example: ""fuqdat""","Removed some language from the comments in the *.inf files.
Example: ""fuqdat""",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1347,2021-02-04T03:36:49Z,2021-03-09T01:23:26Z,2021-03-09T01:23:27Z,MERGED,True,6,6,4,https://github.com/showipintbri,Patch 1 - Language suggestion,4,[],https://github.com/zerotier/ZeroTierOne/pull/1347,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1347#issuecomment-793238976,"Removed some language from the comments in the *.inf files.
Example: ""fuqdat""",Thanks for polishing things up!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1354,2021-02-19T15:44:40Z,2021-03-09T01:07:54Z,2021-03-09T01:07:54Z,MERGED,True,1,1,1,https://github.com/contrun,fix sprintf overflow,1,[],https://github.com/zerotier/ZeroTierOne/pull/1354,https://github.com/contrun,1,https://github.com/zerotier/ZeroTierOne/pull/1354,Here sprintf will always overflow as the length of macStr is 17.,Here sprintf will always overflow as the length of macStr is 17.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1355,2021-02-24T11:47:57Z,2021-02-27T13:28:27Z,2021-02-27T13:28:27Z,MERGED,True,52,0,2,https://github.com/erikh,Initial docker release image tooling,1,[],https://github.com/zerotier/ZeroTierOne/pull/1355,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1355,"Here's some docker release tooling!
I'll document it more once it boils down to something we want to use, but run it like so:
docker build -f Dockerfile.release --build-arg VERSION=1.6.4 -t zerotier .
docker run -it --privileged -v zt:/var/lib/zerotier --device /dev/net/tun zerotier <networkA> <networkB>

Identities probably need to be resolved still in a cleaner way, but you should
be able to mount them into that volume and it should work.
Signed-off-by: Erik Hollensbe github@hollensbe.org","Here's some docker release tooling!
I'll document it more once it boils down to something we want to use, but run it like so:
docker build -f Dockerfile.release --build-arg VERSION=1.6.4 -t zerotier .
docker run -it --privileged -v zt:/var/lib/zerotier --device /dev/net/tun zerotier <networkA> <networkB>

Identities probably need to be resolved still in a cleaner way, but you should
be able to mount them into that volume and it should work.
Signed-off-by: Erik Hollensbe github@hollensbe.org",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1364,2021-03-09T01:29:24Z,2021-03-09T02:12:13Z,2021-03-09T02:12:13Z,MERGED,True,4,1,1,https://github.com/Pablohn26,Show the port number which is not able to connect,1,[],https://github.com/zerotier/ZeroTierOne/pull/1364,https://github.com/Pablohn26,1,https://github.com/zerotier/ZeroTierOne/pull/1364,For users that do not know/remember the default port and for better error explanation I add to the error message the port number to know which is the port that bind process is not able to get.,For users that do not know/remember the default port and for better error explanation I add to the error message the port number to know which is the port that bind process is not able to get.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1364,2021-03-09T01:29:24Z,2021-03-09T02:12:13Z,2021-03-09T02:12:13Z,MERGED,True,4,1,1,https://github.com/Pablohn26,Show the port number which is not able to connect,1,[],https://github.com/zerotier/ZeroTierOne/pull/1364,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1364#issuecomment-793271167,For users that do not know/remember the default port and for better error explanation I add to the error message the port number to know which is the port that bind process is not able to get.,"Good call, thanks.",True,"{'THUMBS_UP': ['https://github.com/Pablohn26'], 'HEART': ['https://github.com/Pablohn26']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1369,2021-03-16T03:13:13Z,2022-04-12T04:17:55Z,2022-04-12T04:17:55Z,CLOSED,False,1,1,1,https://github.com/ALTinners,Corrects crypto code debug build objects not being C++11,1,[],https://github.com/zerotier/ZeroTierOne/pull/1369,https://github.com/ALTinners,1,https://github.com/zerotier/ZeroTierOne/pull/1369,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1369,2021-03-16T03:13:13Z,2022-04-12T04:17:55Z,2022-04-12T04:17:55Z,CLOSED,False,1,1,1,https://github.com/ALTinners,Corrects crypto code debug build objects not being C++11,1,[],https://github.com/zerotier/ZeroTierOne/pull/1369,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1369#issuecomment-908516297,,Thanks. Which compiler was complaining about this?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1377,2021-03-26T07:16:41Z,2021-05-16T11:30:02Z,2021-05-16T11:40:46Z,CLOSED,False,83,59,13,https://github.com/GermanAizek,Fix compilation error on MSVC and refactor code,3,[],https://github.com/zerotier/ZeroTierOne/pull/1377,https://github.com/GermanAizek,1,https://github.com/zerotier/ZeroTierOne/pull/1377,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1377,2021-03-26T07:16:41Z,2021-05-16T11:30:02Z,2021-05-16T11:40:46Z,CLOSED,False,83,59,13,https://github.com/GermanAizek,Fix compilation error on MSVC and refactor code,3,[],https://github.com/zerotier/ZeroTierOne/pull/1377,https://github.com/GermanAizek,2,https://github.com/zerotier/ZeroTierOne/pull/1377#issuecomment-808270118,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","Fixed possible memleaks, code in some places optimized.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1377,2021-03-26T07:16:41Z,2021-05-16T11:30:02Z,2021-05-16T11:40:46Z,CLOSED,False,83,59,13,https://github.com/GermanAizek,Fix compilation error on MSVC and refactor code,3,[],https://github.com/zerotier/ZeroTierOne/pull/1377,https://github.com/GermanAizek,3,https://github.com/zerotier/ZeroTierOne/pull/1377#issuecomment-841630101,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","Note but this commit is very important
db7aef1",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1377,2021-03-26T07:16:41Z,2021-05-16T11:30:02Z,2021-05-16T11:40:46Z,CLOSED,False,83,59,13,https://github.com/GermanAizek,Fix compilation error on MSVC and refactor code,3,[],https://github.com/zerotier/ZeroTierOne/pull/1377,https://github.com/GermanAizek,4,https://github.com/zerotier/ZeroTierOne/pull/1377#issuecomment-841630484,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","@nelsonjchen @laduke @erikh @dnadlinger
I am waiting to review pull request and your opinion.",True,{'CONFUSED': ['https://github.com/nelsonjchen']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1377,2021-03-26T07:16:41Z,2021-05-16T11:30:02Z,2021-05-16T11:40:46Z,CLOSED,False,83,59,13,https://github.com/GermanAizek,Fix compilation error on MSVC and refactor code,3,[],https://github.com/zerotier/ZeroTierOne/pull/1377,https://github.com/GermanAizek,5,https://github.com/zerotier/ZeroTierOne/pull/1377#issuecomment-841804512,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","I forgot that I was already re-creating another PR that was correctly composed, sorry.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1377,2021-03-26T07:16:41Z,2021-05-16T11:30:02Z,2021-05-16T11:40:46Z,CLOSED,False,83,59,13,https://github.com/GermanAizek,Fix compilation error on MSVC and refactor code,3,[],https://github.com/zerotier/ZeroTierOne/pull/1377,https://github.com/GermanAizek,6,https://github.com/zerotier/ZeroTierOne/pull/1377#issuecomment-841805532,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","Reference:
#1378",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1378,2021-03-26T14:47:04Z,2022-04-08T01:02:54Z,2022-04-08T01:02:54Z,CLOSED,False,85,59,12,https://github.com/GermanAizek,"Fixed build on MSVC, memleaks and bugs",3,[],https://github.com/zerotier/ZeroTierOne/pull/1378,https://github.com/GermanAizek,1,https://github.com/zerotier/ZeroTierOne/pull/1378,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1378,2021-03-26T14:47:04Z,2022-04-08T01:02:54Z,2022-04-08T01:02:54Z,CLOSED,False,85,59,12,https://github.com/GermanAizek,"Fixed build on MSVC, memleaks and bugs",3,[],https://github.com/zerotier/ZeroTierOne/pull/1378,https://github.com/GermanAizek,2,https://github.com/zerotier/ZeroTierOne/pull/1378#issuecomment-841805387,"By default, windows.h defines min and max as macros. When those are expanded, code that tries to use std::min (for example) will end up looking something like this:
int k = std::(x) < (y) ? (x) : (y);
The error message is telling you that std::(x) isn't allowed.","Update PR:
Fixed code style conflicts.
Reference:
92b5a46",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1382,2021-04-08T20:30:58Z,2021-08-30T16:56:26Z,2021-08-30T16:56:27Z,CLOSED,False,1,1,1,https://github.com/Ranbato,Fix Synology compilation issue.  Looks like a bad merge lost this change,1,[],https://github.com/zerotier/ZeroTierOne/pull/1382,https://github.com/Ranbato,1,https://github.com/zerotier/ZeroTierOne/pull/1382,Making this change allows me to build 1.6.4 version of Synology and so far seems to work on my NAS,Making this change allows me to build 1.6.4 version of Synology and so far seems to work on my NAS,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1382,2021-04-08T20:30:58Z,2021-08-30T16:56:26Z,2021-08-30T16:56:27Z,CLOSED,False,1,1,1,https://github.com/Ranbato,Fix Synology compilation issue.  Looks like a bad merge lost this change,1,[],https://github.com/zerotier/ZeroTierOne/pull/1382,https://github.com/Ranbato,2,https://github.com/zerotier/ZeroTierOne/pull/1382#issuecomment-818822992,Making this change allows me to build 1.6.4 version of Synology and so far seems to work on my NAS,"Been testing for almost a week now and haven't discovered any issues.  Unfortunately, I've been forced to upgrade to DSM 7.0 beta and it won't run under that so I can't continue to test.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1382,2021-04-08T20:30:58Z,2021-08-30T16:56:26Z,2021-08-30T16:56:27Z,CLOSED,False,1,1,1,https://github.com/Ranbato,Fix Synology compilation issue.  Looks like a bad merge lost this change,1,[],https://github.com/zerotier/ZeroTierOne/pull/1382,https://github.com/joseph-henry,3,https://github.com/zerotier/ZeroTierOne/pull/1382#issuecomment-908510515,Making this change allows me to build 1.6.4 version of Synology and so far seems to work on my NAS,Since the supported method of running ZT on a Synology has changed with the DSM 7 update (See: docs.zerotier.com/devices/synology) I'm going to close this. But we do appreciate the attempt to fix it.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1383,2021-04-13T20:20:25Z,2021-04-28T20:26:38Z,2021-04-28T20:26:38Z,MERGED,True,29,2,2,https://github.com/erikh,Multiple image fixes:,1,[],https://github.com/zerotier/ZeroTierOne/pull/1383,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1383,"Can now provide the following environment variables to populate
secrets (nice for kubernetes, other situations)

ZEROTIER_API_SECRET: authtoken.secret
ZEROTIER_IDENTITY_PUBLIC: identity.public
ZEROTIER_IDENTITY_SECRET: identity.secret


Joining networks by providing them as a part of docker's ""command""
array should now work properly

Signed-off-by: Erik Hollensbe linux@hollensbe.org","Can now provide the following environment variables to populate
secrets (nice for kubernetes, other situations)

ZEROTIER_API_SECRET: authtoken.secret
ZEROTIER_IDENTITY_PUBLIC: identity.public
ZEROTIER_IDENTITY_SECRET: identity.secret


Joining networks by providing them as a part of docker's ""command""
array should now work properly

Signed-off-by: Erik Hollensbe linux@hollensbe.org",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1384,2021-04-14T02:09:24Z,2021-05-18T07:33:35Z,2021-05-18T07:33:35Z,CLOSED,False,2,0,1,https://github.com/xumng123,解决无关的编译链依赖,1,[],https://github.com/zerotier/ZeroTierOne/pull/1384,https://github.com/xumng123,1,https://github.com/zerotier/ZeroTierOne/pull/1384,解决无关的编译链依赖,解决无关的编译链依赖,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1384,2021-04-14T02:09:24Z,2021-05-18T07:33:35Z,2021-05-18T07:33:35Z,CLOSED,False,2,0,1,https://github.com/xumng123,解决无关的编译链依赖,1,[],https://github.com/zerotier/ZeroTierOne/pull/1384,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1384#issuecomment-842931276,解决无关的编译链依赖,"谢谢你
合并成 dev",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1388,2021-04-21T10:04:06Z,2021-04-28T20:19:09Z,2021-10-08T11:19:32Z,MERGED,True,20,11,1,https://github.com/robertschreib,Fix macOS DNS issue,2,[],https://github.com/zerotier/ZeroTierOne/pull/1388,https://github.com/robertschreib,1,https://github.com/zerotier/ZeroTierOne/pull/1388,This should Fix #1387,This should Fix #1387,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1388,2021-04-21T10:04:06Z,2021-04-28T20:19:09Z,2021-10-08T11:19:32Z,MERGED,True,20,11,1,https://github.com/robertschreib,Fix macOS DNS issue,2,[],https://github.com/zerotier/ZeroTierOne/pull/1388,https://github.com/rburgst,2,https://github.com/zerotier/ZeroTierOne/pull/1388#issuecomment-938561306,This should Fix #1387,@glimberg when can we get a release with this fix?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1389,2021-04-21T12:37:28Z,2021-04-21T16:27:26Z,2021-04-21T16:29:00Z,MERGED,True,25,20,2,https://github.com/jonathonf,Reorder Linux TAP link sequence,3,[],https://github.com/zerotier/ZeroTierOne/pull/1389,https://github.com/jonathonf,1,https://github.com/zerotier/ZeroTierOne/pull/1389,"This corrects the flow for bringing up a TAP device under Linux according to #1314.
Closes #1314","This corrects the flow for bringing up a TAP device under Linux according to #1314.
Closes #1314",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1390,2021-04-21T19:54:20Z,2021-04-28T20:17:38Z,2021-04-29T00:55:04Z,MERGED,True,12,12,1,https://github.com/jonathonf,Set MAC address before bringing up Linux TAP link,2,[],https://github.com/zerotier/ZeroTierOne/pull/1390,https://github.com/jonathonf,1,https://github.com/zerotier/ZeroTierOne/pull/1390,"This corrects the flow for bringing up a TAP device under Linux by setting the device MAC address prior to bringing up the device.
This also fixes an issue with ZT running on guests under OpenVZ 6 caused by d735a1d (determined by a git bisect between 1.4.6 and 1.6.5).","This corrects the flow for bringing up a TAP device under Linux by setting the device MAC address prior to bringing up the device.
This also fixes an issue with ZT running on guests under OpenVZ 6 caused by d735a1d (determined by a git bisect between 1.4.6 and 1.6.5).",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1390,2021-04-21T19:54:20Z,2021-04-28T20:17:38Z,2021-04-29T00:55:04Z,MERGED,True,12,12,1,https://github.com/jonathonf,Set MAC address before bringing up Linux TAP link,2,[],https://github.com/zerotier/ZeroTierOne/pull/1390,https://github.com/jonathonf,2,https://github.com/zerotier/ZeroTierOne/pull/1390#issuecomment-824319442,"This corrects the flow for bringing up a TAP device under Linux by setting the device MAC address prior to bringing up the device.
This also fixes an issue with ZT running on guests under OpenVZ 6 caused by d735a1d (determined by a git bisect between 1.4.6 and 1.6.5).",This is likely also a more complete fix for #1314.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1390,2021-04-21T19:54:20Z,2021-04-28T20:17:38Z,2021-04-29T00:55:04Z,MERGED,True,12,12,1,https://github.com/jonathonf,Set MAC address before bringing up Linux TAP link,2,[],https://github.com/zerotier/ZeroTierOne/pull/1390,https://github.com/jonathonf,3,https://github.com/zerotier/ZeroTierOne/pull/1390#issuecomment-825085937,"This corrects the flow for bringing up a TAP device under Linux by setting the device MAC address prior to bringing up the device.
This also fixes an issue with ZT running on guests under OpenVZ 6 caused by d735a1d (determined by a git bisect between 1.4.6 and 1.6.5).","Tested and working on:

 Debian 9 (Stretch) VM on an OpenVZ 6 host (kernel 2.6.32-042stab145.3)
 Ubuntu 18.04 (kernel 4.15.0-142 and 5.11.0-15.1-liquorix)
 Arch Linux (kernel 5.11.16)
 Debian 10 (Buster) VM on an OpenVZ 7 host (kernel ""4.9.0 SMP Mon Mar 16 15:39:59 MSK 2020 x86_64 GNU/Linux"")
 Debian 10 (Buster) VM on a KVM host (kernel 4.19.0-16-amd64 SMP Debian 4.19.181-1 (2021-03-19) x86_64 GNU/Linux)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1397,2021-05-04T16:04:05Z,2021-05-04T17:33:10Z,2021-05-04T17:36:39Z,MERGED,True,1,1,1,https://github.com/joseph-henry,Fix erroneous cast of verb to double that causes invalid tracing output,1,['Type: Bug'],https://github.com/zerotier/ZeroTierOne/pull/1397,https://github.com/joseph-henry,1,https://github.com/zerotier/ZeroTierOne/pull/1397,"Casting verb to double could cause trace outputs to read from incorrect memory locations. For example:
trying unknown path fd00::3ab/35991 to c7467550ad (packet 62be217379be6ea2 verb 9440 local socket 0 network 00007ffd3c53cea0)","Casting verb to double could cause trace outputs to read from incorrect memory locations. For example:
trying unknown path fd00::3ab/35991 to c7467550ad (packet 62be217379be6ea2 verb 9440 local socket 0 network 00007ffd3c53cea0)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1400,2021-05-06T11:15:40Z,2021-09-01T21:08:23Z,2021-09-01T21:08:23Z,MERGED,True,2,2,1,https://github.com/rollcat,Use clang on OpenBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/1400,https://github.com/rollcat,1,https://github.com/zerotier/ZeroTierOne/pull/1400,"OpenBSD has been using clang as the default compiler for i386 & amd64 platforms since mid-2017. Making this change is all that's needed to compile and run master on the latest stable release (6.9) - I'm able to join networks, log in over SSH, etc.
In addition, there's a simple rc.d(8) script to control the ZeroTierOne daemon as a system service:
#!/bin/ksh
daemon=""/usr/local/sbin/zerotier-one -d""
. /etc/rc.d/rc.subr
rc_cmd $1
It can be installed with install -m 555 -o root -g wheel ./zerotier-rc-d /etc/rc.d/zerotier - I'd include it in the PR but I'm not sure what would be the best place to put it in the source tree.","OpenBSD has been using clang as the default compiler for i386 & amd64 platforms since mid-2017. Making this change is all that's needed to compile and run master on the latest stable release (6.9) - I'm able to join networks, log in over SSH, etc.
In addition, there's a simple rc.d(8) script to control the ZeroTierOne daemon as a system service:
#!/bin/ksh
daemon=""/usr/local/sbin/zerotier-one -d""
. /etc/rc.d/rc.subr
rc_cmd $1
It can be installed with install -m 555 -o root -g wheel ./zerotier-rc-d /etc/rc.d/zerotier - I'd include it in the PR but I'm not sure what would be the best place to put it in the source tree.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1400,2021-05-06T11:15:40Z,2021-09-01T21:08:23Z,2021-09-01T21:08:23Z,MERGED,True,2,2,1,https://github.com/rollcat,Use clang on OpenBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/1400,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1400#issuecomment-910756598,"OpenBSD has been using clang as the default compiler for i386 & amd64 platforms since mid-2017. Making this change is all that's needed to compile and run master on the latest stable release (6.9) - I'm able to join networks, log in over SSH, etc.
In addition, there's a simple rc.d(8) script to control the ZeroTierOne daemon as a system service:
#!/bin/ksh
daemon=""/usr/local/sbin/zerotier-one -d""
. /etc/rc.d/rc.subr
rc_cmd $1
It can be installed with install -m 555 -o root -g wheel ./zerotier-rc-d /etc/rc.d/zerotier - I'd include it in the PR but I'm not sure what would be the best place to put it in the source tree.","Tested and it works. Thanks. Also in case anyone comes across this in the future it appears make on OpenBSD is somehow broken, use gmake instead if you have an issue building ZT.",True,{'HEART': ['https://github.com/rollcat']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1408,2021-06-01T16:28:50Z,2021-06-08T15:44:54Z,2021-06-08T15:44:54Z,MERGED,True,83,2,2,https://github.com/erikh,Small dockerfile release fixes,4,[],https://github.com/zerotier/ZeroTierOne/pull/1408,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1408,"Activate zerotier-one.port file (we'll do more with this later)
Add a better process trap

Signed-off-by: Erik Hollensbe linux@hollensbe.org","Activate zerotier-one.port file (we'll do more with this later)
Add a better process trap

Signed-off-by: Erik Hollensbe linux@hollensbe.org",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1408,2021-06-01T16:28:50Z,2021-06-08T15:44:54Z,2021-06-08T15:44:54Z,MERGED,True,83,2,2,https://github.com/erikh,Small dockerfile release fixes,4,[],https://github.com/zerotier/ZeroTierOne/pull/1408,https://github.com/laduke,2,https://github.com/zerotier/ZeroTierOne/pull/1408#issuecomment-856878494,"Activate zerotier-one.port file (we'll do more with this later)
Add a better process trap

Signed-off-by: Erik Hollensbe linux@hollensbe.org",works on my machine,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/SalimTerryLi,1,https://github.com/zerotier/ZeroTierOne/pull/1410,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/SalimTerryLi,2,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-856073785,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.",Find no code style related things so didn't format the file yet.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/glimberg,3,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857797239,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","I'm confused as to the purpose of your pull request here.  .moon files are already automatically processed on startup of Zerotier.

  
    
      ZeroTierOne/service/OneService.cpp
    
    
         Line 794
      in
      6faca86
    
  
  
    

        
          
           // Orbit existing moons in moons.d",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/glimberg,4,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857801439,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","Additionally, it should not be removing the configuration file upon success.  things under ZeroTier's home directory are ZeroTier's state.  Removing the moon file on success removes the ability to re-orbit the moon on next startup.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/glimberg,5,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857838140,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.",Yeah.  I'm going to go ahead and close this request.  The behavior already exists given a properly structured & formatted .moon file is already in place on the filesystem.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/SalimTerryLi,6,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857844227,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","Yeah. I'm going to go ahead and close this request. The behavior already exists given a properly structured & formatted .moon file is already in place on the filesystem.

No, no. You definitely missed what I want it behaves.
ZT will only orbit the moon if it is a well-structured .moon file, but will join the network even if it is an empty file. That's what I mean 'different'.
On systems like OpenWRT, all those ZT 'states' is not permanent at all. So, .moon files got deleted each time the device reboots. We can easily touch an empty file and keep the secret to let ZT on OpenWRT keep its ID and automatically join the network on every restart, but cannot orbit anything reliable. It is hard to fetch a well-structured .moon by hand so I came up this this idea, that tell ZT the worldID and rootID and let ZT itself fetch the necessary data.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/glimberg,7,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857845725,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","That's the concern of the OpenWRT implementation, not this package.  Much like they place the identity files in the proper location with the proper content on OpenWRT startup, they can do the same with the moon files.   Some implementation work on the OpenWRT side may need to be done to get it working with moons, however.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/SalimTerryLi,8,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857849819,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","That's the concern of the OpenWRT implementation, not this package. Much like they place the identity files in the proper location with the proper content on OpenWRT startup, they can do the same with the moon files. Some implementation work on the OpenWRT side may need to be done to get it working with moons, however.

That because secret ID is a human-readable string, but .moon is not.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/glimberg,9,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857851135,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.",OpenWRT has a base64 package (https://openwrt.org/packages/pkgdata/coreutils-base64).  The content could be base64 encoded into the configuration file & then base64 decoded into the file content on startup.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/SalimTerryLi,10,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857864058,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","OpenWRT has a base64 package (https://openwrt.org/packages/pkgdata/coreutils-base64). The content could be base64 encoded into the configuration file & then base64 decoded into the file content on startup.

It will be a lot to explain why it is not practical and you may also not interested in so I want to discuss from another side.
The implementation of this solution only works differently if the moon file contains valid root ID. If there is a single line not apply to the following rule:

Is bigger than any possible root ID
contains anything not within [0-9a-fA-F\n]

Then the .moon file is handed over to already existed logic.
It is a very strict rule with almost no exception.
Kind of 'hack', but not breaking any current behavior.
When the ASCII version of .moon will be delected
The file is actually an ASCII file contains valid root ID. Then ZT will orbit that moon exactly.
When the ASCII version of .moon will lost but ZT not successfully orbit
ZT crashed or system went down right after the file is deleted but ZT haven't write the true .moon out.
But that will affect nothing as:

On OpenWRT the ASCII version of moon will be created again when ZT is going to be started
On normal system with zerotier-cli orbit command: .moon never get deleted

I admit that this kind of implementation should be kind of patch better... But just want to known if there is any possibility to get it into ZT official because it do no harm to current logic",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/glimberg,11,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857869988,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","We're probably not going to accept any patch like this unless it's fixing a bug in the current implementation.  Your patch does not, and it changes the behavior of how moons work.   I've given you suggestions on ways to implement this on the OpenWRT side by placing the moon file in the proper location before starting ZeroTier.  That is and will be supported for the remainder of 1.x.
As stated before, you can base64 encode the moon file content such that it can be stored in OpenWRT's text configuration files, then use the startup scripts to decode & place it at the appropriate place in the filesystem before ZeroTier starts.  The same way that is done with the identity on OpenWRT.  This is all the concern of the OpenWRT port, however, and doesn't need to be handled here in the main ZeroTier project.  ZeroTier is designed to keep its state between restarts.  I understand OpenWRT doesn't do that, but they have developed ways to handle that.  I suggest working within those already developed systems to handle the state on the OpenWRT side.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/SalimTerryLi,12,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857880265,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","We're probably not going to accept any patch like this unless it's fixing a bug in the current implementation. Your patch does not, and it changes the behavior of how moons work. I've given you suggestions on ways to implement this on the OpenWRT side by placing the moon file in the proper location before starting ZeroTier. That is and will be supported for the remainder of 1.x.
As stated before, you can base64 encode the moon file content such that it can be stored in OpenWRT's text configuration files, then use the startup scripts to decode & place it at the appropriate place in the filesystem before ZeroTier starts. The same way that is done with the identity on OpenWRT. This is all the concern of the OpenWRT port, however, and doesn't need to be handled here in the main ZeroTier project. ZeroTier is designed to keep its state between restarts. I understand OpenWRT doesn't do that, but they have developed ways to handle that. I suggest working within those already developed systems to handle the state on the OpenWRT side.

We have ways to handle that state by encoding into base64. But we have no way to get the initial content of the moon with OpenWRT itself. Only if:

We write a lot and wrap the zerotier-cli orbit command with another helper function
notify the user when it is possible to orbit
watch and see if any new moon appears and then store them with base64.

Quite annoying and, still cannot:

configure which moon to orbit before ZT already started for the first time on each device.

That is what we need. I'll try to contact with openwrt side to see if it is possible to accept this solution as a every-time patch.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1410,2021-06-07T16:13:12Z,2021-06-09T16:11:35Z,2021-06-09T17:16:50Z,CLOSED,False,34,2,1,https://github.com/SalimTerryLi,Add support for auto-fetched orbit like that network.d is done,2,[],https://github.com/zerotier/ZeroTierOne/pull/1410,https://github.com/glimberg,13,https://github.com/zerotier/ZeroTierOne/pull/1410#issuecomment-857881952,"What does this PR change
Since networks can be automatically joined by touching an empty file under networks.d/, this PR makes the moons work in the same way:

add corresponding file under moons.d/ with contents of target root id
launch zerotier-one service and will automatically orbit

Multiple root ID is supported by adding multiple lines.
Who will benefit from this

someone who run ZT on OpenWRT with no proper way to automatically orbit (UCI)

How it is implemented

read xxxxxxxxxxxxxxxx.moon at first
split it into lines
check if all lines are valid u64 hex val or just empty line:

TRUE

delete that ASCII file and orbit those lines of moon
done

FALSE

give up and treat the file as serialized object
ZT will orbit it

Additional info
If xxx.moon is an empty file?
This implementation treats it as orbit no moon, as no root ID provided alongside world ID
If xxx.moon is not a valid format to be recognized by this PR?
Then it works the same way as before.","Correct.  It's something you'll have to plan for.  Much like you have to plan for the network ID you wish to join.  Again, your request doesn't belong in this project, but should be handled on OpenWRT's side.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1414,2021-06-23T12:08:06Z,2021-06-23T12:18:38Z,2021-06-23T12:18:38Z,CLOSED,False,2607,1889,49,https://github.com/someara,fixing and clarifying logic in Docker entrypoint function grepzt,100,[],https://github.com/zerotier/ZeroTierOne/pull/1414,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1414,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1415,2021-06-23T14:45:21Z,2021-06-23T14:45:47Z,2021-06-23T14:46:10Z,CLOSED,False,2602,1889,49,https://github.com/someara,Docker entrypoint tweaks,100,[],https://github.com/zerotier/ZeroTierOne/pull/1415,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1415,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1416,2021-06-23T14:46:59Z,2021-06-23T21:01:49Z,2021-06-23T21:02:09Z,CLOSED,False,3,2,2,https://github.com/someara,Docker entrypoint tweaks,3,[],https://github.com/zerotier/ZeroTierOne/pull/1416,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1416,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1416,2021-06-23T14:46:59Z,2021-06-23T21:01:49Z,2021-06-23T21:02:09Z,CLOSED,False,3,2,2,https://github.com/someara,Docker entrypoint tweaks,3,[],https://github.com/zerotier/ZeroTierOne/pull/1416,https://github.com/erikh,2,https://github.com/zerotier/ZeroTierOne/pull/1416#issuecomment-866995076,,you might want to make sure this tears down properly,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1416,2021-06-23T14:46:59Z,2021-06-23T21:01:49Z,2021-06-23T21:02:09Z,CLOSED,False,3,2,2,https://github.com/someara,Docker entrypoint tweaks,3,[],https://github.com/zerotier/ZeroTierOne/pull/1416,https://github.com/someara,3,https://github.com/zerotier/ZeroTierOne/pull/1416#issuecomment-867156647,,I'll re-open this with some enhancements,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1418,2021-06-24T18:30:11Z,2021-06-24T21:31:11Z,2021-09-16T17:26:02Z,MERGED,True,15653,9118,1,https://github.com/someara,updating json.hpp to 3.9.1,1,[],https://github.com/zerotier/ZeroTierOne/pull/1418,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1418,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1418,2021-06-24T18:30:11Z,2021-06-24T21:31:11Z,2021-09-16T17:26:02Z,MERGED,True,15653,9118,1,https://github.com/someara,updating json.hpp to 3.9.1,1,[],https://github.com/zerotier/ZeroTierOne/pull/1418,https://github.com/someara,2,https://github.com/zerotier/ZeroTierOne/pull/1418#issuecomment-867863101,,This cleans up a bunch of clang warnings,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1419,2021-06-24T18:34:45Z,2021-06-24T18:37:08Z,2021-09-15T07:19:27Z,CLOSED,False,18256,11009,51,https://github.com/someara,updating json.hpp to 3.9.1,100,[],https://github.com/zerotier/ZeroTierOne/pull/1419,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1419,This fixes a lot of clang warnings,This fixes a lot of clang warnings,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1419,2021-06-24T18:34:45Z,2021-06-24T18:37:08Z,2021-09-15T07:19:27Z,CLOSED,False,18256,11009,51,https://github.com/someara,updating json.hpp to 3.9.1,100,[],https://github.com/zerotier/ZeroTierOne/pull/1419,https://github.com/someara,2,https://github.com/zerotier/ZeroTierOne/pull/1419#issuecomment-867866626,This fixes a lot of clang warnings,wrong branch,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1420,2021-06-24T18:37:44Z,2021-06-24T21:30:58Z,2021-09-15T07:19:27Z,MERGED,True,15653,9118,1,https://github.com/someara,updating json.hpp to 3.9.1,1,[],https://github.com/zerotier/ZeroTierOne/pull/1420,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1420,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1420,2021-06-24T18:37:44Z,2021-06-24T21:30:58Z,2021-09-15T07:19:27Z,MERGED,True,15653,9118,1,https://github.com/someara,updating json.hpp to 3.9.1,1,[],https://github.com/zerotier/ZeroTierOne/pull/1420,https://github.com/someara,2,https://github.com/zerotier/ZeroTierOne/pull/1420#issuecomment-867958733,,"This should be all bug fixes with no deprecations
https://json.nlohmann.me/home/releases/",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1421,2021-06-25T17:56:42Z,2021-09-15T07:19:31Z,2021-09-15T07:19:31Z,CLOSED,False,4,4,1,https://github.com/someara,cleaning up docker entryoint logic and disusing nohup,1,[],https://github.com/zerotier/ZeroTierOne/pull/1421,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1421,"Test logic -
-a and -o have been marked obsolescent - https://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html
nohup:
ZeroTier -d forks.. this will allow debug and trace info to show up in docker logs

  
    
      ZeroTierOne/one.cpp
    
    
         Line 2259
      in
      6faca86
    
  
  
    

        
          
           long p = (long)fork();","Test logic -
-a and -o have been marked obsolescent - https://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html
nohup:
ZeroTier -d forks.. this will allow debug and trace info to show up in docker logs

  
    
      ZeroTierOne/one.cpp
    
    
         Line 2259
      in
      6faca86
    
  
  
    

        
          
           long p = (long)fork();",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1424,2021-06-29T08:51:45Z,2021-08-30T16:52:11Z,2021-08-30T16:52:11Z,CLOSED,False,8,5,1,https://github.com/navhaxs,add null check,1,[],https://github.com/zerotier/ZeroTierOne/pull/1424,https://github.com/navhaxs,1,https://github.com/zerotier/ZeroTierOne/pull/1424,"Summary
On my Windows system, the tray app more than often shows ""Node ID: unknown"". This PR completely fixes this issue for me.
Explanation
I did some digging and found that a missing null check is causing the monitor update thread to die silently.
At least on my system, the apiStatusCallback gets fired before SubscribeStatusUpdates. With the null check added, the thread doesn't die and this issue is fixed.
Issue screenshot (before fix)

After applying the PR, the Node ID and the networks list all works as expected :)","Summary
On my Windows system, the tray app more than often shows ""Node ID: unknown"". This PR completely fixes this issue for me.
Explanation
I did some digging and found that a missing null check is causing the monitor update thread to die silently.
At least on my system, the apiStatusCallback gets fired before SubscribeStatusUpdates. With the null check added, the thread doesn't die and this issue is fixed.
Issue screenshot (before fix)

After applying the PR, the Node ID and the networks list all works as expected :)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1424,2021-06-29T08:51:45Z,2021-08-30T16:52:11Z,2021-08-30T16:52:11Z,CLOSED,False,8,5,1,https://github.com/navhaxs,add null check,1,[],https://github.com/zerotier/ZeroTierOne/pull/1424,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1424#issuecomment-908507424,"Summary
On my Windows system, the tray app more than often shows ""Node ID: unknown"". This PR completely fixes this issue for me.
Explanation
I did some digging and found that a missing null check is causing the monitor update thread to die silently.
At least on my system, the apiStatusCallback gets fired before SubscribeStatusUpdates. With the null check added, the thread doesn't die and this issue is fixed.
Issue screenshot (before fix)

After applying the PR, the Node ID and the networks list all works as expected :)",Thanks for this improvement. Unfortunately this change will be obsoleted by an upcoming update to the UI in 1.8. I'm going to close this without merging but we still value your effort here.,True,{'THUMBS_UP': ['https://github.com/navhaxs']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1426,2021-07-07T22:02:06Z,,2022-04-15T16:16:16Z,OPEN,False,106,0,3,https://github.com/erikh,PTR record calculation from InetAddress,1,[],https://github.com/zerotier/ZeroTierOne/pull/1426,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1426,"This creates PTR search domains from InetAddress addresses. In the event a network is not used, it tries to determine it.
Please review the string handling. Thanks.
Signed-off-by: Erik Hollensbe linux@hollensbe.org","This creates PTR search domains from InetAddress addresses. In the event a network is not used, it tries to determine it.
Please review the string handling. Thanks.
Signed-off-by: Erik Hollensbe linux@hollensbe.org",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1426,2021-07-07T22:02:06Z,,2022-04-15T16:16:16Z,OPEN,False,106,0,3,https://github.com/erikh,PTR record calculation from InetAddress,1,[],https://github.com/zerotier/ZeroTierOne/pull/1426,https://github.com/erikh,2,https://github.com/zerotier/ZeroTierOne/pull/1426#issuecomment-1033033577,"This creates PTR search domains from InetAddress addresses. In the event a network is not used, it tries to determine it.
Please review the string handling. Thanks.
Signed-off-by: Erik Hollensbe linux@hollensbe.org",ping,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1426,2021-07-07T22:02:06Z,,2022-04-15T16:16:16Z,OPEN,False,106,0,3,https://github.com/erikh,PTR record calculation from InetAddress,1,[],https://github.com/zerotier/ZeroTierOne/pull/1426,https://github.com/erikh,3,https://github.com/zerotier/ZeroTierOne/pull/1426#issuecomment-1038265292,"This creates PTR search domains from InetAddress addresses. In the event a network is not used, it tries to determine it.
Please review the string handling. Thanks.
Signed-off-by: Erik Hollensbe linux@hollensbe.org",@adamierymenko can you poke at this when you get a moment?,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1430,2021-08-03T23:40:26Z,2021-08-04T20:14:10Z,2021-08-04T20:14:15Z,MERGED,True,1,1,1,https://github.com/laduke,Don't use v6 source addresses for v4 routes,1,[],https://github.com/zerotier/ZeroTierOne/pull/1430,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1430,"Don't use v6 source addresses for v4 routes
and vice versa.
For issue #1104
With some printf debugging, I was seeing:
here, src fe80::3c7a:2dff:fe0c:21ed, target 10.147.20.0, matchingPrefixBits 0, mostMatchingPrefixBits 0
here, src fd8b:d512:4fd6:255:3c99:932f:2fda:6eff, target 10.147.20.0, matchingPrefixBits 0, mostMatchingPrefixBits 0

which means (matchingPrefixBits >= mostMatchingPrefixBits) would be true
Then somewhere downstream from there on mac (and probably BSD), the default route would
get messed up:
default via 92:29:f1:6f:2f:76 dev en0
Tested on mac and linux so far.","Don't use v6 source addresses for v4 routes
and vice versa.
For issue #1104
With some printf debugging, I was seeing:
here, src fe80::3c7a:2dff:fe0c:21ed, target 10.147.20.0, matchingPrefixBits 0, mostMatchingPrefixBits 0
here, src fd8b:d512:4fd6:255:3c99:932f:2fda:6eff, target 10.147.20.0, matchingPrefixBits 0, mostMatchingPrefixBits 0

which means (matchingPrefixBits >= mostMatchingPrefixBits) would be true
Then somewhere downstream from there on mac (and probably BSD), the default route would
get messed up:
default via 92:29:f1:6f:2f:76 dev en0
Tested on mac and linux so far.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1442,2021-09-03T08:30:11Z,2021-11-29T17:06:15Z,2021-11-29T17:06:15Z,CLOSED,False,1,1,1,https://github.com/sbilly,"Update PostgreSQL.cpp, fix error message.",1,[],https://github.com/zerotier/ZeroTierOne/pull/1442,https://github.com/sbilly,1,https://github.com/zerotier/ZeroTierOne/pull/1442,fix error message.,fix error message.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1443,2021-09-03T11:44:45Z,2021-09-03T14:49:10Z,2021-09-03T15:38:21Z,CLOSED,False,29,27,1,https://github.com/sbilly,Update PostgreSQL.cpp,1,[],https://github.com/zerotier/ZeroTierOne/pull/1443,https://github.com/sbilly,1,https://github.com/zerotier/ZeroTierOne/pull/1443,"config[""dns""] is not must have configuration.","config[""dns""] is not must have configuration.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1443,2021-09-03T11:44:45Z,2021-09-03T14:49:10Z,2021-09-03T15:38:21Z,CLOSED,False,29,27,1,https://github.com/sbilly,Update PostgreSQL.cpp,1,[],https://github.com/zerotier/ZeroTierOne/pull/1443,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/1443#issuecomment-912596130,"config[""dns""] is not must have configuration.",already handled in another branch.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1443,2021-09-03T11:44:45Z,2021-09-03T14:49:10Z,2021-09-03T15:38:21Z,CLOSED,False,29,27,1,https://github.com/sbilly,Update PostgreSQL.cpp,1,[],https://github.com/zerotier/ZeroTierOne/pull/1443,https://github.com/glimberg,3,https://github.com/zerotier/ZeroTierOne/pull/1443#issuecomment-912628678,"config[""dns""] is not must have configuration.","Also note: this code is not included in the downloadable binaries of ZeroTier.  While we do publish the source here on GitHub, it is unsupported for end users.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1451,2021-09-20T17:04:04Z,2022-01-20T13:22:52Z,2022-01-20T13:22:53Z,MERGED,True,1,1,1,https://github.com/channelbeta,Update PGP keyserver URL,1,[],https://github.com/zerotier/ZeroTierOne/pull/1451,https://github.com/channelbeta,1,https://github.com/zerotier/ZeroTierOne/pull/1451,"Closes #1450
I replaced the old keyserver URL with a new one. The image build completes successfully with this change.","Closes #1450
I replaced the old keyserver URL with a new one. The image build completes successfully with this change.",True,"{'THUMBS_UP': ['https://github.com/flavioheleno', 'https://github.com/friedemann', 'https://github.com/billymoon']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1455,2021-09-29T17:46:28Z,2022-05-03T21:24:07Z,2022-05-03T21:25:11Z,CLOSED,False,19,1,2,https://github.com/rjsocha,allow to setup metric for created routes (linux only),1,[],https://github.com/zerotier/ZeroTierOne/pull/1455,https://github.com/rjsocha,1,https://github.com/zerotier/ZeroTierOne/pull/1455,"This hack is adding support for creating routes with metrics.
This is not for inclusion. More to open the door for discussion (if any).
By default, routes are created with metric 100000 (zerotier-one -mMETRIC to change this, 0 - to disable metric manipulation).
What is solve for me?
I have a roaming laptop and in one of my networks (ZT is installed on the gateway) if the laptop is connected via wifi+lan all local traffic is routed via ZT interface.
This is the same problem described in this issue: #750","This hack is adding support for creating routes with metrics.
This is not for inclusion. More to open the door for discussion (if any).
By default, routes are created with metric 100000 (zerotier-one -mMETRIC to change this, 0 - to disable metric manipulation).
What is solve for me?
I have a roaming laptop and in one of my networks (ZT is installed on the gateway) if the laptop is connected via wifi+lan all local traffic is routed via ZT interface.
This is the same problem described in this issue: #750",True,{'HOORAY': ['https://github.com/ihipop']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1455,2021-09-29T17:46:28Z,2022-05-03T21:24:07Z,2022-05-03T21:25:11Z,CLOSED,False,19,1,2,https://github.com/rjsocha,allow to setup metric for created routes (linux only),1,[],https://github.com/zerotier/ZeroTierOne/pull/1455,https://github.com/rjsocha,2,https://github.com/zerotier/ZeroTierOne/pull/1455#issuecomment-1116674291,"This hack is adding support for creating routes with metrics.
This is not for inclusion. More to open the door for discussion (if any).
By default, routes are created with metric 100000 (zerotier-one -mMETRIC to change this, 0 - to disable metric manipulation).
What is solve for me?
I have a roaming laptop and in one of my networks (ZT is installed on the gateway) if the laptop is connected via wifi+lan all local traffic is routed via ZT interface.
This is the same problem described in this issue: #750",Solved in #750,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1456,2021-10-01T12:27:26Z,2022-02-07T23:42:03Z,2022-02-07T23:42:03Z,CLOSED,False,3,3,1,https://github.com/friedemann,"Bump ZeroTier version for containerized builds to 1.6.6, update keyserver",1,[],https://github.com/zerotier/ZeroTierOne/pull/1456,https://github.com/friedemann,1,https://github.com/zerotier/ZeroTierOne/pull/1456,"Bump of the ZeroTier version used in the docker container after the recent security fix to 1.6.6.
I could not find a default version in the Dockerfile.release, since VERSION is required, I assume the zerotier/zerotier image is built & pushed by the ZT team itself.
FYI, I am aware of #1451 for #1450 but with that keyserver the build was stuck on
Executing: /tmp/apt-key-gpghome.0Bz4lJmXGr/gpg.1.sh --keyserver pgp.mit.edu --recv-keys 0x1657198823e52a61

that's why i moved it to the openpgp keyserver which runs through smoothly:
Executing: /tmp/apt-key-gpghome.3znQPmBekh/gpg.1.sh --keyserver keys.openpgp.org --recv-keys 0x1657198823e52a61
gpg: key 1657198823E52A61: public key ""ZeroTier, Inc. (ZeroTier Support and Release Signing Key) <contact@zerotier.com>"" imported
gpg: Total number processed: 1
gpg:               imported: 1","Bump of the ZeroTier version used in the docker container after the recent security fix to 1.6.6.
I could not find a default version in the Dockerfile.release, since VERSION is required, I assume the zerotier/zerotier image is built & pushed by the ZT team itself.
FYI, I am aware of #1451 for #1450 but with that keyserver the build was stuck on
Executing: /tmp/apt-key-gpghome.0Bz4lJmXGr/gpg.1.sh --keyserver pgp.mit.edu --recv-keys 0x1657198823e52a61

that's why i moved it to the openpgp keyserver which runs through smoothly:
Executing: /tmp/apt-key-gpghome.3znQPmBekh/gpg.1.sh --keyserver keys.openpgp.org --recv-keys 0x1657198823e52a61
gpg: key 1657198823E52A61: public key ""ZeroTier, Inc. (ZeroTier Support and Release Signing Key) <contact@zerotier.com>"" imported
gpg: Total number processed: 1
gpg:               imported: 1",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1456,2021-10-01T12:27:26Z,2022-02-07T23:42:03Z,2022-02-07T23:42:03Z,CLOSED,False,3,3,1,https://github.com/friedemann,"Bump ZeroTier version for containerized builds to 1.6.6, update keyserver",1,[],https://github.com/zerotier/ZeroTierOne/pull/1456,https://github.com/Jonaslopes123,2,https://github.com/zerotier/ZeroTierOne/pull/1456#issuecomment-1025255321,"Bump of the ZeroTier version used in the docker container after the recent security fix to 1.6.6.
I could not find a default version in the Dockerfile.release, since VERSION is required, I assume the zerotier/zerotier image is built & pushed by the ZT team itself.
FYI, I am aware of #1451 for #1450 but with that keyserver the build was stuck on
Executing: /tmp/apt-key-gpghome.0Bz4lJmXGr/gpg.1.sh --keyserver pgp.mit.edu --recv-keys 0x1657198823e52a61

that's why i moved it to the openpgp keyserver which runs through smoothly:
Executing: /tmp/apt-key-gpghome.3znQPmBekh/gpg.1.sh --keyserver keys.openpgp.org --recv-keys 0x1657198823e52a61
gpg: key 1657198823E52A61: public key ""ZeroTier, Inc. (ZeroTier Support and Release Signing Key) <contact@zerotier.com>"" imported
gpg: Total number processed: 1
gpg:               imported: 1",1657198823E52A61,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1456,2021-10-01T12:27:26Z,2022-02-07T23:42:03Z,2022-02-07T23:42:03Z,CLOSED,False,3,3,1,https://github.com/friedemann,"Bump ZeroTier version for containerized builds to 1.6.6, update keyserver",1,[],https://github.com/zerotier/ZeroTierOne/pull/1456,https://github.com/Jonaslopes123,3,https://github.com/zerotier/ZeroTierOne/pull/1456#issuecomment-1025255368,"Bump of the ZeroTier version used in the docker container after the recent security fix to 1.6.6.
I could not find a default version in the Dockerfile.release, since VERSION is required, I assume the zerotier/zerotier image is built & pushed by the ZT team itself.
FYI, I am aware of #1451 for #1450 but with that keyserver the build was stuck on
Executing: /tmp/apt-key-gpghome.0Bz4lJmXGr/gpg.1.sh --keyserver pgp.mit.edu --recv-keys 0x1657198823e52a61

that's why i moved it to the openpgp keyserver which runs through smoothly:
Executing: /tmp/apt-key-gpghome.3znQPmBekh/gpg.1.sh --keyserver keys.openpgp.org --recv-keys 0x1657198823e52a61
gpg: key 1657198823E52A61: public key ""ZeroTier, Inc. (ZeroTier Support and Release Signing Key) <contact@zerotier.com>"" imported
gpg: Total number processed: 1
gpg:               imported: 1",10.147.20.0/24,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1456,2021-10-01T12:27:26Z,2022-02-07T23:42:03Z,2022-02-07T23:42:03Z,CLOSED,False,3,3,1,https://github.com/friedemann,"Bump ZeroTier version for containerized builds to 1.6.6, update keyserver",1,[],https://github.com/zerotier/ZeroTierOne/pull/1456,https://github.com/Jonaslopes123,4,https://github.com/zerotier/ZeroTierOne/pull/1456#issuecomment-1025255401,"Bump of the ZeroTier version used in the docker container after the recent security fix to 1.6.6.
I could not find a default version in the Dockerfile.release, since VERSION is required, I assume the zerotier/zerotier image is built & pushed by the ZT team itself.
FYI, I am aware of #1451 for #1450 but with that keyserver the build was stuck on
Executing: /tmp/apt-key-gpghome.0Bz4lJmXGr/gpg.1.sh --keyserver pgp.mit.edu --recv-keys 0x1657198823e52a61

that's why i moved it to the openpgp keyserver which runs through smoothly:
Executing: /tmp/apt-key-gpghome.3znQPmBekh/gpg.1.sh --keyserver keys.openpgp.org --recv-keys 0x1657198823e52a61
gpg: key 1657198823E52A61: public key ""ZeroTier, Inc. (ZeroTier Support and Release Signing Key) <contact@zerotier.com>"" imported
gpg: Total number processed: 1
gpg:               imported: 1",192.168.168.0/24,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1456,2021-10-01T12:27:26Z,2022-02-07T23:42:03Z,2022-02-07T23:42:03Z,CLOSED,False,3,3,1,https://github.com/friedemann,"Bump ZeroTier version for containerized builds to 1.6.6, update keyserver",1,[],https://github.com/zerotier/ZeroTierOne/pull/1456,https://github.com/joseph-henry,5,https://github.com/zerotier/ZeroTierOne/pull/1456#issuecomment-1032053397,"Bump of the ZeroTier version used in the docker container after the recent security fix to 1.6.6.
I could not find a default version in the Dockerfile.release, since VERSION is required, I assume the zerotier/zerotier image is built & pushed by the ZT team itself.
FYI, I am aware of #1451 for #1450 but with that keyserver the build was stuck on
Executing: /tmp/apt-key-gpghome.0Bz4lJmXGr/gpg.1.sh --keyserver pgp.mit.edu --recv-keys 0x1657198823e52a61

that's why i moved it to the openpgp keyserver which runs through smoothly:
Executing: /tmp/apt-key-gpghome.3znQPmBekh/gpg.1.sh --keyserver keys.openpgp.org --recv-keys 0x1657198823e52a61
gpg: key 1657198823E52A61: public key ""ZeroTier, Inc. (ZeroTier Support and Release Signing Key) <contact@zerotier.com>"" imported
gpg: Total number processed: 1
gpg:               imported: 1",Closing since this appears to have been fixed. Thank you.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1457,2021-10-01T22:41:16Z,2021-10-01T22:45:09Z,2021-10-01T22:45:54Z,CLOSED,False,2,2,1,https://github.com/capruro,Dockerfile version bump to 1.6.6,1,[],https://github.com/zerotier/ZeroTierOne/pull/1457,https://github.com/capruro,1,https://github.com/zerotier/ZeroTierOne/pull/1457,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1457,2021-10-01T22:41:16Z,2021-10-01T22:45:09Z,2021-10-01T22:45:54Z,CLOSED,False,2,2,1,https://github.com/capruro,Dockerfile version bump to 1.6.6,1,[],https://github.com/zerotier/ZeroTierOne/pull/1457,https://github.com/capruro,2,https://github.com/zerotier/ZeroTierOne/pull/1457#issuecomment-932618254,,"I just noticed this is a duplicated PR #1456
Closing it.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1458,2021-10-05T10:26:53Z,2022-02-07T23:41:51Z,2022-02-07T23:41:51Z,CLOSED,False,3,3,1,https://github.com/asbjornenge,Updated version and keyserver for Dockerfile,1,[],https://github.com/zerotier/ZeroTierOne/pull/1458,https://github.com/asbjornenge,1,https://github.com/zerotier/ZeroTierOne/pull/1458,Updated to a working keyserver and also set latest version 🙌,Updated to a working keyserver and also set latest version 🙌,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1458,2021-10-05T10:26:53Z,2022-02-07T23:41:51Z,2022-02-07T23:41:51Z,CLOSED,False,3,3,1,https://github.com/asbjornenge,Updated version and keyserver for Dockerfile,1,[],https://github.com/zerotier/ZeroTierOne/pull/1458,https://github.com/geekscrapy,2,https://github.com/zerotier/ZeroTierOne/pull/1458#issuecomment-942711525,Updated to a working keyserver and also set latest version 🙌,"Was just about to commit my own fix!!
Please merge this, devs
👍",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1458,2021-10-05T10:26:53Z,2022-02-07T23:41:51Z,2022-02-07T23:41:51Z,CLOSED,False,3,3,1,https://github.com/asbjornenge,Updated version and keyserver for Dockerfile,1,[],https://github.com/zerotier/ZeroTierOne/pull/1458,https://github.com/joseph-henry,3,https://github.com/zerotier/ZeroTierOne/pull/1458#issuecomment-1032053309,Updated to a working keyserver and also set latest version 🙌,Closing since this appears to have been fixed. Thank you.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1467,2021-10-28T21:23:55Z,2022-04-06T18:37:57Z,2022-04-06T19:37:47Z,CLOSED,False,1,1,1,https://github.com/nicksmith53,Fix docker entrypoint.sh startup check,1,[],https://github.com/zerotier/ZeroTierOne/pull/1467,https://github.com/nicksmith53,1,https://github.com/zerotier/ZeroTierOne/pull/1467,Fixes a loop when restarting an existing ZeroTier container.,Fixes a loop when restarting an existing ZeroTier container.,True,{'THUMBS_UP': ['https://github.com/ivkos']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1467,2021-10-28T21:23:55Z,2022-04-06T18:37:57Z,2022-04-06T19:37:47Z,CLOSED,False,1,1,1,https://github.com/nicksmith53,Fix docker entrypoint.sh startup check,1,[],https://github.com/zerotier/ZeroTierOne/pull/1467,https://github.com/nicksmith53,2,https://github.com/zerotier/ZeroTierOne/pull/1467#issuecomment-1090602739,Fixes a loop when restarting an existing ZeroTier container.,Fixed in f413726,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1467,2021-10-28T21:23:55Z,2022-04-06T18:37:57Z,2022-04-06T19:37:47Z,CLOSED,False,1,1,1,https://github.com/nicksmith53,Fix docker entrypoint.sh startup check,1,[],https://github.com/zerotier/ZeroTierOne/pull/1467,https://github.com/erikh,3,https://github.com/zerotier/ZeroTierOne/pull/1467#issuecomment-1090688748,Fixes a loop when restarting an existing ZeroTier container.,sorry I apparently missed this ticket. thanks for doing this!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1468,2021-10-28T23:27:20Z,,2022-04-20T16:43:39Z,OPEN,False,185,42,7,https://github.com/GermanCoding,Add functionality to enable or disable networks (fixes #659),2,[],https://github.com/zerotier/ZeroTierOne/pull/1468,https://github.com/GermanCoding,1,https://github.com/zerotier/ZeroTierOne/pull/1468,"So I'm mostly opening this PR because of recent popularity in issue #659. I originally did not intend to open this PR before 2.0 (e.g because of the UI changes and I also believe 2.0 will have stuff rewritten in Go?), but here we go anyway.
Description
This PR introduces the concept of a disabled network. Disabled networks behave like the user left them, except that local config data and the TAP interface is still retained (in an offline state).
This feature is useful when users do not always want to be part of a network. In some scenarios, users might want to temporarily leave a network, with the intention of re-joining (minutes/days/weeks/months) later. In this case ZeroTier's deleting of TAP interfaces (as well as the local config) is not desired. For these use-cases, networks can now be disabled. The old ""leave the network and destroy everything"" behaviour still exists, this is implemented as an optional feature.
The PR adds to new CLI commands (and corresponding HTTP endpoints in the service):
zerotier-cli enable <network>  - Enables a network
zerotier-cli disable <network> - Disables a network

Joining or leaving a disabled network won't work. In order to rejoin a disabled network, it must
be re-enabled instead (disabling & enabling also auto-leaves/joins networks as appropriate).
This exact behaviour is up to discussion, and was mostly implemented because it was easier this way.
Disabled networks remain disabled, even across restarts, until enabled again via the
appropriate command.
In order to be really useful for users, the ZeroTier UI should also enable usage of this feature. However, since that is now a different project, a different PR would be needed for this. I'm also not experienced in Rust, so not sure if I will be able to make a PR to the UI project.
Technical details
The PR adds a new local config object which stores the disabled state (true/false). On startup, if the disabled state is true, the network will be brought down again immediatly after loading it (this currently relies on some magic error signaling). The node no longer considers itself to be a member of this network. As soon as the network is re-enabled again, the node rejoins the network (and the TAP is brought up again). Disabling a network brings down the TAP interface and the node leaves the network, but the TAP as well as the local config is not destroyed.
A few changes to existing code were required:

Saving of network settings assumed that the network would exist in memory and would bail out if this wasn't the case. In order to change settings on a disabled network (which is not loaded at that time), this had to be changed to also allow changes to networks not currently joined by the node.
Loading of the local network config was previously inline and is now in its own function, to avoid code duplication.

Testing
I've been using this code (older commits, but functionally identical) in my fork of ZeroTier for over a year now, and I haven't seen many issues with the code, though I've never considered it production-ready. I have only ever tried this code under Windows.","So I'm mostly opening this PR because of recent popularity in issue #659. I originally did not intend to open this PR before 2.0 (e.g because of the UI changes and I also believe 2.0 will have stuff rewritten in Go?), but here we go anyway.
Description
This PR introduces the concept of a disabled network. Disabled networks behave like the user left them, except that local config data and the TAP interface is still retained (in an offline state).
This feature is useful when users do not always want to be part of a network. In some scenarios, users might want to temporarily leave a network, with the intention of re-joining (minutes/days/weeks/months) later. In this case ZeroTier's deleting of TAP interfaces (as well as the local config) is not desired. For these use-cases, networks can now be disabled. The old ""leave the network and destroy everything"" behaviour still exists, this is implemented as an optional feature.
The PR adds to new CLI commands (and corresponding HTTP endpoints in the service):
zerotier-cli enable <network>  - Enables a network
zerotier-cli disable <network> - Disables a network

Joining or leaving a disabled network won't work. In order to rejoin a disabled network, it must
be re-enabled instead (disabling & enabling also auto-leaves/joins networks as appropriate).
This exact behaviour is up to discussion, and was mostly implemented because it was easier this way.
Disabled networks remain disabled, even across restarts, until enabled again via the
appropriate command.
In order to be really useful for users, the ZeroTier UI should also enable usage of this feature. However, since that is now a different project, a different PR would be needed for this. I'm also not experienced in Rust, so not sure if I will be able to make a PR to the UI project.
Technical details
The PR adds a new local config object which stores the disabled state (true/false). On startup, if the disabled state is true, the network will be brought down again immediatly after loading it (this currently relies on some magic error signaling). The node no longer considers itself to be a member of this network. As soon as the network is re-enabled again, the node rejoins the network (and the TAP is brought up again). Disabling a network brings down the TAP interface and the node leaves the network, but the TAP as well as the local config is not destroyed.
A few changes to existing code were required:

Saving of network settings assumed that the network would exist in memory and would bail out if this wasn't the case. In order to change settings on a disabled network (which is not loaded at that time), this had to be changed to also allow changes to networks not currently joined by the node.
Loading of the local network config was previously inline and is now in its own function, to avoid code duplication.

Testing
I've been using this code (older commits, but functionally identical) in my fork of ZeroTier for over a year now, and I haven't seen many issues with the code, though I've never considered it production-ready. I have only ever tried this code under Windows.",True,{'THUMBS_UP': ['https://github.com/EdvinM']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1468,2021-10-28T23:27:20Z,,2022-04-20T16:43:39Z,OPEN,False,185,42,7,https://github.com/GermanCoding,Add functionality to enable or disable networks (fixes #659),2,[],https://github.com/zerotier/ZeroTierOne/pull/1468,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/1468#issuecomment-963410972,"So I'm mostly opening this PR because of recent popularity in issue #659. I originally did not intend to open this PR before 2.0 (e.g because of the UI changes and I also believe 2.0 will have stuff rewritten in Go?), but here we go anyway.
Description
This PR introduces the concept of a disabled network. Disabled networks behave like the user left them, except that local config data and the TAP interface is still retained (in an offline state).
This feature is useful when users do not always want to be part of a network. In some scenarios, users might want to temporarily leave a network, with the intention of re-joining (minutes/days/weeks/months) later. In this case ZeroTier's deleting of TAP interfaces (as well as the local config) is not desired. For these use-cases, networks can now be disabled. The old ""leave the network and destroy everything"" behaviour still exists, this is implemented as an optional feature.
The PR adds to new CLI commands (and corresponding HTTP endpoints in the service):
zerotier-cli enable <network>  - Enables a network
zerotier-cli disable <network> - Disables a network

Joining or leaving a disabled network won't work. In order to rejoin a disabled network, it must
be re-enabled instead (disabling & enabling also auto-leaves/joins networks as appropriate).
This exact behaviour is up to discussion, and was mostly implemented because it was easier this way.
Disabled networks remain disabled, even across restarts, until enabled again via the
appropriate command.
In order to be really useful for users, the ZeroTier UI should also enable usage of this feature. However, since that is now a different project, a different PR would be needed for this. I'm also not experienced in Rust, so not sure if I will be able to make a PR to the UI project.
Technical details
The PR adds a new local config object which stores the disabled state (true/false). On startup, if the disabled state is true, the network will be brought down again immediatly after loading it (this currently relies on some magic error signaling). The node no longer considers itself to be a member of this network. As soon as the network is re-enabled again, the node rejoins the network (and the TAP is brought up again). Disabling a network brings down the TAP interface and the node leaves the network, but the TAP as well as the local config is not destroyed.
A few changes to existing code were required:

Saving of network settings assumed that the network would exist in memory and would bail out if this wasn't the case. In order to change settings on a disabled network (which is not loaded at that time), this had to be changed to also allow changes to networks not currently joined by the node.
Loading of the local network config was previously inline and is now in its own function, to avoid code duplication.

Testing
I've been using this code (older commits, but functionally identical) in my fork of ZeroTier for over a year now, and I haven't seen many issues with the code, though I've never considered it production-ready. I have only ever tried this code under Windows.","I'm not sure this patch is going to work for us as it changes the CLI.  If this simply marked/reused Windows network profiles, that would probably get a faster track to the mainline code.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1468,2021-10-28T23:27:20Z,,2022-04-20T16:43:39Z,OPEN,False,185,42,7,https://github.com/GermanCoding,Add functionality to enable or disable networks (fixes #659),2,[],https://github.com/zerotier/ZeroTierOne/pull/1468,https://github.com/GermanCoding,3,https://github.com/zerotier/ZeroTierOne/pull/1468#issuecomment-1104152309,"So I'm mostly opening this PR because of recent popularity in issue #659. I originally did not intend to open this PR before 2.0 (e.g because of the UI changes and I also believe 2.0 will have stuff rewritten in Go?), but here we go anyway.
Description
This PR introduces the concept of a disabled network. Disabled networks behave like the user left them, except that local config data and the TAP interface is still retained (in an offline state).
This feature is useful when users do not always want to be part of a network. In some scenarios, users might want to temporarily leave a network, with the intention of re-joining (minutes/days/weeks/months) later. In this case ZeroTier's deleting of TAP interfaces (as well as the local config) is not desired. For these use-cases, networks can now be disabled. The old ""leave the network and destroy everything"" behaviour still exists, this is implemented as an optional feature.
The PR adds to new CLI commands (and corresponding HTTP endpoints in the service):
zerotier-cli enable <network>  - Enables a network
zerotier-cli disable <network> - Disables a network

Joining or leaving a disabled network won't work. In order to rejoin a disabled network, it must
be re-enabled instead (disabling & enabling also auto-leaves/joins networks as appropriate).
This exact behaviour is up to discussion, and was mostly implemented because it was easier this way.
Disabled networks remain disabled, even across restarts, until enabled again via the
appropriate command.
In order to be really useful for users, the ZeroTier UI should also enable usage of this feature. However, since that is now a different project, a different PR would be needed for this. I'm also not experienced in Rust, so not sure if I will be able to make a PR to the UI project.
Technical details
The PR adds a new local config object which stores the disabled state (true/false). On startup, if the disabled state is true, the network will be brought down again immediatly after loading it (this currently relies on some magic error signaling). The node no longer considers itself to be a member of this network. As soon as the network is re-enabled again, the node rejoins the network (and the TAP is brought up again). Disabling a network brings down the TAP interface and the node leaves the network, but the TAP as well as the local config is not destroyed.
A few changes to existing code were required:

Saving of network settings assumed that the network would exist in memory and would bail out if this wasn't the case. In order to change settings on a disabled network (which is not loaded at that time), this had to be changed to also allow changes to networks not currently joined by the node.
Loading of the local network config was previously inline and is now in its own function, to avoid code duplication.

Testing
I've been using this code (older commits, but functionally identical) in my fork of ZeroTier for over a year now, and I haven't seen many issues with the code, though I've never considered it production-ready. I have only ever tried this code under Windows.","Sorry for letting this sit for so long.
So just that I'm getting this right your policy is ""no CLI changes at all""? Because this does not change existing commands, full compatibility is ensured and all existing commands work just the same as before. All this does is to add new commands with new features.
I believe reusing network profiles is an entirely different story that would also work differently - right now this is an optional feature. Users can either choose to keep their settings or lose them. Automatically reusing would make this no longer optional. This currently also keeps the local config (which is also a cross-platform feature of this) while your proposal won't be able to have this.
I'm not sure if I will find the time to rewrite the whole thing, and I'm also not 100% sure if network profile magic is possible without touching the driver (which I really don't want to do) - haven't yet looked where this is handled.
I have just rebased this on a recent ZT release, so if anyone has still interest in this feel free to have a look.",True,{'THUMBS_UP': ['https://github.com/EdvinM']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1468,2021-10-28T23:27:20Z,,2022-04-20T16:43:39Z,OPEN,False,185,42,7,https://github.com/GermanCoding,Add functionality to enable or disable networks (fixes #659),2,[],https://github.com/zerotier/ZeroTierOne/pull/1468,https://github.com/joseph-henry,4,https://github.com/zerotier/ZeroTierOne/pull/1468#issuecomment-1104155237,"So I'm mostly opening this PR because of recent popularity in issue #659. I originally did not intend to open this PR before 2.0 (e.g because of the UI changes and I also believe 2.0 will have stuff rewritten in Go?), but here we go anyway.
Description
This PR introduces the concept of a disabled network. Disabled networks behave like the user left them, except that local config data and the TAP interface is still retained (in an offline state).
This feature is useful when users do not always want to be part of a network. In some scenarios, users might want to temporarily leave a network, with the intention of re-joining (minutes/days/weeks/months) later. In this case ZeroTier's deleting of TAP interfaces (as well as the local config) is not desired. For these use-cases, networks can now be disabled. The old ""leave the network and destroy everything"" behaviour still exists, this is implemented as an optional feature.
The PR adds to new CLI commands (and corresponding HTTP endpoints in the service):
zerotier-cli enable <network>  - Enables a network
zerotier-cli disable <network> - Disables a network

Joining or leaving a disabled network won't work. In order to rejoin a disabled network, it must
be re-enabled instead (disabling & enabling also auto-leaves/joins networks as appropriate).
This exact behaviour is up to discussion, and was mostly implemented because it was easier this way.
Disabled networks remain disabled, even across restarts, until enabled again via the
appropriate command.
In order to be really useful for users, the ZeroTier UI should also enable usage of this feature. However, since that is now a different project, a different PR would be needed for this. I'm also not experienced in Rust, so not sure if I will be able to make a PR to the UI project.
Technical details
The PR adds a new local config object which stores the disabled state (true/false). On startup, if the disabled state is true, the network will be brought down again immediatly after loading it (this currently relies on some magic error signaling). The node no longer considers itself to be a member of this network. As soon as the network is re-enabled again, the node rejoins the network (and the TAP is brought up again). Disabling a network brings down the TAP interface and the node leaves the network, but the TAP as well as the local config is not destroyed.
A few changes to existing code were required:

Saving of network settings assumed that the network would exist in memory and would bail out if this wasn't the case. In order to change settings on a disabled network (which is not loaded at that time), this had to be changed to also allow changes to networks not currently joined by the node.
Loading of the local network config was previously inline and is now in its own function, to avoid code duplication.

Testing
I've been using this code (older commits, but functionally identical) in my fork of ZeroTier for over a year now, and I haven't seen many issues with the code, though I've never considered it production-ready. I have only ever tried this code under Windows.",We'll take another look. Thanks.,True,{'THUMBS_UP': ['https://github.com/LuciferSam86']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1478,2021-11-02T18:28:41Z,2021-11-02T18:38:33Z,2021-12-14T17:02:19Z,MERGED,True,3,0,2,https://github.com/laduke,Fix multicast flag on linux interfaces.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1478,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1478,"When we re-ordered the way the interfaces come up, this flag
stopped getting set automatically.
see 9374e45
and github issue #1477","When we re-ordered the way the interfaces come up, this flag
stopped getting set automatically.
see 9374e45
and github issue #1477",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1480,2021-11-03T12:23:12Z,,2021-11-03T12:23:12Z,OPEN,False,12,10,1,https://github.com/daurnimator,dockerfile: Use apt repository instead of dpkg directly,1,[],https://github.com/zerotier/ZeroTierOne/pull/1480,https://github.com/daurnimator,1,https://github.com/zerotier/ZeroTierOne/pull/1480,"In addition to being better practice, this helps make things architecture independant","In addition to being better practice, this helps make things architecture independant",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1487,2021-11-10T20:51:23Z,2021-11-10T21:07:07Z,2021-11-10T22:41:54Z,MERGED,True,83,0,2,https://github.com/capruro,Adding snapcraft ,1,[],https://github.com/zerotier/ZeroTierOne/pull/1487,https://github.com/capruro,1,https://github.com/zerotier/ZeroTierOne/pull/1487,"This PR add snapcraft file required by snapcraft.
I chose core18 for it's compatibility with i386 architecture, since core20 drop its support, I though to have the more compatible system since there are some people using it.
Cheers! 🍻","This PR add snapcraft file required by snapcraft.
I chose core18 for it's compatibility with i386 architecture, since core20 drop its support, I though to have the more compatible system since there are some people using it.
Cheers! 🍻",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1487,2021-11-10T20:51:23Z,2021-11-10T21:07:07Z,2021-11-10T22:41:54Z,MERGED,True,83,0,2,https://github.com/capruro,Adding snapcraft ,1,[],https://github.com/zerotier/ZeroTierOne/pull/1487,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1487#issuecomment-965745768,"This PR add snapcraft file required by snapcraft.
I chose core18 for it's compatibility with i386 architecture, since core20 drop its support, I though to have the more compatible system since there are some people using it.
Cheers! 🍻","Excellent, thank you for your contribution! I'm doing some dry run practice builds. Did you ever use launchpad for your cross-platform builds?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1487,2021-11-10T20:51:23Z,2021-11-10T21:07:07Z,2021-11-10T22:41:54Z,MERGED,True,83,0,2,https://github.com/capruro,Adding snapcraft ,1,[],https://github.com/zerotier/ZeroTierOne/pull/1487,https://github.com/capruro,3,https://github.com/zerotier/ZeroTierOne/pull/1487#issuecomment-965761251,"This PR add snapcraft file required by snapcraft.
I chose core18 for it's compatibility with i386 architecture, since core20 drop its support, I though to have the more compatible system since there are some people using it.
Cheers! 🍻","yes, I use Multipass to avoid dry run installation (for local testing) then the best way to have everything automated it's to have the github account linked into the snapstore to build the snap using their launchpad. You can check the snapcraft remote build documentation: https://snapcraft.io/docs/remote-build",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1487,2021-11-10T20:51:23Z,2021-11-10T21:07:07Z,2021-11-10T22:41:54Z,MERGED,True,83,0,2,https://github.com/capruro,Adding snapcraft ,1,[],https://github.com/zerotier/ZeroTierOne/pull/1487,https://github.com/capruro,4,https://github.com/zerotier/ZeroTierOne/pull/1487#issuecomment-965805404,"This PR add snapcraft file required by snapcraft.
I chose core18 for it's compatibility with i386 architecture, since core20 drop its support, I though to have the more compatible system since there are some people using it.
Cheers! 🍻","Ok, I see the transfer it's completed. You now own the snap! 🎉
You can connect this repo into the snapstore page.
I also opened #1489 to remove source-type since now it's not necessary.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1488,2021-11-10T20:52:26Z,2021-12-14T16:54:46Z,2021-12-14T17:00:56Z,MERGED,True,141,1,4,https://github.com/laduke,Convince macOS to do ipv6 dns lookups,1,[],https://github.com/zerotier/ZeroTierOne/pull/1488,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1488,"Puts a value into System Config, similar to how DNS push works.
closes #1466
https://apple.stackexchange.com/questions/309430/ipv6-dns-resolution-on-macos-high-sierra","Puts a value into System Config, similar to how DNS push works.
closes #1466
https://apple.stackexchange.com/questions/309430/ipv6-dns-resolution-on-macos-high-sierra",True,{'THUMBS_UP': ['https://github.com/glimberg']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1489,2021-11-10T22:16:50Z,2021-11-11T21:53:43Z,2021-11-11T21:53:43Z,MERGED,True,1,2,1,https://github.com/capruro,removing source-type from snapcraft,1,[],https://github.com/zerotier/ZeroTierOne/pull/1489,https://github.com/capruro,1,https://github.com/zerotier/ZeroTierOne/pull/1489,Unnecessary since now the source it's local,Unnecessary since now the source it's local,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1504,2021-12-03T13:30:14Z,2021-12-13T19:56:51Z,2021-12-13T19:56:52Z,MERGED,True,2,2,1,https://github.com/capruro,Version bump to 1.8.4,1,[],https://github.com/zerotier/ZeroTierOne/pull/1504,https://github.com/capruro,1,https://github.com/zerotier/ZeroTierOne/pull/1504,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1509,2021-12-13T20:02:25Z,2021-12-13T20:17:40Z,2021-12-15T23:06:55Z,MERGED,True,51,11,2,https://github.com/joseph-henry,"Proposed fix for ""path amnesia""",1,[],https://github.com/zerotier/ZeroTierOne/pull/1509,https://github.com/joseph-henry,1,https://github.com/zerotier/ZeroTierOne/pull/1509,"Current behavior
Under ordinary circumstances upon receipt of a packet from a peer a local client will check whether the path carrying that packet is a pre-existing Path object. If it is, it will not re-learn this path. This is correct behavior.
However, if a packet is received on a path not currently in the _paths array it will begin a process of trying to determine what pre-existing path this new path can replace. Not only is this next process engaged prematurely but it also doesn't take into account the following situation:

New path matches physical IP address of existing path but not port or underlying listening sockets

This results in ZT re-learning the ""same"" path and overwriting existing paths repeatedly. A simple example:

ZT learns 1.2.3.4:9993
ZT writes this Path into _paths[0]
ZT learns of 1.2.3.4:45556
ZT detects that this Path object is not currently in _paths and begins the replacement process. This is correct, but neglects to check the port. A similar error can be made even if the ports are the same if the listening socket isn't considered!
ZT finds a path in _paths with a matching IP and overwrites that path with the new path

The resulting _paths structure is now:
_paths[0] = 1.2.3.4:45556

Where it should be:
_paths[0] = 1.2.3.4:9993
_paths[1] = 1.2.3.4:45556

The problem begins when ZT re-encounters 1.2.3.4:9993. Currently it would re-re-learn the ""same"" path and overwrite _paths[0] again. This loop continues indefinitely. Between any two peers there are up to 9 possible ""paths"":
1.2.3.4 : 9993  : listen-sock-0 (incoming in port 9993)
1.2.3.4 : 9993  : listen-sock-1 (incoming in port 20000)
1.2.3.4 : 9993  : listen-sock-2 (incoming in port 45000)

1.2.3.4 : 20000 : listen-sock-0 (incoming in port 9993)
1.2.3.4 : 20000 : listen-sock-1 (incoming in port 20000)
1.2.3.4 : 20000 : listen-sock-2 (incoming in port 45000)

1.2.3.4 : 45000 : listen-sock-0 (incoming in port 9993)
1.2.3.4 : 45000 : listen-sock-1 (incoming in port 20000)
1.2.3.4 : 45000 : listen-sock-2 (incoming in port 45000)

Simply adding a second WAN interface doubles this number to 18.
Proposed new behavior:

First, fill all free slots in _paths before attempting to replace anything
If above fails, attempt to replace the path that has been dead the longest
If no free slots, and no dead paths (unlikely), then replace old path most similar to new path
If all of the above fails to yield a suitable replacement. Replace first found to have lower (quality / priority)

With this new behavior one side-effect is that the _paths array contains more entries. So we should considering increasing ZT_MAX_PEER_NETWORK_PATHS from 16 to 64.","Current behavior
Under ordinary circumstances upon receipt of a packet from a peer a local client will check whether the path carrying that packet is a pre-existing Path object. If it is, it will not re-learn this path. This is correct behavior.
However, if a packet is received on a path not currently in the _paths array it will begin a process of trying to determine what pre-existing path this new path can replace. Not only is this next process engaged prematurely but it also doesn't take into account the following situation:

New path matches physical IP address of existing path but not port or underlying listening sockets

This results in ZT re-learning the ""same"" path and overwriting existing paths repeatedly. A simple example:

ZT learns 1.2.3.4:9993
ZT writes this Path into _paths[0]
ZT learns of 1.2.3.4:45556
ZT detects that this Path object is not currently in _paths and begins the replacement process. This is correct, but neglects to check the port. A similar error can be made even if the ports are the same if the listening socket isn't considered!
ZT finds a path in _paths with a matching IP and overwrites that path with the new path

The resulting _paths structure is now:
_paths[0] = 1.2.3.4:45556

Where it should be:
_paths[0] = 1.2.3.4:9993
_paths[1] = 1.2.3.4:45556

The problem begins when ZT re-encounters 1.2.3.4:9993. Currently it would re-re-learn the ""same"" path and overwrite _paths[0] again. This loop continues indefinitely. Between any two peers there are up to 9 possible ""paths"":
1.2.3.4 : 9993  : listen-sock-0 (incoming in port 9993)
1.2.3.4 : 9993  : listen-sock-1 (incoming in port 20000)
1.2.3.4 : 9993  : listen-sock-2 (incoming in port 45000)

1.2.3.4 : 20000 : listen-sock-0 (incoming in port 9993)
1.2.3.4 : 20000 : listen-sock-1 (incoming in port 20000)
1.2.3.4 : 20000 : listen-sock-2 (incoming in port 45000)

1.2.3.4 : 45000 : listen-sock-0 (incoming in port 9993)
1.2.3.4 : 45000 : listen-sock-1 (incoming in port 20000)
1.2.3.4 : 45000 : listen-sock-2 (incoming in port 45000)

Simply adding a second WAN interface doubles this number to 18.
Proposed new behavior:

First, fill all free slots in _paths before attempting to replace anything
If above fails, attempt to replace the path that has been dead the longest
If no free slots, and no dead paths (unlikely), then replace old path most similar to new path
If all of the above fails to yield a suitable replacement. Replace first found to have lower (quality / priority)

With this new behavior one side-effect is that the _paths array contains more entries. So we should considering increasing ZT_MAX_PEER_NETWORK_PATHS from 16 to 64.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1510,2021-12-13T20:25:35Z,2021-12-13T20:35:36Z,2022-02-02T19:59:54Z,MERGED,True,0,17,1,https://github.com/someara,removing commit linter,1,[],https://github.com/zerotier/ZeroTierOne/pull/1510,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1510,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1513,2021-12-15T21:23:57Z,2021-12-15T21:25:13Z,2021-12-15T21:25:13Z,MERGED,True,4,4,1,https://github.com/andrejbinder,Prevent arithmetic error on interface change.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1513,https://github.com/andrejbinder,1,https://github.com/zerotier/ZeroTierOne/pull/1513,"Fix for:
Thread 1 ""zerotier-one"" received signal SIGFPE, Arithmetic exception.
0x00005555555d299c in ZeroTier::Bond::assignFlowToBondedPath (this=this@entry=0x5555557d6a40, flow=..., now=now@entry=1639595945030) at node/SharedPtr.hpp:87
87    node/SharedPtr.hpp: No such file or directory.
(gdb) bt
#0  0x00005555555d299c in ZeroTier::Bond::assignFlowToBondedPath (this=this@entry=0x5555557d6a40, flow=..., now=now@entry=1639595945030) at node/SharedPtr.hpp:87
#1  0x00005555555d3bda in ZeroTier::Bond::processBalanceTasks (this=this@entry=0x5555557d6a40, now=now@entry=1639595945030) at node/Bond.cpp:1128
#2  0x00005555555d77c6 in ZeroTier::Bond::processBackgroundBondTasks (this=0x5555557d6a40, tPtr=tPtr@entry=0x0, now=now@entry=1639595945030) at node/Bond.cpp:787
#3  0x00005555555d78b2 in ZeroTier::Bond::processBackgroundTasks (tPtr=tPtr@entry=0x0, now=now@entry=1639595945030) at node/Bond.cpp:185
#4  0x00005555555a8e28 in ZeroTier::Node::processBackgroundTasks (this=0x7ffff7a40010, tptr=tptr@entry=0x0, now=now@entry=1639595945030,
nextBackgroundTaskDeadline=nextBackgroundTaskDeadline@entry=0x55555579f2e8) at node/Node.cpp:261
#5  0x000055555566c1e7 in ZeroTier::(anonymous namespace)::OneServiceImpl::run (this=0x555555795f60) at service/OneService.cpp:900
#6  0x0000555555693396 in _OneServiceRunner::threadMain (this=0x7fffffffead0) at one.cpp:2037
#7  0x0000555555692f25 in main (argc=, argv=0x7fffffffecb8) at one.cpp:2325
(gdb)","Fix for:
Thread 1 ""zerotier-one"" received signal SIGFPE, Arithmetic exception.
0x00005555555d299c in ZeroTier::Bond::assignFlowToBondedPath (this=this@entry=0x5555557d6a40, flow=..., now=now@entry=1639595945030) at node/SharedPtr.hpp:87
87    node/SharedPtr.hpp: No such file or directory.
(gdb) bt
#0  0x00005555555d299c in ZeroTier::Bond::assignFlowToBondedPath (this=this@entry=0x5555557d6a40, flow=..., now=now@entry=1639595945030) at node/SharedPtr.hpp:87
#1  0x00005555555d3bda in ZeroTier::Bond::processBalanceTasks (this=this@entry=0x5555557d6a40, now=now@entry=1639595945030) at node/Bond.cpp:1128
#2  0x00005555555d77c6 in ZeroTier::Bond::processBackgroundBondTasks (this=0x5555557d6a40, tPtr=tPtr@entry=0x0, now=now@entry=1639595945030) at node/Bond.cpp:787
#3  0x00005555555d78b2 in ZeroTier::Bond::processBackgroundTasks (tPtr=tPtr@entry=0x0, now=now@entry=1639595945030) at node/Bond.cpp:185
#4  0x00005555555a8e28 in ZeroTier::Node::processBackgroundTasks (this=0x7ffff7a40010, tptr=tptr@entry=0x0, now=now@entry=1639595945030,
nextBackgroundTaskDeadline=nextBackgroundTaskDeadline@entry=0x55555579f2e8) at node/Node.cpp:261
#5  0x000055555566c1e7 in ZeroTier::(anonymous namespace)::OneServiceImpl::run (this=0x555555795f60) at service/OneService.cpp:900
#6  0x0000555555693396 in _OneServiceRunner::threadMain (this=0x7fffffffead0) at one.cpp:2037
#7  0x0000555555692f25 in main (argc=, argv=0x7fffffffecb8) at one.cpp:2325
(gdb)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1525,2021-12-29T21:32:28Z,2022-01-05T01:11:51Z,2022-01-05T01:36:33Z,MERGED,True,37,37,16,https://github.com/StephenCWills,Use lowercase when including Windows headers,1,[],https://github.com/zerotier/ZeroTierOne/pull/1525,https://github.com/StephenCWills,1,https://github.com/zerotier/ZeroTierOne/pull/1525,"This should help to get this project compiling using MinGW on Linux hosts.
See zerotier/libzt#157 for details","This should help to get this project compiling using MinGW on Linux hosts.
See zerotier/libzt#157 for details",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1528,2022-01-03T17:26:26Z,2022-01-05T00:56:06Z,2022-01-05T01:36:24Z,MERGED,True,0,5,1,https://github.com/StephenCWills,[Android] Fix include for miniupnpc,1,[],https://github.com/zerotier/ZeroTierOne/pull/1528,https://github.com/StephenCWills,1,https://github.com/zerotier/ZeroTierOne/pull/1528,"With the include directory for miniupnpc commented as it is in libzt's CMakeLists.txt, the include path for Android shouldn't be any different than any other platform.
FYI--and I suppose you may already be somewhat aware of this--uncommenting the miniupnpc include directory causes problems when building for Android on Windows because some of the system headers use #include <version> which picks up the miniupnpc VERSION file on case insensitive filesystems.","With the include directory for miniupnpc commented as it is in libzt's CMakeLists.txt, the include path for Android shouldn't be any different than any other platform.
FYI--and I suppose you may already be somewhat aware of this--uncommenting the miniupnpc include directory causes problems when building for Android on Windows because some of the system headers use #include <version> which picks up the miniupnpc VERSION file on case insensitive filesystems.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1528,2022-01-03T17:26:26Z,2022-01-05T00:56:06Z,2022-01-05T01:36:24Z,MERGED,True,0,5,1,https://github.com/StephenCWills,[Android] Fix include for miniupnpc,1,[],https://github.com/zerotier/ZeroTierOne/pull/1528,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/1528#issuecomment-1005287100,"With the include directory for miniupnpc commented as it is in libzt's CMakeLists.txt, the include path for Android shouldn't be any different than any other platform.
FYI--and I suppose you may already be somewhat aware of this--uncommenting the miniupnpc include directory causes problems when building for Android on Windows because some of the system headers use #include <version> which picks up the miniupnpc VERSION file on case insensitive filesystems.","🤔
This may break the Android app. That project is not open source so I'll have to check over there for any necessary changes before merging",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1528,2022-01-03T17:26:26Z,2022-01-05T00:56:06Z,2022-01-05T01:36:24Z,MERGED,True,0,5,1,https://github.com/StephenCWills,[Android] Fix include for miniupnpc,1,[],https://github.com/zerotier/ZeroTierOne/pull/1528,https://github.com/glimberg,3,https://github.com/zerotier/ZeroTierOne/pull/1528#issuecomment-1005290935,"With the include directory for miniupnpc commented as it is in libzt's CMakeLists.txt, the include path for Android shouldn't be any different than any other platform.
FYI--and I suppose you may already be somewhat aware of this--uncommenting the miniupnpc include directory causes problems when building for Android on Windows because some of the system headers use #include <version> which picks up the miniupnpc VERSION file on case insensitive filesystems.",OK.  Checked it out and it's good to go.  Thanks!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1530,2022-01-05T00:08:05Z,2022-01-05T00:19:27Z,2022-01-05T01:15:38Z,CLOSED,False,4,0,1,https://github.com/StephenCWills,Disable Salsa20 SSE when ZT_SALSA20_SSE=0,1,[],https://github.com/zerotier/ZeroTierOne/pull/1530,https://github.com/StephenCWills,1,https://github.com/zerotier/ZeroTierOne/pull/1530,"This allows us to force disable the ZT_SALSA20_SSE option even when __WINDOWS__ or __SSE__ is defined.
The 32-bit MinGW compiler for Windows doesn't support the compiler intrinsics used by the Salsa20 SSE implementation.
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h: In constructor ‘_s20sseconsts::_s20sseconsts()’:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1166:1: error: inlining failed in call to always_inline ‘__m128i _mm_slli_epi64(__m128i, int)’: target specific option mismatch
 1166 | _mm_slli_epi64 (__m128i __A, int __B)
      | ^~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:60:28: note: called from here
   60 |   maskHi32 = _mm_slli_epi64(maskLo32, 32);
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1432:1: error: inlining failed in call to always_inline ‘__m128i _mm_shuffle_epi32(__m128i, int)’: target specific option mismatch
 1432 | _mm_shuffle_epi32 (__m128i __A, const int __mask)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1514:1: error: inlining failed in call to always_inline ‘__m128i _mm_cvtsi32_si128(int)’: target specific option mismatch
 1514 | _mm_cvtsi32_si128 (int __A)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","This allows us to force disable the ZT_SALSA20_SSE option even when __WINDOWS__ or __SSE__ is defined.
The 32-bit MinGW compiler for Windows doesn't support the compiler intrinsics used by the Salsa20 SSE implementation.
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h: In constructor ‘_s20sseconsts::_s20sseconsts()’:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1166:1: error: inlining failed in call to always_inline ‘__m128i _mm_slli_epi64(__m128i, int)’: target specific option mismatch
 1166 | _mm_slli_epi64 (__m128i __A, int __B)
      | ^~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:60:28: note: called from here
   60 |   maskHi32 = _mm_slli_epi64(maskLo32, 32);
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1432:1: error: inlining failed in call to always_inline ‘__m128i _mm_shuffle_epi32(__m128i, int)’: target specific option mismatch
 1432 | _mm_shuffle_epi32 (__m128i __A, const int __mask)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1514:1: error: inlining failed in call to always_inline ‘__m128i _mm_cvtsi32_si128(int)’: target specific option mismatch
 1514 | _mm_cvtsi32_si128 (int __A)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1530,2022-01-05T00:08:05Z,2022-01-05T00:19:27Z,2022-01-05T01:15:38Z,CLOSED,False,4,0,1,https://github.com/StephenCWills,Disable Salsa20 SSE when ZT_SALSA20_SSE=0,1,[],https://github.com/zerotier/ZeroTierOne/pull/1530,https://github.com/glimberg,2,https://github.com/zerotier/ZeroTierOne/pull/1530#issuecomment-1005272837,"This allows us to force disable the ZT_SALSA20_SSE option even when __WINDOWS__ or __SSE__ is defined.
The 32-bit MinGW compiler for Windows doesn't support the compiler intrinsics used by the Salsa20 SSE implementation.
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h: In constructor ‘_s20sseconsts::_s20sseconsts()’:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1166:1: error: inlining failed in call to always_inline ‘__m128i _mm_slli_epi64(__m128i, int)’: target specific option mismatch
 1166 | _mm_slli_epi64 (__m128i __A, int __B)
      | ^~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:60:28: note: called from here
   60 |   maskHi32 = _mm_slli_epi64(maskLo32, 32);
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1432:1: error: inlining failed in call to always_inline ‘__m128i _mm_shuffle_epi32(__m128i, int)’: target specific option mismatch
 1432 | _mm_shuffle_epi32 (__m128i __A, const int __mask)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1514:1: error: inlining failed in call to always_inline ‘__m128i _mm_cvtsi32_si128(int)’: target specific option mismatch
 1514 | _mm_cvtsi32_si128 (int __A)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","This change can't be accepted as it will break other OSes that do support the intrinsics used for Salsa20.
If you can edit the this ifdef block
#if (!defined(ZT_SALSA20_SSE)) && (defined(__SSE2__) || defined(__WINDOWS__))
#define ZT_SALSA20_SSE 1
#endif

such that ZT_SALSA20_SSE is not defined at all for MinGW 32-bit, your change can be accepted.
Also, please submit pull requests against the dev branch in this repo.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1530,2022-01-05T00:08:05Z,2022-01-05T00:19:27Z,2022-01-05T01:15:38Z,CLOSED,False,4,0,1,https://github.com/StephenCWills,Disable Salsa20 SSE when ZT_SALSA20_SSE=0,1,[],https://github.com/zerotier/ZeroTierOne/pull/1530,https://github.com/StephenCWills,3,https://github.com/zerotier/ZeroTierOne/pull/1530#issuecomment-1005281465,"This allows us to force disable the ZT_SALSA20_SSE option even when __WINDOWS__ or __SSE__ is defined.
The 32-bit MinGW compiler for Windows doesn't support the compiler intrinsics used by the Salsa20 SSE implementation.
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h: In constructor ‘_s20sseconsts::_s20sseconsts()’:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1166:1: error: inlining failed in call to always_inline ‘__m128i _mm_slli_epi64(__m128i, int)’: target specific option mismatch
 1166 | _mm_slli_epi64 (__m128i __A, int __B)
      | ^~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:60:28: note: called from here
   60 |   maskHi32 = _mm_slli_epi64(maskLo32, 32);
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1432:1: error: inlining failed in call to always_inline ‘__m128i _mm_shuffle_epi32(__m128i, int)’: target specific option mismatch
 1432 | _mm_shuffle_epi32 (__m128i __A, const int __mask)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.hpp:23,
                 from /home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:11:
/usr/lib/gcc/i686-w64-mingw32/9.3-win32/include/emmintrin.h:1514:1: error: inlining failed in call to always_inline ‘__m128i _mm_cvtsi32_si128(int)’: target specific option mismatch
 1514 | _mm_cvtsi32_si128 (int __A)
      | ^~~~~~~~~~~~~~~~~
/home/runner/work/devilutionX/devilutionX/build/_deps/libzt-src/ext/ZeroTierOne/node/Salsa20.cpp:59:31: note: called from here
   59 |   maskLo32 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-1), _MM_SHUFFLE(1, 0, 1, 0));
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Thanks for the quick review.

If you can edit the this ifdef block...

Alright, I think I can make it work the way you describe so I'll do a bit more testing and resubmit.

Also, please submit pull requests against the dev branch in this repo.

I guess I should change my other PRs as well.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1531,2022-01-05T01:35:43Z,2022-01-05T01:42:41Z,2022-01-05T01:46:37Z,MERGED,True,1,1,1,https://github.com/StephenCWills,Disable Salsa20 SSE on MinGW 32-bit compiler,1,[],https://github.com/zerotier/ZeroTierOne/pull/1531,https://github.com/StephenCWills,1,https://github.com/zerotier/ZeroTierOne/pull/1531,"This fixes the error described in #1530 by disabling Salsa20 SSE on the 32-bit MinGW compiler.
It may be worth noting that both the 64-bit and 32-bit MinGW compilers define the __MINGW32__ variable, but the 64-bit compiler also defines __SSE2__ so this works as expected on both.","This fixes the error described in #1530 by disabling Salsa20 SSE on the 32-bit MinGW compiler.
It may be worth noting that both the 64-bit and 32-bit MinGW compilers define the __MINGW32__ variable, but the 64-bit compiler also defines __SSE2__ so this works as expected on both.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1531,2022-01-05T01:35:43Z,2022-01-05T01:42:41Z,2022-01-05T01:46:37Z,MERGED,True,1,1,1,https://github.com/StephenCWills,Disable Salsa20 SSE on MinGW 32-bit compiler,1,[],https://github.com/zerotier/ZeroTierOne/pull/1531,https://github.com/StephenCWills,2,https://github.com/zerotier/ZeroTierOne/pull/1531#issuecomment-1005308687,"This fixes the error described in #1530 by disabling Salsa20 SSE on the 32-bit MinGW compiler.
It may be worth noting that both the 64-bit and 32-bit MinGW compilers define the __MINGW32__ variable, but the 64-bit compiler also defines __SSE2__ so this works as expected on both.","Er.. Hold on, I forgot to update the commit message.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1531,2022-01-05T01:35:43Z,2022-01-05T01:42:41Z,2022-01-05T01:46:37Z,MERGED,True,1,1,1,https://github.com/StephenCWills,Disable Salsa20 SSE on MinGW 32-bit compiler,1,[],https://github.com/zerotier/ZeroTierOne/pull/1531,https://github.com/glimberg,3,https://github.com/zerotier/ZeroTierOne/pull/1531#issuecomment-1005310348,"This fixes the error described in #1530 by disabling Salsa20 SSE on the 32-bit MinGW compiler.
It may be worth noting that both the 64-bit and 32-bit MinGW compilers define the __MINGW32__ variable, but the 64-bit compiler also defines __SSE2__ so this works as expected on both.",Thanks!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1533,2022-01-07T20:29:40Z,2022-01-12T17:41:46Z,2022-04-08T18:35:20Z,MERGED,True,4,5,1,https://github.com/laduke,Prevent adding routes to non-zerotier interfaces in rare cases.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1533,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1533,See issue #1498,See issue #1498,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1534,2022-01-07T21:12:46Z,,2022-04-15T16:16:16Z,OPEN,False,9,1,2,https://github.com/laduke,Windows interface and route metrics,1,[],https://github.com/zerotier/ZeroTierOne/pull/1534,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1534,"5 is the lowest metrics an interface will get based
on Windows Automatic Metrics as far as I know.
https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/automatic-metric-for-ipv4-routes
If we set our metric to 3, there's a chance Windows will
use it for broadcast traffic, and things like game discovery
will work. If the user doesn't want that, they can leave the
zerotier network or manually set the metric on their
physical interface to < 3.
For routes with ""via""'s we put the metric high,
in case it overlaps with a physical route to
the same subnet.
These could be plumbed through and set via the controller or
local.conf someday, istead of being hardcoded magic numbers.","5 is the lowest metrics an interface will get based
on Windows Automatic Metrics as far as I know.
https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/automatic-metric-for-ipv4-routes
If we set our metric to 3, there's a chance Windows will
use it for broadcast traffic, and things like game discovery
will work. If the user doesn't want that, they can leave the
zerotier network or manually set the metric on their
physical interface to < 3.
For routes with ""via""'s we put the metric high,
in case it overlaps with a physical route to
the same subnet.
These could be plumbed through and set via the controller or
local.conf someday, istead of being hardcoded magic numbers.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1534,2022-01-07T21:12:46Z,,2022-04-15T16:16:16Z,OPEN,False,9,1,2,https://github.com/laduke,Windows interface and route metrics,1,[],https://github.com/zerotier/ZeroTierOne/pull/1534,https://github.com/laduke,2,https://github.com/zerotier/ZeroTierOne/pull/1534#issuecomment-1009263780,"5 is the lowest metrics an interface will get based
on Windows Automatic Metrics as far as I know.
https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/automatic-metric-for-ipv4-routes
If we set our metric to 3, there's a chance Windows will
use it for broadcast traffic, and things like game discovery
will work. If the user doesn't want that, they can leave the
zerotier network or manually set the metric on their
physical interface to < 3.
For routes with ""via""'s we put the metric high,
in case it overlaps with a physical route to
the same subnet.
These could be plumbed through and set via the controller or
local.conf someday, istead of being hardcoded magic numbers.","Caveat for the Interface metric:
There are a small amount of service providers out there that use zerotier as just a remote access into user's PC. They don't necessarily want the zerotier network to take over broadcast on the user's machine.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1534,2022-01-07T21:12:46Z,,2022-04-15T16:16:16Z,OPEN,False,9,1,2,https://github.com/laduke,Windows interface and route metrics,1,[],https://github.com/zerotier/ZeroTierOne/pull/1534,https://github.com/glimberg,3,https://github.com/zerotier/ZeroTierOne/pull/1534#issuecomment-1009264722,"5 is the lowest metrics an interface will get based
on Windows Automatic Metrics as far as I know.
https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/automatic-metric-for-ipv4-routes
If we set our metric to 3, there's a chance Windows will
use it for broadcast traffic, and things like game discovery
will work. If the user doesn't want that, they can leave the
zerotier network or manually set the metric on their
physical interface to < 3.
For routes with ""via""'s we put the metric high,
in case it overlaps with a physical route to
the same subnet.
These could be plumbed through and set via the controller or
local.conf someday, istead of being hardcoded magic numbers.",Yeah.  We're probably going to want a flag a la allowDefault to enable/disable this,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1535,2022-01-07T21:13:46Z,2022-01-12T17:41:54Z,2022-04-08T18:35:21Z,MERGED,True,18,0,1,https://github.com/laduke,Set a high metric on linux routes that have a via.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1535,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1535,"See issue #750.
zerotier doesn't currently set a metric on routes. Linux
takes this to mean ""0"", the highest priority.
Every comment in the issue is about routing between zerotier
and lan and how they conflict.
This quick change could fix this problem for most people.
The subnet route for the zerotier network, the one with no
via, is still 0 in this patch. Just the ""via"" routes get
higher metrics.
If for some reason, you needed your via routes to have
higher priority, you could use a prefix work-around:
192.168.1.0/25 via 10.147.17.1
192.168.1.128/25 via 10.147.17.1","See issue #750.
zerotier doesn't currently set a metric on routes. Linux
takes this to mean ""0"", the highest priority.
Every comment in the issue is about routing between zerotier
and lan and how they conflict.
This quick change could fix this problem for most people.
The subnet route for the zerotier network, the one with no
via, is still 0 in this patch. Just the ""via"" routes get
higher metrics.
If for some reason, you needed your via routes to have
higher priority, you could use a prefix work-around:
192.168.1.0/25 via 10.147.17.1
192.168.1.128/25 via 10.147.17.1",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1535,2022-01-07T21:13:46Z,2022-01-12T17:41:54Z,2022-04-08T18:35:21Z,MERGED,True,18,0,1,https://github.com/laduke,Set a high metric on linux routes that have a via.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1535,https://github.com/ihipop,2,https://github.com/zerotier/ZeroTierOne/pull/1535#issuecomment-1073010687,"See issue #750.
zerotier doesn't currently set a metric on routes. Linux
takes this to mean ""0"", the highest priority.
Every comment in the issue is about routing between zerotier
and lan and how they conflict.
This quick change could fix this problem for most people.
The subnet route for the zerotier network, the one with no
via, is still 0 in this patch. Just the ""via"" routes get
higher metrics.
If for some reason, you needed your via routes to have
higher priority, you could use a prefix work-around:
192.168.1.0/25 via 10.147.17.1
192.168.1.128/25 via 10.147.17.1","when will this feature released ?
I didn't see any thing mention this in RELEASE NOTE",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1535,2022-01-07T21:13:46Z,2022-01-12T17:41:54Z,2022-04-08T18:35:21Z,MERGED,True,18,0,1,https://github.com/laduke,Set a high metric on linux routes that have a via.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1535,https://github.com/laduke,3,https://github.com/zerotier/ZeroTierOne/pull/1535#issuecomment-1077777074,"See issue #750.
zerotier doesn't currently set a metric on routes. Linux
takes this to mean ""0"", the highest priority.
Every comment in the issue is about routing between zerotier
and lan and how they conflict.
This quick change could fix this problem for most people.
The subnet route for the zerotier network, the one with no
via, is still 0 in this patch. Just the ""via"" routes get
higher metrics.
If for some reason, you needed your via routes to have
higher priority, you could use a prefix work-around:
192.168.1.0/25 via 10.147.17.1
192.168.1.128/25 via 10.147.17.1",@ihipop It's in 1.8.6 for sure. Maybe earlier. Must have missed it in the release notes.,True,{'EYES': ['https://github.com/ihipop']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1539,2022-01-11T01:43:55Z,2022-01-20T13:21:24Z,2022-01-20T13:21:24Z,MERGED,True,2,0,1,https://github.com/khng300,ext/libnatpmp: Set sa_len properly in getdefaultgateway(),1,[],https://github.com/zerotier/ZeroTierOne/pull/1539,https://github.com/khng300,1,https://github.com/zerotier/ZeroTierOne/pull/1539,"In USE_SOCKET_ROUTE's implementation, sa_len of the sockaddrs need to be
set as well.
Sponsored by:	The FreeBSD Foundation","In USE_SOCKET_ROUTE's implementation, sa_len of the sockaddrs need to be
set as well.
Sponsored by:	The FreeBSD Foundation",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1541,2022-01-12T18:53:11Z,2022-01-20T13:21:09Z,2022-01-20T13:21:09Z,MERGED,True,23,0,1,https://github.com/khng300,Build osdep/PortMapper on FreeBSD,1,[],https://github.com/zerotier/ZeroTierOne/pull/1541,https://github.com/khng300,1,https://github.com/zerotier/ZeroTierOne/pull/1541,This enables NAT-PMP and UPnP supports on FreeBSD.,This enables NAT-PMP and UPnP supports on FreeBSD.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1552,2022-01-27T04:02:52Z,2022-01-28T18:12:17Z,2022-01-28T18:12:17Z,MERGED,True,1,1,1,https://github.com/Shawn8410,FIX: fix wrong flag usage of rateGateCredentialsReceived,1,[],https://github.com/zerotier/ZeroTierOne/pull/1552,https://github.com/Shawn8410,1,https://github.com/zerotier/ZeroTierOne/pull/1552,"#1551
Fix for the occasionally disconnect of peers","#1551
Fix for the occasionally disconnect of peers",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1552,2022-01-27T04:02:52Z,2022-01-28T18:12:17Z,2022-01-28T18:12:17Z,MERGED,True,1,1,1,https://github.com/Shawn8410,FIX: fix wrong flag usage of rateGateCredentialsReceived,1,[],https://github.com/zerotier/ZeroTierOne/pull/1552,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1552#issuecomment-1023512043,"#1551
Fix for the occasionally disconnect of peers",Looks great. Thanks for finding this. Going to do a little testing before we merge this in.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1559,2022-02-08T01:12:28Z,2022-02-11T22:59:53Z,2022-02-11T22:59:53Z,MERGED,True,54,12,1,https://github.com/glimberg,potential fix for 2.6.x kernels,2,[],https://github.com/zerotier/ZeroTierOne/pull/1559,https://github.com/glimberg,1,https://github.com/zerotier/ZeroTierOne/pull/1559,"detect if the kernel is super old.  if so, do not execute the post IF_UP commands on the interface
@laduke Also made a slight MTU change.  Can you see if this also fixes #1554?","detect if the kernel is super old.  if so, do not execute the post IF_UP commands on the interface
@laduke Also made a slight MTU change.  Can you see if this also fixes #1554?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1559,2022-02-08T01:12:28Z,2022-02-11T22:59:53Z,2022-02-11T22:59:53Z,MERGED,True,54,12,1,https://github.com/glimberg,potential fix for 2.6.x kernels,2,[],https://github.com/zerotier/ZeroTierOne/pull/1559,https://github.com/laduke,2,https://github.com/zerotier/ZeroTierOne/pull/1559#issuecomment-1033057436,"detect if the kernel is super old.  if so, do not execute the post IF_UP commands on the interface
@laduke Also made a slight MTU change.  Can you see if this also fixes #1554?","Sadly, I don't think it fixed 1554",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1559,2022-02-08T01:12:28Z,2022-02-11T22:59:53Z,2022-02-11T22:59:53Z,MERGED,True,54,12,1,https://github.com/glimberg,potential fix for 2.6.x kernels,2,[],https://github.com/zerotier/ZeroTierOne/pull/1559,https://github.com/adamierymenko,3,https://github.com/zerotier/ZeroTierOne/pull/1559#issuecomment-1036721739,"detect if the kernel is super old.  if so, do not execute the post IF_UP commands on the interface
@laduke Also made a slight MTU change.  Can you see if this also fixes #1554?","Testing merge, will revert if there are issues. Seeing if it fixes things on Ye Olde Tyme Linux Distributions like CentOS 6.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1564,2022-02-18T00:09:39Z,2022-02-25T19:30:45Z,2022-02-25T19:34:59Z,MERGED,True,25,1,3,https://github.com/joseph-henry,"Proactively seek, and distribute external surface addresses",1,[],https://github.com/zerotier/ZeroTierOne/pull/1564,https://github.com/joseph-henry,1,https://github.com/zerotier/ZeroTierOne/pull/1564,"Summary
This patch introduces a new ""self-awareness"" behavior which proactively queries peers for external surface addresses and distributes them via PUSH_DIRECT_PATHS. This has the effect of making ZT more responsive to interface changes.
Current behavior
Previously, this type of information was only mediated via RENDEZVOUS and was only triggered when the client detected that it no longer had a single alive path to a peer. While PUSH_DIRECT_PATHS would correctly (and often) send local addresses, this was not the case for external addresses collected from response HELLOs. This would lead to situations where only one physical address would be distributed to peers. Additionally, if a new physical interface were to be made available to the client, the client would correctly bind to it but never seek information about its external mapping from a peer, and thus the new physical interface would remain unavailable for other peers to learn about until all paths on the previous interface have expired which can take a couple of minutes. In traditional usage of ZT this is not usually a problem, but it becomes a problem in the following scenarios:

Network interfaces go up and down while ZT is running (e.g. switching to LTE or WiFi from a wired connection)
Network interfaces are added or removed in multipath setups

Proposed behavior
I propose that normal full HELLOs are sent not only on the first interface in use, but all interfaces. This causes planets to respond with a HELLO containing the surface address for each interface. We then collect each address using SelfAwareness::whoami() and distribute them via the normal PUSH_DIRECT_PATHS mechanism.
This potentially fixes issues #1439, #1411, and #1549","Summary
This patch introduces a new ""self-awareness"" behavior which proactively queries peers for external surface addresses and distributes them via PUSH_DIRECT_PATHS. This has the effect of making ZT more responsive to interface changes.
Current behavior
Previously, this type of information was only mediated via RENDEZVOUS and was only triggered when the client detected that it no longer had a single alive path to a peer. While PUSH_DIRECT_PATHS would correctly (and often) send local addresses, this was not the case for external addresses collected from response HELLOs. This would lead to situations where only one physical address would be distributed to peers. Additionally, if a new physical interface were to be made available to the client, the client would correctly bind to it but never seek information about its external mapping from a peer, and thus the new physical interface would remain unavailable for other peers to learn about until all paths on the previous interface have expired which can take a couple of minutes. In traditional usage of ZT this is not usually a problem, but it becomes a problem in the following scenarios:

Network interfaces go up and down while ZT is running (e.g. switching to LTE or WiFi from a wired connection)
Network interfaces are added or removed in multipath setups

Proposed behavior
I propose that normal full HELLOs are sent not only on the first interface in use, but all interfaces. This causes planets to respond with a HELLO containing the surface address for each interface. We then collect each address using SelfAwareness::whoami() and distribute them via the normal PUSH_DIRECT_PATHS mechanism.
This potentially fixes issues #1439, #1411, and #1549",True,"{'HOORAY': ['https://github.com/laduke', 'https://github.com/EdvinM']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1564,2022-02-18T00:09:39Z,2022-02-25T19:30:45Z,2022-02-25T19:34:59Z,MERGED,True,25,1,3,https://github.com/joseph-henry,"Proactively seek, and distribute external surface addresses",1,[],https://github.com/zerotier/ZeroTierOne/pull/1564,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1564#issuecomment-1043667683,"Summary
This patch introduces a new ""self-awareness"" behavior which proactively queries peers for external surface addresses and distributes them via PUSH_DIRECT_PATHS. This has the effect of making ZT more responsive to interface changes.
Current behavior
Previously, this type of information was only mediated via RENDEZVOUS and was only triggered when the client detected that it no longer had a single alive path to a peer. While PUSH_DIRECT_PATHS would correctly (and often) send local addresses, this was not the case for external addresses collected from response HELLOs. This would lead to situations where only one physical address would be distributed to peers. Additionally, if a new physical interface were to be made available to the client, the client would correctly bind to it but never seek information about its external mapping from a peer, and thus the new physical interface would remain unavailable for other peers to learn about until all paths on the previous interface have expired which can take a couple of minutes. In traditional usage of ZT this is not usually a problem, but it becomes a problem in the following scenarios:

Network interfaces go up and down while ZT is running (e.g. switching to LTE or WiFi from a wired connection)
Network interfaces are added or removed in multipath setups

Proposed behavior
I propose that normal full HELLOs are sent not only on the first interface in use, but all interfaces. This causes planets to respond with a HELLO containing the surface address for each interface. We then collect each address using SelfAwareness::whoami() and distribute them via the normal PUSH_DIRECT_PATHS mechanism.
This potentially fixes issues #1439, #1411, and #1549",I wouldn't recommend a merge quite yet as I might make a slight tweak to how HELLOs are sent on all interfaces. But I put this here so we can at least verify this is sane in principle. It does work as is.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1569,2022-02-22T00:23:05Z,2022-02-25T19:23:42Z,2022-02-25T19:34:52Z,MERGED,True,20,17,5,https://github.com/joseph-henry,Rate gate ECHO per Path instead of per Peer,3,[],https://github.com/zerotier/ZeroTierOne/pull/1569,https://github.com/joseph-henry,1,https://github.com/zerotier/ZeroTierOne/pull/1569,"Summary
In multipath scenarios user traffic is used to judge the aliveness of a path. If the user traffic is too infrequent to establish aliveness for a given time window (say 250 ms), the bonding layer will send extra ECHOs at a maximum rate of failoverInterval / 4 (or 62.5 ms) per path. This patch relaxes the rate-limiting of ECHOs significantly in order to prevent a non-multipath node from dropping ECHOs causing multipath nodes to erroneously judge paths to that node to be dead.
Details
This patch decreases the rate limiting from 1000 ms by a factor of 20 to 50 ms and rate limits ECHOs per Path instead of per Peer. This allows rate limiting to scale with the number of established paths to a peer.
As a result, if all 64 path slots are used a total of 64 x 16 = 1024 ECHOs per second will be allowed in the most aggressive case where failoverInterval is set to 250 ms.","Summary
In multipath scenarios user traffic is used to judge the aliveness of a path. If the user traffic is too infrequent to establish aliveness for a given time window (say 250 ms), the bonding layer will send extra ECHOs at a maximum rate of failoverInterval / 4 (or 62.5 ms) per path. This patch relaxes the rate-limiting of ECHOs significantly in order to prevent a non-multipath node from dropping ECHOs causing multipath nodes to erroneously judge paths to that node to be dead.
Details
This patch decreases the rate limiting from 1000 ms by a factor of 20 to 50 ms and rate limits ECHOs per Path instead of per Peer. This allows rate limiting to scale with the number of established paths to a peer.
As a result, if all 64 path slots are used a total of 64 x 16 = 1024 ECHOs per second will be allowed in the most aggressive case where failoverInterval is set to 250 ms.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1569,2022-02-22T00:23:05Z,2022-02-25T19:23:42Z,2022-02-25T19:34:52Z,MERGED,True,20,17,5,https://github.com/joseph-henry,Rate gate ECHO per Path instead of per Peer,3,[],https://github.com/zerotier/ZeroTierOne/pull/1569,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1569#issuecomment-1050185414,"Summary
In multipath scenarios user traffic is used to judge the aliveness of a path. If the user traffic is too infrequent to establish aliveness for a given time window (say 250 ms), the bonding layer will send extra ECHOs at a maximum rate of failoverInterval / 4 (or 62.5 ms) per path. This patch relaxes the rate-limiting of ECHOs significantly in order to prevent a non-multipath node from dropping ECHOs causing multipath nodes to erroneously judge paths to that node to be dead.
Details
This patch decreases the rate limiting from 1000 ms by a factor of 20 to 50 ms and rate limits ECHOs per Path instead of per Peer. This allows rate limiting to scale with the number of established paths to a peer.
As a result, if all 64 path slots are used a total of 64 x 16 = 1024 ECHOs per second will be allowed in the most aggressive case where failoverInterval is set to 250 ms.","More thoughts on this:
Setting the minimum failoverInterval to 500 ms and reducing probe period from failoverInterval / 4 to failoverInterval / 3 would result in a max of 6 ECHOs per second per path which is 384 ECHOs per second per peer if all 64 path slots are filled.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1572,2022-03-02T19:47:58Z,2022-03-07T17:17:44Z,2022-03-10T22:08:17Z,MERGED,True,6,1,1,https://github.com/glimberg,make TCP fallback relay address configurable,1,[],https://github.com/zerotier/ZeroTierOne/pull/1572,https://github.com/glimberg,1,https://github.com/zerotier/ZeroTierOne/pull/1572,"Quick change that allows users to specify the address of the TCP fallback relay with an ip_address/port string:
{
  ""settings"": {
    ""tcpFallbackRelay"": ""10.0.187.5/4443""
   }
}

This would allow users to configure their own TCP proxies for hard to reach nodes  via https://github.com/alexander-akhmetov/zt-tcp-relay (or if we resurrect our old tcp relay code)","Quick change that allows users to specify the address of the TCP fallback relay with an ip_address/port string:
{
  ""settings"": {
    ""tcpFallbackRelay"": ""10.0.187.5/4443""
   }
}

This would allow users to configure their own TCP proxies for hard to reach nodes  via https://github.com/alexander-akhmetov/zt-tcp-relay (or if we resurrect our old tcp relay code)",True,"{'HOORAY': ['https://github.com/laduke', 'https://github.com/joseph-henry']}"
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1589,2022-03-14T02:34:39Z,2022-03-15T16:52:55Z,2022-03-15T16:52:56Z,MERGED,True,2,2,1,https://github.com/hcwhan,Dockerfile version bump to 1.8.6,1,[],https://github.com/zerotier/ZeroTierOne/pull/1589,https://github.com/hcwhan,1,https://github.com/zerotier/ZeroTierOne/pull/1589,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1592,2022-03-14T23:38:50Z,,2022-03-17T15:31:43Z,OPEN,False,63,0,3,https://github.com/aarlt,Add Identity::fromSecret(..).,1,[],https://github.com/zerotier/ZeroTierOne/pull/1592,https://github.com/aarlt,1,https://github.com/zerotier/ZeroTierOne/pull/1592,"See zerotier/libzt#176
Just pushing this - nothing is tested yet. Tested locally - works.
How are you normally testing stuff here? Would be more easy, if I could just add a specific test to your test-suite. But maybe I just missed it.
UPDATE: Let me know how you want to get the stuff tested & I'll add a test for that.","See zerotier/libzt#176
Just pushing this - nothing is tested yet. Tested locally - works.
How are you normally testing stuff here? Would be more easy, if I could just add a specific test to your test-suite. But maybe I just missed it.
UPDATE: Let me know how you want to get the stuff tested & I'll add a test for that.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1596,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",True,{'HEART': ['https://github.com/altano']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,2,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1072089516,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",cc @glimberg @joseph-henry @someara,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,3,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1072093984,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",We'll release a new image based on 1.8.x based on these changes once everyone agrees it's a good idea.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/glimberg,4,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1072557486,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","docker run --name myzerotier --rm --cap-add NET_ADMIN --device /dev/net/tun -v /tmp/zerotier-db:/var/lib/zerotier-one zerotier/zerotier:1.8.6 xxxxxxxxxxd49dab 
starting zerotier
joining networks: xxxxxxxxxxd49dab
joining xxxxxxxxxxd49dab
0 join connection failed
ZeroTier could not be started; did you pass the right arguments to `docker run

This is happening occasionally when starting with changes in this PR.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,5,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1072587926,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","I'll look into it; thanks
…
------- Original Message -------
On Friday, March 18th, 2022 at 9:07 AM, Grant Limberg ***@***.***> wrote:
 docker run --name myzerotier --rm --cap-add NET_ADMIN --device /dev/net/tun -v /tmp/zerotier-db:/var/lib/zerotier-one zerotier/zerotier:1.8.6 xxxxxxxxxxd49dab
 starting zerotier
 joining networks: xxxxxxxxxxd49dab
 joining xxxxxxxxxxd49dab
 0 join connection failed
 ZeroTier could not be started; did you pass the right arguments to `docker run

 This is happening occasionally when starting with changes in this PR.

 —
 Reply to this email directly, [view it on GitHub](#1596 (comment)), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AAAET26LFARRIIS6DDL5P33VASS3FANCNFSM5RBAISFQ).
 Triage notifications on the go with GitHub Mobile for [iOS](https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675) or [Android](https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub).
 You are receiving this because you authored the thread.Message ID: ***@***.***>",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,6,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1075459835,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",Waiting for 1.8.7 to land before I work further on this.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,7,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1075482061,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Some conversation in a private chat leads to the following improvements, which will be implemented before this patch is merged (and new images are released):

networks will be auto-joined by touching a file, not with the current ""init service and then join via cli"" method. The status check will still be handled in the same way.
I'll double-check the ctrl-c behavior in situations where --rm is supplied (but not -it) and ensure it behaves correctly.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,8,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1076958171,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","% docker run --name myzerotier --rm --cap-add NET_ADMIN --device /dev/net/tun zerotier/zerotier:1.8.6 <network id>

starting zerotier
cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier hasn't started, waiting a second
tail: cannot open 'nohup.out' for reading: No such file or directory
joining networks: <network id>
joining <network id>
200 join OK
joining <network id> failed (are they added in central?); trying again in 1s
joining <network id> failed (are they added in central?); trying again in 1s
joining <network id> failed (are they added in central?); trying again in 1s
joining <network id> failed (are they added in central?); trying again in 1s
joining <network id> failed (are they added in central?); trying again in 1s
^Cjoining <network id> failed (are they added in central?); trying again in 1s
Killing zerotier

I have no idea why ^C isn't working. what platforms are you on? This is probably docker and not us at this point.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,9,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1076958458,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","also this is the build in this PR, not the image on dockerhub.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,10,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1076965675,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",Now I'm able to reproduce the ^C issue. Looking into it.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,11,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1076968789,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",^C issue should be in the latest patch; also I added a HEALTHCHECK. @altano would you mind testing this image for me if you're not committed to your own implementation? Would be nice to find a happy medium we can rely on for everyone.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,12,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1076970446,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","an example of the healthcheck in action, fwiw;
[43] erikh@islay zerotier/ZeroTierOne% docker ps                                                                               [18:12]
CONTAINER ID   IMAGE                     COMMAND                  CREATED              STATUS                          PORTS     NAMES
06ccb698247d   zerotier/zerotier:1.8.6   ""/entrypoint.sh 8304…""   About a minute ago   Up About a minute (unhealthy)             myzerotier",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/altano,13,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1076988904,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","@altano would you mind testing this image for me if you're not committed to your own implementation? Would be nice to find a happy medium we can rely on for everyone.

I am not at all committed to my implementation and would be happy to test and switch over to this official one. I’ll probably have time to take a look this weekend. Thanks for working on this!",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,14,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077416430,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Ok, cool! I think once @glimberg has verified the tickets can be closed we'll merge this so we can push images. Then we'll address testing results after the fact if necessary with a second possible push; I'd like this out there sooner rather than later as I imagine it's pretty broken in its current state.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/glimberg,15,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077806430,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Good news is that it appears to consistently join the networks now.   🥳  Can ping the container from another machine on the lan.  All that good stuff.  Hooray!
This error/warning message pops up sometimes
joining 15707c8737d49dab failed (are they added in central?); trying again in 1s

Everything still works after that, but it's a little disconcerting to see
Finally, our good friend CTRL-C.  Still no joy without -i -t.   docker stop $contianer  works fine as always. I'm honestly not too bothered about the CTRL-C thing.  It seems to be a common thing out on the google.  That's how I found the -i -t workaround to begin with 🤷‍♂️",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,16,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077873750,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Good news is that it appears to consistently join the networks now. partying_face Can ping the container from another machine on the lan. All that good stuff. Hooray!
This error/warning message pops up sometimes
joining 15707c8737d49dab failed (are they added in central?); trying again in 1s

Everything still works after that, but it's a little disconcerting to see

So on this, the only thing I could do is sleep a little longer, which I'm sure I don't have to explain won't get rid of it entirely. It's basically going to be printed while the zerotier-one instance is waiting to join the network; I'll adjust the error message a little bit.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,17,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077876491,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",Oh hm. Make sure you built against the latest patches; this error message isn't in the latest one. :),True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/glimberg,18,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077877381,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Oh hm. Make sure you built against the latest patches; this error message isn't in the latest one. :)

Oh ok.  I tried the one you posted in Mattermost last night",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,19,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077877978,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","yeah, the one in git works much better; ctrl+c works too.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/glimberg,20,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077882109,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",Oh sweet!  Yeah that's working great now.  Even ctrl-c,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,21,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077882834,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",Gonna merge with your permission,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,22,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1077893041,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org",zerotier/zerotier:1.8.6 was pushed to dockerhub as a result of this change,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/altano,23,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1093649323,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Sorry, @erikh, that it took me so long to get to this. I just tested this out and everything looks great:
✅ ctrl-c works
✅ healthcheck works
✅ I can successfully join a network
I tested with this docker-compose.yaml:
version: ""3.7""

volumes:
  data:

services:
  zerotier:
    image: zerotier/zerotier:1.8.6
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    volumes:
      - data:/var/lib/zerotier-one
    command: <zt-network-address>

  whoami:
    image: containous/whoami:latest
    depends_on:
      - zerotier
    network_mode: service:zerotier
    restart: unless-stopped
I added a note to the top of my Docker image github repo that no one should use it. Thanks for the quick turnaround on these improvements!
If you have time, I have one small feature request: can you dump the ZT address to the Docker logs? That way, when I first bring up the container stack, I know I'm approving the join request for the right node. I can get the address, given the stack defined above, with this:
$ docker-compose exec zerotier zerotier-cli info
200 info <redacted-address> 1.8.6 ONLINE

But dumping it to the logs would make things easier.
Thanks again!",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/erikh,24,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1093649986,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Thanks for testing, and sure. Mind creating a new ticket for that?",True,{'THUMBS_UP': ['https://github.com/altano']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1596,2022-03-18T07:10:38Z,2022-03-24T17:53:52Z,2022-04-09T04:08:49Z,MERGED,True,34,11,2,https://github.com/erikh,Fix dockerfile & entrypoint:,6,[],https://github.com/zerotier/ZeroTierOne/pull/1596,https://github.com/altano,25,https://github.com/zerotier/ZeroTierOne/pull/1596#issuecomment-1093664089,"Resolve issue with join not being checked properly for success without
using external tools
Resolve issue where initial boot was not being checked properly
Now output errors when zerotier fails to start

closes #1581
cc @altano for inspiration for this patch
Signed-off-by: Erik Hollensbe git@hollensbe.org","Thanks for testing, and sure. Mind creating a new ticket for that?

Here's a PR: #1619",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1597,2022-03-18T16:09:12Z,2022-03-18T16:37:03Z,2022-03-18T16:37:03Z,CLOSED,False,2,2,1,https://github.com/someara,tweaking entrypoint,1,[],https://github.com/zerotier/ZeroTierOne/pull/1597,https://github.com/someara,1,https://github.com/zerotier/ZeroTierOne/pull/1597,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1599,2022-03-21T04:09:57Z,2022-04-12T04:24:58Z,2022-04-12T04:25:01Z,MERGED,True,1,1,1,https://github.com/smcavoy,update alpine linux release to current supported,1,[],https://github.com/zerotier/ZeroTierOne/pull/1599,https://github.com/smcavoy,1,https://github.com/zerotier/ZeroTierOne/pull/1599,"Alpine Linux 3.11 is no longer supported.
The latest current release is 3.15.2
alpine:3.15 will always use the latest release of 3.15 (again, currently 3.15.2)","Alpine Linux 3.11 is no longer supported.
The latest current release is 3.15.2
alpine:3.15 will always use the latest release of 3.15 (again, currently 3.15.2)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1599,2022-03-21T04:09:57Z,2022-04-12T04:24:58Z,2022-04-12T04:25:01Z,MERGED,True,1,1,1,https://github.com/smcavoy,update alpine linux release to current supported,1,[],https://github.com/zerotier/ZeroTierOne/pull/1599,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1599#issuecomment-1095988864,"Alpine Linux 3.11 is no longer supported.
The latest current release is 3.15.2
alpine:3.15 will always use the latest release of 3.15 (again, currently 3.15.2)",Thank you,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1603,2022-03-22T17:39:13Z,2022-03-22T18:05:00Z,2022-03-22T18:05:01Z,CLOSED,False,4,1,1,https://github.com/MaanuelMM,Fix for missing dependencies in Dockerfile.release,1,[],https://github.com/zerotier/ZeroTierOne/pull/1603,https://github.com/MaanuelMM,1,https://github.com/zerotier/ZeroTierOne/pull/1603,"When building my own Docker image of ZeroTier with the latest version 1.8.6 using the docker build -f Dockerfile.release -t zerotier/zerotier:latest --build-arg VERSION=1.8.6 . command, I noticed it failed due to missing dependencies related to SSL that the Dockerfile.release did not take into account:
dpkg: dependency problems prevent configuration of zerotier-one:
 zerotier-one depends on libssl1.1 (>= 1.1.1); however:
  Package libssl1.1 is not installed.
 zerotier-one depends on openssl; however:
  Package openssl is not installed.

dpkg: error processing package zerotier-one (--install):
 dependency problems - leaving unconfigured
Errors were encountered while processing:
 zerotier-one
To fix this error, I've decided to make use of the APT package manager instead of the DPKG tool to install the DEB package, thus resolving the dependencies automatically and successfully creating the Docker image.","When building my own Docker image of ZeroTier with the latest version 1.8.6 using the docker build -f Dockerfile.release -t zerotier/zerotier:latest --build-arg VERSION=1.8.6 . command, I noticed it failed due to missing dependencies related to SSL that the Dockerfile.release did not take into account:
dpkg: dependency problems prevent configuration of zerotier-one:
 zerotier-one depends on libssl1.1 (>= 1.1.1); however:
  Package libssl1.1 is not installed.
 zerotier-one depends on openssl; however:
  Package openssl is not installed.

dpkg: error processing package zerotier-one (--install):
 dependency problems - leaving unconfigured
Errors were encountered while processing:
 zerotier-one
To fix this error, I've decided to make use of the APT package manager instead of the DPKG tool to install the DEB package, thus resolving the dependencies automatically and successfully creating the Docker image.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1603,2022-03-22T17:39:13Z,2022-03-22T18:05:00Z,2022-03-22T18:05:01Z,CLOSED,False,4,1,1,https://github.com/MaanuelMM,Fix for missing dependencies in Dockerfile.release,1,[],https://github.com/zerotier/ZeroTierOne/pull/1603,https://github.com/erikh,2,https://github.com/zerotier/ZeroTierOne/pull/1603#issuecomment-1075458309,"When building my own Docker image of ZeroTier with the latest version 1.8.6 using the docker build -f Dockerfile.release -t zerotier/zerotier:latest --build-arg VERSION=1.8.6 . command, I noticed it failed due to missing dependencies related to SSL that the Dockerfile.release did not take into account:
dpkg: dependency problems prevent configuration of zerotier-one:
 zerotier-one depends on libssl1.1 (>= 1.1.1); however:
  Package libssl1.1 is not installed.
 zerotier-one depends on openssl; however:
  Package openssl is not installed.

dpkg: error processing package zerotier-one (--install):
 dependency problems - leaving unconfigured
Errors were encountered while processing:
 zerotier-one
To fix this error, I've decided to make use of the APT package manager instead of the DPKG tool to install the DEB package, thus resolving the dependencies automatically and successfully creating the Docker image.",This is covered by #1596. I appreciate the patch but this is also not the direction we want to head.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1605,2022-03-26T00:53:59Z,,2022-03-26T00:53:59Z,OPEN,False,47,0,1,https://github.com/aarlt,cmake: add arch detection.,1,[],https://github.com/zerotier/ZeroTierOne/pull/1605,https://github.com/aarlt,1,https://github.com/zerotier/ZeroTierOne/pull/1605,See zerotier/libzt#178.,See zerotier/libzt#178.,True,{'THUMBS_UP': ['https://github.com/glebm']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1614,2022-04-02T15:34:37Z,2022-04-12T03:33:41Z,2022-04-12T03:33:41Z,MERGED,True,6,1,2,https://github.com/fuowang,Add loongarch64 support,2,[],https://github.com/zerotier/ZeroTierOne/pull/1614,https://github.com/fuowang,1,https://github.com/zerotier/ZeroTierOne/pull/1614,"Add  loongarch64 support, the new architecture launched by China's Loongson.","Add  loongarch64 support, the new architecture launched by China's Loongson.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1614,2022-04-02T15:34:37Z,2022-04-12T03:33:41Z,2022-04-12T03:33:41Z,MERGED,True,6,1,2,https://github.com/fuowang,Add loongarch64 support,2,[],https://github.com/zerotier/ZeroTierOne/pull/1614,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1614#issuecomment-1089816008,"Add  loongarch64 support, the new architecture launched by China's Loongson.","@fuowang. Thanks. Given that we don't have any access to this architecture to test, I have a few questions:

Have you verified that ZeroTier does compile and run?
Which chips have you tested? (3A5000)?
How is ZeroTier's performance on this chip?
Which commercial products/devices can you point to that currently use this architecture?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1614,2022-04-02T15:34:37Z,2022-04-12T03:33:41Z,2022-04-12T03:33:41Z,MERGED,True,6,1,2,https://github.com/fuowang,Add loongarch64 support,2,[],https://github.com/zerotier/ZeroTierOne/pull/1614,https://github.com/fuowang,3,https://github.com/zerotier/ZeroTierOne/pull/1614#issuecomment-1089918848,"Add  loongarch64 support, the new architecture launched by China's Loongson.","Yes, I have already compiled (no drone build) and use it for about half a month, everything is good. I use it on the Loongson-3A5000 chip, theoretically, the 3C5000 also supports.
Linux release: Kylin Linux Advanced Server release V10 (Tercel)
In this architecture, zerotier-one -d runs stable, from March 24, it has never been interrupted, and the network connection is good:

Loongson 3A5000/3B5000：https://loongson.cn/productShow/32
Loongson 3C5000L：https://loongson.cn/productShow/33
There are currently available commercial products/devices with this architecture:
Motherboard / development board:
https://item.jd.com/100033374408.html
https://item.jd.com/100035752766.html
Laptop:
https://item.jd.com/100016595171.html
https://item.jd.com/100032993180.html
https://item.jd.com/100028944178.html
Desktop:
https://item.jd.com/100023656622.html
https://item.jd.com/100015834993.html
https://item.jd.com/100024659270.html",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1614,2022-04-02T15:34:37Z,2022-04-12T03:33:41Z,2022-04-12T03:33:41Z,MERGED,True,6,1,2,https://github.com/fuowang,Add loongarch64 support,2,[],https://github.com/zerotier/ZeroTierOne/pull/1614,https://github.com/joseph-henry,4,https://github.com/zerotier/ZeroTierOne/pull/1614#issuecomment-1095301265,"Add  loongarch64 support, the new architecture launched by China's Loongson.",Thanks. We'll accept this if the drone config is removed. Since we don't possess any loongarch64 hardware we cannot really test it right now anyway. Additionally since it is essentially just rebranded MIPS we can assume it works. If in the future there is more demand for support we can revisit adding this to our CI.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1614,2022-04-02T15:34:37Z,2022-04-12T03:33:41Z,2022-04-12T03:33:41Z,MERGED,True,6,1,2,https://github.com/fuowang,Add loongarch64 support,2,[],https://github.com/zerotier/ZeroTierOne/pull/1614,https://github.com/fuowang,5,https://github.com/zerotier/ZeroTierOne/pull/1614#issuecomment-1095903039,"Add  loongarch64 support, the new architecture launched by China's Loongson.","Thanks a lot, the drone configuration has been removed. In fact, loongarch64 is not just rebranded MIPS, it is redesigned and contains many new instructions. Also, zerotier-one runs very stable on my loongarch64 machine.",True,{'THUMBS_UP': ['https://github.com/joseph-henry']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1619,2022-04-09T04:08:25Z,2022-04-09T05:09:32Z,2022-04-13T00:47:34Z,MERGED,True,2,0,1,https://github.com/altano,Add `zerotier-cli info` output to Docker logs,1,[],https://github.com/zerotier/ZeroTierOne/pull/1619,https://github.com/altano,1,https://github.com/zerotier/ZeroTierOne/pull/1619,"When I first bring up the container, I want to know I'm approving the join request for the right node. I can get the node's ZT address by manually executing zerotier-cli info in the node (e.g. with docker-compose exec zerotier zerotier-cli info) but just having it in the logs to start with is very convenient.
Example logs:
> docker-compose logs 
Attaching to zerotier-container-stack-first-party-with-tweaks_whoami_1, zerotier-container-stack-first-party-with-tweaks_zerotier_1
whoami_1    | Starting up on port 80
zerotier_1  | Configuring networks to join
zerotier_1  | joining networks: 233ccaac27dbf50c
zerotier_1  | Configuring join for 233ccaac27dbf50c
zerotier_1  | starting zerotier
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | zerotier hasn't started, waiting a second
zerotier_1  | Writing healthcheck for networks: 233ccaac27dbf50c
zerotier_1  | zerotier-cli info: 200 info 7aa83280ef 1.8.6 OFFLINE
zerotier_1  | Sleeping infinitely","When I first bring up the container, I want to know I'm approving the join request for the right node. I can get the node's ZT address by manually executing zerotier-cli info in the node (e.g. with docker-compose exec zerotier zerotier-cli info) but just having it in the logs to start with is very convenient.
Example logs:
> docker-compose logs 
Attaching to zerotier-container-stack-first-party-with-tweaks_whoami_1, zerotier-container-stack-first-party-with-tweaks_zerotier_1
whoami_1    | Starting up on port 80
zerotier_1  | Configuring networks to join
zerotier_1  | joining networks: 233ccaac27dbf50c
zerotier_1  | Configuring join for 233ccaac27dbf50c
zerotier_1  | starting zerotier
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | zerotier hasn't started, waiting a second
zerotier_1  | Writing healthcheck for networks: 233ccaac27dbf50c
zerotier_1  | zerotier-cli info: 200 info 7aa83280ef 1.8.6 OFFLINE
zerotier_1  | Sleeping infinitely",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1619,2022-04-09T04:08:25Z,2022-04-09T05:09:32Z,2022-04-13T00:47:34Z,MERGED,True,2,0,1,https://github.com/altano,Add `zerotier-cli info` output to Docker logs,1,[],https://github.com/zerotier/ZeroTierOne/pull/1619,https://github.com/erikh,2,https://github.com/zerotier/ZeroTierOne/pull/1619#issuecomment-1093697392,"When I first bring up the container, I want to know I'm approving the join request for the right node. I can get the node's ZT address by manually executing zerotier-cli info in the node (e.g. with docker-compose exec zerotier zerotier-cli info) but just having it in the logs to start with is very convenient.
Example logs:
> docker-compose logs 
Attaching to zerotier-container-stack-first-party-with-tweaks_whoami_1, zerotier-container-stack-first-party-with-tweaks_zerotier_1
whoami_1    | Starting up on port 80
zerotier_1  | Configuring networks to join
zerotier_1  | joining networks: 233ccaac27dbf50c
zerotier_1  | Configuring join for 233ccaac27dbf50c
zerotier_1  | starting zerotier
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | zerotier hasn't started, waiting a second
zerotier_1  | Writing healthcheck for networks: 233ccaac27dbf50c
zerotier_1  | zerotier-cli info: 200 info 7aa83280ef 1.8.6 OFFLINE
zerotier_1  | Sleeping infinitely",I'll get to releasing this monday. Please remind me if I forget!,True,{'HOORAY': ['https://github.com/altano']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1619,2022-04-09T04:08:25Z,2022-04-09T05:09:32Z,2022-04-13T00:47:34Z,MERGED,True,2,0,1,https://github.com/altano,Add `zerotier-cli info` output to Docker logs,1,[],https://github.com/zerotier/ZeroTierOne/pull/1619,https://github.com/altano,3,https://github.com/zerotier/ZeroTierOne/pull/1619#issuecomment-1097401230,"When I first bring up the container, I want to know I'm approving the join request for the right node. I can get the node's ZT address by manually executing zerotier-cli info in the node (e.g. with docker-compose exec zerotier zerotier-cli info) but just having it in the logs to start with is very convenient.
Example logs:
> docker-compose logs 
Attaching to zerotier-container-stack-first-party-with-tweaks_whoami_1, zerotier-container-stack-first-party-with-tweaks_zerotier_1
whoami_1    | Starting up on port 80
zerotier_1  | Configuring networks to join
zerotier_1  | joining networks: 233ccaac27dbf50c
zerotier_1  | Configuring join for 233ccaac27dbf50c
zerotier_1  | starting zerotier
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | zerotier hasn't started, waiting a second
zerotier_1  | Writing healthcheck for networks: 233ccaac27dbf50c
zerotier_1  | zerotier-cli info: 200 info 7aa83280ef 1.8.6 OFFLINE
zerotier_1  | Sleeping infinitely",This is your reminder to publish this new version (and maybe v1.8.8 while you're at it). Thanks again!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1619,2022-04-09T04:08:25Z,2022-04-09T05:09:32Z,2022-04-13T00:47:34Z,MERGED,True,2,0,1,https://github.com/altano,Add `zerotier-cli info` output to Docker logs,1,[],https://github.com/zerotier/ZeroTierOne/pull/1619,https://github.com/erikh,4,https://github.com/zerotier/ZeroTierOne/pull/1619#issuecomment-1097435207,"When I first bring up the container, I want to know I'm approving the join request for the right node. I can get the node's ZT address by manually executing zerotier-cli info in the node (e.g. with docker-compose exec zerotier zerotier-cli info) but just having it in the logs to start with is very convenient.
Example logs:
> docker-compose logs 
Attaching to zerotier-container-stack-first-party-with-tweaks_whoami_1, zerotier-container-stack-first-party-with-tweaks_zerotier_1
whoami_1    | Starting up on port 80
zerotier_1  | Configuring networks to join
zerotier_1  | joining networks: 233ccaac27dbf50c
zerotier_1  | Configuring join for 233ccaac27dbf50c
zerotier_1  | starting zerotier
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | cat: /var/lib/zerotier-one/zerotier-one.pid: No such file or directory
zerotier_1  | zerotier hasn't started, waiting a second
zerotier_1  | Writing healthcheck for networks: 233ccaac27dbf50c
zerotier_1  | zerotier-cli info: 200 info 7aa83280ef 1.8.6 OFFLINE
zerotier_1  | Sleeping infinitely","Thanks!
------- Original Message -------
…
On Tuesday, April 12th, 2022 at 5:02 PM, Alan ***@***.***> wrote:
 This is your reminder to publish this new version (and maybe v1.8.8 while you're at it). Thanks again!

 —
 Reply to this email directly, [view it on GitHub](#1619 (comment)), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AAAET23FA3QCGPZWJDKCJJTVEYFJRANCNFSM5S6INPHQ).
 You are receiving this because you modified the open/close state.Message ID: ***@***.***>",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1624,2022-04-13T06:56:39Z,2022-04-13T06:58:00Z,2022-04-13T06:58:05Z,MERGED,True,2,2,1,https://github.com/erikh,silence catting files that don't exist in docker entrypoint,1,[],https://github.com/zerotier/ZeroTierOne/pull/1624,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1624,Signed-off-by: Erik Hollensbe git@hollensbe.org,Signed-off-by: Erik Hollensbe git@hollensbe.org,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1625,2022-04-13T07:10:27Z,2022-04-13T07:17:07Z,2022-04-13T07:18:22Z,MERGED,True,37,9,1,https://github.com/erikh,prettify the entrypoint log output,1,[],https://github.com/zerotier/ZeroTierOne/pull/1625,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1625,"=> Configuring networks to join
=> Joining networks: [abcdefdeadbeef00 cabacabacabacaba]
===> Configuring join: [abcdefdeadbeef00]
===> Configuring join: [cabacabacabacaba]
=> Starting ZeroTier
===> ZeroTier hasn't started, waiting a second
=> Writing healthcheck for networks: [abcdefdeadbeef00 cabacabacabacaba]
=> zerotier-cli info: [200 info e1facddce2 1.8.7 OFFLINE]
=> Sleeping infinitely
=> Killing zerotier","=> Configuring networks to join
=> Joining networks: [abcdefdeadbeef00 cabacabacabacaba]
===> Configuring join: [abcdefdeadbeef00]
===> Configuring join: [cabacabacabacaba]
=> Starting ZeroTier
===> ZeroTier hasn't started, waiting a second
=> Writing healthcheck for networks: [abcdefdeadbeef00 cabacabacabacaba]
=> zerotier-cli info: [200 info e1facddce2 1.8.7 OFFLINE]
=> Sleeping infinitely
=> Killing zerotier",True,{'HOORAY': ['https://github.com/altano']}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1625,2022-04-13T07:10:27Z,2022-04-13T07:17:07Z,2022-04-13T07:18:22Z,MERGED,True,37,9,1,https://github.com/erikh,prettify the entrypoint log output,1,[],https://github.com/zerotier/ZeroTierOne/pull/1625,https://github.com/erikh,2,https://github.com/zerotier/ZeroTierOne/pull/1625#issuecomment-1097638540,"=> Configuring networks to join
=> Joining networks: [abcdefdeadbeef00 cabacabacabacaba]
===> Configuring join: [abcdefdeadbeef00]
===> Configuring join: [cabacabacabacaba]
=> Starting ZeroTier
===> ZeroTier hasn't started, waiting a second
=> Writing healthcheck for networks: [abcdefdeadbeef00 cabacabacabacaba]
=> zerotier-cli info: [200 info e1facddce2 1.8.7 OFFLINE]
=> Sleeping infinitely
=> Killing zerotier","@altano I'm going to merge and push this to the tags, let me know if you don't like it.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1625,2022-04-13T07:10:27Z,2022-04-13T07:17:07Z,2022-04-13T07:18:22Z,MERGED,True,37,9,1,https://github.com/erikh,prettify the entrypoint log output,1,[],https://github.com/zerotier/ZeroTierOne/pull/1625,https://github.com/altano,3,https://github.com/zerotier/ZeroTierOne/pull/1625#issuecomment-1097639670,"=> Configuring networks to join
=> Joining networks: [abcdefdeadbeef00 cabacabacabacaba]
===> Configuring join: [abcdefdeadbeef00]
===> Configuring join: [cabacabacabacaba]
=> Starting ZeroTier
===> ZeroTier hasn't started, waiting a second
=> Writing healthcheck for networks: [abcdefdeadbeef00 cabacabacabacaba]
=> zerotier-cli info: [200 info e1facddce2 1.8.7 OFFLINE]
=> Sleeping infinitely
=> Killing zerotier",Looks awesome.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1625,2022-04-13T07:10:27Z,2022-04-13T07:17:07Z,2022-04-13T07:18:22Z,MERGED,True,37,9,1,https://github.com/erikh,prettify the entrypoint log output,1,[],https://github.com/zerotier/ZeroTierOne/pull/1625,https://github.com/erikh,4,https://github.com/zerotier/ZeroTierOne/pull/1625#issuecomment-1097644028,"=> Configuring networks to join
=> Joining networks: [abcdefdeadbeef00 cabacabacabacaba]
===> Configuring join: [abcdefdeadbeef00]
===> Configuring join: [cabacabacabacaba]
=> Starting ZeroTier
===> ZeroTier hasn't started, waiting a second
=> Writing healthcheck for networks: [abcdefdeadbeef00 cabacabacabacaba]
=> zerotier-cli info: [200 info e1facddce2 1.8.7 OFFLINE]
=> Sleeping infinitely
=> Killing zerotier",pushed to 1.8.7 and latest,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1653,2022-04-25T22:53:04Z,2022-04-26T03:39:39Z,2022-04-26T03:39:39Z,MERGED,True,1,1,1,https://github.com/erikh,Fix cargo home directory (was previously hard-coded to /root),1,[],https://github.com/zerotier/ZeroTierOne/pull/1653,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1653,Signed-off-by: Erik Hollensbe git@hollensbe.org,Signed-off-by: Erik Hollensbe git@hollensbe.org,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1658,2022-05-05T19:25:30Z,2022-05-06T16:11:47Z,2022-05-06T16:11:47Z,MERGED,True,9,3,2,https://github.com/dhbaird,"Fix SEGV caused by format string on 32-bit platforms / armv7l, reported in #1587",1,[],https://github.com/zerotier/ZeroTierOne/pull/1658,https://github.com/dhbaird,1,https://github.com/zerotier/ZeroTierOne/pull/1658,Fixes SEGV in #1587. Happy to re-submit if any changes are desired. Thanks!,Fixes SEGV in #1587. Happy to re-submit if any changes are desired. Thanks!,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1658,2022-05-05T19:25:30Z,2022-05-06T16:11:47Z,2022-05-06T16:11:47Z,MERGED,True,9,3,2,https://github.com/dhbaird,"Fix SEGV caused by format string on 32-bit platforms / armv7l, reported in #1587",1,[],https://github.com/zerotier/ZeroTierOne/pull/1658,https://github.com/dhbaird,2,https://github.com/zerotier/ZeroTierOne/pull/1658#issuecomment-1118976323,Fixes SEGV in #1587. Happy to re-submit if any changes are desired. Thanks!,Note: I just force pushed over this to convert a spaces indent into tabs.,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1662,2022-05-09T18:50:29Z,,2022-05-09T18:50:29Z,OPEN,False,17,17,1,https://github.com/joseph-henry,Improve ephemeral port restriction handling,1,[],https://github.com/zerotier/ZeroTierOne/pull/1662,https://github.com/joseph-henry,1,https://github.com/zerotier/ZeroTierOne/pull/1662,"This change makes it easier to control when ephemeral ports can be used via local.conf (See issue #915)
New behavior:

The allowSecondaryPort option in local.conf is replaced by allowEphemeralPorts
allowEphemeralPorts is a toggle that controls all non-9993 ports (e.g. secondaryPort to get around buggy NATs and tertieraryPort for uPnP/NAT-PMP)

Why this change is needed:

There does not exist a single option switch to control all non-9993 ports. One would have to set allowSecondaryPort:false and allowPortMapping:false.

Open questions:

Should this change replace allowSecondaryPort causing a breaking change or should we leave that switch for backwards compatibility (introducing possibly confusing redundancy)?
Is there a situation where people would want to disable the secondary port but leave the tertiary port?","This change makes it easier to control when ephemeral ports can be used via local.conf (See issue #915)
New behavior:

The allowSecondaryPort option in local.conf is replaced by allowEphemeralPorts
allowEphemeralPorts is a toggle that controls all non-9993 ports (e.g. secondaryPort to get around buggy NATs and tertieraryPort for uPnP/NAT-PMP)

Why this change is needed:

There does not exist a single option switch to control all non-9993 ports. One would have to set allowSecondaryPort:false and allowPortMapping:false.

Open questions:

Should this change replace allowSecondaryPort causing a breaking change or should we leave that switch for backwards compatibility (introducing possibly confusing redundancy)?
Is there a situation where people would want to disable the secondary port but leave the tertiary port?",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1669,2022-05-17T01:03:52Z,,2022-05-17T01:16:39Z,OPEN,False,67,14,3,https://github.com/joseph-henry,Add system script hook for network events,1,[],https://github.com/zerotier/ZeroTierOne/pull/1669,https://github.com/joseph-henry,1,https://github.com/zerotier/ZeroTierOne/pull/1669,"This patch adds the ability to call a user-specified script upon various network events (See #1615). I haven't yet considered all of the security implications of this so let's not merge until we've thought hard about this.
Example /var/lib/zerotier-one/hook.sh:
#!/bin/sh

network_up()
{
	echo ""network_up $1"" >> log.txt
}

network_update()
{
	echo ""network_update $1"" >> log.txt
}

network_down()
{
	echo ""network_down $1"" >> log.txt
}

""$@""

Example local.conf:
{
	""settings"":
	{
		""eventHookScriptPath"": ""/var/lib/zerotier-one/hook.sh""
	}
}

Example ZT_TRACE output:
Running network event hook script (/var/lib/zerotier-one/hook.sh)","This patch adds the ability to call a user-specified script upon various network events (See #1615). I haven't yet considered all of the security implications of this so let's not merge until we've thought hard about this.
Example /var/lib/zerotier-one/hook.sh:
#!/bin/sh

network_up()
{
	echo ""network_up $1"" >> log.txt
}

network_update()
{
	echo ""network_update $1"" >> log.txt
}

network_down()
{
	echo ""network_down $1"" >> log.txt
}

""$@""

Example local.conf:
{
	""settings"":
	{
		""eventHookScriptPath"": ""/var/lib/zerotier-one/hook.sh""
	}
}

Example ZT_TRACE output:
Running network event hook script (/var/lib/zerotier-one/hook.sh)",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1669,2022-05-17T01:03:52Z,,2022-05-17T01:16:39Z,OPEN,False,67,14,3,https://github.com/joseph-henry,Add system script hook for network events,1,[],https://github.com/zerotier/ZeroTierOne/pull/1669,https://github.com/joseph-henry,2,https://github.com/zerotier/ZeroTierOne/pull/1669#issuecomment-1128296218,"This patch adds the ability to call a user-specified script upon various network events (See #1615). I haven't yet considered all of the security implications of this so let's not merge until we've thought hard about this.
Example /var/lib/zerotier-one/hook.sh:
#!/bin/sh

network_up()
{
	echo ""network_up $1"" >> log.txt
}

network_update()
{
	echo ""network_update $1"" >> log.txt
}

network_down()
{
	echo ""network_down $1"" >> log.txt
}

""$@""

Example local.conf:
{
	""settings"":
	{
		""eventHookScriptPath"": ""/var/lib/zerotier-one/hook.sh""
	}
}

Example ZT_TRACE output:
Running network event hook script (/var/lib/zerotier-one/hook.sh)","Good questions, I'm using the same pattern we use to run other system commands. Didn't want to deviate too much.",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1669,2022-05-17T01:03:52Z,,2022-05-17T01:16:39Z,OPEN,False,67,14,3,https://github.com/joseph-henry,Add system script hook for network events,1,[],https://github.com/zerotier/ZeroTierOne/pull/1669,https://github.com/erikh,3,https://github.com/zerotier/ZeroTierOne/pull/1669#issuecomment-1128296678,"This patch adds the ability to call a user-specified script upon various network events (See #1615). I haven't yet considered all of the security implications of this so let's not merge until we've thought hard about this.
Example /var/lib/zerotier-one/hook.sh:
#!/bin/sh

network_up()
{
	echo ""network_up $1"" >> log.txt
}

network_update()
{
	echo ""network_update $1"" >> log.txt
}

network_down()
{
	echo ""network_down $1"" >> log.txt
}

""$@""

Example local.conf:
{
	""settings"":
	{
		""eventHookScriptPath"": ""/var/lib/zerotier-one/hook.sh""
	}
}

Example ZT_TRACE output:
Running network event hook script (/var/lib/zerotier-one/hook.sh)",fair enough,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1680,2022-05-23T20:54:46Z,,2022-06-02T23:00:02Z,OPEN,False,0,70,1,https://github.com/laduke,Default route mac,1,[],https://github.com/zerotier/ZeroTierOne/pull/1680,https://github.com/laduke,1,https://github.com/zerotier/ZeroTierOne/pull/1680,,,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1683,2022-05-30T09:29:24Z,,2022-05-30T09:29:52Z,OPEN,False,47,0,2,https://github.com/srajmane,Add redhat/ubi:8 dockerfile for s390x support,1,[],https://github.com/zerotier/ZeroTierOne/pull/1683,https://github.com/srajmane,1,https://github.com/zerotier/ZeroTierOne/pull/1683,Add redhat/ubi:8 dockerfile for s390x support,Add redhat/ubi:8 dockerfile for s390x support,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1684,2022-05-30T10:48:43Z,,2022-05-31T04:13:14Z,OPEN,False,55,48,4,https://github.com/GermanAizek,Fixed bugs and fixes,1,[],https://github.com/zerotier/ZeroTierOne/pull/1684,https://github.com/GermanAizek,1,https://github.com/zerotier/ZeroTierOne/pull/1684,"@erikh, @laduke, hi.
Review code, point to flaws and feedback me.
Commit title: Fixed bug with aqm queues, check nullref queueAtFrontOfList before use, delete NSM connection before return","@erikh, @laduke, hi.
Review code, point to flaws and feedback me.
Commit title: Fixed bug with aqm queues, check nullref queueAtFrontOfList before use, delete NSM connection before return",True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1684,2022-05-30T10:48:43Z,,2022-05-31T04:13:14Z,OPEN,False,55,48,4,https://github.com/GermanAizek,Fixed bugs and fixes,1,[],https://github.com/zerotier/ZeroTierOne/pull/1684,https://github.com/erikh,2,https://github.com/zerotier/ZeroTierOne/pull/1684#issuecomment-1141648819,"@erikh, @laduke, hi.
Review code, point to flaws and feedback me.
Commit title: Fixed bug with aqm queues, check nullref queueAtFrontOfList before use, delete NSM connection before return",probably best to have @adamierymenko poke at this one,True,{}
zerotier/ZeroTierOne,https://github.com/zerotier/ZeroTierOne,1685,2022-05-31T18:09:25Z,,2022-05-31T18:09:25Z,OPEN,False,21,0,1,https://github.com/erikh,Docker release make tasks,1,[],https://github.com/zerotier/ZeroTierOne/pull/1685,https://github.com/erikh,1,https://github.com/zerotier/ZeroTierOne/pull/1685,Signed-off-by: Erik Hollensbe git@hollensbe.org,Signed-off-by: Erik Hollensbe git@hollensbe.org,True,{}
