MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,8,2015-02-08T23:42:18Z,2015-02-10T06:12:41Z,2015-02-10T06:12:41Z,MERGED,True,18,19,2,https://github.com/shaughanlavine,Scalar,12,[],https://github.com/MaslowCNC/Firmware/pull/8,https://github.com/shaughanlavine,1,https://github.com/MaslowCNC/Firmware/pull/8,Scalor->Scalar throughout.,Scalor->Scalar throughout.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,11,2016-07-21T16:55:34Z,2016-07-21T16:56:59Z,2016-07-21T16:56:59Z,MERGED,True,161,91,4,https://github.com/BarbourSmith,Add second motor,20,[],https://github.com/MaslowCNC/Firmware/pull/11,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/11,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,12,2016-07-21T16:59:55Z,2016-07-21T17:00:30Z,2016-07-21T17:18:20Z,MERGED,True,1518,1517,2,https://github.com/BarbourSmith,Tabs to spaces,2,[],https://github.com/MaslowCNC/Firmware/pull/12,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/12,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,13,2016-07-21T17:01:49Z,2016-07-21T17:17:56Z,2016-07-21T17:18:18Z,MERGED,True,1649,1613,4,https://github.com/BarbourSmith,Add second motor,21,[],https://github.com/MaslowCNC/Firmware/pull/13,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/13,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,14,2016-07-21T17:25:11Z,2016-07-21T17:26:00Z,2016-07-21T17:26:00Z,CLOSED,False,1,1,1,https://github.com/BarbourSmith,Tabs to spaces,1,[],https://github.com/MaslowCNC/Firmware/pull/14,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/14,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,15,2016-07-21T17:26:42Z,2016-07-21T17:28:54Z,2016-07-21T17:28:54Z,MERGED,True,0,0,0,https://github.com/BarbourSmith,New world,2,[],https://github.com/MaslowCNC/Firmware/pull/15,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/15,this is getting messy,this is getting messy,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,16,2016-07-21T18:33:34Z,2016-07-21T18:40:37Z,2016-07-21T18:40:45Z,MERGED,True,24,28,3,https://github.com/BarbourSmith,Add support for changing pitch,5,[],https://github.com/MaslowCNC/Firmware/pull/16,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/16,Allows the relationship between linear motion and rotations to be easily changed in the firmware,Allows the relationship between linear motion and rotations to be easily changed in the firmware,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,16,2016-07-21T18:33:34Z,2016-07-21T18:40:37Z,2016-07-21T18:40:45Z,MERGED,True,24,28,3,https://github.com/BarbourSmith,Add support for changing pitch,5,[],https://github.com/MaslowCNC/Firmware/pull/16,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/16#issuecomment-234345115,Allows the relationship between linear motion and rotations to be easily changed in the firmware,üêë,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,17,2016-07-21T19:40:58Z,2016-07-21T19:41:34Z,2016-07-21T19:41:38Z,MERGED,True,4,18,1,https://github.com/BarbourSmith,Fixbughome,2,[],https://github.com/MaslowCNC/Firmware/pull/17,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/17,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,18,2016-07-21T21:50:34Z,2016-07-21T21:54:30Z,2016-07-21T21:54:34Z,MERGED,True,33,142,1,https://github.com/BarbourSmith,Reverse y direction,10,[],https://github.com/MaslowCNC/Firmware/pull/18,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/18,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,19,2016-07-21T22:06:16Z,2016-07-21T22:10:10Z,2016-07-21T22:10:16Z,MERGED,True,78,19,2,https://github.com/BarbourSmith,Move block comments into functions,2,[],https://github.com/MaslowCNC/Firmware/pull/19,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/19,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,20,2016-07-26T01:42:44Z,2016-07-26T15:59:35Z,2016-07-26T15:59:40Z,MERGED,True,270,788,6,https://github.com/BarbourSmith,Make axis object,24,[],https://github.com/MaslowCNC/Firmware/pull/20,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/20,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,21,2016-07-27T00:09:40Z,2016-07-27T00:11:22Z,2016-07-27T00:11:26Z,MERGED,True,105,59,6,https://github.com/BarbourSmith,Add in y axis,11,[],https://github.com/MaslowCNC/Firmware/pull/21,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/21,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,22,2016-07-27T00:14:36Z,2016-07-27T00:15:39Z,2016-07-27T00:15:42Z,MERGED,True,645,937,8,https://github.com/BarbourSmith,Added pid controller,70,[],https://github.com/MaslowCNC/Firmware/pull/22,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/22,and a lot of rewriting that was necessary to make that happen,and a lot of rewriting that was necessary to make that happen,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,23,2016-07-27T17:50:06Z,2016-07-27T17:51:27Z,2016-07-27T17:51:31Z,MERGED,True,6,15,2,https://github.com/BarbourSmith,Added back in rezero functionality ,2,[],https://github.com/MaslowCNC/Firmware/pull/23,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/23,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,24,2016-07-27T18:29:56Z,2016-07-27T18:32:44Z,2016-07-27T18:32:46Z,MERGED,True,54,66,4,https://github.com/BarbourSmith,Axis loads and stores position from eeprom,4,[],https://github.com/MaslowCNC/Firmware/pull/24,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/24,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,25,2016-07-27T19:04:31Z,2016-07-27T19:07:00Z,2016-07-29T20:29:08Z,MERGED,True,91,471,2,https://github.com/BarbourSmith,General tidy up,7,[],https://github.com/MaslowCNC/Firmware/pull/25,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/25,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,26,2016-07-27T22:50:20Z,2016-07-27T22:52:27Z,2016-07-27T22:52:27Z,MERGED,True,17,5,1,https://github.com/BarbourSmith,Position display shows interpolated output,5,[],https://github.com/MaslowCNC/Firmware/pull/26,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/26,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,27,2016-07-28T18:34:28Z,2016-07-28T18:35:48Z,2016-07-28T18:36:13Z,MERGED,True,30,42,3,https://github.com/BarbourSmith,Move pitch into axis,4,[],https://github.com/MaslowCNC/Firmware/pull/27,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/27,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,28,2016-07-28T21:39:43Z,2016-07-28T21:41:29Z,2016-07-29T20:29:09Z,MERGED,True,9,34,2,https://github.com/BarbourSmith,Works like before but cleaner,2,[],https://github.com/MaslowCNC/Firmware/pull/28,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/28,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,29,2016-07-28T22:21:06Z,2016-07-28T23:15:59Z,2016-07-28T23:16:03Z,MERGED,True,122,54,3,https://github.com/BarbourSmith,Clean up and refactor computations ,25,[],https://github.com/MaslowCNC/Firmware/pull/29,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/29,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,30,2016-08-02T18:55:45Z,2016-08-02T19:15:02Z,2016-08-02T19:15:10Z,MERGED,True,116,11,4,https://github.com/BarbourSmith,Add arc function,11,[],https://github.com/MaslowCNC/Firmware/pull/30,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/30,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,31,2016-08-02T19:52:35Z,2016-08-04T01:53:26Z,2016-08-04T01:53:31Z,MERGED,True,9,0,1,https://github.com/BarbourSmith,make rezero save,1,[],https://github.com/MaslowCNC/Firmware/pull/31,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/31,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,32,2016-08-04T01:52:16Z,2016-08-04T01:52:54Z,2016-08-04T01:52:57Z,MERGED,True,9,4,2,https://github.com/BarbourSmith,Make inches print right,2,[],https://github.com/MaslowCNC/Firmware/pull/32,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/32,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,33,2016-08-08T22:04:58Z,2016-08-08T22:16:38Z,2016-08-08T22:16:44Z,CLOSED,False,8,1,2,https://github.com/BarbourSmith,Make lines exicute fast - throw away?,2,[],https://github.com/MaslowCNC/Firmware/pull/33,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/33,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,33,2016-08-08T22:04:58Z,2016-08-08T22:16:38Z,2016-08-08T22:16:44Z,CLOSED,False,8,1,2,https://github.com/BarbourSmith,Make lines exicute fast - throw away?,2,[],https://github.com/MaslowCNC/Firmware/pull/33,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/33#issuecomment-238394861,,garbage,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,34,2016-08-09T18:13:30Z,2016-08-09T18:20:06Z,2016-08-09T18:20:10Z,MERGED,True,6,73,2,https://github.com/BarbourSmith,Limit delay between lines,4,[],https://github.com/MaslowCNC/Firmware/pull/34,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/34,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,35,2016-08-10T19:55:23Z,2016-08-10T20:42:25Z,2016-08-10T20:42:29Z,MERGED,True,22,14,2,https://github.com/BarbourSmith,Display just target and clean up circle cuts,4,[],https://github.com/MaslowCNC/Firmware/pull/35,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/35,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,36,2016-08-10T21:13:38Z,2016-08-10T21:14:05Z,2016-08-10T21:14:21Z,MERGED,True,0,10,1,https://github.com/BarbourSmith,Remove prints,2,[],https://github.com/MaslowCNC/Firmware/pull/36,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/36,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,37,2016-08-10T23:07:58Z,2016-08-10T23:09:31Z,2016-08-10T23:09:34Z,MERGED,True,17,1,1,https://github.com/BarbourSmith,Machine request user to adjust zaxis,2,[],https://github.com/MaslowCNC/Firmware/pull/37,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/37,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,38,2016-08-15T18:43:24Z,2016-08-15T18:48:37Z,2016-08-15T18:48:40Z,MERGED,True,1241,75,9,https://github.com/BarbourSmith,New encoders,9,[],https://github.com/MaslowCNC/Firmware/pull/38,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/38,Switch to AB style encoders,Switch to AB style encoders,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,39,2016-08-15T19:05:50Z,2016-08-15T19:06:48Z,2016-08-15T19:06:51Z,MERGED,True,12,10,1,https://github.com/BarbourSmith,continually calculate chain lengths when moving,1,[],https://github.com/MaslowCNC/Firmware/pull/39,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/39,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,40,2016-08-17T00:45:25Z,2016-08-17T00:50:15Z,2016-08-17T00:50:19Z,MERGED,True,47,5,3,https://github.com/BarbourSmith,rapid move,2,[],https://github.com/MaslowCNC/Firmware/pull/40,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/40,Added support for G0 rapid move,Added support for G0 rapid move,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,41,2016-08-18T20:51:42Z,2016-08-18T20:53:39Z,2016-08-18T20:53:49Z,MERGED,True,294,13,5,https://github.com/BarbourSmith,pid computation is interupt driven,1,[],https://github.com/MaslowCNC/Firmware/pull/41,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/41,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,42,2016-08-18T20:55:02Z,2016-08-18T20:58:01Z,2016-08-18T20:58:03Z,MERGED,True,321,47,8,https://github.com/BarbourSmith,"pid computation is interupt driven, deadband removed",8,[],https://github.com/MaslowCNC/Firmware/pull/42,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/42,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,43,2016-08-19T19:53:07Z,2016-08-19T20:58:22Z,2016-08-19T20:58:26Z,MERGED,True,58,15,5,https://github.com/BarbourSmith,"Test cutting a circle, elimintate integrator windup",6,[],https://github.com/MaslowCNC/Firmware/pull/43,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/43,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,43,2016-08-19T19:53:07Z,2016-08-19T20:58:22Z,2016-08-19T20:58:26Z,MERGED,True,58,15,5,https://github.com/BarbourSmith,"Test cutting a circle, elimintate integrator windup",6,[],https://github.com/MaslowCNC/Firmware/pull/43,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/43#issuecomment-241119416,,test this on a real file before merge,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,44,2016-08-19T21:32:04Z,2016-08-19T21:45:55Z,2016-08-21T18:16:03Z,MERGED,True,387,66,8,https://github.com/BarbourSmith,"Much improvement to encoders code, little performace gain",26,[],https://github.com/MaslowCNC/Firmware/pull/44,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/44,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,45,2016-08-20T21:39:34Z,2016-08-20T21:45:27Z,2016-08-20T21:45:31Z,MERGED,True,42,8,6,https://github.com/BarbourSmith,Pid tune with square,13,[],https://github.com/MaslowCNC/Firmware/pull/45,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/45,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,46,2016-08-20T23:39:09Z,2016-08-20T23:40:32Z,2016-08-20T23:40:36Z,MERGED,True,15,15,1,https://github.com/BarbourSmith,Make lines acumulate again,3,[],https://github.com/MaslowCNC/Firmware/pull/46,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/46,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,47,2016-08-21T17:56:57Z,2016-08-21T18:15:24Z,2016-08-21T18:15:44Z,MERGED,True,10,5,4,https://github.com/BarbourSmith,Pid tuned under load,3,[],https://github.com/MaslowCNC/Firmware/pull/47,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/47,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,48,2016-08-23T16:12:59Z,2016-08-23T16:15:55Z,2016-08-23T16:15:58Z,MERGED,True,15,7,2,https://github.com/BarbourSmith,Fix overflow bug in long cuts,8,[],https://github.com/MaslowCNC/Firmware/pull/48,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/48,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,49,2016-08-23T16:38:34Z,2016-08-23T16:44:15Z,2016-08-23T16:44:18Z,MERGED,True,14,8,2,https://github.com/BarbourSmith,Move wait for gap to close,2,[],https://github.com/MaslowCNC/Firmware/pull/49,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/49,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,50,2016-08-23T19:34:06Z,2016-08-27T00:08:24Z,2016-08-27T00:08:26Z,MERGED,True,5,2,3,https://github.com/BarbourSmith,added mid range Ki,1,[],https://github.com/MaslowCNC/Firmware/pull/50,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/50,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,51,2016-09-11T22:57:59Z,2016-09-11T22:58:35Z,2016-09-11T22:58:38Z,MERGED,True,36,12,1,https://github.com/BarbourSmith,Adjust machine dimensions,6,[],https://github.com/MaslowCNC/Firmware/pull/51,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/51,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,52,2016-09-16T21:12:07Z,2016-09-17T01:16:33Z,2016-09-17T01:16:36Z,MERGED,True,1,9,1,https://github.com/BarbourSmith,Tracks path here,1,[],https://github.com/MaslowCNC/Firmware/pull/52,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/52,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,53,2016-09-17T18:58:15Z,2016-09-17T18:59:27Z,2016-09-17T18:59:30Z,MERGED,True,18,4,4,https://github.com/BarbourSmith,Move up full speed,3,[],https://github.com/MaslowCNC/Firmware/pull/53,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/53,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,54,2016-09-17T19:20:23Z,2016-09-18T01:28:48Z,2016-09-18T01:28:51Z,MERGED,True,2,1,1,https://github.com/BarbourSmith,Put in correct encoder ppr,2,[],https://github.com/MaslowCNC/Firmware/pull/54,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/54,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,55,2016-10-09T21:06:42Z,2016-10-09T21:39:22Z,2016-10-09T21:39:28Z,MERGED,True,2770,1700,17,https://github.com/BarbourSmith,Merge Maslow changes into Master,282,[],https://github.com/MaslowCNC/Firmware/pull/55,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/55,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,57,2016-10-14T22:27:01Z,2016-10-14T22:27:56Z,2016-10-25T00:21:57Z,MERGED,True,139,71,4,https://github.com/BarbourSmith,Split kinematics out into a libarary,3,[],https://github.com/MaslowCNC/Firmware/pull/57,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/57,Split the kinematics code out into a separate library,Split the kinematics code out into a separate library,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,58,2016-10-25T00:20:29Z,2016-10-25T00:21:28Z,2016-10-25T00:21:31Z,MERGED,True,22,8,2,https://github.com/BarbourSmith,Change pin numbers,7,[],https://github.com/MaslowCNC/Firmware/pull/58,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/58,Change pin numbers for encoders and motor controls for new H-bridge PCB,Change pin numbers for encoders and motor controls for new H-bridge PCB,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,59,2016-10-30T22:15:08Z,2016-10-30T22:15:54Z,2016-10-30T22:15:57Z,MERGED,True,9,9,2,https://github.com/BarbourSmith,New motors and gears,2,[],https://github.com/MaslowCNC/Firmware/pull/59,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/59,swap in new motors and gear boxes with new encoders,swap in new motors and gear boxes with new encoders,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,60,2016-11-03T23:13:56Z,2016-11-04T00:32:37Z,2016-11-04T00:32:41Z,MERGED,True,41,12,5,https://github.com/BarbourSmith,Add z axis,14,[],https://github.com/MaslowCNC/Firmware/pull/60,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/60,Add code to support a 3rd motor/encoder working controling a z-axis,Add code to support a 3rd motor/encoder working controling a z-axis,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,61,2016-11-14T23:06:33Z,2016-11-17T20:50:55Z,2016-11-17T20:50:59Z,MERGED,True,2729,51,15,https://github.com/BarbourSmith,New Kinematics for y axis compenstion,37,[],https://github.com/MaslowCNC/Firmware/pull/61,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/61,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,62,2016-11-17T22:27:49Z,2016-11-17T23:26:52Z,2016-11-17T23:26:55Z,MERGED,True,20,35,20,https://github.com/BarbourSmith,Library cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/62,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/62,move all library files to an organized structure,move all library files to an organized structure,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,62,2016-11-17T22:27:49Z,2016-11-17T23:26:52Z,2016-11-17T23:26:55Z,MERGED,True,20,35,20,https://github.com/BarbourSmith,Library cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/62,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/62#issuecomment-261390505,move all library files to an organized structure,"test on machine, then üö¢",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,63,2016-11-19T20:19:26Z,2016-11-19T20:21:21Z,2016-11-19T20:21:23Z,MERGED,True,47,43,4,https://github.com/BarbourSmith,New wiring harnes,3,[],https://github.com/MaslowCNC/Firmware/pull/63,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/63,Update the software for the new wiring harness and do some general cleanup of the axis objects,Update the software for the new wiring harness and do some general cleanup of the axis objects,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,64,2016-11-19T20:40:19Z,2016-11-19T20:41:03Z,2016-11-19T20:41:05Z,MERGED,True,4,5,1,https://github.com/BarbourSmith,fix rapid feed with z-axis off,1,[],https://github.com/MaslowCNC/Firmware/pull/64,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/64,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,65,2016-11-24T04:05:38Z,2016-11-24T04:06:18Z,2016-11-24T04:06:20Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,New Wires for z-axis,1,[],https://github.com/MaslowCNC/Firmware/pull/65,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/65,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,67,2016-11-29T20:11:45Z,2016-11-29T20:18:32Z,2016-11-29T20:18:35Z,MERGED,True,22,25,2,https://github.com/BarbourSmith,Re write motor interface,3,[],https://github.com/MaslowCNC/Firmware/pull/67,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/67,"The GearMotor library used to use an interface which imitated the arduino Servo libarary where a commmand of 90 was stopped and 0 and 180 were full speed in opposit directions.
This interface is clunky and doesn't provide suficient control over speed for our application so it had to be done away with.
Rather than imitate the arduino servo library, I will write my own servo library with my interface.","The GearMotor library used to use an interface which imitated the arduino Servo libarary where a commmand of 90 was stopped and 0 and 180 were full speed in opposit directions.
This interface is clunky and doesn't provide suficient control over speed for our application so it had to be done away with.
Rather than imitate the arduino servo library, I will write my own servo library with my interface.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,68,2016-12-04T18:00:58Z,2016-12-04T19:24:37Z,2016-12-04T19:24:45Z,MERGED,True,80,185,5,https://github.com/BarbourSmith,Segment lin structs,13,[],https://github.com/MaslowCNC/Firmware/pull/68,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/68,Linearize the motor behavior by modeling it as a series of linear segments,Linearize the motor behavior by modeling it as a series of linear segments,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,69,2016-12-05T02:32:04Z,2016-12-05T02:37:28Z,2016-12-05T02:37:30Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Tune pid for new values,8,[],https://github.com/MaslowCNC/Firmware/pull/69,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/69,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,70,2016-12-05T02:38:25Z,2016-12-05T02:45:05Z,2016-12-05T02:45:08Z,MERGED,True,198,54,5,https://github.com/BarbourSmith,Linearize the motor response,60,[],https://github.com/MaslowCNC/Firmware/pull/70,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/70,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,71,2016-12-07T07:22:34Z,2016-12-07T17:13:32Z,2016-12-07T17:13:35Z,MERGED,True,158,52,3,https://github.com/BarbourSmith,Auto compute lin segs,15,[],https://github.com/MaslowCNC/Firmware/pull/71,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/71,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,72,2016-12-08T02:21:56Z,2016-12-08T17:47:01Z,2016-12-08T17:47:03Z,MERGED,True,70,24,1,https://github.com/BarbourSmith,Fast calibration,6,[],https://github.com/MaslowCNC/Firmware/pull/72,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/72,Increase the speed of the calibration process,Increase the speed of the calibration process,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,72,2016-12-08T02:21:56Z,2016-12-08T17:47:01Z,2016-12-08T17:47:03Z,MERGED,True,70,24,1,https://github.com/BarbourSmith,Fast calibration,6,[],https://github.com/MaslowCNC/Firmware/pull/72,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/72#issuecomment-265643896,Increase the speed of the calibration process,Try to speed up more by setting an intermediate opt-out if it hasn't gotten to maybe 1/4 dist by 1/3 time,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,73,2016-12-09T23:15:31Z,2016-12-15T20:23:01Z,2016-12-15T20:23:04Z,MERGED,True,9,374,29,https://github.com/BarbourSmith,Fix undefined reference with new ide,4,[],https://github.com/MaslowCNC/Firmware/pull/73,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/73,Move all the files into one folder. Not happy abou this.,Move all the files into one folder. Not happy abou this.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,73,2016-12-09T23:15:31Z,2016-12-15T20:23:01Z,2016-12-15T20:23:04Z,MERGED,True,9,374,29,https://github.com/BarbourSmith,Fix undefined reference with new ide,4,[],https://github.com/MaslowCNC/Firmware/pull/73,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/73#issuecomment-267413160,Move all the files into one folder. Not happy abou this.,Delete folder structure,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,74,2016-12-15T20:25:48Z,2016-12-15T20:27:01Z,2016-12-15T20:27:03Z,MERGED,True,3,3,1,https://github.com/BarbourSmith,New pcb rev,3,[],https://github.com/MaslowCNC/Firmware/pull/74,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/74,Move the pins for the z-axis,Move the pins for the z-axis,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,75,2016-12-16T19:03:18Z,2016-12-16T19:29:25Z,2016-12-16T19:29:28Z,MERGED,True,93,23,5,https://github.com/BarbourSmith,Linearization of motors saves to EEPROM after calibration,9,[],https://github.com/MaslowCNC/Firmware/pull/75,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/75,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,76,2016-12-29T22:00:52Z,2016-12-29T22:14:42Z,2016-12-29T22:14:45Z,MERGED,True,0,4,1,https://github.com/BarbourSmith,Fix lin seg error,3,[],https://github.com/MaslowCNC/Firmware/pull/76,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/76,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,77,2016-12-30T01:13:36Z,2016-12-30T01:14:17Z,2016-12-30T01:15:12Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,swap pins for new PCB,1,[],https://github.com/MaslowCNC/Firmware/pull/77,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/77,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,78,2016-12-31T02:06:02Z,2016-12-31T02:25:36Z,2016-12-31T02:25:40Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,change initial chain length,1,[],https://github.com/MaslowCNC/Firmware/pull/78,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/78,Change the value for the inital chan length to be accurate,Change the value for the inital chan length to be accurate,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,79,2016-12-31T02:21:50Z,2016-12-31T02:24:41Z,2016-12-31T02:24:45Z,MERGED,True,1,0,1,https://github.com/BarbourSmith,Accept non caps commands,2,[],https://github.com/MaslowCNC/Firmware/pull/79,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/79,"Adds only 27us to execution time, worth it üëç","Adds only 27us to execution time, worth it üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,80,2017-01-01T19:56:08Z,2017-01-01T19:59:29Z,2017-01-01T19:59:32Z,MERGED,True,8,0,1,https://github.com/BarbourSmith,Add a guest book,1,[],https://github.com/MaslowCNC/Firmware/pull/80,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/80,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,81,2017-01-01T23:34:16Z,2017-01-02T19:46:23Z,2017-01-02T19:46:27Z,MERGED,True,13,3,4,https://github.com/BarbourSmith,Fix g10 jump,2,[],https://github.com/MaslowCNC/Firmware/pull/81,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/81,"When reseting the origin, the derivitive term of the PID controler would cause the machine to twitch. Adding a delay to let it settle fixed the issue.","When reseting the origin, the derivitive term of the PID controler would cause the machine to twitch. Adding a delay to let it settle fixed the issue.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,82,2017-01-02T20:34:33Z,2017-01-03T01:05:28Z,2017-01-03T01:05:31Z,MERGED,True,37,1,1,https://github.com/BarbourSmith,Add option to bring back old triangluar kinematics,2,[],https://github.com/MaslowCNC/Firmware/pull/82,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/82,"Add option to bring back original kinematics with #define.
Test then merge","Add option to bring back original kinematics with #define.
Test then merge",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,83,2017-01-03T00:32:46Z,2017-01-03T00:34:21Z,2017-01-03T00:34:24Z,MERGED,True,50,20,7,https://github.com/BarbourSmith,Make kinematics use full chain lengths,12,[],https://github.com/MaslowCNC/Firmware/pull/83,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/83,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,84,2017-01-04T21:52:44Z,2017-01-04T22:05:44Z,2017-01-04T22:05:47Z,MERGED,True,200,36,3,https://github.com/BarbourSmith,Add new kinematics options,25,[],https://github.com/MaslowCNC/Firmware/pull/84,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/84,Add kinematic options for original triangluar kinematics and new kinematics with tilt compensation,Add kinematic options for original triangluar kinematics and new kinematics with tilt compensation,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,85,2017-01-07T02:11:17Z,2017-01-08T18:33:26Z,2017-01-08T18:33:28Z,MERGED,True,42,23,1,https://github.com/BarbourSmith,Fix feedrate,4,[],https://github.com/MaslowCNC/Firmware/pull/85,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/85,Fix setting the feedrate in the G command,Fix setting the feedrate in the G command,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,86,2017-01-08T18:59:56Z,2017-01-08T19:01:12Z,2017-01-08T19:01:18Z,MERGED,True,27,22,2,https://github.com/BarbourSmith,Modify feedrate to be non blocking,3,[],https://github.com/MaslowCNC/Firmware/pull/86,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/86,"Not complete, only for G01 right now","Not complete, only for G01 right now",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,87,2017-01-09T01:44:57Z,2017-01-09T03:10:14Z,2017-01-09T03:10:17Z,MERGED,True,255,134,4,https://github.com/BarbourSmith,Repace kinematics with tilt compensated version,16,[],https://github.com/MaslowCNC/Firmware/pull/87,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/87,The kinematics now take into account the size of the sprockets and the moment of rotation of the router,The kinematics now take into account the size of the sprockets and the moment of rotation of the router,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,88,2017-01-09T03:21:44Z,2017-01-09T03:22:12Z,2017-01-09T03:22:15Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Change axis file name,3,[],https://github.com/MaslowCNC/Firmware/pull/88,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/88,change the name to be capatalized to match other files and not break on linux boxes,change the name to be capatalized to match other files and not break on linux boxes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,89,2017-01-10T01:42:46Z,2017-01-11T21:10:01Z,2017-01-13T20:06:49Z,MERGED,True,4,1,1,https://github.com/BarbourSmith,make version number a #define,1,[],https://github.com/MaslowCNC/Firmware/pull/89,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/89,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,90,2017-01-11T21:08:51Z,2017-01-11T21:10:35Z,2017-01-11T21:10:35Z,MERGED,True,3,1,1,https://github.com/MaslowCommunityGardenRobot,Add new entry for update,1,[],https://github.com/MaslowCNC/Firmware/pull/90,https://github.com/MaslowCommunityGardenRobot,1,https://github.com/MaslowCNC/Firmware/pull/90,I added a new entry in the guest book as a way to ilustrate the process of suggesting a change through Git.,I added a new entry in the guest book as a way to ilustrate the process of suggesting a change through Git.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,91,2017-01-12T01:46:49Z,2017-01-12T01:51:20Z,2017-01-12T01:51:23Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,"Fix the way the version number is set, should have tested before",1,[],https://github.com/MaslowCNC/Firmware/pull/91,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/91,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,92,2017-01-12T03:02:23Z,2017-01-12T03:30:54Z,2017-01-12T03:30:54Z,MERGED,True,3,1,1,https://github.com/kstj,Add My Name,1,[],https://github.com/MaslowCNC/Firmware/pull/92,https://github.com/kstj,1,https://github.com/MaslowCNC/Firmware/pull/92,Add my name to the guest book per the update email.,Add my name to the guest book per the update email.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,92,2017-01-12T03:02:23Z,2017-01-12T03:30:54Z,2017-01-12T03:30:54Z,MERGED,True,3,1,1,https://github.com/kstj,Add My Name,1,[],https://github.com/MaslowCNC/Firmware/pull/92,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/92#issuecomment-272066936,Add my name to the guest book per the update email.,Great!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,93,2017-01-12T07:16:49Z,2017-01-12T07:22:42Z,2017-01-12T07:22:42Z,MERGED,True,3,1,1,https://github.com/tgk,Add friendly greeting from Denmark,1,[],https://github.com/MaslowCNC/Firmware/pull/93,https://github.com/tgk,1,https://github.com/MaslowCNC/Firmware/pull/93,Thanks for making all of this open source. Keep up the good work!,Thanks for making all of this open source. Keep up the good work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,94,2017-01-12T18:00:04Z,2017-01-12T18:19:10Z,2017-01-13T05:04:59Z,MERGED,True,2,0,1,https://github.com/baxerus,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/94,https://github.com/baxerus,1,https://github.com/MaslowCNC/Firmware/pull/94,"Another entry in the guestbook. I was sure there would be dozens already, but nearly nothing :(","Another entry in the guestbook. I was sure there would be dozens already, but nearly nothing :(",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,94,2017-01-12T18:00:04Z,2017-01-12T18:19:10Z,2017-01-13T05:04:59Z,MERGED,True,2,0,1,https://github.com/baxerus,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/94,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/94#issuecomment-272239945,"Another entry in the guestbook. I was sure there would be dozens already, but nearly nothing :(","It's slow, but that's ok! Something I learned from my last kickstarter is that not a lot of people read the updates, but it's important to do them anyway. The video is only up to 300 views so it can't be that more than 300 people read it yet. I know at least 15 of those are me ;-)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,94,2017-01-12T18:00:04Z,2017-01-12T18:19:10Z,2017-01-13T05:04:59Z,MERGED,True,2,0,1,https://github.com/baxerus,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/94,https://github.com/baxerus,3,https://github.com/MaslowCNC/Firmware/pull/94#issuecomment-272286684,"Another entry in the guestbook. I was sure there would be dozens already, but nearly nothing :(","How depressing :(
I kick a lot on kickstarter and sometimes I feel like I have to much project updates at the same time. Perhaps I do not read all of them instantly, because of that, but I read them. I was interested enough to back the project so of course I read them :)
Actually I am not a social media guy at all (no twitter, no facebook), but perhaps you can reach the people with updates better on this way?
By the way, I am also no explanation video guy (text is so much faster scanned for the one useful information you actually want), but I would like to see more Maslow in action. And also in details. And perhaps this time also an explanation video, how it is constructed and WHY in this way and not another. The counterweight things on the sides for example. If there are discussions about this in the forum already, linking these in an kickstarter update is also okay. Actually a small section about running discussions/topics in the community at the end of an update would be great. To encourage new members to join the discussion? Like me?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,94,2017-01-12T18:00:04Z,2017-01-12T18:19:10Z,2017-01-13T05:04:59Z,MERGED,True,2,0,1,https://github.com/baxerus,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/94,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/94#issuecomment-272362107,"Another entry in the guestbook. I was sure there would be dozens already, but nearly nothing :(","It's OK, everyone is busy and I think that even if some people don't have time to fully read the update and go through the process of doing this they appreciate that we communicate.
I think you are right that we should post links to the updates in more places. For the first time this week I posted a link in the forums and on Facebook.
It's good to hear what you want to see more of. More Maslow in action is a great idea. Next week's update will be a walk-through of how to build something so we'll be cutting something out. I was trying to think of how to get more video of the machine in action without just posting boring videos of cutting and I think I will try to start doing a project every week. That way I can always be showing what I am working on in terms of software fixes, and at the same time show the machine working.
I also really like the idea of running discussion topics at the end of the update. I'll add that starting next week.
Thanks for a really solid batch of suggestions.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,95,2017-01-12T20:13:34Z,2017-01-12T20:15:08Z,2017-01-12T20:15:08Z,CLOSED,False,89,1,4,https://github.com/albinger,Andrew Signing Guestbook,7,[],https://github.com/MaslowCNC/Firmware/pull/95,https://github.com/albinger,1,https://github.com/MaslowCNC/Firmware/pull/95,Andrew was here!,Andrew was here!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,95,2017-01-12T20:13:34Z,2017-01-12T20:15:08Z,2017-01-12T20:15:08Z,CLOSED,False,89,1,4,https://github.com/albinger,Andrew Signing Guestbook,7,[],https://github.com/MaslowCNC/Firmware/pull/95,https://github.com/albinger,2,https://github.com/MaslowCNC/Firmware/pull/95#issuecomment-272270979,Andrew was here!,"Meh, I did it wrong.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,96,2017-01-12T20:19:40Z,2017-01-13T05:05:47Z,2017-01-13T05:05:47Z,MERGED,True,3,1,2,https://github.com/albinger,Adding name to guestbook,8,[],https://github.com/MaslowCNC/Firmware/pull/96,https://github.com/albinger,1,https://github.com/MaslowCNC/Firmware/pull/96,"Hello World.
Apparently my editor also added a carriage return to the end of CNC_Functions.h
-Andrew","Hello World.
Apparently my editor also added a carriage return to the end of CNC_Functions.h
-Andrew",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,97,2017-01-13T19:37:25Z,2017-01-13T20:06:23Z,2017-01-13T20:06:28Z,MERGED,True,243,174,3,https://github.com/BarbourSmith,Faster kinematics,8,[],https://github.com/MaslowCNC/Firmware/pull/97,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/97,Impliment the newest faster version of Keth's kinematics code,Impliment the newest faster version of Keth's kinematics code,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,98,2017-01-14T10:06:40Z,2017-01-16T17:08:42Z,2017-01-16T17:08:42Z,MERGED,True,3,2,1,https://github.com/jbnimble,guestbook and introduction grammar update,2,[],https://github.com/MaslowCNC/Firmware/pull/98,https://github.com/jbnimble,1,https://github.com/MaslowCNC/Firmware/pull/98,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,98,2017-01-14T10:06:40Z,2017-01-16T17:08:42Z,2017-01-16T17:08:42Z,MERGED,True,3,2,1,https://github.com/jbnimble,guestbook and introduction grammar update,2,[],https://github.com/MaslowCNC/Firmware/pull/98,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/98#issuecomment-272916843,,So cool! You found a bug in the guestbook :-) üëç üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,99,2017-01-16T22:48:05Z,2017-01-16T23:59:02Z,2017-01-16T23:59:05Z,MERGED,True,5,3,1,https://github.com/BarbourSmith,Fix circles,4,[],https://github.com/MaslowCNC/Firmware/pull/99,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/99,Cutting circles was dispaying strange behavior because the prevous position was not being stored properly,Cutting circles was dispaying strange behavior because the prevous position was not being stored properly,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,100,2017-01-17T00:56:45Z,2017-01-17T00:57:15Z,2017-01-17T00:57:18Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Move motor A to second hbridge,1,[],https://github.com/MaslowCNC/Firmware/pull/100,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/100,Split the two driving motors across the two H-briges to distribute the power load more evenly,Split the two driving motors across the two H-briges to distribute the power load more evenly,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,101,2017-01-17T01:07:32Z,2017-01-17T01:08:59Z,2017-01-17T01:09:01Z,MERGED,True,1,0,1,https://github.com/BarbourSmith,Add an initial guess to angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/101,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/101,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,102,2017-01-17T18:48:56Z,2017-01-18T18:01:26Z,2017-01-18T18:01:30Z,MERGED,True,3,5,1,https://github.com/BarbourSmith,"always prompt, even for tool T1",1,[],https://github.com/MaslowCNC/Firmware/pull/102,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/102,"This is possibly not the best behavior, maybe T1 should be ignored? But
what if you want to switch back to T1 later in the program. You might
end up skipping a valid tool change","This is possibly not the best behavior, maybe T1 should be ignored? But
what if you want to switch back to T1 later in the program. You might
end up skipping a valid tool change",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,102,2017-01-17T18:48:56Z,2017-01-18T18:01:26Z,2017-01-18T18:01:30Z,MERGED,True,3,5,1,https://github.com/BarbourSmith,"always prompt, even for tool T1",1,[],https://github.com/MaslowCNC/Firmware/pull/102,https://github.com/davidelang,2,https://github.com/MaslowCNC/Firmware/pull/102#issuecomment-273298789,"This is possibly not the best behavior, maybe T1 should be ignored? But
what if you want to switch back to T1 later in the program. You might
end up skipping a valid tool change","Have an option to skip the first tool change in the program.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,103,2017-01-20T00:55:00Z,2017-01-20T00:55:32Z,2017-01-20T00:55:35Z,MERGED,True,5,2,2,https://github.com/BarbourSmith,"fix ""hysterisis"" in motion direction",1,[],https://github.com/MaslowCNC/Firmware/pull/103,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/103,"Make the ""Miror"" flag reset","Make the ""Miror"" flag reset",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,104,2017-01-20T18:11:35Z,2017-01-20T21:25:08Z,2017-01-20T21:25:08Z,CLOSED,False,49,2,1,https://github.com/jbnimble,Add development environment instructions,1,[],https://github.com/MaslowCNC/Firmware/pull/104,https://github.com/jbnimble,1,https://github.com/MaslowCNC/Firmware/pull/104,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,104,2017-01-20T18:11:35Z,2017-01-20T21:25:08Z,2017-01-20T21:25:08Z,CLOSED,False,49,2,1,https://github.com/jbnimble,Add development environment instructions,1,[],https://github.com/MaslowCNC/Firmware/pull/104,https://github.com/jbnimble,2,https://github.com/MaslowCNC/Firmware/pull/104#issuecomment-274183844,,"Made a better change to local master, cancelling this pull request",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,105,2017-01-20T21:26:51Z,2017-01-21T19:55:41Z,2017-01-23T17:16:43Z,MERGED,True,67,3,1,https://github.com/jbnimble,instructions on how to setup development environment,1,[],https://github.com/MaslowCNC/Firmware/pull/105,https://github.com/jbnimble,1,https://github.com/MaslowCNC/Firmware/pull/105,"Added instructions for Arduino IDE, PlatformIO, and a stub for Eclipse","Added instructions for Arduino IDE, PlatformIO, and a stub for Eclipse",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,106,2017-01-23T17:28:00Z,2017-01-23T17:44:47Z,2017-01-23T17:44:50Z,MERGED,True,9,0,1,https://github.com/BarbourSmith,add notepad++ to editors list,1,[],https://github.com/MaslowCNC/Firmware/pull/106,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/106,Add the NotePad++ editor to the list of possible editors,Add the NotePad++ editor to the list of possible editors,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,107,2017-01-23T22:55:24Z,2017-01-24T17:22:31Z,2017-01-24T17:22:39Z,MERGED,True,27,2,1,https://github.com/BarbourSmith,Seperate g10 from calibration,3,[],https://github.com/MaslowCNC/Firmware/pull/107,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/107,Split the G10 command from the calibrate chain lengths command,Split the G10 command from the calibrate chain lengths command,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,108,2017-01-26T19:46:38Z,2017-01-26T19:47:04Z,2017-01-26T19:47:07Z,MERGED,True,5,1,1,https://github.com/BarbourSmith,Add dummy pz prints to keep connection from droping,1,[],https://github.com/MaslowCNC/Firmware/pull/108,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/108,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,109,2017-01-27T18:42:48Z,2017-01-27T18:46:52Z,2017-01-27T18:46:56Z,MERGED,True,2,1,2,https://github.com/BarbourSmith,Make pos not jump on startup,3,[],https://github.com/MaslowCNC/Firmware/pull/109,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/109,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,110,2017-01-30T23:10:57Z,2017-01-31T00:09:34Z,2017-01-31T00:09:37Z,MERGED,True,13,0,1,https://github.com/BarbourSmith,prevent timout by printing pt during calibration,2,[],https://github.com/MaslowCNC/Firmware/pull/110,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/110,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,111,2017-01-31T22:23:24Z,2017-01-31T22:54:30Z,2017-01-31T22:54:34Z,MERGED,True,15,453,5,https://github.com/BarbourSmith,jankey place holder works,3,[],https://github.com/MaslowCNC/Firmware/pull/111,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/111,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,112,2017-01-31T23:23:10Z,2017-01-31T23:23:37Z,2017-01-31T23:23:40Z,MERGED,True,24,0,2,https://github.com/BarbourSmith,Constrain to board,3,[],https://github.com/MaslowCNC/Firmware/pull/112,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/112,If the machine is commanded to go beyond the edge of the board it stops at the edge,If the machine is commanded to go beyond the edge of the board it stops at the edge,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,113,2017-02-01T18:57:51Z,2017-02-01T18:58:25Z,2017-02-01T18:58:29Z,MERGED,True,8,58,2,https://github.com/BarbourSmith,add xyz values to return poz,1,[],https://github.com/MaslowCNC/Firmware/pull/113,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/113,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,114,2017-02-01T19:56:27Z,2017-02-01T19:57:48Z,2017-02-01T19:57:51Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,set baud rate back,1,[],https://github.com/MaslowCNC/Firmware/pull/114,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/114,"The higher baudrate is droping charicters. I'm not sure why, but 19200 was very stable so I'm going back to it until I can figure out where my letters are going","The higher baudrate is droping charicters. I'm not sure why, but 19200 was very stable so I'm going back to it until I can figure out where my letters are going",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,119,2017-02-16T22:09:57Z,2017-02-16T23:24:59Z,2017-02-16T23:25:02Z,MERGED,True,101,114,2,https://github.com/BarbourSmith,Speed up calibration process,10,[],https://github.com/MaslowCNC/Firmware/pull/119,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/119,"-add continusous monitoring of motor speed to detect stalls imediately
-bisect voltage range to converge on stall voltage faster","-add continusous monitoring of motor speed to detect stalls imediately
-bisect voltage range to converge on stall voltage faster",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,120,2017-02-17T01:15:28Z,2017-02-17T01:20:50Z,2017-02-17T01:20:53Z,MERGED,True,40,51,2,https://github.com/BarbourSmith,Remove rapid move fix z axis behavior,8,[],https://github.com/MaslowCNC/Firmware/pull/120,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/120,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,120,2017-02-17T01:15:28Z,2017-02-17T01:20:50Z,2017-02-17T01:20:53Z,MERGED,True,40,51,2,https://github.com/BarbourSmith,Remove rapid move fix z axis behavior,8,[],https://github.com/MaslowCNC/Firmware/pull/120,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/120#issuecomment-280519795,,"Test that new move is as fast as old move, then merge",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,121,2017-02-17T22:08:15Z,2017-02-17T22:28:29Z,2017-02-17T22:37:48Z,MERGED,True,6,3,1,https://github.com/BarbourSmith,Fix z axis moves while cutting,3,[],https://github.com/MaslowCNC/Firmware/pull/121,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/121,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,124,2017-02-21T00:33:16Z,2017-02-21T00:58:08Z,2017-02-21T00:58:13Z,MERGED,True,8,5,1,https://github.com/BarbourSmith,Change how RPM is calculated in motor calibraiton,3,[],https://github.com/MaslowCNC/Firmware/pull/124,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/124,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,125,2017-02-21T01:51:31Z,2017-02-21T01:54:47Z,2017-02-21T01:54:49Z,MERGED,True,20,34,2,https://github.com/BarbourSmith,Update chain length calibration,7,[],https://github.com/MaslowCNC/Firmware/pull/125,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/125,Add the ability for the machine to measure the correct length of chain when it is first set up,Add the ability for the machine to measure the correct length of chain when it is first set up,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,126,2017-03-02T22:56:29Z,2017-03-02T22:57:17Z,2017-03-03T17:18:40Z,MERGED,True,78,20,6,https://github.com/BarbourSmith,Add a peroportional controler to set motor speed,6,[],https://github.com/MaslowCNC/Firmware/pull/126,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/126,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,127,2017-03-03T20:30:33Z,2017-03-03T20:40:37Z,2017-03-03T20:40:43Z,MERGED,True,33,9,2,https://github.com/BarbourSmith,Make gc settings push to machine,4,[],https://github.com/MaslowCNC/Firmware/pull/127,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/127,Allow kinematics to be set from GC settings pannel,Allow kinematics to be set from GC settings pannel,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,128,2017-03-03T22:47:47Z,2017-03-03T22:48:12Z,2017-03-03T22:48:15Z,MERGED,True,3,0,1,https://github.com/BarbourSmith,Add error to position information to position ,3,[],https://github.com/MaslowCNC/Firmware/pull/128,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/128,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,129,2017-03-11T23:33:24Z,2017-03-11T23:44:55Z,2017-03-11T23:44:58Z,MERGED,True,85,19,2,https://github.com/BarbourSmith,Read serial asyncronously,7,[],https://github.com/MaslowCNC/Firmware/pull/129,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/129,Change the serial to read charicters continuously while executing movements. This allows for the stop function to execute mid move.,Change the serial to read charicters continuously while executing movements. This allows for the stop function to execute mid move.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,131,2017-03-13T22:12:40Z,2017-03-14T17:22:41Z,2017-03-14T17:22:44Z,MERGED,True,58,137,3,https://github.com/BarbourSmith,Fix changing machine dimensions,9,[],https://github.com/MaslowCNC/Firmware/pull/131,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/131,Changing the machine or sled dimensions in the Ground Control settings updates the firmware to compute kinematics based on new values,Changing the machine or sled dimensions in the Ground Control settings updates the firmware to compute kinematics based on new values,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,132,2017-03-13T23:36:46Z,2017-03-14T17:14:25Z,2017-03-14T17:14:25Z,MERGED,True,8,2,1,https://github.com/jbarchuk,added title bling,1,[],https://github.com/MaslowCNC/Firmware/pull/132,https://github.com/jbarchuk,1,https://github.com/MaslowCNC/Firmware/pull/132,added title bling,added title bling,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,132,2017-03-13T23:36:46Z,2017-03-14T17:14:25Z,2017-03-14T17:14:25Z,MERGED,True,8,2,1,https://github.com/jbarchuk,added title bling,1,[],https://github.com/MaslowCNC/Firmware/pull/132,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/132#issuecomment-286493220,added title bling,Looks awesome! Welcome! üéâ üéâ üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,133,2017-03-15T17:52:26Z,2017-03-15T17:56:46Z,2017-03-15T18:47:53Z,MERGED,True,1,1,7,https://github.com/BarbourSmith,Add documentation pictures,2,[],https://github.com/MaslowCNC/Firmware/pull/133,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/133,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,133,2017-03-15T17:52:26Z,2017-03-15T17:56:46Z,2017-03-15T18:47:53Z,MERGED,True,1,1,7,https://github.com/BarbourSmith,Add documentation pictures,2,[],https://github.com/MaslowCNC/Firmware/pull/133,https://github.com/jbarchuk,2,https://github.com/MaslowCNC/Firmware/pull/133#issuecomment-286842100,,There are often variations in how com ports behave. Folks that are used to average USB or 'friendly' devices won't have any experience with this. Here's an example. The docs will need adjustment when different problems arise.,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,134,2017-03-18T23:46:03Z,2017-03-19T01:13:34Z,2017-03-19T01:13:38Z,MERGED,True,5,2,1,https://github.com/BarbourSmith,make z-axis default to off,2,[],https://github.com/MaslowCNC/Firmware/pull/134,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/134,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,135,2017-03-19T18:29:18Z,2017-03-19T18:48:32Z,2017-03-19T18:48:35Z,MERGED,True,89,0,5,https://github.com/BarbourSmith,Add test axis function,5,[],https://github.com/MaslowCNC/Firmware/pull/135,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/135,Add a function to test each axis by commanding the motor to move in a way which overrides any motor calibration applied and observing that the motor does infact move.,Add a function to test each axis by commanding the motor to move in a way which overrides any motor calibration applied and observing that the motor does infact move.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,136,2017-03-19T18:41:06Z,2017-03-19T18:47:45Z,2017-03-19T18:47:48Z,MERGED,True,5,1,1,https://github.com/BarbourSmith,Fix circle cutting,2,[],https://github.com/MaslowCNC/Firmware/pull/136,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/136,Fix circle gcode file which would stop cutting after moving to starting point sent by aalbinger,Fix circle gcode file which would stop cutting after moving to starting point sent by aalbinger,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,137,2017-03-19T20:58:25Z,2017-03-19T22:10:17Z,2017-03-19T22:10:20Z,MERGED,True,4,0,1,https://github.com/BarbourSmith,Add a message while measuring out chains,2,[],https://github.com/MaslowCNC/Firmware/pull/137,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/137,"Machine tells you it is measuring out first the left, then the right chains","Machine tells you it is measuring out first the left, then the right chains",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,138,2017-03-20T20:52:19Z,2017-03-20T20:53:24Z,2017-03-20T20:53:27Z,MERGED,True,6,22,4,https://github.com/BarbourSmith,Remove old forward kinematics,1,[],https://github.com/MaslowCNC/Firmware/pull/138,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/138,"The forward kinematics used on startup to determine the machine's position were a flawed approximation. This was causing the position unresolved error. Rather than patch the already flawed approximation I simply removed it which seems like a more honest good practice thing to do. We may see some strange behavior where the machine shows a very large positional error on startup if it is not returned to home before shutting down, but at least it's honest.","The forward kinematics used on startup to determine the machine's position were a flawed approximation. This was causing the position unresolved error. Rather than patch the already flawed approximation I simply removed it which seems like a more honest good practice thing to do. We may see some strange behavior where the machine shows a very large positional error on startup if it is not returned to home before shutting down, but at least it's honest.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,139,2017-03-22T18:17:06Z,2017-03-22T18:18:04Z,2017-03-22T18:18:07Z,MERGED,True,13,8,1,https://github.com/BarbourSmith,Print ready after all commands,2,[],https://github.com/MaslowCNC/Firmware/pull/139,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/139,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,139,2017-03-22T18:17:06Z,2017-03-22T18:18:04Z,2017-03-22T18:18:07Z,MERGED,True,13,8,1,https://github.com/BarbourSmith,Print ready after all commands,2,[],https://github.com/MaslowCNC/Firmware/pull/139,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/139#issuecomment-288491877,,"Print ""ready"" after each command finishes executing to make it more clear when the machine is ready",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,141,2017-03-24T21:44:51Z,2017-03-25T23:11:47Z,2017-03-25T23:11:51Z,MERGED,True,25,13,2,https://github.com/BarbourSmith,Switch to measuring the distance between the motors,10,[],https://github.com/MaslowCNC/Firmware/pull/141,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/141,"Switch to using the distance between the motors to do math instead of motor distance from corner of wood. Clean up some internal calculations along the way.
Needs to be merged at the same time as the similar change in Ground Control","Switch to using the distance between the motors to do math instead of motor distance from corner of wood. Clean up some internal calculations along the way.
Needs to be merged at the same time as the similar change in Ground Control",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,142,2017-03-24T22:53:19Z,2017-03-24T22:53:48Z,2017-03-24T22:53:51Z,MERGED,True,31,29,1,https://github.com/BarbourSmith,Z axis turn on and off from settings,2,[],https://github.com/MaslowCNC/Firmware/pull/142,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/142,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,143,2017-03-25T08:17:26Z,2017-03-27T23:35:00Z,2017-03-30T22:40:56Z,MERGED,True,29,18,3,https://github.com/johnbenweber,"Added ability to change encoder steps, dist per revolution, and gear ‚Ä¶",2,[],https://github.com/MaslowCNC/Firmware/pull/143,https://github.com/johnbenweber,1,https://github.com/MaslowCNC/Firmware/pull/143,"‚Ä¶radius from serial command.
I haven't had a chance to actually test this beside running it through the Arduino compiler without error. I'm not that familiar with the inner workings of Firmware so have a look and let me know if you see any potential issues. Corresponding GroundControl modifications to come.","‚Ä¶radius from serial command.
I haven't had a chance to actually test this beside running it through the Arduino compiler without error. I'm not that familiar with the inner workings of Firmware so have a look and let me know if you see any potential issues. Corresponding GroundControl modifications to come.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,143,2017-03-25T08:17:26Z,2017-03-27T23:35:00Z,2017-03-30T22:40:56Z,MERGED,True,29,18,3,https://github.com/johnbenweber,"Added ability to change encoder steps, dist per revolution, and gear ‚Ä¶",2,[],https://github.com/MaslowCNC/Firmware/pull/143,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/143#issuecomment-289228422,"‚Ä¶radius from serial command.
I haven't had a chance to actually test this beside running it through the Arduino compiler without error. I'm not that familiar with the inner workings of Firmware so have a look and let me know if you see any potential issues. Corresponding GroundControl modifications to come.","Looks good. I don't see it causing issues with the rest of the firmware, but I'll test it anyway. We're going to run out of letters to send settings with soon üòÑ
My only request for the Ground Control side is to maybe split the settings out into an ""Advanced"" section so we don't confuse everyone because most people won't want to mess with these settings.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,143,2017-03-25T08:17:26Z,2017-03-27T23:35:00Z,2017-03-30T22:40:56Z,MERGED,True,29,18,3,https://github.com/johnbenweber,"Added ability to change encoder steps, dist per revolution, and gear ‚Ä¶",2,[],https://github.com/MaslowCNC/Firmware/pull/143,https://github.com/johnbenweber,3,https://github.com/MaslowCNC/Firmware/pull/143#issuecomment-289240994,"‚Ä¶radius from serial command.
I haven't had a chance to actually test this beside running it through the Arduino compiler without error. I'm not that familiar with the inner workings of Firmware so have a look and let me know if you see any potential issues. Corresponding GroundControl modifications to come.","Yeah, we can always go to double letters if that becomes an issue.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,143,2017-03-25T08:17:26Z,2017-03-27T23:35:00Z,2017-03-30T22:40:56Z,MERGED,True,29,18,3,https://github.com/johnbenweber,"Added ability to change encoder steps, dist per revolution, and gear ‚Ä¶",2,[],https://github.com/MaslowCNC/Firmware/pull/143,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/143#issuecomment-289241618,"‚Ä¶radius from serial command.
I haven't had a chance to actually test this beside running it through the Arduino compiler without error. I'm not that familiar with the inner workings of Firmware so have a look and let me know if you see any potential issues. Corresponding GroundControl modifications to come.","Haha, yeah I'm not worried about it really. We can also split multiple commands if we need to.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,143,2017-03-25T08:17:26Z,2017-03-27T23:35:00Z,2017-03-30T22:40:56Z,MERGED,True,29,18,3,https://github.com/johnbenweber,"Added ability to change encoder steps, dist per revolution, and gear ‚Ä¶",2,[],https://github.com/MaslowCNC/Firmware/pull/143,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/143#issuecomment-289242936,"‚Ä¶radius from serial command.
I haven't had a chance to actually test this beside running it through the Arduino compiler without error. I'm not that familiar with the inner workings of Firmware so have a look and let me know if you see any potential issues. Corresponding GroundControl modifications to come.",I haven't forgotten about this one. I'm going to merge it soon. We've had some issues with circles coming out oval so I want to make sure I merge and test the other PR which messes with settings and things which touch the kinematics thoroughly so we can keep track of what is causing what.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,143,2017-03-25T08:17:26Z,2017-03-27T23:35:00Z,2017-03-30T22:40:56Z,MERGED,True,29,18,3,https://github.com/johnbenweber,"Added ability to change encoder steps, dist per revolution, and gear ‚Ä¶",2,[],https://github.com/MaslowCNC/Firmware/pull/143,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/143#issuecomment-289583798,"‚Ä¶radius from serial command.
I haven't had a chance to actually test this beside running it through the Arduino compiler without error. I'm not that familiar with the inner workings of Firmware so have a look and let me know if you see any potential issues. Corresponding GroundControl modifications to come.",I still haven't forgotten about this. I will test it and merge it today.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,145,2017-03-25T20:20:20Z,2017-03-25T20:20:54Z,2017-03-25T20:20:57Z,MERGED,True,99,0,1,https://github.com/BarbourSmith,create test firmware which moves motors back and forth,1,[],https://github.com/MaslowCNC/Firmware/pull/145,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/145,"Create a ""test electronics firmware"" which just commands each motor to turn full speed in one direction for 1 second, then reverse.","Create a ""test electronics firmware"" which just commands each motor to turn full speed in one direction for 1 second, then reverse.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,146,2017-03-25T22:49:35Z,2017-03-25T22:50:41Z,2017-03-25T22:50:45Z,MERGED,True,19,0,2,https://github.com/BarbourSmith,Add watchdog,2,[],https://github.com/MaslowCNC/Firmware/pull/146,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/146,"Add a watchdog which tells Ground Control that maslow is ready to recieve commands every second when the machine is ready. This catchs the case where a command is dropped between Maslow and Ground Control where Maslow is ready, but Ground Control doesn't know and the system locks up.","Add a watchdog which tells Ground Control that maslow is ready to recieve commands every second when the machine is ready. This catchs the case where a command is dropped between Maslow and Ground Control where Maslow is ready, but Ground Control doesn't know and the system locks up.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,147,2017-03-26T01:25:52Z,2017-03-26T01:26:14Z,2017-03-26T01:26:17Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Fix for breaking everything,1,[],https://github.com/MaslowCNC/Firmware/pull/147,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/147,"I added a watchdog that broke more or less everything. Needs to be removed right now, then fixed","I added a watchdog that broke more or less everything. Needs to be removed right now, then fixed",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,147,2017-03-26T01:25:52Z,2017-03-26T01:26:14Z,2017-03-26T01:26:17Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Fix for breaking everything,1,[],https://github.com/MaslowCNC/Firmware/pull/147,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/147#issuecomment-289251390,"I added a watchdog that broke more or less everything. Needs to be removed right now, then fixed",Sorry!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,150,2017-03-27T01:58:12Z,2017-03-27T17:02:01Z,2017-03-27T17:02:01Z,MERGED,True,2,0,1,https://github.com/Jwolter0,Jwolter0 signed guestBook,1,[],https://github.com/MaslowCNC/Firmware/pull/150,https://github.com/Jwolter0,1,https://github.com/MaslowCNC/Firmware/pull/150,"Jwolter0 signed the guestBook.  Nothing to see here, people.  Move along.","Jwolter0 signed the guestBook.  Nothing to see here, people.  Move along.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,150,2017-03-27T01:58:12Z,2017-03-27T17:02:01Z,2017-03-27T17:02:01Z,MERGED,True,2,0,1,https://github.com/Jwolter0,Jwolter0 signed guestBook,1,[],https://github.com/MaslowCNC/Firmware/pull/150,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/150#issuecomment-289516984,"Jwolter0 signed the guestBook.  Nothing to see here, people.  Move along.","Welcome! Good work getting everything working in Linux, looks perfect!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,151,2017-03-27T19:10:53Z,2017-03-27T20:03:42Z,2017-03-27T20:03:46Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Update version #,1,[],https://github.com/MaslowCNC/Firmware/pull/151,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/151,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,152,2017-03-27T23:09:27Z,2017-03-27T23:23:22Z,2017-03-27T23:23:30Z,MERGED,True,15,0,1,https://github.com/BarbourSmith,Create manual overide for chain lengths,1,[],https://github.com/MaslowCNC/Firmware/pull/152,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/152,One backer has a very different design which mounts the motors in such a way that the automaic chain length measuring system can't be used accurately. The B06 command allows for manual override to set the lengths of the chains to some known length,One backer has a very different design which mounts the motors in such a way that the automaic chain length measuring system can't be used accurately. The B06 command allows for manual override to set the lengths of the chains to some known length,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,153,2017-03-28T00:08:42Z,2017-03-28T00:12:08Z,2017-03-28T00:12:45Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Set z-axis depth to a realistc value,1,[],https://github.com/MaslowCNC/Firmware/pull/153,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/153,"PR #143 broke the z-axis, but thorugh no falut of it's own. The z-axis depth was being set using a magic number which was some cobination of the encoder resolution and gear ratio. Now it's using a real number, but needs to be checked against the motor data sheet","PR #143 broke the z-axis, but thorugh no falut of it's own. The z-axis depth was being set using a magic number which was some cobination of the encoder resolution and gear ratio. Now it's using a real number, but needs to be checked against the motor data sheet",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,155,2017-03-28T20:57:38Z,2017-03-28T21:06:49Z,2017-03-28T21:06:51Z,MERGED,True,9,3,1,https://github.com/BarbourSmith,Add support for GRBL-generic post processor in Fusion 360,1,[],https://github.com/MaslowCNC/Firmware/pull/155,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/155,Handle cases where information is omitted from G2 and G3,Handle cases where information is omitted from G2 and G3,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,156,2017-03-28T22:58:55Z,2017-03-28T23:00:17Z,2017-03-28T23:00:20Z,MERGED,True,48,24,3,https://github.com/BarbourSmith,Add feature for setting z axis pitch,3,[],https://github.com/MaslowCNC/Firmware/pull/156,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/156,Add ability to set the pitch of the z-axis thread from in the settings menu,Add ability to set the pitch of the z-axis thread from in the settings menu,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,157,2017-03-30T18:35:34Z,2017-03-30T18:48:58Z,2017-03-30T18:48:58Z,MERGED,True,1,0,1,https://github.com/TheRiflesSpiral,Updated Guestbook,1,[],https://github.com/MaslowCNC/Firmware/pull/157,https://github.com/TheRiflesSpiral,1,https://github.com/MaslowCNC/Firmware/pull/157,With my name!,With my name!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,157,2017-03-30T18:35:34Z,2017-03-30T18:48:58Z,2017-03-30T18:48:58Z,MERGED,True,1,0,1,https://github.com/TheRiflesSpiral,Updated Guestbook,1,[],https://github.com/MaslowCNC/Firmware/pull/157,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/157#issuecomment-290508124,With my name!,Looks perfect!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,159,2017-04-03T03:53:15Z,2017-04-03T03:54:57Z,2017-04-03T03:55:00Z,MERGED,True,5,0,1,https://github.com/BarbourSmith,Constrain the maximum feedrate,2,[],https://github.com/MaslowCNC/Firmware/pull/159,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/159,Add a firmware limit so that if the machine is commanded to move faster than it is possible for it to move it won't produce inacurate cuts.,Add a firmware limit so that if the machine is commanded to move faster than it is possible for it to move it won't produce inacurate cuts.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,161,2017-04-07T23:01:37Z,2017-04-10T00:49:02Z,2017-04-10T00:49:05Z,MERGED,True,390,145,7,https://github.com/BarbourSmith,Add support for universal gcode sender,19,[],https://github.com/MaslowCNC/Firmware/pull/161,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/161,"Add support for using the Universal Gcode sender in place of Ground Control.
Must be merged at the same time as a similar pull request on the Ground Control side due to change to the serial protocol.","Add support for using the Universal Gcode sender in place of Ground Control.
Must be merged at the same time as a similar pull request on the Ground Control side due to change to the serial protocol.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,162,2017-04-09T17:32:22Z,2017-04-09T17:33:45Z,2017-04-09T17:33:49Z,MERGED,True,0,0,1,https://github.com/BarbourSmith,Change firmware download instructions to point to releases instead of master,1,[],https://github.com/MaslowCNC/Firmware/pull/162,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/162,The firmware is stable enough now that we should be directing most people to the weekly release rather than the master branch.,The firmware is stable enough now that we should be directing most people to the weekly release rather than the master branch.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,163,2017-04-10T18:07:37Z,2017-04-10T18:10:51Z,2017-04-10T18:11:02Z,CLOSED,False,2,2,2,https://github.com/BarbourSmith,Remove ugly prints from motor calibration process,3,[],https://github.com/MaslowCNC/Firmware/pull/163,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/163,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,163,2017-04-10T18:07:37Z,2017-04-10T18:10:51Z,2017-04-10T18:11:02Z,CLOSED,False,2,2,2,https://github.com/BarbourSmith,Remove ugly prints from motor calibration process,3,[],https://github.com/MaslowCNC/Firmware/pull/163,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/163#issuecomment-293032439,,"Messy PR, redo",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,164,2017-04-10T18:13:03Z,2017-04-11T03:14:46Z,2017-04-11T03:14:49Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Fix print statements during motor calibration,1,[],https://github.com/MaslowCNC/Firmware/pull/164,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/164,Was printing position using old system,Was printing position using old system,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,165,2017-04-10T18:28:48Z,2017-04-11T03:14:30Z,2017-04-11T03:14:33Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Fix for issue #154,1,[],https://github.com/MaslowCNC/Firmware/pull/165,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/165,Correct PPR from datasheet,Correct PPR from datasheet,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,166,2017-04-11T03:13:34Z,2017-04-11T03:14:09Z,2017-04-11T03:14:12Z,MERGED,True,26,0,3,https://github.com/BarbourSmith,Add support for B07 to overwrite EEPROM values to 0,1,[],https://github.com/MaslowCNC/Firmware/pull/166,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/166,Firmware side of fix for GC issue #183,Firmware side of fix for GC issue #183,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,168,2017-04-11T03:37:58Z,2017-04-11T03:38:27Z,2017-05-24T18:24:22Z,MERGED,True,5,2,1,https://github.com/BarbourSmith,Fix for 148,4,[],https://github.com/MaslowCNC/Firmware/pull/168,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/168,The machine signals that it is ready for data every 5 seconds starting two seconds after the last command is finished being processed. This will resolve any situation where GC forgets that the machine is ready. Fix for issue #148,The machine signals that it is ready for data every 5 seconds starting two seconds after the last command is finished being processed. This will resolve any situation where GC forgets that the machine is ready. Fix for issue #148,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,169,2017-04-11T16:54:57Z,2017-04-11T16:57:50Z,2017-05-24T18:24:22Z,MERGED,True,10,2,1,https://github.com/BarbourSmith,Fix for issue #167,1,[],https://github.com/MaslowCNC/Firmware/pull/169,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/169,Replace 'STOP' command with grbl compatable '!' Addresses issue #167,Replace 'STOP' command with grbl compatable '!' Addresses issue #167,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,170,2017-04-11T23:04:13Z,2017-04-12T15:28:02Z,2017-04-12T15:28:07Z,MERGED,True,3,3,1,https://github.com/BarbourSmith,Make error term left motor only,1,[],https://github.com/MaslowCNC/Firmware/pull/170,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/170,"The error term used to be the average of the left and the right motor
which was somewhat confusing because if one was negitive and one was
positive it could hide the real error term. Now it prints both.","The error term used to be the average of the left and the right motor
which was somewhat confusing because if one was negitive and one was
positive it could hide the real error term. Now it prints both.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,171,2017-04-13T17:47:59Z,2017-04-13T17:52:03Z,2017-04-13T17:52:06Z,MERGED,True,102,39,7,https://github.com/BarbourSmith,Create placeholder gear motor encoder object,4,[],https://github.com/MaslowCNC/Firmware/pull/171,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/171,Move the encoder object out of the axis object,Move the encoder object out of the axis object,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,172,2017-04-13T17:53:31Z,2017-04-13T17:53:48Z,2017-04-13T17:53:52Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,bump version number,1,[],https://github.com/MaslowCNC/Firmware/pull/172,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/172,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,173,2017-04-13T18:39:48Z,2017-04-13T18:40:57Z,2017-04-13T18:41:00Z,MERGED,True,31,31,4,https://github.com/BarbourSmith,Move motor object into GearMotorEncoder object,1,[],https://github.com/MaslowCNC/Firmware/pull/173,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/173,Move the motor object out of the axis and into the  newly created gearmotorencoder object as part of the process of getting real time force feedback,Move the motor object out of the axis and into the  newly created gearmotorencoder object as part of the process of getting real time force feedback,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,174,2017-04-13T21:39:16Z,2017-04-13T21:53:52Z,2017-04-13T21:53:55Z,MERGED,True,40,33,5,https://github.com/BarbourSmith,big spikes gone,3,[],https://github.com/MaslowCNC/Firmware/pull/174,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/174,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,175,2017-04-13T23:44:54Z,2017-04-13T23:49:45Z,2017-04-13T23:49:50Z,MERGED,True,95,33,5,https://github.com/BarbourSmith,Compute motor speed,8,[],https://github.com/MaslowCNC/Firmware/pull/175,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/175,Add a function which can compute the motors speed in real time,Add a function which can compute the motors speed in real time,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,176,2017-04-17T18:54:28Z,2017-04-17T18:58:45Z,2017-04-17T18:58:49Z,MERGED,True,9,7,1,https://github.com/BarbourSmith,Fix for gc issue 202,2,[],https://github.com/MaslowCNC/Firmware/pull/176,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/176,The old prepend string system for when the line has no G charicter was not working correctly with the new switch style of gcode interpritation. This PR fixes that.,The old prepend string system for when the line has no G charicter was not working correctly with the new switch style of gcode interpritation. This PR fixes that.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,177,2017-04-17T22:26:46Z,2017-04-17T22:35:29Z,2017-04-17T22:35:31Z,MERGED,True,3,2,1,https://github.com/BarbourSmith,fix relitive movements when in inches mode,1,[],https://github.com/MaslowCNC/Firmware/pull/177,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/177,inches commands were being scaled back to mm,inches commands were being scaled back to mm,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,178,2017-04-17T22:47:55Z,2017-04-17T22:52:06Z,2017-04-17T22:52:09Z,MERGED,True,3,0,1,https://github.com/BarbourSmith,Make relative units work for z-axis,1,[],https://github.com/MaslowCNC/Firmware/pull/178,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/178,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,179,2017-04-19T22:48:47Z,2017-04-19T22:49:42Z,2017-04-19T22:49:48Z,MERGED,True,3,3,1,https://github.com/BarbourSmith,Remove the ability to change the machine dimensions,1,[],https://github.com/MaslowCNC/Firmware/pull/179,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/179,"Because the internal math is acting strangely if the default values are not used, only the default values are used.","Because the internal math is acting strangely if the default values are not used, only the default values are used.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,180,2017-04-19T23:19:35Z,2017-04-19T23:20:07Z,2017-04-19T23:20:10Z,MERGED,True,4,3,1,https://github.com/BarbourSmith,add back in the ability to turn on and off the z-axis,1,[],https://github.com/MaslowCNC/Firmware/pull/180,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/180,"oops, didn't mean to take that out","oops, didn't mean to take that out",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,181,2017-04-20T23:27:53Z,2017-04-21T00:24:50Z,2017-04-21T00:24:54Z,MERGED,True,11,14,3,https://github.com/BarbourSmith,Re-enable changing settings,4,[],https://github.com/MaslowCNC/Firmware/pull/181,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/181,This pull request fixes an issue with the way settings were pushing to the machine and turns back on the ability to adjust the settings from within Ground Control,This pull request fixes an issue with the way settings were pushing to the machine and turns back on the ability to adjust the settings from within Ground Control,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,182,2017-04-21T20:20:18Z,2017-04-21T20:22:17Z,2017-04-21T20:22:20Z,MERGED,True,29,4,1,https://github.com/BarbourSmith,Run away sled after manual calibration,2,[],https://github.com/MaslowCNC/Firmware/pull/182,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/182,Fix and clean up the way manual calibration of chain lengths works so that it can't be run unless the machine is connected,Fix and clean up the way manual calibration of chain lengths works so that it can't be run unless the machine is connected,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/185,Previous version worked incorrectly when in metric mode,Previous version worked incorrectly when in metric mode,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/185#issuecomment-296847746,Previous version worked incorrectly when in metric mode,This one looks like it might have something wrong with it üòÄ I'm seeing 24 files changed,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/185#issuecomment-297500945,Previous version worked incorrectly when in metric mode,Is it ok if I close this one? It's got all the file changes and it might be faster to just make a new PR with just the lines we want üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/185#issuecomment-297514936,Previous version worked incorrectly when in metric mode,"Cancel and close this, it was handled in a separate PR",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/185#issuecomment-297523478,Previous version worked incorrectly when in metric mode,Does that mean it's done? I think there is still an issue out for it.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/185#issuecomment-297528463,Previous version worked incorrectly when in metric mode,"I‚Äôve gotta start reading these things on a larger screen :(

  This is not fixed.
‚Ä¶
 On Apr 26, 2017, at 12:57 PM, BarbourSmith ***@***.***> wrote:

 Does that mean it's done? I think there is still an issue out for it.

 ‚Äî
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub <#185 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABw_s5xXDxwUWEUtMBEysknipMk9VID2ks5rz6GpgaJpZM4NGyoX>.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/185#issuecomment-297532799,Previous version worked incorrectly when in metric mode,üòÄ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,185,2017-04-24T22:29:32Z,2017-04-26T19:23:24Z,2017-04-26T20:33:29Z,CLOSED,False,1308,1047,24,https://github.com/blurfl,fix-feed-rate-limit-in-metric-mode,3,[],https://github.com/MaslowCNC/Firmware/pull/185,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/185#issuecomment-297532803,Previous version worked incorrectly when in metric mode,"I'll open a new PR. The fix I proposed was to dump the conversion and use the metric value. I tested in metric and inch mode, both work. Not elegant or pretty, but it corrects the problem behavior.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,186,2017-04-25T20:38:25Z,2017-04-25T20:38:58Z,2017-04-25T20:39:04Z,MERGED,True,4,3,1,https://github.com/BarbourSmith,Fix ugly prints when running motors test,1,[],https://github.com/MaslowCNC/Firmware/pull/186,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/186,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,187,2017-04-27T05:45:48Z,2017-04-27T20:06:01Z,2017-04-27T20:07:52Z,MERGED,True,1,1,1,https://github.com/blurfl,Fix feed rate issue in metric mode,1,[],https://github.com/MaslowCNC/Firmware/pull/187,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/187,"Firmware issue #184,
GroundControl issue #223","Firmware issue #184,
GroundControl issue #223",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,187,2017-04-27T05:45:48Z,2017-04-27T20:06:01Z,2017-04-27T20:07:52Z,MERGED,True,1,1,1,https://github.com/blurfl,Fix feed rate issue in metric mode,1,[],https://github.com/MaslowCNC/Firmware/pull/187,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/187#issuecomment-297619191,"Firmware issue #184,
GroundControl issue #223","In metric mode, the variable _inchesToMMConversion = 1, so the feedrate was getting limited to 25*_inchesToMMConversion = 25 mmps .",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,187,2017-04-27T05:45:48Z,2017-04-27T20:06:01Z,2017-04-27T20:07:52Z,MERGED,True,1,1,1,https://github.com/blurfl,Fix feed rate issue in metric mode,1,[],https://github.com/MaslowCNC/Firmware/pull/187,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/187#issuecomment-297824252,"Firmware issue #184,
GroundControl issue #223","Looks good, thanks for tracking down exactly what's going on üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,187,2017-04-27T05:45:48Z,2017-04-27T20:06:01Z,2017-04-27T20:07:52Z,MERGED,True,1,1,1,https://github.com/blurfl,Fix feed rate issue in metric mode,1,[],https://github.com/MaslowCNC/Firmware/pull/187,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/187#issuecomment-297824805,"Firmware issue #184,
GroundControl issue #223","I‚Äôll go close the issues. üëç

‚Ä¶
 On Apr 27, 2017, at 1:05 PM, BarbourSmith ***@***.***> wrote:

 Looks good, thanks for tracking down exactly what's going on üëç

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub <#187 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABw_s58v-IoMXXSmDVGJ7qAUTRnhGlrbks5r0PUYgaJpZM4NJwYW>.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,192,2017-04-30T02:34:26Z,2017-04-30T17:47:16Z,2017-04-30T17:47:20Z,MERGED,True,46,0,3,https://github.com/BarbourSmith,Load machine position from memory when machine powers up,2,[],https://github.com/MaslowCNC/Firmware/pull/192,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/192,Recursively solves for the machine's position using loaded information about prevous chain lengths when the machine powers up. Partial fix for Ground Control issue #233,Recursively solves for the machine's position using loaded information about prevous chain lengths when the machine powers up. Partial fix for Ground Control issue #233,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,193,2017-04-30T02:48:38Z,2017-04-30T17:49:10Z,2017-04-30T17:49:13Z,MERGED,True,6,0,1,https://github.com/BarbourSmith,Print an error if command is unsuported,1,[],https://github.com/MaslowCNC/Firmware/pull/193,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/193,Fix for feature request #191,Fix for feature request #191,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,194,2017-04-30T18:37:43Z,2017-04-30T18:39:13Z,2017-05-02T19:21:15Z,CLOSED,False,53,54,5,https://github.com/BarbourSmith,Fix for buffer overflow issue,5,[],https://github.com/MaslowCNC/Firmware/pull/194,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/194,"This is not yet a real pull request, I just want to be able to easily see the diff","This is not yet a real pull request, I just want to be able to easily see the diff",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,195,2017-04-30T18:54:06Z,2017-04-30T18:57:15Z,2017-04-30T18:57:18Z,MERGED,True,25,30,3,https://github.com/BarbourSmith,"Clean up ring buffer, rename some variables",1,[],https://github.com/MaslowCNC/Firmware/pull/195,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/195,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,196,2017-04-30T20:49:16Z,2017-04-30T20:50:37Z,2017-04-30T20:50:40Z,MERGED,True,2,3,1,https://github.com/BarbourSmith,Fix issue where loading machine position recursively was blocking serial commands,1,[],https://github.com/MaslowCNC/Firmware/pull/196,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/196,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,197,2017-04-30T21:59:47Z,2017-04-30T22:06:29Z,2017-04-30T22:06:32Z,MERGED,True,23,7,3,https://github.com/BarbourSmith,fix buffer overflow issue,2,[],https://github.com/MaslowCNC/Firmware/pull/197,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/197,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,198,2017-05-01T00:25:58Z,2017-05-01T00:46:59Z,2017-05-01T00:47:02Z,MERGED,True,15,0,1,https://github.com/BarbourSmith,Add ability to move each motor independantly with G09,1,[],https://github.com/MaslowCNC/Firmware/pull/198,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/198,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,199,2017-05-02T17:31:38Z,2017-05-02T19:05:17Z,2017-05-02T19:05:21Z,CLOSED,False,26,6,2,https://github.com/BarbourSmith,Add command for measuring with chain,6,[],https://github.com/MaslowCNC/Firmware/pull/199,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/199,Not a real pull request. Something in this branch is breaking the kinematics. Just want to cherry pick the good stuff out of it.,Not a real pull request. Something in this branch is breaking the kinematics. Just want to cherry pick the good stuff out of it.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,200,2017-05-02T18:33:28Z,2017-05-02T18:33:57Z,2017-05-02T18:33:59Z,MERGED,True,59,61,3,https://github.com/BarbourSmith,Machine does not move when powered up,1,[],https://github.com/MaslowCNC/Firmware/pull/200,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/200,"Machine was begining to move as soon as powered up which is not a
desired behavior","Machine was begining to move as soon as powered up which is not a
desired behavior",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,201,2017-05-02T18:59:34Z,2017-05-02T18:59:47Z,2017-05-02T19:04:34Z,MERGED,True,9,7,2,https://github.com/BarbourSmith,Fix position loading,4,[],https://github.com/MaslowCNC/Firmware/pull/201,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/201,"The position loading function was not working with kinematic values other than the defaults, and did not work everywhere on the machine area","The position loading function was not working with kinematic values other than the defaults, and did not work everywhere on the machine area",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,202,2017-05-02T19:30:05Z,2017-05-02T19:30:48Z,2017-05-02T19:31:20Z,MERGED,True,15,2,2,https://github.com/BarbourSmith,Measure popup misc,3,[],https://github.com/MaslowCNC/Firmware/pull/202,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/202,Mis changes added while adding measure machine process,Mis changes added while adding measure machine process,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,203,2017-05-02T22:09:05Z,2017-05-02T22:09:37Z,2017-05-02T22:09:40Z,MERGED,True,2,3,1,https://github.com/BarbourSmith,Misc changes while working on pop up,1,[],https://github.com/MaslowCNC/Firmware/pull/203,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/203,Change the way calibrate chain lengths works,Change the way calibrate chain lengths works,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,206,2017-05-03T23:21:14Z,2017-05-03T23:21:49Z,2017-05-03T23:21:52Z,MERGED,True,6,5,1,https://github.com/BarbourSmith,"Add behavior that if the sled position can't be found, 0,0 is used",5,[],https://github.com/MaslowCNC/Firmware/pull/206,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/206,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,207,2017-05-04T17:48:51Z,2017-05-04T17:49:27Z,2017-05-04T17:49:31Z,MERGED,True,20,9,2,https://github.com/BarbourSmith,Fix for issue Giro was seeing,3,[],https://github.com/MaslowCNC/Firmware/pull/207,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/207,Prevents firmware from capturing a motor calibration if it is no valid,Prevents firmware from capturing a motor calibration if it is no valid,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,208,2017-05-06T19:35:27Z,2017-05-06T19:36:56Z,2017-05-06T19:36:59Z,MERGED,True,23,15,3,https://github.com/BarbourSmith,Make chain pull tight automatically,3,[],https://github.com/MaslowCNC/Firmware/pull/208,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/208,Add the ability for the machine to pull the chain tight automatically,Add the ability for the machine to pull the chain tight automatically,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,209,2017-05-10T19:59:47Z,2017-05-10T20:01:13Z,2017-05-10T20:01:19Z,MERGED,True,46,11,5,https://github.com/BarbourSmith,"PID loop in place, not tuned",2,[],https://github.com/MaslowCNC/Firmware/pull/209,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/209,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,210,2017-05-11T00:32:09Z,2017-05-11T00:33:21Z,2017-05-11T00:33:24Z,MERGED,True,14,9,4,https://github.com/BarbourSmith,Remove D term and focus on PI controler,2,[],https://github.com/MaslowCNC/Firmware/pull/210,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/210,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,211,2017-05-11T17:51:48Z,2017-05-11T17:52:10Z,2017-05-11T17:52:13Z,MERGED,True,40,6,2,https://github.com/BarbourSmith,Add third pid loop,2,[],https://github.com/MaslowCNC/Firmware/pull/211,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/211,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,212,2017-05-11T21:41:36Z,2017-05-11T21:47:06Z,2017-05-11T21:47:10Z,MERGED,True,61,46,7,https://github.com/BarbourSmith,Tune positional PID loop,9,[],https://github.com/MaslowCNC/Firmware/pull/212,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/212,Positional PID loop is tuned to as precise as it can be with the current step size. May need to be re-tuned after adjusting step size.,Positional PID loop is tuned to as precise as it can be with the current step size. May need to be re-tuned after adjusting step size.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,213,2017-05-11T21:49:07Z,2017-05-11T21:50:39Z,2017-05-11T21:50:43Z,MERGED,True,168,42,10,https://github.com/BarbourSmith,Add PID control to motor speed,25,[],https://github.com/MaslowCNC/Firmware/pull/213,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/213,"Adds PID control to motor speed, replaces the motor calibration system. Peformance is on the order of the old system with no calibration needed. Machine continually adapts to changing environment.","Adds PID control to motor speed, replaces the motor calibration system. Peformance is on the order of the old system with no calibration needed. Machine continually adapts to changing environment.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,214,2017-05-11T23:37:17Z,2017-05-11T23:37:48Z,2017-05-11T23:37:51Z,MERGED,True,15,5,2,https://github.com/BarbourSmith,Explore smaller step sizes for positional control,4,[],https://github.com/MaslowCNC/Firmware/pull/214,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/214,Automatically set the step size to be the minimum possible for the given feedrate,Automatically set the step size to be the minimum possible for the given feedrate,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,215,2017-05-12T18:54:13Z,2017-05-12T18:55:06Z,2017-05-12T18:55:09Z,MERGED,True,13,0,3,https://github.com/BarbourSmith,Firmware now reports the amount of space available in the buffer,2,[],https://github.com/MaslowCNC/Firmware/pull/215,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/215,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,216,2017-05-12T20:28:52Z,2017-05-12T20:29:19Z,2017-05-12T20:29:22Z,MERGED,True,3,3,3,https://github.com/BarbourSmith,Tune pid more,2,[],https://github.com/MaslowCNC/Firmware/pull/216,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/216,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,217,2017-05-13T18:19:58Z,2017-05-13T18:20:33Z,2017-05-13T18:20:36Z,MERGED,True,20,3,3,https://github.com/BarbourSmith,Change the way ringbuffer read line works,1,[],https://github.com/MaslowCNC/Firmware/pull/217,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/217,"Ring buffer was sometimes unable to tell if it had a complete line in memeory, and the way it checked was ineffecient.","Ring buffer was sometimes unable to tell if it had a complete line in memeory, and the way it checked was ineffecient.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,218,2017-05-13T18:36:58Z,2017-05-13T18:37:21Z,2017-05-13T18:37:39Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Increase baud rate to 57600,1,[],https://github.com/MaslowCNC/Firmware/pull/218,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/218,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,219,2017-05-13T18:56:58Z,2017-05-13T18:57:21Z,2017-05-13T18:57:24Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Increase charicter buffer size to 256,1,[],https://github.com/MaslowCNC/Firmware/pull/219,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/219,We've got the memory for it,We've got the memory for it,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,220,2017-05-14T20:39:36Z,2017-05-15T17:06:30Z,2017-05-15T17:06:34Z,MERGED,True,11,0,3,https://github.com/BarbourSmith,Empty ring buffer when stop command is recieved,1,[],https://github.com/MaslowCNC/Firmware/pull/220,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/220,Makes the machine stop imediately instead of executing more lines,Makes the machine stop imediately instead of executing more lines,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,221,2017-05-15T22:55:26Z,2017-05-15T23:24:25Z,2017-05-15T23:24:28Z,MERGED,True,2,0,1,https://github.com/BarbourSmith,Print no buffer available when finding position,1,[],https://github.com/MaslowCNC/Firmware/pull/221,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/221,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/222,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303537517,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","@blurfl This looks so awesome! What a cool feature! üëç üëç üëç
From looking at the files changed it seems like all the lines are changed (even though they clearly aren't), do you have any idea what causes that?
Other than that, looks great!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303540065,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","line endings or converting tabs to spaces are common causes of this sort of
thing.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303540244,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","I used command-T in Arduino to reformat the file üòï. That's whitespace adjustmenus. Sorry, I can re-submit from an unadulterated copy?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303542484,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","'On github, you simply append the w=1 parameter to the URL for it to ignore whitespace.
Use this URL to ignore the whitespace:
https://github.com/MaslowCNC/Firmware/pull/222/files?w=1",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303542846,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","I never touch github without stubbing my toe :(, but then I learn something new :)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/davidelang,7,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303543400,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","it's not a good idea to make massive whitespace changes in code (without a good
reason). It breaks tools like git blame tracing who wrote what.

It's up to bar, but I would say that it's best to redo the modifications without
the reformatting.

If we want to reformat all the code, that should be it's own commit that makes
no other changes.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/BarbourSmith,8,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303545790,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","That w=1 trick is neat! I didn't know we could do that.
Git has a steeper learning curve than I would like but it's so powerful.
Other than the white space thing, this looks fantastic. Thanks for defining all of the Aux pins, not just the ones you are using.
Would you be comfortable re-submitting the PR without the white space changes to keep everything clean?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/blurfl,9,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303546595,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","I'm firing up the editor right now, will re-submit a clean (messier :) ) version.
Got bit by AUX5 and AUX6 clobbering the Rx/Tx, so I only put those four in. I see that is fixed in the nex rev of the board, though üëç",True,{'LAUGH': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,222,2017-05-23T19:58:00Z,2017-05-23T22:40:43Z,2017-05-23T22:40:43Z,CLOSED,False,911,765,1,https://github.com/blurfl,Add G38.2 gcode for auto-zero z axis,1,[],https://github.com/MaslowCNC/Firmware/pull/222,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/222#issuecomment-303553106,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","Closing this, a de-formatted version has been submitted.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,223,2017-05-23T22:39:27Z,2017-05-23T22:51:07Z,2017-05-24T00:10:10Z,MERGED,True,146,0,1,https://github.com/blurfl,"G38.2 zero z axis, de-formatted",1,[],https://github.com/MaslowCNC/Firmware/pull/223,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/223,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,223,2017-05-23T22:39:27Z,2017-05-23T22:51:07Z,2017-05-24T00:10:10Z,MERGED,True,146,0,1,https://github.com/blurfl,"G38.2 zero z axis, de-formatted",1,[],https://github.com/MaslowCNC/Firmware/pull/223,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/223#issuecomment-303554870,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","Awesome! I'm merging it right now.
What a cool addition. Thank you for creating it. üéâ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,223,2017-05-23T22:39:27Z,2017-05-23T22:51:07Z,2017-05-24T00:10:10Z,MERGED,True,146,0,1,https://github.com/blurfl,"G38.2 zero z axis, de-formatted",1,[],https://github.com/MaslowCNC/Firmware/pull/223,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/223#issuecomment-303558831,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","FWIW, here are pictures of the arrangement I came up with.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,223,2017-05-23T22:39:27Z,2017-05-23T22:51:07Z,2017-05-24T00:10:10Z,MERGED,True,146,0,1,https://github.com/blurfl,"G38.2 zero z axis, de-formatted",1,[],https://github.com/MaslowCNC/Firmware/pull/223,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/223#issuecomment-303566800,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","yep, that looks about right.
I would test to see if you get enough conductivity through the case and the bearings to be able to sense contact with the connection being to the router base instead of having to clip to the bit (someone will forget to unclip it from the bit before turning on the router, guaranteed)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,223,2017-05-23T22:39:27Z,2017-05-23T22:51:07Z,2017-05-24T00:10:10Z,MERGED,True,146,0,1,https://github.com/blurfl,"G38.2 zero z axis, de-formatted",1,[],https://github.com/MaslowCNC/Firmware/pull/223,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/223#issuecomment-303574615,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","On the Ridgid router it does indeed bwork through the case, bearings and all. I actually clip to one of the screws of the z-axis mount. Other setups may^h^h^hwill vary :) . There is the touch plate between the sled and the work surface to remember as well. Someone will route through that as well.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,223,2017-05-23T22:39:27Z,2017-05-23T22:51:07Z,2017-05-24T00:10:10Z,MERGED,True,146,0,1,https://github.com/blurfl,"G38.2 zero z axis, de-formatted",1,[],https://github.com/MaslowCNC/Firmware/pull/223,https://github.com/davidelang,6,https://github.com/MaslowCNC/Firmware/pull/223#issuecomment-303576173,"grbl implements G38.2 for three axes; this only implements the z axis.
G38.2 is supposed to finish at the touch point without altering the
home position, the user would use G92 for that. We don‚Äôt have G92
(beyond the scope of this :) ) so this zeroes the z axis at the touch
point. If the touch point is not reached, the ‚ÄòSTOP‚Äô command is issued
to halt further execution without altering the zero. An example of
operation would be to execute this command file:
G20
G90
G38.2 Z-.15 F1
G20
G90
M02
The probe is assumed to be connected to AUX4, which is set at the top
of CNC_Functions.h . Ground is attached to the router (bit) and AUX4 to
the touch plate. AUX4 is configured as INPUT_PULLUP and is pulled LOW
when the probe touches the plate.","I'm a bit less worried about trying to route through the touch plate compared to
winding up the wire around the bit as it's turned on.

If you are worried about the touch plate, use a different wire to go to a holder
for the touch plate and refuse to turn on unlees the touch plate is connected to
it.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,224,2017-05-24T17:50:36Z,2017-05-24T17:54:05Z,2017-05-24T17:54:08Z,MERGED,True,5,8,3,https://github.com/BarbourSmith,Seed computation -> 3x faster,3,[],https://github.com/MaslowCNC/Firmware/pull/224,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/224,Seeding the calculation of the chain lengths with the prevous values speeds up the computation 3x allowing finer granularity of steps.,Seeding the calculation of the chain lengths with the prevous values speeds up the computation 3x allowing finer granularity of steps.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,224,2017-05-24T17:50:36Z,2017-05-24T17:54:05Z,2017-05-24T17:54:08Z,MERGED,True,5,8,3,https://github.com/BarbourSmith,Seed computation -> 3x faster,3,[],https://github.com/MaslowCNC/Firmware/pull/224,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/224#issuecomment-303801809,Seeding the calculation of the chain lengths with the prevous values speeds up the computation 3x allowing finer granularity of steps.,"Actually just a 2x improvement, still good. This PR also bumps the maximum feedrate up to 35 ipm / 900 mm/m",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,225,2017-05-24T18:22:54Z,2017-05-24T18:23:32Z,2017-05-24T18:23:35Z,MERGED,True,35,30,2,https://github.com/BarbourSmith,Constant speed is maintained through arcs and stright cuts,2,[],https://github.com/MaslowCNC/Firmware/pull/225,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/225,"G01, G02 and G03 all use the same system to compute feedrate making the speed consistant through each line of gcode","G01, G02 and G03 all use the same system to compute feedrate making the speed consistant through each line of gcode",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,226,2017-05-25T17:03:20Z,2017-05-25T17:03:47Z,2017-05-25T17:03:50Z,MERGED,True,3,305,3,https://github.com/BarbourSmith,Strip out old code related to motor calibration,1,[],https://github.com/MaslowCNC/Firmware/pull/226,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/226,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,227,2017-05-25T21:52:59Z,2017-05-25T21:53:44Z,2017-05-25T21:53:46Z,MERGED,True,18,8,1,https://github.com/BarbourSmith,Fix for arc end points having rounding errors,4,[],https://github.com/MaslowCNC/Firmware/pull/227,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/227,The way arc end points were computed was prone to rounding errors of up to several mm on very large arcs (3000mm+),The way arc end points were computed was prone to rounding errors of up to several mm on very large arcs (3000mm+),True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,228,2017-05-26T15:50:59Z,2017-05-26T16:05:49Z,2017-05-26T16:05:59Z,MERGED,True,3,1,1,https://github.com/seware74,Just signing in...,1,[],https://github.com/MaslowCNC/Firmware/pull/228,https://github.com/seware74,1,https://github.com/MaslowCNC/Firmware/pull/228,Nothing to see here.... move along,Nothing to see here.... move along,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,228,2017-05-26T15:50:59Z,2017-05-26T16:05:49Z,2017-05-26T16:05:59Z,MERGED,True,3,1,1,https://github.com/seware74,Just signing in...,1,[],https://github.com/MaslowCNC/Firmware/pull/228,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/228#issuecomment-304322141,Nothing to see here.... move along,@seware74 Welcome!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,229,2017-05-26T17:38:36Z,2017-05-26T17:41:59Z,2017-05-26T17:42:02Z,MERGED,True,17,8,1,https://github.com/BarbourSmith,Send lines of gcode to the machiene faster,4,[],https://github.com/MaslowCNC/Firmware/pull/229,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/229,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,230,2017-05-26T21:41:33Z,2017-05-26T21:43:38Z,2017-05-26T21:43:40Z,MERGED,True,11,1,2,https://github.com/BarbourSmith,Reduce chattering in the file sun moon stars,4,[],https://github.com/MaslowCNC/Firmware/pull/230,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/230,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/seware74,1,https://github.com/MaslowCNC/Firmware/pull/231,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304416470,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","Awesome! All of those changes are in places where speed is critical. Great job!
I will test and merge first thing tomorrow morning!
Thank you so much. üëç üëç üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/seware74,3,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304463848,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","That's probably a good idea.¬†
I don't expect the board dimensions will change mid stream. :)¬†
Move the calc to initialization and then forget about them.
-------- Original message --------From: Scott Smith <notifications@github.com> Date: 5/27/17  11:02 AM  (GMT-06:00) To: MaslowCNC/Firmware <Firmware@noreply.github.com> Cc: seware74 <seware74@gmail.com>, Author <author@noreply.github.com> Subject: Re: [MaslowCNC/Firmware] Clamp value changes (#231) 
@blurfl commented on this pull request.

In Kinematics::_verifyValidTarget, should halfWidth and halfHeight be declared externally, as the machine dimensions only change during the rare calibration operation? I don't know whether this matters much if it only gets called once per gcode, unless the file has lots of small movements as in a complex curve.

‚Äî
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub, or mute the thread.








{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/MaslowCNC/Firmware"",""title"":""MaslowCNC/Firmware"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/MaslowCNC/Firmware""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@blurfl commented on #231""}],""action"":{""name"":""View Pull Request"",""url"":""#231 (review)""}}}",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304464496,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.",There's a function Kinematics::recomputeGeometry() where perhaps they belong - called if the user re-does the machine calibration.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304466350,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","I agree that we don't need to declare those floats every time, but I still think this is a big improvement over the if statements, so I'm going to merge it happily.
I would gladly merge a follow up pull request moving the float declarations also. I think @blurfl is correct that the recomputeGeometry() function is the right place for them.
I tested it at all the machine's limits, and it works like a charm. Great work! üëç üíØ üéâ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304466500,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","That's great. Out of interest, just where do you think are the best places to look for ways to improve timing?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304467350,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","You mean in terms of speeding up how fast the code runs?
The really time sensitive stuff (computing the PID loops) runs off a timer which seems to be very consistent.
In terms of speeding up how fast the code runs I think this PR is looking in the right place. Shaving time off how fast the kinematics can compute the position is important because it runs every .1-.3mm as the machine is moving which is a lot of times.
We're getting pretty close to where we want to be on how fast this part runs tho.
The next place that I haven't optimized at all which I think could be sped up a lot is looking at how fast a line of gcode gets taken from being a string to us knowing what the variables are so that we can start the move. That code (functions towards the bottom of CNC_Functions.h) hasn't been looked at for speed at all, and because it's dealing with strings I think it is pretty slow.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304467765,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","Great, that's just what I wanted, thanks. I agree that Arduino strings are a good place to look for optimization üòä",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,231,2017-05-26T22:10:02Z,2017-05-27T17:40:36Z,2017-05-27T18:28:46Z,MERGED,True,100,108,2,https://github.com/seware74,Clamp value changes,3,[],https://github.com/MaslowCNC/Firmware/pull/231,https://github.com/davidelang,9,https://github.com/MaslowCNC/Firmware/pull/231#issuecomment-304468839,"Not earth-shattering but updated the range-clamping to use compound ternary operations... this reduced branching in several of the areas they are used.
Also eliminated a couple of redundant calculations on some floats in the kinematics code.","I think we still may have some math errors to figure out first (with the new
double-PID change, are we still cutting slightly bowed lines? do we still need
to lie to the machine about what the dimensions are? do we still cut different
Y distances at different parts of the sheet?).

Once we do that, I think we need to go through the math code carefully and find
what can be pre-computed, what is so near constant that it can be replaced by a
constant, etc.

but correctness first, and I don't know if we are there yet.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,232,2017-05-27T18:05:12Z,2017-05-27T18:11:29Z,2017-05-27T18:11:29Z,MERGED,True,8,1,2,https://github.com/blurfl,Move machine dimension assignments,2,[],https://github.com/MaslowCNC/Firmware/pull/232,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/232,These only change when the geometry changes.,These only change when the geometry changes.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,232,2017-05-27T18:05:12Z,2017-05-27T18:11:29Z,2017-05-27T18:11:29Z,MERGED,True,8,1,2,https://github.com/blurfl,Move machine dimension assignments,2,[],https://github.com/MaslowCNC/Firmware/pull/232,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/232#issuecomment-304467906,These only change when the geometry changes.,Beautiful!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,233,2017-05-27T19:25:14Z,2017-05-27T19:25:41Z,2017-05-27T23:50:17Z,MERGED,True,6,4,1,https://github.com/BarbourSmith,Move all detatching motors into single axis move(),1,[],https://github.com/MaslowCNC/Firmware/pull/233,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/233,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,233,2017-05-27T19:25:14Z,2017-05-27T19:25:41Z,2017-05-27T23:50:17Z,MERGED,True,6,4,1,https://github.com/BarbourSmith,Move all detatching motors into single axis move(),1,[],https://github.com/MaslowCNC/Firmware/pull/233,https://github.com/davidelang,2,https://github.com/MaslowCNC/Firmware/pull/233#issuecomment-304472331,,"it bothers me that we need to detach motors when they aren't being moved. That
indicates to me that running the other motors is causing enough noise on the
sensor lines that we think the other motors have moved.

If that's the case, then it's also happening when we are moving all axis, and
that would generate position errors.

If we have an encoder showing movement when the motor isn't moving (or any
movement other than +1/-1/+1/-1 etc) then I think we have a problem that we need
to address.

can you hack up a test firmware version to detect if there are pulses on the
encoder lines when they are detached and we are running a different axis?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,233,2017-05-27T19:25:14Z,2017-05-27T19:25:41Z,2017-05-27T23:50:17Z,MERGED,True,6,4,1,https://github.com/BarbourSmith,Move all detatching motors into single axis move(),1,[],https://github.com/MaslowCNC/Firmware/pull/233,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/233#issuecomment-304472734,,"It's not so much about noise on the signals as it is about stressing the motors. While they are position holding they are constantly switching direction (which you can hear as a hum). This is especially notable for the z-axis motor which is off 95% of the time. I noticed that mine was pretty much always warm.
The other place this was an issue also during the calibration process when only one motor is being used to measure out the chain. The other motor would twitch and hum.
I agree that ideally if the motor isn't being commanded to move it should be silent, but the only way to do that is to introduce a deadband into the PID controller which would result in some loss of accuracy.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,233,2017-05-27T19:25:14Z,2017-05-27T19:25:41Z,2017-05-27T23:50:17Z,MERGED,True,6,4,1,https://github.com/BarbourSmith,Move all detatching motors into single axis move(),1,[],https://github.com/MaslowCNC/Firmware/pull/233,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/233#issuecomment-304473497,,"a deadband is the correct thing to do. the motors have >8000 encoder counts/rev,
so a single encoder step is ~0.0003"", a far cry from our 0.015"" target :-)

P.S. the encoder res is listed as 8148, but if you divide that by 200 (the gear
ratio) it doesn't come out to an even number, are you sure that's correct? If
it's a 10 line encoder (40 steps/rev) on the motor and a 200:1 gear ratio, that
should be 8000 steps/rev for the output, not 8148.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,233,2017-05-27T19:25:14Z,2017-05-27T19:25:41Z,2017-05-27T23:50:17Z,MERGED,True,6,4,1,https://github.com/BarbourSmith,Move all detatching motors into single axis move(),1,[],https://github.com/MaslowCNC/Firmware/pull/233,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/233#issuecomment-304482634,,"Great point, I've added a comment to the line to clarify
#define ENCODERSTEPS   8148.0 //7*291*4 --- 7ppr, 291:1 gear ratio, quadrature encoding
The gear ratio is actually 291:1",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,1,https://github.com/MaslowCNC/Firmware/pull/235,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-304937807,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","From giving this a read through it looks fantastic. All the changes make sense, and they all seem like logical improvements.
When I compile it it doesn't respond to commands (as if the arduino serial port wasn't opened or as if it was stuck in a while loop). Even the initial print statements don't show up which is strange because those are the first lines of code to run.
From looking at the changes I can's see anything that could cause that behavior.
Do you have any thoughts on where to look?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,3,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-304951123,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","I'll take a look this over lunch and again tonight...

The major changes made that I think would relate...

1) Removed the global ReadString variable (I saw it being intialized in
several places but never referenced otherwise) Could I have missed it being
used elsewhere? (I was using ""atom project find"" to locate references)
2) Passing the command string by reference to functions that use it. (since
it compiled I assume the C++ compiler for arduino supported ""references"")
If not, changing them to pointers would have the same effect.


Stuck in a loop... hmm

There were 3 (almost identical) while loops that were using the abs
function within the while... I removed the abs on the changing variable (as
it was only an incrementer) and moved the abs function on the ""checked
against"" variable out of the loop, so it would not be executed every time
around. My recollection is that these were all declared locally... if I
missed something that was changing them within the loop (besides the
incrementer) that could cause a stuck loop.

Let me peer into the abyss and see what pops out.
‚Ä¶
On Tue, May 30, 2017 at 11:44 AM, BarbourSmith ***@***.***> wrote:
 From giving this a read through it looks fantastic. All the changes make
 sense, and they all seem like logical improvements.

 When I compile it it doesn't respond to commands (as if the arduino serial
 port wasn't opened or as if it was stuck in a while loop). Even the initial
 print statements don't show up which is strange because those are the first
 lines of code to run.

 From looking at the changes I can's see anything that could cause that
 behavior.

 Do you have any thoughts on where to look?

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#235 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AG8oaBlSViD7YopEgL1lesNj1JfjGGLNks5r_EddgaJpZM4Np0gB>
 .",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,4,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-304953005,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","And in the watchdog I moved the intialization of the char variable used for
serial reading to outside the loop where it's used. (prevents new variable
creation on every iteration). If arduino has some scope oddities, that is
certainly core to the serial reading.. a long shot, but perhaps?
‚Ä¶
On Tue, May 30, 2017 at 12:31 PM, Steve Ware ***@***.***> wrote:
 I'll take a look this over lunch and again tonight...

 The major changes made that I think would relate...

 1) Removed the global ReadString variable (I saw it being intialized in
 several places but never referenced otherwise) Could I have missed it being
 used elsewhere? (I was using ""atom project find"" to locate references)
 2) Passing the command string by reference to functions that use it.
 (since it compiled I assume the C++ compiler for arduino supported
 ""references"") If not, changing them to pointers would have the same effect.


 Stuck in a loop... hmm

 There were 3 (almost identical) while loops that were using the abs
 function within the while... I removed the abs on the changing variable (as
 it was only an incrementer) and moved the abs function on the ""checked
 against"" variable out of the loop, so it would not be executed every time
 around. My recollection is that these were all declared locally... if I
 missed something that was changing them within the loop (besides the
 incrementer) that could cause a stuck loop.

 Let me peer into the abyss and see what pops out.


 On Tue, May 30, 2017 at 11:44 AM, BarbourSmith ***@***.***>
 wrote:

> From giving this a read through it looks fantastic. All the changes make
> sense, and they all seem like logical improvements.
>
> When I compile it it doesn't respond to commands (as if the arduino
> serial port wasn't opened or as if it was stuck in a while loop). Even the
> initial print statements don't show up which is strange because those are
> the first lines of code to run.
>
> From looking at the changes I can's see anything that could cause that
> behavior.
>
> Do you have any thoughts on where to look?
>
> ‚Äî
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <#235 (comment)>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AG8oaBlSViD7YopEgL1lesNj1JfjGGLNks5r_EddgaJpZM4Np0gB>
> .
>",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,5,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-304955606,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","Also ( I think I missed mentiong this in the commit) ... I removed the
toUpperCase within the G1 and G38 function as these should have already
been upper case from the upper casing going on in the main loop.
‚Ä¶
On Tue, May 30, 2017 at 12:38 PM, Steve Ware ***@***.***> wrote:
 And in the watchdog I moved the intialization of the char variable used
 for serial reading to outside the loop where it's used. (prevents new
 variable creation on every iteration). If arduino has some scope oddities,
 that is certainly core to the serial reading.. a long shot, but perhaps?

 On Tue, May 30, 2017 at 12:31 PM, Steve Ware ***@***.***> wrote:

> I'll take a look this over lunch and again tonight...
>
> The major changes made that I think would relate...
>
> 1) Removed the global ReadString variable (I saw it being intialized in
> several places but never referenced otherwise) Could I have missed it being
> used elsewhere? (I was using ""atom project find"" to locate references)
> 2) Passing the command string by reference to functions that use it.
> (since it compiled I assume the C++ compiler for arduino supported
> ""references"") If not, changing them to pointers would have the same effect.
>
>
> Stuck in a loop... hmm
>
> There were 3 (almost identical) while loops that were using the abs
> function within the while... I removed the abs on the changing variable (as
> it was only an incrementer) and moved the abs function on the ""checked
> against"" variable out of the loop, so it would not be executed every time
> around. My recollection is that these were all declared locally... if I
> missed something that was changing them within the loop (besides the
> incrementer) that could cause a stuck loop.
>
> Let me peer into the abyss and see what pops out.
>
>
> On Tue, May 30, 2017 at 11:44 AM, BarbourSmith ***@***.***>
> wrote:
>
>> From giving this a read through it looks fantastic. All the changes make
>> sense, and they all seem like logical improvements.
>>
>> When I compile it it doesn't respond to commands (as if the arduino
>> serial port wasn't opened or as if it was stuck in a while loop). Even the
>> initial print statements don't show up which is strange because those are
>> the first lines of code to run.
>>
>> From looking at the changes I can's see anything that could cause that
>> behavior.
>>
>> Do you have any thoughts on where to look?
>>
>> ‚Äî
>> You are receiving this because you authored the thread.
>> Reply to this email directly, view it on GitHub
>> <#235 (comment)>,
>> or mute the thread
>> <https://github.com/notifications/unsubscribe-auth/AG8oaBlSViD7YopEgL1lesNj1JfjGGLNks5r_EddgaJpZM4Np0gB>
>> .
>>
>
>",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-304956340,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","From looking through, it seems like all of those changes make a lot of sense. Nothing popped out at me as an obvious cause.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305041663,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","On my setup, these changes interfere with control of the right motor; the left and z seem normal. Restoring the release restores normal control.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,8,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305045420,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","Bar was having some issues as well though the changes were kinda (or kinda not it seems) benign. I think his issues were different though.¬†
¬†I'll see if I can spot it tonight but may need to wait until I have some hardware to test with myself.¬†
-------- Original message --------From: Scott Smith <notifications@github.com> Date: 5/30/17  6:54 PM  (GMT-06:00) To: MaslowCNC/Firmware <Firmware@noreply.github.com> Cc: seware74 <seware74@gmail.com>, Author <author@noreply.github.com> Subject: Re: [MaslowCNC/Firmware] Cleanup and optimize (#235) 
On my setup, these changes interfere with control of the right motor; the left and z seem normal. Restoring the release restores normal control.

‚Äî
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub, or mute the thread.








{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/MaslowCNC/Firmware"",""title"":""MaslowCNC/Firmware"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/MaslowCNC/Firmware""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@blurfl in #235: On my setup, these changes interfere with control of the right motor; the left and z seem normal. Restoring the release restores normal control.""}],""action"":{""name"":""View Pull Request"",""url"":""#235 (comment)""}}}",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,9,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305059332,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","I found on the  Arduino reference for the abs function that it may have some non-standard behavior, compared to usual usage in C.  See the following:

Warning
Because of the way the abs() function is implemented, avoid using other functions inside the brackets, it may lead to incorrect results.

So, I've fixed my original changes that ""misued"" abs, and a few other ""misuses"" I found elsewhere in the project, to accommodate this peculiarity. An update to the pull (with a few other changes) will be forthcoming in a few minutes. Curious if this fixes anything for you Scott \  Bar?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305059566,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","I'll give it a whirl later this evening. Thanks for digging so deeply!
‚Ä¶
 On May 30, 2017, at 6:51 PM, seware74 ***@***.***> wrote:

 I found on the Arduino reference for the abs function that it may have some non-standard behavior, compared to usual usage in C. See the following:

 Warning

 Because of the way the abs() function is implemented, avoid using other functions inside the brackets, it may lead to incorrect results.

 So, I've fixed my original changes that ""misued"" abs, and a few other ""misuses"" I found elsewhere in the project, to accommodate this peculiarity. An update to the pull (with a few other changes) will be forthcoming in a few minutes. Curious if this fixes anything for you Scott \ Bar?

 ‚Äî
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,11,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305059699,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it",Also made the String references in the function parameters const so that the originals could not be modified inadvertently (now that they refer to the original).,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305062227,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","On a different topic, sort of, the Arduino IDE uses different formatting from that found in the Maslow source files. The Arduino 'Auto Format' command alters tabs, spacing, line endings, even parentheses spacing. We've been asked to take care when issuing a PR to only change the pertinent lines, so that git can keep track of who has changed what.
 For myself, I prefer the format that Arduino imposes. Maybe one day we can refactor the files with the Arduino formatting. For now, I understand the reason for the request and honor it.
‚Ä¶
 On May 30, 2017, at 6:51 PM, seware74 ***@***.***> wrote:

 I found on the Arduino reference for the abs function that it may have some non-standard behavior, compared to usual usage in C. See the following:

 Warning

 Because of the way the abs() function is implemented, avoid using other functions inside the brackets, it may lead to incorrect results.

 So, I've fixed my original changes that ""misued"" abs, and a few other ""misuses"" I found elsewhere in the project, to accommodate this peculiarity. An update to the pull (with a few other changes) will be forthcoming in a few minutes. Curious if this fixes anything for you Scott \ Bar?

 ‚Äî
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,13,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305063436,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","¬†I'm using the atom ide as instructed in the readme. ¬†Is there a way to prevent what I presume is eol differences?
I've been using the ?w=1 parameter in github to ignore whitespace when comparing. But would sure be nice not to have to. ¬†I have found a fix yet, but I'm brand new to atom.¬†
-------- Original message --------From: Scott Smith <notifications@github.com> Date: 5/30/17  9:12 PM  (GMT-06:00) To: MaslowCNC/Firmware <Firmware@noreply.github.com> Cc: seware74 <seware74@gmail.com>, Author <author@noreply.github.com> Subject: Re: [MaslowCNC/Firmware] Cleanup and optimize (#235) 
On a different topic, sort of, the Arduino IDE uses different formatting from that found in the Maslow source files. The Arduino 'Auto Format' command alters tabs, spacing, line endings, even parentheses spacing. We've been asked to take care when issuing a PR to only change the pertinent lines, so that git can keep track of who has changed what.

 For myself, I prefer the format that Arduino imposes. Maybe one day we can refactor the files with the Arduino formatting. For now, I understand the reason for the request and honor it.
 On May 30, 2017, at 6:51 PM, seware74 ***@***.***> wrote:

 I found on the Arduino reference for the abs function that it may have some non-standard behavior, compared to usual usage in C. See the following:

 Warning

 Because of the way the abs() function is implemented, avoid using other functions inside the brackets, it may lead to incorrect results.

 So, I've fixed my original changes that ""misued"" abs, and a few other ""misuses"" I found elsewhere in the project, to accommodate this peculiarity. An update to the pull (with a few other changes) will be forthcoming in a few minutes. Curious if this fixes anything for you Scott \ Bar?

 ‚Äî
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub, or mute the thread.

‚Äî
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub, or mute the thread.








{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/MaslowCNC/Firmware"",""title"":""MaslowCNC/Firmware"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/MaslowCNC/Firmware""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@blurfl in #235: On a different topic, sort of, the Arduino IDE uses different formatting from that found in the Maslow source files. The Arduino 'Auto Format' command alters tabs, spacing, line endings, even parentheses spacing. We've been asked to take care when issuing a PR to only change the pertinent lines, so that git can keep track of who has changed what.\n For myself, I prefer the format that Arduino imposes. Maybe one day we can refactor the files with the Arduino formatting. For now, I understand the reason for the request and honor it.\n\n\u003e On May 30, 2017, at 6:51 PM, seware74 \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e I found on the Arduino reference for the abs function that it may have some non-standard behavior, compared to usual usage in C. See the following:\n\u003e \n\u003e Warning\n\u003e \n\u003e Because of the way the abs() function is implemented, avoid using other functions inside the brackets, it may lead to incorrect results.\n\u003e \n\u003e So, I've fixed my original changes that \""misued\"" abs, and a few other \""misuses\"" I found elsewhere in the project, to accommodate this peculiarity. An update to the pull (with a few other changes) will be forthcoming in a few minutes. Curious if this fixes anything for you Scott \\ Bar?\n\u003e \n\u003e ‚Äî\n\u003e You are receiving this because you commented.\n\u003e Reply to this email directly, view it on GitHub, or mute the thread.\n\u003e \n""}],""action"":{""name"":""View Pull Request"",""url"":""#235 (comment)""}}}",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/davidelang,14,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305067607,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","I would suggest doing a reformatting pull request immediatly after Bar cuts a
release on wednesday so that there is less chance of causing inadvertent
problems (or at least a better chance of catching them before the next release)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,15,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305068623,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","I think I found the culprit that is reformatting in atom. Mea culpa...¬†
-------- Original message --------From: Scott Smith <notifications@github.com> Date: 5/30/17  9:12 PM  (GMT-06:00) To: MaslowCNC/Firmware <Firmware@noreply.github.com> Cc: seware74 <seware74@gmail.com>, Author <author@noreply.github.com> Subject: Re: [MaslowCNC/Firmware] Cleanup and optimize (#235) 
On a different topic, sort of, the Arduino IDE uses different formatting from that found in the Maslow source files. The Arduino 'Auto Format' command alters tabs, spacing, line endings, even parentheses spacing. We've been asked to take care when issuing a PR to only change the pertinent lines, so that git can keep track of who has changed what.

 For myself, I prefer the format that Arduino imposes. Maybe one day we can refactor the files with the Arduino formatting. For now, I understand the reason for the request and honor it.
 On May 30, 2017, at 6:51 PM, seware74 ***@***.***> wrote:

 I found on the Arduino reference for the abs function that it may have some non-standard behavior, compared to usual usage in C. See the following:

 Warning

 Because of the way the abs() function is implemented, avoid using other functions inside the brackets, it may lead to incorrect results.

 So, I've fixed my original changes that ""misued"" abs, and a few other ""misuses"" I found elsewhere in the project, to accommodate this peculiarity. An update to the pull (with a few other changes) will be forthcoming in a few minutes. Curious if this fixes anything for you Scott \ Bar?

 ‚Äî
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub, or mute the thread.

‚Äî
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub, or mute the thread.








{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/MaslowCNC/Firmware"",""title"":""MaslowCNC/Firmware"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/MaslowCNC/Firmware""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@blurfl in #235: On a different topic, sort of, the Arduino IDE uses different formatting from that found in the Maslow source files. The Arduino 'Auto Format' command alters tabs, spacing, line endings, even parentheses spacing. We've been asked to take care when issuing a PR to only change the pertinent lines, so that git can keep track of who has changed what.\n For myself, I prefer the format that Arduino imposes. Maybe one day we can refactor the files with the Arduino formatting. For now, I understand the reason for the request and honor it.\n\n\u003e On May 30, 2017, at 6:51 PM, seware74 \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e I found on the Arduino reference for the abs function that it may have some non-standard behavior, compared to usual usage in C. See the following:\n\u003e \n\u003e Warning\n\u003e \n\u003e Because of the way the abs() function is implemented, avoid using other functions inside the brackets, it may lead to incorrect results.\n\u003e \n\u003e So, I've fixed my original changes that \""misued\"" abs, and a few other \""misuses\"" I found elsewhere in the project, to accommodate this peculiarity. An update to the pull (with a few other changes) will be forthcoming in a few minutes. Curious if this fixes anything for you Scott \\ Bar?\n\u003e \n\u003e ‚Äî\n\u003e You are receiving this because you commented.\n\u003e Reply to this email directly, view it on GitHub, or mute the thread.\n\u003e \n""}],""action"":{""name"":""View Pull Request"",""url"":""#235 (comment)""}}}",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/blurfl,16,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305069535,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it",The readme lists four different editing environments. No doubt each will try to impose its own formatting if we're not careful.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/davidelang,17,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305069798,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","The readme lists four different editing environments. No doubt each will try to impose its own formatting if we're not careful.
Yes, we need to pick one, switch to it and then enforce it.

I don't care that much which one. I have pet peeves, like anyone else, but
having a standard is more important than which one it is.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/blurfl,18,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305070221,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","We can use the existing as the standard. We just need to avoid altering anything unintentionally.
‚Ä¶
 On May 30, 2017, at 8:10 PM, David Lang ***@***.***> wrote:

 > The readme lists four different editing environments. No doubt each will try to impose its own formatting if we're not careful.

 Yes, we need to pick one, switch to it and then enforce it.

 I don't care that much which one. I have pet peeves, like anyone else, but
 having a standard is more important than which one it is.
 ‚Äî
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/blurfl,19,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305088754,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","@seware74, I've downloaded and applied the changed files. They introduce an issue which causes repeated 'connection lost' messages to the console, a communication error but probably not a serial issue. Shifting back to the version of the PR from yesterday takes me back to the situation where communication is proper but my right motor does not operate.
Restoring the Axis.cpp file did not change the communication issue. I spent some time trying to pin down the cause of the communication issue but ran out of time. Perhaps breaking apart the 'abs()' patches from the string patches wouldn isolate that. Because of the communication issue I wasn't able to determine whether the issue driving the motors had changed.
Thanks for taking a deep dive into the firmware, the things you point out are worth exploring.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/seware74,20,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305169308,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","Very odd...but I agree. Certainly let's hold. When I have something in hand to test with besides a sim... I'll start again from the last known good and test each change type in isolation in its own branch. ¬†
Would you like each change type as a separate PR so you guys can test in isolation also?

I'll also start with a fresh fork so the whitespace diffs won't be a problem.
Thanks for testing Scott. Bar you can kill the existing pull request... I'll work silently in the shadows until I can figure this out.
‚Ä¶
-------- Original message --------From: Scott Smith <notifications@github.com> Date: 5/31/17  12:39 AM  (GMT-06:00) To: MaslowCNC/Firmware <Firmware@noreply.github.com> Cc: seware74 <seware74@gmail.com>, Mention <mention@noreply.github.com> Subject: Re: [MaslowCNC/Firmware] Cleanup and optimize (#235) 
@seware74, I've downloaded and applied the changed files. They introduce an issue which causes repeated 'connection lost' messages to the console, a communication error but probably not a serial issue. Shifting back to the version of the PR from yesterday takes me back to the situation where communication is proper but my right motor does not operate.

Restoring the Axis.cpp file did not change the communication issue. I spent some time trying to pin down the cause of the communication issue but ran out of time. Perhaps breaking apart the 'abs()' patches from the string patches wouldn isolate that. Because of the communication issue I wasn't able to determine whether the issue driving the motors had changed.

Thanks for taking a deep dive into the firmware, the things you point out are worth exploring.

‚Äî
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.








{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/MaslowCNC/Firmware"",""title"":""MaslowCNC/Firmware"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/MaslowCNC/Firmware""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@blurfl in #235: @seware74, I've downloaded and applied the changed files. They introduce an issue which causes repeated 'connection lost' messages to the console, a communication error but probably not a serial issue. Shifting back to the version of the PR from yesterday takes me back to the situation where communication is proper but my right motor does not operate.\r\n Restoring the Axis.cpp file did not change the communication issue. I spent some time trying to pin down the cause of the communication issue but ran out of time. Perhaps breaking apart the 'abs()' patches from the string patches wouldn isolate that. Because of the communication issue I wasn't able to determine whether the issue driving the motors had changed.\r\n Thanks for taking a deep dive into the firmware, the things you point out are worth exploring.""}],""action"":{""name"":""View Pull Request"",""url"":""#235 (comment)""}}}",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/BarbourSmith,21,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305258906,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","Ok, I'll close this one, but I think these are all still good ideas that I don't want to see slip away.
I think making each type of change as a different pull request is a great idea. That would make it easy for us to test.
There is also an Arduino winging it's way to you which will help.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,235,2017-05-30T04:42:42Z,2017-05-31T17:28:01Z,2017-05-31T21:43:59Z,CLOSED,False,305,282,2,https://github.com/seware74,Cleanup and optimize,2,[],https://github.com/MaslowCNC/Firmware/pull/235,https://github.com/davidelang,22,https://github.com/MaslowCNC/Firmware/pull/235#issuecomment-305326551,"Removed unused ReadString global parameter
Changed function parameters of String type to pass by reference instead of by value (to eliminate the expense of copies being made on each function call)
removed 3 uses of abs() on local variables that could only be positive.
moved 3 uses of abs() outside of the while loop as the function only needed to be executed once, not once per loop iteration
I think that was it","If not a separate pull request, at least a separate commit within the pull
request. That way we could use git bisect to walk through the different changes
and identify which one was the problem",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,236,2017-06-02T16:57:05Z,2017-06-07T02:15:11Z,2017-06-07T02:15:17Z,CLOSED,False,4,4,1,https://github.com/BarbourSmith,limit index of buffer to 255,2,[],https://github.com/MaslowCNC/Firmware/pull/236,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/236,"256 is out of bounds
Fix for issue #309","256 is out of bounds
Fix for issue #309",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,236,2017-06-02T16:57:05Z,2017-06-07T02:15:11Z,2017-06-07T02:15:17Z,CLOSED,False,4,4,1,https://github.com/BarbourSmith,limit index of buffer to 255,2,[],https://github.com/MaslowCNC/Firmware/pull/236,https://github.com/andymillernz,2,https://github.com/MaslowCNC/Firmware/pull/236#issuecomment-305915704,"256 is out of bounds
Fix for issue #309","You aren't catching all the overflow use cases with this change -- My diff is below..  I've taken a slightly different approach however easy to see the other corner case..
And a couple of changes are for efficiency and ensuring a variable is initialized before access - I don't believe either of these are causing issues..
AND I don't have my Maslow yet so can't actually test any of this..... :)
diff --git a/cnc_ctrl_v1/.DS_Store b/cnc_ctrl_v1/.DS_Store
index 8e0ee34..e9a3fff 100644
Binary files a/cnc_ctrl_v1/.DS_Store and b/cnc_ctrl_v1/.DS_Store differ
diff --git a/cnc_ctrl_v1/RingBuffer.cpp b/cnc_ctrl_v1/RingBuffer.cpp
index ecf1a58..effe737 100644
--- a/cnc_ctrl_v1/RingBuffer.cpp
+++ b/cnc_ctrl_v1/RingBuffer.cpp
@@ -72,7 +72,7 @@ String RingBuffer::readLine(){
     bool lineDetected = false;
     
     int  i = _beginningOfString;
-    while (i !=  _endOfString){                  // if we haven't gotten to the end of the buffer yet
+    while (i !=  _endOfString && !lineDetected ){                  // if we haven't gotten to the end of the buffer yet
         if(_buffer[i] == '\n'){                  //Check to see if the buffer contains a complete line terminated with \n
             lineDetected = true;
         }
@@ -80,7 +80,7 @@ String RingBuffer::readLine(){
     }
     
     if(lineDetected){
-        char lastReadValue;
+        char lastReadValue = '\0';
         while(lastReadValue != '\n'){                   //read until the end of the line is found, building the string
             lastReadValue = read();
             lineToReturn += lastReadValue;
@@ -144,7 +144,7 @@ void RingBuffer::_incrementEnd(){
     Increment the pointer to the end of the ring buffer by one.
     
     */
-    if (_endOfString + 1 == _beginningOfString){
+     if  ((_endOfString + 1 == _beginningOfString) || (_endOfString==BUFFERSIZE && _beginningOfString==0)) {
         Serial.println(""buffer overflow"");
         Serial.print(""Buffer begin: "");
         Serial.println(_beginningOfString);
@@ -164,9 +164,7 @@ void RingBuffer::_incrementEnd(){
 
 void RingBuffer::_incrementVariable(int* variable){
     /*
-    
     Increment the target variable.
-    
     */
     
     if (*variable < BUFFERSIZE){
@@ -202,7 +200,7 @@ int RingBuffer::spaceAvailable(){
     
     */
     
-    return (BUFFERSIZE - 1) - size();
+    return (BUFFERSIZE) - size();
 }
 
 void RingBuffer::empty(){
@@ -212,4 +210,4 @@ void RingBuffer::empty(){
     
     _beginningOfString = 0;
     _endOfString       = 0;
-}
\ No newline at end of file
+}
diff --git a/cnc_ctrl_v1/RingBuffer.h b/cnc_ctrl_v1/RingBuffer.h
index 21e6be9..864bc7d 100644
--- a/cnc_ctrl_v1/RingBuffer.h
+++ b/cnc_ctrl_v1/RingBuffer.h
@@ -39,7 +39,7 @@
             void _incrementVariable(int* variable);
             int  _beginningOfString = 0;             //points to the first valid character which can be read
             int  _endOfString       = 0;             //points to the first open space which can be written
-            char _buffer[BUFFERSIZE];
+            char _buffer[BUFFERSIZE + 1];
     };
 
     #endif
\ No newline at end of file",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,236,2017-06-02T16:57:05Z,2017-06-07T02:15:11Z,2017-06-07T02:15:17Z,CLOSED,False,4,4,1,https://github.com/BarbourSmith,limit index of buffer to 255,2,[],https://github.com/MaslowCNC/Firmware/pull/236,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/236#issuecomment-305978652,"256 is out of bounds
Fix for issue #309","I'd be willing to try your suggestions, but I'm not sure but I might miss something going from the diffs. Can you .zip the file and attach it to a comment?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,236,2017-06-02T16:57:05Z,2017-06-07T02:15:11Z,2017-06-07T02:15:17Z,CLOSED,False,4,4,1,https://github.com/BarbourSmith,limit index of buffer to 255,2,[],https://github.com/MaslowCNC/Firmware/pull/236,https://github.com/andymillernz,4,https://github.com/MaslowCNC/Firmware/pull/236#issuecomment-306000495,"256 is out of bounds
Fix for issue #309",This archive has the updated Ringbuffer.cpp and .h files,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,236,2017-06-02T16:57:05Z,2017-06-07T02:15:11Z,2017-06-07T02:15:17Z,CLOSED,False,4,4,1,https://github.com/BarbourSmith,limit index of buffer to 255,2,[],https://github.com/MaslowCNC/Firmware/pull/236,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/236#issuecomment-306062809,"256 is out of bounds
Fix for issue #309","@andymillernz , the files you sent compile and run. I was not able to do extensive testing with them though.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,236,2017-06-02T16:57:05Z,2017-06-07T02:15:11Z,2017-06-07T02:15:17Z,CLOSED,False,4,4,1,https://github.com/BarbourSmith,limit index of buffer to 255,2,[],https://github.com/MaslowCNC/Firmware/pull/236,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/236#issuecomment-306263259,"256 is out of bounds
Fix for issue #309","@andymillernz I'm having a little trouble seeing the changes in the dif, would you be willing to just make a pull request with the changes and I'll scrap this one?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,237,2017-06-05T18:38:00Z,2017-06-06T00:45:36Z,2017-06-06T03:24:13Z,MERGED,True,32,24,1,https://github.com/seware74,CNC_Functions.h cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/237,https://github.com/seware74,1,https://github.com/MaslowCNC/Firmware/pull/237,"2 commits in this PR.
First commit:

Redundant uppercases removed
abs() changed to only supply variable as argument (required by arduino version of abs)
changes to while loops that were using abs in the iterators unnecessarily in CNC_Functions.h

Second commit:

Makes the strings, passed as parameters in CNC_Functions.h be passed by reference

On the real hardware (sans motors and encoders) everything seems to be working.","2 commits in this PR.
First commit:

Redundant uppercases removed
abs() changed to only supply variable as argument (required by arduino version of abs)
changes to while loops that were using abs in the iterators unnecessarily in CNC_Functions.h

Second commit:

Makes the strings, passed as parameters in CNC_Functions.h be passed by reference

On the real hardware (sans motors and encoders) everything seems to be working.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,237,2017-06-05T18:38:00Z,2017-06-06T00:45:36Z,2017-06-06T03:24:13Z,MERGED,True,32,24,1,https://github.com/seware74,CNC_Functions.h cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/237,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/237#issuecomment-306269813,"2 commits in this PR.
First commit:

Redundant uppercases removed
abs() changed to only supply variable as argument (required by arduino version of abs)
changes to while loops that were using abs in the iterators unnecessarily in CNC_Functions.h

Second commit:

Makes the strings, passed as parameters in CNC_Functions.h be passed by reference

On the real hardware (sans motors and encoders) everything seems to be working.",Love it! I'll run some quick tests and then merge.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,237,2017-06-05T18:38:00Z,2017-06-06T00:45:36Z,2017-06-06T03:24:13Z,MERGED,True,32,24,1,https://github.com/seware74,CNC_Functions.h cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/237,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/237#issuecomment-306349678,"2 commits in this PR.
First commit:

Redundant uppercases removed
abs() changed to only supply variable as argument (required by arduino version of abs)
changes to while loops that were using abs in the iterators unnecessarily in CNC_Functions.h

Second commit:

Makes the strings, passed as parameters in CNC_Functions.h be passed by reference

On the real hardware (sans motors and encoders) everything seems to be working.","These changes all look fantastic, and after running some test cuts they seem to work smoothly. Great job and thank you for the contribution!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,237,2017-06-05T18:38:00Z,2017-06-06T00:45:36Z,2017-06-06T03:24:13Z,MERGED,True,32,24,1,https://github.com/seware74,CNC_Functions.h cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/237,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/237#issuecomment-306355550,"2 commits in this PR.
First commit:

Redundant uppercases removed
abs() changed to only supply variable as argument (required by arduino version of abs)
changes to while loops that were using abs in the iterators unnecessarily in CNC_Functions.h

Second commit:

Makes the strings, passed as parameters in CNC_Functions.h be passed by reference

On the real hardware (sans motors and encoders) everything seems to be working.","@seware74 I had to put back on of the abs() calls in #239 because some of the arcs were cutting in the wrong direction. I agree with your change. The way it is implemented is not intuitive from reading the code so I'm going to work on getting rid of the abs() again.
I feel like I can see that the lines are processing more quickly with your changes (especially not copying strings) but maybe it's just a placebo effect because I know it's better.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,237,2017-06-05T18:38:00Z,2017-06-06T00:45:36Z,2017-06-06T03:24:13Z,MERGED,True,32,24,1,https://github.com/seware74,CNC_Functions.h cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/237,https://github.com/seware74,5,https://github.com/MaslowCNC/Firmware/pull/237#issuecomment-306371166,"2 commits in this PR.
First commit:

Redundant uppercases removed
abs() changed to only supply variable as argument (required by arduino version of abs)
changes to while loops that were using abs in the iterators unnecessarily in CNC_Functions.h

Second commit:

Makes the strings, passed as parameters in CNC_Functions.h be passed by reference

On the real hardware (sans motors and encoders) everything seems to be working.","That is the advantage of having full equipment to test with. Glad you were able to correct it.
-------- Original message --------From: BarbourSmith <notifications@github.com> Date: 6/5/17  8:28 PM  (GMT-06:00) To: MaslowCNC/Firmware <Firmware@noreply.github.com> Cc: seware74 <seware74@gmail.com>, Mention <mention@noreply.github.com> Subject: Re: [MaslowCNC/Firmware] CNC_Functions.h cleanup (#237) 
@seware74 I had to put back on of the abs() calls in #239 because some of the arcs were cutting in the wrong direction. I agree with your change. The way it is implemented is not intuitive from reading the code so I'm going to work on getting rid of the abs() again.
I feel like I can see that the lines are processing more quickly with your changes (especially not copying strings) but maybe it's just a placebo effect because I know it's better.

‚Äî
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.








{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/MaslowCNC/Firmware"",""title"":""MaslowCNC/Firmware"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/MaslowCNC/Firmware""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@BarbourSmith in #237: @seware74 I had to put back on of the abs() calls in #239 because some of the arcs were cutting in the wrong direction. I agree with your change. The way it is implemented is not intuitive from reading the code so I'm going to work on getting rid of the abs() again.\r\n\r\nI feel like I can see that the lines are processing more quickly with your changes (especially not copying strings) but maybe it's just a placebo effect because I know it's better.""}],""action"":{""name"":""View Pull Request"",""url"":""#237 (comment)""}}}",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,238,2017-06-05T19:19:14Z,2017-06-05T19:20:03Z,2017-06-05T19:20:39Z,MERGED,True,47,6,1,https://github.com/BarbourSmith,Add a pause command which pauses the machine,1,[],https://github.com/MaslowCNC/Firmware/pull/238,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/238,"Right now pause fature is just used while doing manual depth
adjustments. Fix for Ground Control issue #284","Right now pause fature is just used while doing manual depth
adjustments. Fix for Ground Control issue #284",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,239,2017-06-06T01:20:32Z,2017-06-06T01:25:08Z,2017-06-06T01:25:10Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Put back in abs() on final Number Of Steps,1,[],https://github.com/MaslowCNC/Firmware/pull/239,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/239,"Had to put back in the abs() on final number of steps. It appears that
it needs to be negitive some times to convey information about which way
the arc is being cut.
This should be handled in a more clear way because why the abs() is
needed is not clear from reading the code.","Had to put back in the abs() on final number of steps. It appears that
it needs to be negitive some times to convey information about which way
the arc is being cut.
This should be handled in a more clear way because why the abs() is
needed is not clear from reading the code.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,240,2017-06-06T02:12:48Z,2017-06-06T02:48:31Z,2017-06-06T02:48:33Z,MERGED,True,13,5,1,https://github.com/BarbourSmith,Fix wing cutout,3,[],https://github.com/MaslowCNC/Firmware/pull/240,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/240,Fix an issue with the way feedrate is set in G1 vs G2. Global feedrate was not being set or constrained in G2 commands,Fix an issue with the way feedrate is set in G1 vs G2. Global feedrate was not being set or constrained in G2 commands,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,241,2017-06-06T21:32:46Z,2017-06-07T02:16:03Z,2017-06-07T02:16:03Z,MERGED,True,21,14,3,https://github.com/seware74,delay calc and machine geometry optmizing,2,[],https://github.com/MaslowCNC/Firmware/pull/241,https://github.com/seware74,1,https://github.com/MaslowCNC/Firmware/pull/241,"Moved delay calculations outside of while loops in CNC_Functions. No need to recalc within loop that I can find.
Moved machine geometry ""half"" calcs out of functions, to class scope. No need to recalc that I can find.","Moved delay calculations outside of while loops in CNC_Functions. No need to recalc within loop that I can find.
Moved machine geometry ""half"" calcs out of functions, to class scope. No need to recalc that I can find.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,242,2017-06-06T22:26:44Z,2017-06-07T02:15:55Z,2017-06-07T02:15:55Z,MERGED,True,46,73,6,https://github.com/andymillernz,RingBuffer fixes and other tweaks,2,[],https://github.com/MaslowCNC/Firmware/pull/242,https://github.com/andymillernz,1,https://github.com/MaslowCNC/Firmware/pull/242,"Fix for buffer sizing etc in Ringbuffer - change of function name from ""size"" to ""length"" to match Arduino library better.
Increased Serial library TX and RX buffer sizes - can probably be adjusted back down as bug was likely fixed in GroundControl _write function however doesn't hurt (until we need more memory)
Changes to some log messages (optional) :)","Fix for buffer sizing etc in Ringbuffer - change of function name from ""size"" to ""length"" to match Arduino library better.
Increased Serial library TX and RX buffer sizes - can probably be adjusted back down as bug was likely fixed in GroundControl _write function however doesn't hurt (until we need more memory)
Changes to some log messages (optional) :)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,243,2017-06-07T02:24:30Z,2017-06-07T02:24:40Z,2017-06-07T02:24:42Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,remove P:,1,[],https://github.com/MaslowCNC/Firmware/pull/243,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/243,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,244,2017-06-07T05:32:56Z,2017-07-17T17:47:43Z,2017-07-17T18:33:55Z,MERGED,True,93,87,12,https://github.com/seware74,Parameters optimizing and another abs issue,5,[],https://github.com/MaslowCNC/Firmware/pull/244,https://github.com/seware74,1,https://github.com/MaslowCNC/Firmware/pull/244,"On arduino, any parameter passed that is larger than  8 bits should be passed as a reference (or pointer). Params that are read-only in the called function should be qualified as const to prevent accidental modification of the referenced variable. Thusly, (almost) all of the parameters in the internal classes that are larger than a byte have been changed to a reference. Those that should be read-only (which is most) are now qualified as const. A few that were being changed locally (as a temporary variable) within the called function have been left alone, so that the called function has a local copy to modify (which is not ""right"" per se, but easy and still safe) Many variables were change across the classes. Testing OK on the board(without motors or encoder feedback) when tested with GroundControl and a test gcode file, but should be tested fully due to the large amount of changes.


There was a probable issue in Axis::error. A call to abs() was being made with encoder.read() within. Because arduino implements abs() as a DEFINE, the parameter to it is referenced 3 times. In this case it would cause encoder.read() to be executed 3 times. The evaluation would be done on the first two calls but the returned value would be from the last. Probably not the desired behavior, though I think this is only being used in debug serial messages, currently. Modified to store the return from encoder.read() and call abs() with the stored variable. Because this could have been returning a wrong value since it's implementation, it should be tested fully as well, though it also perform as expected on the board, when tested with GroundControl and a test gcode file.","On arduino, any parameter passed that is larger than  8 bits should be passed as a reference (or pointer). Params that are read-only in the called function should be qualified as const to prevent accidental modification of the referenced variable. Thusly, (almost) all of the parameters in the internal classes that are larger than a byte have been changed to a reference. Those that should be read-only (which is most) are now qualified as const. A few that were being changed locally (as a temporary variable) within the called function have been left alone, so that the called function has a local copy to modify (which is not ""right"" per se, but easy and still safe) Many variables were change across the classes. Testing OK on the board(without motors or encoder feedback) when tested with GroundControl and a test gcode file, but should be tested fully due to the large amount of changes.


There was a probable issue in Axis::error. A call to abs() was being made with encoder.read() within. Because arduino implements abs() as a DEFINE, the parameter to it is referenced 3 times. In this case it would cause encoder.read() to be executed 3 times. The evaluation would be done on the first two calls but the returned value would be from the last. Probably not the desired behavior, though I think this is only being used in debug serial messages, currently. Modified to store the return from encoder.read() and call abs() with the stored variable. Because this could have been returning a wrong value since it's implementation, it should be tested fully as well, though it also perform as expected on the board, when tested with GroundControl and a test gcode file.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,244,2017-06-07T05:32:56Z,2017-07-17T17:47:43Z,2017-07-17T18:33:55Z,MERGED,True,93,87,12,https://github.com/seware74,Parameters optimizing and another abs issue,5,[],https://github.com/MaslowCNC/Firmware/pull/244,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/244#issuecomment-306700890,"On arduino, any parameter passed that is larger than  8 bits should be passed as a reference (or pointer). Params that are read-only in the called function should be qualified as const to prevent accidental modification of the referenced variable. Thusly, (almost) all of the parameters in the internal classes that are larger than a byte have been changed to a reference. Those that should be read-only (which is most) are now qualified as const. A few that were being changed locally (as a temporary variable) within the called function have been left alone, so that the called function has a local copy to modify (which is not ""right"" per se, but easy and still safe) Many variables were change across the classes. Testing OK on the board(without motors or encoder feedback) when tested with GroundControl and a test gcode file, but should be tested fully due to the large amount of changes.


There was a probable issue in Axis::error. A call to abs() was being made with encoder.read() within. Because arduino implements abs() as a DEFINE, the parameter to it is referenced 3 times. In this case it would cause encoder.read() to be executed 3 times. The evaluation would be done on the first two calls but the returned value would be from the last. Probably not the desired behavior, though I think this is only being used in debug serial messages, currently. Modified to store the return from encoder.read() and call abs() with the stored variable. Because this could have been returning a wrong value since it's implementation, it should be tested fully as well, though it also perform as expected on the board, when tested with GroundControl and a test gcode file.","This seems to run OK, but not sure how to test for the Axis::error change.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,244,2017-06-07T05:32:56Z,2017-07-17T17:47:43Z,2017-07-17T18:33:55Z,MERGED,True,93,87,12,https://github.com/seware74,Parameters optimizing and another abs issue,5,[],https://github.com/MaslowCNC/Firmware/pull/244,https://github.com/seware74,3,https://github.com/MaslowCNC/Firmware/pull/244#issuecomment-307184439,"On arduino, any parameter passed that is larger than  8 bits should be passed as a reference (or pointer). Params that are read-only in the called function should be qualified as const to prevent accidental modification of the referenced variable. Thusly, (almost) all of the parameters in the internal classes that are larger than a byte have been changed to a reference. Those that should be read-only (which is most) are now qualified as const. A few that were being changed locally (as a temporary variable) within the called function have been left alone, so that the called function has a local copy to modify (which is not ""right"" per se, but easy and still safe) Many variables were change across the classes. Testing OK on the board(without motors or encoder feedback) when tested with GroundControl and a test gcode file, but should be tested fully due to the large amount of changes.


There was a probable issue in Axis::error. A call to abs() was being made with encoder.read() within. Because arduino implements abs() as a DEFINE, the parameter to it is referenced 3 times. In this case it would cause encoder.read() to be executed 3 times. The evaluation would be done on the first two calls but the returned value would be from the last. Probably not the desired behavior, though I think this is only being used in debug serial messages, currently. Modified to store the return from encoder.read() and call abs() with the stored variable. Because this could have been returning a wrong value since it's implementation, it should be tested fully as well, though it also perform as expected on the board, when tested with GroundControl and a test gcode file.","Made a change to while loop in Kinematics::Inverse to eliminate some calls to _MyTrig()  and calculation of the Criteria variables on the final iteration of the loop, that appear to be unnecessary in that last iteration. (That is... the values that these calls modify are unused in the final iteration of Inverse and are unused by the function calling Inverse.) <Crikes... it was easier to spot and fix than it is to explain.>",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,244,2017-06-07T05:32:56Z,2017-07-17T17:47:43Z,2017-07-17T18:33:55Z,MERGED,True,93,87,12,https://github.com/seware74,Parameters optimizing and another abs issue,5,[],https://github.com/MaslowCNC/Firmware/pull/244,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/244#issuecomment-315829692,"On arduino, any parameter passed that is larger than  8 bits should be passed as a reference (or pointer). Params that are read-only in the called function should be qualified as const to prevent accidental modification of the referenced variable. Thusly, (almost) all of the parameters in the internal classes that are larger than a byte have been changed to a reference. Those that should be read-only (which is most) are now qualified as const. A few that were being changed locally (as a temporary variable) within the called function have been left alone, so that the called function has a local copy to modify (which is not ""right"" per se, but easy and still safe) Many variables were change across the classes. Testing OK on the board(without motors or encoder feedback) when tested with GroundControl and a test gcode file, but should be tested fully due to the large amount of changes.


There was a probable issue in Axis::error. A call to abs() was being made with encoder.read() within. Because arduino implements abs() as a DEFINE, the parameter to it is referenced 3 times. In this case it would cause encoder.read() to be executed 3 times. The evaluation would be done on the first two calls but the returned value would be from the last. Probably not the desired behavior, though I think this is only being used in debug serial messages, currently. Modified to store the return from encoder.read() and call abs() with the stored variable. Because this could have been returning a wrong value since it's implementation, it should be tested fully as well, though it also perform as expected on the board, when tested with GroundControl and a test gcode file.","I'm sorry it took me so long to merge this @seware74. I was really hesitant to make any sweeping changes like this because we were seeing such strange behavior and every time something changed it seemed to break something else in unexpected ways. Now that we've figured out we were having memory issues I feel much better about making changes because I feel confident we're not going to have unexpected effects or if we do we'll know how to track them down quickly. This PR is full of excellent changes, thank you for making it! üëç üëç üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,244,2017-06-07T05:32:56Z,2017-07-17T17:47:43Z,2017-07-17T18:33:55Z,MERGED,True,93,87,12,https://github.com/seware74,Parameters optimizing and another abs issue,5,[],https://github.com/MaslowCNC/Firmware/pull/244,https://github.com/seware74,5,https://github.com/MaslowCNC/Firmware/pull/244#issuecomment-315842232,"On arduino, any parameter passed that is larger than  8 bits should be passed as a reference (or pointer). Params that are read-only in the called function should be qualified as const to prevent accidental modification of the referenced variable. Thusly, (almost) all of the parameters in the internal classes that are larger than a byte have been changed to a reference. Those that should be read-only (which is most) are now qualified as const. A few that were being changed locally (as a temporary variable) within the called function have been left alone, so that the called function has a local copy to modify (which is not ""right"" per se, but easy and still safe) Many variables were change across the classes. Testing OK on the board(without motors or encoder feedback) when tested with GroundControl and a test gcode file, but should be tested fully due to the large amount of changes.


There was a probable issue in Axis::error. A call to abs() was being made with encoder.read() within. Because arduino implements abs() as a DEFINE, the parameter to it is referenced 3 times. In this case it would cause encoder.read() to be executed 3 times. The evaluation would be done on the first two calls but the returned value would be from the last. Probably not the desired behavior, though I think this is only being used in debug serial messages, currently. Modified to store the return from encoder.read() and call abs() with the stored variable. Because this could have been returning a wrong value since it's implementation, it should be tested fully as well, though it also perform as expected on the board, when tested with GroundControl and a test gcode file.","No worries. ¬†I've been busy with summer stuff so little time in the code lately.¬†
‚Ä¶
-------- Original message --------From: BarbourSmith <notifications@github.com> Date: 7/17/17  12:51 PM  (GMT-06:00) To: MaslowCNC/Firmware <Firmware@noreply.github.com> Cc: seware74 <seware74@gmail.com>, Mention <mention@noreply.github.com> Subject: Re: [MaslowCNC/Firmware] Parameters optimizing and another abs issue
¬† (#244)
I'm sorry it took me so long to merge this @seware74. I was really hesitant to make any sweeping changes like this because we were seeing such strange behavior and every time something changed it seemed to break something else in unexpected ways. Now that we've figured out we were having memory issues I feel much better about making changes because I feel confident we're not going to have unexpected effects or if we do we'll know how to track them down quickly. This PR is full of excellent changes, thank you for making it! üëç üëç üëç üëç

‚Äî
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.








{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/MaslowCNC/Firmware"",""title"":""MaslowCNC/Firmware"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/MaslowCNC/Firmware""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@BarbourSmith in #244: I'm sorry it took me so long to merge this @seware74. I was really hesitant to make any sweeping changes like this because we were seeing such strange behavior and every time something changed it seemed to break something else in unexpected ways. Now that we've figured out we were having memory issues I feel much better about making changes because I feel confident we're not going to have unexpected effects or if we do we'll know how to track them down quickly. This PR is full of excellent changes, thank you for making it! üëç üëç üëç üëç ""}],""action"":{""name"":""View Pull Request"",""url"":""#244 (comment)""}}}",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,246,2017-06-10T22:35:58Z,2017-06-10T23:25:59Z,2017-06-10T23:26:01Z,MERGED,True,14,7,1,https://github.com/BarbourSmith,Fix for Tim's test shape,5,[],https://github.com/MaslowCNC/Firmware/pull/246,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/246,Fix for an issue where the machine couldn't destinguish between a full circle and a command to not move at all (becaue they begin and end in the same place).  Also a fix for G02/G03 not being recognized without the G03/G03 prefiace,Fix for an issue where the machine couldn't destinguish between a full circle and a command to not move at all (becaue they begin and end in the same place).  Also a fix for G02/G03 not being recognized without the G03/G03 prefiace,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,247,2017-06-12T20:40:34Z,2017-06-12T20:45:38Z,2017-06-12T20:45:40Z,MERGED,True,60,11,5,https://github.com/BarbourSmith,Reduce jitter when calibrating machine,4,[],https://github.com/MaslowCNC/Firmware/pull/247,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/247,Reduce jitter when calibrating the machine,Reduce jitter when calibrating the machine,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,248,2017-06-12T23:39:49Z,2017-06-12T23:40:57Z,2017-06-12T23:41:00Z,MERGED,True,3,1,1,https://github.com/BarbourSmith,Fix right motor not turning,1,[],https://github.com/MaslowCNC/Firmware/pull/248,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/248,"For some reason the compiler is optimizing out some of our functions (or
at least I think that's what's happening) printing the variables makes
them 'used' so they don't disapear, a temporary fix","For some reason the compiler is optimizing out some of our functions (or
at least I think that's what's happening) printing the variables makes
them 'used' so they don't disapear, a temporary fix",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,249,2017-06-16T18:44:03Z,2017-06-16T18:51:46Z,2017-06-16T18:51:48Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Make error function return value rather than absolute value,1,[],https://github.com/MaslowCNC/Firmware/pull/249,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/249,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,250,2017-06-17T20:07:30Z,2017-06-17T20:11:32Z,2017-06-17T20:11:34Z,MERGED,True,1,13,1,https://github.com/BarbourSmith,Fix calibratin process,2,[],https://github.com/MaslowCNC/Firmware/pull/250,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/250,"Remove code which was meant to catch when the inital state was unexpected, but which was running too often","Remove code which was meant to catch when the inital state was unexpected, but which was running too often",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,251,2017-06-20T16:46:46Z,2017-06-20T18:00:52Z,2017-07-27T18:32:16Z,CLOSED,False,36,83,5,https://github.com/BarbourSmith,Read check sum,11,[],https://github.com/MaslowCNC/Firmware/pull/251,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/251,Check to see if buffers are overflowing,Check to see if buffers are overflowing,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,251,2017-06-20T16:46:46Z,2017-06-20T18:00:52Z,2017-07-27T18:32:16Z,CLOSED,False,36,83,5,https://github.com/BarbourSmith,Read check sum,11,[],https://github.com/MaslowCNC/Firmware/pull/251,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/251#issuecomment-309839365,Check to see if buffers are overflowing,This pull request brings in too many changes in too many places at once,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,252,2017-06-20T17:43:22Z,2017-06-20T17:57:20Z,2017-06-20T17:57:30Z,MERGED,True,7,5,1,https://github.com/BarbourSmith,Double check calibration process,3,[],https://github.com/MaslowCNC/Firmware/pull/252,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/252,Make the jog functions work off of machine position not machine target to ensure that sprockets always rotate the correct direction,Make the jog functions work off of machine position not machine target to ensure that sprockets always rotate the correct direction,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,253,2017-06-20T19:04:34Z,2017-06-20T19:10:26Z,2017-06-20T19:15:43Z,MERGED,True,12,23,5,https://github.com/BarbourSmith,Change axis.write to type void and clean up prints,3,[],https://github.com/MaslowCNC/Firmware/pull/253,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/253,"Remove a number of prints that were cluttering up the terminal and change axis.write() to be type void to prevent the compiler from ""optimizing"" it out of existance","Remove a number of prints that were cluttering up the terminal and change axis.write() to be type void to prevent the compiler from ""optimizing"" it out of existance",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,254,2017-06-20T23:43:42Z,2017-06-20T23:55:07Z,2017-06-20T23:55:08Z,MERGED,True,5,4,1,https://github.com/BarbourSmith,Read feed on B9,1,[],https://github.com/MaslowCNC/Firmware/pull/254,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/254,Let Ground Control specify a feedrate on the B9 command,Let Ground Control specify a feedrate on the B9 command,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,255,2017-06-28T16:41:51Z,2017-06-28T16:41:58Z,2017-06-28T16:42:01Z,MERGED,True,46,0,1,https://github.com/BarbourSmith,Create CODE_OF_CONDUCT.md,1,[],https://github.com/MaslowCNC/Firmware/pull/255,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/255,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,256,2017-07-01T18:52:01Z,2017-07-01T18:53:18Z,2017-07-01T18:53:21Z,MERGED,True,20,9,3,https://github.com/BarbourSmith,Fix PWM on pin 11 for new PCB,3,[],https://github.com/MaslowCNC/Firmware/pull/256,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/256,The timer1 library disables PWM on pin 11 which we use to drive the left motor on the new PCB (bummer). This PR fixes the issue by using the timer1 library PWM module instead of the arduino PWM module.,The timer1 library disables PWM on pin 11 which we use to drive the left motor on the new PCB (bummer). This PR fixes the issue by using the timer1 library PWM module instead of the arduino PWM module.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,256,2017-07-01T18:52:01Z,2017-07-01T18:53:18Z,2017-07-01T18:53:21Z,MERGED,True,20,9,3,https://github.com/BarbourSmith,Fix PWM on pin 11 for new PCB,3,[],https://github.com/MaslowCNC/Firmware/pull/256,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/256#issuecomment-312449432,The timer1 library disables PWM on pin 11 which we use to drive the left motor on the new PCB (bummer). This PR fixes the issue by using the timer1 library PWM module instead of the arduino PWM module.,"Description says pin 11, actually pin 12 üòí",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,258,2017-07-01T21:41:38Z,2017-07-01T21:42:11Z,2017-07-01T21:42:13Z,MERGED,True,58,17,2,https://github.com/BarbourSmith,Add framework for detecting board revision,3,[],https://github.com/MaslowCNC/Firmware/pull/258,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/258,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,259,2017-07-01T22:15:18Z,2017-07-01T22:17:01Z,2017-07-01T22:17:03Z,MERGED,True,44,11,3,https://github.com/BarbourSmith,New pcb version,14,[],https://github.com/MaslowCNC/Firmware/pull/259,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/259,"Add correct pinouts for new PCB design, automatically detected","Add correct pinouts for new PCB design, automatically detected",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,260,2017-07-01T23:12:08Z,2017-07-01T23:12:53Z,2017-07-01T23:12:56Z,MERGED,True,0,1,1,https://github.com/BarbourSmith,Fix for buffer overflow when using manual z-axis,1,[],https://github.com/MaslowCNC/Firmware/pull/260,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/260,"When the manual z-axis was triggered, it was signaling that it needed
one extra line of g-code, eventually leading to buffer overflow","When the manual z-axis was triggered, it was signaling that it needed
one extra line of g-code, eventually leading to buffer overflow",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,261,2017-07-03T00:01:06Z,2017-07-03T00:01:25Z,2017-07-03T00:01:27Z,MERGED,True,4,2,1,https://github.com/BarbourSmith,Swap pins for encoder direction on z-axis motor new PCB,1,[],https://github.com/MaslowCNC/Firmware/pull/261,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/261,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/263,Static strings can be moved to PROGMEM using the F() macro.,Static strings can be moved to PROGMEM using the F() macro.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315786630,Static strings can be moved to PROGMEM using the F() macro.,"In practice, this seems to free up just over 700 bytes of dynamic ram when measured in the firmware running.",True,"{'HEART': ['https://github.com/BarbourSmith'], 'THUMBS_UP': ['https://github.com/BarbourSmith'], 'HOORAY': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315822699,Static strings can be moved to PROGMEM using the F() macro.,"Works great for me! I didn't even think that all of the debut/general printing strings would consume memory like that. I was mostly thinking about the _axisName strings. Great catch, great solution. A classic example of how open source makes things better. Thank you for the excellent contribution!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315830782,Static strings can be moved to PROGMEM using the F() macro.,"Glad you could test it. There might be further ‚Äòheap polishing‚Äô possible by reserving memory for the working strings like lineToReturn in RingBuffer.cpp, see:
https://learn.adafruit.com/memories-of-an-arduino/optimizing-sram#reserve-your-strings <https://learn.adafruit.com/memories-of-an-arduino/optimizing-sram#reserve-your-strings>

 <https://learn.adafruit.com/memories-of-an-arduino/optimizing-sram#reserve-your-strings>


 <https://learn.adafruit.com/memories-of-an-arduino/optimizing-sram#reserve-your-strings>On Jul 17, 2017, at 10:26 AM, BarbourSmith <notifications@github.com> wrote:
‚Ä¶

 Works great for me! I didn't even think that all of the debut/general printing strings would consume memory like that. I was mostly thinking about the _axisName strings. Great catch, great solution. A classic example of how open source makes things better. Thank you for the excellent contribution!

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub <#263 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABw_s-R-k3YP_F3ruxqcqL40p3d6dWLyks5sO5k3gaJpZM4OZkbl>.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315833845,Static strings can be moved to PROGMEM using the F() macro.,That's a great point about reserving memory for the strings. I bet we're fragmenting things a lot right now with all our string manipulations.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315834740,Static strings can be moved to PROGMEM using the F() macro.,"Printing shouldn‚Äôt matter, but decoding the gcode strings seems like a likely place to look. You would know best, though. What other strings get frequently altered?
‚Ä¶
 On Jul 17, 2017, at 11:04 AM, BarbourSmith ***@***.***> wrote:

 That's a great point about reserving memory for the strings. I bet we're fragmenting things a lot right now with all our string manipulations.

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315845633,Static strings can be moved to PROGMEM using the F() macro.,I think you are right that the strings around decoding the gcode are frequently altered the most. The readLine() function in RingBuffer in particular I think is probably giving us trouble because it grows a string one letter at a time by appending to it which is kinda the worst case scenario if I understand the article right,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315853886,Static strings can be moved to PROGMEM using the F() macro.,"I think so to. Is there a limit to how long a line can be? We could reserve slightly more than that. If there is no limit, maybe we should set one?
‚Ä¶
 On Jul 17, 2017, at 11:46 AM, BarbourSmith ***@***.***> wrote:

 I think you are right that the strings around decoding the gcode are frequently altered the most. The readLine() function in RingBuffer in particular I think is probably giving us trouble because it grows a string one letter at a time by appending to it which is kinda the worst case scenario if I understand the article right

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/BarbourSmith,9,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315861508,Static strings can be moved to PROGMEM using the F() macro.,"There isn't a limit for how long a line can be, but I agree that is a problem. We added code to truncate decimals to four places recently which will put an effective limit on how long a line can realistically be",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/davidelang,10,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315865695,Static strings can be moved to PROGMEM using the F() macro.,"don't assume that the sender will truncate the numbers, do it in the firmware if
you want to depend on it.
kk",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/blurfl,11,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315868069,Static strings can be moved to PROGMEM using the F() macro.,"If we reserve for the string, we should guard that the string never grows beyond that. I think grbl has a line limit (70? 80?). I‚Äôll try to find it.
‚Ä¶
 On Jul 17, 2017, at 12:59 PM, David Lang ***@***.***> wrote:

 don't assume that the sender will truncate the numbers, do it in the firmware if
 you want to depend on it.
 kk
 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/davidelang,12,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315876422,Static strings can be moved to PROGMEM using the F() macro.,"start by setting it to the buffer size, with the send, ok protocol, things get
really messy if you try to send more than a buffer's worth of data.

so with a 128 byte buffer, start off with message limits that size (or slightly
larger if you want to be careful)",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,263,2017-07-17T05:47:15Z,2017-07-17T17:24:29Z,2017-07-17T21:54:25Z,MERGED,True,78,78,5,https://github.com/blurfl,Move static strings into PROGMEM,3,[],https://github.com/MaslowCNC/Firmware/pull/263,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/263#issuecomment-315896490,Static strings can be moved to PROGMEM using the F() macro.,"If we reserve memory, the ringBuffer.readline process needs to be protected from a lost newline which could read into it beyond the reserve.
grbl has a 50 character limit on lines; if we‚Äôre aiming for compatibility, we should honor that.
‚Ä¶
 On Jul 17, 2017, at 1:40 PM, David Lang ***@***.***> wrote:

 start by setting it to the buffer size, with the send, ok protocol, things get
 really messy if you try to send more than a buffer's worth of data.

 so with a 128 byte buffer, start off with message limits that size (or slightly
 larger if you want to be careful)

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,264,2017-07-17T17:31:43Z,2017-07-17T17:32:57Z,2017-07-17T17:33:30Z,MERGED,True,9,9,3,https://github.com/BarbourSmith,Reduce buffer size,2,[],https://github.com/MaslowCNC/Firmware/pull/264,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/264,Free up some more memory on the Arduino by reducing the size of the character buffer to 128 and shortening the names of the axis,Free up some more memory on the Arduino by reducing the size of the character buffer to 128 and shortening the names of the axis,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,267,2017-07-25T02:43:05Z,2017-07-25T17:47:52Z,2018-01-17T22:30:54Z,MERGED,True,14,5,1,https://github.com/krkeegan,Fix ZAxis Feedrate and Calculation of Total Distance,4,[],https://github.com/MaslowCNC/Firmware/pull/267,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/267,"Fixed the calculation of moveDist which if the starting depth was negative and the finishing depth was positive was returning the wrong value.
Also discovered that the hardcoded feedrate for zaxis moves of 45mm/min was too much for my motor to keep up with.  I believe this was the main cause for the incomplete retraction before moving.
Now, the feedrate can be set by Gcode, but its upper bound is limited by the rpm of the motor.  With the stock motor this results in a feedrate of about 40mm/min.  But this number will adjust based on the pitch of the zaxis setting.
Fixes #266","Fixed the calculation of moveDist which if the starting depth was negative and the finishing depth was positive was returning the wrong value.
Also discovered that the hardcoded feedrate for zaxis moves of 45mm/min was too much for my motor to keep up with.  I believe this was the main cause for the incomplete retraction before moving.
Now, the feedrate can be set by Gcode, but its upper bound is limited by the rpm of the motor.  With the stock motor this results in a feedrate of about 40mm/min.  But this number will adjust based on the pitch of the zaxis setting.
Fixes #266",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,267,2017-07-25T02:43:05Z,2017-07-25T17:47:52Z,2018-01-17T22:30:54Z,MERGED,True,14,5,1,https://github.com/krkeegan,Fix ZAxis Feedrate and Calculation of Total Distance,4,[],https://github.com/MaslowCNC/Firmware/pull/267,https://github.com/davidelang,2,https://github.com/MaslowCNC/Firmware/pull/267#issuecomment-317676680,"Fixed the calculation of moveDist which if the starting depth was negative and the finishing depth was positive was returning the wrong value.
Also discovered that the hardcoded feedrate for zaxis moves of 45mm/min was too much for my motor to keep up with.  I believe this was the main cause for the incomplete retraction before moving.
Now, the feedrate can be set by Gcode, but its upper bound is limited by the rpm of the motor.  With the stock motor this results in a feedrate of about 40mm/min.  But this number will adjust based on the pitch of the zaxis setting.
Fixes #266","unless using g0, this should be limited to the feedrate defined by the gcode,
and if the defined feedrate is higher than what any axis can support, the entire
motion should be limited to that rate.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,267,2017-07-25T02:43:05Z,2017-07-25T17:47:52Z,2018-01-17T22:30:54Z,MERGED,True,14,5,1,https://github.com/krkeegan,Fix ZAxis Feedrate and Calculation of Total Distance,4,[],https://github.com/MaslowCNC/Firmware/pull/267,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/267#issuecomment-317800439,"Fixed the calculation of moveDist which if the starting depth was negative and the finishing depth was positive was returning the wrong value.
Also discovered that the hardcoded feedrate for zaxis moves of 45mm/min was too much for my motor to keep up with.  I believe this was the main cause for the incomplete retraction before moving.
Now, the feedrate can be set by Gcode, but its upper bound is limited by the rpm of the motor.  With the stock motor this results in a feedrate of about 40mm/min.  But this number will adjust based on the pitch of the zaxis setting.
Fixes #266","Yes, that is exactly what this does.
Plus it defines the maximum feed rate at what I am able to observe the axis can support.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,267,2017-07-25T02:43:05Z,2017-07-25T17:47:52Z,2018-01-17T22:30:54Z,MERGED,True,14,5,1,https://github.com/krkeegan,Fix ZAxis Feedrate and Calculation of Total Distance,4,[],https://github.com/MaslowCNC/Firmware/pull/267,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/267#issuecomment-317815459,"Fixed the calculation of moveDist which if the starting depth was negative and the finishing depth was positive was returning the wrong value.
Also discovered that the hardcoded feedrate for zaxis moves of 45mm/min was too much for my motor to keep up with.  I believe this was the main cause for the incomplete retraction before moving.
Now, the feedrate can be set by Gcode, but its upper bound is limited by the rpm of the motor.  With the stock motor this results in a feedrate of about 40mm/min.  But this number will adjust based on the pitch of the zaxis setting.
Fixes #266","This is fantastic work. Thanks for the contribution, and great job in the way you integrated it into the existing code!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,269,2017-07-26T01:34:15Z,2017-07-27T01:07:15Z,2018-01-17T22:30:52Z,MERGED,True,11,5,1,https://github.com/krkeegan,Fix Calculation of Angle in Arc Function,1,[],https://github.com/MaslowCNC/Firmware/pull/269,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/269,"The calculation of theta was wrong.  A good example was theta would equal zero for any cut in quadrant 2 ending in quadrant 3, where the start and end angles were the same.
To fix:

flip the calculation so it is ending point minus starting point.
The values of atan2 are between -pi and pi.  So we need to normalize to 2pi

No longer need to specifically catch the edge case of a full circle as this is now caught as part of the regular processing.
Fixes #268","The calculation of theta was wrong.  A good example was theta would equal zero for any cut in quadrant 2 ending in quadrant 3, where the start and end angles were the same.
To fix:

flip the calculation so it is ending point minus starting point.
The values of atan2 are between -pi and pi.  So we need to normalize to 2pi

No longer need to specifically catch the edge case of a full circle as this is now caught as part of the regular processing.
Fixes #268",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,269,2017-07-26T01:34:15Z,2017-07-27T01:07:15Z,2018-01-17T22:30:52Z,MERGED,True,11,5,1,https://github.com/krkeegan,Fix Calculation of Angle in Arc Function,1,[],https://github.com/MaslowCNC/Firmware/pull/269,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/269#issuecomment-317921018,"The calculation of theta was wrong.  A good example was theta would equal zero for any cut in quadrant 2 ending in quadrant 3, where the start and end angles were the same.
To fix:

flip the calculation so it is ending point minus starting point.
The values of atan2 are between -pi and pi.  So we need to normalize to 2pi

No longer need to specifically catch the edge case of a full circle as this is now caught as part of the regular processing.
Fixes #268","That one was a rough one for me.  It has been a long time since I did any real trig and I don't think I have ever used atan2 before.
Anyways, I was able to reproduce the error both clockwise and counterclockwise.  I have sample files if anyone else wants to try.  After this change, no more errors.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,269,2017-07-26T01:34:15Z,2017-07-27T01:07:15Z,2018-01-17T22:30:52Z,MERGED,True,11,5,1,https://github.com/krkeegan,Fix Calculation of Angle in Arc Function,1,[],https://github.com/MaslowCNC/Firmware/pull/269,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/269#issuecomment-318228046,"The calculation of theta was wrong.  A good example was theta would equal zero for any cut in quadrant 2 ending in quadrant 3, where the start and end angles were the same.
To fix:

flip the calculation so it is ending point minus starting point.
The values of atan2 are between -pi and pi.  So we need to normalize to 2pi

No longer need to specifically catch the edge case of a full circle as this is now caught as part of the regular processing.
Fixes #268","Love it! Great work!
I waited to merge until after the weekly release just so I would have more time to test. These trig things can be tricky with all sorts of weird corner cases",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,269,2017-07-26T01:34:15Z,2017-07-27T01:07:15Z,2018-01-17T22:30:52Z,MERGED,True,11,5,1,https://github.com/krkeegan,Fix Calculation of Angle in Arc Function,1,[],https://github.com/MaslowCNC/Firmware/pull/269,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/269#issuecomment-318229263,"The calculation of theta was wrong.  A good example was theta would equal zero for any cut in quadrant 2 ending in quadrant 3, where the start and end angles were the same.
To fix:

flip the calculation so it is ending point minus starting point.
The values of atan2 are between -pi and pi.  So we need to normalize to 2pi

No longer need to specifically catch the edge case of a full circle as this is now caught as part of the regular processing.
Fixes #268","Another good, solid contribution! üíØ",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,271,2017-07-27T01:30:59Z,2017-07-27T01:33:04Z,2017-07-27T01:34:05Z,MERGED,True,7,4,3,https://github.com/BarbourSmith,Reduce string memory use,4,[],https://github.com/MaslowCNC/Firmware/pull/271,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/271,Reserve space for strings to prevent stack fragmentation,Reserve space for strings to prevent stack fragmentation,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/272,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318294251,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap",These put heap info into the log. Unfortunately they didn't show anything that looked useful to my eyes - YMMV.,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318435312,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","I'm going to take a look now.
Not seeing anything might just mean we're looking in the wrong place which would be valuable üëç üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318445893,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","This is fantastic! I agree that I don't see any noticeable changes to he heap as the issue progresses, but it's so cool to be able to look at the heap directly and see how it changes. Great work!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318459611,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","How about a BXX code to make changes to the PID values?
‚Ä¶
 On Jul 27, 2017, at 11:31 AM, BarbourSmith ***@***.***> wrote:

 Closed #272.

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318470449,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","I like it. I also think you are spot on that the PID values are next place to look. By setting  _Ki = 0 in MotorGearboxEncoder.h I was able to make the issue go away.
How do you feel about putting the option to change the PID values in the advanced settings instead of as a Bxx code?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318481416,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","Very interesting! Advanced settings would be a good place for them.
‚Ä¶
 On Jul 27, 2017, at 1:01 PM, BarbourSmith ***@***.***> wrote:

 I like it. I also think you are spot on that the PID values are next place to look. By setting _Ki = 0 in MotorGearboxEncoder.h I was able to make the issue go away.

 How do you feel about putting the option to change the PID values in the advanced settings instead of as a Bxx code?

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318492913,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","Thinking further about this, I think it would be good to include a ‚Äúreset to default values‚Äù button in the same place. Explorers need an escape plan ‚ò∫Ô∏è...
‚Ä¶
 On Jul 27, 2017, at 1:01 PM, BarbourSmith ***@***.***> wrote:

 I like it. I also think you are spot on that the PID values are next place to look. By setting _Ki = 0 in MotorGearboxEncoder.h I was able to make the issue go away.

 How do you feel about putting the option to change the PID values in the advanced settings instead of as a Bxx code?

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,272,2017-07-27T08:22:02Z,2017-07-27T18:31:46Z,2017-07-27T21:59:00Z,CLOSED,False,66,11,4,https://github.com/blurfl,Add Bxx codes for heap inspection,1,[],https://github.com/MaslowCNC/Firmware/pull/272,https://github.com/BarbourSmith,9,https://github.com/MaslowCNC/Firmware/pull/272#issuecomment-318498401,"B12 executes Avrheap.freeListWalk
B13 executes Avrheap.dumpHeap
Both require AvrHeap library from:
https://github.com/RobTillaart/Arduino/tree/master/libraries/AvrHeap","I've been thinking exactly the same thing! üòÄ
I think I might make a forum thread to talk the idea through and get more opinions",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,274,2017-07-27T20:47:48Z,2017-07-27T20:47:54Z,2017-07-27T20:47:57Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Reduce Ki value to 1,1,[],https://github.com/MaslowCNC/Firmware/pull/274,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/274,The integrator was saturating resulting in jerky movements,The integrator was saturating resulting in jerky movements,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,275,2017-07-27T22:02:36Z,2017-07-27T22:03:03Z,2017-07-27T22:03:06Z,MERGED,True,3,7,2,https://github.com/BarbourSmith,Fix jerky motor,1,[],https://github.com/MaslowCNC/Firmware/pull/275,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/275,"The motors were behaving jerkily, adjusting the PID values seems to have fixed the issue, but let's keep an eye on it","The motors were behaving jerkily, adjusting the PID values seems to have fixed the issue, but let's keep an eye on it",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,276,2017-07-28T02:43:17Z,2017-07-28T17:45:45Z,2017-09-25T06:06:56Z,MERGED,True,5,8,1,https://github.com/krkeegan,Catch Rapid Movement When Gcode in Prior Line,1,[],https://github.com/MaslowCNC/Firmware/pull/276,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/276,"Rapid movements were not being executed as rapid when the G0 code was on a prior line.
Also remove unused variable from G1 function.","Rapid movements were not being executed as rapid when the G0 code was on a prior line.
Also remove unused variable from G1 function.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,276,2017-07-28T02:43:17Z,2017-07-28T17:45:45Z,2017-09-25T06:06:56Z,MERGED,True,5,8,1,https://github.com/krkeegan,Catch Rapid Movement When Gcode in Prior Line,1,[],https://github.com/MaslowCNC/Firmware/pull/276,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/276#issuecomment-318687077,"Rapid movements were not being executed as rapid when the G0 code was on a prior line.
Also remove unused variable from G1 function.",Great catch! Thank you! I will test and merge this today,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,276,2017-07-28T02:43:17Z,2017-07-28T17:45:45Z,2017-09-25T06:06:56Z,MERGED,True,5,8,1,https://github.com/krkeegan,Catch Rapid Movement When Gcode in Prior Line,1,[],https://github.com/MaslowCNC/Firmware/pull/276,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/276#issuecomment-318718872,"Rapid movements were not being executed as rapid when the G0 code was on a prior line.
Also remove unused variable from G1 function.",Looks great! Thank you for the contribution!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,278,2017-07-28T21:46:55Z,2017-07-29T01:51:12Z,2017-09-25T06:06:30Z,MERGED,True,32,41,1,https://github.com/krkeegan,"Delay After Each Step, Not Before; Remove Unneeded Variables",1,[],https://github.com/MaslowCNC/Firmware/pull/278,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/278,"The delay should occur after each step has taken place to allow the final step to be occur before the next instruction.  Similarly no delay is needed before executing the first step of an instruction.  The while loop was instead causing the delay to occur before issuing the first movement and not one after the final movement.
Since these delays generally cancel out, I doubt there is much improvement in precision.  Any such improvement would be on the order of sub millimeter anyways.
Also remove unneeded beginingOfLastStep Long variable.  This isn't needed if we use Delay.","The delay should occur after each step has taken place to allow the final step to be occur before the next instruction.  Similarly no delay is needed before executing the first step of an instruction.  The while loop was instead causing the delay to occur before issuing the first movement and not one after the final movement.
Since these delays generally cancel out, I doubt there is much improvement in precision.  Any such improvement would be on the order of sub millimeter anyways.
Also remove unneeded beginingOfLastStep Long variable.  This isn't needed if we use Delay.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,278,2017-07-28T21:46:55Z,2017-07-29T01:51:12Z,2017-09-25T06:06:30Z,MERGED,True,32,41,1,https://github.com/krkeegan,"Delay After Each Step, Not Before; Remove Unneeded Variables",1,[],https://github.com/MaslowCNC/Firmware/pull/278,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/278#issuecomment-318795489,"The delay should occur after each step has taken place to allow the final step to be occur before the next instruction.  Similarly no delay is needed before executing the first step of an instruction.  The while loop was instead causing the delay to occur before issuing the first movement and not one after the final movement.
Since these delays generally cancel out, I doubt there is much improvement in precision.  Any such improvement would be on the order of sub millimeter anyways.
Also remove unneeded beginingOfLastStep Long variable.  This isn't needed if we use Delay.",Great point! This does seem like a better way to do it. Thank you! üëç üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,279,2017-07-29T01:44:15Z,2017-07-29T01:48:36Z,2017-07-29T01:48:39Z,MERGED,True,152,67,8,https://github.com/BarbourSmith,Load PID values from ground control,8,[],https://github.com/MaslowCNC/Firmware/pull/279,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/279,Load PID values from Ground Control and revamp the way that settings are loaded in general to make sure that values are only defined in one place,Load PID values from Ground Control and revamp the way that settings are loaded in general to make sure that values are only defined in one place,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,280,2017-07-29T02:46:53Z,2017-07-29T02:47:23Z,2017-07-29T02:47:34Z,MERGED,True,57,3,4,https://github.com/BarbourSmith,Make switching to new kinematics possible,4,[],https://github.com/MaslowCNC/Firmware/pull/280,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/280,Enables the settings option which switches from quadrilateral kinematics to triangular kinematics to support systems where the chains meet at a point or simulate meeting at a point,Enables the settings option which switches from quadrilateral kinematics to triangular kinematics to support systems where the chains meet at a point or simulate meeting at a point,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,281,2017-07-31T12:35:15Z,2017-07-31T18:03:24Z,2017-07-31T18:03:24Z,MERGED,True,2,0,2,https://github.com/designfrontier,removes the .DS_Store file and updates the .gitignore for repo hygene,1,[],https://github.com/MaslowCNC/Firmware/pull/281,https://github.com/designfrontier,1,https://github.com/MaslowCNC/Firmware/pull/281,"Just removes an OS X specific cache file from the repo and adds the globs to prevent it or any others like it from showing up.
https://en.wikipedia.org/wiki/.DS_Store","Just removes an OS X specific cache file from the repo and adds the globs to prevent it or any others like it from showing up.
https://en.wikipedia.org/wiki/.DS_Store",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,281,2017-07-31T12:35:15Z,2017-07-31T18:03:24Z,2017-07-31T18:03:24Z,MERGED,True,2,0,2,https://github.com/designfrontier,removes the .DS_Store file and updates the .gitignore for repo hygene,1,[],https://github.com/MaslowCNC/Firmware/pull/281,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/281#issuecomment-319148038,"Just removes an OS X specific cache file from the repo and adds the globs to prevent it or any others like it from showing up.
https://en.wikipedia.org/wiki/.DS_Store",Great! Thank you!,True,{'THUMBS_UP': ['https://github.com/designfrontier']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,283,2017-08-04T17:18:14Z,2017-08-04T17:18:21Z,2017-08-04T17:18:24Z,MERGED,True,5,5,1,https://github.com/BarbourSmith,Initialize settings values to 1,1,[],https://github.com/MaslowCNC/Firmware/pull/283,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/283,It seems like bad practice to me to have hard coded default values anywhere in the code so this PR sets all the variables to 1 until they are set by a command from ground control.,It seems like bad practice to me to have hard coded default values anywhere in the code so this PR sets all the variables to 1 until they are set by a command from ground control.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,284,2017-08-05T02:40:48Z,2017-08-05T02:41:08Z,2017-08-05T02:41:11Z,MERGED,True,3,1,1,https://github.com/BarbourSmith,fix manual z-axis,1,[],https://github.com/MaslowCNC/Firmware/pull/284,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/284,Manual z-axis settings were broken by the changes to the way settings are loaded in 0.83,Manual z-axis settings were broken by the changes to the way settings are loaded in 0.83,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,285,2017-08-07T23:01:35Z,2017-08-13T01:38:10Z,2017-08-13T01:38:20Z,MERGED,True,3,1,1,https://github.com/seware74,changed _pid variables to volatile,1,[],https://github.com/MaslowCNC/Firmware/pull/285,https://github.com/seware74,1,https://github.com/MaslowCNC/Firmware/pull/285,_pidSetpoint _pidInput and _pidOutput should be volatile since they are modified and accessed by  multiple execution contexts (ISR and mainline code) to ensure that the value is retrieved from RAM and not a register,_pidSetpoint _pidInput and _pidOutput should be volatile since they are modified and accessed by  multiple execution contexts (ISR and mainline code) to ensure that the value is retrieved from RAM and not a register,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,285,2017-08-07T23:01:35Z,2017-08-13T01:38:10Z,2017-08-13T01:38:20Z,MERGED,True,3,1,1,https://github.com/seware74,changed _pid variables to volatile,1,[],https://github.com/MaslowCNC/Firmware/pull/285,https://github.com/davidelang,2,https://github.com/MaslowCNC/Firmware/pull/285#issuecomment-320804266,_pidSetpoint _pidInput and _pidOutput should be volatile since they are modified and accessed by  multiple execution contexts (ISR and mainline code) to ensure that the value is retrieved from RAM and not a register,"given that there is only a single core on the current devices, does this matter?

It's not a bad thing to make it clean for future multi-core devices, but I'm
trying to understand if you think this could be the cause of any current bugs.
k",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,285,2017-08-07T23:01:35Z,2017-08-13T01:38:10Z,2017-08-13T01:38:20Z,MERGED,True,3,1,1,https://github.com/seware74,changed _pid variables to volatile,1,[],https://github.com/MaslowCNC/Firmware/pull/285,https://github.com/seware74,3,https://github.com/MaslowCNC/Firmware/pull/285#issuecomment-320807803,_pidSetpoint _pidInput and _pidOutput should be volatile since they are modified and accessed by  multiple execution contexts (ISR and mainline code) to ensure that the value is retrieved from RAM and not a register,"yes absolutely... these variables are modified and used in multiple execution contexts. Any time data is shared between an ISR and the main loop() they should be declared as volatile. Cores are the not the only way to introduce multiple executions contexts. ISRs are the most elementary, of which we have a quite complicated one.  In lieu of more involved solutions (e.g. critical sections or disabling interrupts), this is a bit of quick insurance.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,285,2017-08-07T23:01:35Z,2017-08-13T01:38:10Z,2017-08-13T01:38:20Z,MERGED,True,3,1,1,https://github.com/seware74,changed _pid variables to volatile,1,[],https://github.com/MaslowCNC/Firmware/pull/285,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/285#issuecomment-322016185,_pidSetpoint _pidInput and _pidOutput should be volatile since they are modified and accessed by  multiple execution contexts (ISR and mainline code) to ensure that the value is retrieved from RAM and not a register,üëç üëç üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,287,2017-08-17T01:29:02Z,2017-08-17T01:39:36Z,2017-08-17T01:39:40Z,MERGED,True,72,50,3,https://github.com/BarbourSmith,Split b03 into multiple commands,4,[],https://github.com/MaslowCNC/Firmware/pull/287,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/287,"We were seeing issues with the kinematics being unable to load the machine's position.
The issue was that if the machine tried to load it's position from memory before it had been told the specs for the motors it would load an incorrect position, then save incorrect chain lengths to memory. The next time the position was loaded from memory it would be wrong and the machine would try to compute a new position from the incorrect chain lengths and fail","We were seeing issues with the kinematics being unable to load the machine's position.
The issue was that if the machine tried to load it's position from memory before it had been told the specs for the motors it would load an incorrect position, then save incorrect chain lengths to memory. The next time the position was loaded from memory it would be wrong and the machine would try to compute a new position from the incorrect chain lengths and fail",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,288,2017-08-24T18:59:37Z,2017-08-24T18:59:50Z,2017-08-24T18:59:53Z,MERGED,True,3,0,1,https://github.com/BarbourSmith,Recompute cordinates of motors if machine geometry changes,1,[],https://github.com/MaslowCNC/Firmware/pull/288,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/288,"Recompute the xy cordinates of the motors when the machine's geometry is updated.
Fixes an issue with triangular kinematics","Recompute the xy cordinates of the motors when the machine's geometry is updated.
Fixes an issue with triangular kinematics",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,292,2017-08-31T03:02:25Z,2017-09-05T21:11:11Z,2017-09-25T06:11:31Z,MERGED,True,68,43,2,https://github.com/krkeegan,Require Machine Settings Before Unsafe Commands,3,[],https://github.com/MaslowCNC/Firmware/pull/292,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/292,"Requires that both the B12 and B03 commands be received prior to executing any unsafe commands.  A whitelist of safe commands (those that can safely be executed without machine data) is included and must be added to if new safe commands are added in the future.
Also swiches to get/put/update EEPROM commands which saves us from having custom made read/write float commands as well as ensures that writes to the EEPROM are only done when necessary.
Finally, gracefully handles receiving empty commands.
This solves a major bug in which EEPROM data could be overwritten by other processes on the host computer.
Fixes #291","Requires that both the B12 and B03 commands be received prior to executing any unsafe commands.  A whitelist of safe commands (those that can safely be executed without machine data) is included and must be added to if new safe commands are added in the future.
Also swiches to get/put/update EEPROM commands which saves us from having custom made read/write float commands as well as ensures that writes to the EEPROM are only done when necessary.
Finally, gracefully handles receiving empty commands.
This solves a major bug in which EEPROM data could be overwritten by other processes on the host computer.
Fixes #291",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,292,2017-08-31T03:02:25Z,2017-09-05T21:11:11Z,2017-09-25T06:11:31Z,MERGED,True,68,43,2,https://github.com/krkeegan,Require Machine Settings Before Unsafe Commands,3,[],https://github.com/MaslowCNC/Firmware/pull/292,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/292#issuecomment-326197568,"Requires that both the B12 and B03 commands be received prior to executing any unsafe commands.  A whitelist of safe commands (those that can safely be executed without machine data) is included and must be added to if new safe commands are added in the future.
Also swiches to get/put/update EEPROM commands which saves us from having custom made read/write float commands as well as ensures that writes to the EEPROM are only done when necessary.
Finally, gracefully handles receiving empty commands.
This solves a major bug in which EEPROM data could be overwritten by other processes on the host computer.
Fixes #291","This looks fantastic! Great work @krkeegan!
I'm away from my machine at a good friend's wedding until Monday, is anyone else able to test this PR on hardware? If not I can still test and merge it before next week's update.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,292,2017-08-31T03:02:25Z,2017-09-05T21:11:11Z,2017-09-25T06:11:31Z,MERGED,True,68,43,2,https://github.com/krkeegan,Require Machine Settings Before Unsafe Commands,3,[],https://github.com/MaslowCNC/Firmware/pull/292,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/292#issuecomment-327304669,"Requires that both the B12 and B03 commands be received prior to executing any unsafe commands.  A whitelist of safe commands (those that can safely be executed without machine data) is included and must be added to if new safe commands are added in the future.
Also swiches to get/put/update EEPROM commands which saves us from having custom made read/write float commands as well as ensures that writes to the EEPROM are only done when necessary.
Finally, gracefully handles receiving empty commands.
This solves a major bug in which EEPROM data could be overwritten by other processes on the host computer.
Fixes #291",Tested perfect on my machine! Excellent addition @krkeegan! Thank you! üëç üëç ‚ù§Ô∏è ‚ù§Ô∏è,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,294,2017-09-06T03:16:28Z,2017-09-06T17:19:04Z,2017-09-06T19:38:56Z,CLOSED,False,346,124,4,https://github.com/wrh3c,"RingBuffer updates, add Spindle Power control, add verboseDebug, update G-code handling, update watchdog, add support for Tool Change popup",4,[],https://github.com/MaslowCNC/Firmware/pull/294,https://github.com/wrh3c,1,https://github.com/MaslowCNC/Firmware/pull/294,"Please review my commits for possible inclusion in the Maslow firmware.
Highlights:

Add RingBuffer::numberOfLines() to count the number of full lines in the buffer, other minor updates to RingBuffer.
Add Spindle Power control using discrete output or servo, with method and parameters hard-coded for now until they can be integrated in settings.
Fix G-code lastCommand to remember only G00 through G03 for when future lines omit the G number.  (It doesn't make sense to remember other G numbers as they are not movement commands.)
Change _watchdog to request new code from Ground Control when necessary, but never add an end-of-line character to the buffer - this is how the buffer gets filled with extra lines and eventually overflows.
Update tool change handling to pause on M06 so the user can change the tool.  Requires Ground Control update to add ToolChangePopup.","Please review my commits for possible inclusion in the Maslow firmware.
Highlights:

Add RingBuffer::numberOfLines() to count the number of full lines in the buffer, other minor updates to RingBuffer.
Add Spindle Power control using discrete output or servo, with method and parameters hard-coded for now until they can be integrated in settings.
Fix G-code lastCommand to remember only G00 through G03 for when future lines omit the G number.  (It doesn't make sense to remember other G numbers as they are not movement commands.)
Change _watchdog to request new code from Ground Control when necessary, but never add an end-of-line character to the buffer - this is how the buffer gets filled with extra lines and eventually overflows.
Update tool change handling to pause on M06 so the user can change the tool.  Requires Ground Control update to add ToolChangePopup.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,294,2017-09-06T03:16:28Z,2017-09-06T17:19:04Z,2017-09-06T19:38:56Z,CLOSED,False,346,124,4,https://github.com/wrh3c,"RingBuffer updates, add Spindle Power control, add verboseDebug, update G-code handling, update watchdog, add support for Tool Change popup",4,[],https://github.com/MaslowCNC/Firmware/pull/294,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/294#issuecomment-327484023,"Please review my commits for possible inclusion in the Maslow firmware.
Highlights:

Add RingBuffer::numberOfLines() to count the number of full lines in the buffer, other minor updates to RingBuffer.
Add Spindle Power control using discrete output or servo, with method and parameters hard-coded for now until they can be integrated in settings.
Fix G-code lastCommand to remember only G00 through G03 for when future lines omit the G number.  (It doesn't make sense to remember other G numbers as they are not movement commands.)
Change _watchdog to request new code from Ground Control when necessary, but never add an end-of-line character to the buffer - this is how the buffer gets filled with extra lines and eventually overflows.
Update tool change handling to pause on M06 so the user can change the tool.  Requires Ground Control update to add ToolChangePopup.","There are several very good improvements here, but lumping them together means that a problem with any one will require rolling back all of them. It‚Äôs better to keep PRs to single issues or items.",True,{'THUMBS_UP': ['https://github.com/designfrontier']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,294,2017-09-06T03:16:28Z,2017-09-06T17:19:04Z,2017-09-06T19:38:56Z,CLOSED,False,346,124,4,https://github.com/wrh3c,"RingBuffer updates, add Spindle Power control, add verboseDebug, update G-code handling, update watchdog, add support for Tool Change popup",4,[],https://github.com/MaslowCNC/Firmware/pull/294,https://github.com/wrh3c,3,https://github.com/MaslowCNC/Firmware/pull/294#issuecomment-327553436,"Please review my commits for possible inclusion in the Maslow firmware.
Highlights:

Add RingBuffer::numberOfLines() to count the number of full lines in the buffer, other minor updates to RingBuffer.
Add Spindle Power control using discrete output or servo, with method and parameters hard-coded for now until they can be integrated in settings.
Fix G-code lastCommand to remember only G00 through G03 for when future lines omit the G number.  (It doesn't make sense to remember other G numbers as they are not movement commands.)
Change _watchdog to request new code from Ground Control when necessary, but never add an end-of-line character to the buffer - this is how the buffer gets filled with extra lines and eventually overflows.
Update tool change handling to pause on M06 so the user can change the tool.  Requires Ground Control update to add ToolChangePopup.","Sorry, I'm still learning how to use GitHub.  I understand the issue with lumping these together now.  I'll close this pull request and submit separate ones.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,295,2017-09-06T20:04:08Z,2017-09-07T17:39:43Z,2017-09-08T00:26:04Z,MERGED,True,53,41,2,https://github.com/wrh3c,RingBuffer updates and add numberOfLines,1,[],https://github.com/MaslowCNC/Firmware/pull/295,https://github.com/wrh3c,1,https://github.com/MaslowCNC/Firmware/pull/295,"In RingBuffer::read(), move _incrementBeginning() inside else statement.  If the buffer is empty, we definitely don't want to move the beginning pointer.
Add RingBuffer::numberOfLines() to count the number of full lines in the buffer, update RingBuffer::readLine() to use this count instead of looking for a full line.
Update RingBuffer::print() to dump the entire buffer contents, update RingBuffer::_incrementEnd() to use RingBuffer::print() if there is a buffer overflow to print buffer info and contents instead of using its own separate code.
Fix comments for RingBuffer::spaceAvailable() and RingBuffer::length().","In RingBuffer::read(), move _incrementBeginning() inside else statement.  If the buffer is empty, we definitely don't want to move the beginning pointer.
Add RingBuffer::numberOfLines() to count the number of full lines in the buffer, update RingBuffer::readLine() to use this count instead of looking for a full line.
Update RingBuffer::print() to dump the entire buffer contents, update RingBuffer::_incrementEnd() to use RingBuffer::print() if there is a buffer overflow to print buffer info and contents instead of using its own separate code.
Fix comments for RingBuffer::spaceAvailable() and RingBuffer::length().",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,295,2017-09-06T20:04:08Z,2017-09-07T17:39:43Z,2017-09-08T00:26:04Z,MERGED,True,53,41,2,https://github.com/wrh3c,RingBuffer updates and add numberOfLines,1,[],https://github.com/MaslowCNC/Firmware/pull/295,https://github.com/wrh3c,2,https://github.com/MaslowCNC/Firmware/pull/295#issuecomment-327612756,"In RingBuffer::read(), move _incrementBeginning() inside else statement.  If the buffer is empty, we definitely don't want to move the beginning pointer.
Add RingBuffer::numberOfLines() to count the number of full lines in the buffer, update RingBuffer::readLine() to use this count instead of looking for a full line.
Update RingBuffer::print() to dump the entire buffer contents, update RingBuffer::_incrementEnd() to use RingBuffer::print() if there is a buffer overflow to print buffer info and contents instead of using its own separate code.
Fix comments for RingBuffer::spaceAvailable() and RingBuffer::length().",This is one piece broken out from former pull request #294,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,296,2017-09-06T21:04:46Z,2017-09-07T17:39:30Z,2017-09-08T00:25:49Z,MERGED,True,8,13,1,https://github.com/wrh3c,G-code lastCommand remember only G00 through G03,1,[],https://github.com/MaslowCNC/Firmware/pull/296,https://github.com/wrh3c,1,https://github.com/MaslowCNC/Firmware/pull/296,"Fix G-code lastCommand to remember only G00 through G03 for when future lines omit the G number. (It doesn't make sense to remember other G numbers as they are not movement commands.)
Also combined cases for G00 and G01, since both use G1(), and G02 and G03, since both use G2().
Sample G-code snippet (Generated with HeeksCAD 1,1) to illustrate the need for G-code lastCommand to remember only G00 through G03 for when future lines omit the G number:
...
G00 Z5
(tool change to 3.175 mm End Mill)
T4 M06 G43
(Sketch 24)
X37.123 Y73.523 S10000 M03
Z2
G01 Z-1.5 F800
...
Comments:
The line after the (Sketch 24) comment does not have a G number. This is a continuation of G00 prior to the tool change. The tool change line beginning with T4 includes G43 (Use Tool Length Offset from Tool Table). It doesn't make sense to remember G43 since it isn't a motion code. If we remember only G00 through G03, then the G00 will correctly be applied to the line after the (Sketch 24) comment.","Fix G-code lastCommand to remember only G00 through G03 for when future lines omit the G number. (It doesn't make sense to remember other G numbers as they are not movement commands.)
Also combined cases for G00 and G01, since both use G1(), and G02 and G03, since both use G2().
Sample G-code snippet (Generated with HeeksCAD 1,1) to illustrate the need for G-code lastCommand to remember only G00 through G03 for when future lines omit the G number:
...
G00 Z5
(tool change to 3.175 mm End Mill)
T4 M06 G43
(Sketch 24)
X37.123 Y73.523 S10000 M03
Z2
G01 Z-1.5 F800
...
Comments:
The line after the (Sketch 24) comment does not have a G number. This is a continuation of G00 prior to the tool change. The tool change line beginning with T4 includes G43 (Use Tool Length Offset from Tool Table). It doesn't make sense to remember G43 since it isn't a motion code. If we remember only G00 through G03, then the G00 will correctly be applied to the line after the (Sketch 24) comment.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,296,2017-09-06T21:04:46Z,2017-09-07T17:39:30Z,2017-09-08T00:25:49Z,MERGED,True,8,13,1,https://github.com/wrh3c,G-code lastCommand remember only G00 through G03,1,[],https://github.com/MaslowCNC/Firmware/pull/296,https://github.com/wrh3c,2,https://github.com/MaslowCNC/Firmware/pull/296#issuecomment-327612646,"Fix G-code lastCommand to remember only G00 through G03 for when future lines omit the G number. (It doesn't make sense to remember other G numbers as they are not movement commands.)
Also combined cases for G00 and G01, since both use G1(), and G02 and G03, since both use G2().
Sample G-code snippet (Generated with HeeksCAD 1,1) to illustrate the need for G-code lastCommand to remember only G00 through G03 for when future lines omit the G number:
...
G00 Z5
(tool change to 3.175 mm End Mill)
T4 M06 G43
(Sketch 24)
X37.123 Y73.523 S10000 M03
Z2
G01 Z-1.5 F800
...
Comments:
The line after the (Sketch 24) comment does not have a G number. This is a continuation of G00 prior to the tool change. The tool change line beginning with T4 includes G43 (Use Tool Length Offset from Tool Table). It doesn't make sense to remember G43 since it isn't a motion code. If we remember only G00 through G03, then the G00 will correctly be applied to the line after the (Sketch 24) comment.",This is one piece broken out from former pull request #294,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,297,2017-09-06T21:07:33Z,2017-09-07T17:39:02Z,2017-09-08T00:25:34Z,MERGED,True,3,7,1,https://github.com/wrh3c,Watchdog - never add EOL to buffer,1,[],https://github.com/MaslowCNC/Firmware/pull/297,https://github.com/wrh3c,1,https://github.com/MaslowCNC/Firmware/pull/297,"Change _watchdog() to request new code from Ground Control when necessary, but never add an end-of-line character to the buffer - this is how the buffer gets filled with extra lines and eventually overflows.
Also change timeout to an unsigned long to make sure comparison with millis() and lastRan is successful.","Change _watchdog() to request new code from Ground Control when necessary, but never add an end-of-line character to the buffer - this is how the buffer gets filled with extra lines and eventually overflows.
Also change timeout to an unsigned long to make sure comparison with millis() and lastRan is successful.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,297,2017-09-06T21:07:33Z,2017-09-07T17:39:02Z,2017-09-08T00:25:34Z,MERGED,True,3,7,1,https://github.com/wrh3c,Watchdog - never add EOL to buffer,1,[],https://github.com/MaslowCNC/Firmware/pull/297,https://github.com/wrh3c,2,https://github.com/MaslowCNC/Firmware/pull/297#issuecomment-327613143,"Change _watchdog() to request new code from Ground Control when necessary, but never add an end-of-line character to the buffer - this is how the buffer gets filled with extra lines and eventually overflows.
Also change timeout to an unsigned long to make sure comparison with millis() and lastRan is successful.",This is one piece broken out from former pull request #294,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,298,2017-09-06T21:18:45Z,2017-09-07T17:39:17Z,2017-09-08T00:25:24Z,MERGED,True,35,26,2,https://github.com/wrh3c,Command String improvements,3,[],https://github.com/MaslowCNC/Firmware/pull/298,https://github.com/wrh3c,1,https://github.com/MaslowCNC/Firmware/pull/298,"Combines several commits improving command string handling:

change string trim to save memory and be more useful
(minor, cosmetic) add line break after cmdString for Bcode
execute beginning of command string that doesn't start with ""G"" but contains ""G"" later in the string","Combines several commits improving command string handling:

change string trim to save memory and be more useful
(minor, cosmetic) add line break after cmdString for Bcode
execute beginning of command string that doesn't start with ""G"" but contains ""G"" later in the string",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,298,2017-09-06T21:18:45Z,2017-09-07T17:39:17Z,2017-09-08T00:25:24Z,MERGED,True,35,26,2,https://github.com/wrh3c,Command String improvements,3,[],https://github.com/MaslowCNC/Firmware/pull/298,https://github.com/wrh3c,2,https://github.com/MaslowCNC/Firmware/pull/298#issuecomment-327615538,"Combines several commits improving command string handling:

change string trim to save memory and be more useful
(minor, cosmetic) add line break after cmdString for Bcode
execute beginning of command string that doesn't start with ""G"" but contains ""G"" later in the string",This is one piece broken out from former pull request #294,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,1,https://github.com/MaslowCNC/Firmware/pull/299,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,2,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-327983498,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","Bar, this brings up a question I have about the purpose of the ring buffer.  Is the firmware trying to buffer a line or two ahead of the one the machine is currently cutting, or is this just to buffer the characters sent by Ground Control until the firmware has a complete line that can be processed?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328000090,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","On Thu, 7 Sep 2017, William Hall wrote:
 Bar, this brings up a question I have about the purpose of the ring buffer.  Is the firmware trying to buffer a line or two ahead of the one the machine is currently cutting, or is this just to buffer the characters sent by Ground Control until the firmware has a complete line that can be processed?
yes :-)

If there is some monster long line, we need to make sure we get it all.

we also have data arriving unpredictably from the host, and need to catch it
with the least overhead possible so that we don't miss some.

and if we wait to finish processing one line before telling the host to send the
next line, the machine can stall and become jerky. We ideally want much more
than two lines in our queue, if someone is sending a bunch of points that only
differ in position a couple points past the decimal place, it takes as long to
interpret the command than to execute it, even before factoring in the delay for
the host to detect the Ok and decide to send the next line.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,4,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328088763,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","Okay, we should consider how to implement this.  In my experience, Ground Control sends one line in response to an ""ok"".  Since the firmware only sends ""ok"" after completion of a line, there is only one line in the ring buffer.  Should we have Ground Control initially send several lines before waiting for the first ""ok"" response?  Or should we have the firmware send multiple ""ok""s until the buffer has several lines waiting?
The ring buffer size is currently only 128 characters, so there isn't a lot of room for multiple long lines.
Also, the more commands we have in the ring buffer, the longer the machine will run after the user presses the ""Halt"" button in Ground Control.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,5,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328108805,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","I added a second commit to this pull request to revise my original commit.  Now _signalReady() first checks that there is enough space available in the buffer before requesting another line of code, then checks that there are fewer than 4 lines in the buffer.
I made expectedMaxLineLength a global variable rather than a constant in case we want to add code in the future to adaptively determine the expected maximum line length, or let the user change it at run time through Ground Control.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328158340,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","Fantastic!
Here's the back story on how this system was designed to work, and how it actually does.
It's based on the GRBL standard of character counting. The idea is that the computer keeps track of how many characters it has sent and when the buffer is full (because the buffer size is known) it stops sending them. Here is their wiki article on how it works: https://github.com/grbl/grbl/wiki/Interfacing-with-Grbl
It worked pretty well, but sometimes (maybe 1/500) lines would drop a character from the front. We couldn't figure out what was going on so we toned things back to the current system where the next line isn't sent until the last one is executed. Now the system is stable, but the delay is noticeable in files with many many small line segments so I would ultimately like to go back to character counting (or something similar).
Personally I'm not a huge fan of the idea of character counting. I also played around with a system where the buffer reported it's available space directly to Ground Control but never got it to work quite right",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,7,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328217650,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","Hmm, I didn't mean for all of these commits to get merged.  I thought I was being careful to keep things in separate branches, but something went wrong.  Let me see where things ended up.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,8,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328227213,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.",I added a bunch of comments in pull request #300 about the extra stuff that came along with this merge.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,9,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328247136,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","Bar, thanks for the back story on how this was designed to work, and for the GRBL reference.  Very interesting reading!
As for the dropped character you occasionally experienced with character counting, it may have been due to a difference in counting between Ground Control and the Firmware.  If Ground Control miscounts and sends one extra character, causing the ring buffer to overflow, the extra character will replace the previous character at the end of the buffer.  RingBuffer::write() puts the character at the end of the string, then increments the end position, but _incrementEnd() checks for buffer overflow before incrementing the end position.  Even if RingBuffer::write() checked for buffer overflow and didn't replace the character at the end of the buffer, the character passed to RingBuffer::write() would be lost.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/wrh3c,10,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328247623,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","The GRBL look-ahead planner buffer sounds like a reasonable solution.  Instead of storing multiple lines in the ring buffer, take one line, parse it, store it in the look-ahead planner buffer, and return ""ok"" so the next line can be sent.  Then when the look-ahead planner buffer gets full, hold the ""ok"" response until there is room for the current line in the ring buffer.
I think the main reason for the ring buffer is to store normal characters (Gcode) so that the immediate characters (such as ""~"", ""!"") can be acted upon as soon as they are received.  Otherwise, the immediate characters would be stuck in the serial receive buffer and would not have priority over the normal characters.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,299,2017-09-08T02:37:51Z,2017-09-08T18:04:51Z,2017-09-09T06:18:14Z,MERGED,True,267,48,1,https://github.com/wrh3c,Reduce chance of ring buffer overflow - _signalReady,12,[],https://github.com/MaslowCNC/Firmware/pull/299,https://github.com/davidelang,11,https://github.com/MaslowCNC/Firmware/pull/299#issuecomment-328257783,"Now that we have the updated RingBuffer with numberOfLines() from pull request #295, here is a suggested improvement to reduce the change of ring buffer overflow.  This prevents _signalReady() from sending ""ok"" to Ground Control if there are 2 or more lines already in the buffer.  This is probably not necessary since pull request #297 was also merged, but it shouldn't hurt, and it might be helpful if future changes inadvertently start putting additional lines in the buffer.","one thing to keep in mind is that on the arduino there is no flow control, so if
the buffers fill up, the sender has no way of finding out.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/wrh3c,1,https://github.com/MaslowCNC/Firmware/pull/300,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328161181,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","maslowDelay is certainly needed.  There are a number of places where the code makes very similar calls to check for a stop command, I know there is one in arc() as well.
It makes sense to unify this under a single function.
It looks like there is a bunch of other changes in here too, are these other pull requests?  Such as setSpindlePower() and such?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328163100,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","It looks fantastic! I agree with @krkeegan that maslowDelay is a both needed and well executed improvement.
I'm also seeing a lot of other changes, but I think that's just because this branch also has all the changes in #299 . When #299 is merged it should tidy up automatically, right?
Any objections to me just merging both right now?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328172220,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","#299 actually contains some of the structure of maslowDelay().  I am not sure you can merge #300 without #299 or vice versa.
This also includes a new function setSpindleSpeed().
I would like to avoid being pedantic, so if there has been enough testing to ensure that this works, then I think these should both be merged.
But it would be helpful in the future to try and make merges more concise.  Not only are they easier to read, but it makes it easier to resolve merge conflicts when merging these in to other forks.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/wrh3c,5,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328217021,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","Hmm, this was only supposed to be the ""Add maslowDelay"" commit.  The rest are works in progress that I'm still developing.  I thought I was careful to keep them in a separate branch, but apparently I messed something up.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/krkeegan,6,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328221312,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","That makes sense.
So when you make a pull request, the pull is for the branch at that state not a separate bucket of only the commits uniquely made on that branch.
I often find myself in a similar situation where I realize I have a bunch of commits that should probably be split up.  What I do in that case, is checkout upstream/master and create a new branch from it.  I then use git-cherry-pick to copy over the relevant commits and make a pull request for this branch only.
Of course, you have to be careful to ensure that all of the relevant work gets bundled up properly.
EDITED:  I should note, that when you create the pull request, you can see the commits and changes to the files that would occur if this pull was merged by clicking on the tabs.  This is helpful to check when submitting a pull request.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/wrh3c,7,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328223071,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","Yes, I was careful to start with a clean copy of the master, created a new branch, made only the desired change, and verified when I submitted the pull request that only the one commit was included.  However, it appears that GitHub will automatically update the pull request if other commits are made in the branch.  That happened to me in another pull request, but in that case, it was the desired behavior.  I'm not sure what happened here, because I was working in a different branch today, but somehow other commits got added to this one.  From now on, I'm going to do my work outside of the GitHub-controlled directory and pull in just what I want when I want.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/wrh3c,8,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328225453,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","The good news is that all changes were confined to CNC_Functions.h, so as a worst case, we could revert back to the previous version.
However, if we stick with the current version, the good news for me is that it's very close to my ""work in progress"" version, so it will be much easier to suggest changes going forward.
The current version is almost identical to the version that I tested two days ago actually cutting wood on my Maslow.  The only difference is the added condition to check ringBuffer.spaceAvailable in the if statement in _signalReady().  So it has been tested to that extent.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/davidelang,9,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328227729,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","what you need to do is to create a separate branch for each feature, branching
off from the last release.

Then when you get ready to create the PR, create a new branch, merge in any
updates to master, and find any fixes you need, then delete this test branch and
create a PR from the feature branch

try not to create one feature branch from another one (unless the second feature
depends on the first one)

as you found, a PR submits the entire branch, not just particular commits.

to go from a combined branch, you will need to create new brances from master,
and cherry-pick commits from the combined branch (and watch out that you don't
suck in more changes than you think)

Remember, git tracks the state of the files, not a list of changes.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/wrh3c,10,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328229125,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","Bar, feel free to ask questions and push back before accepting my pull requests.  I really didn't intend for all of these changes to come through in one request.
But now that they did, here's what you got:

#define verboseDebug is added to easily enable or disable debug messages at compile time.
setSpindlePower() to turn the spindle (router) on or off using a digital output to control either a relay or a servo, where the servo physically turns a switch on or off.  The digital output state can be chosen as active high or active low, and the servo angles can be specified for idle, on, and off positions.
executeGcodeLine() is split into three separate functions: executeBcodeLine(), executeGcodeLine(), and executeOtherCodeLine().  There is also a new executeMcodeLine() to handle spindle power, tool changes, and program pause and end commands.
interpretCommandString() is updated to call the separate functions mentioned above, and searches for 'G' or 'M' codes to execute in order from left to right.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/krkeegan,11,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328245540,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","So something isn't working for me.  I am seeing the B12 setup command properly read, but the B03 command is stuck in the ring buffer, for some reason it doesn't seem to think that it has received an EOL.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,300,2017-09-08T03:18:10Z,2017-09-08T18:05:04Z,2017-09-09T02:30:25Z,MERGED,True,271,48,1,https://github.com/wrh3c,Add maslowDelay,15,[],https://github.com/MaslowCNC/Firmware/pull/300,https://github.com/wrh3c,12,https://github.com/MaslowCNC/Firmware/pull/300#issuecomment-328248766,"Adds a maslowDelay() function to allow the firmware to delay for a certain amount of time while maintaining communication with Ground Control.
Also replaces the wait loop in G1() with a call to maslowDelay().  The wait loop in G1() does not continue communication with Ground Control, which can cause Ground Control to think that the connection is lost.  This can be illustrated as follows:

Change waitTimeMs in the wait loop in G1() from 1000 (1 second) to 10000 (10 seconds) and upload to the Arduino
Run Ground Control and turn off ""z-axis installed"" in settings
Run a Gcode file in Ground Control
After the first manual z-axis adjustment, Ground Control will complain that the connection has been lost

To illustrate that this fix works, after making the change to use maslowDelay() in G1(), change the argument passed to maslowDelay() from 1000 (1 second) to 10000 (10 seconds) and run Ground Control as above.  There is a much longer delay after each manual z-axis adjustment, but the Arduino still communicates with Ground Control and the connection is maintained.","Do you have #define verboseDebug 2 set in the firmware?  If so, take a look at the log.txt file after quitting Ground Control.  You should see ""Sent: B12 ..."", and later you should see the B12 string after ""Buffer Contents:"".  The B12 string should end with ""\n"" just before ""(End of Buffer)"".  Then you'll see ""iCS executing B code line:"" with the B12 string.  (iCS is an abbreviation for interpretCommandString.)
Further down, you should see ""Sent: B03 ..."", then ""Buffer Contents:"" followed by the B03 string ending with ""\n"".  Then you should see ""iCS executing B code line:"" with the B03 string.  I see this, but based on your comment that it's stuck, I'm guessing you won't see it.
If you attach your log.txt file, I'd be happy to take a look and see if I can figure out what's happening.  If you just launch Ground Control, wait for B12 and B03, then quit Ground Control, the log file shouldn't be too big, around 15k bytes.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,305,2017-09-15T16:48:50Z,2017-09-15T16:49:02Z,2017-09-15T16:49:08Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,urn off verbose output,1,[],https://github.com/MaslowCNC/Firmware/pull/305,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/305,For some reasone having verbose on was making my machine not move,For some reasone having verbose on was making my machine not move,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,306,2017-09-19T17:05:51Z,2017-09-19T17:06:34Z,2017-09-19T17:06:38Z,MERGED,True,17,1,3,https://github.com/BarbourSmith,Make the encoder resolution value in the RPM calculation updated from Ground Control,1,[],https://github.com/MaslowCNC/Firmware/pull/306,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/306,A fix for #301,A fix for #301,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,307,2017-09-22T17:16:38Z,2017-09-24T01:05:49Z,2018-01-17T22:29:52Z,MERGED,True,182,11,5,https://github.com/krkeegan,Add B Functions for Testing PID Settings,4,[],https://github.com/MaslowCNC/Firmware/pull/307,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/307,"Adds B13&14 functions which allow a user to request a series of stepped movements on a particular axis.  During these movements the error of the axis during the movement is reported on a series of lines which can be graphed by the user.
These functions are somewhat rudimentary, but they are very helpful for initial testing of PID settings.
I have started to write some documentation of the Tuning process here:
https://github.com/MaslowCNC/Firmware/wiki/PID-Tuning","Adds B13&14 functions which allow a user to request a series of stepped movements on a particular axis.  During these movements the error of the axis during the movement is reported on a series of lines which can be graphed by the user.
These functions are somewhat rudimentary, but they are very helpful for initial testing of PID settings.
I have started to write some documentation of the Tuning process here:
https://github.com/MaslowCNC/Firmware/wiki/PID-Tuning",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,307,2017-09-22T17:16:38Z,2017-09-24T01:05:49Z,2018-01-17T22:29:52Z,MERGED,True,182,11,5,https://github.com/krkeegan,Add B Functions for Testing PID Settings,4,[],https://github.com/MaslowCNC/Firmware/pull/307,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/307#issuecomment-331507601,"Adds B13&14 functions which allow a user to request a series of stepped movements on a particular axis.  During these movements the error of the axis during the movement is reported on a series of lines which can be graphed by the user.
These functions are somewhat rudimentary, but they are very helpful for initial testing of PID settings.
I have started to write some documentation of the Tuning process here:
https://github.com/MaslowCNC/Firmware/wiki/PID-Tuning","I have horded too many commits while working on my PID testing.  I think it would be helpful to pull out smaller chunks for review and testing, particularly since we seem to be having issues with the larger collection.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,307,2017-09-22T17:16:38Z,2017-09-24T01:05:49Z,2018-01-17T22:29:52Z,MERGED,True,182,11,5,https://github.com/krkeegan,Add B Functions for Testing PID Settings,4,[],https://github.com/MaslowCNC/Firmware/pull/307,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/307#issuecomment-331571735,"Adds B13&14 functions which allow a user to request a series of stepped movements on a particular axis.  During these movements the error of the axis during the movement is reported on a series of lines which can be graphed by the user.
These functions are somewhat rudimentary, but they are very helpful for initial testing of PID settings.
I have started to write some documentation of the Tuning process here:
https://github.com/MaslowCNC/Firmware/wiki/PID-Tuning",That's a great idea. I hard coded something similar when I was testing then commented it out. Your method seems better üòÅ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,307,2017-09-22T17:16:38Z,2017-09-24T01:05:49Z,2018-01-17T22:29:52Z,MERGED,True,182,11,5,https://github.com/krkeegan,Add B Functions for Testing PID Settings,4,[],https://github.com/MaslowCNC/Firmware/pull/307,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/307#issuecomment-331679326,"Adds B13&14 functions which allow a user to request a series of stepped movements on a particular axis.  During these movements the error of the axis during the movement is reported on a series of lines which can be graphed by the user.
These functions are somewhat rudimentary, but they are very helpful for initial testing of PID settings.
I have started to write some documentation of the Tuning process here:
https://github.com/MaslowCNC/Firmware/wiki/PID-Tuning",This one passes all my tests and seems ready to merge. Anyone else have any issues?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,308,2017-09-22T17:38:42Z,2017-09-24T01:06:01Z,2018-01-17T22:30:16Z,MERGED,True,58,39,4,https://github.com/krkeegan,Upgrade PID Library to v1.2.1,1,[],https://github.com/MaslowCNC/Firmware/pull/308,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/308,"This does not alter the functionality of the library nor how it is used in Maslow.  Specifically the proportional aspect of the PID calculation is still handled the same way it always has been.
Fixes #304","This does not alter the functionality of the library nor how it is used in Maslow.  Specifically the proportional aspect of the PID calculation is still handled the same way it always has been.
Fixes #304",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,308,2017-09-22T17:38:42Z,2017-09-24T01:06:01Z,2018-01-17T22:30:16Z,MERGED,True,58,39,4,https://github.com/krkeegan,Upgrade PID Library to v1.2.1,1,[],https://github.com/MaslowCNC/Firmware/pull/308,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/308#issuecomment-331679494,"This does not alter the functionality of the library nor how it is used in Maslow.  Specifically the proportional aspect of the PID calculation is still handled the same way it always has been.
Fixes #304","Looks great to me! üëç üëç
It's cool to be able to see all the changes to the library highlighted like this.
I hadn't seen the

Fixes #304

type of notation before where it auto closes the issue. Very cool. Great work.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,309,2017-09-22T17:43:39Z,2017-09-24T01:06:49Z,2017-09-25T06:11:01Z,MERGED,True,2,1,1,https://github.com/krkeegan,Don't Run PID Calculation if Motors are Detached/Unpowered,2,[],https://github.com/MaslowCNC/Firmware/pull/309,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/309,"This was causing the integrator term to wind up while the machine was on, but not running.
Fixes #302","This was causing the integrator term to wind up while the machine was on, but not running.
Fixes #302",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,309,2017-09-22T17:43:39Z,2017-09-24T01:06:49Z,2017-09-25T06:11:01Z,MERGED,True,2,1,1,https://github.com/krkeegan,Don't Run PID Calculation if Motors are Detached/Unpowered,2,[],https://github.com/MaslowCNC/Firmware/pull/309,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/309#issuecomment-331679551,"This was causing the integrator term to wind up while the machine was on, but not running.
Fixes #302",Looks great to me!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,311,2017-09-25T01:02:26Z,2017-09-25T18:15:08Z,2017-09-30T00:39:32Z,MERGED,True,21,16,5,https://github.com/krkeegan,Allow Weighting of Proportional on Error/Measurement,1,[],https://github.com/MaslowCNC/Firmware/pull/311,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/311,"Enables weighting of the proportional calculation method.  1 = proportional on error, 0 = proportional on measurement.  Any fraction in between balances the two options.
Code was a suggestion from the author of the PID library:
http://brettbeauregard.com/blog/2017/06/proportional-on-measurement-the-code/
Must be merged with changes to Ground Control as well, MaslowCNC/GroundControl#426.","Enables weighting of the proportional calculation method.  1 = proportional on error, 0 = proportional on measurement.  Any fraction in between balances the two options.
Code was a suggestion from the author of the PID library:
http://brettbeauregard.com/blog/2017/06/proportional-on-measurement-the-code/
Must be merged with changes to Ground Control as well, MaslowCNC/GroundControl#426.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,311,2017-09-25T01:02:26Z,2017-09-25T18:15:08Z,2017-09-30T00:39:32Z,MERGED,True,21,16,5,https://github.com/krkeegan,Allow Weighting of Proportional on Error/Measurement,1,[],https://github.com/MaslowCNC/Firmware/pull/311,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/311#issuecomment-331966281,"Enables weighting of the proportional calculation method.  1 = proportional on error, 0 = proportional on measurement.  Any fraction in between balances the two options.
Code was a suggestion from the author of the PID library:
http://brettbeauregard.com/blog/2017/06/proportional-on-measurement-the-code/
Must be merged with changes to Ground Control as well, MaslowCNC/GroundControl#426.","The code itself looks beautiful and clean, but I'm not sure I fully understand what it does.
This let's us use both the PonM system and the regular system at the same time, but with weights on how much influence each have? That's really cool. Wouldn't a different Kp term be needed for each system?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,311,2017-09-25T01:02:26Z,2017-09-25T18:15:08Z,2017-09-30T00:39:32Z,MERGED,True,21,16,5,https://github.com/krkeegan,Allow Weighting of Proportional on Error/Measurement,1,[],https://github.com/MaslowCNC/Firmware/pull/311,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/311#issuecomment-331967137,"Enables weighting of the proportional calculation method.  1 = proportional on error, 0 = proportional on measurement.  Any fraction in between balances the two options.
Code was a suggestion from the author of the PID library:
http://brettbeauregard.com/blog/2017/06/proportional-on-measurement-the-code/
Must be merged with changes to Ground Control as well, MaslowCNC/GroundControl#426.","Sorry, should have read the linked article before asking. That's exactly what it does. Here's the relevant section from the author of the PID library:

I didn‚Äôt add the following to the Arduino library code, but this is a feature that might be of some interest if you want to roll your own. Setpoint Weighting is, at it‚Äôs core, a way to have both PonE and PonM at the same time. By specifying a ratio between 0 and 1, you can have 100% PonM, 100% PonE (respectively) or some ratio in between. This can be helpful if you have a process that‚Äôs not perfectly integrating (like a reflow oven) and want to account for this.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,311,2017-09-25T01:02:26Z,2017-09-25T18:15:08Z,2017-09-30T00:39:32Z,MERGED,True,21,16,5,https://github.com/krkeegan,Allow Weighting of Proportional on Error/Measurement,1,[],https://github.com/MaslowCNC/Firmware/pull/311,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/311#issuecomment-331969366,"Enables weighting of the proportional calculation method.  1 = proportional on error, 0 = proportional on measurement.  Any fraction in between balances the two options.
Code was a suggestion from the author of the PID library:
http://brettbeauregard.com/blog/2017/06/proportional-on-measurement-the-code/
Must be merged with changes to Ground Control as well, MaslowCNC/GroundControl#426.","Yes, exactly.
In the simplest form, this gives the user direct access to enabling PonM by selecting 0.  But yes the ability to add weighting is interesting.  I haven't played enough with it to have an opinion, but allowing this doesn't seem to add much additional complexity for users.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,312,2017-09-25T01:23:01Z,2017-09-26T01:16:37Z,2018-01-17T22:29:59Z,MERGED,True,6,6,3,https://github.com/krkeegan,Fix Compiler Warnings that Appear with Default Settings,2,[],https://github.com/MaslowCNC/Firmware/pull/312,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/312,"The default installation of the arduino compiler will display
some 'default' level of warnings.  This commit fixes those
errors so that no warnings are displayed by default.
There are additional warnings that can be seen selecting the
'All' setting, this does not fix all of those.
Fixes #290","The default installation of the arduino compiler will display
some 'default' level of warnings.  This commit fixes those
errors so that no warnings are displayed by default.
There are additional warnings that can be seen selecting the
'All' setting, this does not fix all of those.
Fixes #290",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,312,2017-09-25T01:23:01Z,2017-09-26T01:16:37Z,2018-01-17T22:29:59Z,MERGED,True,6,6,3,https://github.com/krkeegan,Fix Compiler Warnings that Appear with Default Settings,2,[],https://github.com/MaslowCNC/Firmware/pull/312,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/312#issuecomment-331968609,"The default installation of the arduino compiler will display
some 'default' level of warnings.  This commit fixes those
errors so that no warnings are displayed by default.
There are additional warnings that can be seen selecting the
'All' setting, this does not fix all of those.
Fixes #290","Looks great to me!
I think some of these changes were made by @wrh3c
@wrh3c do you feel OK about changing just these few lines? I like all of your changes from a best practices perspective, but we do get a good number of questions about the compiler warnings",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,312,2017-09-25T01:23:01Z,2017-09-26T01:16:37Z,2018-01-17T22:29:59Z,MERGED,True,6,6,3,https://github.com/krkeegan,Fix Compiler Warnings that Appear with Default Settings,2,[],https://github.com/MaslowCNC/Firmware/pull/312,https://github.com/wrh3c,3,https://github.com/MaslowCNC/Firmware/pull/312#issuecomment-332034138,"The default installation of the arduino compiler will display
some 'default' level of warnings.  This commit fixes those
errors so that no warnings are displayed by default.
There are additional warnings that can be seen selecting the
'All' setting, this does not fix all of those.
Fixes #290","I reviewed the lines that are being changed, and I don't think I wrote any of them.  I made some changes in CNC_Functions.h, but not to the function declarations.
I'm all for fixing the code so we don't get compiler warnings.  That's a good practice!",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,313,2017-09-26T04:38:43Z,2017-09-26T18:32:18Z,2017-09-30T00:39:07Z,MERGED,True,8,8,1,https://github.com/krkeegan,Indent Comments to Match Surrounding Code,1,[],https://github.com/MaslowCNC/Firmware/pull/313,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/313,"This is a bit mundane and self-centered, but the code folding in my IDE doesn't work correctly if the comments are not indented.
Hopefully everyone will tolerate my convenience.","This is a bit mundane and self-centered, but the code folding in my IDE doesn't work correctly if the comments are not indented.
Hopefully everyone will tolerate my convenience.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,313,2017-09-26T04:38:43Z,2017-09-26T18:32:18Z,2017-09-30T00:39:07Z,MERGED,True,8,8,1,https://github.com/krkeegan,Indent Comments to Match Surrounding Code,1,[],https://github.com/MaslowCNC/Firmware/pull/313,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/313#issuecomment-332292871,"This is a bit mundane and self-centered, but the code folding in my IDE doesn't work correctly if the comments are not indented.
Hopefully everyone will tolerate my convenience.",Love it,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,314,2017-09-28T17:39:58Z,2017-09-29T18:56:03Z,2017-11-11T21:04:50Z,MERGED,True,94,140,5,https://github.com/krkeegan,Improvements to the Movement Calculations and PID Controllers,11,[],https://github.com/MaslowCNC/Firmware/pull/314,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/314,"These changes will affect how your current PID tunings work, almost certainly causing them not to work, you will want to merge the corresponding pull request in GC as well, or manually make the changes to your PID tunings
This makes a number of changes/improvements which include:

Removing the running average on the input to the PID velocity calculation (this caused oscillations and damped the control reaction and I think averaging is an incorrect solution in control theory anyways)
Adds a minimum rotation rate for the velocity controller (the motors are unable to turn at this rate, so this only caused integrator windup and noise)
Ensure that position requests are equal to a whole number of encoder steps (prevents oscillations and integrator windup for unobtainable positions)
Fix delay in the straight line loop in the movement loop to be consistent (ensures that the controllers are getting steps of equal length in each cycle)
Fix a few other obscure design issues with the PID controller

Suggested PID Tunings that seem to work well:
Kp Pos = 1100
Ki Pos = 0
Kd Pos= 0
Proportional Weight 1
Kp Velo = 52
Ki Velo = 0
Kd Velo = 0
Corresponding Ground Control PR:
MaslowCNC/GroundControl#430","These changes will affect how your current PID tunings work, almost certainly causing them not to work, you will want to merge the corresponding pull request in GC as well, or manually make the changes to your PID tunings
This makes a number of changes/improvements which include:

Removing the running average on the input to the PID velocity calculation (this caused oscillations and damped the control reaction and I think averaging is an incorrect solution in control theory anyways)
Adds a minimum rotation rate for the velocity controller (the motors are unable to turn at this rate, so this only caused integrator windup and noise)
Ensure that position requests are equal to a whole number of encoder steps (prevents oscillations and integrator windup for unobtainable positions)
Fix delay in the straight line loop in the movement loop to be consistent (ensures that the controllers are getting steps of equal length in each cycle)
Fix a few other obscure design issues with the PID controller

Suggested PID Tunings that seem to work well:
Kp Pos = 1100
Ki Pos = 0
Kd Pos= 0
Proportional Weight 1
Kp Velo = 52
Ki Velo = 0
Kd Velo = 0
Corresponding Ground Control PR:
MaslowCNC/GroundControl#430",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,314,2017-09-28T17:39:58Z,2017-09-29T18:56:03Z,2017-11-11T21:04:50Z,MERGED,True,94,140,5,https://github.com/krkeegan,Improvements to the Movement Calculations and PID Controllers,11,[],https://github.com/MaslowCNC/Firmware/pull/314,https://github.com/davidelang,2,https://github.com/MaslowCNC/Firmware/pull/314#issuecomment-332992398,"These changes will affect how your current PID tunings work, almost certainly causing them not to work, you will want to merge the corresponding pull request in GC as well, or manually make the changes to your PID tunings
This makes a number of changes/improvements which include:

Removing the running average on the input to the PID velocity calculation (this caused oscillations and damped the control reaction and I think averaging is an incorrect solution in control theory anyways)
Adds a minimum rotation rate for the velocity controller (the motors are unable to turn at this rate, so this only caused integrator windup and noise)
Ensure that position requests are equal to a whole number of encoder steps (prevents oscillations and integrator windup for unobtainable positions)
Fix delay in the straight line loop in the movement loop to be consistent (ensures that the controllers are getting steps of equal length in each cycle)
Fix a few other obscure design issues with the PID controller

Suggested PID Tunings that seem to work well:
Kp Pos = 1100
Ki Pos = 0
Kd Pos= 0
Proportional Weight 1
Kp Velo = 52
Ki Velo = 0
Kd Velo = 0
Corresponding Ground Control PR:
MaslowCNC/GroundControl#430","please make the minimum speed a variable defined up in the header (if not a
configurable thing), different people are using dfferent motors because they
couldn't get the kickstarter motors.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,314,2017-09-28T17:39:58Z,2017-09-29T18:56:03Z,2017-11-11T21:04:50Z,MERGED,True,94,140,5,https://github.com/krkeegan,Improvements to the Movement Calculations and PID Controllers,11,[],https://github.com/MaslowCNC/Firmware/pull/314,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/314#issuecomment-333014571,"These changes will affect how your current PID tunings work, almost certainly causing them not to work, you will want to merge the corresponding pull request in GC as well, or manually make the changes to your PID tunings
This makes a number of changes/improvements which include:

Removing the running average on the input to the PID velocity calculation (this caused oscillations and damped the control reaction and I think averaging is an incorrect solution in control theory anyways)
Adds a minimum rotation rate for the velocity controller (the motors are unable to turn at this rate, so this only caused integrator windup and noise)
Ensure that position requests are equal to a whole number of encoder steps (prevents oscillations and integrator windup for unobtainable positions)
Fix delay in the straight line loop in the movement loop to be consistent (ensures that the controllers are getting steps of equal length in each cycle)
Fix a few other obscure design issues with the PID controller

Suggested PID Tunings that seem to work well:
Kp Pos = 1100
Ki Pos = 0
Kd Pos= 0
Proportional Weight 1
Kp Velo = 52
Ki Velo = 0
Kd Velo = 0
Corresponding Ground Control PR:
MaslowCNC/GroundControl#430",I think I have tested all things I can think of at this point.,True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/BarbourSmith'], 'HEART': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,314,2017-09-28T17:39:58Z,2017-09-29T18:56:03Z,2017-11-11T21:04:50Z,MERGED,True,94,140,5,https://github.com/krkeegan,Improvements to the Movement Calculations and PID Controllers,11,[],https://github.com/MaslowCNC/Firmware/pull/314,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/314#issuecomment-333272182,"These changes will affect how your current PID tunings work, almost certainly causing them not to work, you will want to merge the corresponding pull request in GC as well, or manually make the changes to your PID tunings
This makes a number of changes/improvements which include:

Removing the running average on the input to the PID velocity calculation (this caused oscillations and damped the control reaction and I think averaging is an incorrect solution in control theory anyways)
Adds a minimum rotation rate for the velocity controller (the motors are unable to turn at this rate, so this only caused integrator windup and noise)
Ensure that position requests are equal to a whole number of encoder steps (prevents oscillations and integrator windup for unobtainable positions)
Fix delay in the straight line loop in the movement loop to be consistent (ensures that the controllers are getting steps of equal length in each cycle)
Fix a few other obscure design issues with the PID controller

Suggested PID Tunings that seem to work well:
Kp Pos = 1100
Ki Pos = 0
Kd Pos= 0
Proportional Weight 1
Kp Velo = 52
Ki Velo = 0
Kd Velo = 0
Corresponding Ground Control PR:
MaslowCNC/GroundControl#430","one of the problems early on was the chain wrapping around the sprocket. you may
have slowed it down to give people a better chance to deal with that without
getting their fingers in the chain.

But it's far safer to just attach a string to the chain and use that to prevent
the wrapup",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,315,2017-09-30T04:21:31Z,2017-10-07T03:35:52Z,2017-11-11T21:03:35Z,MERGED,True,64,18,3,https://github.com/krkeegan,Enable 3D Linear Movements for G00 and G01,6,[],https://github.com/MaslowCNC/Firmware/pull/315,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/315,"Only works if zaxis is connected.  If not, zaxis movements remain as they
were.
Carefully calculates the feedrate to ensure that the limited zaxis
feedrate is not exceeded.
Only affects G00 and G01 commands","Only works if zaxis is connected.  If not, zaxis movements remain as they
were.
Carefully calculates the feedrate to ensure that the limited zaxis
feedrate is not exceeded.
Only affects G00 and G01 commands",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,315,2017-09-30T04:21:31Z,2017-10-07T03:35:52Z,2017-11-11T21:03:35Z,MERGED,True,64,18,3,https://github.com/krkeegan,Enable 3D Linear Movements for G00 and G01,6,[],https://github.com/MaslowCNC/Firmware/pull/315,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/315#issuecomment-333356589,"Only works if zaxis is connected.  If not, zaxis movements remain as they
were.
Carefully calculates the feedrate to ensure that the limited zaxis
feedrate is not exceeded.
Only affects G00 and G01 commands",Wouldn't this benefit from the fix for the hard-coded z-axis pitch?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,315,2017-09-30T04:21:31Z,2017-10-07T03:35:52Z,2017-11-11T21:03:35Z,MERGED,True,64,18,3,https://github.com/krkeegan,Enable 3D Linear Movements for G00 and G01,6,[],https://github.com/MaslowCNC/Firmware/pull/315,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/315#issuecomment-333753354,"Only works if zaxis is connected.  If not, zaxis movements remain as they
were.
Carefully calculates the feedrate to ensure that the limited zaxis
feedrate is not exceeded.
Only affects G00 and G01 commands",Done.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,315,2017-09-30T04:21:31Z,2017-10-07T03:35:52Z,2017-11-11T21:03:35Z,MERGED,True,64,18,3,https://github.com/krkeegan,Enable 3D Linear Movements for G00 and G01,6,[],https://github.com/MaslowCNC/Firmware/pull/315,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/315#issuecomment-334539636,"Only works if zaxis is connected.  If not, zaxis movements remain as they
were.
Carefully calculates the feedrate to ensure that the limited zaxis
feedrate is not exceeded.
Only affects G00 and G01 commands","I am a little concerned that some of the choppy behavior that I have been seeing when traversing at the top of the work surface is caused by the motor shield overheating.
I am seeing this choppy behavior occur when all three axes are attached even when not using this branch.  I am concerned that this branch may make the situation worse because it would cause all three axes to be attached for all linear moves.
I would appreciate it if some people would test this branch.  You don't need to have complicated 3D contours, even a simple square with multiple depth passes would likely be a good test.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,315,2017-09-30T04:21:31Z,2017-10-07T03:35:52Z,2017-11-11T21:03:35Z,MERGED,True,64,18,3,https://github.com/krkeegan,Enable 3D Linear Movements for G00 and G01,6,[],https://github.com/MaslowCNC/Firmware/pull/315,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/315#issuecomment-334660366,"Only works if zaxis is connected.  If not, zaxis movements remain as they
were.
Carefully calculates the feedrate to ensure that the limited zaxis
feedrate is not exceeded.
Only affects G00 and G01 commands","I've run your Square 5.5 Forum.nc with this branch and did not see the choppy behavior you mentioned. There were some times when the horizontal movement paused waitinfg for the z-axis change tom complete, but I don't think that's what you're describing. It seems OK on my setup with GC0.92",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,315,2017-09-30T04:21:31Z,2017-10-07T03:35:52Z,2017-11-11T21:03:35Z,MERGED,True,64,18,3,https://github.com/krkeegan,Enable 3D Linear Movements for G00 and G01,6,[],https://github.com/MaslowCNC/Firmware/pull/315,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/315#issuecomment-334669755,"Only works if zaxis is connected.  If not, zaxis movements remain as they
were.
Carefully calculates the feedrate to ensure that the limited zaxis
feedrate is not exceeded.
Only affects G00 and G01 commands","I vote for merging the branch as is, but keeping an eye on the situation. I have seen in the past changes to the PID controller affecting the thermal behavior of the drivers, but this branch also includes excellent changes that the community is asking for. Thank you @krkeegan for both the excellent contributions and for pointing out that we need to keep an eye on if we're stressing the driver chips more",True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,316,2017-09-30T18:42:22Z,2017-10-06T06:20:36Z,2017-11-11T21:04:03Z,MERGED,True,23,95,10,https://github.com/krkeegan,Fix Compiler Errors; Remove Unused Variables and Functions,1,[],https://github.com/MaslowCNC/Firmware/pull/316,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/316,"Compiler errors were unused variables or comparison of signed and
unsigned.
Also cleaned up numerous other unused variables and functions.
Saved 2% of dynamic memory.","Compiler errors were unused variables or comparison of signed and
unsigned.
Also cleaned up numerous other unused variables and functions.
Saved 2% of dynamic memory.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,316,2017-09-30T18:42:22Z,2017-10-06T06:20:36Z,2017-11-11T21:04:03Z,MERGED,True,23,95,10,https://github.com/krkeegan,Fix Compiler Errors; Remove Unused Variables and Functions,1,[],https://github.com/MaslowCNC/Firmware/pull/316,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/316#issuecomment-333605906,"Compiler errors were unused variables or comparison of signed and
unsigned.
Also cleaned up numerous other unused variables and functions.
Saved 2% of dynamic memory.","Unused variables that are declared inside a function show up as warnings in the compiler.
Sadly globals do not.  I did a search for the global variables that seemed like they were unused and removed those that didn't seem like they would ever be used.
And some of the other fixes are just things I noticed while working with the code.",True,"{'THUMBS_UP': ['https://github.com/BarbourSmith'], 'HEART': ['https://github.com/designfrontier']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,317,2017-10-03T06:33:30Z,2017-10-07T03:35:53Z,2017-11-11T21:03:55Z,MERGED,True,11,4,3,https://github.com/krkeegan,Fix Movement of Z Axis for Non-Standard Pitches,2,[],https://github.com/MaslowCNC/Firmware/pull/317,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/317,Including apparently the ability to set a negative pitch for zaxis adjustments that spin the opposite direction.,Including apparently the ability to set a negative pitch for zaxis adjustments that spin the opposite direction.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,317,2017-10-03T06:33:30Z,2017-10-07T03:35:53Z,2017-11-11T21:03:55Z,MERGED,True,11,4,3,https://github.com/krkeegan,Fix Movement of Z Axis for Non-Standard Pitches,2,[],https://github.com/MaslowCNC/Firmware/pull/317,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/317#issuecomment-333753534,Including apparently the ability to set a negative pitch for zaxis adjustments that spin the opposite direction.,"This is included in #315, I made a separate request here in case we want to merge them separately.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,318,2017-10-12T02:43:31Z,2017-10-12T18:10:17Z,2017-11-11T21:02:43Z,MERGED,True,75,69,4,https://github.com/krkeegan,Improvements For Low RPM Speed Calculation,7,[],https://github.com/MaslowCNC/Firmware/pull/318,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/318,"Adds an elapsedtime attribute to the encoder which returns the number of microseconds between the last two encoder steps, this allows for more accurate resolution of the RPM at very low speeds.
Dampen some of the quantization that occurs when using steps to calculate RPM
Change ComputeSpeed to private function since calling it outside of the PID calculation causes the speed to be calculated on less than a full loop.
Add CachedSpeed function to obtain the RPM last returned by ComputeSpeed, useful at least for PIDVelocity tuning function.","Adds an elapsedtime attribute to the encoder which returns the number of microseconds between the last two encoder steps, this allows for more accurate resolution of the RPM at very low speeds.
Dampen some of the quantization that occurs when using steps to calculate RPM
Change ComputeSpeed to private function since calling it outside of the PID calculation causes the speed to be calculated on less than a full loop.
Add CachedSpeed function to obtain the RPM last returned by ComputeSpeed, useful at least for PIDVelocity tuning function.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,318,2017-10-12T02:43:31Z,2017-10-12T18:10:17Z,2017-11-11T21:02:43Z,MERGED,True,75,69,4,https://github.com/krkeegan,Improvements For Low RPM Speed Calculation,7,[],https://github.com/MaslowCNC/Firmware/pull/318,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/318#issuecomment-336222549,"Adds an elapsedtime attribute to the encoder which returns the number of microseconds between the last two encoder steps, this allows for more accurate resolution of the RPM at very low speeds.
Dampen some of the quantization that occurs when using steps to calculate RPM
Change ComputeSpeed to private function since calling it outside of the PID calculation causes the speed to be calculated on less than a full loop.
Add CachedSpeed function to obtain the RPM last returned by ComputeSpeed, useful at least for PIDVelocity tuning function.",The idea of keeping track of the uS between pulses to get better resolution at low RPM is brilliant üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,319,2017-10-13T22:54:49Z,2017-10-16T17:59:32Z,2017-11-11T21:02:51Z,MERGED,True,96,69,6,https://github.com/krkeegan,Configurable Loop Timing; Improved Movement Loop Timing; and Debugging,7,[],https://github.com/MaslowCNC/Firmware/pull/319,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/319,"Adds a compiler variable LOOPINTERVAL that sets the number of microseconds between each PID.  All places throughout the code that rely on the loop timing for any calculations are adjusted appropriately.
This allows an advanced user to test out a higher PID frequency.
Also adds a compiler variable misloopDebug, that when set to 1 (defaults to 0) will warn the user whenever the movement loop fails to complete before being interrupted by the PID loop.  This is useful for testing and finding your fastest LOOPINTERVAL setting.
Please be careful increasing the PID frequency, I am concerned based on subjective testing that there may be a heat dissipation issue when used at high frequencies.
The above changes will not affect a regular compile of the Firmware and but require a developer to alter the values before compiling to cause any change from how this function now.
Finally, I have removed the concept of a timer in the movement loop entirely.  Instead, each loop waits until the PID loop processes the previously sent command before sending the next command.  This is much simpler and less error prone.","Adds a compiler variable LOOPINTERVAL that sets the number of microseconds between each PID.  All places throughout the code that rely on the loop timing for any calculations are adjusted appropriately.
This allows an advanced user to test out a higher PID frequency.
Also adds a compiler variable misloopDebug, that when set to 1 (defaults to 0) will warn the user whenever the movement loop fails to complete before being interrupted by the PID loop.  This is useful for testing and finding your fastest LOOPINTERVAL setting.
Please be careful increasing the PID frequency, I am concerned based on subjective testing that there may be a heat dissipation issue when used at high frequencies.
The above changes will not affect a regular compile of the Firmware and but require a developer to alter the values before compiling to cause any change from how this function now.
Finally, I have removed the concept of a timer in the movement loop entirely.  Instead, each loop waits until the PID loop processes the previously sent command before sending the next command.  This is much simpler and less error prone.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,320,2017-10-17T01:54:27Z,2017-10-17T16:52:23Z,2018-01-17T22:31:01Z,MERGED,True,23,2,2,https://github.com/krkeegan,Fix Error in Quantization Buffer; Allow RPM to Approach 0,1,[],https://github.com/MaslowCNC/Firmware/pull/320,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/320,"Silly typo in quantization buffer prevented it from doing anything.
If amount of time since last seen encoder step is greater than time
between last encoder steps, then use the time last seen to calculate
speed.  This allows us to at least see speeds approaching 0.  With
elapsedtime only, RPMs would rarely approach 0.","Silly typo in quantization buffer prevented it from doing anything.
If amount of time since last seen encoder step is greater than time
between last encoder steps, then use the time last seen to calculate
speed.  This allows us to at least see speeds approaching 0.  With
elapsedtime only, RPMs would rarely approach 0.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,320,2017-10-17T01:54:27Z,2017-10-17T16:52:23Z,2018-01-17T22:31:01Z,MERGED,True,23,2,2,https://github.com/krkeegan,Fix Error in Quantization Buffer; Allow RPM to Approach 0,1,[],https://github.com/MaslowCNC/Firmware/pull/320,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/320#issuecomment-337295064,"Silly typo in quantization buffer prevented it from doing anything.
If amount of time since last seen encoder step is greater than time
between last encoder steps, then use the time last seen to calculate
speed.  This allows us to at least see speeds approaching 0.  With
elapsedtime only, RPMs would rarely approach 0.",Good catch!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,320,2017-10-17T01:54:27Z,2017-10-17T16:52:23Z,2018-01-17T22:31:01Z,MERGED,True,23,2,2,https://github.com/krkeegan,Fix Error in Quantization Buffer; Allow RPM to Approach 0,1,[],https://github.com/MaslowCNC/Firmware/pull/320,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/320#issuecomment-337315662,"Silly typo in quantization buffer prevented it from doing anything.
If amount of time since last seen encoder step is greater than time
between last encoder steps, then use the time last seen to calculate
speed.  This allows us to at least see speeds approaching 0.  With
elapsedtime only, RPMs would rarely approach 0.","The quantization buffer is helping a lot with the high frequency noise.
At a constant speed of about 11RPM the buffer dropped the standard deviation of the voltage from 11 to 6 and the actual RPM from .41 to .35.  This is with the incremental velocity setup.
I think there is a chance that the making the buffer even more aggressive, could further depress this noise without many drawbacks.
My hope is that this allows us to use more aggressive controller settings with less vibration.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,320,2017-10-17T01:54:27Z,2017-10-17T16:52:23Z,2018-01-17T22:31:01Z,MERGED,True,23,2,2,https://github.com/krkeegan,Fix Error in Quantization Buffer; Allow RPM to Approach 0,1,[],https://github.com/MaslowCNC/Firmware/pull/320,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/320#issuecomment-337361612,"Silly typo in quantization buffer prevented it from doing anything.
If amount of time since last seen encoder step is greater than time
between last encoder steps, then use the time last seen to calculate
speed.  This allows us to at least see speeds approaching 0.  With
elapsedtime only, RPMs would rarely approach 0.",BEAUTIFUL!!!!!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,322,2017-10-22T20:29:19Z,2017-10-23T03:12:07Z,2017-10-26T01:54:11Z,MERGED,True,4,4,1,https://github.com/blurfl,Avoid divide by zero error in coordinated move(),2,[],https://github.com/MaslowCNC/Firmware/pull/322,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/322,"Division of two floats can be truncated to zero if cast as a long. finalNmberOfSteps is used as a denominator in subsequent calculations.
This corrects issue #321.","Division of two floats can be truncated to zero if cast as a long. finalNmberOfSteps is used as a denominator in subsequent calculations.
This corrects issue #321.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,322,2017-10-22T20:29:19Z,2017-10-23T03:12:07Z,2017-10-26T01:54:11Z,MERGED,True,4,4,1,https://github.com/blurfl,Avoid divide by zero error in coordinated move(),2,[],https://github.com/MaslowCNC/Firmware/pull/322,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/322#issuecomment-338537136,"Division of two floats can be truncated to zero if cast as a long. finalNmberOfSteps is used as a denominator in subsequent calculations.
This corrects issue #321.","Great catch! That's a tricky one. This is your second really good tricky bug in a row @blurfl . Awesome job
üëç üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,324,2017-10-31T22:27:17Z,2017-11-01T23:16:52Z,2017-11-01T23:16:55Z,MERGED,True,18,2,1,https://github.com/BarbourSmith,Add a B15 command,1,[],https://github.com/MaslowCNC/Firmware/pull/324,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/324,"The B15 command adjusts first the left then the right chain to the length which will position the sled in the center of the sheet.
This is part of the fix for #323","The B15 command adjusts first the left then the right chain to the length which will position the sled in the center of the sheet.
This is part of the fix for #323",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,325,2017-11-10T00:09:28Z,2017-11-11T00:17:48Z,2017-11-11T00:17:50Z,MERGED,True,39,10,2,https://github.com/BarbourSmith,Seems to auto detect PCB v1.2 ,1,[],https://github.com/MaslowCNC/Firmware/pull/325,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/325,"Clean up the PCB version auto-detection and add support for board version 1.2
Needs to be tested thoroughly on boards 1.1 and 1.0 before merging","Clean up the PCB version auto-detection and add support for board version 1.2
Needs to be tested thoroughly on boards 1.1 and 1.0 before merging",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,325,2017-11-10T00:09:28Z,2017-11-11T00:17:48Z,2017-11-11T00:17:50Z,MERGED,True,39,10,2,https://github.com/BarbourSmith,Seems to auto detect PCB v1.2 ,1,[],https://github.com/MaslowCNC/Firmware/pull/325,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/325#issuecomment-343620806,"Clean up the PCB version auto-detection and add support for board version 1.2
Needs to be tested thoroughly on boards 1.1 and 1.0 before merging","Tested against hardware 1.0, 1.1, 1.2. No changes to 1.0 or 1.1 adds support for 1.2 and creates a new variable which contains the PCB version number",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,326,2017-11-10T00:16:31Z,2017-11-10T23:51:24Z,2017-11-10T23:51:28Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Increase max feedrate to 1000,1,[],https://github.com/MaslowCNC/Firmware/pull/326,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/326,Increase the firmware limit on the cutting speed to 1000mm/min,Increase the firmware limit on the cutting speed to 1000mm/min,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,327,2017-11-14T02:34:08Z,2017-11-14T18:18:43Z,2018-01-11T23:51:34Z,MERGED,True,55,49,1,https://github.com/blurfl,re-group the motor control signals by motor,1,[],https://github.com/MaslowCNC/Firmware/pull/327,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/327,This will make understanding signal flow and troubleshooting easier.,This will make understanding signal flow and troubleshooting easier.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,328,2017-11-18T03:14:01Z,2017-11-20T20:18:34Z,2017-11-20T20:18:34Z,MERGED,True,20,20,1,https://github.com/skiz,Support zAxisAuto settings from GroundControl (B12 Y),2,[],https://github.com/MaslowCNC/Firmware/pull/328,https://github.com/skiz,1,https://github.com/MaslowCNC/Firmware/pull/328,Firmware update that allows setting the AUX1 to to be active high for supporting M codes based on B12 Y,Firmware update that allows setting the AUX1 to to be active high for supporting M codes based on B12 Y,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,328,2017-11-18T03:14:01Z,2017-11-20T20:18:34Z,2017-11-20T20:18:34Z,MERGED,True,20,20,1,https://github.com/skiz,Support zAxisAuto settings from GroundControl (B12 Y),2,[],https://github.com/MaslowCNC/Firmware/pull/328,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/328#issuecomment-345421352,Firmware update that allows setting the AUX1 to to be active high for supporting M codes based on B12 Y,"How about moving the pin definition up to the top where the AUX pins are defined, so it's clear which pins have been committed? AUX4 is the z-axis depth probe presently. When moving the definition out of the function, maybe name spindleControlPin would be better?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,328,2017-11-18T03:14:01Z,2017-11-20T20:18:34Z,2017-11-20T20:18:34Z,MERGED,True,20,20,1,https://github.com/skiz,Support zAxisAuto settings from GroundControl (B12 Y),2,[],https://github.com/MaslowCNC/Firmware/pull/328,https://github.com/skiz,3,https://github.com/MaslowCNC/Firmware/pull/328#issuecomment-345425107,Firmware update that allows setting the AUX1 to to be active high for supporting M codes based on B12 Y,"@blurfl AUX1 has already been committed, and I just made the existing code configurable.  AUX1 has 2 different usages depending on the configuration (servo signal vs 5v).  I'll clean this up a bit.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,328,2017-11-18T03:14:01Z,2017-11-20T20:18:34Z,2017-11-20T20:18:34Z,MERGED,True,20,20,1,https://github.com/skiz,Support zAxisAuto settings from GroundControl (B12 Y),2,[],https://github.com/MaslowCNC/Firmware/pull/328,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/328#issuecomment-345791965,Firmware update that allows setting the AUX1 to to be active high for supporting M codes based on B12 Y,"@blurfl you have the most in depth knowledge of this section of code, thank you for taking a look at it. Does it look ready to merge to you?
@skiz Thank you for all of these improvements! What a cool thing to see first thing on a Monday morning üòÄ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,328,2017-11-18T03:14:01Z,2017-11-20T20:18:34Z,2017-11-20T20:18:34Z,MERGED,True,20,20,1,https://github.com/skiz,Support zAxisAuto settings from GroundControl (B12 Y),2,[],https://github.com/MaslowCNC/Firmware/pull/328,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/328#issuecomment-345807675,Firmware update that allows setting the AUX1 to to be active high for supporting M codes based on B12 Y,It looks good. Thanks for cleaning up the AUX4 definition as well. Ship it!,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,329,2017-11-20T20:27:51Z,2017-11-20T20:29:36Z,2017-11-20T20:29:36Z,CLOSED,False,0,0,0,https://github.com/blurfl,Merge pull request #1 from MaslowCNC/master,1,[],https://github.com/MaslowCNC/Firmware/pull/329,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/329,bring up to date,bring up to date,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,329,2017-11-20T20:27:51Z,2017-11-20T20:29:36Z,2017-11-20T20:29:36Z,CLOSED,False,0,0,0,https://github.com/blurfl,Merge pull request #1 from MaslowCNC/master,1,[],https://github.com/MaslowCNC/Firmware/pull/329,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/329#issuecomment-345821666,bring up to date,I am an idiot...,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,330,2017-11-21T01:30:27Z,2017-11-22T00:35:27Z,2018-01-05T22:46:29Z,MERGED,True,18,6,3,https://github.com/blurfl,Halt on serial buffer overflow,3,[],https://github.com/MaslowCNC/Firmware/pull/330,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/330,"RingBuffer.::write() will return a value to indicate the buffer overrun, so the logic in readSerialCommands() can trigger an immediate stop in the same way other portions of CNC_Functions.h do:
stopFlag = true;
checkForStopCommand();
This will have the same effect as using the ‚ÄòStop‚Äô button in GC, but won't need to go through the serial channel to take effect.
This seems like a minimal change that uses the existing methods and routines‚Ä¶
To test this, create a macro in GC with more than RingBuffer::BUFFERSIZE (currently 128) characters...","RingBuffer.::write() will return a value to indicate the buffer overrun, so the logic in readSerialCommands() can trigger an immediate stop in the same way other portions of CNC_Functions.h do:
stopFlag = true;
checkForStopCommand();
This will have the same effect as using the ‚ÄòStop‚Äô button in GC, but won't need to go through the serial channel to take effect.
This seems like a minimal change that uses the existing methods and routines‚Ä¶
To test this, create a macro in GC with more than RingBuffer::BUFFERSIZE (currently 128) characters...",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,330,2017-11-21T01:30:27Z,2017-11-22T00:35:27Z,2018-01-05T22:46:29Z,MERGED,True,18,6,3,https://github.com/blurfl,Halt on serial buffer overflow,3,[],https://github.com/MaslowCNC/Firmware/pull/330,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/330#issuecomment-346204616,"RingBuffer.::write() will return a value to indicate the buffer overrun, so the logic in readSerialCommands() can trigger an immediate stop in the same way other portions of CNC_Functions.h do:
stopFlag = true;
checkForStopCommand();
This will have the same effect as using the ‚ÄòStop‚Äô button in GC, but won't need to go through the serial channel to take effect.
This seems like a minimal change that uses the existing methods and routines‚Ä¶
To test this, create a macro in GC with more than RingBuffer::BUFFERSIZE (currently 128) characters...","Looks great! Awesome job I will merge this right after running the build
Edit: I thought it was Wednesday! The holidays have me all befuddled üò¨",True,{'LAUGH': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,331,2017-11-22T19:45:33Z,2017-11-22T20:35:18Z,2018-01-05T22:46:31Z,MERGED,True,3,1,1,https://github.com/blurfl,Recompute half width and half height,3,['bug'],https://github.com/MaslowCNC/Firmware/pull/331,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/331,recomputeGeometry fails to recompute halfWidth and halfHeight.,recomputeGeometry fails to recompute halfWidth and halfHeight.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,331,2017-11-22T19:45:33Z,2017-11-22T20:35:18Z,2018-01-05T22:46:31Z,MERGED,True,3,1,1,https://github.com/blurfl,Recompute half width and half height,3,['bug'],https://github.com/MaslowCNC/Firmware/pull/331,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/331#issuecomment-346455848,recomputeGeometry fails to recompute halfWidth and halfHeight.,"This could be part of some of the issues we've been seeing. To prove the situation, print the value of kinematics.halfWidth before bedWidth is changed in CNC_Functions.h::updateKinematicsSettings() and after recomputeGeometry() is called at the end of the same function.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,331,2017-11-22T19:45:33Z,2017-11-22T20:35:18Z,2018-01-05T22:46:31Z,MERGED,True,3,1,1,https://github.com/blurfl,Recompute half width and half height,3,['bug'],https://github.com/MaslowCNC/Firmware/pull/331,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/331#issuecomment-346466221,recomputeGeometry fails to recompute halfWidth and halfHeight.,Great catch @blurfl!!!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,332,2017-11-29T20:34:29Z,2017-11-29T20:34:54Z,2017-11-30T17:51:55Z,MERGED,True,22,20,1,https://github.com/BarbourSmith,Add support to the B02 function to extend only one or the other chain,1,[],https://github.com/MaslowCNC/Firmware/pull/332,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/332,"Which chain to extend is indicated with an L or R added to the line
Eg 'B02 L '","Which chain to extend is indicated with an L or R added to the line
Eg 'B02 L '",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,332,2017-11-29T20:34:29Z,2017-11-29T20:34:54Z,2017-11-30T17:51:55Z,MERGED,True,22,20,1,https://github.com/BarbourSmith,Add support to the B02 function to extend only one or the other chain,1,[],https://github.com/MaslowCNC/Firmware/pull/332,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/332#issuecomment-347996302,"Which chain to extend is indicated with an L or R added to the line
Eg 'B02 L '",I don't know the proper best practices for gcode.  But is it common to just have a variable without a value trigger something?  Would L1 or R1 or Z1 be the better nomenclature?,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,332,2017-11-29T20:34:29Z,2017-11-29T20:34:54Z,2017-11-30T17:51:55Z,MERGED,True,22,20,1,https://github.com/BarbourSmith,Add support to the B02 function to extend only one or the other chain,1,[],https://github.com/MaslowCNC/Firmware/pull/332,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/332#issuecomment-348044302,"Which chain to extend is indicated with an L or R added to the line
Eg 'B02 L '","That's a good question to raise.
I'm not sure. I think it's more clear with just the letter. Adding a number would make me as the question what the number means. I agree that it breaks with gcode convention",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,332,2017-11-29T20:34:29Z,2017-11-29T20:34:54Z,2017-11-30T17:51:55Z,MERGED,True,22,20,1,https://github.com/BarbourSmith,Add support to the B02 function to extend only one or the other chain,1,[],https://github.com/MaslowCNC/Firmware/pull/332,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/332#issuecomment-348061959,"Which chain to extend is indicated with an L or R added to the line
Eg 'B02 L '","Just a thought, I don't think it matters enough to fight over it.  I came across the same problem in the PID B codes and opted to use a 1 to mean true.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,332,2017-11-29T20:34:29Z,2017-11-29T20:34:54Z,2017-11-30T17:51:55Z,MERGED,True,22,20,1,https://github.com/BarbourSmith,Add support to the B02 function to extend only one or the other chain,1,[],https://github.com/MaslowCNC/Firmware/pull/332,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/332#issuecomment-348267339,"Which chain to extend is indicated with an L or R added to the line
Eg 'B02 L '",You know the more I think about it the more I agree. I think that the correct behavior is that the command should always be 'B02 L1 R0' to just do one side. That way we have the option of moving more than one axis with a single command. Thanks for the pointer @krkeegan I will update the behavior,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,333,2017-11-30T05:36:28Z,2017-11-30T17:48:26Z,2018-01-17T22:32:04Z,MERGED,True,6,19,1,https://github.com/krkeegan,Really Fix 3D Linear Movements,1,[],https://github.com/MaslowCNC/Firmware/pull/333,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/333,"So this is embarrassing.  When I submitted PR #315 I created the branch from a cherry-picked set of commits.  I guess I missed something because I just discovered that 3D movements haven't ever been working on the master branch.  Even though I had it working at some point.
Anyways, this PR actually solves #188 and enables 3D linear movements for G00 and G01.  I checked and it really works this time.","So this is embarrassing.  When I submitted PR #315 I created the branch from a cherry-picked set of commits.  I guess I missed something because I just discovered that 3D movements haven't ever been working on the master branch.  Even though I had it working at some point.
Anyways, this PR actually solves #188 and enables 3D linear movements for G00 and G01.  I checked and it really works this time.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,333,2017-11-30T05:36:28Z,2017-11-30T17:48:26Z,2018-01-17T22:32:04Z,MERGED,True,6,19,1,https://github.com/krkeegan,Really Fix 3D Linear Movements,1,[],https://github.com/MaslowCNC/Firmware/pull/333,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/333#issuecomment-348266467,"So this is embarrassing.  When I submitted PR #315 I created the branch from a cherry-picked set of commits.  I guess I missed something because I just discovered that 3D movements haven't ever been working on the master branch.  Even though I had it working at some point.
Anyways, this PR actually solves #188 and enables 3D linear movements for G00 and G01.  I checked and it really works this time.",Thanks for testing and fixing it! üòÄ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,334,2017-11-30T05:42:11Z,2017-11-30T17:50:38Z,2018-01-17T22:31:54Z,MERGED,True,24,26,3,https://github.com/krkeegan,"Clicking Stop, Stops the Axis Where it is Not Where it Should Be",2,[],https://github.com/MaslowCNC/Firmware/pull/334,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/334,"Fixes #293
This adds a stop function to Axis.  Calling it stops the motor where it is, not where it should be.  This should ensure that even when things have gone wrong, there will not be a 2 second lag in stopping the axis.
Also unifies the checkforstopcommand function, so that its actions are consistent whenever a stop command is encountered.
PR #333 should be merged first, otherwise there will be an oddity in stopping the zaxis.","Fixes #293
This adds a stop function to Axis.  Calling it stops the motor where it is, not where it should be.  This should ensure that even when things have gone wrong, there will not be a 2 second lag in stopping the axis.
Also unifies the checkforstopcommand function, so that its actions are consistent whenever a stop command is encountered.
PR #333 should be merged first, otherwise there will be an oddity in stopping the zaxis.",True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,334,2017-11-30T05:42:11Z,2017-11-30T17:50:38Z,2018-01-17T22:31:54Z,MERGED,True,24,26,3,https://github.com/krkeegan,"Clicking Stop, Stops the Axis Where it is Not Where it Should Be",2,[],https://github.com/MaslowCNC/Firmware/pull/334,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/334#issuecomment-348266958,"Fixes #293
This adds a stop function to Axis.  Calling it stops the motor where it is, not where it should be.  This should ensure that even when things have gone wrong, there will not be a 2 second lag in stopping the axis.
Also unifies the checkforstopcommand function, so that its actions are consistent whenever a stop command is encountered.
PR #333 should be merged first, otherwise there will be an oddity in stopping the zaxis.",Fantastic!!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,335,2017-12-01T03:58:07Z,2017-12-01T19:18:41Z,2018-01-17T22:31:47Z,MERGED,True,167,36,9,https://github.com/krkeegan,Additive Velocity Control; PID Logging; Voltage Logging,7,[],https://github.com/MaslowCNC/Firmware/pull/335,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/335,"In short, this makes it so that the velocity controller tracks the current voltage applied to the motor and then adds or subtracts voltage to achieve the desired speed.  This results in much less spiky voltage output and hopefully a smoother operation.
This also improves upon the PID positional testing report by adding a version 2 (v2) option which outputs much more information at once.
I also added a B16 command which runs the motors at selected voltages and then outputs the rpm for those voltages.  This is helpful for characterizing the motors.
This merge requires using new PID values, so it should be merged with the corresponding changes to Ground Control MaslowCNC/GroundControl#485","In short, this makes it so that the velocity controller tracks the current voltage applied to the motor and then adds or subtracts voltage to achieve the desired speed.  This results in much less spiky voltage output and hopefully a smoother operation.
This also improves upon the PID positional testing report by adding a version 2 (v2) option which outputs much more information at once.
I also added a B16 command which runs the motors at selected voltages and then outputs the rpm for those voltages.  This is helpful for characterizing the motors.
This merge requires using new PID values, so it should be merged with the corresponding changes to Ground Control MaslowCNC/GroundControl#485",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,336,2017-12-01T20:08:48Z,2017-12-01T20:10:42Z,2017-12-05T23:38:06Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Make firmware read B02 L1 R0,1,[],https://github.com/MaslowCNC/Firmware/pull/336,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/336,"Make the firmware look for values for the left and right axis on the B02 command
Thank you @krkeegan for pointing out that the old implementation of this was clunky. I appreciate you taking the time to look at my code and offer insightful suggestions like that. I like the new protocol better and I like the way it is implemented now much more. It's in line with the way all of the other commands are read.","Make the firmware look for values for the left and right axis on the B02 command
Thank you @krkeegan for pointing out that the old implementation of this was clunky. I appreciate you taking the time to look at my code and offer insightful suggestions like that. I like the new protocol better and I like the way it is implemented now much more. It's in line with the way all of the other commands are read.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,336,2017-12-01T20:08:48Z,2017-12-01T20:10:42Z,2017-12-05T23:38:06Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Make firmware read B02 L1 R0,1,[],https://github.com/MaslowCNC/Firmware/pull/336,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/336#issuecomment-348622904,"Make the firmware look for values for the left and right axis on the B02 command
Thank you @krkeegan for pointing out that the old implementation of this was clunky. I appreciate you taking the time to look at my code and offer insightful suggestions like that. I like the new protocol better and I like the way it is implemented now much more. It's in line with the way all of the other commands are read.","Awesome, the hive mind generally produces a good result.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,336,2017-12-01T20:08:48Z,2017-12-01T20:10:42Z,2017-12-05T23:38:06Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Make firmware read B02 L1 R0,1,[],https://github.com/MaslowCNC/Firmware/pull/336,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/336#issuecomment-349415926,"Make the firmware look for values for the left and right axis on the B02 command
Thank you @krkeegan for pointing out that the old implementation of this was clunky. I appreciate you taking the time to look at my code and offer insightful suggestions like that. I like the new protocol better and I like the way it is implemented now much more. It's in line with the way all of the other commands are read.","I have been reviewing the grbl code trying to learn how they do things and I came across this:
// Import the next g-code word, expecting a letter followed by a value. Otherwise, error out.
https://github.com/gnea/grbl/blob/5967839ab38f8e984a384db1f64e781cffb9e739/grbl/gcode.c#L119
I also found this NIST paper which also seems to be the most current authoritative standard for gcode??
http://ws680.nist.gov/publication/get_pdf.cfm?pub_id=823374
In section 3.3.2 it basically says that a word is a letter followed by a number, it doesn't allow for letters without a subsequent number.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,336,2017-12-01T20:08:48Z,2017-12-01T20:10:42Z,2017-12-05T23:38:06Z,MERGED,True,2,2,1,https://github.com/BarbourSmith,Make firmware read B02 L1 R0,1,[],https://github.com/MaslowCNC/Firmware/pull/336,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/336#issuecomment-349478123,"Make the firmware look for values for the left and right axis on the B02 command
Thank you @krkeegan for pointing out that the old implementation of this was clunky. I appreciate you taking the time to look at my code and offer insightful suggestions like that. I like the new protocol better and I like the way it is implemented now much more. It's in line with the way all of the other commands are read.",Fantastic! I'm glad to hear we're doing it right üòÄ . Thanks again for pointing me in that direction,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,337,2017-12-09T18:20:11Z,2017-12-11T20:00:05Z,2017-12-11T20:00:05Z,MERGED,True,11,2,2,https://github.com/reecej,Include Sprocket Geometry in Triangular Kinematics,1,[],https://github.com/MaslowCNC/Firmware/pull/337,https://github.com/reecej,1,https://github.com/MaslowCNC/Firmware/pull/337,"Updated the chain length calculations for triangular kinematics to include sprocket geometry effects.
Accounted for chain length wrapped around the sprocket as well as difference in distance of the chain on the sprocket compared to the motor axes.
Additional discussion, as well as an explanation of the geometry involved can be found at: https://forums.maslowcnc.com/t/accounting-for-motor-sprocket-induced-error-when-calculating-chain-lengths/1422","Updated the chain length calculations for triangular kinematics to include sprocket geometry effects.
Accounted for chain length wrapped around the sprocket as well as difference in distance of the chain on the sprocket compared to the motor axes.
Additional discussion, as well as an explanation of the geometry involved can be found at: https://forums.maslowcnc.com/t/accounting-for-motor-sprocket-induced-error-when-calculating-chain-lengths/1422",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,337,2017-12-09T18:20:11Z,2017-12-11T20:00:05Z,2017-12-11T20:00:05Z,MERGED,True,11,2,2,https://github.com/reecej,Include Sprocket Geometry in Triangular Kinematics,1,[],https://github.com/MaslowCNC/Firmware/pull/337,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/337#issuecomment-350497465,"Updated the chain length calculations for triangular kinematics to include sprocket geometry effects.
Accounted for chain length wrapped around the sprocket as well as difference in distance of the chain on the sprocket compared to the motor axes.
Additional discussion, as well as an explanation of the geometry involved can be found at: https://forums.maslowcnc.com/t/accounting-for-motor-sprocket-induced-error-when-calculating-chain-lengths/1422","I wonder whether Motor1Distance and Motor2Distance would be better calculated in Kinematics::recomputeGeometry()? They only change when the calibration changes and keeping the inverseKiinematics routine free from as much calculation as possible will help with speed.
Too, I wonder whether those values and Chain1 and Chain2 might be useful to the simulator? How to make them available to GC?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,337,2017-12-09T18:20:11Z,2017-12-11T20:00:05Z,2017-12-11T20:00:05Z,MERGED,True,11,2,2,https://github.com/reecej,Include Sprocket Geometry in Triangular Kinematics,1,[],https://github.com/MaslowCNC/Firmware/pull/337,https://github.com/reecej,3,https://github.com/MaslowCNC/Firmware/pull/337#issuecomment-350497727,"Updated the chain length calculations for triangular kinematics to include sprocket geometry effects.
Accounted for chain length wrapped around the sprocket as well as difference in distance of the chain on the sprocket compared to the motor axes.
Additional discussion, as well as an explanation of the geometry involved can be found at: https://forums.maslowcnc.com/t/accounting-for-motor-sprocket-induced-error-when-calculating-chain-lengths/1422","Motor1Distance and Motor2Distance are actually the exact same as the previous triangular kinematics formulae, and represent the distance from the motor axes to the sled bit. As such, they change every time xTarget or yTarget change.
The selected variable name may not be as descriptive as it could be.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,337,2017-12-09T18:20:11Z,2017-12-11T20:00:05Z,2017-12-11T20:00:05Z,MERGED,True,11,2,2,https://github.com/reecej,Include Sprocket Geometry in Triangular Kinematics,1,[],https://github.com/MaslowCNC/Firmware/pull/337,https://github.com/reecej,4,https://github.com/MaslowCNC/Firmware/pull/337#issuecomment-350509437,"Updated the chain length calculations for triangular kinematics to include sprocket geometry effects.
Accounted for chain length wrapped around the sprocket as well as difference in distance of the chain on the sprocket compared to the motor axes.
Additional discussion, as well as an explanation of the geometry involved can be found at: https://forums.maslowcnc.com/t/accounting-for-motor-sprocket-induced-error-when-calculating-chain-lengths/1422",Corresponding changes have been made for the GC simulator as well: PR #492,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,338,2017-12-11T18:58:43Z,2017-12-11T23:50:18Z,2017-12-11T23:50:21Z,MERGED,True,0,99,1,https://github.com/BarbourSmith,"Delete the broken ""Test Electronics"" firmware",1,[],https://github.com/MaslowCNC/Firmware/pull/338,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/338,"During the beta testing process we had so many issues that it made sense to have a firmware branch which just made the motors go and printed the words ""connection good"" so that we could test if an issue was a hardware issue or a software one. Fortunately things have improved since then and the ""Test Motors/Encoders"" button under actions has replaced the need for a dedicated firmware. The firmware only works for the beta tester shelds anyway so it can't test any hardware except version 1.0 which is misleading. This PR deletes the file which could be confusing.","During the beta testing process we had so many issues that it made sense to have a firmware branch which just made the motors go and printed the words ""connection good"" so that we could test if an issue was a hardware issue or a software one. Fortunately things have improved since then and the ""Test Motors/Encoders"" button under actions has replaced the need for a dedicated firmware. The firmware only works for the beta tester shelds anyway so it can't test any hardware except version 1.0 which is misleading. This PR deletes the file which could be confusing.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,339,2017-12-11T21:50:50Z,2017-12-11T23:44:12Z,2017-12-11T23:44:15Z,MERGED,True,10,2,1,https://github.com/BarbourSmith,Fix for z not retracting before moving home,1,[],https://github.com/MaslowCNC/Firmware/pull/339,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/339,"What's happening is that since checkForStopCommand() is not called unless the machine is moving. A stop stop sent when the machine is not running causes issues.
The stop command (!) will sit in the buffer until a move command is sent. As soon as the move command is processed, the stop is detected and the move command is not executed.
The solution is to also check for the stop command when the machine is not moving.","What's happening is that since checkForStopCommand() is not called unless the machine is moving. A stop stop sent when the machine is not running causes issues.
The stop command (!) will sit in the buffer until a move command is sent. As soon as the move command is processed, the stop is detected and the move command is not executed.
The solution is to also check for the stop command when the machine is not moving.",True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HOORAY': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,339,2017-12-11T21:50:50Z,2017-12-11T23:44:12Z,2017-12-11T23:44:15Z,MERGED,True,10,2,1,https://github.com/BarbourSmith,Fix for z not retracting before moving home,1,[],https://github.com/MaslowCNC/Firmware/pull/339,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/339#issuecomment-350875890,"What's happening is that since checkForStopCommand() is not called unless the machine is moving. A stop stop sent when the machine is not running causes issues.
The stop command (!) will sit in the buffer until a move command is sent. As soon as the move command is processed, the stop is detected and the move command is not executed.
The solution is to also check for the stop command when the machine is not moving.",good catch.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,341,2017-12-12T21:32:50Z,2017-12-12T23:44:48Z,2017-12-12T23:44:48Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Update CNC_Functions.h,1,[],https://github.com/MaslowCNC/Firmware/pull/341,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/341,"Current code only pauses when the next tool ID is >0.   By comparing nextTool to lastTool, all changes in tools will result in a pause, including when changing back to T0.
This happened to me this weekend when the gcode makercam produced put my 1/8-bit as T1 and my 1/4-inch bit as T0.  I did my pocket and follow work with T1 and then cut out the piece with T0.  The firmware did not pause when it got the command to switch back to T0.","Current code only pauses when the next tool ID is >0.   By comparing nextTool to lastTool, all changes in tools will result in a pause, including when changing back to T0.
This happened to me this weekend when the gcode makercam produced put my 1/8-bit as T1 and my 1/4-inch bit as T0.  I did my pocket and follow work with T1 and then cut out the piece with T0.  The firmware did not pause when it got the command to switch back to T0.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,341,2017-12-12T21:32:50Z,2017-12-12T23:44:48Z,2017-12-12T23:44:48Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Update CNC_Functions.h,1,[],https://github.com/MaslowCNC/Firmware/pull/341,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/341#issuecomment-351224710,"Current code only pauses when the next tool ID is >0.   By comparing nextTool to lastTool, all changes in tools will result in a pause, including when changing back to T0.
This happened to me this weekend when the gcode makercam produced put my 1/8-bit as T1 and my 1/4-inch bit as T0.  I did my pocket and follow work with T1 and then cut out the piece with T0.  The firmware did not pause when it got the command to switch back to T0.","Do we need to set lastTool = -1 when it is defined in order to not lose the first usage? Haven't run the code, just thought about this.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,341,2017-12-12T21:32:50Z,2017-12-12T23:44:48Z,2017-12-12T23:44:48Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Update CNC_Functions.h,1,[],https://github.com/MaslowCNC/Firmware/pull/341,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/341#issuecomment-351232740,"Current code only pauses when the next tool ID is >0.   By comparing nextTool to lastTool, all changes in tools will result in a pause, including when changing back to T0.
This happened to me this weekend when the gcode makercam produced put my 1/8-bit as T1 and my 1/4-inch bit as T0.  I did my pocket and follow work with T1 and then cut out the piece with T0.  The firmware did not pause when it got the command to switch back to T0.","That looks great to me! I like it as is where it won't prompt for tool zero üëç
Congratulations on your first PR @madgrizzle !! üéâ üéÜ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,342,2017-12-13T04:41:12Z,2017-12-13T17:54:57Z,2018-01-17T22:29:24Z,MERGED,True,2340,1943,35,https://github.com/krkeegan,Split up CNC_Functions; Improve Include Inheritance,12,[],https://github.com/MaslowCNC/Firmware/pull/342,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/342,"This is a doozy of a merge.
It splits up the ~2000 line CNC_Functions.h file into several much smaller files.  CNC_Functions had a number of problems including:

It had implementing code in the header
It was massive
Logically unrelated code was all stuffed in there
It didn't permit a good flow of inheritance that allowed define statements to take effect across files.

I tried not to change too many things (yet) and just reorganize.  But I had to fix a few things along the way.  I combined a number of our global variables into a single sys struct to make them easier to find.  Nearly all inheritance is handled in a single Maslow.h file, @BarbourSmith  the version control define is also in Maslow.h.
I truly believe that this is a necessary step in order to start more important improvements to the code base.
I have tested this and I believe everything works, but there are a few things I don't use like spindle control that could have latent issues.
I don't want to be pushy.  But we should merge this in the next few days as manually fixing any further improvements to CNC_Functions into this is a bit tedious.
This does NOT require any changes to GC.","This is a doozy of a merge.
It splits up the ~2000 line CNC_Functions.h file into several much smaller files.  CNC_Functions had a number of problems including:

It had implementing code in the header
It was massive
Logically unrelated code was all stuffed in there
It didn't permit a good flow of inheritance that allowed define statements to take effect across files.

I tried not to change too many things (yet) and just reorganize.  But I had to fix a few things along the way.  I combined a number of our global variables into a single sys struct to make them easier to find.  Nearly all inheritance is handled in a single Maslow.h file, @BarbourSmith  the version control define is also in Maslow.h.
I truly believe that this is a necessary step in order to start more important improvements to the code base.
I have tested this and I believe everything works, but there are a few things I don't use like spindle control that could have latent issues.
I don't want to be pushy.  But we should merge this in the next few days as manually fixing any further improvements to CNC_Functions into this is a bit tedious.
This does NOT require any changes to GC.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,342,2017-12-13T04:41:12Z,2017-12-13T17:54:57Z,2018-01-17T22:29:24Z,MERGED,True,2340,1943,35,https://github.com/krkeegan,Split up CNC_Functions; Improve Include Inheritance,12,[],https://github.com/MaslowCNC/Firmware/pull/342,https://github.com/davidelang,2,https://github.com/MaslowCNC/Firmware/pull/342#issuecomment-351284939,"This is a doozy of a merge.
It splits up the ~2000 line CNC_Functions.h file into several much smaller files.  CNC_Functions had a number of problems including:

It had implementing code in the header
It was massive
Logically unrelated code was all stuffed in there
It didn't permit a good flow of inheritance that allowed define statements to take effect across files.

I tried not to change too many things (yet) and just reorganize.  But I had to fix a few things along the way.  I combined a number of our global variables into a single sys struct to make them easier to find.  Nearly all inheritance is handled in a single Maslow.h file, @BarbourSmith  the version control define is also in Maslow.h.
I truly believe that this is a necessary step in order to start more important improvements to the code base.
I have tested this and I believe everything works, but there are a few things I don't use like spindle control that could have latent issues.
I don't want to be pushy.  But we should merge this in the next few days as manually fixing any further improvements to CNC_Functions into this is a bit tedious.
This does NOT require any changes to GC.","I would suggest that you keep an eye on the grbl code and the trapizodial
planning output it produces so that you can slowly morph the maslow code to
where it can plugin there.

Thank you so much for doing this sort of work",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,342,2017-12-13T04:41:12Z,2017-12-13T17:54:57Z,2018-01-17T22:29:24Z,MERGED,True,2340,1943,35,https://github.com/krkeegan,Split up CNC_Functions; Improve Include Inheritance,12,[],https://github.com/MaslowCNC/Firmware/pull/342,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/342#issuecomment-351422298,"This is a doozy of a merge.
It splits up the ~2000 line CNC_Functions.h file into several much smaller files.  CNC_Functions had a number of problems including:

It had implementing code in the header
It was massive
Logically unrelated code was all stuffed in there
It didn't permit a good flow of inheritance that allowed define statements to take effect across files.

I tried not to change too many things (yet) and just reorganize.  But I had to fix a few things along the way.  I combined a number of our global variables into a single sys struct to make them easier to find.  Nearly all inheritance is handled in a single Maslow.h file, @BarbourSmith  the version control define is also in Maslow.h.
I truly believe that this is a necessary step in order to start more important improvements to the code base.
I have tested this and I believe everything works, but there are a few things I don't use like spindle control that could have latent issues.
I don't want to be pushy.  But we should merge this in the next few days as manually fixing any further improvements to CNC_Functions into this is a bit tedious.
This does NOT require any changes to GC.","Agree, that is my goal as well.  I have to start from the bottom up, so the serial line parser is on deck first, then slowly work our way towards acceleration planning.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,342,2017-12-13T04:41:12Z,2017-12-13T17:54:57Z,2018-01-17T22:29:24Z,MERGED,True,2340,1943,35,https://github.com/krkeegan,Split up CNC_Functions; Improve Include Inheritance,12,[],https://github.com/MaslowCNC/Firmware/pull/342,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/342#issuecomment-351439487,"This is a doozy of a merge.
It splits up the ~2000 line CNC_Functions.h file into several much smaller files.  CNC_Functions had a number of problems including:

It had implementing code in the header
It was massive
Logically unrelated code was all stuffed in there
It didn't permit a good flow of inheritance that allowed define statements to take effect across files.

I tried not to change too many things (yet) and just reorganize.  But I had to fix a few things along the way.  I combined a number of our global variables into a single sys struct to make them easier to find.  Nearly all inheritance is handled in a single Maslow.h file, @BarbourSmith  the version control define is also in Maslow.h.
I truly believe that this is a necessary step in order to start more important improvements to the code base.
I have tested this and I believe everything works, but there are a few things I don't use like spindle control that could have latent issues.
I don't want to be pushy.  But we should merge this in the next few days as manually fixing any further improvements to CNC_Functions into this is a bit tedious.
This does NOT require any changes to GC.","Also, there is a fork of the maslow firmware that drives stepper motors instead
of DC motors, it would be great to be able to integrate that work at some point.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,342,2017-12-13T04:41:12Z,2017-12-13T17:54:57Z,2018-01-17T22:29:24Z,MERGED,True,2340,1943,35,https://github.com/krkeegan,Split up CNC_Functions; Improve Include Inheritance,12,[],https://github.com/MaslowCNC/Firmware/pull/342,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/342#issuecomment-351470427,"This is a doozy of a merge.
It splits up the ~2000 line CNC_Functions.h file into several much smaller files.  CNC_Functions had a number of problems including:

It had implementing code in the header
It was massive
Logically unrelated code was all stuffed in there
It didn't permit a good flow of inheritance that allowed define statements to take effect across files.

I tried not to change too many things (yet) and just reorganize.  But I had to fix a few things along the way.  I combined a number of our global variables into a single sys struct to make them easier to find.  Nearly all inheritance is handled in a single Maslow.h file, @BarbourSmith  the version control define is also in Maslow.h.
I truly believe that this is a necessary step in order to start more important improvements to the code base.
I have tested this and I believe everything works, but there are a few things I don't use like spindle control that could have latent issues.
I don't want to be pushy.  But we should merge this in the next few days as manually fixing any further improvements to CNC_Functions into this is a bit tedious.
This does NOT require any changes to GC.","yes yes yes yes yes yes yes!!! This has been on my todo list since the dawn of time. We've had this massive ugly header file with functions in it for way too long. Thank you so much for taking care of it.
I'm going to merge this right away, we've got a week before the next official release so we can track down any lingering weirdness.
This is massive. Thank you @krkeegan !!!! ‚ù§Ô∏è üëç üëç üî•",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,343,2017-12-15T01:14:00Z,2017-12-15T18:34:11Z,2017-12-15T18:34:11Z,CLOSED,False,4,4,3,https://github.com/reecej,Change Encoder Steps to Float,1,[],https://github.com/MaslowCNC/Firmware/pull/343,https://github.com/reecej,1,https://github.com/MaslowCNC/Firmware/pull/343,"The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/","The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,343,2017-12-15T01:14:00Z,2017-12-15T18:34:11Z,2017-12-15T18:34:11Z,CLOSED,False,4,4,3,https://github.com/reecej,Change Encoder Steps to Float,1,[],https://github.com/MaslowCNC/Firmware/pull/343,https://github.com/reecej,2,https://github.com/MaslowCNC/Firmware/pull/343#issuecomment-351891454,"The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/",I see that changes were made to a few of the files I modified here recently and I did not merge soon enough. The CNC_Functions.h changes should now go to System.cpp.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,343,2017-12-15T01:14:00Z,2017-12-15T18:34:11Z,2017-12-15T18:34:11Z,CLOSED,False,4,4,3,https://github.com/reecej,Change Encoder Steps to Float,1,[],https://github.com/MaslowCNC/Firmware/pull/343,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/343#issuecomment-351923540,"The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/",We should also remove the extraneous lines from Axis::write() as well.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,343,2017-12-15T01:14:00Z,2017-12-15T18:34:11Z,2017-12-15T18:34:11Z,CLOSED,False,4,4,3,https://github.com/reecej,Change Encoder Steps to Float,1,[],https://github.com/MaslowCNC/Firmware/pull/343,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/343#issuecomment-351923809,"The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/","Also nice work @reecej, good find.  I haven't had a chance to test it this solves all of it",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,343,2017-12-15T01:14:00Z,2017-12-15T18:34:11Z,2017-12-15T18:34:11Z,CLOSED,False,4,4,3,https://github.com/reecej,Change Encoder Steps to Float,1,[],https://github.com/MaslowCNC/Firmware/pull/343,https://github.com/reecej,5,https://github.com/MaslowCNC/Firmware/pull/343#issuecomment-351925610,"The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/","@krkeegan, are you talking about removing the steps*2, round, and /2? If so, I can include that as well.
Also, if you could test at some point and see if it works, that would be very much appreciated. I don't have my Maslow kit yet so I can't validate that this fixes the error.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,343,2017-12-15T01:14:00Z,2017-12-15T18:34:11Z,2017-12-15T18:34:11Z,CLOSED,False,4,4,3,https://github.com/reecej,Change Encoder Steps to Float,1,[],https://github.com/MaslowCNC/Firmware/pull/343,https://github.com/krkeegan,6,https://github.com/MaslowCNC/Firmware/pull/343#issuecomment-352077791,"The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/","I made PR #344 which fixes the conflict so that @BarbourSmith doesn't have to figure it out.
I still need to test that this solves all of the problems, but I am pretty sure it does.
Nice work!",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,343,2017-12-15T01:14:00Z,2017-12-15T18:34:11Z,2017-12-15T18:34:11Z,CLOSED,False,4,4,3,https://github.com/reecej,Change Encoder Steps to Float,1,[],https://github.com/MaslowCNC/Firmware/pull/343,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/343#issuecomment-352079050,"The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
Full discussion at: https://forums.maslowcnc.com/t/what-is-correct-chain-pitch/1430/",Great! I will close this pull request and wait on merging #344 until we have confirmed that it fixes the issue,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/344,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352079751,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.",Great! I will merge this as soon as you guys say it's good to go!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/reecej,3,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352083260,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Thanks for getting this sorted @krkeegan.
One note. I see that the _mmPerRotation is statically calculated. I have seen the sprocket radius entered into other parts of the code as 10.2, whereas it seemed to be calculated as 10.1 here. Do you know which is the correct value?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352083782,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","it needs to be calculated based on link size and sprocket teeth, not everyone is
using the same sprockets.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/krkeegan,5,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352085926,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","I think _mmPerRotation  is part of the settings sent from GC and I think that is just a fixed number entered by the user. The value I changed is only a initialized value which can't ever be used, I thought it would just help programmers in the future if they had a default value of its size.
I do see that in kinematics there is a sprocket radius hardcoded in there.  That should become a variable at some point.",True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/davidelang,6,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352087853,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","mmPer_Rotation should be calculated from the link size and number of teeth, not
set as a float _anywhere_

people are not going to figure out the radius correctly for a sprocket, let
alone get the other stuff right.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/reecej,7,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352088994,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Good point @davidelang, and calculating it based on a 10 tooth sprocket with a 0.25"" pitch on 25 chain, the radius is 10.1mm, just as @krkeegan had. I agree that calculating based on chain pitch and number of sprocket teeth is the more reliable method, but that would be another PR. Also note that the value of 10.2 using in the kinematics formulas is wrong then.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/davidelang,8,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352089736,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","On Fri, 15 Dec 2017, reecej wrote:
 Good point @davidelang, and calculating it based on a 10 tooth sprocket with a
 0.25"" pitch on #25 chain, the radius is 10.1mm, just as @krkeegan had. I agree
 that calculating based on chain pitch and number of sprocket teeth is the more
 reliable method, but that would be another PR.
Ok, but it should be done now as well.
 Also note that the value of 10.2 using in the kinematics formulas is wrong
 then.
I was told that it was calculated, not hard-coded (and didn't take the time to
look)

we definantly need to change this.

And I think this 1% difference accounts for the remaining error that was
reported after the gearbox internals fix was implemented.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/reecej,9,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352091964,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","If so, do we want to correct that value as well in this release? Several aspects of this code would make a machine calibration useful in the code now versus the previous release (updated motor encoder steps per revolution, updated triangular kinematics), and an updated sprocket radius would be similar as well. It might be useful to push that through and then strongly recommend users perform a calibration after upgrading to account for all changes.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/davidelang,10,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352095299,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Since the release is next Wednesday, and we will probably be going from 0.99 to
1.0 (rather than 0.100), I think we should include every fix we can here.

We are going through this with a fine toothed comb, and have found many,
individually small, problems that affect accuracy.

I think that the aggregate of the 0.99 pid loop changes and the various accuracy
changes are just about to the point of recommending that people thow away their
.ini file and recreate it from scratch.

David Lang

P.S. again, if we could add better triangulation calibration and chain sag
calculations to this, I think we would be _very_ close to ideal",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/madgrizzle,11,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352111279,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Isn't _mmPerRotation already calculated as you say?  numberofteeth*chainPitch?
In system.cpp, the following appears:

if (gearTeeth != -1 and chainPitch != -1){
float distPerRot = gearTeeth*chainPitch;
leftAxis.changePitch(distPerRot);
rightAxis.changePitch(distPerRot);
zAxis.changePitch(zDistPerRot);
}

in axis.cpp, that calls:

void   Axis::changePitch(const float& newPitch){
...
_mmPerRotation = newPitch;
}

You can calculate R from that (_mmPerRotation/(2*Pi)).  I would just throw that calc into the changePitch routine.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/reecej,12,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352114950,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","As pointed out, it looks like the _mmPerRotation is calculated as gearTeeth*chainPitch, which is what we want. From what I can see, the value R used in the current quadilateral and triangular kinematics is statically set to 10.2, which is not correct for the configuration of 25 chain and a 10 tooth sprocket.
The difference of 10.1 vs 10.2 for the R value would only make a 1% difference on the length of chain wrapping around the sprocket, but 0.2-0.3mm error in chain length is possible. It is a simple fix, and I would recommend we either update it now to the 10.1 value or set it to be calculated similar to _mmPerRotation.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352115757,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Better to calculate it, as that will permit folks to use non-standard sprockets.",True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/reecej,14,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352118129,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.",How would you want to do that? Include CNC_Functions.h in Kinematics.h and define R = (gearTeeth x chainPitch)/(2 x 3.14159)?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/davidelang,15,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352118857,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","On Fri, 15 Dec 2017, reecej wrote:
 Date: Fri, 15 Dec 2017 13:37:55 -0800
 How would you want to do that? Include CNC_Functions.h in Kinematics.h and define R = (gearTeeth*chainPitch)/(2*3.14159)?
that sounds about right

make sure this is correct for the triangular kinematics as well",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/madgrizzle,16,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352119446,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","It should be part of the updateMotorSettings routine (or subroutine called in it, such as changePitch)",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/BarbourSmith,17,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352127502,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","#345 updates the default radius to EDIT: 10.1
#346 sets the radius to a value computed from the chain pitch and number of sprocket teeth exactly as @reecej  and @madgrizzle recommended",True,{'HEART': ['https://github.com/krkeegan']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/krkeegan,18,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352128343,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.",Those look like the solve the concerns raised.,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/reecej,19,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352128745,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","I agree. That will also apply the needed changes for the updated triangular kinematics as well, which now incorporate the sprocket radius.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/BarbourSmith,20,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352129322,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Great! I'm going to merge this whole batch of pull requests then üëç üëç üòÄ
Great collaboration everyone!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/reecej,21,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352129750,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.",Are similar changes need in the GC simulator to keep them in sync? I believe GC has R defined statically as 10.2.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/BarbourSmith,22,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352131438,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","Yes, this same issue will be present in the simulator. Great reminder!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,344,2017-12-15T18:26:52Z,2017-12-15T22:38:25Z,2018-01-17T22:29:11Z,MERGED,True,9,15,5,https://github.com/krkeegan,Change Encoder Steps to Float - Conflicts Fixed,3,[],https://github.com/MaslowCNC/Firmware/pull/344,https://github.com/davidelang,23,https://github.com/MaslowCNC/Firmware/pull/344#issuecomment-352134903,"Fixed the conflicts in @reecej PR #343.
The encoderSteps and zEncoderSteps variables were changed from int to float, and the changeEncoderResolution function updated accordingly.
I also removed the conversion of distance into a whole number of encoder steps.  I don't know how much this is really doing for us.  Plus after the fact, I realize I made that code much more complicated than necessary.  We can always add this concept back in if it is necessary.
I still have not had the chance to test to see if this fixes all of the float->int errors, but it certianly looks like it does.","the simulator needs these changes, but for the main system, it should be showing
the results of the g-code, not actually calculating how the maslow gets there
(that would make gc far too dependent on implementation details)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,345,2017-12-15T22:08:24Z,2017-12-15T22:38:40Z,2017-12-15T22:38:42Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Update sprocket radius,1,[],https://github.com/MaslowCNC/Firmware/pull/345,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/345,Update sprocket radius from 10.2 to 10.1,Update sprocket radius from 10.2 to 10.1,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,346,2017-12-15T22:25:01Z,2017-12-15T22:38:56Z,2017-12-15T22:38:59Z,MERGED,True,2,0,1,https://github.com/BarbourSmith,Set kinematics radius from the values sent during calibration,1,[],https://github.com/MaslowCNC/Firmware/pull/346,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/346,As discussed in #344,As discussed in #344,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,346,2017-12-15T22:25:01Z,2017-12-15T22:38:56Z,2017-12-15T22:38:59Z,MERGED,True,2,0,1,https://github.com/BarbourSmith,Set kinematics radius from the values sent during calibration,1,[],https://github.com/MaslowCNC/Firmware/pull/346,https://github.com/reecej,2,https://github.com/MaslowCNC/Firmware/pull/346#issuecomment-352128499,As discussed in #344,Looks good to me.,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,347,2017-12-16T04:21:21Z,2017-12-18T19:06:28Z,2018-01-17T22:29:02Z,MERGED,True,250,180,16,https://github.com/krkeegan,Create Realtime Loop; Perform System Init on Stop,5,[],https://github.com/MaslowCNC/Firmware/pull/347,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/347,"Created a Realtime function that is called frequently to act on realtime actions.  Put all realtime functions in here. This includes returning position and error, reading the serial buffer.  Remove all calls to these functions in the code.
Remove all calls to Delay in favor of maslowDelay which calls the realtime function.
On Stop, return from all functions back to base loop and do a reset similar to init.
Sanitize command string before exectuting. Removes comments and other characters and functions which we don't support. This code was taken heavily from GRBL.
Clean up some usage of passed variables where not necessary in returnpoz
In RingBuffer use the passed buffer and don't constantly create large 128 byte strings.
Create a number of precompile defines to make changing some things easier and to remove need for variables in some places.","Created a Realtime function that is called frequently to act on realtime actions.  Put all realtime functions in here. This includes returning position and error, reading the serial buffer.  Remove all calls to these functions in the code.
Remove all calls to Delay in favor of maslowDelay which calls the realtime function.
On Stop, return from all functions back to base loop and do a reset similar to init.
Sanitize command string before exectuting. Removes comments and other characters and functions which we don't support. This code was taken heavily from GRBL.
Clean up some usage of passed variables where not necessary in returnpoz
In RingBuffer use the passed buffer and don't constantly create large 128 byte strings.
Create a number of precompile defines to make changing some things easier and to remove need for variables in some places.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,347,2017-12-16T04:21:21Z,2017-12-18T19:06:28Z,2018-01-17T22:29:02Z,MERGED,True,250,180,16,https://github.com/krkeegan,Create Realtime Loop; Perform System Init on Stop,5,[],https://github.com/MaslowCNC/Firmware/pull/347,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/347#issuecomment-352159861,"Created a Realtime function that is called frequently to act on realtime actions.  Put all realtime functions in here. This includes returning position and error, reading the serial buffer.  Remove all calls to these functions in the code.
Remove all calls to Delay in favor of maslowDelay which calls the realtime function.
On Stop, return from all functions back to base loop and do a reset similar to init.
Sanitize command string before exectuting. Removes comments and other characters and functions which we don't support. This code was taken heavily from GRBL.
Clean up some usage of passed variables where not necessary in returnpoz
In RingBuffer use the passed buffer and don't constantly create large 128 byte strings.
Create a number of precompile defines to make changing some things easier and to remove need for variables in some places.","This continues the work restructuring things from the bottom up.  The realtime function doesn't do much right now, but is a crucial element.
Next up, importing the gcode block structure concept from grbl.  Which should finally let me touch the $ variables.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,347,2017-12-16T04:21:21Z,2017-12-18T19:06:28Z,2018-01-17T22:29:02Z,MERGED,True,250,180,16,https://github.com/krkeegan,Create Realtime Loop; Perform System Init on Stop,5,[],https://github.com/MaslowCNC/Firmware/pull/347,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/347#issuecomment-352163039,"Created a Realtime function that is called frequently to act on realtime actions.  Put all realtime functions in here. This includes returning position and error, reading the serial buffer.  Remove all calls to these functions in the code.
Remove all calls to Delay in favor of maslowDelay which calls the realtime function.
On Stop, return from all functions back to base loop and do a reset similar to init.
Sanitize command string before exectuting. Removes comments and other characters and functions which we don't support. This code was taken heavily from GRBL.
Clean up some usage of passed variables where not necessary in returnpoz
In RingBuffer use the passed buffer and don't constantly create large 128 byte strings.
Create a number of precompile defines to make changing some things easier and to remove need for variables in some places.","Axis::test() calls motorGearboxEncoder.motor.directWrite() 1000 times in each direction; shouldn't that call happen before the loop? motorGearboxEncoder.motor.directWrite() sets PWM going, doesn't  need to be called repeatedly, does it?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,347,2017-12-16T04:21:21Z,2017-12-18T19:06:28Z,2018-01-17T22:29:02Z,MERGED,True,250,180,16,https://github.com/krkeegan,Create Realtime Loop; Perform System Init on Stop,5,[],https://github.com/MaslowCNC/Firmware/pull/347,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/347#issuecomment-352167363,"Created a Realtime function that is called frequently to act on realtime actions.  Put all realtime functions in here. This includes returning position and error, reading the serial buffer.  Remove all calls to these functions in the code.
Remove all calls to Delay in favor of maslowDelay which calls the realtime function.
On Stop, return from all functions back to base loop and do a reset similar to init.
Sanitize command string before exectuting. Removes comments and other characters and functions which we don't support. This code was taken heavily from GRBL.
Clean up some usage of passed variables where not necessary in returnpoz
In RingBuffer use the passed buffer and don't constantly create large 128 byte strings.
Create a number of precompile defines to make changing some things easier and to remove need for variables in some places.","No directwrite doesn't need to be repeatedly called, but it doesn't do anything if it is, so I just left it.  The only call that I am replacing in that function is a call to delay.  The realtime function take a couple hundred microseconds at the most and often times only 10 to complete.  A call to delay just wastes clock time, so we repurpose that time to check for stop commands, otherwise there is no way to stop the test function.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,348,2017-12-17T02:36:35Z,2017-12-18T19:07:36Z,2017-12-18T19:07:36Z,MERGED,True,2,7,1,https://github.com/madgrizzle,Fix problem with tools getting set to T0,1,[],https://github.com/MaslowCNC/Firmware/pull/348,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/348,Fix in reference to Issue #340.,Fix in reference to Issue #340.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,348,2017-12-17T02:36:35Z,2017-12-18T19:07:36Z,2017-12-18T19:07:36Z,MERGED,True,2,7,1,https://github.com/madgrizzle,Fix problem with tools getting set to T0,1,[],https://github.com/MaslowCNC/Firmware/pull/348,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/348#issuecomment-352527164,Fix in reference to Issue #340.,üëç üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/350,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354031719,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","Oh, I left a bunch of commented Grbl code.  I intend to uncomment and enable this code in Maslow overtime as features are added.  I commit to making sure that this comment code is eventually used or deleted.  I am not a fan of leaving nonfunctioning confusing code in the codebase for very long.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354032508,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","Oh crucial thing.
YOU CANNOT GO BACK FROM THIS BRANCH WITHOUT RE-CALIBRATING YOUR CHAIN LENGTHS.
There is no downgrade feature.  Sorry.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354167910,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.

Fantastic! I think this change makes a lot of sense.

This seamlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate. I have tested this and it works. I also tested a freshly wiped GC and firmware and went through the calibration process just fine.

Thank you for taking the time to think about and test that!
I will merge this right away and bump the version numbers to 1.011 to ensure we stay in sync üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354171725,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","On Wed, 27 Dec 2017, BarbourSmith wrote:
 I will merge this right away and bump the version numbers to 1.011 to ensure we stay in sync üëç üëç

make it 1.0.1 or 0.1.1, not 1.011",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354172762,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","1.01.1 would be ideal, but that would break the version comparison system. Unfortunately 1.011 doesn't work with the version comparison system either because only two digits after the decimal are sent from the Arduino. I'm just going to bump us to 1.02",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/davidelang,7,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354173603,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","On Wed, 27 Dec 2017, BarbourSmith wrote:
 1.01.1 would be ideal, but that would break the version comparison system.
 Unfortunately 1.011 doesn't work with the version comparison system either
 because only two digits after the decimal are sent from the Arduino. I'm just
 going to bump us to 1.02
let's fix the version comparison system in 1.02 then as well :-)

let's allow it to support multiple dots in the version, leading zero's in a
field should be able to be left out.

This would also have allowed us to go from 0.99 to 0.100 without confusing
things (but the changes were significant enough that 1.0 was reasonable)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/krkeegan,8,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354183609,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","@BarbourSmith for fun, once you have run GC on this once, you can open the arduino ide and select Serial Monitor under the tools menu.  If you select the proper port and set the baud to 57600 you can directly control the maslow from a command line.  The position reports that I complained about in #353 will be apparent.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/BarbourSmith,9,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354185351,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","Oh yeah, I know exactly what you are talking about. The terminal gets totally spammed with position reports üò¨",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/krkeegan,10,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354189929,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","let's allow it to support multiple dots in the version, leading zero's in a
field should be able to be left out.

I only add the caveat that Grbl seems to only allow X.Xx nomenclature.
https://github.com/gnea/grbl/wiki/Grbl-v1.1-Interface#welcome-message
We have hardcoded 1.00 into our welcome message, I don't know if we care.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,350,2017-12-27T00:53:37Z,2017-12-27T19:47:16Z,2018-01-17T22:28:53Z,MERGED,True,1351,527,25,https://github.com/krkeegan,Save Settings in EEPROM; Optimize RAM Usage,19,[],https://github.com/MaslowCNC/Firmware/pull/350,https://github.com/davidelang,11,https://github.com/MaslowCNC/Firmware/pull/350#issuecomment-354191108,"Created the $ command from Grbl.  This has the following commands:

$ - List possible commands
$$ - List current settings and their values
$n=value - set a setting to this value
$K - Force recompute of kinematics (settings noted with a $K affect the kinematics)

$RST=$ - Wipe settings from eeprom (not step data) (this command is not listed by $)
$RST=# - Wipe all maslow values including step data
$RST=* - Wipe entire EEPROM of device all 4kb

All values previously passed by the B03 and B13 commands are saved on the device, plus a few more other helpful values as well. (dlang sorry I removed the gear teeth and pitch before you comments on the forum. they can always be added back in the future if there really is a need)
The settings struct has version control, so we can add new settings to be saved, although a jump from one version to the next will wipe the user's settings (not step counts) requiring a resync of the settings data.  Keep in mind any setting we add takes up a corresponding amount of RAM.
The step counts are saved in a different struct, that also has version control.  Because this is a much smaller struct and losing step data requires a full recalibration this function allows for upgrading from one version to the next.  I doubt there will be many needs for this, but it is an option.  We actually save steps now rather than chain lengths, so we don't need any machine details to know where the encoders are.
This seemlessly handles the upgrade from the old chain length data saved in EEPROM to this data, so users shouldn't need to recalibrate.  I have tested this and it works.  I also tested a freshly wiped GC and firmware and went through the calibration process just fine.
To avoid interfering with the prior EEPROM data we start at address 300.  It wastes the lower numbers, but I can't think of a scenario in which we use all 4kb of EEPROM.
With all of this, we now use ~100 fewer bytes on startup in RAM.  Most of this was achieved by using pointers in the axes and motorgearbox settings that are passed from the global settings to these classes.
This update REQUIRES a matching update to GC.  And should be peformed with a change in version numbers.
See MaslowCNC/GroundControl#522
Closes #183","the grbl version string is one thing (and it's hardcoded to 1.0 to satisfy
broken gcode senders), but for the maslow version string that we are worrying
about here.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,354,2017-12-27T21:59:52Z,2017-12-27T22:11:46Z,2018-01-17T22:28:45Z,MERGED,True,0,1899,6,https://github.com/krkeegan,Remove Unused Floating Point Number Files,1,[],https://github.com/MaslowCNC/Firmware/pull/354,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/354,"This removes the number libraries that are not in use.
Fixes #349","This removes the number libraries that are not in use.
Fixes #349",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,354,2017-12-27T21:59:52Z,2017-12-27T22:11:46Z,2018-01-17T22:28:45Z,MERGED,True,0,1899,6,https://github.com/krkeegan,Remove Unused Floating Point Number Files,1,[],https://github.com/MaslowCNC/Firmware/pull/354,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/354#issuecomment-354185214,"This removes the number libraries that are not in use.
Fixes #349",Excellent!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,362,2018-01-06T02:14:39Z,2018-01-08T19:27:55Z,2018-01-17T22:28:40Z,MERGED,True,13,0,2,https://github.com/krkeegan,Add a Simple Fake Servo Option,2,[],https://github.com/MaslowCNC/Firmware/pull/362,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/362,"This is very basic.
If FAKE_SERVO is defined, each PID cycle it will look at what the last requested PID rpm was and will update the encoder steps as though a motor operated at that speed for the amount of loopinterval.
It adds up to 10% error to mimic servo noise.  It doesn't do a great job of testing the PID settings (this would be tough) and doesn't verify that the encoder library is working.  But other than that I think this tests the rest of the code in the Firmware.
It closes #361","This is very basic.
If FAKE_SERVO is defined, each PID cycle it will look at what the last requested PID rpm was and will update the encoder steps as though a motor operated at that speed for the amount of loopinterval.
It adds up to 10% error to mimic servo noise.  It doesn't do a great job of testing the PID settings (this would be tough) and doesn't verify that the encoder library is working.  But other than that I think this tests the rest of the code in the Firmware.
It closes #361",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,362,2018-01-06T02:14:39Z,2018-01-08T19:27:55Z,2018-01-17T22:28:40Z,MERGED,True,13,0,2,https://github.com/krkeegan,Add a Simple Fake Servo Option,2,[],https://github.com/MaslowCNC/Firmware/pull/362,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/362#issuecomment-356069920,"This is very basic.
If FAKE_SERVO is defined, each PID cycle it will look at what the last requested PID rpm was and will update the encoder steps as though a motor operated at that speed for the amount of loopinterval.
It adds up to 10% error to mimic servo noise.  It doesn't do a great job of testing the PID settings (this would be tough) and doesn't verify that the encoder library is working.  But other than that I think this tests the rest of the code in the Firmware.
It closes #361","I think that is a fantastic implementation.
It does a great job of being a low level as possible which means the amount of code changed is minimal and we get to test as much of the code as possible. All the ways of doing this that I thought of were much more complicated. Beautiful.
üëç üëç üíØ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,364,2018-01-08T04:39:29Z,2018-01-08T19:43:07Z,2018-01-08T19:43:07Z,MERGED,True,2,0,1,https://github.com/ladams00,ladams00 signing in...,1,[],https://github.com/MaslowCNC/Firmware/pull/364,https://github.com/ladams00,1,https://github.com/MaslowCNC/Firmware/pull/364,"Bar, I'm excited to get into router CNCs.  Your and the community's efforts will enable the average person to do great things in their home garages.  I'm looking forward to contributing back!","Bar, I'm excited to get into router CNCs.  Your and the community's efforts will enable the average person to do great things in their home garages.  I'm looking forward to contributing back!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,364,2018-01-08T04:39:29Z,2018-01-08T19:43:07Z,2018-01-08T19:43:07Z,MERGED,True,2,0,1,https://github.com/ladams00,ladams00 signing in...,1,[],https://github.com/MaslowCNC/Firmware/pull/364,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/364#issuecomment-356074248,"Bar, I'm excited to get into router CNCs.  Your and the community's efforts will enable the average person to do great things in their home garages.  I'm looking forward to contributing back!",Thanks for taking the time to sign the guest book @ladams00 !! Welcome!! üéâ üéà üíê,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/367,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356139988,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","Wait, I don't think this is wrong.
I think the firmware should be sending an 'ok' to the ~ command.
What looks like the issue is that in SerialPortThread.py we don't handle an 'ok' to a quick_queue command.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356140372,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366",Ohhhh I like that a lot! @krkeegan,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356141016,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","It is a bit odd, but even if a gcode line is sent first and then a quick_code command is sent second, GC should always treat the immediate 'ok' after a quick_code as applying to the receipt of the QC and not the gcode command.
Not very FIFO, but the quick_codes should only be safety commands ~,! and whatever else we add.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356141584,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","When I'm looking at the code I don't see how the quick_queue is treated differently than the regular commands. They are both sent with the write() method, right?
def _write (self, message):
        #message = message + 'L' + str(len(message) + 1 + 2 + len(str(len(message))) )
        
        taken = time.time() - self.lastWriteTime
        if taken < self.MINTimePerLine:  # wait between sends
            # self.data.logger.writeToLog(""Sleeping: "" + str( taken ) + ""\n"")
            time.sleep (self.MINTimePerLine) # could use (taken - MINTimePerLine)
        
        message = message.encode()
        print ""Sending: "" + str(message)
        
        message = message + '\n'
        
        self.bufferSpace       = self.bufferSpace - len(message)
        self.lengthOfLastLineStack.put(len(message))
        self.machineIsReadyForData = False
        
        message = message.encode()
        try:
            self.serialInstance.write(message)
            self.data.logger.writeToLog(""Sent: "" + str(message))
        except:
            print(""write issue"")
            self.data.logger.writeToLog(""Send FAILED: "" + str(message))
    
        self.lastWriteTime = time.time()",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/krkeegan,6,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356142032,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","It is down in getmessage() around line 115 of SerialPortThread.py
I would add a counter to the SerialPortThread class around line 18. Call it quickQueueCounter.  Increment it by one whenever you send a quick_queue command around line 127 and decrement it by one whenever an 'ok' is received around 118 if it is greater than zero.  Only set the machineIsReadyForData if the quickQueueCounter cannot be decremented (because it is at zero).",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356144264,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","Ok, I can do that but I don't fully understand why it is wrong now
Wouldn't sending the '~' command add an entry of length 1 (or probably length 2 with '\n') to the lengthOfLastLineStack which would then be pulled off with the next 'ok' command
or at worst the order could be swapped and so the next 'ok' command would pull off the previous line and then the 'ok' after that would pull the '~' off so it might be wrong for a second but it wouldn't lead to the accumulated error we are seeing.
Thanks for talking through this with me because now I don't understand why my fix works at all...
Why is the code I changed even being called...no '~' is sent
Gcode.cpp ~50
            }
            else if (c == '~'){
                bit_false(sys.pause, PAUSE_FLAG_USER_PAUSE);
            }
            else{

Pause is being called directly from within the G1 function around line 636
if (abs(currentZPos - zgoto) > threshold){
            Serial.print(F(""Message: Please adjust Z-Axis to a depth of ""));
            if (zgoto > 0){
                Serial.print(F(""+""));
            }
            Serial.print(zgoto/sys.inchesToMMConversion);
            if (sys.inchesToMMConversion == INCHES){
                Serial.println(F("" in""));
            }
            else{
                Serial.println(F("" mm""));
            }
            pause(); //Wait until the z-axis is adjusted
            
            zAxis.set(zgoto);
        }",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/davidelang,8,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356145927,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","currently, if you send 100 characters, then a ~, GC thinks that the OK goes with
the 100 character line, so thinks there's more space available than there really
is (because the firmware has processed the ~, but not the 100 character line)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/krkeegan,9,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356146531,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","Yeah, the lengthOfLastLineStack is a bit of an issue.  That shouldn't get reset either.
Hmm, maybe we need to split _write into a regular and quick_command writes?  Alternatively, we could not add the quick_commands to the buffer and then not clear them either.
Not sure what the most logical method is here.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,10,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356147414,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","@davidelang summarized the issue really well, but I would expect that issue to give us a temporary mismatch between what GC thinks and how much space is actually in the buffer, but what we see is a growing disagreement between the two which seems like a separate issue to me",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,11,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356148391,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","Another clue to ponder:
When using the pause button repeatedly the issue does not happen, however when the machine pauses itself and requests a z-axis depth change the issue does. The difference being that in the first case two ~ are sent to pause and unpause the machine while in the second case only a single ~ is sent to unpause it because the Z-.1 will trigger a pause automatically
So to answer my own question:

Why is the code I changed even being called...no '~' is sent

The ~ IS being sent, but it is being sent when the 'continue' button is pressed in the z-axis popup",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,12,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356150586,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","I am not sure I understand how these work:
// These are nifty functions from Grbl
#define bit_true(x,mask) (x) |= (mask)
#define bit_false(x,mask) (x) &= ~(mask)
#define bit_istrue(x,mask) ((x & mask) != 0)
#define bit_isfalse(x,mask) ((x & mask) == 0)

from nutsandbolts.h",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,13,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356152471,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366","The difference being that in the first case two ~ are sent to pause and unpause the machine while in the second case only a single ~ is sent to unpause it because the Z-.1 will trigger a pause automatically

This is actually wrong also. The pause button doesn't send any commands to the machine, it just stops sending new lines to be executed. The ~ command from the grbl spec should only be sent on a resume from pause which is what we are doing.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,367,2018-01-09T00:16:15Z,2018-01-10T00:34:34Z,2018-01-10T00:34:39Z,CLOSED,False,1,5,1,https://github.com/BarbourSmith,Catch extra 'ok' message sent on  manual z-axis move,1,[],https://github.com/MaslowCNC/Firmware/pull/367,https://github.com/BarbourSmith,14,https://github.com/MaslowCNC/Firmware/pull/367#issuecomment-356460336,"The firmware was sending an extra 'ok' status when paused prompting the machine to gain one extra line in the buffer with each z-axis adjustment eventually overflowing the buffer.
The solution is to remove the extra command which does not seem to be needed for operation with our without the z-axis.
The pause command does not seem to be effected.
Fixes #366",I am going to close this pull request in favor of a more correct fix upcoming,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,368,2018-01-10T00:36:59Z,2018-01-10T01:14:32Z,2018-01-17T22:28:26Z,MERGED,True,11,2,3,https://github.com/krkeegan,Catch Line Ending on Quick Commands; Remove Watchdog,2,[],https://github.com/MaslowCNC/Firmware/pull/368,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/368,"Need to discard any line endings sent after a quick command
otherwise they get interpreted as a blank line and an OK is
sent.  I am not super thrilled with how I wrote this, but I
think it is reasonably compact and logical.
REMOVE WATCHDOG.  This was also causing an issue when the
machine paused itself waiting for a manual Z change.  If
the buffer was empty, it would send an OK requesting a new
line.  We just need to be careful now to make sure that all
OKs are properly sent.
This along with changes to GC closes #366","Need to discard any line endings sent after a quick command
otherwise they get interpreted as a blank line and an OK is
sent.  I am not super thrilled with how I wrote this, but I
think it is reasonably compact and logical.
REMOVE WATCHDOG.  This was also causing an issue when the
machine paused itself waiting for a manual Z change.  If
the buffer was empty, it would send an OK requesting a new
line.  We just need to be careful now to make sure that all
OKs are properly sent.
This along with changes to GC closes #366",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,368,2018-01-10T00:36:59Z,2018-01-10T01:14:32Z,2018-01-17T22:28:26Z,MERGED,True,11,2,3,https://github.com/krkeegan,Catch Line Ending on Quick Commands; Remove Watchdog,2,[],https://github.com/MaslowCNC/Firmware/pull/368,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/368#issuecomment-356461254,"Need to discard any line endings sent after a quick command
otherwise they get interpreted as a blank line and an OK is
sent.  I am not super thrilled with how I wrote this, but I
think it is reasonably compact and logical.
REMOVE WATCHDOG.  This was also causing an issue when the
machine paused itself waiting for a manual Z change.  If
the buffer was empty, it would send an OK requesting a new
line.  We just need to be careful now to make sure that all
OKs are properly sent.
This along with changes to GC closes #366","We should carefully test, deleting watchdog could have some real issues if we forgot an OK response anywhere.  I think I have been careful to include all of them, but you never know.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,368,2018-01-10T00:36:59Z,2018-01-10T01:14:32Z,2018-01-17T22:28:26Z,MERGED,True,11,2,3,https://github.com/krkeegan,Catch Line Ending on Quick Commands; Remove Watchdog,2,[],https://github.com/MaslowCNC/Firmware/pull/368,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/368#issuecomment-356465719,"Need to discard any line endings sent after a quick command
otherwise they get interpreted as a blank line and an OK is
sent.  I am not super thrilled with how I wrote this, but I
think it is reasonably compact and logical.
REMOVE WATCHDOG.  This was also causing an issue when the
machine paused itself waiting for a manual Z change.  If
the buffer was empty, it would send an OK requesting a new
line.  We just need to be careful now to make sure that all
OKs are properly sent.
This along with changes to GC closes #366","OK this passes basic testing for me, how do we feel about merging it now since we are a full 8 days away from the next release and that way we will test it thoroughly as we go through the week?",True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/krkeegan']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,368,2018-01-10T00:36:59Z,2018-01-10T01:14:32Z,2018-01-17T22:28:26Z,MERGED,True,11,2,3,https://github.com/krkeegan,Catch Line Ending on Quick Commands; Remove Watchdog,2,[],https://github.com/MaslowCNC/Firmware/pull/368,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/368#issuecomment-356466463,"Need to discard any line endings sent after a quick command
otherwise they get interpreted as a blank line and an OK is
sent.  I am not super thrilled with how I wrote this, but I
think it is reasonably compact and logical.
REMOVE WATCHDOG.  This was also causing an issue when the
machine paused itself waiting for a manual Z change.  If
the buffer was empty, it would send an OK requesting a new
line.  We just need to be careful now to make sure that all
OKs are properly sent.
This along with changes to GC closes #366","I am around, so I should be able to fix things if issues pop up.  I will try and watch the forum for issues that might be related.  So I vote yes.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,368,2018-01-10T00:36:59Z,2018-01-10T01:14:32Z,2018-01-17T22:28:26Z,MERGED,True,11,2,3,https://github.com/krkeegan,Catch Line Ending on Quick Commands; Remove Watchdog,2,[],https://github.com/MaslowCNC/Firmware/pull/368,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/368#issuecomment-356467350,"Need to discard any line endings sent after a quick command
otherwise they get interpreted as a blank line and an OK is
sent.  I am not super thrilled with how I wrote this, but I
think it is reasonably compact and logical.
REMOVE WATCHDOG.  This was also causing an issue when the
machine paused itself waiting for a manual Z change.  If
the buffer was empty, it would send an OK requesting a new
line.  We just need to be careful now to make sure that all
OKs are properly sent.
This along with changes to GC closes #366",Fantastic!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,369,2018-01-11T18:40:22Z,2018-01-16T16:58:22Z,2018-01-20T00:37:44Z,MERGED,True,27,8,4,https://github.com/reecej,Chain Sag Correction for Triangular Kinematics,4,[],https://github.com/MaslowCNC/Firmware/pull/369,https://github.com/reecej,1,https://github.com/MaslowCNC/Firmware/pull/369,"This updates the triangular kinematics formulas to correct for chain sag. It utilizes a new parameter, chainSagCorrection, which is determined by a new GroundControl calibration process.
I associated parameter number 37 with the new chainSagCorrection parameter, as I believe that was the next unused parameter.
An associated GroundControl PR will be submitted shortly.","This updates the triangular kinematics formulas to correct for chain sag. It utilizes a new parameter, chainSagCorrection, which is determined by a new GroundControl calibration process.
I associated parameter number 37 with the new chainSagCorrection parameter, as I believe that was the next unused parameter.
An associated GroundControl PR will be submitted shortly.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,369,2018-01-11T18:40:22Z,2018-01-16T16:58:22Z,2018-01-20T00:37:44Z,MERGED,True,27,8,4,https://github.com/reecej,Chain Sag Correction for Triangular Kinematics,4,[],https://github.com/MaslowCNC/Firmware/pull/369,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/369#issuecomment-357028828,"This updates the triangular kinematics formulas to correct for chain sag. It utilizes a new parameter, chainSagCorrection, which is determined by a new GroundControl calibration process.
I associated parameter number 37 with the new chainSagCorrection parameter, as I believe that was the next unused parameter.
An associated GroundControl PR will be submitted shortly.",I haven't kept up with this.  But this is only a change to the triangular kinematics?  Does it not apply or is to complicated to apply to quadrilateral?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,369,2018-01-11T18:40:22Z,2018-01-16T16:58:22Z,2018-01-20T00:37:44Z,MERGED,True,27,8,4,https://github.com/reecej,Chain Sag Correction for Triangular Kinematics,4,[],https://github.com/MaslowCNC/Firmware/pull/369,https://github.com/reecej,3,https://github.com/MaslowCNC/Firmware/pull/369#issuecomment-357029740,"This updates the triangular kinematics formulas to correct for chain sag. It utilizes a new parameter, chainSagCorrection, which is determined by a new GroundControl calibration process.
I associated parameter number 37 with the new chainSagCorrection parameter, as I believe that was the next unused parameter.
An associated GroundControl PR will be submitted shortly.","Currently this is just for triangular kinematics. It could be applied to quadrilateral kinematics a well, but would require a significant overhaul of the kinematics formulas as well as the calibration process. Being as I don't have my Maslow yet I wanted to start here for testing and validation that the algorithm works as expected.",True,{'THUMBS_UP': ['https://github.com/krkeegan']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,369,2018-01-11T18:40:22Z,2018-01-16T16:58:22Z,2018-01-20T00:37:44Z,MERGED,True,27,8,4,https://github.com/reecej,Chain Sag Correction for Triangular Kinematics,4,[],https://github.com/MaslowCNC/Firmware/pull/369,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/369#issuecomment-357031241,"This updates the triangular kinematics formulas to correct for chain sag. It utilizes a new parameter, chainSagCorrection, which is determined by a new GroundControl calibration process.
I associated parameter number 37 with the new chainSagCorrection parameter, as I believe that was the next unused parameter.
An associated GroundControl PR will be submitted shortly.","There are a few nits that need to be corrected.  Also, we need to increment SETTINGSVERSION whenever we change the struct.  But otherwise I have no other concerns.
@BarbourSmith if we can wait until tonight, I can submit a PR for the other changes to the sysSettings struct and update the SETTINGSVERSION to 2.
@reecej one other question.  Other than geometry, what affects this chainSagCorrection?  The amount of weight on the sled?  Are there other changes a user may make (short of redesigning their frame) that we should be telling them to recalculate this?",True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,369,2018-01-11T18:40:22Z,2018-01-16T16:58:22Z,2018-01-20T00:37:44Z,MERGED,True,27,8,4,https://github.com/reecej,Chain Sag Correction for Triangular Kinematics,4,[],https://github.com/MaslowCNC/Firmware/pull/369,https://github.com/reecej,5,https://github.com/MaslowCNC/Firmware/pull/369#issuecomment-357033732,"This updates the triangular kinematics formulas to correct for chain sag. It utilizes a new parameter, chainSagCorrection, which is determined by a new GroundControl calibration process.
I associated parameter number 37 with the new chainSagCorrection parameter, as I believe that was the next unused parameter.
An associated GroundControl PR will be submitted shortly.","I believe I fixed the errors, but it wouldn't be the first time I've missed something. I really appreciate the feedback!
The primary factors that affect chainSagCorrection are sled weight, chain weight, and workspace lean angle. Altering any of those parameters would affect this value. Other small things could have an effect as well, such as a dust collection hose being connected, etc. So I would recommend users set the machine up just as it would be during normal cutting for the calibration process.",True,{'THUMBS_UP': ['https://github.com/krkeegan']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,369,2018-01-11T18:40:22Z,2018-01-16T16:58:22Z,2018-01-20T00:37:44Z,MERGED,True,27,8,4,https://github.com/reecej,Chain Sag Correction for Triangular Kinematics,4,[],https://github.com/MaslowCNC/Firmware/pull/369,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/369#issuecomment-357038941,"This updates the triangular kinematics formulas to correct for chain sag. It utilizes a new parameter, chainSagCorrection, which is determined by a new GroundControl calibration process.
I associated parameter number 37 with the new chainSagCorrection parameter, as I believe that was the next unused parameter.
An associated GroundControl PR will be submitted shortly.","@BarbourSmith if we can wait until tonight, I can submit a PR for the other changes to the sysSettings struct and update the SETTINGSVERSION to 2.

@krkeegan Yes I will wait until we are ready to merge both simultaneously and increment the version number. We will do tests of the new system today.
@reecej  üëç üëç üî•",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,371,2018-01-16T21:55:03Z,2018-01-16T22:06:02Z,2018-01-17T22:28:13Z,MERGED,True,2,2,1,https://github.com/krkeegan,Adjust KpV Value to Fix Choppy Movement Issue,1,[],https://github.com/MaslowCNC/Firmware/pull/371,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/371,Should fix most if not all of the choppiness seen by some users.,Should fix most if not all of the choppiness seen by some users.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,372,2018-01-16T23:50:29Z,2018-01-17T02:12:12Z,2018-01-17T22:27:53Z,MERGED,True,1,1,1,https://github.com/krkeegan,Move Startup ok to Setup,1,[],https://github.com/MaslowCNC/Firmware/pull/372,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/372,Otherwise we send an extra ok whenever a stop or error occurs.,Otherwise we send an extra ok whenever a stop or error occurs.,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,372,2018-01-16T23:50:29Z,2018-01-17T02:12:12Z,2018-01-17T22:27:53Z,MERGED,True,1,1,1,https://github.com/krkeegan,Move Startup ok to Setup,1,[],https://github.com/MaslowCNC/Firmware/pull/372,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/372#issuecomment-358172303,Otherwise we send an extra ok whenever a stop or error occurs.,Great work catching this before it became an issue!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,374,2018-01-29T20:42:41Z,2018-01-29T20:44:30Z,2018-06-18T17:51:58Z,CLOSED,False,55,51,1,https://github.com/blurfl,Revise pwm motor control to avoid TimerOne,12,[],https://github.com/MaslowCNC/Firmware/pull/374,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/374,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,374,2018-01-29T20:42:41Z,2018-01-29T20:44:30Z,2018-06-18T17:51:58Z,CLOSED,False,55,51,1,https://github.com/blurfl,Revise pwm motor control to avoid TimerOne,12,[],https://github.com/MaslowCNC/Firmware/pull/374,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/374#issuecomment-361380115,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",I'll redo this and try to bring less 'old baggage' with it.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,374,2018-01-29T20:42:41Z,2018-01-29T20:44:30Z,2018-06-18T17:51:58Z,CLOSED,False,55,51,1,https://github.com/blurfl,Revise pwm motor control to avoid TimerOne,12,[],https://github.com/MaslowCNC/Firmware/pull/374,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/374#issuecomment-361407119,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","Woah, what a cool idea!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/375,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361407549,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",This is very cool! I will test also.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361408849,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","It is, and it works a treat!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361683008,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","I've been trying to do some reading on this to make sure it's safe and it appears that it is!
This forum post has some good information (more in the comments section):  https://www.raspberrypi.org/forums/viewtopic.php?f=37&t=90243
From looking at the block diagram the IN and EN lines are not handled any differently in terms of the hardware they touch inside the chip

And this is backed up by the electrical characteristics being identical:

Here is a good summary of both fast and slow decay modes mentioned in the first forum post I linked:
https://www.allaboutcircuits.com/technical-articles/difference-slow-decay-mode-fast-decay-mode-h-bridge-dc-motor-applications/
Basically we might see slightly different behavior when using the IN pin vs the EN pin for PWM because in one case the motor is being actively braked between pulse while in the other case it's allowed to coast, but it's totally safe to do and much better than the alternative of using different PWM frequencies which we KNOW has been giving people trouble which just effects one side or the other.
This is a brilliant plan @blurfl üëç üëç Awesome.",True,{'THUMBS_UP': ['https://github.com/krkeegan']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/krkeegan,5,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361687162,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","@BarbourSmith thank you for tracking down that data.
The ""active braking"" gives a little concern that the correct PID values for each main motor may not be identical.  But the PID controller may be robust enough to adjust to this difference and it sounds like your real world testing suggests this.
If I have a chance I will test this too, but don't wait for me.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361693664,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","I've played a bit trying to see 'active braking' but don't really see the effect.
I've got motors on the  bench without any load, so it really isn't a true test, but when I run the 'Test Motors' command, the unloaded motors coast after the command finishes. The command comes from Axis.cpp, uses motor.directWrite() so PID is not involved, and finishes with a directWrite(0) which is special-cased in the motor.directWrite() code and makes a good place to try forcing the pins to specific states. I added a 'maslowDelay(2000);' between the direction commands in Axis.cpp to give the coast time to play out in the first direction. I see coasting on all three motors regardless of the state that I set the three pins.
I should add that the current release firmware 'coasts' as well...",True,"{'THUMBS_UP': ['https://github.com/BarbourSmith', 'https://github.com/krkeegan']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361724693,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.","This tests great for me!
Is there any reason we should hold off on merging until after the release tomorrow? My feeling is that 1.04 doesn't have that many big new changes over 1.03 so I vote to merge now.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/krkeegan,8,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361736225,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",i don't see any reason not too.  It seems like the real-world testing matches the theory.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/blurfl,9,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361745452,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",I'd be glad to run any other tests anyone can think of... üôÇ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/BarbourSmith,10,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361752571,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",I can't think of any other tests. I poked it around a little bit more and it still seems great,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,375,2018-01-29T21:22:01Z,2018-01-30T22:14:47Z,2018-06-18T17:52:02Z,MERGED,True,55,51,1,https://github.com/blurfl,Rework motor commands to avoid PWM on pin12,2,[],https://github.com/MaslowCNC/Firmware/pull/375,https://github.com/BarbourSmith,11,https://github.com/MaslowCNC/Firmware/pull/375#issuecomment-361752783,"On the Rev.1.1 boards the PWM for the left motor is controlled by pin12. This pin is controlled by timer1 which is also used by the TimerOne library for much of the important timing for the firmware. This PR avoids PWM on pin12 altogether by applying the PWM to a different motor control.
This should make it easier to tune the PID settings, and allow changing the PWM frequencies for the three motors (right motor is on timer3, z motor timer4, left motor now on timer2) without affecting other parts of the software. This PR does not alter the frequencies however.
I've bench tested it to see that the motors move in the expected manner, but haven't run any of the frame calibrations with it yet. I think I've preserved the proper workings of the speed and _lastspeed variables.",What a great idea @blurfl !! üëç üëç Way to think outside the box!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,1,https://github.com/MaslowCNC/Firmware/pull/376,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-361737525,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","So, I still think this is helpful, but this only reports what the requested feedrate is, not the actual which could be less due to axis limitations.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-361748070,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","If the requested feed rate is more than the hardcoded limit, which would this show? If it shows the requested rate, maybe it could change color to indicate when that is beyond the limits? Not how the firmware would communicate that fact, maybe a negative value for the response...
In testing, this does appear to report the request.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-361753715,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","I think in most cases this will be adjusted to the max feed rate.  But at least in the case of a coordinated move if the zaxis rate is exceeded, this rate will not reflect the actual rate.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,5,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-361769570,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","Err...ok.  I guess I jumped the gun when I saw the feedrate in the sys structure.
I was hoping to return the current feedrate from the velocity controllers up to GroundControl... and then we can decide in GroundControl what to do if the feedrate we get back doesn't match the feedrate that we requested (if the difference is >X for Y seconds and we're supposed to be moving and...).",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/krkeegan,6,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-361781474,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","Like I said, I think it is fine for now.
Many things need work. The future changes include better gcode parsing and acceleration ramping.  When this happens, I can make sure your routine is handed a proper current feedrate output.",True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362026147,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","Very cool! It works for me too

This is a great idea to remind us of what feed rates we are actually using.
I have one request which is that the number reported seems a little bit strange when the machine isn't running a file.
Here's what I am seeing while moving the machine around with the arrow buttons before running the file. It was actually moving so the velocity was not zero.

Here is what I am seeing when moving the machine around with the arrow keys after running a file. Again, the velocity is not actually 30ipm (that's just what the file was run at)

I think the issue is that the G0 command for moving to a new location does not specify a speed, it just goes ""as fast as possible"" which I believe in our case is hard coded to 1000mm/min
    if (G0orG1 == 1){
        //if this is a regular move
        coordinatedMove(xgoto, ygoto, zgoto, sys.feedrate); //The XY move is performed
    }
    else{
        //if this is a rapid move
        coordinatedMove(xgoto, ygoto, zgoto, 1000); //move the same as a regular move, but go fast
    }

Would it be possible to report a speed of 1000mm/min when doing rapid moves, or is there a reason that would be very difficult to do?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362043252,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","The right-hand column is generated in frontPage.py from the gcode line sent. Maybe a special case for G0 codes reporting something like 'max.'?...
The left-hand column is harder, as you point out. Wouldn't want to mess with sys.feedrate.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,9,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362059507,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","I (just) added code to FrontPage.py so that when you're manually moving around, the right-hand column changes to [MAN] (If GroundControl knows when the machine is stopped, I'll put a ""0"" in there when GC thinks it's stopped, but I haven't found that yet).
@krkeegan  said that when they get acceleration working we'll revisit this to indicate actual feedrates instead of requested feeds.
I was halfway thinking of mocking it with the PID velocity controllers saying:

realfeedrate = sys.feedrate
realfeedrate *= pid_output/pid_input for each attached axis

... but I'm not sure what that would actually look like (and my Maslow is down at the moment due to cleaning...) so I was hesitant to add it yet (did not want to surprise users with really weird numbers).",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/BarbourSmith,10,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362063616,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)",What if we computed the velocity on the Ground Control side from the position information being sent from the machine? That way it would always match exactly how fast the machine is really moving.,True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,11,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362069642,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","Now that might be an interesting idea that doesn't ""mess with"" g-code interoperability (adding ""current velocity"" = 4th Axis might be considered a hack).  OTOH, if your g-code said ""make a 358 degree arc"", and your update rate was too slow to catch the tool moving, you'd get  a very low velocity compared to what it was actually doing.
OTOH, asking the machine for it's velocity would return 0 if it had just finished the move, so ""asking the machine"" isn't really a panacea for too slow of an update rate, and at 20/sec, we've got a fast enough update rate.
My goal with this was to highlight when Maslow wasn't able to achieve the speed commanded (mainly because I keep forgetting to change the IPM settings in MakerCam)... and maybe store that ""correction factor"" to be able to make some ETA readouts...",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362074612,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","I think letting ground control do the calculation is a good solution. That way the firmware doesn‚Äôt need to be altered, and ground control is keeping track of the location of the bit anyway.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,13,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362077058,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)",I put in a new patch on that pull request...  I'm AFM (away from Maslow) right now so it's untested...,True,{'LAUGH': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,14,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362144360,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","I'm BAM (Back @ Maslow), so i fixed the other pull request.  This one can be closed as ""not needed.""
Is that something I do or something the maintainers do?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,15,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362145463,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)",GC PR #599 calculates velocity locally and does not need this any more.,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/davidelang,16,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362167976,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","On Wed, 31 Jan 2018, BarbourSmith wrote:
 What if we computed the velocity on the Ground Control side from the position information being sent from the machine? That way it would always match exactly how fast the machine is really moving.
doesn't one of the layers of PID loops define the desired velocity?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/thormj,17,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362273517,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","It does.  My old patch to the firmware tried exposed that as a ""4th axis"" with the readout statements, but as it turns out, sys.feedrate has the last feedrate requested and didn't reflect the actual feedrates.  This latest version computes it based on distance moved (so if you're doing very curvy, very fast, the velocity shown will be low since GC didn't take the curve into account  when computing the velocity).",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/davidelang,18,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362327493,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","On Thu, 1 Feb 2018, Thor Johnson wrote:
 It does.  My old patch to the firmware tried exposed that as a ""4th axis"" with the readout statements, but as it turns out, sys.feedrate has the last feedrate requested and didn't reflect the actual feedrates.  This latest version computes it based on distance moved (so if you're doing very curvy, very fast, the velocity shown will be low since GC didn't take the curve into account  when computing the velocity).
sus.feedrate isn't the right value (as you see), it would be something buried in
the velocity PID loop",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/blurfl,19,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362343562,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)",The beauty of this approach is that it calculates the actual speed without using any of the processing power of the device it is monitoring.,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/krkeegan,20,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362348524,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","Nothing in the PID has the desired linear velocity, the velocity controller relies on RPM.
Also, there is no guarantee that the requested RPM bears any basis in reality either.  It can and does jump around quite a bit even with our improvements.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,376,2018-01-30T06:41:16Z,2018-02-01T03:14:04Z,2018-02-01T17:59:56Z,CLOSED,False,8,4,2,https://github.com/thormj,Adds a velocity output to the Report (and others to keep the same # of axes),3,[],https://github.com/MaslowCNC/Firmware/pull/376,https://github.com/BarbourSmith,21,https://github.com/MaslowCNC/Firmware/pull/376#issuecomment-362350255,"Corresponding with GC Pull Request #599,
Adds another axis to the readout indicating machine feedrate (so GroundControl can pick it up and display it)","This one can be closed as ""not needed.""
Is that something I do or something the maintainers do?

Feel free to close anything that can be closed, especially if you opened it. We're a small enough group that I don't think we need any sort of hierarchy üòÄ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,377,2018-02-01T02:58:07Z,2018-02-01T17:51:26Z,2018-02-01T17:51:26Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Changed rotationalDiskRadius to 250 from 100,1,[],https://github.com/MaslowCNC/Firmware/pull/377,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/377,Changed rotationalDiskRadius to 250 from 100 to match that in GC PR,Changed rotationalDiskRadius to 250 from 100 to match that in GC PR,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,377,2018-02-01T02:58:07Z,2018-02-01T17:51:26Z,2018-02-01T17:51:26Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Changed rotationalDiskRadius to 250 from 100,1,[],https://github.com/MaslowCNC/Firmware/pull/377,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/377#issuecomment-362347801,Changed rotationalDiskRadius to 250 from 100 to match that in GC PR,Great! üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/380,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362423479,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?",That certainly seems to fix it. Quick work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362424175,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?",@krkeegan I don't feel like this is the right way either. I won't touch it until you have a chance to give it a look,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362424223,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","So while I think this solution is wrong, it sounds like an extra ok will solve the issue.  hmm why is that?
Is there an additional command being placed in GC queue, or something funky about the character buffer counter in the GC queue?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/krkeegan,5,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362424570,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","Plus, why is this cropping up now?  If you have the time and inclination, can someone roll back to v1.04 or v1.03 and see where this goes away?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362424674,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","I started exploring on the GC side and here's what I found:
When we print the amount of space GC thinks is available in the buffer it looks like this:

So there's 236 spaces in the buffer because the line of gcode hasn't been processed yet, then there are 234 spaces because we've sent the ""!\n"" command, then we go back to 236 when it is marked that the stop command has been processed...so do we need to send an extra ""OK"" after stops are processed to indicate that the extra line has been cleared from the buffer? It has been cleared.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362424993,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","Help me understand why we do not want to send the OK command after a line of gcode has been executed, but not completed because a ! command was sent?",True,{'THUMBS_UP': ['https://github.com/krkeegan']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362425600,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","Firmware1.02 does not show the issue, Firmware1.03 does.",True,"{'THUMBS_UP': ['https://github.com/BarbourSmith'], 'HEART': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/krkeegan,9,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362426981,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","oooh ooh, I think I understand what you are describing now.
So let me see if I have this right.

Send some command ""G0 X5""
While the command is executing send ""!""
Firmware sends ""ok"" response to ""!"" command
3b. GC sees the ""ok"" recognizes that it was in response to a quick command and clears only that portion of the buffer.
Firmware bails out of routines that it is running
Firmware dumps contents of serial buffer
Firmware waits for new commands
Meanwhile GC is still waiting for confirmation of ""G0 X5"" command
aaaaand we are stuck

I think I get it.
I see two solutions:

The firmware sends the necessary ""ok""s to clear everything
GC recognizes that a stop dumps the buffer contents on the machine and clears it's own tracking buffer when it receives the stop ""ok""

I think this is all a matter of perspective and what we want an ""ok"" message to mean.
I am inclined to say GC should handle this, that the firmware is correct in not sending an ok to the ""G0 X5"" command because that command never successfully completed.  Plus this design would allow us to queue more than one line on the machine (which I think we can do eventually) otherwise if we had multiple lines, we would need the firmware to say ""ok"" to those extra lines in the buffer, even though it hadn't even started performing them.
Thoughts? I am open to considering the alternative.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362427434,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?",I like your GC approach.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,380,2018-02-01T22:24:55Z,2018-02-01T23:02:00Z,2018-02-01T23:02:07Z,CLOSED,False,1,31,2,https://github.com/BarbourSmith,Fix for issue #379 (won't start again after stop),2,[],https://github.com/MaslowCNC/Firmware/pull/380,https://github.com/BarbourSmith,11,https://github.com/MaslowCNC/Firmware/pull/380#issuecomment-362431228,"Fixes issue #379, the machine won't start again after stop. Basically, the line is being cleared from the buffer when the stop command is recieved, but no OK is being sent to indicate the space is free. It seems counter intuitive to send an OK message when the machine is stopped, but the buffer space is available.
Is this the right fix?","Plus this design would allow us to queue more than one line on the machine (which I think we can do eventually) otherwise if we had multiple lines, we would need the firmware to say ""ok"" to those extra lines in the buffer, even though it hadn't even started performing them.

This is the deciding factor for me, I vote to handle this on the GC side. Too. Well summarized.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,1,https://github.com/MaslowCNC/Firmware/pull/382,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,2,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362617882,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",Do you guys think this requires incrementing the firmware version tracking number?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362623332,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",Does there need to be some way for the firmware and GC to signal compatibility on this? Or does GC even care? Will GC need different calibration routines for this arrangement?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,4,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362628456,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","GC doesn't really care. In either case, GC will send the same code to the firmware. Really, the firmware needs to know which way it should spin the motors to feed out positive chain.
Tweaks to the calibration process in GC were made. The first was to match the new firmware triangular kinematics. The second was to update the motor spacing measurement process to allow the ""bottom"" configuration.
The default value in GC and Firmware is the ""top"", which is what the traditional design uses. So today a mismatched GC and Firmware shouldn't create issues.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362690464,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","There is something fishy going on and I think it's in the kinematics changes. I'm getting this warning every time I connect, and the motors refuse to move even if I do a manual chain length reset:

Does anyone have any thoughts on where to look?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,6,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362691436,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",Is that with the chains on bottom of the sprockets? Does it still happen with them on top?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362691923,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Yes, changing the setting doesn't seem to matter which is strange.
When I print the value for the length of chain that the kinematics is recommending right before it is returned from the kinematics function I see very reasonable values",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,8,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362692669,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",What values for the chain lengths does the kinematics get to before failing? I'll review it too.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,9,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362694174,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Is it possible that running setupAxes() when pushing the settings from GC to the firmware is causing the issue? I'm wondering if setupAxes() works properly after the system is initialized. Specifically when detecting the PCB version and assigning pins, there is no catch-all. So if the PCB detection didn't work, then the system would lose the ability to communicate with the motors.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,10,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362694483,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",It looks to me like it isn't trying to guess anything other than zero for the coordinates in the forward kinematics. It just keeps trying zero over and over until it times out.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,11,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362695657,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","That would imply that aChainError and bChainError are 0, but if that were the case then it would have exited successfully. Strange.
Could you try modifying your version of the test code, commenting out line 390 of Settings.cpp (this is where it calls setupAxes()). Then try again.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,12,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362696314,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I see, upon looking closer it is getting the chain lengths reported from the motors as being 0 for both. There is no position which would satisfy that, for the sprocket position on top or bottom, and hence it fails out. So something is interrupting the encoder from reporting the chain position, or it got lost somehow.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,13,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362697706,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Commenting out that line did not change anything, but I confirmed that the kinematics are in fact being told that the chain lengths are zero.
So why doesn't doing a manual chain length calibration fix it? The manual recalibration should reset them to a known length, right?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,14,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362698811,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Because I am thinking that the pin assignments to the motors got overwritten. The motors have never moved, right?
Does the Z axis move? And have you restarted your Arduino?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,15,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362700282,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I'm wondering if the proper way to do this is to call the systemReset() function, rather than setupAxes() directly. This would detach the axes and repeat the power-up process, which is probably the better way to do this. But if it still doesn't work after restarting your Arduino with that line commented out then something else is wrong.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,16,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362709420,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","@reecej you are a genius!
First I checked to see if the z-axis would move and it did. üéâ
Then I powercycled the Arduino, re-did the manual chain length calibration to set the chains to a good length, and the motors spin üëç üëç üíØ üéâ",True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,17,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362714072,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","To confirm, that was with that one line still commented out, correct? If so, then your motors aren't yet being reversed for the chain on bottom configuration.
Does anyone know if anything breaks if we call systemReset() as a method to re-configure the pins? I would imagine we should do some error-checking to ensure this is only called if the value actually changes. Ideally, since we have already determined the PCB version, this seems like a lot of work to do, but it may be the cleanest approach.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,18,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362715954,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","This was with the line commented out. I believe (but I am not 100% sure) that I had tried re-starting the arduino with the line in place with no luck.
I agree that we should only call a systemReset() if the value changes. If we called it every time I could imagine it causing the connection to close and open making GC send the values again, causing a loop",True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,19,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362718349,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","With this last commit, it will call systemReset only if the value changes. Would calling systemReset cause it to lose connection to GroundControl?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,20,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362718716,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",I will test it and find out!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,21,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362719925,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I appreciate your help, as always! Soon I'll be able to do this testing myself!",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,22,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362722936,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Alright! We're making good progress!
I had to add the systemReset() function to system.h to make it publically available, but then everything fired up!

I'm going to start putting it through its paces",True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,23,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362723532,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",Thanks for the info! I'll push that in a commit to get that sorted out.,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,24,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362726007,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","When the chain is set to bottom all is well üéâ, both motors move, the position is saved between power offs, and when the machine connects everything is normal other than that the position seems to be loaded twice:

When I switch it to the Top setting I see some strange behavior. The motors won't move and the machine clearly goes through the reset cycle even if this isn't the first time the GC has been launched after the setting was changed.

Because this setting is very startup specific, and because it's not something people will be changing often, what if we just required a power cycle for it to take effect? Like instead of triggering a reset when it is changed we just stored the choice in EEPROM and used it at startup. If you send a new setting to the board it gets written to EEPROM with all the rest of the settings but won't be active until the board is power cycled. It's not an ideal solution, but it seems like a good place to start.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,25,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362726785,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Good point. I wonder if the system reset happens too quickly, specifically before the value gets written to EEPROM. In that case every time it connected to GC and pulled down the settings, it would just reset again.
Storing it to EEPROM and then having users reset the board I would think would be a fine initial solution. Later on I suspect I could figure out the structure and change the settings without requiring all this work, but given how rarely this option will be changed I think requiring a restart is fine!
Should we include this in the calibration steps?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,26,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362732851,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","It's been my experience that the things which happen at startup can be a little touchy. I like this plan as a starting point. I vote we leave it out of the calibration until we get this PR merged and then we either find a way to make the reset automatic or mention it in the calibration in the next PR mostly because I feel like there has got to be a better way to use git than to have me keep sending you screenshots of lines of code to change...but here's one last one üòú
I think these two lines in cnc_cntrl_v1 should be swapped, right? That way the setting will be pulled from the EEPROM before it is needed?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,27,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362735146,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","That's true! I wonder if it would be easier to give you rights to my fork, that way we can use Git more for collaboration rather than sending screenshots.
And good point on the settings as well as GroundControl! The only caveat with GC is the step where the motor spacing is measured using the chain. But I have an idea to make that work.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,28,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362736782,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I have an idea to make that work too üòÄ
I think this side of things is ready to merge! I just went through the process of switching over and doing the extend chains, attaching the sled and moving everything around and it all looks good!",True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,29,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362737848,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","My idea isn't very smooth - basically, if the chains are on bottom of the sprockets then just send reverse distances for whatever the user requests, and keep the chain on top for that portion of the calibration. But that discussion can be continued over there!",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,30,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362737969,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",I'm going to merge this and move to thinking about that!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,31,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362738191,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Thanks for sticking with me through all that testing. It's a tedious process to do things this way and it takes patience for sure. I can wait until you have hardware to test on, but I really appreciate all the work you are doing already!",True,{'HEART': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/blurfl,32,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362782676,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","@BarbourSmith , what did you do to get past this?

I've got the current master firmware and the PR version of GC. I've been through the triangular calibration upside down twice, good results both times, and can run gcode files, but after quitting GC and opening it again, I need to re-cal the chains every time. I've tried an EEPROM reset, and a fresh groundcontrol.ini file. I can see that the EEPROM is being read and passing verification.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,33,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362836371,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Does that only happen for the chain on bottom case, or does it also prompt you for that with the chain on top too?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/blurfl,34,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362838200,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Yes, with the chain on top too.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,35,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362838628,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I'm wondering if that is related to us changing the order and having the settings be loaded before the axes are configured. We need the settings to know how to configure the motor pins, per the chain direction, but the settings also load the last motor position. However, it looks like the motor positions then possibly get overwritten when the axes are configured. This would make it such that every boot up the chain lengths are thought to be zero, which seems to be what you're seeing.
@BarbourSmith, did you experience this also?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,36,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362839716,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","@blurfl could you give my code a try? I just tried a patch which should load the encoder steps after the axes are setup.
https://github.com/reecej/Firmware, master branch.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/BarbourSmith,37,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362841416,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I've been through the triangular calibration upside down twice, good results both times, and can run gcode files, but after quitting GC and opening it again, I need to re-cal the chains every time.

I see the same behavior you are seeing but only right after I switch from the top setting to the bottom setting or back. Every time I switch I have to reset the chain lengths (either manually or with the autocal), but once I've done that I'm seeing everything stay good through multiple GC restarts. Unless I change the setting again things are OK.
My thinking was that because we're essentially reversing the direction of the axis the old number is invalid, but I want to dig into it more and really understand what is happening.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/blurfl,38,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362844167,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","@reecej , your code works correctly for me. Using then PR version of GC and your code, the dialog came up the first time I connected, but after the manual chain cal/return to center boogie and quitting GC the dialog no longer comes up.
The process is reversible - loading the release firmware makes the dialog come up again. Then loading your code, the dialog comes up on GC startup until the recal. has been accomplished.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,39,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362850998,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","@blurfl to confirm, your last test was done using the release version of firmware code, or the current master version?
I suspect the version we merged from this PR into the master accidentally clears the stored last chain length position, hence the message. But ideally if you were running the latest released version of firmware and then moved to this code, assuming you kept the chain on top, I wouldn't think there should have been an issue.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/blurfl,40,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362866281,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I was using the current master version. I'm willing to set up any configuration you'd like.
With firmware release v1.04 firmware and GCv1.04 the problem does not occur. Changing to the PR#607 version of GC or to the present GC-master and leaving the firmware at v1.04 makes the problem occur. If I do nothing but quit GC-'PR#607-or-master' and start GCv1.04, the problem does not occur.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,41,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362870893,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","I wonder if that's because the settings structures are different among both. If you move straight from 1.04 releases for GC and Firmware to the GC PR and the firmware in my fork, do you get the same thing?
From how it looks in the code, this may be the expected behavior, but I'm not familiar enough with the code to say for certain. Regardless, it sounds like it isn't happening every time like it was before for you?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/blurfl,42,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362872912,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","It was happening every time that I was using any combination other than Fv1.04/GCv1.04, sorry if that wasn't clear.
I tried moving straight from Fv1.04/GCv1.04 to the PR versions, and that seems to work correctly:
I started with firmware-v1.04 and GC-v1.04, running without the error. I uploaded your firmware code and  ran the GC-PRversion, still no error. I changed the setting from 'Top' to 'Bottom' and quit GC-PRversion and did the manual cal, quit and restarted GC-PRversion, still no error.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,43,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362874546,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.","Cool, that sounds promising. Seems like I should take the patch written in the firmware and submit that as a PR then?",True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HOORAY': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/blurfl,44,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362877417,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",I'd say yes!,True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,382,2018-02-02T15:18:22Z,2018-02-02T23:21:12Z,2018-02-04T04:29:15Z,MERGED,True,44,10,7,https://github.com/reecej,Add Chain Wrap Direction,6,[],https://github.com/MaslowCNC/Firmware/pull/382,https://github.com/reecej,45,https://github.com/MaslowCNC/Firmware/pull/382#issuecomment-362880042,"This adds a configuration setting to select which way the chain wraps around the sprocket to go to the motor. Changes are also made to update the triangular kinematics code. When a new value of chainOverSprocket is received the axes are reconfigured.
Note that this does not update the quadrilateral kinematics, so using quadrilateral kinematics with the chains on bottom of the motor sprockets could lead to accuracy errors.
When a new value of chainOverSprocket is received, setupAxes() is called. I don't think this would cause issues, but wanted to point it out for review.
An associated GroundControl PR will be submitted shortly.",Fix submitted in PR 383!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,383,2018-02-04T04:28:29Z,2018-02-05T19:47:32Z,2018-02-05T19:47:32Z,MERGED,True,2,8,3,https://github.com/reecej,Fix bug in storing encoder steps,1,[],https://github.com/MaslowCNC/Firmware/pull/383,https://github.com/reecej,1,https://github.com/MaslowCNC/Firmware/pull/383,"Fix bug where encoder steps are overwritten each time the board is booted up. This is related to the chain on bottom functionality, although the bug occurs whether the chain is on top or bottom.","Fix bug where encoder steps are overwritten each time the board is booted up. This is related to the chain on bottom functionality, although the bug occurs whether the chain is on top or bottom.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,383,2018-02-04T04:28:29Z,2018-02-05T19:47:32Z,2018-02-05T19:47:32Z,MERGED,True,2,8,3,https://github.com/reecej,Fix bug in storing encoder steps,1,[],https://github.com/MaslowCNC/Firmware/pull/383,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/383#issuecomment-363166035,"Fix bug where encoder steps are overwritten each time the board is booted up. This is related to the chain on bottom functionality, although the bug occurs whether the chain is on top or bottom.",I gather that it wasn't working to call setupAxis() after loading the steps from eeprom?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,383,2018-02-04T04:28:29Z,2018-02-05T19:47:32Z,2018-02-05T19:47:32Z,MERGED,True,2,8,3,https://github.com/reecej,Fix bug in storing encoder steps,1,[],https://github.com/MaslowCNC/Firmware/pull/383,https://github.com/reecej,3,https://github.com/MaslowCNC/Firmware/pull/383#issuecomment-363177423,"Fix bug where encoder steps are overwritten each time the board is booted up. This is related to the chain on bottom functionality, although the bug occurs whether the chain is on top or bottom.","Correct. When setupAxes() was run, it would read the current encoder position and set the steps to that value, really just to initialize the values. But that was overwriting our loaded previous steps value, and hence the chains were having to be recalibrated at every system boot.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,383,2018-02-04T04:28:29Z,2018-02-05T19:47:32Z,2018-02-05T19:47:32Z,MERGED,True,2,8,3,https://github.com/reecej,Fix bug in storing encoder steps,1,[],https://github.com/MaslowCNC/Firmware/pull/383,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/383#issuecomment-363199898,"Fix bug where encoder steps are overwritten each time the board is booted up. This is related to the chain on bottom functionality, although the bug occurs whether the chain is on top or bottom.",This works great for me as well. No need to do the chain re-cal üëç üëç Excellent job tracking down what the issue was!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/384,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363575737,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","@krkeegan you just keep making these amazing, well thought out, well executed PRs. I never know what to expect in the morning üëç üëç
I will test this right away (although I am sure it works great).
In the future whenever you want the version numbers bumped in a PR feel free to include it in the PR. I'm not too worried about skipping numbers in releases",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,3,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363577665,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.",@blurfl discovered an error that only seems to arise when upgrading from a prior settings version.  It looks like my settingsVersion checker isn't working properly and I haven't figure out why that is yet.,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363578405,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","No rush, my computer is installing updates right now so I can't test or merge anything for a little bit anyway.
Excellent testing @blurfl üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,5,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363579851,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","ahh, found it.  Now just need to figure out the solution.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,6,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363590088,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","ugh, more yak shearing, now it seems that the FAKE_SERVO option doesn't work anymore?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,7,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363602846,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","I think this is working now.
I have found a reproducible bug, at least when using Fake_Servo(I doubt that matters).  The process is:

Load up GC.
Manually move the sled up
Stop before the move is complete
Somewhat quickly (not sure if this matters) open up advanced settings
Enable or disable custom PID position settings
GC will then send about 4 of the 6 commands and get stuck
No further commands can be sent

This seems like an ok/bufferspace issue.  I really wish these things would die.  At first glance I don't see any problems in the log.  So I have to add some debugging to GC to see if the bufferspace is the issue.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,8,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363603236,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","good news is that clicking stop gets us out of the locked GC state, so that is at least a good rescue plan.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,9,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363616556,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","OK, everything should work now.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/BarbourSmith,10,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363922140,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","I'll give it a test too, but the gist is that we should or should not merge because of the issue in #387 ?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,11,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363922519,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","Yes, I that is my opinion.  I am having a hard time figuring out why this is happening.  Give it a test and see if you see the same issues with pressing stop.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/BarbourSmith,12,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363928757,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.",Great! I'm just getting my computer back online now and I should be able to test in the next hour or so...what a strange bug üêõ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363966011,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","Following your excellent series of steps to cause the issue, I see it on a board with motors attached. It stops after sending 5 or six lines and unfreezes after using the Stop button again.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,14,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363967309,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","Uhoh, @blurfl you are seeing the sled position change as a result of multiple stop button presses?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/blurfl,15,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363967745,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","I followed these steps, haven't tried the sled move sequence yet. I'm right at the console, what steps to make it happen?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,16,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363968635,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","ooh, sorry, to many commingled issues.  That one you linked to is fixed.  I found the issue and made the change in GC.  #387 is the thing I am still checking on.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/blurfl,17,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363971077,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","So loading the firmware from this PR, and the GC version from PR #608, yes?
I had a version of your 'Settings Improvements' branch from a couple days ago, just loaded it and ran it against the appropriate firmware. I did see the 'position loaded at' values creeping up by small amounts, though the motors did not run (changes too small).
I went and got your most recent version from that branch and that fixes the issue. Using that branch and the firmware from PR #384 the 'position loaded at' values do not change and the motors do not run.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,384,2018-02-06T05:03:29Z,2018-02-08T02:27:23Z,2018-03-07T03:10:30Z,MERGED,True,104,108,10,https://github.com/krkeegan,Forward kinematic improvements; Sync Settings,11,[],https://github.com/MaslowCNC/Firmware/pull/384,https://github.com/krkeegan,18,https://github.com/MaslowCNC/Firmware/pull/384#issuecomment-363982002,"This enables the sync settings function from MaslowCNC/GroundControl#608
It removes the concept of $K.  Now anytime a setting which alters the kinematics calculation is changed, the forward position is recalculated.
Previously forward calculations could take up to 6 seconds, this change limits the search space to no more than the length of the chain, which can be set in ground control.  This results in a maximum search of about .6 seconds.
This requires a simultaneous update to GC, so the versions numbers should be changed.","Awesome, yes I confirm the same. The issue doesn't happen With a functioning machine.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,385,2018-02-06T05:07:22Z,2018-02-13T18:27:34Z,2018-06-18T17:52:09Z,MERGED,True,38,57,1,https://github.com/blurfl,Change PWM signalling to use INx pins for PWM,2,[],https://github.com/MaslowCNC/Firmware/pull/385,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/385,"Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').","Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,385,2018-02-06T05:07:22Z,2018-02-13T18:27:34Z,2018-06-18T17:52:09Z,MERGED,True,38,57,1,https://github.com/blurfl,Change PWM signalling to use INx pins for PWM,2,[],https://github.com/MaslowCNC/Firmware/pull/385,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/385#issuecomment-363576041,"Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').",Very cool! So does this mean we don't need the enable line at all anymore?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,385,2018-02-06T05:07:22Z,2018-02-13T18:27:34Z,2018-06-18T17:52:09Z,MERGED,True,38,57,1,https://github.com/blurfl,Change PWM signalling to use INx pins for PWM,2,[],https://github.com/MaslowCNC/Firmware/pull/385,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/385#issuecomment-363578055,"Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').","On the present bridge chip, we need it. Other chips (TLE5206) would show errors on that pin: over-temp and over-current.
The L298 is designed to use the EN pin along with an some analog circuitry monitoring the sense output to implement over-current protection. We're not using it that way.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,385,2018-02-06T05:07:22Z,2018-02-13T18:27:34Z,2018-06-18T17:52:09Z,MERGED,True,38,57,1,https://github.com/blurfl,Change PWM signalling to use INx pins for PWM,2,[],https://github.com/MaslowCNC/Firmware/pull/385,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/385#issuecomment-365111407,"Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').","First of all I want to apologize for taking so long to test this. I have really been struggling with my computer this last week (getting windows 10 to update on a 32gb disk is a mess)...I think I am all sorted out now, which is great.
When I run this firmware, my machine does not move at all. If I switch back to the master firmware it goes again. What am I doing wrong?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,385,2018-02-06T05:07:22Z,2018-02-13T18:27:34Z,2018-06-18T17:52:09Z,MERGED,True,38,57,1,https://github.com/blurfl,Change PWM signalling to use INx pins for PWM,2,[],https://github.com/MaslowCNC/Firmware/pull/385,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/385#issuecomment-365126441,"Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').","There's no hurry to get to these, you're deep into frame redesign, Windows updates and shipment preparation üòÄ
I'm sorry, much has changed in the Firmware master and I hadn't updated this branch to keep up. Exciting times... I've brought it current now. I only have a 'V1.1' board to test agains, but that shouldn't matter.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,385,2018-02-06T05:07:22Z,2018-02-13T18:27:34Z,2018-06-18T17:52:09Z,MERGED,True,38,57,1,https://github.com/blurfl,Change PWM signalling to use INx pins for PWM,2,[],https://github.com/MaslowCNC/Firmware/pull/385,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/385#issuecomment-365353604,"Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').","Great! I like that the issue WAS my slowness üòÄ
I'm testing on 1.1 also, I'll run it right now.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,385,2018-02-06T05:07:22Z,2018-02-13T18:27:34Z,2018-06-18T17:52:09Z,MERGED,True,38,57,1,https://github.com/blurfl,Change PWM signalling to use INx pins for PWM,2,[],https://github.com/MaslowCNC/Firmware/pull/385,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/385#issuecomment-365358805,"Using the INx pins (_pin1, _pin2) directly for PWM will make this firmware compatible with other motor driver chips that don't implement the EN enable signal ('_pwmPin').","Works like a charm! üéâ üëç üëç
Sorry again for the delay üôÅ",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,386,2018-02-06T05:10:45Z,2018-02-13T18:47:20Z,2018-06-18T17:52:31Z,MERGED,True,45,15,3,https://github.com/blurfl,Avoid using timer0 or timer1 for pwm,4,[],https://github.com/MaslowCNC/Firmware/pull/386,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/386,"This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.","This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,386,2018-02-06T05:10:45Z,2018-02-13T18:47:20Z,2018-06-18T17:52:31Z,MERGED,True,45,15,3,https://github.com/blurfl,Avoid using timer0 or timer1 for pwm,4,[],https://github.com/MaslowCNC/Firmware/pull/386,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/386#issuecomment-363576322,"This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.","Awesome!! üëç üëç ‚ù§Ô∏è
I read somewhere a while ago that we should really be using ultrasonic PWM frequencies for motors of our size",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,386,2018-02-06T05:10:45Z,2018-02-13T18:47:20Z,2018-06-18T17:52:31Z,MERGED,True,45,15,3,https://github.com/blurfl,Avoid using timer0 or timer1 for pwm,4,[],https://github.com/MaslowCNC/Firmware/pull/386,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/386#issuecomment-363578379,"This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.","I've played with 4096kHz, it wants some PID tuning.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,386,2018-02-06T05:10:45Z,2018-02-13T18:47:20Z,2018-06-18T17:52:31Z,MERGED,True,45,15,3,https://github.com/blurfl,Avoid using timer0 or timer1 for pwm,4,[],https://github.com/MaslowCNC/Firmware/pull/386,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/386#issuecomment-363619577,"This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.","First a caveat, I know very little about any of this.
I could be wrong, but if it needs a change in the PID tuning, something else may be going on.  The only way I can see this causing this is if at 4000kHz the ""voltage"" produced by the PWM signal starts to drift in someway higher or lower than expected or the timers in the arduino start to drift see:
https://playground.arduino.cc/Main/TimerPWMCheatsheet",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,386,2018-02-06T05:10:45Z,2018-02-13T18:47:20Z,2018-06-18T17:52:31Z,MERGED,True,45,15,3,https://github.com/blurfl,Avoid using timer0 or timer1 for pwm,4,[],https://github.com/MaslowCNC/Firmware/pull/386,https://github.com/krkeegan,5,https://github.com/MaslowCNC/Firmware/pull/386#issuecomment-363619990,"This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.","Also, is that a typo do we mean 4096Hz not kHz.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,386,2018-02-06T05:10:45Z,2018-02-13T18:47:20Z,2018-06-18T17:52:31Z,MERGED,True,45,15,3,https://github.com/blurfl,Avoid using timer0 or timer1 for pwm,4,[],https://github.com/MaslowCNC/Firmware/pull/386,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/386#issuecomment-363670131,"This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.","You're right about the frequency, ~4000Hz is the step above 490Hz, and ~31000Hz is the step above that. I was looking at the slight lag of the red reticule behind the black one, but comparing to 490Hz it looks the same. The motors sure purr at 31000Hz!
I just found that the settings for timer2 are different from timers3,4. Timer2 does 989Hz with divisor 3 while the other two do 490Hz with that divisor. I wonder whether setPWMPrescalers() needs to special-case that? The higher frequencies (4000Hz and 31000Hz) use the same divisor o all three timers.
Timer2 frequencies
Setting 	   Divisor 	Frequency
0x01 	 	1  		31372.55
0x02 	 	8 	 	3921.16
0x03  		32  		980.39
0x04 	 	64 	 	490.20   <--DEFAULT
0x05 	 	128  	245.10
0x06  		256  	122.55
0x07 	 	1024  	30.64",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,386,2018-02-06T05:10:45Z,2018-02-13T18:47:20Z,2018-06-18T17:52:31Z,MERGED,True,45,15,3,https://github.com/blurfl,Avoid using timer0 or timer1 for pwm,4,[],https://github.com/MaslowCNC/Firmware/pull/386,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/386#issuecomment-365364604,"This builds on PR #385.
Timer0 is used for Arduino internal timing, timer1 is used by the TimerOne library for the encoder and PID portions of the firmware. By avoiding those we can alter the PWM frequencies and maybe improve performance.
Further, create a function to set the PWM frequencies of timers 2-4. Don't change it yet, different frequencies will require some PID tuning.",This is so cool!!! üëç üëç üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,389,2018-02-10T00:38:17Z,2018-02-13T18:54:28Z,2018-06-18T17:52:08Z,MERGED,True,71,4,5,https://github.com/blurfl,Add PWM frequency to system settings,3,[],https://github.com/MaslowCNC/Firmware/pull/389,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/389,"This builds upon PR #385 and #386 to allow changing the PWM prescaler frequency from GroundControl.
This needs a cooresponding GroundControl PR (GroundControl #619).

add a system setting $39 fPWM
set the default value to 3 = 490Hz
change the prescaler for timers2-4 on change of fPWM
report the change if verboseDebug > 0","This builds upon PR #385 and #386 to allow changing the PWM prescaler frequency from GroundControl.
This needs a cooresponding GroundControl PR (GroundControl #619).

add a system setting $39 fPWM
set the default value to 3 = 490Hz
change the prescaler for timers2-4 on change of fPWM
report the change if verboseDebug > 0",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,389,2018-02-10T00:38:17Z,2018-02-13T18:54:28Z,2018-06-18T17:52:08Z,MERGED,True,71,4,5,https://github.com/blurfl,Add PWM frequency to system settings,3,[],https://github.com/MaslowCNC/Firmware/pull/389,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/389#issuecomment-364610732,"This builds upon PR #385 and #386 to allow changing the PWM prescaler frequency from GroundControl.
This needs a cooresponding GroundControl PR (GroundControl #619).

add a system setting $39 fPWM
set the default value to 3 = 490Hz
change the prescaler for timers2-4 on change of fPWM
report the change if verboseDebug > 0","You also need to increment the SettingsVersion number in settings.h as well.  This ensures that settings on the arduino are wiped and reloaded with the default and then loaded from GC.  Otherwise, the new variable or potentially other variables can have some very odd values or even overflows.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,389,2018-02-10T00:38:17Z,2018-02-13T18:54:28Z,2018-06-18T17:52:08Z,MERGED,True,71,4,5,https://github.com/blurfl,Add PWM frequency to system settings,3,[],https://github.com/MaslowCNC/Firmware/pull/389,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/389#issuecomment-364678907,"This builds upon PR #385 and #386 to allow changing the PWM prescaler frequency from GroundControl.
This needs a cooresponding GroundControl PR (GroundControl #619).

add a system setting $39 fPWM
set the default value to 3 = 490Hz
change the prescaler for timers2-4 on change of fPWM
report the change if verboseDebug > 0","Interesting, you can change PWM frequency within a cut file using $39=  commands in the cut file.
$39=1 -> 31,000Hz    $39=2 -> 4,100Hz    $39=3 -> 490Hz
Most changes seem pretty benign, though changing fPWM into 4,100Hz causes quite a lag sometimes. Probably not something to be used in every-day cutting, but interesting to use while exploring üòÄ.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,389,2018-02-10T00:38:17Z,2018-02-13T18:54:28Z,2018-06-18T17:52:08Z,MERGED,True,71,4,5,https://github.com/blurfl,Add PWM frequency to system settings,3,[],https://github.com/MaslowCNC/Firmware/pull/389,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/389#issuecomment-364704827,"This builds upon PR #385 and #386 to allow changing the PWM prescaler frequency from GroundControl.
This needs a cooresponding GroundControl PR (GroundControl #619).

add a system setting $39 fPWM
set the default value to 3 = 490Hz
change the prescaler for timers2-4 on change of fPWM
report the change if verboseDebug > 0","it seems like the lag can happen with  any speed change during a cut, but putting in a manual z-axis change (or a several-second long auto one) seems to give the affected routine (PID?) time to clear or catch up. Not that a speed change would be useful, but it does cast interesting shadows of some internal process.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,389,2018-02-10T00:38:17Z,2018-02-13T18:54:28Z,2018-06-18T17:52:08Z,MERGED,True,71,4,5,https://github.com/blurfl,Add PWM frequency to system settings,3,[],https://github.com/MaslowCNC/Firmware/pull/389,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/389#issuecomment-365365962,"This builds upon PR #385 and #386 to allow changing the PWM prescaler frequency from GroundControl.
This needs a cooresponding GroundControl PR (GroundControl #619).

add a system setting $39 fPWM
set the default value to 3 = 490Hz
change the prescaler for timers2-4 on change of fPWM
report the change if verboseDebug > 0","To see it change, turn on 'verboseDebug' in Config.h...",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,389,2018-02-10T00:38:17Z,2018-02-13T18:54:28Z,2018-06-18T17:52:08Z,MERGED,True,71,4,5,https://github.com/blurfl,Add PWM frequency to system settings,3,[],https://github.com/MaslowCNC/Firmware/pull/389,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/389#issuecomment-365366784,"This builds upon PR #385 and #386 to allow changing the PWM prescaler frequency from GroundControl.
This needs a cooresponding GroundControl PR (GroundControl #619).

add a system setting $39 fPWM
set the default value to 3 = 490Hz
change the prescaler for timers2-4 on change of fPWM
report the change if verboseDebug > 0","This is so mind blowing. Wow. I want to keep playing around with it more, but even just changing the settings and hearing the tone change is incredible. It's funny that the noise has been with us for so long and now we can change it. What a fundamentally cool thing! It feels like this PR really touches the heart of the machine. Awesome work @blurfl!! You are really on fire here.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,390,2018-02-13T20:43:46Z,2018-02-13T20:48:31Z,2018-02-13T20:48:31Z,MERGED,True,2,0,1,https://github.com/BarbourSmith,Added to the guestbook,1,[],https://github.com/MaslowCNC/Firmware/pull/390,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/390,Added my name to the guest book,Added my name to the guest book,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,392,2018-02-16T20:03:13Z,2018-02-17T00:59:39Z,2018-06-18T17:52:38Z,MERGED,True,7,7,4,https://github.com/blurfl,rename 'zAxisAuto',2,[],https://github.com/MaslowCNC/Firmware/pull/392,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/392,"PR #328 added a setting to enable/disable spindle control. The setting was named 'zAxisAuto' which seems confusing as it is being used as an on/off control for spindle power. Change the name and accompanying text in Report.cpp to 'spindleAutomation' to better reflect its use. Note that the change in GC that accomanied #328 was PR #458.
This addresses Issue #391, and is accompanied by GC PR #635","PR #328 added a setting to enable/disable spindle control. The setting was named 'zAxisAuto' which seems confusing as it is being used as an on/off control for spindle power. Change the name and accompanying text in Report.cpp to 'spindleAutomation' to better reflect its use. Note that the change in GC that accomanied #328 was PR #458.
This addresses Issue #391, and is accompanied by GC PR #635",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/thormj,1,https://github.com/MaslowCNC/Firmware/pull/393,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,2,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-366547436,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","what if an axis should not be moving (based on the speed/angle of the current
move)?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/thormj,3,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-366551262,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I was assuming that was being handled by the if(_pidController.Compute()) statement, but that might doesn't look correct.
I put a if(_pidOutput) bit in there (so if 0 velocity is called for, reset things -- I was assuming that if 0 was called for, then Compute would be false, but that doesn't make a whole lotta sense - if that were true how would you stop an axis?)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367426779,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","Couldn't this trigger a stall warning if the movements requested were extremely small?  When we are station keeping, the pidoutput may fluctuate rapidly positive and negative to try and keep holding the exact position.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/thormj,5,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367448771,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I tried to mitigate that with thresholds (""you have to have indicated a stall for the last X counts of the report all""), but that still possible... is there a ""distance count"" (preferable in encoder counts --  that should be used to indicate ""station keeping"" vs ""move me"" -- I'll add it /change it in  Axis.cpp:116 and then we'd be sure (or Axis.h -- I chose StallSteps and StallTimeout quite arbitrarily)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,6,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367463387,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I'm not sure that looking for no motion is the right thing to be doing, the
current problem of a hook at the end of a line at the top of the machine is a
classic example of the machine not keeping up (what we would consider the
equivalent of a stall), but motion was happening, just not enough of it

So I think we need to be looking for too much error, not no motion",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,7,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367464763,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","or another thing to look for, maxing out the motor power and the PID loop still trying to increase it.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,8,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367501957,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I think we had talked about using error before and that seems a bit more straight forward to me.  The only issue I see is that if the max_error is a fixed amount, small movements would not trigger the warning, at least not immediately.  The max_error could scale but then it is a question of what does it scale with?
I think this is a case where a simple solution fixes many of our problems.  But we can't fix all of the issues without a complex solution.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,9,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367507124,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","@thormj thank you for making those corrections.
If this works as advertised and produces no side effects I think this is good to commit.  I can keep backseat driving about hypothetical alternative ways to handle this, but I lack the time to actually do the coding, so that doesn't seem fair.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/thormj,10,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367509283,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I might've been trying to shoot bigger game than I should've been.  The thing that I wanted was a way to burp and tell me ""hey bozo, plug in your Z axis!"", but I figured that that would've been the same algorithm for detecting a stall (I moved before, but for some reason, I cannot move now), so I said ""if I've moved before... I'm plugged in; say that I've stalled instead.""
It doesn't detect ""I'm not keeping up"" very well, and I'm not sure if will actually detect a stall or not (if during a stall, the encoder bounces more than 10 clicks per 100 ms, it not-quite stalled by my code's reckoning.
Maybe for ""not keeping up"" you'd want an error and all stop (""Hey idgit - plug in yo' z axis""), but I think you'd really rather  start tweaking the other velocities in a coordinated move to straighten it back out and set a flag that ""your Maslow is cutting slow because it's binding"" (not good for cutters [but would signalling a full stop without backing off the material be good either?], but  at least the cut will be good and straight).
Maybe if vel_error>2000, cut velocities of all axes to 1/2, and if it gets to within 100, go back to full speed?  But I wouldn't try to make that kind of change away from maslow as I have no idea what the ""usual"" and the ""OMG-it's sticking"" numbers would be.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,11,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367520577,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","On Wed, 21 Feb 2018, Kevin Robert Keegan wrote:
 I think we had talked about using error before and that seems a bit more
 straight forward to me.  The only issue I see is that if the max_error is a
 fixed amount, small movements would not trigger the warning, at least not
 immediately.  The max_error could scale but then it is a question of what does
 it scale with?
 I think this is a case where a simple solution fixes many of our problems.
 But we can't fix all of the issues without a complex solution.
I don't think most of our problems are with no movement.

That's why I was suggesting looking for exceeding +-255 speed. Even if it's a
small movement, if we aren't moving, the PID loop should keep calling for more
speed up past the limit, because the error isn't being reduced.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,12,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367525439,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","i think the speed is currently capped at 255 (the pid loop will never output higher), but we could remove that cap and catch anything that high as an error.  It could certainly work, catching an unplugged motor wouldn't be instantaneous, but the amount of error and time would be minimal.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367525789,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?",Wouldn‚Äôt overshoot on a poorly tuned PID loop cause this error?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,14,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367526723,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","only if the overshoot is bad enough to cause 100% power in reverse to be
applied, and if that does happen, I don't think it's a bad thing to get a notice
of it.

The notice should be something like ""the machine was unable to move at the
desired speed"" (or something along those lines), not ""motor stalled"" or
something like that.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/blurfl,15,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367528147,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?",How much overshoot is reasonable? For how long?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,16,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367529193,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","ideally we should not overshoot (it means cutting areas we aren't supposed to
cut)

currently some overshoot is going to happen because we do not have any motion
planning to slow us down. I don't know what this amounts to, but it's not enough
to notice in the resulting cuts.

k",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,17,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367536068,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","We have to be careful about what we mean when we say overshoot.
Overshoot in reference to the PID loops means requesting either an RPM or voltage value higher than necessary.  The issue is we don't know what is necessary.
@blurfl is correct, a badly tuned PID loop would cause this type of design to fire.  But I agree with @davidelang that above some threshold, this is probably what we want anyways.
I think the only way to pick that threshold is by some empirical testing.  Of course the problem there is that a different design may result in a different outcome.
This proposal is certainly simpler and cleaner than the one currently designed",True,"{'HEART': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,18,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367537483,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I'm proposing that the first-try threshold be the max power to the motors. If we
are running the motors at full power and we think (through the PID loop) that we
need to go even faster, that seems like a clear problem

either:
1. we aren't moving
2. we aren't keeping up with the desired movement
3. we have passed (by a significant amount)where we were supposed to stop and
are reversing in an attempt to get back where we are supposed to be.

I don't think 3 is common (but real-world experimentation will tell us)

I am hoping that this test will trigger for the heavy-sled-top-of-machine
problem that gero ran into.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,19,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367538394,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","It will be interesting to see what happens.  My guess is that when starting from a standstill, that we hit your 2nd option (not keeping up) and max out often.  Here is a graph I made a while back
https://discourse-cdn-sjc2.com/standard11/uploads/maslowcnc/original/2X/7/7c5e44c3703fa92a1d624342b8fd5b4ee35c8cdc.png
It looks like it may not hit 255, but that could just be because the sample rate of the graph is well below the PID loop frequency.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,20,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367541002,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","yep, let's see what happens.

If this isn't hit under normal operations, this would be a very useful check to
have.

if it is, then we need to implement acceleration planning before it is as
useful.
k",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,21,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-367901676,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","So I think @davidelang is right.  I made a simple test branch that prints a warning to the serial stream if
255 < speed < -255
and this condition is maintained for 20 milliseconds (meaning 3 consecutive PId cycles).
You can try it here:
https://github.com/krkeegan/Firmware/tree/OverSpeedWarning
It works.  It shows up when i unplug a motor.  And it also prints on the areas on the work surface where my motors are not able to maintain the 1000mm/min max speed.  (top corners mostly, I don't know if this is unique to my machine or if we have our max speed set a little high).
In this basic form it doesn't understand a stall vs unhooked, but I don't know if that is necessary.
Anyways, others should play around with this and see if this works for them.  We can implement it as a warning very easily, if we want to actually trip an alarm state that still needs more work to enable alarms to work smoothly.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/blurfl,22,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-370631805,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","@krkeegan, are you considering a PR with the overspeed warning in the simple form you linked? I could see making it switched by verboseDebug, and maybe making the trigger something like (LOOPINTERVAL * 2)/1000 to scale with changes to the PID loop.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,23,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-370643921,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","the current check to alert if at max for more than 3 cycles is a good starting
point.

I think 'alert if at max and PID loop thinks we need to speed up' will work as
well, and doesn't have the complexity of remembering the last few cycles (or
worrying about how far apart those cycles are)

but either one is going to give false positives until we get acceleration
planning in place.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/davidelang,24,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-370644476,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","also check out this Marlin issue
https://forums.maslowcnc.com/t/calibration-moving-one-motor-wrong-direction-in-ground-control-v1-08/2590",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/BarbourSmith,25,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-370879253,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I would like to get this into 1.09. I'm a little hesitant because we accidentally put pretty significant bugs in 1.06 (crashed when velocity couldn't be reported) and 1.07 (crashed when setting the chain lengths) so we haven't had a really stable release in like a month, but it sounds like there is a strong community desire to see this feature added.
How do I test that it is working? When I unplug a motor I don't see any sort of warning.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/blurfl,26,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-370887009,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?",I think that the change @krkeegan wrote here is simpler and easier to test. It posts a warning message if the motor becomes disconnected or when the PID loop asks for more than 100% effort.,True,"{'THUMBS_UP': ['https://github.com/BarbourSmith'], 'HOORAY': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/BarbourSmith,27,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-370893368,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","Excellent!
@krkeegan how do you feel about making a PR with those changes?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/krkeegan,28,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-370895683,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?","I can do that, this is very simple and is probably a good baby step, since it only produces a warning for the user.
Once we get it dialed in, and other improvements, it could actually take action (ie stop) if a fault happened.",True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,393,2018-02-18T17:47:19Z,2018-03-07T19:03:28Z,2018-03-07T19:03:28Z,CLOSED,False,64,11,6,https://github.com/thormj,Initial version of a stalled/unhooked axis detector,3,[],https://github.com/MaslowCNC/Firmware/pull/393,https://github.com/BarbourSmith,29,https://github.com/MaslowCNC/Firmware/pull/393#issuecomment-371247539,"For issue #378, but this needs testing (I wrote it on a plane flight and I won't be back to carving until Mar 6).
Algorithm (and if this is not clear from the patch, let me know and I'll throw in some more comments):

When calculating the position PID for each axis:  if it moved since last time, increment moved, if not, increment stalled.
If an axis is detached, clear both variables.
When the report runs, examine all axes; if it has stalled for >5 cycles (so 500ms), prepare a message:
3b. If it's moved before, say it's stalled.  If it hasn't moved before, say it's UNHK'd
If I have a message from step 3, pause() the machine (which hopefully detaches the axes which will clear the error)

Not sure about step 4 happening fast enough... maybe I need to put a ""if not paused"" around the block in report.cpp?",I'm going to close this one as added in #410 üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,394,2018-02-19T02:21:24Z,2018-02-19T19:51:18Z,2018-02-19T19:51:18Z,MERGED,True,2,0,1,https://github.com/tanju-b,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/394,https://github.com/tanju-b,1,https://github.com/MaslowCNC/Firmware/pull/394,1st commit from the Maker Station,1st commit from the Maker Station,True,"{'HEART': ['https://github.com/BarbourSmith', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,394,2018-02-19T02:21:24Z,2018-02-19T19:51:18Z,2018-02-19T19:51:18Z,MERGED,True,2,0,1,https://github.com/tanju-b,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/394,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/394#issuecomment-366788271,1st commit from the Maker Station,Welcome!!!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,395,2018-02-19T04:44:27Z,2018-02-19T19:53:17Z,2018-02-21T00:40:36Z,MERGED,True,44,1,4,https://github.com/idoc,Add a PlatformIO project,2,[],https://github.com/MaslowCNC/Firmware/pull/395,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/395,"This project builds for two environments:
megaatmega2560: This is the standard Arduino Mega 2560 setup for
PlatformIO. It uses the default flags for PlatformIO, and builds an
optimized, stripped binary. Good for building firmware for production
use.
simavr: Disable all optimizations, leave debugging symbols, and #define
SIMAVR. SIMAVR doesn't do anything yet, but it will enable some
simavr-specific behavior in a separate commit.
I created this project as prep for #363, but it can also help simplify
setup for users of the PlatformIO IDE, or someone setting up a CI
environment.
I think it also resolves #365.","This project builds for two environments:
megaatmega2560: This is the standard Arduino Mega 2560 setup for
PlatformIO. It uses the default flags for PlatformIO, and builds an
optimized, stripped binary. Good for building firmware for production
use.
simavr: Disable all optimizations, leave debugging symbols, and #define
SIMAVR. SIMAVR doesn't do anything yet, but it will enable some
simavr-specific behavior in a separate commit.
I created this project as prep for #363, but it can also help simplify
setup for users of the PlatformIO IDE, or someone setting up a CI
environment.
I think it also resolves #365.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,395,2018-02-19T04:44:27Z,2018-02-19T19:53:17Z,2018-02-21T00:40:36Z,MERGED,True,44,1,4,https://github.com/idoc,Add a PlatformIO project,2,[],https://github.com/MaslowCNC/Firmware/pull/395,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/395#issuecomment-366788674,"This project builds for two environments:
megaatmega2560: This is the standard Arduino Mega 2560 setup for
PlatformIO. It uses the default flags for PlatformIO, and builds an
optimized, stripped binary. Good for building firmware for production
use.
simavr: Disable all optimizations, leave debugging symbols, and #define
SIMAVR. SIMAVR doesn't do anything yet, but it will enable some
simavr-specific behavior in a separate commit.
I created this project as prep for #363, but it can also help simplify
setup for users of the PlatformIO IDE, or someone setting up a CI
environment.
I think it also resolves #365.",Excellent! I am sure it will help someone with their setup soon. üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,395,2018-02-19T04:44:27Z,2018-02-19T19:53:17Z,2018-02-21T00:40:36Z,MERGED,True,44,1,4,https://github.com/idoc,Add a PlatformIO project,2,[],https://github.com/MaslowCNC/Firmware/pull/395,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/395#issuecomment-366809273,"This project builds for two environments:
megaatmega2560: This is the standard Arduino Mega 2560 setup for
PlatformIO. It uses the default flags for PlatformIO, and builds an
optimized, stripped binary. Good for building firmware for production
use.
simavr: Disable all optimizations, leave debugging symbols, and #define
SIMAVR. SIMAVR doesn't do anything yet, but it will enable some
simavr-specific behavior in a separate commit.
I created this project as prep for #363, but it can also help simplify
setup for users of the PlatformIO IDE, or someone setting up a CI
environment.
I think it also resolves #365.",Where would be a good place to make the info in the initial post of this issue available for posterity?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,396,2018-02-19T05:31:01Z,2018-02-19T19:58:09Z,2018-02-21T00:33:45Z,MERGED,True,71,2,5,https://github.com/idoc,Add support for running in simavr,1,[],https://github.com/MaslowCNC/Firmware/pull/396,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/396,"Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.","Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,396,2018-02-19T05:31:01Z,2018-02-19T19:58:09Z,2018-02-21T00:33:45Z,MERGED,True,71,2,5,https://github.com/idoc,Add support for running in simavr,1,[],https://github.com/MaslowCNC/Firmware/pull/396,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/396#issuecomment-366789659,"Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.",Looks great! Its fun to see how quickly this is progressing üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,396,2018-02-19T05:31:01Z,2018-02-19T19:58:09Z,2018-02-21T00:33:45Z,MERGED,True,71,2,5,https://github.com/idoc,Add support for running in simavr,1,[],https://github.com/MaslowCNC/Firmware/pull/396,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/396#issuecomment-366892527,"Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.","Under normal non-simavr use does the [env:simavr] section in platformio.ini need to be commented out to prevent platformio from building and uploading to the mega?

Looking for upload port...
Auto-detected: /dev/cu.usbmodem1411
Uploading .pioenvs/simavr/firmware.hex",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,396,2018-02-19T05:31:01Z,2018-02-19T19:58:09Z,2018-02-21T00:33:45Z,MERGED,True,71,2,5,https://github.com/idoc,Add support for running in simavr,1,[],https://github.com/MaslowCNC/Firmware/pull/396,https://github.com/idoc,4,https://github.com/MaslowCNC/Firmware/pull/396#issuecomment-367052245,"Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.","Oh dang. I was so focused on getting simavr to work, I totally forgot to
test the full workflow on a real Arduino...

I have a PR to disable the upload for simavr. I still need to test it with
an Arduino plugged in, so I won‚Äôt be able to upload it till I get home this
evening.
‚Ä¶
On Mon, Feb 19, 2018 at 11:47 PM Scott Smith ***@***.***> wrote:
 Under normal non-simavr use does the [env:simavr] section in
 platformio.ini need to be commented out to prevent platformio from building
 and uploading to the mega?

 Looking for upload port...
 Auto-detected: /dev/cu.usbmodem1411
 Uploading .pioenvs/simavr/firmware.hex

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#396 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABxOEylMY_kkiICY97l04zbGYUxT73Fnks5tWniLgaJpZM4SKEOG>
 .",True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,396,2018-02-19T05:31:01Z,2018-02-19T19:58:09Z,2018-02-21T00:33:45Z,MERGED,True,71,2,5,https://github.com/idoc,Add support for running in simavr,1,[],https://github.com/MaslowCNC/Firmware/pull/396,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/396#issuecomment-367054284,"Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.","Thanks for the PlatformIO setup, it offers some interesting options. I'm also interested in getting a simavr environment set up for the Teensy 3.5 & 3.6 boards. Getting PlatformIO set up for those was easy, and commenting out the unwanted sections of platformio.ini seemed to be the way to 'steer' the operation.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,396,2018-02-19T05:31:01Z,2018-02-19T19:58:09Z,2018-02-21T00:33:45Z,MERGED,True,71,2,5,https://github.com/idoc,Add support for running in simavr,1,[],https://github.com/MaslowCNC/Firmware/pull/396,https://github.com/idoc,6,https://github.com/MaslowCNC/Firmware/pull/396#issuecomment-367070981,"Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.","@blurfl I created GH-397, which turns the upload into a no-op for simavr. I don't have an Arduino at work to fully test this, but you might want to take a look and see if can help your workflow.
When we can, I think it's best to avoid commenting and uncommenting committed files. It's too easy to forget to reset the files before committing a change, and breaking other people's workflow. What do you think about using a custom script, similar to my 'simavr_env_for_platformio.py' for controlling behavior based on environment variables (set in your .profile or similar)?
This sort of thing might be useful if you want your Teensy environment to upload to your device, but assume that most others will want to skip it.
Oh, and ignore the 'upload_port' line I put in 'platformio.ini'. I should have deleted it before pushing. It's only necessary when testing 'pio run -t upload' on a computer with no Arduino plugged in. Normally, we would want this command to fail if you have nothing plugged in.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,396,2018-02-19T05:31:01Z,2018-02-19T19:58:09Z,2018-02-21T00:33:45Z,MERGED,True,71,2,5,https://github.com/idoc,Add support for running in simavr,1,[],https://github.com/MaslowCNC/Firmware/pull/396,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/396#issuecomment-367075277,"Simavr is a simulator for the AVR family of microcontrollers
(https://github.com/buserror/simavr). Running Maslow firmware in simavr
is useful for automated testing in a CI loop and debugging in GDB.
This is the next step in #363.
These commit works around two issues with simavr:

The simulated UART crashes if you don't flush often, so we flush
after every character written to Serial.
Our TimerOne class causes the simulator to hang, so I moved the call
to runsOnATimer() into loop(). This means runsOnATimer() will be called
less frequently, but I think that's OK for the simulated environment.","I'll test the PR and report. I'd be glad to use a script, it sounds like a good idea.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,397,2018-02-20T18:01:47Z,2018-02-21T00:15:09Z,2018-02-21T00:33:42Z,CLOSED,False,4,5,1,https://github.com/idoc,WIP: Disable uploading for simavr,2,[],https://github.com/MaslowCNC/Firmware/pull/397,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/397,"NOTE: This is not fully tested, and is being uploaded for @blurfl to
take a look.
My previous commit created a PlatformIO project that built a customised
binary for running in simavr. It also attempted to upload this binary
when an Arduino was plugged in, which was never intended.
This commit disables the uploading for simavr.
Other environments","NOTE: This is not fully tested, and is being uploaded for @blurfl to
take a look.
My previous commit created a PlatformIO project that built a customised
binary for running in simavr. It also attempted to upload this binary
when an Arduino was plugged in, which was never intended.
This commit disables the uploading for simavr.
Other environments",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,399,2018-02-21T01:59:19Z,2018-02-22T19:24:46Z,2018-02-22T19:24:46Z,MERGED,True,31,0,3,https://github.com/idoc,Disable firmware upload for simavr,4,[],https://github.com/MaslowCNC/Firmware/pull/399,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/399,,,True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,399,2018-02-21T01:59:19Z,2018-02-22T19:24:46Z,2018-02-22T19:24:46Z,MERGED,True,31,0,3,https://github.com/idoc,Disable firmware upload for simavr,4,[],https://github.com/MaslowCNC/Firmware/pull/399,https://github.com/idoc,2,https://github.com/MaslowCNC/Firmware/pull/399#issuecomment-367189101,,"@blurfl This is identical to GH-397, I just cleaned up the commit message",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,399,2018-02-21T01:59:19Z,2018-02-22T19:24:46Z,2018-02-22T19:24:46Z,MERGED,True,31,0,3,https://github.com/idoc,Disable firmware upload for simavr,4,[],https://github.com/MaslowCNC/Firmware/pull/399,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/399#issuecomment-367780437,,I've been kind of ignoring this one because to be honest I don't fully understand what it does. Are we ready to merge?,True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,399,2018-02-21T01:59:19Z,2018-02-22T19:24:46Z,2018-02-22T19:24:46Z,MERGED,True,31,0,3,https://github.com/idoc,Disable firmware upload for simavr,4,[],https://github.com/MaslowCNC/Firmware/pull/399,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/399#issuecomment-367782169,,"Yes, this is ready to merge... pull the trigger!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,400,2018-02-21T05:35:31Z,2018-02-22T19:20:56Z,2018-02-22T19:37:13Z,MERGED,True,38,15,4,https://github.com/idoc,Teensy project (for @blurfl),2,[],https://github.com/MaslowCNC/Firmware/pull/400,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/400,"@blurfl Here's my take on a configurable setup. This will build the code for Teensy 3.5 and 3.6, but not attempt to upload it. To enable Teensy upload, set the TEENSY35_UPLOAD and/or TEENSY36_UPLOAD environment variable.
Currently, this can't be merged, because Maslow code doesn't build correctly for Teensy. But you can use this to play with configurable setups and add special compilation flags for your Teensy project.
If this works well for you, we can merge it once you get the code to compile with Teensy.","@blurfl Here's my take on a configurable setup. This will build the code for Teensy 3.5 and 3.6, but not attempt to upload it. To enable Teensy upload, set the TEENSY35_UPLOAD and/or TEENSY36_UPLOAD environment variable.
Currently, this can't be merged, because Maslow code doesn't build correctly for Teensy. But you can use this to play with configurable setups and add special compilation flags for your Teensy project.
If this works well for you, we can merge it once you get the code to compile with Teensy.",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,400,2018-02-21T05:35:31Z,2018-02-22T19:20:56Z,2018-02-22T19:37:13Z,MERGED,True,38,15,4,https://github.com/idoc,Teensy project (for @blurfl),2,[],https://github.com/MaslowCNC/Firmware/pull/400,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/400#issuecomment-367219436,"@blurfl Here's my take on a configurable setup. This will build the code for Teensy 3.5 and 3.6, but not attempt to upload it. To enable Teensy upload, set the TEENSY35_UPLOAD and/or TEENSY36_UPLOAD environment variable.
Currently, this can't be merged, because Maslow code doesn't build correctly for Teensy. But you can use this to play with configurable setups and add special compilation flags for your Teensy project.
If this works well for you, we can merge it once you get the code to compile with Teensy.","Thank you very much! I'll give it a go first thing in the morning. I do have the code compiling and running Teensy3.5 and 3.6, though there are still some things to work on üòâ.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,400,2018-02-21T05:35:31Z,2018-02-22T19:20:56Z,2018-02-22T19:37:13Z,MERGED,True,38,15,4,https://github.com/idoc,Teensy project (for @blurfl),2,[],https://github.com/MaslowCNC/Firmware/pull/400,https://github.com/idoc,3,https://github.com/MaslowCNC/Firmware/pull/400#issuecomment-367220517,"@blurfl Here's my take on a configurable setup. This will build the code for Teensy 3.5 and 3.6, but not attempt to upload it. To enable Teensy upload, set the TEENSY35_UPLOAD and/or TEENSY36_UPLOAD environment variable.
Currently, this can't be merged, because Maslow code doesn't build correctly for Teensy. But you can use this to play with configurable setups and add special compilation flags for your Teensy project.
If this works well for you, we can merge it once you get the code to compile with Teensy.",Oh cool! I'm interested to see where this effort goes.,True,"{'HEART': ['https://github.com/blurfl'], 'THUMBS_UP': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,400,2018-02-21T05:35:31Z,2018-02-22T19:20:56Z,2018-02-22T19:37:13Z,MERGED,True,38,15,4,https://github.com/idoc,Teensy project (for @blurfl),2,[],https://github.com/MaslowCNC/Firmware/pull/400,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/400#issuecomment-367792213,"@blurfl Here's my take on a configurable setup. This will build the code for Teensy 3.5 and 3.6, but not attempt to upload it. To enable Teensy upload, set the TEENSY35_UPLOAD and/or TEENSY36_UPLOAD environment variable.
Currently, this can't be merged, because Maslow code doesn't build correctly for Teensy. But you can use this to play with configurable setups and add special compilation flags for your Teensy project.
If this works well for you, we can merge it once you get the code to compile with Teensy.","I was a fool and merged #399 before #400 which resulted in a couple conflicts. I took the #400 version for everything, but I wanted to mention it so that if there is an issue we know where the blame lies (with me!)",True,"{'LAUGH': ['https://github.com/idoc'], 'HEART': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,400,2018-02-21T05:35:31Z,2018-02-22T19:20:56Z,2018-02-22T19:37:13Z,MERGED,True,38,15,4,https://github.com/idoc,Teensy project (for @blurfl),2,[],https://github.com/MaslowCNC/Firmware/pull/400,https://github.com/idoc,5,https://github.com/MaslowCNC/Firmware/pull/400#issuecomment-367794309,"@blurfl Here's my take on a configurable setup. This will build the code for Teensy 3.5 and 3.6, but not attempt to upload it. To enable Teensy upload, set the TEENSY35_UPLOAD and/or TEENSY36_UPLOAD environment variable.
Currently, this can't be merged, because Maslow code doesn't build correctly for Teensy. But you can use this to play with configurable setups and add special compilation flags for your Teensy project.
If this works well for you, we can merge it once you get the code to compile with Teensy.","Um, sure! Yes. If anything breaks, be sure to blame @BarbourSmith. Definitely :)
(but do let me know it's broken, so I can upload a fix)",True,"{'HEART': ['https://github.com/blurfl'], 'LAUGH': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,400,2018-02-21T05:35:31Z,2018-02-22T19:20:56Z,2018-02-22T19:37:13Z,MERGED,True,38,15,4,https://github.com/idoc,Teensy project (for @blurfl),2,[],https://github.com/MaslowCNC/Firmware/pull/400,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/400#issuecomment-367795515,"@blurfl Here's my take on a configurable setup. This will build the code for Teensy 3.5 and 3.6, but not attempt to upload it. To enable Teensy upload, set the TEENSY35_UPLOAD and/or TEENSY36_UPLOAD environment variable.
Currently, this can't be merged, because Maslow code doesn't build correctly for Teensy. But you can use this to play with configurable setups and add special compilation flags for your Teensy project.
If this works well for you, we can merge it once you get the code to compile with Teensy.","Looks to me like all is well. A tangled web, github üòÄ",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,401,2018-02-21T06:16:46Z,2018-02-22T19:23:49Z,2018-02-22T19:23:49Z,MERGED,True,2,14,1,https://github.com/idoc,Update PlatformIO instructions in README.md,1,[],https://github.com/MaslowCNC/Firmware/pull/401,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/401,,,True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,402,2018-02-21T08:55:16Z,2018-02-21T18:17:25Z,2018-02-21T18:17:25Z,MERGED,True,1,0,1,https://github.com/GeroBH,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/402,https://github.com/GeroBH,1,https://github.com/MaslowCNC/Firmware/pull/402,Added myself,Added myself,True,"{'HEART': ['https://github.com/BarbourSmith'], 'HOORAY': ['https://github.com/BarbourSmith'], 'THUMBS_UP': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,402,2018-02-21T08:55:16Z,2018-02-21T18:17:25Z,2018-02-21T18:17:25Z,MERGED,True,1,0,1,https://github.com/GeroBH,Update guestBook.txt,1,[],https://github.com/MaslowCNC/Firmware/pull/402,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/402#issuecomment-367419925,Added myself,Welcome!!! ‚ù§Ô∏è ‚ù§Ô∏è ‚ù§Ô∏è,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,403,2018-02-22T21:30:18Z,2018-02-23T00:44:30Z,2018-02-23T00:44:30Z,MERGED,True,10,10,1,https://github.com/idoc,Disable builds for Teensy boards,1,[],https://github.com/MaslowCNC/Firmware/pull/403,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/403,"I accidentally mixed a change that was meant for everyone, with a change
I created for @blurfl to test, and now if anyone tries to use the
PlatformIO project, it will try to build a Teensy version of the code,
which won't work with the current tip of master.","I accidentally mixed a change that was meant for everyone, with a change
I created for @blurfl to test, and now if anyone tries to use the
PlatformIO project, it will try to build a Teensy version of the code,
which won't work with the current tip of master.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,403,2018-02-22T21:30:18Z,2018-02-23T00:44:30Z,2018-02-23T00:44:30Z,MERGED,True,10,10,1,https://github.com/idoc,Disable builds for Teensy boards,1,[],https://github.com/MaslowCNC/Firmware/pull/403,https://github.com/idoc,2,https://github.com/MaslowCNC/Firmware/pull/403#issuecomment-367828586,"I accidentally mixed a change that was meant for everyone, with a change
I created for @blurfl to test, and now if anyone tries to use the
PlatformIO project, it will try to build a Teensy version of the code,
which won't work with the current tip of master.",Sorry about that...,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,403,2018-02-22T21:30:18Z,2018-02-23T00:44:30Z,2018-02-23T00:44:30Z,MERGED,True,10,10,1,https://github.com/idoc,Disable builds for Teensy boards,1,[],https://github.com/MaslowCNC/Firmware/pull/403,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/403#issuecomment-367828778,"I accidentally mixed a change that was meant for everyone, with a change
I created for @blurfl to test, and now if anyone tries to use the
PlatformIO project, it will try to build a Teensy version of the code,
which won't work with the current tip of master.",I'm sorry I missed it as well.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/404,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368084565,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Beautiful!! This is amazing.
I would love to get Travis-CI integration set up, can you point me in the right direction as to where I would start clicking?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,3,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368157656,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.",Happy to! It's actually easier and simpler than I imagined. I'll write up a mini-howto when I get home today.,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,4,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368192650,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","K, here goes.
I don't intend this as a proper howto, just the shortest I can make it :)
- Open http://travis-ci.org (not the .com, which is for closed-source projects)
- Click ""log in with GitHub"". This lets Travis find all your repos and update their status.
- Click on your icon on the top right corner, and click Profile.
- You'll see a list of your repos at the bottom, all disabled by default. Enable Firmware.
- Firmware already has a .travis.yml file, so Travis will know how build the code whenever there's need.
- Aaaand you're done!

Whenever a PR or branch is created or updated, Travis will build it and add notes/icons to show what failed and what passed. People get emails on the status of their builds. You tweak notifications, connect it to Slack, and more.
Pass/fail notes are linked to build logs, so you can click and see the exact error. Their live-view build console is amazing.
AFAIR, this is all you need to do for basic functionality. There's more advanced stuff, like automatic releases, but I think that's all we really need right now.
Hope you like it! I'm glad to help any questions or need a hand.  I'm waaaay too happy to mess with this stuff (ask my coworkers).",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368628581,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Thanks!! That couldn't have been easier or more clear.
We should be up and running on the firmware üëç üëç üéâ üòÄ",True,{'HOORAY': ['https://github.com/idoc']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368750808,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","The current status of some projects is shown in their github Read.me, for instance the espressif/Arduino-esp32  project. Their status:

I don't see similar information about MaslowCNC/Firmware, yet - am I being too hasty?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,7,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368755041,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Maybe a little :)
We haven't had a new PR or branch created since @BarbourSmith connected us to Travis. Once a PR is created and built by Travis, you'll see a status for that branch. Once the PR is merged to master, I expect you'll see the status applied to the master branch.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368755574,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Wouldn‚Äôt PR#405 show up? It was merged 8 hours ago... oops, I see, that was before Bar‚Äôs  moment about Travis being set up.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,9,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368757358,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","It was created two days ago, though. To the best of my understanding of Travis, it's the push that trigger the build, not the merge. When you merge a PR, it just carries over the status of the build from the PR to the branch.
I just updated my #406 to trigger a Travis build, which passed. If you guys think it's OK to merge that change (it doesn't touch the firmware code, and Travis says it didn't break the PlatformIO build), we can merge it and see if it earns us a ""passing"" annotation on master.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,10,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368757880,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Ooh! I just noticed this neat little touch.
When you're viewing a PR that's been tested by Travis, you get little status emblem on the favicon:",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/BarbourSmith,11,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-368985075,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","This is great!
I think we needed to put a little bit of markdown in the readme to make the badge show up...so I did and it's there!

Can we run our builds for GC this way?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,12,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369019669,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Linux and OS X: Probably, and I'm happy to give it a crack. Is there info on the GC wiki on how to build and package binaries? I'm not seeing anything.
I don't think there's anything we can do on Windows, though. Travis doesn't officially support, and, based on some googling, they don't plan to.

Even if we can't build all our official binaries, I can see it being useful for testing, though. Travis can make sure that the code is at least valid Python, and if/when we have some form of automated tests, it will be valuable to know that they pass on at least some of our supported OSs.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/BarbourSmith,13,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369023061,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Darn, its a bummer we can't do windows too.
The instructions for packaging for OS X are here: https://kivy.org/docs/guide/packaging-osx.html but @blurfl is our resident expert.
If we are running a build on Linux it might be worth throwing in a package for Android. The serial connection thing hasn't been worked out yet, but having the package made every release might get the community excited about pushing in that direction",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/blurfl,14,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369026313,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","The buildozer packaging puts python, Kivy and the extra packages into the package along with the GroundControl folder and some scripting to run things. It builds a .dmg file as the output.. Let me know how I can help.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/BarbourSmith,15,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369029462,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Could I set up a windows server that would do the same thing? Having a fully automated build process would be pretty slick.
I'm looking forwards to playing around with this CI stuff as soon as I have a chance. I bet we can do a lot of fun things with it",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/blurfl,16,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369050225,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.",What's the Windows build process now? Is it scripted/scriptable?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,17,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369055041,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","I was about to ask the same thing.
I'm thinking if it's scriptable (and it looks like it is), perhaps we can set up a free Windows EC2 instance and have Travis SSH into it.
It will likely involve some futzing around, to see how the SSH private key can be stored securely and all that, and it won't be terribly fast, but I think we can make it work.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/BarbourSmith,18,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369076663,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","It is both script able and scripted. The ""build.bat"" file in the build branch will run the whole process.
I like the idea of using AWS a lot...great suggestion!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/blurfl,19,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369296291,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","I've got a script that uses the previous release of GC.dmg to build the new one, without buildozer. That might be easier to set up than the full buildozer/Kivy setup.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/BarbourSmith,20,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369360914,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.",Woah!! Very cool @blurfl . I bet that is much quicker because most of the packaging is already done.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/idoc,21,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369419821,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","Oh nice! Looks like a lot of the scripting is already done, which will make my work a lot easier.
I'm going to ignore Windows for a bit, because it's the least convenient for me to work with (personal preference) and brings the most security concerns (need to open an EC2 machine to Travis, but not to Bitcoin miners and such).
Now that I think about it, @blurfl's GC-rebuilding script will need me to first download the latest release from GH into the Travis machine, won't it? I hope Travis lets me do that.
If the buildozer script is really just the pip install and then buildozer osx debug, maybe I'll start with that. It seems like the smallest number of things open questions, and will give us Linux, OS X, and Android. Once I get that to work, I can switch OS X to @blurfl's script to improve build time, and then start dealing with Windows and EC2.
Sounds sensible?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,404,2018-02-23T04:45:18Z,2018-02-23T17:44:26Z,2018-02-28T23:52:17Z,MERGED,True,45,11,3,https://github.com/idoc,Add integration with Travis-CI,1,[],https://github.com/MaslowCNC/Firmware/pull/404,https://github.com/blurfl,22,https://github.com/MaslowCNC/Firmware/pull/404#issuecomment-369424785,"If the project is connected to Travis CI, it will detect any new commit and PR, and run a set of tests on it.
Right now, it just compiles the code for all supported boards (currently Ardumega and simavr, but I hear Teensy is in the works), and confirm that the code compiles. Once we have some automated tests in place, it can also run them.
Later on, this can also be used to automatically upload released binaries to GitHub, but I don't think we're there yet.
Once the build is done, Travis will update GitHub to show the status of PRs and branches. This is what it looks like in my forked project:

and

@BarbourSmith, I don't know if you have bandwidth to look at hooking up the main project to CI at this point, but I think this can be useful to merge for other contributors. With this in place, anybody can connect Travis to their forked projects with just a few clicks.","It‚Äôs been a while since I went through the kivy install, I think there were some potholes in the road there. I‚Äôve replaced icons in a couple places, but that‚Äôs just eye candy.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,405,2018-02-24T21:19:39Z,2018-02-26T19:33:03Z,2018-02-27T23:38:38Z,MERGED,True,13,4,1,https://github.com/aprospero,More Info about using Eclipse IDE for firmware development,1,[],https://github.com/MaslowCNC/Firmware/pull/405,https://github.com/aprospero,1,https://github.com/MaslowCNC/Firmware/pull/405,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,405,2018-02-24T21:19:39Z,2018-02-26T19:33:03Z,2018-02-27T23:38:38Z,MERGED,True,13,4,1,https://github.com/aprospero,More Info about using Eclipse IDE for firmware development,1,[],https://github.com/MaslowCNC/Firmware/pull/405,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/405#issuecomment-368621695,,üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,405,2018-02-24T21:19:39Z,2018-02-26T19:33:03Z,2018-02-27T23:38:38Z,MERGED,True,13,4,1,https://github.com/aprospero,More Info about using Eclipse IDE for firmware development,1,[],https://github.com/MaslowCNC/Firmware/pull/405,https://github.com/aprospero,3,https://github.com/MaslowCNC/Firmware/pull/405#issuecomment-369066961,,üëç üëç üôã,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/idoc,1,https://github.com/MaslowCNC/Firmware/pull/406,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/idoc,2,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368283151,,"I've created a wiki page with more details:
https://github.com/MaslowCNC/Firmware/wiki/Running-the-firmware-in-a-simulator",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368283325,,Very nice!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/idoc,4,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368283544,,"Thanks! If you try it out, please let me know how it went.
And then I'd love some help figuring out how why GC still won't talk to it :)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368283667,,"GC expects the target machjoine to reset when the connection is established n(see GC issue #638 MaslowCNC/GroundControl#638. If you like, I can show you the change I made to serialPortThread.py that made the Teensy3.5/3/6 work with GC...",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/idoc,6,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368284168,,"Ooh! I bet you that's exactly the problem. Yes, if there's an easy way to work around this, I'd love to give it a try.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368337778,,"Sorry for the delay, here's a copy of serialPortThread.py with the change (see line 106).
serialPortThread.py.zip
When I'm working with a Teensy, without this line GC shows 'Connected on port./.../...' but no more. With the line the normal sequence occurs.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/idoc,8,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368372788,,"Thanks! I think that helps.
GC now correctly complains that my Maslow needs calibration, so that's some improvement. I can even get GC to try to move the sled, but then the simulated Maslow gets stuck in an infinite loop, when GC send "" G91 G0 X-3.94"" . Let's see if I can put the debugger thing to use and find out why.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/idoc,9,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368376309,,"Ah! I think I understand what's going on. Tell me if this makes sense:
I moved runsOnATimer() into the main loop() function, as a workaround for the missing timer functionality. I figured it would still get called often enough for the simulator's needs. And that seemed OK, because I never got GC to work, so I never really tried processing G-code and moving the sled in the simulator.
When the G0 is being processed, loop() calls gcodeExecuteLoop(), which ends up calling singleAxisMove() in Motion.cpp. singleAxisMove() goes into a loop, waiting for the sled position to change, but that never happens, because now there's no timer calling runsOnATimer().
Did I get the flow right?
runsOnATimer() will get called occasionally in loop() when the sled isn't moving, because gcodeExecuteLoop() returns. But once Maslow expects the sled to move, gcodeExecuteLoop() won't return until motion is done.
Looks like I need to get that timer running.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368377388,,"Since much of the important code is scheduled by the timer, having it running would make the simulation much more useful...
I think that PRs #385 & #386 made the PWM portion of TimerOne unnecessary. If so, that could help simplify the task of getting the timer to run in simavr.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/idoc,11,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368382033,,"Hmm... I'll have to dig deeper into this tomorrow. Monday is big on boring status meetings, so hopefully I'll have a chance to try a few ideas :)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,406,2018-02-25T04:44:42Z,2018-02-27T18:45:02Z,2018-02-27T19:34:35Z,MERGED,True,822,31,11,https://github.com/idoc,Add simduino program for simulating and debugging Maslow,1,[],https://github.com/MaslowCNC/Firmware/pull/406,https://github.com/krkeegan,12,https://github.com/MaslowCNC/Firmware/pull/406#issuecomment-368998937,,"Sorry, struggling to keep up with all the activity.  @idoc I believe your summary is correct. If you want a function that is called frequently during the loop you probably want.
execSystemRealtime()
I believe this will get called way more frequently than the loopinterval, so maybe you also want to add a last ran variable and only run the routine if the elapsed time exceeds loopinterval?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,408,2018-02-27T20:36:59Z,2018-02-27T20:53:14Z,2018-03-07T03:10:33Z,MERGED,True,7,0,1,https://github.com/krkeegan,Setup Axes Again After Changing Chain Rotation Direction,1,[],https://github.com/MaslowCNC/Firmware/pull/408,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/408,Means we don't have to restart.,Means we don't have to restart.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,408,2018-02-27T20:36:59Z,2018-02-27T20:53:14Z,2018-03-07T03:10:33Z,MERGED,True,7,0,1,https://github.com/krkeegan,Setup Axes Again After Changing Chain Rotation Direction,1,[],https://github.com/MaslowCNC/Firmware/pull/408,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/408#issuecomment-369017899,Means we don't have to restart.,"Should be merged with
MaslowCNC/GroundControl#658
No version number change required.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,408,2018-02-27T20:36:59Z,2018-02-27T20:53:14Z,2018-03-07T03:10:33Z,MERGED,True,7,0,1,https://github.com/krkeegan,Setup Axes Again After Changing Chain Rotation Direction,1,[],https://github.com/MaslowCNC/Firmware/pull/408,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/408#issuecomment-369022044,Means we don't have to restart.,Looking good! I'm really glad we got this in today because that means 1.07 will include the no need to restart! üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/409,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370621904,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","Oops missed a hardcoded feed rate.
To be clear, this just changes the default value.  Users can still manually change this back using the $$ settings.
I don't think the option has been incorporated in GC yet.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370622000,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","if it's starting the next movement before we are at the location, lowering the
speed isn't the answer, we need to figure out why the machine thinks that the G0
has completed before it's at the final location.

I think this is the wrong fix (we may still want to do it, but not for this
reason)",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370627150,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","There is no check that we reached the end of the G0.  Each distance step happens in a fixed period of time, if that distance is greater than what can be achieved (exceeds the motor's max feed) then it won't make the end of the line before moving to the next command.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370642547,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","On Tue, 6 Mar 2018, Kevin Robert Keegan wrote:
 There is no check that we reached the end of the G0.  Each distance step happens in a fixed period of time, if that distance is greater than what can be achieved (exceeds the motor's max feed) then it won't make the end of the line before moving to the next command.
That's a flaw, we should only consider g0 finished when we are at the
destination, no matter how long it takes.

This is why we have had the recurring problems with Z moves not finishing before
the maslow takes off.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/krkeegan,6,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370870342,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","Would this ""check"" that we have reached the end point of a G0 command only apply to G0 commands?
We can't really do this with other commands, otherwise the machine would stutter a lot.
Personally, I would prefer to get the max feed rate dialed in correctly, even if we fix this for G0 commands, a G1 command could still request a feed rate too high and the same z-axis problem would occur.   This is in part why the maxfeed is a user-definable setting.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370875193,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","I agree that this is a stop gap, we should really figure out why the max feedrate is lower now. The goal here is just to make 1.09 a stable release to work from.
I agree with @davidelang that there should be a warning issued if a move completes and we are still far from the target location and I also agree with @krkeegan that if we add a pause at the end of every move we will see very jerky behavior and that having the max feedrate dialed in is the way to go. We actually had that check at one point and it did result in jerky behavior.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,8,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370939074,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","On Tue, 6 Mar 2018, Kevin Robert Keegan wrote:
 Would this ""check"" that we have reached the end point of a G0 command only apply to G0 commands?

 We can't really do this with other commands, otherwise the machine would stutter a lot.
we had better do it on the other commands, if you tell it to cut from 0,0 to
100,100 and it is moving slow and starts executing the next command before it
gets to 100,100 you ruin the part.

If we are going to do that, then we need to stop if we fall behind, not just
warn about it.
 Personally, I would prefer to get the max feed rate dialed in correctly, even
 if we fix this for G0 commands, a G1 command could still request a feed rate
 too high and the same z-axis problem would occur.  This is in part why the
 maxfeed is a user-definable setting.
the max rate the machine can move is going to depend on where you are on the
workpiece, what sprockets you have, what motors you have, how heavy the sled is,
and probably some other things.

The max feed rate should not have to be set so the 'right' value to make
accurate cuts.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,9,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370939667,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","to be clear, I'm not suggesting that we pause at the end of each cut, but rather
that the cut isn't considered complete until you are at the target location. As
soon as you get there the next cut can start with no delay.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/krkeegan,10,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370949314,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","I understand the thought process, but I still don't think this is the right approach.  A few of my arguments:

This is a significant departure from our current structure and would require a significant rework.
Acceleration/deceleration isn't instantaneous. As the machine approaches a destination point it will start to slow down, not as fancy as the GRBL code, but this happens naturally because the error approaches 0 so the PID output approaches 0.  If we try to hit the end point, stuttering cannot be avoided.
The arduino is slow.   To do this properly, it would have to be handled in the interrupt loop, which is already rather slow.
Doing this doesn't do anything to save your part.  If your feed rate is too high horizontal cuts will end up with a curved cut, the failure to keep up isn't tied to both motors, generally only the left or the right motor will not keep up.  Making sure the final stop point is hit before moving on to the next cut won't fix this, you will still have a curved line.
GRBL works the same way our current code works.
More sophisticated machines also work the way our current code works.  The laser cutter here at the office will start to round off corners if the feedrate is increased too much and you don't compensate in your g-code.  If it did what has been proposed, as the feedrate was increased it would overcut each corner not under.  We have a water jet that does it's own compensation, but if you turn it off, it will also undercut.

I also disagree that the max feed rate shouldn't have to be set by the user.  Particularly if we add warnings that the machine isn't keeping up.  This isn't a plug and play device, and making it so would restrict more advanced uses and would increase the complexity and resulting bugs in the code.

the max rate the machine can move is going to depend on where you are on the workpiece,

Here lies dragons, if you are opening the possibility to a dynamic feed rate, we need a lot more work and a much more complicated controller.  I messed with this for a while on G0 moves and it gets messy fast, at minimum you need yet another PID controller to handle the dynamic decrease and increase.
The only possible design I can see for this is define some circle of acceptable error as ""hitting the end point.""  This would decrease the stuttering, but now this opens up yet another user definable setting a faster moving machine would need a larger circle, a slower machine a smaller one.  This setting is less measurable and would be more confusing for a user to enter.  And still doesn't solve issue 4 above.",True,"{'HEART': ['https://github.com/blurfl'], 'THUMBS_UP': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,11,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370954167,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","On Tue, 6 Mar 2018, Kevin Robert Keegan wrote:
 1. This is a significant departure from our current structure and would require a significant rework.
if so, our current structure is wrong and needs to be fixed
 2. Acceleration/deceleration isn't instantaneous. As the machine approaches a
 destination point it will start to slow down,
I don't believe this is the case. the desired location is where you should be
along the cut, not the destination, and it's only plotting a few ms ahead of
where it is. The PID loop has no way of knowing if it's 1mm away from the end of
the cut or 3000mm away from the end of the cut
  not as fancy as the GRBL code,
 but this happens naturally because the error approaches 0 so the PID output
 approaches 0.  If we try to hit the end point, stuttering cannot be avoided.
this is what dead zones are for
 3. The arduino is slow.   To do this properly, it would have to be handled in the interrupt loop, which is already rather slow.
This should be a cheap test to make.
 4. Doing this doesn't do anything to save your part.  If your feed rate is too
 high horizontal cuts will end up with a curved cut, the failure to keep up
 isn't tied to both motors, generally only the left or the right motor will not
 keep up.  Making sure the final stop point is hit before moving on to the next
 cut won't fix this, you will still have a curved line.
a coordinated move should slow down the other axis to stay synced with the one
that can't move fast enough.
 5. GRBL works the same way our current code works.
no, grbl doesn't have PID loops that have adjust to the position, it executes N
steps at M frequency, a very different approach.
 6. More sophisticated machines also work the way our current code works.  The
 laser cutter here at the office will start to round off corners if the
 feedrate is increased too much and you don't compensate in your g-code.  If it
 did what has been proposed, as the feedrate was increased it would overcut
 each corner not under.  We have a water jet that does it's own compensation,
 but if you turn it off, it will also undercut.
and people are upset about this.
 I also disagree that the max feed rate shouldn't have to be set by the user.
 Particularly if we add warnings that the machine isn't keeping up.  This isn't
 a plug and play device, and making it so would restrict more advanced uses and
 would increase the complexity and resulting bugs in the code.
if parts are going to be cut wrong because we ask to exceed our mechanical
limits, we need to make exceeding the limits a fatal flaw rather then cutting
wrong.
> the max rate the machine can move is going to depend on where you are on the
> workpiece,

 Here lies dragons, if you are opening the possibility to a dynamic feed rate,
 we need a lot more work and a much more complicated controller.  I messed with
 this for a while on G0 moves and it gets messy fast, at minimum you need yet
 another PID controller to handle the dynamic decrease and increase.
no. This would be the case if we were trying to calculate what the max
mechanical speed is, but we aren't

We are just trying to identify when we are exceeding the limit (and in an ideal
world, slow other axis down )
‚Ä¶
 The only possible design I can see for this is define some circle of
 acceptable error as ""hitting the end point.""  This would decrease the
 stuttering, but now this opens up yet another user definable setting a faster
 moving machine would need a larger circle, a slower machine a smaller one.
 This setting is less measurable and would be more confusing for a user to
 enter.  And still doesn't solve issue 4 above.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370954695,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","we should really figure out why the max feedrate is lower now

I'm not sure that is so. I recently looked at a couple of previous firmware versions, and v0.68 limited the feed rate 635, v0.76 limited it to 900.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/krkeegan,13,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370985302,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","This is a significant departure from our current structure and would require a significant rework.
if so, our current structure is wrong and needs to be fixed



This is a an overly idealistic and simplistic statement.  We have finite resources and time.  Spending our resources to redesign our code to this degree has a cost in the form of delayed improvements and fixes for other features.

this is what dead zones are for

I assume this is what I called a circle of error.



Doing this doesn't do anything to save your part.  If your feed rate is too
high horizontal cuts will end up with a curved cut, the failure to keep up
isn't tied to both motors, generally only the left or the right motor will not
keep up.  Making sure the final stop point is hit before moving on to the next
cut won't fix this, you will still have a curved line.
a coordinated move should slow down the other axis to stay synced with the one that can't move fast enough.



OK, it sounds like my assumption is correct, you are not just referring to waiting for the final point to be reached before moving onto the next line, but rather describing a dynamic calculation for each step in the cut.  Again, this is more complicated than your description.
Isn't this idea just a method of finding the max feed rate for each segment?  Why wouldn't setting the max feed rate be a better more robust solution, since you only have to do it once?  We can figure out where the feed rate is the most restricted, I think I made a chart at one point that would probably identify this (I think it is the lower corners moving straight up).  Tell users to test their machine in that region and adjust until no warnings are received.
I still strongly believe dynamic adjusting is a bad idea.  It is accompanied by all sorts of dials and knobs to adjust that add complexity.  How large should the dead zone be? How much should we decelerate when the dead zone is exceeded? How quickly should we do this?  Do we need to ignore this for some period when starting from a standstill? These things are no more likely to be consistent across machines than the max feed rate is.
Moreover, if max feed is wrong, every segment that exceeds this rate will have some error before the dead zone is hit and we can properly decelerate to catch up.  Whereas if we dial in max feed correctly, we won't have this error.  Plus if we ever get to a place where the firmware has a concept of alarms, we could stop the cut when we start to see an error, allowing the user to fix the feed rate error and resume or restart the cut.
I created a crude system to dynamically adjust the max feedrate for only G0 moves a long time ago with the thought that the max feed is about 30% higher in the center than on the edges.  Increasing the feedrate of non-cutting G0 moves could cut down on the total manufacturing time for a part.  Ultimately I threw this out as buggy, bug prone, too complex and not producing a lot of gain.  I could be convinced that this is a good idea for G0 moves, but I don't think this should even remotely be a priority.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,14,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-370990663,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","On Wed, 7 Mar 2018, Kevin Robert Keegan wrote:
>> 1. This is a significant departure from our current structure and would require a significant rework.
> if so, our current structure is wrong and needs to be fixed

 This is a an overly idealistic and simplistic statement.  We have finite
 resources and time.  Spending our resources to redesign our code to this
 degree has a cost in the form of delayed improvements and fixes for other
 features.
and how much time have we lost playing wack-a-mole each time we have a problem
where the machine starts moving before the Z axis moves far enough and similar
problems?
> this is what dead zones are for

 I assume this is what I called a circle of error.
yes
>> 4. Doing this doesn't do anything to save your part.  If your feed rate is too
>> high horizontal cuts will end up with a curved cut, the failure to keep up
>> isn't tied to both motors, generally only the left or the right motor will not
>> keep up.  Making sure the final stop point is hit before moving on to the next
>> cut won't fix this, you will still have a curved line.
> a coordinated move should slow down the other axis to stay synced with the
> one that can't move fast enough.
 OK, it sounds like my assumption is correct, you are not just referring to
 waiting for the final point to be reached before moving onto the next line,
 but rather describing a dynamic calculation for each step in the cut.  Again,
 this is more complicated than your description.
that's the ideal situation, but at least waiting until the prior move has
finished before starting the next one would be better than the current situation
 Isn't this idea just a method of finding the max feed rate for each segment?
 Why wouldn't setting the max feed rate be a better more robust solution, since
 you only have to do it once?  We can figure out where the feed rate is the
 most restricted, I think I made a chart at one point that would probably
 identify this (I think it is the lower corners moving straight up).  Tell
 users to test their machine in that region and adjust until no warnings are
 received.
the 'worst area' is going to depend on a number of different things, for one
machine it will be in one area, for another machine it will be a different area
that hits the machine limits.
 I still strongly believe dynamic adjusting is a bad idea.  It is accompanied
 by all sorts of dials and knobs to adjust that add complexity.  How large
 should the dead zone be? How much should we decelerate when the dead zone is
 exceeded? How quickly should we do this?  Do we need to ignore this for some
 period when starting from a standstill? These things are no more likely to be
 consistent across machines than the max feed rate is.
we are eventually going to need to have accleration settings, and that will
answer the question about how to react when we overshoot. Until then we handle
that just like we 'handle' falling behind to start.
 Moreover, if max feed is wrong, every segment that exceeds this rate will have
 some error before the dead zone is hit and we can properly decelerate to catch
 up.
remember, we are correcting our error every 50ms or so. this machine doesn't
move very far before we start noticing the error.
  Whereas if we dial in max feed correctly, we won't have this error.
 Plus if we ever get to a place where the firmware has a concept of alarms, we
 could stop the cut when we start to see an error, allowing the user to fix the
 feed rate error and resume or restart the cut.
we can't set the overspeed to be an alarm until we have acceleration settings,
otherwise the machine will stop all the time.
 I created a crude system to dynamically adjust the max feedrate for only G0
 moves a long time ago with the thought that the max feed is about 30% higher
 in the center than on the edges.  Increasing the feedrate of non-cutting G0
 moves could cut down on the total manufacturing time for a part.  Ultimately I
 threw this out as buggy, bug prone, too complex and not producing a lot of
 gain.  I could be convinced that this is a good idea for G0 moves, but I don't
 think this should even remotely be a priority.
trying to model the machine and say 'we can go 30% faster here than there' is
going to be horribly buggy and error prone.

however if we detect overspeed and slow other axis down to match our max effort
axis, we don't have a bunch of fragile rules, we just adapt to the real-world
conditions.

the overspeed alert catches when we can't keep up, so if we set that condition
to reduce our feed rate temporarily by a few percenta (repeatedly if needed) and
then allow it to creep back up once our max effort drops below some threshold,
it's not that fragile a thing.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/blurfl,15,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-371005920,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","@krkeegan, some further thoughts...

it might be useful for the overspeed message to indicate which axis is calling for the overspeed.
Though the message is generated in Motor::write(), that gets its values from Motor::additiveWrite(), which bumps up the previous speed by the amount requested by the PID. Is there anything interesting about the incremental amount being requested?
_PIDController and MotorGearboxEncoder are both aware of outputLimits (+-255), and  PID::Compute() seems to impose those as limits to the additional speed that can be requested.
The only check that the resulting speed (previous plus increment) command sent to Motor::Write() is  that Motor::write clamps that to 255 if it is beyond the physical limit (PWM duty cycle).
There is no feedback up the chain that the limit has been reached. Motor::additiveWrite() is aware of the previous speed and , so additiveWrite() seems a logical source of correction, maybe an axisOverspeed flag for the coordinatedMove() routine?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/krkeegan,16,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-371008427,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","it might be useful for the overspeed message to indicate which axis is calling for the overspeed.

This can be done, but at the level I put this in, the code has no human conveyable notion of which motor it is talking too. It could be added if necessary, but I kinda felt like it wasn't needed as in my testing at least is seems pretty clear which one is the issue.

Though the message is generated in Motor::write(), that gets its values from Motor::additiveWrite(), which bumps up the previous speed by the amount requested by the PID. Is there anything interesting about the incremental amount being requested?

I don't think so.

_PIDController and MotorGearboxEncoder are both aware of outputLimits (+-255), and PID::Compute() seems to impose those as limits to the additional speed that can be requested.

Yeah, we never get anywhere near that.  It seemed like a logical restriction to leave in place, but since the velocity controller is additive now, the numbers it outputs are much lower than this.  But its output is added to the prior velocity, so we can still see numbers in excess of 255 where the test is.

The only check that the resulting speed (previous plus increment) command sent to Motor::Write() is that Motor::write clamps that to 255 if it is beyond the physical limit (PWM duty cycle).

yes.

There is no feedback up the chain that the limit has been reached. Motor::additiveWrite() is aware of the previous speed and , so additiveWrite() seems a logical source of correction, maybe an axisOverspeed flag for the coordinatedMove() routine?

I think in the long run, the right course of action is to alarm and stop the machine possibly a warning at some lower time threshold before stopping.  But that requires a bit more work including solving #407 and #351.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,17,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-371009119,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","On Wed, 7 Mar 2018, Scott Smith wrote:
 -  it might be useful for the overspeed message to indicate which axis is calling for the overspeed.
I agree
 - Though the message is generated in Motor::write(), that gets its values from
 Motor::additiveWrite(), which bumps up the previous speed by the amount
 requested by the PID. Is there anything interesting about the incremental
 amount being requested?
since we only alert after being at the max multiple times, probably not. but
there is a chance of the rate being different for the 'axis not connected' vs
""can't keep up""
 - _PIDController and MotorGearboxEncoder are both aware of outputLimits
 (+-255), and PID::Compute() seems to impose those as limits to the
 _additional_ speed that can be requested.
This additional speed is the acceleration limit, that should be a config item
(but it should be in some real world limits, not just a value here, but that
would not be thing to use in the short term)
 - The only check that the resulting speed (previous plus increment) command
 sent to Motor::Write() is that Motor::write clamps that to 255 if it is beyond
 the physical limit (PWM duty cycle).
correct.
 - There is no feedback up the chain that the limit has been reached.
 Motor::additiveWrite() is aware of the previous speed
that feedback is what we are adding.

The theory is that (especially if acceleration limits exist), we should never be
in a situation where we are at max speed and asking to go faster. When we hit
that situation, we know the machine cannot keep up.
‚Ä¶
 and , so additiveWrite() seems a logical source of correction, maybe an
 axisOverspeed flag for the coordinatedMove() routine?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/blurfl,18,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-371015058,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","@davidelang ""that feedback is what we are adding.""

Where are you adding this?
Edit - I see, the feedback is all the way to the operator. Now I follow.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,409,2018-03-06T00:32:38Z,2018-03-06T18:12:37Z,2018-03-07T18:22:56Z,MERGED,True,2,2,2,https://github.com/BarbourSmith,Lower the max feedrate ,3,[],https://github.com/MaslowCNC/Firmware/pull/409,https://github.com/davidelang,19,https://github.com/MaslowCNC/Firmware/pull/409#issuecomment-371234194,"It seems like we may have an issue where the motors can't keep up with the maximum feed rate under some circumstances.
We've seen several reports in the forums, and I just encountered one where during the calibration process the machine started to lower the z-axis before arriving at it's destination because it couldn't keep up.
This PR lowers the maximum feed rate to 700mm/min and sets the G0 rapid moves to use the same value as the maximum feed rate in settings.","the overspeed warning is the feedback
‚Ä¶
On Tue, 6 Mar 2018, Scott Smith wrote:
 Date: Tue, 06 Mar 2018 19:58:21 -0800
 From: Scott Smith ***@***.***>
 Reply-To: MaslowCNC/Firmware
     <reply+0021b24fd4d54e60ab090043ca31abb08976ef128942fafc92cf0000000116b7255
     ***@***.***>
 To: MaslowCNC/Firmware ***@***.***>
 Cc: David Lang ***@***.***>, Mention ***@***.***>
 Subject: Re: [MaslowCNC/Firmware] Lower the max feedrate (#409)

> @davidelang ""that feedback is what we are adding.""

 Where are you adding this?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,410,2018-03-07T02:55:48Z,2018-03-07T19:02:56Z,2018-03-07T19:02:56Z,MERGED,True,27,0,5,https://github.com/krkeegan,Over Speed Warning,3,[],https://github.com/MaslowCNC/Firmware/pull/410,https://github.com/krkeegan,1,https://github.com/MaslowCNC/Firmware/pull/410,Outputs a simple warning if the motors appear to be disconnected or unable to keep up.,Outputs a simple warning if the motors appear to be disconnected or unable to keep up.,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/411,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/krkeegan,2,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371293492,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","Interesting, if I leave the max feed at 1000 I see them a lot in the corners, with 700 I rarely if ever see them.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371294011,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","Bar, what are your machine dimensions (especially y-offset)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/krkeegan,4,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371388709,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close",I wonder if we lost speed when we changed how the pwm pins are setup.  This would kind of explain why I predominantly see over speed warnings with only one of the motors,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371401788,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","Not much has changed in motor.cpp besides that, you might be able to swap that file out to test...",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371405758,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close",Which motor gives the most warnings?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371581454,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","@davidelang I'm using the first version of the default frame that I built which has the low y-offset (about 12""), but I was getting warnings even in the middle of the sheet.
@krkeegan I think the idea that we may have lost some power in re-configuring the motor control pins is a reasonable hypothesis. The reason I lowered the max feed rate is that I was running into issues during the calibration process where the machine hadn't finished moving before starting to cut the indicator lines which wasn't behavior I'd seen before which is why I think something changed.
It seems like maybe we aren't loosing speed when running under limited load, but when the motors are under strain we have less power?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/krkeegan,8,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371582559,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","My left motor, I think I am on the beta board?  I can't remember, but that motor used to sound different.
In my case I see a lower speed when the sled is at the bottom right and I attempt to move directly right.  It almost looks like there isn't enough weight on the left motor at that point.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,9,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371588318,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","The change in sound for the left motor would be due to that motor no longer running off the TimerOne PWM. I've been reading your excellent wiki article about PID tuning. Is this something that the B13 command would help test?
I've also been reading about (big) calculation slowdown issues in stdlib math functions when a transcendental function approaches zero. No idea whether that has any bearing on our environment, though.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/krkeegan,10,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371595466,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","I have no idea about anything transcendental and math.
Wasn't the change in sound accomplished by pwm'ing one of the direction pins?  I thought one of the concerns with that was that during the ""off phase"" of the pwm, the motor may be actively braking rather than coasting?
I don't think B13 would be much help, I think all you are going to see is that a higher voltage is required to achieve the same speed.  I think B16 the voltage test may be more of what we want.  Something like
B16 L1 S220 F255
Would test the left motor at specific voltages starting at 220 and going up by 1 every 200 ms until it hits 255.  At each step, the serial log will report the resulting rpms of the left motor.  If you placed the sled in about the same position and tested this with and without the PWM pin swap, this may identify a discrepancy.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,11,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371610049,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","The trig functions were the focus of the issue with stdlib math.
The dynamic braking could occur any time both motor leads are at the same voltage, so that shouldn‚Äôt be different when the PEM signal is applied to one of the motor leads.
The B16 test sounds a good one, another would be to start from 0,0 and apply a ‚Äògo to xx‚Äô ( one of the B codes  like the ‚Äúextend chains ‚Äú code uses , can‚Äôt look it up from here)  and measure the time it took to travel that distance.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371932881,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","I've tested the current firmware against v1.04 which was the last before the PWM change. I used:
G91
G21
F1000
B09 L1000
G90
This moves the left motor a distance of 1000mm at system top speed, in this case governed within the B09 code to 800mm/min. Both firmware versions take 75 seconds to complete this, within a tenth of a second or so. The PWM is running at ~34% (1.7V) due to the governor in the B09 code.  With the governor in B09 removed, the run lasts 27 seconds in both cases, the PWM approaching 100%.
From this, it looks to me like the left motor runs at the same rate with the current PWM pin approach. Admitted, this was run unloaded, with no weight on the chain. I don't think that matters in this case.
A side note, it reminded me of the rattling that the left motor did when controlled by the TimerOne PWM...",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/krkeegan,13,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371934058,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close",Didn't 1.04 introduce the swap in the pins so that it avoided TimerOne?  Or am I reading our release notes wrong?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,14,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371938476,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","You're right. V1.03 was the last before the changes. I just ran the same tests against that, the timings remain the same as above, though, bot governed and ungoverned.",True,"{'THUMBS_UP': ['https://github.com/BarbourSmith', 'https://github.com/krkeegan']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/BarbourSmith,15,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371944687,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","Excellent test!
I think we should run the test with a loaded with weight on the chains, and if we see the same results lets put it to bed",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/krkeegan,16,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371951038,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close",I honestly don't know where our speed went then.  Maybe the motors are ageing?  Is that a thing?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,17,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371951948,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","where our speed went then. Maybe the motors are ageing? Is that a thing?

Damage to the h-bridge is a thing...",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,18,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371978605,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","I think the sequence I described might show a damaged h-bridge by a difference in runtime between the two motors, the damaged one taking longer to complete.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/blurfl,19,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-371983880,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close",I've repeated the tests with a 26 pound sled attached. The timings are the same as in the unweighted tests.,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,411,2018-03-07T19:46:54Z,2018-03-07T19:47:09Z,2018-03-12T17:00:52Z,MERGED,True,0,27,5,https://github.com/BarbourSmith,"Revert ""Over Speed Warning""",1,[],https://github.com/MaslowCNC/Firmware/pull/411,https://github.com/BarbourSmith,20,https://github.com/MaslowCNC/Firmware/pull/411#issuecomment-372384582,"Reverts #410
I'm getting warnings pretty much all the time and I think they are somehow leading to buffer overflows. I'm going to take these back out for now and re-open the original pull request which I think I was too hasty to close","I think we're save to say that I just stated upping the max feed rate too much. I feel good about the current system where we have a probably pretty conservative setting as the default, but then if we want to go faster we can change the setting.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,412,2018-03-17T17:33:06Z,2018-03-19T19:44:05Z,2018-03-19T21:22:41Z,MERGED,True,49,37,11,https://github.com/aprospero,gcc warnings,8,[],https://github.com/MaslowCNC/Firmware/pull/412,https://github.com/aprospero,1,https://github.com/MaslowCNC/Firmware/pull/412,"Abstract
Many Arduino programs aren't very complex and have no requirements regarding code maintenance. Consequently the Arduino IDE doesn't make much hassle about compiler warnings. In fact it suppresses those by default.
Nevertheless, keeping an eye on compiler warnings have been proven to be good coding habit if it comes to more complex programs - which IMHO Maslow firmware is.
Reason
If a codebase produces too many warnings it gets more likely that possibly important warnings could be overlooked. This pull request aims to clean up the warning logs so that obvious coding problems can be easily detected.
Solution
The main warning classes were unsigned/signed comparisons without cast, unused local variables, unused function parameters and missing function return statements.
Most of these are simple no-brainers. When data types were changed, the runtime value range was taken into account. Also return values were checked for consistency before adding them to the code.
What's next
It is obvious that other warnings will pop up again if future contributers are not aware of the issue. This is maybe a too optimistic wish but I'd like to encourage everyone to deal with the gcc compiler and its output. Therefore we have to make it accessible in the first place.
How to activate gcc Output
To activate warning output Arduino IDE users need to activate compiler output in the preferences dialog. Additionally Arduino IDE needs to tell gcc to generate warning messages. This is done in the Arduino IDE's preferences.txt file - you can get there via the Preferences Dialog, at the bottom is a link to the file. Edit the line ""compiler.warning_level=none"" to ""compiler.warning_level=all""","Abstract
Many Arduino programs aren't very complex and have no requirements regarding code maintenance. Consequently the Arduino IDE doesn't make much hassle about compiler warnings. In fact it suppresses those by default.
Nevertheless, keeping an eye on compiler warnings have been proven to be good coding habit if it comes to more complex programs - which IMHO Maslow firmware is.
Reason
If a codebase produces too many warnings it gets more likely that possibly important warnings could be overlooked. This pull request aims to clean up the warning logs so that obvious coding problems can be easily detected.
Solution
The main warning classes were unsigned/signed comparisons without cast, unused local variables, unused function parameters and missing function return statements.
Most of these are simple no-brainers. When data types were changed, the runtime value range was taken into account. Also return values were checked for consistency before adding them to the code.
What's next
It is obvious that other warnings will pop up again if future contributers are not aware of the issue. This is maybe a too optimistic wish but I'd like to encourage everyone to deal with the gcc compiler and its output. Therefore we have to make it accessible in the first place.
How to activate gcc Output
To activate warning output Arduino IDE users need to activate compiler output in the preferences dialog. Additionally Arduino IDE needs to tell gcc to generate warning messages. This is done in the Arduino IDE's preferences.txt file - you can get there via the Preferences Dialog, at the bottom is a link to the file. Edit the line ""compiler.warning_level=none"" to ""compiler.warning_level=all""",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,412,2018-03-17T17:33:06Z,2018-03-19T19:44:05Z,2018-03-19T21:22:41Z,MERGED,True,49,37,11,https://github.com/aprospero,gcc warnings,8,[],https://github.com/MaslowCNC/Firmware/pull/412,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/412#issuecomment-374298740,"Abstract
Many Arduino programs aren't very complex and have no requirements regarding code maintenance. Consequently the Arduino IDE doesn't make much hassle about compiler warnings. In fact it suppresses those by default.
Nevertheless, keeping an eye on compiler warnings have been proven to be good coding habit if it comes to more complex programs - which IMHO Maslow firmware is.
Reason
If a codebase produces too many warnings it gets more likely that possibly important warnings could be overlooked. This pull request aims to clean up the warning logs so that obvious coding problems can be easily detected.
Solution
The main warning classes were unsigned/signed comparisons without cast, unused local variables, unused function parameters and missing function return statements.
Most of these are simple no-brainers. When data types were changed, the runtime value range was taken into account. Also return values were checked for consistency before adding them to the code.
What's next
It is obvious that other warnings will pop up again if future contributers are not aware of the issue. This is maybe a too optimistic wish but I'd like to encourage everyone to deal with the gcc compiler and its output. Therefore we have to make it accessible in the first place.
How to activate gcc Output
To activate warning output Arduino IDE users need to activate compiler output in the preferences dialog. Additionally Arduino IDE needs to tell gcc to generate warning messages. This is done in the Arduino IDE's preferences.txt file - you can get there via the Preferences Dialog, at the bottom is a link to the file. Edit the line ""compiler.warning_level=none"" to ""compiler.warning_level=all""","This is a gorgeous pull request. Well done.
From reading through the code it looks like all of the changes are well executed and the type of things that keeps the repository clean and maintainable.
I agree that encouraging at least the development community to display gcc compiler warnings is a good idea and I will turn them on. What about a comment at the top of the .ino file? That way the text will be visible whenever the IDE is open.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,412,2018-03-17T17:33:06Z,2018-03-19T19:44:05Z,2018-03-19T21:22:41Z,MERGED,True,49,37,11,https://github.com/aprospero,gcc warnings,8,[],https://github.com/MaslowCNC/Firmware/pull/412,https://github.com/aprospero,3,https://github.com/MaslowCNC/Firmware/pull/412#issuecomment-374301893,"Abstract
Many Arduino programs aren't very complex and have no requirements regarding code maintenance. Consequently the Arduino IDE doesn't make much hassle about compiler warnings. In fact it suppresses those by default.
Nevertheless, keeping an eye on compiler warnings have been proven to be good coding habit if it comes to more complex programs - which IMHO Maslow firmware is.
Reason
If a codebase produces too many warnings it gets more likely that possibly important warnings could be overlooked. This pull request aims to clean up the warning logs so that obvious coding problems can be easily detected.
Solution
The main warning classes were unsigned/signed comparisons without cast, unused local variables, unused function parameters and missing function return statements.
Most of these are simple no-brainers. When data types were changed, the runtime value range was taken into account. Also return values were checked for consistency before adding them to the code.
What's next
It is obvious that other warnings will pop up again if future contributers are not aware of the issue. This is maybe a too optimistic wish but I'd like to encourage everyone to deal with the gcc compiler and its output. Therefore we have to make it accessible in the first place.
How to activate gcc Output
To activate warning output Arduino IDE users need to activate compiler output in the preferences dialog. Additionally Arduino IDE needs to tell gcc to generate warning messages. This is done in the Arduino IDE's preferences.txt file - you can get there via the Preferences Dialog, at the bottom is a link to the file. Edit the line ""compiler.warning_level=none"" to ""compiler.warning_level=all""","To put a comment at the top of the .ino is a good idea! I already asked myself how awareness could be raised since pull requests aren't always contributers everyday lecture :).
I'll add another commit with the comment.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,412,2018-03-17T17:33:06Z,2018-03-19T19:44:05Z,2018-03-19T21:22:41Z,MERGED,True,49,37,11,https://github.com/aprospero,gcc warnings,8,[],https://github.com/MaslowCNC/Firmware/pull/412,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/412#issuecomment-374344871,"Abstract
Many Arduino programs aren't very complex and have no requirements regarding code maintenance. Consequently the Arduino IDE doesn't make much hassle about compiler warnings. In fact it suppresses those by default.
Nevertheless, keeping an eye on compiler warnings have been proven to be good coding habit if it comes to more complex programs - which IMHO Maslow firmware is.
Reason
If a codebase produces too many warnings it gets more likely that possibly important warnings could be overlooked. This pull request aims to clean up the warning logs so that obvious coding problems can be easily detected.
Solution
The main warning classes were unsigned/signed comparisons without cast, unused local variables, unused function parameters and missing function return statements.
Most of these are simple no-brainers. When data types were changed, the runtime value range was taken into account. Also return values were checked for consistency before adding them to the code.
What's next
It is obvious that other warnings will pop up again if future contributers are not aware of the issue. This is maybe a too optimistic wish but I'd like to encourage everyone to deal with the gcc compiler and its output. Therefore we have to make it accessible in the first place.
How to activate gcc Output
To activate warning output Arduino IDE users need to activate compiler output in the preferences dialog. Additionally Arduino IDE needs to tell gcc to generate warning messages. This is done in the Arduino IDE's preferences.txt file - you can get there via the Preferences Dialog, at the bottom is a link to the file. Edit the line ""compiler.warning_level=none"" to ""compiler.warning_level=all""","One more option could be to check for compiler warnings in the travis-ci tests and that way the tests could tell us if we had anything uncaught...or maybe that's going too far.
I've got my warnings turned on now and everything tests smoothly. üëç üëç
Again, what a beautiful pull request. Thank you.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,413,2018-03-22T01:23:58Z,2018-03-22T03:07:38Z,2018-03-22T16:46:53Z,MERGED,True,1,1,1,https://github.com/aprospero,gcc warnings Part II,1,[],https://github.com/MaslowCNC/Firmware/pull/413,https://github.com/aprospero,1,https://github.com/MaslowCNC/Firmware/pull/413,"Hmmm,
maybe I was a bit hasty immediately deleting the last pull requests branch.
I had another thought about your proposal to include the warnings into the Travis build. You're right, it would be a good move. So I had a look at it. Travis just starts a platformIO build and I haven't been in touch with that yet. But on a second glance the next step seems obvious.
--- platformio.ini      2018-03-22 01:35:44.031037400 +0100
+++ platformio.ini   2018-03-22 01:35:44.031037500 +0100
@@ -22,7 +22,7 @@
framework = arduino
extra_scripts = platformio/simavr_env.py
build_unflags = -Os
-build_flags = -g -O0 -DSIMAVR -DFAKE_SERVO
+build_flags = -Wall -g -O0 -DSIMAVR -DFAKE_SERVO
monitor_port = /tmp/simavr-uart0
I think it is important to deny Travis reporting success if warnings occur during build and  I don't know how or if I even manually have to get Travis to report popped up warnings. With a bit of luck this will work from scratch.","Hmmm,
maybe I was a bit hasty immediately deleting the last pull requests branch.
I had another thought about your proposal to include the warnings into the Travis build. You're right, it would be a good move. So I had a look at it. Travis just starts a platformIO build and I haven't been in touch with that yet. But on a second glance the next step seems obvious.
--- platformio.ini      2018-03-22 01:35:44.031037400 +0100
+++ platformio.ini   2018-03-22 01:35:44.031037500 +0100
@@ -22,7 +22,7 @@
framework = arduino
extra_scripts = platformio/simavr_env.py
build_unflags = -Os
-build_flags = -g -O0 -DSIMAVR -DFAKE_SERVO
+build_flags = -Wall -g -O0 -DSIMAVR -DFAKE_SERVO
monitor_port = /tmp/simavr-uart0
I think it is important to deny Travis reporting success if warnings occur during build and  I don't know how or if I even manually have to get Travis to report popped up warnings. With a bit of luck this will work from scratch.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,413,2018-03-22T01:23:58Z,2018-03-22T03:07:38Z,2018-03-22T16:46:53Z,MERGED,True,1,1,1,https://github.com/aprospero,gcc warnings Part II,1,[],https://github.com/MaslowCNC/Firmware/pull/413,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/413#issuecomment-375164710,"Hmmm,
maybe I was a bit hasty immediately deleting the last pull requests branch.
I had another thought about your proposal to include the warnings into the Travis build. You're right, it would be a good move. So I had a look at it. Travis just starts a platformIO build and I haven't been in touch with that yet. But on a second glance the next step seems obvious.
--- platformio.ini      2018-03-22 01:35:44.031037400 +0100
+++ platformio.ini   2018-03-22 01:35:44.031037500 +0100
@@ -22,7 +22,7 @@
framework = arduino
extra_scripts = platformio/simavr_env.py
build_unflags = -Os
-build_flags = -g -O0 -DSIMAVR -DFAKE_SERVO
+build_flags = -Wall -g -O0 -DSIMAVR -DFAKE_SERVO
monitor_port = /tmp/simavr-uart0
I think it is important to deny Travis reporting success if warnings occur during build and  I don't know how or if I even manually have to get Travis to report popped up warnings. With a bit of luck this will work from scratch.",Great! I'll merge this and let's find out üòÄ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,413,2018-03-22T01:23:58Z,2018-03-22T03:07:38Z,2018-03-22T16:46:53Z,MERGED,True,1,1,1,https://github.com/aprospero,gcc warnings Part II,1,[],https://github.com/MaslowCNC/Firmware/pull/413,https://github.com/aprospero,3,https://github.com/MaslowCNC/Firmware/pull/413#issuecomment-375290613,"Hmmm,
maybe I was a bit hasty immediately deleting the last pull requests branch.
I had another thought about your proposal to include the warnings into the Travis build. You're right, it would be a good move. So I had a look at it. Travis just starts a platformIO build and I haven't been in touch with that yet. But on a second glance the next step seems obvious.
--- platformio.ini      2018-03-22 01:35:44.031037400 +0100
+++ platformio.ini   2018-03-22 01:35:44.031037500 +0100
@@ -22,7 +22,7 @@
framework = arduino
extra_scripts = platformio/simavr_env.py
build_unflags = -Os
-build_flags = -g -O0 -DSIMAVR -DFAKE_SERVO
+build_flags = -Wall -g -O0 -DSIMAVR -DFAKE_SERVO
monitor_port = /tmp/simavr-uart0
I think it is important to deny Travis reporting success if warnings occur during build and  I don't know how or if I even manually have to get Travis to report popped up warnings. With a bit of luck this will work from scratch.","Hehe, learning by failure is the most effective strategy. :)
And it  fails... - a bit - sort of...
I do not claim to completely understand the reasons behind disabling compiler optimizations in platformio.ini ('build_unflags = -Os' and 'build_flags = ... -O0 ...'). It is generally not recommended to do this on Arduino but it may be useful when it comes to debugging on a simulation target. However, it (intentionally) generates a lot of compiler warnings in the target library layer - not in maslow code. That's exactly the opposite of what we wanted to achieve.
I'm not sure if this pull request is still worth a merge. With the warnings in code we haven't our hands on the original incentive breaks into pieces.
Nevertheless, when I was tinkering with Atom/PlatformIO another unused Variable popped up in conditionally compiled code. I fixed it in another commit. It's up to you to decide if this is still worth the merge.
Please let me know if you want to revert this pull request and/or if you want to merge the follow-up commit. I'll open up another pull request then.",True,{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,413,2018-03-22T01:23:58Z,2018-03-22T03:07:38Z,2018-03-22T16:46:53Z,MERGED,True,1,1,1,https://github.com/aprospero,gcc warnings Part II,1,[],https://github.com/MaslowCNC/Firmware/pull/413,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/413#issuecomment-375375867,"Hmmm,
maybe I was a bit hasty immediately deleting the last pull requests branch.
I had another thought about your proposal to include the warnings into the Travis build. You're right, it would be a good move. So I had a look at it. Travis just starts a platformIO build and I haven't been in touch with that yet. But on a second glance the next step seems obvious.
--- platformio.ini      2018-03-22 01:35:44.031037400 +0100
+++ platformio.ini   2018-03-22 01:35:44.031037500 +0100
@@ -22,7 +22,7 @@
framework = arduino
extra_scripts = platformio/simavr_env.py
build_unflags = -Os
-build_flags = -g -O0 -DSIMAVR -DFAKE_SERVO
+build_flags = -Wall -g -O0 -DSIMAVR -DFAKE_SERVO
monitor_port = /tmp/simavr-uart0
I think it is important to deny Travis reporting success if warnings occur during build and  I don't know how or if I even manually have to get Travis to report popped up warnings. With a bit of luck this will work from scratch.","Is there another way to learn? üòÄ
Let's fix the other unused variable for sure, no reason to leave that in there.
As far as this PR I vote that we revert it if we're not going to use the changes
Edit: Darn it...this is Bar...I'm just logged in as a different account üò¨",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,414,2018-03-22T18:54:46Z,2018-03-22T23:42:54Z,2018-03-22T23:42:54Z,MERGED,True,2,3,2,https://github.com/aprospero,gcc warnings Part III,2,[],https://github.com/MaslowCNC/Firmware/pull/414,https://github.com/aprospero,1,https://github.com/MaslowCNC/Firmware/pull/414,"The (hopefully) final pull request regarding this issue.
Platformio build does not benefit from activating compiler warnings, since it triggers a lot of them in board libray code by the disabled compiler optimization. So, switching them on is reverted.
Another unused Variable was found and deleted.
That's it, folks! :)","The (hopefully) final pull request regarding this issue.
Platformio build does not benefit from activating compiler warnings, since it triggers a lot of them in board libray code by the disabled compiler optimization. So, switching them on is reverted.
Another unused Variable was found and deleted.
That's it, folks! :)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,414,2018-03-22T18:54:46Z,2018-03-22T23:42:54Z,2018-03-22T23:42:54Z,MERGED,True,2,3,2,https://github.com/aprospero,gcc warnings Part III,2,[],https://github.com/MaslowCNC/Firmware/pull/414,https://github.com/aprospero,2,https://github.com/MaslowCNC/Firmware/pull/414#issuecomment-375422576,"The (hopefully) final pull request regarding this issue.
Platformio build does not benefit from activating compiler warnings, since it triggers a lot of them in board libray code by the disabled compiler optimization. So, switching them on is reverted.
Another unused Variable was found and deleted.
That's it, folks! :)","Haha,
I just realized that platform.io already compiles with warnings on. So it was right to revert the commit, even when I did it out of false assumptions.  Luck is with the oblivious üíÉ",True,{'HOORAY': ['https://github.com/MaslowCommunityGardenRobot']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,419,2018-03-28T23:10:12Z,2018-04-02T17:57:58Z,2018-06-18T17:51:03Z,MERGED,True,122,76,6,https://github.com/blurfl,Define aux pins at runtime,32,[],https://github.com/MaslowCNC/Firmware/pull/419,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/419,"This addresses issue #417 .
In order to make use of all the AUX pins including the ones that change between board versions, it seems like they should be defined at runtime based on the board version much as the INx, ENx and ENCODERxy pins are. This code does that, moving them into System.cpp to be defined with those others. I've also added comments to Probe.cpp and Spindle.cpp to tell where the active pins are assigned.
Note 1, I've left the debug print statements in until testers have evaluated the PR. The 'dummyPin' uses an AUX pin that differs between board versions. The v1.0 board should show '1', the v1.1 and v1.2 boards should show '60'.
Note 2, I've created a function to assign the AUX pins that are currently used to the variables that need them. The function takes all the AUX pins values as parameters. This was done to allow defining them without raising the compiler complaint about unused #defines. I feel having the AUX pins defined even if they are not currently used will make it easier for others to make use of them in the future.","This addresses issue #417 .
In order to make use of all the AUX pins including the ones that change between board versions, it seems like they should be defined at runtime based on the board version much as the INx, ENx and ENCODERxy pins are. This code does that, moving them into System.cpp to be defined with those others. I've also added comments to Probe.cpp and Spindle.cpp to tell where the active pins are assigned.
Note 1, I've left the debug print statements in until testers have evaluated the PR. The 'dummyPin' uses an AUX pin that differs between board versions. The v1.0 board should show '1', the v1.1 and v1.2 boards should show '60'.
Note 2, I've created a function to assign the AUX pins that are currently used to the variables that need them. The function takes all the AUX pins values as parameters. This was done to allow defining them without raising the compiler complaint about unused #defines. I feel having the AUX pins defined even if they are not currently used will make it easier for others to make use of them in the future.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,419,2018-03-28T23:10:12Z,2018-04-02T17:57:58Z,2018-06-18T17:51:03Z,MERGED,True,122,76,6,https://github.com/blurfl,Define aux pins at runtime,32,[],https://github.com/MaslowCNC/Firmware/pull/419,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/419#issuecomment-377073943,"This addresses issue #417 .
In order to make use of all the AUX pins including the ones that change between board versions, it seems like they should be defined at runtime based on the board version much as the INx, ENx and ENCODERxy pins are. This code does that, moving them into System.cpp to be defined with those others. I've also added comments to Probe.cpp and Spindle.cpp to tell where the active pins are assigned.
Note 1, I've left the debug print statements in until testers have evaluated the PR. The 'dummyPin' uses an AUX pin that differs between board versions. The v1.0 board should show '1', the v1.1 and v1.2 boards should show '60'.
Note 2, I've created a function to assign the AUX pins that are currently used to the variables that need them. The function takes all the AUX pins values as parameters. This was done to allow defining them without raising the compiler complaint about unused #defines. I feel having the AUX pins defined even if they are not currently used will make it easier for others to make use of them in the future.","Wonderful!!!
I will test this against all of the PCB versions tomorrow and report back what it reports back üòÄ",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,419,2018-03-28T23:10:12Z,2018-04-02T17:57:58Z,2018-06-18T17:51:03Z,MERGED,True,122,76,6,https://github.com/blurfl,Define aux pins at runtime,32,[],https://github.com/MaslowCNC/Firmware/pull/419,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/419#issuecomment-377599094,"This addresses issue #417 .
In order to make use of all the AUX pins including the ones that change between board versions, it seems like they should be defined at runtime based on the board version much as the INx, ENx and ENCODERxy pins are. This code does that, moving them into System.cpp to be defined with those others. I've also added comments to Probe.cpp and Spindle.cpp to tell where the active pins are assigned.
Note 1, I've left the debug print statements in until testers have evaluated the PR. The 'dummyPin' uses an AUX pin that differs between board versions. The v1.0 board should show '1', the v1.1 and v1.2 boards should show '60'.
Note 2, I've created a function to assign the AUX pins that are currently used to the variables that need them. The function takes all the AUX pins values as parameters. This was done to allow defining them without raising the compiler complaint about unused #defines. I feel having the AUX pins defined even if they are not currently used will make it easier for others to make use of them in the future.","I tested this against version 1.0, 1.1, and 1.2b of the hardware and they all look good.
I did not test every aux pin for every version because I didn't really have a good way to do that, but we can be sure that this will at the very least not break any existing functionality.
I have full compiler warnings turned on, and when compiling the firmware I did see a new warning:
Archiving built core (caching) in: C:\Users\Bar\AppData\Local\Temp\arduino_cache_196560\core\core_arduino_avr_mega_cpu_atmega2560_a94ab6aaf61dfb93b4a8079c694a14c2.a
sketch\System.cpp: In function 'setupAxes':

sketch\System.cpp:214:18: warning: 'AUX6' may be used uninitialized in this function [-Wmaybe-uninitialized]

   dummyPin = AUX6;

I think we're ready to merge. @blurfl do you want to take out some of the print statements before I do?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,419,2018-03-28T23:10:12Z,2018-04-02T17:57:58Z,2018-06-18T17:51:03Z,MERGED,True,122,76,6,https://github.com/blurfl,Define aux pins at runtime,32,[],https://github.com/MaslowCNC/Firmware/pull/419,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/419#issuecomment-377599475,"This addresses issue #417 .
In order to make use of all the AUX pins including the ones that change between board versions, it seems like they should be defined at runtime based on the board version much as the INx, ENx and ENCODERxy pins are. This code does that, moving them into System.cpp to be defined with those others. I've also added comments to Probe.cpp and Spindle.cpp to tell where the active pins are assigned.
Note 1, I've left the debug print statements in until testers have evaluated the PR. The 'dummyPin' uses an AUX pin that differs between board versions. The v1.0 board should show '1', the v1.1 and v1.2 boards should show '60'.
Note 2, I've created a function to assign the AUX pins that are currently used to the variables that need them. The function takes all the AUX pins values as parameters. This was done to allow defining them without raising the compiler complaint about unused #defines. I feel having the AUX pins defined even if they are not currently used will make it easier for others to make use of them in the future.","Yes, I'll take the print statements and the dummy pin out. Could it wait until tomorrow?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,419,2018-03-28T23:10:12Z,2018-04-02T17:57:58Z,2018-06-18T17:51:03Z,MERGED,True,122,76,6,https://github.com/blurfl,Define aux pins at runtime,32,[],https://github.com/MaslowCNC/Firmware/pull/419,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/419#issuecomment-377601341,"This addresses issue #417 .
In order to make use of all the AUX pins including the ones that change between board versions, it seems like they should be defined at runtime based on the board version much as the INx, ENx and ENCODERxy pins are. This code does that, moving them into System.cpp to be defined with those others. I've also added comments to Probe.cpp and Spindle.cpp to tell where the active pins are assigned.
Note 1, I've left the debug print statements in until testers have evaluated the PR. The 'dummyPin' uses an AUX pin that differs between board versions. The v1.0 board should show '1', the v1.1 and v1.2 boards should show '60'.
Note 2, I've created a function to assign the AUX pins that are currently used to the variables that need them. The function takes all the AUX pins values as parameters. This was done to allow defining them without raising the compiler complaint about unused #defines. I feel having the AUX pins defined even if they are not currently used will make it easier for others to make use of them in the future.",Absolutely! No rush,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,419,2018-03-28T23:10:12Z,2018-04-02T17:57:58Z,2018-06-18T17:51:03Z,MERGED,True,122,76,6,https://github.com/blurfl,Define aux pins at runtime,32,[],https://github.com/MaslowCNC/Firmware/pull/419,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/419#issuecomment-377994353,"This addresses issue #417 .
In order to make use of all the AUX pins including the ones that change between board versions, it seems like they should be defined at runtime based on the board version much as the INx, ENx and ENCODERxy pins are. This code does that, moving them into System.cpp to be defined with those others. I've also added comments to Probe.cpp and Spindle.cpp to tell where the active pins are assigned.
Note 1, I've left the debug print statements in until testers have evaluated the PR. The 'dummyPin' uses an AUX pin that differs between board versions. The v1.0 board should show '1', the v1.1 and v1.2 boards should show '60'.
Note 2, I've created a function to assign the AUX pins that are currently used to the variables that need them. The function takes all the AUX pins values as parameters. This was done to allow defining them without raising the compiler complaint about unused #defines. I feel having the AUX pins defined even if they are not currently used will make it easier for others to make use of them in the future.",Looks good to merge!! üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,420,2018-04-01T10:55:22Z,2018-04-02T17:57:12Z,2018-04-02T17:57:12Z,MERGED,True,0,0,16,https://github.com/GeroBH,rename .JPG/.PNG --> .jpg/.png,18,[],https://github.com/MaslowCNC/Firmware/pull/420,https://github.com/GeroBH,1,https://github.com/MaslowCNC/Firmware/pull/420,just for consistency :-),just for consistency :-),True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,420,2018-04-01T10:55:22Z,2018-04-02T17:57:12Z,2018-04-02T17:57:12Z,MERGED,True,0,0,16,https://github.com/GeroBH,rename .JPG/.PNG --> .jpg/.png,18,[],https://github.com/MaslowCNC/Firmware/pull/420,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/420#issuecomment-377994149,just for consistency :-),Wonderful! Love the consistency üòÅ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,421,2018-04-06T00:12:16Z,2018-04-06T21:50:10Z,2018-04-06T21:50:13Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Reword chain position not found popup,1,[],https://github.com/MaslowCNC/Firmware/pull/421,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/421,"The popup which displays when a valid position cannot be found for the given chain lengths has a poor choice of words with the word ""calibrate"" which is a word we use to mean something else. This changes the wording to be more clear","The popup which displays when a valid position cannot be found for the given chain lengths has a poor choice of words with the word ""calibrate"" which is a word we use to mean something else. This changes the wording to be more clear",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/reecej,1,https://github.com/MaslowCNC/Firmware/pull/422,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-379314485,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","This is a fantastic idea! Excellent work!! üëç üëç
Just out of curiosity is there a reason we couldn't just use the chain tolerance variable to tweak the chain pitch variable?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/reecej,3,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-379330418,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","There are a couple aspects to this. For one, the chain pitch itself isn't sent to the firmware. Rather, it's combined with the sprocket tooth count, and then the total distPerRotation is sent. We could adjust this total distPerRotation, but that would not allow us to calibrate the left and right chains individually.
Also, I kept the original, unmodified distPerRotation as it is used elsewhere, such as the quadrilateral kinematics.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-379341084,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","On Fri, 6 Apr 2018, BarbourSmith wrote:
 Just out of curiosity is there a reason we couldn't just use the chain tolerance variable to tweak the chain pitch variable?
It may not be the same for both chains, and we may have some place (like around
the sprockets) where the real chain pitch applies, and then other places where
the 'stretched' version applies.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-379393486,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.",Great points @reecej üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-384027704,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","@reecej Some folks have been reporting strange behavior when setting these where they get the sprockets to reverse direction and behave in unexpected ways. I'm trying to dig into it but I'm not sure I fully understand what is going on.
Can you help me understand how this works?
It looks like we're recomputing the radius based on the chain tolerance value?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-384033217,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","It looks to me like there might be an issue in the way the value for
kinematics.RrightChainTolerance = (sysSettings.distPerRotRightChainTolerance)/(2.0 * 3.14159);
is computed from the dist per rot sent up.
Here's what I'm seeing when I add some debug code:

If I set the chain tolerance to .2 in GC it ends up as 10.13 in the firmware...does that seem right? Should there be a conversion between those two?
Edit: It does make sense that there is a conversion factor because one is the percentage of change in a length of chain and the other is the effective radius
Edit: It looks like the bug is actually in the code which reads the value from the settings command which is strange:",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/reecej,8,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-384053826,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","The values you entered seem to match the results displayed there. The chain tolerance is meant to be a percentage added length over the nominal, so entering 0.2 means each link would be 6.35 * 1.002 = 6.3627 mm in length. This would equate to a 63.627 mm circumference for a 10-tooth sprocket, giving an effective radius of 10.127 mm.
I'll have to dig into this more. My apologies for the absence, I have had some other obligations come up that have greatly limited my free time. I'll review and see what I can find.",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/BarbourSmith,9,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-384099115,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","No worries!
I've pretty solidly tracked the issue to not in your code. The issue is in the readFloat function in NutsAndBolts.h around line 22.
To replicate the issue try entering the value .00058248 for the Right Chain Tolerance and the distance moved per rotation ends up getting set to -0.07 which isn't right üòâ
The issue is that the readFloat function is finding a bad value for the number entered, I'm not sure why yet",True,{'THUMBS_UP': ['https://github.com/reecej']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-384102821,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.",I'll be interested to hear what you findüôÇ. I wonder if some other problems we've had are related to the values returned by readFloat.,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/BarbourSmith,11,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-384104222,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","That's a good thought!
I wonder if it is giving us other strange behavior. I know that the issue I miss diagnosed as an issue with the motor keeping up detection code this morning was caused by this issue so it's certainly possible that it's giving us trouble elsewhere",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,422,2018-04-06T00:31:10Z,2018-04-06T21:49:57Z,2018-04-25T19:08:11Z,MERGED,True,37,17,5,https://github.com/reecej,Add chain tolerance parameters,1,[],https://github.com/MaslowCNC/Firmware/pull/422,https://github.com/BarbourSmith,12,https://github.com/MaslowCNC/Firmware/pull/422#issuecomment-384400491,"This adds chain tolerance parameters for the left and right chains. These parameters allow the chain pitch to be fine tuned for each individual chain.
This is a first step to allowing chain tolerance calibration. In a future pull request the calibration procedure will be updated to include chain tolerance for both chains. Leaving these new values set to zero should not impact existing users. Changing the value will require a chain length calibration.","For posterity the issue is not with this pull request at all. It's a buffer overflow issue with the number of decimals being sent. We can see it happen here in this excerpt from my log file with some debug code added. The readFloat function works by accumulating digits and then moving the decimal over at the end to make a float. In this file the first number after the '*' is the digit currently being read. The second number is the value accumulated at that point.
Sent: $41=63.5003698748 
*
6
6
*
3
63
*
.
63
*
5
635
*
0
6350
*
0
63500
*
3
635003
*
6
6350036
*
9
63500369
*
8
635003698
*
7
2055069691 <---- Overflow has occurred here
*
4
-924139566
*
8
-651461060
retVal set to:
-0.07",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,423,2018-04-07T23:29:33Z,2018-04-08T17:17:24Z,2018-04-08T17:17:24Z,CLOSED,False,103,30,1,https://github.com/mrfugu,"3D, and/or 3-Axis movements",5,[],https://github.com/MaslowCNC/Firmware/pull/423,https://github.com/mrfugu,1,https://github.com/MaslowCNC/Firmware/pull/423,"Bumping this up on the list for the following reasoning: https://forums.maslowcnc.com/t/how-fast-does-everyone-cut/3172/6
based on the age of this code, I'm sure it'll need a complete go through/review from someone more competent than I, but I think that ramping in and out of cuts, maintaining a constant load on the router, sled and workpiece will result in better loading on the router, better cuts and faster processes.","Bumping this up on the list for the following reasoning: https://forums.maslowcnc.com/t/how-fast-does-everyone-cut/3172/6
based on the age of this code, I'm sure it'll need a complete go through/review from someone more competent than I, but I think that ramping in and out of cuts, maintaining a constant load on the router, sled and workpiece will result in better loading on the router, better cuts and faster processes.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,423,2018-04-07T23:29:33Z,2018-04-08T17:17:24Z,2018-04-08T17:17:24Z,CLOSED,False,103,30,1,https://github.com/mrfugu,"3D, and/or 3-Axis movements",5,[],https://github.com/MaslowCNC/Firmware/pull/423,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/423#issuecomment-379520149,"Bumping this up on the list for the following reasoning: https://forums.maslowcnc.com/t/how-fast-does-everyone-cut/3172/6
based on the age of this code, I'm sure it'll need a complete go through/review from someone more competent than I, but I think that ramping in and out of cuts, maintaining a constant load on the router, sled and workpiece will result in better loading on the router, better cuts and faster processes.","Shouldn't this be an issue instead? Much has changed since this code was mergable, it really is no longer a PR.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,423,2018-04-07T23:29:33Z,2018-04-08T17:17:24Z,2018-04-08T17:17:24Z,CLOSED,False,103,30,1,https://github.com/mrfugu,"3D, and/or 3-Axis movements",5,[],https://github.com/MaslowCNC/Firmware/pull/423,https://github.com/mrfugu,3,https://github.com/MaslowCNC/Firmware/pull/423#issuecomment-379558876,"Bumping this up on the list for the following reasoning: https://forums.maslowcnc.com/t/how-fast-does-everyone-cut/3172/6
based on the age of this code, I'm sure it'll need a complete go through/review from someone more competent than I, but I think that ramping in and out of cuts, maintaining a constant load on the router, sled and workpiece will result in better loading on the router, better cuts and faster processes.","yeah, most likely, I really just wanted to look for any previous mention of 3-axis movement and found this branch.
I figured starting here since some work has been completed already.
Either way, true 3-axis movement, should improve accuracy by allowing more control over bit loading, at least with the CAM applications that are able to take advantage of that. (ie: Fusion360)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,423,2018-04-07T23:29:33Z,2018-04-08T17:17:24Z,2018-04-08T17:17:24Z,CLOSED,False,103,30,1,https://github.com/mrfugu,"3D, and/or 3-Axis movements",5,[],https://github.com/MaslowCNC/Firmware/pull/423,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/423#issuecomment-379566369,"Bumping this up on the list for the following reasoning: https://forums.maslowcnc.com/t/how-fast-does-everyone-cut/3172/6
based on the age of this code, I'm sure it'll need a complete go through/review from someone more competent than I, but I think that ramping in and out of cuts, maintaining a constant load on the router, sled and workpiece will result in better loading on the router, better cuts and faster processes.",This has been moved to issue #424,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,425,2018-04-08T21:47:47Z,2018-04-09T18:33:46Z,2018-06-18T17:51:09Z,MERGED,True,33,0,2,https://github.com/blurfl,"Add G4 gcode, use maslowDelay() to remain responsive to GC during dwell time",8,[],https://github.com/MaslowCNC/Firmware/pull/425,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/425,"Dwell pauses the command queue and waits for a period of time. Prints 'dwell time XX' to the display. The Hold and Stop buttons remain available during the dwell time.
Usage:
G4 [P] [S] (only one or the other is allowed, Sxx is ignored if Pxx is present)","Dwell pauses the command queue and waits for a period of time. Prints 'dwell time XX' to the display. The Hold and Stop buttons remain available during the dwell time.
Usage:
G4 [P] [S] (only one or the other is allowed, Sxx is ignored if Pxx is present)",True,{'THUMBS_UP': ['https://github.com/CptanPanic']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,425,2018-04-08T21:47:47Z,2018-04-09T18:33:46Z,2018-06-18T17:51:09Z,MERGED,True,33,0,2,https://github.com/blurfl,"Add G4 gcode, use maslowDelay() to remain responsive to GC during dwell time",8,[],https://github.com/MaslowCNC/Firmware/pull/425,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/425#issuecomment-379850479,"Dwell pauses the command queue and waits for a period of time. Prints 'dwell time XX' to the display. The Hold and Stop buttons remain available during the dwell time.
Usage:
G4 [P] [S] (only one or the other is allowed, Sxx is ignored if Pxx is present)",Great work! üëç üëç üéâ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,427,2018-04-13T13:17:34Z,2018-04-13T17:55:46Z,2018-06-18T17:51:13Z,MERGED,True,0,26,1,https://github.com/blurfl,remove function that was replaced in PR #389,1,[],https://github.com/MaslowCNC/Firmware/pull/427,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/427,"PR #389 replaced this function

void setPWMPrescalers)

with one of the same name

void setPWMPrescalers(int prescalerChoice)

which accepts a setting parameter. This PR removes the unused version of the function.","PR #389 replaced this function

void setPWMPrescalers)

with one of the same name

void setPWMPrescalers(int prescalerChoice)

which accepts a setting parameter. This PR removes the unused version of the function.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,427,2018-04-13T13:17:34Z,2018-04-13T17:55:46Z,2018-06-18T17:51:13Z,MERGED,True,0,26,1,https://github.com/blurfl,remove function that was replaced in PR #389,1,[],https://github.com/MaslowCNC/Firmware/pull/427,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/427#issuecomment-381214311,"PR #389 replaced this function

void setPWMPrescalers)

with one of the same name

void setPWMPrescalers(int prescalerChoice)

which accepts a setting parameter. This PR removes the unused version of the function.",Excellent keeping things clean! üëç üëç üéâ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,428,2018-04-13T19:32:57Z,2018-04-13T20:09:21Z,2018-04-13T20:09:21Z,MERGED,True,22,2,3,https://github.com/blurfl,Add an alarm for gcode calculation error,1,[],https://github.com/MaslowCNC/Firmware/pull/428,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/428,"Add flag ALARM_GCODE_PARAM_ERROR and the code to handle it in Report.cpp
Use that flag in Motion.cpp if a parameter value error causes a calculation error when calculating an arc() as used by G2() in GCode.cpp
Addresses Issue #426, and requires GC PR #697 for the alarm to trigger a dialog. The dialog:

This .nc file will trigger the calculation error when the firmware evaluates line 31.
G2-G3-error-arises-in-line-31.nc.zip","Add flag ALARM_GCODE_PARAM_ERROR and the code to handle it in Report.cpp
Use that flag in Motion.cpp if a parameter value error causes a calculation error when calculating an arc() as used by G2() in GCode.cpp
Addresses Issue #426, and requires GC PR #697 for the alarm to trigger a dialog. The dialog:

This .nc file will trigger the calculation error when the firmware evaluates line 31.
G2-G3-error-arises-in-line-31.nc.zip",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,428,2018-04-13T19:32:57Z,2018-04-13T20:09:21Z,2018-04-13T20:09:21Z,MERGED,True,22,2,3,https://github.com/blurfl,Add an alarm for gcode calculation error,1,[],https://github.com/MaslowCNC/Firmware/pull/428,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/428#issuecomment-381247970,"Add flag ALARM_GCODE_PARAM_ERROR and the code to handle it in Report.cpp
Use that flag in Motion.cpp if a parameter value error causes a calculation error when calculating an arc() as used by G2() in GCode.cpp
Addresses Issue #426, and requires GC PR #697 for the alarm to trigger a dialog. The dialog:

This .nc file will trigger the calculation error when the firmware evaluates line 31.
G2-G3-error-arises-in-line-31.nc.zip",Excellent!!!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/429,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-381783198,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","I just had this trigger during the calibration process when measuring the distance between the motors...which is awesome because we are stalling the motor for a fraction of a second there...but also an issue.
Would it be safe to set the threshold to something large like 200mm when entering that step in the settings, and then reset it to normal when moving on?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-381783532,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.",Sure. Do we need to save the previous value to restore it?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-381783967,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","I think I can just send a hard coded value, and then pull the original value from the config file, right?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-381784203,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","That's right, sending $42=200 as a macro doesn't change the setting in groundcontrol.ini, just in the EEPROM.",True,{'HOORAY': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382188085,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","Darn! That's why I couldn't turn it off while working on the I,J thing...",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382565642,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.",This affects 'Test Motors/Encoders/ as well...,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382570415,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","Not sure how to keep the  B04 'Test Motors/Encoders' from triggering the position error during the test. It of course will trigger it once the test is complete.
Should we use a global flag in the firmware to suspend testing for the the error limit while the B04 is under way, or have B04 stash the value and restore it after the last axis has finished?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/davidelang,9,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382574279,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","On Wed, 18 Apr 2018, Scott Smith wrote:
 Not sure how to keep the  B04 'Test Motors/Encoders' from triggering the position error during the test. It of course will trigger it once the test is complete.
 Should we use a global flag in the firmware to suspend testing for the the error limit while the B04 is under way, or have B04 stash the value and restore it after the last axis has finished?
I would take the attitude that B commands have no safety net, you do _exactly_
what they tell you to do. G commands should have the safety net of limits, stall
detection, etc. But let the B commands remain unprotected so that they can be
used for unexpected things.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/BarbourSmith,10,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382798878,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","Great point @blurfl .
What if we just did a reload position at the end of the test so that wherever the sled is is where it's supposed to be at that point? Maybe we should have been doing that anyway?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,11,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382811731,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","position reload

A great idea. Can you point at a place that shows how this is done?  I had a quick look but didn't spot it. I'm deep in a trig. rabbit hole over in gcodeCanvas, wanted to stay focussed there.
Here's a branch of firmware that implements a system flag to suspend evaluating position error, and uses it during the B04 process.
https://github.com/blurfl/Firmware/tree/test-motors-needs-to-be-exempt-from-position-error-limit",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/BarbourSmith,12,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382824394,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","I believe that line 249 in Gcode.cpp is doing what we want to do:
leftAxis.set(leftAxis.read());
It just reads the current position and tells the axis that it is right where it should be",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382827320,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.","Great! Thanks for the quick answerüíØüëç. A PR is opened üòÅ
Collaboration is awesome!",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,429,2018-04-16T00:47:16Z,2018-04-16T18:42:29Z,2018-04-19T22:14:05Z,MERGED,True,20,1,4,https://github.com/blurfl,"Add a system setting for positionErrorLimit, stop cutting if reached",2,[],https://github.com/MaslowCNC/Firmware/pull/429,https://github.com/BarbourSmith,14,https://github.com/MaslowCNC/Firmware/pull/429#issuecomment-382897103,"After each time that position error is reported, check against a limit and take action if the limit is reached.

add $42 positionErrorLimit with a default of 2mm
check each time [PE: is sent
set sys.stop flag if left- or right-axis error >= positionErrorLimit

Note, this leaves GC with a 'Hold' in place rather than a 'Stop'. This leaves the line number visible.The user is asked to click the 'Stop' button to get GC into the same state as the firmware.
GC PR #703 makes an Advanced Setting available to change the value of positionErrorLimit.",It is!!!!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,430,2018-04-17T01:00:56Z,2018-04-17T15:58:54Z,2018-04-17T17:39:16Z,MERGED,True,15,7,1,https://github.com/blurfl,Replace G2/G3 line with equivalent G1 line,5,[],https://github.com/MaslowCNC/Firmware/pull/430,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/430,"The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.","The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,430,2018-04-17T01:00:56Z,2018-04-17T15:58:54Z,2018-04-17T17:39:16Z,MERGED,True,15,7,1,https://github.com/blurfl,Replace G2/G3 line with equivalent G1 line,5,[],https://github.com/MaslowCNC/Firmware/pull/430,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/430#issuecomment-382046594,"The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.",You are on üî• Way to take what was looking like an issue that would fall by the wayside as not frequent enough and tackle it completely!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,430,2018-04-17T01:00:56Z,2018-04-17T15:58:54Z,2018-04-17T17:39:16Z,MERGED,True,15,7,1,https://github.com/blurfl,Replace G2/G3 line with equivalent G1 line,5,[],https://github.com/MaslowCNC/Firmware/pull/430,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/430#issuecomment-382050344,"The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.","""But wait, there's more..."" Do look at the most recent comment in Issue #426 ...",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,430,2018-04-17T01:00:56Z,2018-04-17T15:58:54Z,2018-04-17T17:39:16Z,MERGED,True,15,7,1,https://github.com/blurfl,Replace G2/G3 line with equivalent G1 line,5,[],https://github.com/MaslowCNC/Firmware/pull/430,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/430#issuecomment-382052357,"The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.",Hahha there always is! Do you want to add more changes in a new pull request or should I have left this one open?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,430,2018-04-17T01:00:56Z,2018-04-17T15:58:54Z,2018-04-17T17:39:16Z,MERGED,True,15,7,1,https://github.com/blurfl,Replace G2/G3 line with equivalent G1 line,5,[],https://github.com/MaslowCNC/Firmware/pull/430,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/430#issuecomment-382068899,"The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.","The flyspeck I mentioned is in both GC and the firmware. I guess we could treat it as a separate issue. I'll open one, which place to choose?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,430,2018-04-17T01:00:56Z,2018-04-17T15:58:54Z,2018-04-17T17:39:16Z,MERGED,True,15,7,1,https://github.com/blurfl,Replace G2/G3 line with equivalent G1 line,5,[],https://github.com/MaslowCNC/Firmware/pull/430,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/430#issuecomment-382078452,"The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.","We could open issues in both places if we wanted, that way if we fix it in one place but not the other we would be able to note it",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,430,2018-04-17T01:00:56Z,2018-04-17T15:58:54Z,2018-04-17T17:39:16Z,MERGED,True,15,7,1,https://github.com/blurfl,Replace G2/G3 line with equivalent G1 line,5,[],https://github.com/MaslowCNC/Firmware/pull/430,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/430#issuecomment-382079402,"The problem here is floating point precision, but it can be identified by looking at the height of the chord described by the G2/G3 command. Problematic commands have a chord that resolves to 0.01mm or less. This code trapps that situation and calls G1 instead using the endpoint. This turns an arc with less than 0.01mm of bow into a straight line.
This is discussed in issue #426, and applies to the issue addressed in PR#428, replacing the code from that PR.","Ok, I'll do that.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,432,2018-04-17T23:18:15Z,2018-04-17T23:23:14Z,2018-06-18T17:50:40Z,MERGED,True,2,2,1,https://github.com/blurfl,"Apply the system setting, get rid of the testing constant",1,[],https://github.com/MaslowCNC/Firmware/pull/432,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/432,I missed this in the last PR...,I missed this in the last PR...,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,432,2018-04-17T23:18:15Z,2018-04-17T23:23:14Z,2018-06-18T17:50:40Z,MERGED,True,2,2,1,https://github.com/blurfl,"Apply the system setting, get rid of the testing constant",1,[],https://github.com/MaslowCNC/Firmware/pull/432,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/432#issuecomment-382188872,I missed this in the last PR...,"üòÄ You always catch my typos, it feels good to catch one of yours üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,433,2018-04-19T17:58:22Z,2018-04-19T22:13:43Z,2018-06-18T17:51:27Z,MERGED,True,13,2,3,https://github.com/blurfl,Test motors needs to be exempt from position error limit,2,[],https://github.com/MaslowCNC/Firmware/pull/433,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/433,"Create a system flag to suspend checking for position error.
Use it during B04 'Test Motors/Encoders'.
Update our position after the test before re-enabling position error checking.","Create a system flag to suspend checking for position error.
Use it during B04 'Test Motors/Encoders'.
Update our position after the test before re-enabling position error checking.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,433,2018-04-19T17:58:22Z,2018-04-19T22:13:43Z,2018-06-18T17:51:27Z,MERGED,True,13,2,3,https://github.com/blurfl,Test motors needs to be exempt from position error limit,2,[],https://github.com/MaslowCNC/Firmware/pull/433,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/433#issuecomment-382896998,"Create a system flag to suspend checking for position error.
Use it during B04 'Test Motors/Encoders'.
Update our position after the test before re-enabling position error checking.","Looks good! üëç üëç
Way to pin down that corner case! üéâ
Was there an issue where it was still triggering when doing the rightAxis.set(rightAxis.read());?
You are seriously on fire this week! 1.12 is going to be all you!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,433,2018-04-19T17:58:22Z,2018-04-19T22:13:43Z,2018-06-18T17:51:27Z,MERGED,True,13,2,3,https://github.com/blurfl,Test motors needs to be exempt from position error limit,2,[],https://github.com/MaslowCNC/Firmware/pull/433,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/433#issuecomment-382910277,"Create a system flag to suspend checking for position error.
Use it during B04 'Test Motors/Encoders'.
Update our position after the test before re-enabling position error checking.","Was there an issue where it was still triggering when doing the rightAxis.set(rightAxis.read());?

I'm not sure I follow you? I figured both axes would need to be updated. Running the motors with no weight attached, they sometimes coast beyond the shutoff point, both needed updating.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,433,2018-04-19T17:58:22Z,2018-04-19T22:13:43Z,2018-06-18T17:51:27Z,MERGED,True,13,2,3,https://github.com/blurfl,Test motors needs to be exempt from position error limit,2,[],https://github.com/MaslowCNC/Firmware/pull/433,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/433#issuecomment-382914734,"Create a system flag to suspend checking for position error.
Use it during B04 'Test Motors/Encoders'.
Update our position after the test before re-enabling position error checking.",Never mind I think my question didn't make sense because I misunderstood something üôÉ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/434,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well",True,"{'THUMBS_UP': ['https://github.com/GeroBH'], 'HEART': ['https://github.com/GeroBH', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-382921264,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","This looks great!
I will test against all the board version in the morning and merge üéâ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-382933723,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well",That's great. I've got a beta v1.0 board and v1.1 but no v1.2. (and a v1.4 üòÅ),True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383175966,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","Hmmm this seems to cause issues on 1.2 although I'm seeing version 1.2 be detected:

Any idea what might be going on or what else I can test?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383178468,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","Hang on, this looks to be an error on my part in the testing",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383178728,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","I must be dense, what is the issue? By all means use a different approach, this is just a quick stab at it. ü§ó",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383180198,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","I must be dense, what is the issue?

One of us is, but it's not you!
Ive been messing with the calibration stuff on my computer and I had it set up as top feed instead of bottom feed so everything was backwards üôÑ
Just tested again and all is well!! üëç üëç üéâ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383180731,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","That‚Äôs good! I think I should leave preparing for the merging of the TLE5206 board to you, if that‚Äôs ok?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/BarbourSmith,9,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383186517,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well",Do you mean moving the TLE5206 board into the /electronics repo?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383229632,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","I meant firmware. While my PR will recognize the TLT5206 board, it does not add the defines needed to make it run. I figured that just doing the version part would be an appropriate 'baby step'.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/BarbourSmith,11,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383239613,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","OK, got it!
I'm making some progress on getting them made. They are a little weirded out by the whole we don't want any money thing but I think they will get it üòÄ",True,{'LAUGH': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383243894,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","They are a little weirded out by the whole we don't want any money thing

I think you could sell them if you wanted, they're shared in the same way as the boards you currently sell, aren't they?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,434,2018-04-19T23:14:14Z,2018-04-20T18:16:53Z,2018-06-18T17:50:17Z,MERGED,True,27,1,2,https://github.com/blurfl,"Use pullups to check board version, use #defines for version",1,[],https://github.com/MaslowCNC/Firmware/pull/434,https://github.com/BarbourSmith,13,https://github.com/MaslowCNC/Firmware/pull/434#issuecomment-383677290,"Use pullups to check board version
use #defines for version
add two more version pins for future use, pull them up as well","Its true and we will if we need to, but I think that if the factory can ship them direct it will be cheaper for everyone and they will be available sooner. We're really not that great at logistics üòÄ",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,438,2018-04-23T23:30:23Z,2018-04-24T16:54:22Z,2018-04-24T16:54:22Z,MERGED,True,20,0,2,https://github.com/CptanPanic,Added some debug output for motor steps,3,[],https://github.com/MaslowCNC/Firmware/pull/438,https://github.com/CptanPanic,1,https://github.com/MaslowCNC/Firmware/pull/438,"I was having some problems with z axis motor, and the biggest help was the added debug to the motor test which shows the step counts.","I was having some problems with z axis motor, and the biggest help was the added debug to the motor test which shows the step counts.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,439,2018-04-24T01:08:43Z,2018-04-24T16:54:21Z,2018-04-24T16:54:21Z,MERGED,True,38,17,4,https://github.com/CptanPanic,Added support for active low spindle automation.,6,[],https://github.com/MaslowCNC/Firmware/pull/439,https://github.com/CptanPanic,1,https://github.com/MaslowCNC/Firmware/pull/439,"I change the spindleAutomate settings to be an enum, so now you can be values below.  Note this will require a change in ground control, as it setup as a bool currently.
enum SpindleAutomationType {
  NONE,
  SERVO,
  RELAY_ACTIVE_HIGH,
  RELAY_ACTIVE_LOW };

closes #436","I change the spindleAutomate settings to be an enum, so now you can be values below.  Note this will require a change in ground control, as it setup as a bool currently.
enum SpindleAutomationType {
  NONE,
  SERVO,
  RELAY_ACTIVE_HIGH,
  RELAY_ACTIVE_LOW };

closes #436",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,439,2018-04-24T01:08:43Z,2018-04-24T16:54:21Z,2018-04-24T16:54:21Z,MERGED,True,38,17,4,https://github.com/CptanPanic,Added support for active low spindle automation.,6,[],https://github.com/MaslowCNC/Firmware/pull/439,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/439#issuecomment-383786933,"I change the spindleAutomate settings to be an enum, so now you can be values below.  Note this will require a change in ground control, as it setup as a bool currently.
enum SpindleAutomationType {
  NONE,
  SERVO,
  RELAY_ACTIVE_HIGH,
  RELAY_ACTIVE_LOW };

closes #436","How about removing the delay from the ‚ÄòNone‚Äô code? No reason to wait around.  Sorry, I mis-read the line, you've already got it covered. üëçüèª",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,440,2018-04-25T20:12:14Z,2018-05-02T19:59:09Z,2018-05-02T19:59:12Z,MERGED,True,0,31,2,https://github.com/BarbourSmith,Remove watchdog function,1,[],https://github.com/MaslowCNC/Firmware/pull/440,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/440,"I keep meaning to remove this function and then it doesn't feel right to lump it in with another pull request.
This PR will remove the watchdog function which we don't use","I keep meaning to remove this function and then it doesn't feel right to lump it in with another pull request.
This PR will remove the watchdog function which we don't use",True,{'THUMBS_UP': ['https://github.com/CptanPanic']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,441,2018-04-27T21:20:57Z,2018-04-27T23:14:28Z,2018-04-27T23:14:37Z,MERGED,True,97,134,3,https://github.com/BarbourSmith,Code cleanup,2,[],https://github.com/MaslowCNC/Firmware/pull/441,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/441,"Change pin definitions to be lower case because they are not compiler defines and remove some unused functions.
This is in preparation for adding support for the new PCB and exploring why the left motor is more twitchy","Change pin definitions to be lower case because they are not compiler defines and remove some unused functions.
This is in preparation for adding support for the new PCB and exploring why the left motor is more twitchy",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,442,2018-05-01T18:03:58Z,2018-05-02T19:59:25Z,2018-05-02T19:59:29Z,MERGED,True,29,15,1,https://github.com/BarbourSmith,Add support for using the PWM pin,2,[],https://github.com/MaslowCNC/Firmware/pull/442,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/442,"PCB version 1.2 moved around which pins are PWM pins and so the firmware needs to take this into account. There is an issue right now where when running PCB version 1.2 the left motor only gets one pulse every time the speed is set (at the frequency of of the PID loops) instead of at the PWM frequency which is higher resulting in the left motor not having full power.
The PR adds a usepwmpin option so that the PWM pin is used for PWM if it is not a pin used for one of the timers.
Tested on 1.1 and 1.2b","PCB version 1.2 moved around which pins are PWM pins and so the firmware needs to take this into account. There is an issue right now where when running PCB version 1.2 the left motor only gets one pulse every time the speed is set (at the frequency of of the PID loops) instead of at the PWM frequency which is higher resulting in the left motor not having full power.
The PR adds a usepwmpin option so that the PWM pin is used for PWM if it is not a pin used for one of the timers.
Tested on 1.1 and 1.2b",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,443,2018-05-02T19:58:49Z,2018-05-02T19:59:40Z,2018-05-02T19:59:43Z,MERGED,True,4,0,1,https://github.com/BarbourSmith,Add files so robot can maintain firmware,1,[],https://github.com/MaslowCNC/Firmware/pull/443,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/443,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/444,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains","This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/444#issuecomment-386434254,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains","Congratulations on the pull request @BarbourSmith!!
Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/reecej', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/444#issuecomment-386453908,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains","can we kill these robot messages, let them do the work, but the message adds no
value

and we don't vote on accepting pull requests, we discuss it, but we don't vote.
‚Ä¶
On Thu, 3 May 2018, MaslowCommunityGardenRobot wrote:
 Date: Thu, 03 May 2018 13:57:11 -0700
 From: MaslowCommunityGardenRobot ***@***.***>
 Reply-To: MaslowCNC/Firmware
     <reply+0021b24f7e19d7e55a4cd80993da981a1c7fce3bd37438ce92cf00000001170339a
     ***@***.***>
 To: MaslowCNC/Firmware ***@***.***>
 Cc: Subscribed ***@***.***>
 Subject: Re: [MaslowCNC/Firmware] Make it possible to measure either chain
     (#444)

 Congratulations on the pull request @BarbourSmith!!

 Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.

 I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/444#issuecomment-386454868,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains","We do vote! You vote by giving that comment a thumbs up or a thumbs down which lets everyone decide what is incorporated into the software and what isn't. If the comment gets more üëé than üëç then the pull request is rejected and closed.
It's a way to give everyone write access without giving anyone write access...and I'm hoping that one of these days it will let me take a week off üòÄ
Edit: Maybe we need to make the comment more clear. How can we word it better?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/444#issuecomment-386455501,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains","On Thu, 3 May 2018, BarbourSmith wrote:
 We do vote! You vote by giving that comment a thumbs up or a thumbs down which
 lets everyone decide what is incorporated into the software and what isn't. If
 the comment gets more üëé than üëç then the pull request is rejected and closed.

 It's a way to give everyone write access without giving anyone write
 access...and I'm hoping that one of these days it will let me take a week off
Do people actually vote? Is there a way to vote via e-mail?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/444#issuecomment-386456865,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains","There hasn't been much voting yet, but I'm hoping to start relying on the system entirely to merge pull requests so we can start testing it.
I don't think it is possible to vote by email right now",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/MaslowCommunityGardenRobot,7,https://github.com/MaslowCNC/Firmware/pull/444#issuecomment-386834417,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains",Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,444,2018-05-03T20:56:47Z,2018-05-05T20:57:13Z,2018-05-30T16:29:20Z,MERGED,True,18,24,4,https://github.com/BarbourSmith,Make it possible to measure either chain,5,[],https://github.com/MaslowCNC/Firmware/pull/444,https://github.com/MaslowCommunityGardenRobot,8,https://github.com/MaslowCNC/Firmware/pull/444#issuecomment-386834421,"This pull request adds the ability to measure the distance between the motors by using either chain.
It also cleans up the directWrite function to call the regular write function to ensure consistency across PCB versions. This has been tested but it's a change which effects multiple other places in the code so it's worth mentioning.
This pull request is part of an effort to create an automated system for measuring differences in the left vs right chains",It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/445,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-387493920,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,"Congratulations on the pull request @BarbourSmith!!
Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388138659,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388138904,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388139235,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,6,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388139529,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,7,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388139819,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,8,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388140093,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,9,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388140384,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,10,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388140687,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,11,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388141011,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,12,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388141282,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,13,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388141585,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,14,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388141875,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,15,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388142164,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,16,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388142492,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,17,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388142780,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,18,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388143040,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,19,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388143341,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,20,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388143651,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,21,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388143948,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,22,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388144237,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,23,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388144563,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,24,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388144831,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,25,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388145145,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,26,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388145435,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,27,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388145786,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,28,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388146084,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,29,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388146386,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,30,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388146723,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,31,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388147001,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,32,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388147285,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,33,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388147623,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,34,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388147916,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,35,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388148253,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,36,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388148565,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,37,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388148875,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,38,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388149177,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,39,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388149464,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,40,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388149757,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,41,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388150024,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,42,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388150387,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,43,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388150686,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,44,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388151000,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,45,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388151321,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,46,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388151603,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,47,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388151864,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,48,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388152157,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,49,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388152413,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,50,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388152728,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,51,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388153007,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,52,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388153250,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,53,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388153541,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,54,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388153823,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,55,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388154078,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,56,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388154316,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,57,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388154566,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,58,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388154855,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,59,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388155107,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,60,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388155358,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,61,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388155637,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,62,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388155866,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,63,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388156117,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,64,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388156369,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,65,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388156636,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,66,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388156898,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,67,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388157174,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,68,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388157407,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,69,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388157694,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,70,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388157990,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,71,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388158242,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,72,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388158486,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,73,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388158749,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,74,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388159008,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,75,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388159280,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,76,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388159547,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,77,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388159769,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,78,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388160001,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,79,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388160316,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,80,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388160546,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,81,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388160809,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,82,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388161048,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,83,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388161335,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,84,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388161576,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,85,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388161851,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/blurfl,86,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388161917,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,"This will probably get buried in the noise, but I think that the src_dir in platformio.ini needs to be changed to point to the new directory name, yes?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,87,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388162132,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,88,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388162438,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,89,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388162678,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,90,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388162902,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,91,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388163186,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,92,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388163429,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,93,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388163720,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,94,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388164016,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,95,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388164282,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,96,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388164577,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,97,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388164831,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,98,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388165101,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,99,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388165343,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,100,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388165632,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,101,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388165877,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,102,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388166165,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,103,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388166416,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,104,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388166670,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,105,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388166940,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,106,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388167235,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,107,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388167485,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,108,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388167744,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,109,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388168009,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,110,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388168281,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,111,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388168532,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,112,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388168776,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,113,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388169053,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,114,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388169324,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,115,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388169629,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,116,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388169906,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,117,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388170181,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,118,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388170449,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,119,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388170710,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,120,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388170945,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,121,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388171257,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,122,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388171538,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,123,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388171795,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,124,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388172041,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,125,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388172321,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,126,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388172583,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,127,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388172888,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,128,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388173139,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,129,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388173409,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,130,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388173672,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,131,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388173918,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,132,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388174166,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,133,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388174415,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,134,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388174688,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,135,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388174946,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,136,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388175198,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,137,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388175475,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,138,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388175751,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,139,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388176054,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,140,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388176289,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,141,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388176518,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,142,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388176795,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,143,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388177045,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,144,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388177315,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,145,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388177566,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,146,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388177831,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,147,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388178131,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,148,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388178435,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,149,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388178727,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,150,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388178997,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,151,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388179280,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,152,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388179523,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,153,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388179834,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,154,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388180132,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,155,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388180420,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,156,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388180719,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,157,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388180987,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,158,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388181249,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,159,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388181495,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,160,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388181802,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,161,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388182079,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,162,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388182358,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,163,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388182649,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,164,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388182875,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,165,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388183186,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,166,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388183465,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,167,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388183759,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,168,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388184059,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,169,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388184341,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,170,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388184599,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,171,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388184896,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,172,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388185197,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,173,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388185462,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,174,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388185709,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,175,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388185960,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,176,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388186286,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,177,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388186512,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,178,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388186786,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,179,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388187025,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,180,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388187314,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,181,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388187586,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,182,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388187859,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,183,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388188113,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,184,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388188353,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,185,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388188633,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,186,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388188863,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,187,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388189101,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,188,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388189382,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,189,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388189649,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,190,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388189909,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,191,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388190139,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,192,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388190383,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,193,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388190625,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,194,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388190856,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,195,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388191093,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,196,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388191362,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,197,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388191629,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,198,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388191873,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,199,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388192159,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,200,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388192379,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,201,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388192635,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,202,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388193007,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,203,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388193210,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,204,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388193452,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,205,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388193675,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,206,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388193894,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,207,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388194121,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,208,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388194394,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,209,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388194668,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,210,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388194905,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,211,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388195129,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,212,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388195350,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,213,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388195601,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,214,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388195863,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,215,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388196078,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,216,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388196303,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,217,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388196533,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,218,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388196739,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,219,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388196944,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,220,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388197186,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,221,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388197405,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,222,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388197652,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,223,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388197854,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,224,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388198084,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,225,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388198329,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,226,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388198555,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,227,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388198771,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,228,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388198972,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,229,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388199164,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,230,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388199389,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,231,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388199638,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,232,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388199827,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,233,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388200048,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,234,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388200233,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,235,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388200460,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,236,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388200670,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,237,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388200853,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,238,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388201043,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,239,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388201267,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,240,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388201481,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,241,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388201691,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,242,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388201936,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,243,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388202144,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,244,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388202372,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,245,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388202591,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,246,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388202798,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,247,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388202989,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,248,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388203186,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,249,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388203387,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,250,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388203611,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,251,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388203806,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,252,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388203992,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,253,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388204218,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,254,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388204404,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,255,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388204583,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,256,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388204801,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,257,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388205002,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,258,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388205208,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,259,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388205396,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,260,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388205604,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,261,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388205785,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,262,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388205960,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,263,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388206158,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,264,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388206375,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,265,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388206560,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,266,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388206754,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,267,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388206940,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,268,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388207135,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,269,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388207329,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,270,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388207517,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,271,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388207699,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,272,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388207883,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,273,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388208069,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,274,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388208242,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,275,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388208428,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,276,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388208618,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,277,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388208803,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,278,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388208956,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,279,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388209116,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,280,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388209311,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,281,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388209492,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,282,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388209651,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,283,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388209794,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,284,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388209943,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,285,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388210103,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,286,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388210314,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,287,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388210485,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,288,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388210670,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,289,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388210832,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,290,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388211003,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,291,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388211195,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,292,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388211408,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,293,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388211536,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,294,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388211697,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,295,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388211845,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,296,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388212025,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,297,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388212166,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,298,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388212357,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,299,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388212510,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,300,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388212666,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,301,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388212841,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,302,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388213004,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,303,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388213153,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,304,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388213325,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,305,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388213478,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,306,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388213672,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,307,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388213887,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,308,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388214107,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,309,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388214329,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,310,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388214561,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,311,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388214742,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,312,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388214968,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,313,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388215156,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,314,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388215331,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,315,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388215501,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,316,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388215656,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,317,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388215777,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,318,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388215956,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,319,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388216111,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,320,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388216279,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,321,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388216438,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,322,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388216581,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,323,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388216742,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,324,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388216899,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,325,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388217043,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,326,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388217195,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,327,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388217356,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,328,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388217524,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,329,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388217688,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,330,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388217840,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,331,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388217984,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,332,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388218129,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,333,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388218282,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,334,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388218451,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,335,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388218580,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,336,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388218745,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,337,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388218880,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,338,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388219007,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,339,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388219155,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,340,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388219311,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,341,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388219449,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,342,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388219603,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,343,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388219749,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,344,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388219885,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,345,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388220028,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,346,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388220181,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,347,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388220321,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,348,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388220485,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,349,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388220634,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,350,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388220783,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,351,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388220926,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,352,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388221107,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,353,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388221259,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,354,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388221410,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,355,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388221533,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,356,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388221685,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,357,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388221837,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,358,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388221990,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,359,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388222118,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,360,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388222271,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,361,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388222396,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,362,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388222513,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,363,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388222691,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,364,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388222828,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,365,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388222951,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,366,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223074,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,367,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223224,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,368,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223354,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,369,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223487,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,370,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223614,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,371,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223719,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,372,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223849,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,373,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388223972,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,374,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224107,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,375,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224237,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,376,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224368,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,377,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224484,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,378,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224605,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,379,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224733,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,380,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224865,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,381,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388224985,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,382,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388225105,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,383,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388225250,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,384,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388225382,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,385,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388225511,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,386,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388225635,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,387,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388225773,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,388,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388225892,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,389,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226030,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,390,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226148,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,391,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226283,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,392,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226418,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,393,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226562,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,394,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226707,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,395,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226870,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,396,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388226979,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,397,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388227113,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,398,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388227265,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,399,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388227364,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,400,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388227479,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,401,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388227613,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,402,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388227754,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,403,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388227896,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,404,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388228027,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,405,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388228153,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,406,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388228275,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,407,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388228418,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,408,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388228562,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,409,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388228713,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,410,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388228839,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,411,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388229007,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,412,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388229116,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,413,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388229259,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,414,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388229410,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,415,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388229538,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,416,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388229690,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,417,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388229841,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,418,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230000,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,419,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230132,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,420,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230286,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,421,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230419,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,422,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230552,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,423,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230723,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,424,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230855,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,425,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388230966,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,426,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388231103,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,427,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388231237,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,428,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388231364,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,429,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388231490,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,430,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388231618,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,431,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388231768,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,432,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388231879,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,433,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232000,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,434,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232147,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,435,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232284,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,436,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232414,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,437,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232556,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,438,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232695,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,439,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232835,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,440,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388232982,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,441,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388233144,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,442,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388233300,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,443,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388233452,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,444,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388233595,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,445,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388233747,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,446,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388233865,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,447,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234000,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,448,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234160,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,449,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234301,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,450,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234442,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,451,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234571,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,452,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234685,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,453,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234844,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,454,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388234954,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,455,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388235112,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,456,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388235246,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,457,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388235395,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,458,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388235542,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,459,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388235679,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,460,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388235815,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,461,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388235938,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,462,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388236079,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,463,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388236221,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,464,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388236341,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,465,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388236484,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,466,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388236599,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,467,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388236757,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,468,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388236887,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,469,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388237041,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,470,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388237186,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,471,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388237349,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,472,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388237481,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,473,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388237638,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,474,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388237791,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,475,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388237974,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,476,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388238102,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,477,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388238243,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,478,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388238391,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,479,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388238524,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,480,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388238689,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,481,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388238823,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,482,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388238978,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,483,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388239125,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,484,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388239251,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,485,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388239396,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,486,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388239536,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,487,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388239662,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,488,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388239888,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,489,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240031,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,490,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240164,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,491,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240310,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,492,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240463,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,493,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240575,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,494,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240718,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,495,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240834,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,496,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388240956,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,497,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388241086,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,498,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388241250,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,499,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388241380,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,500,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388241526,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,501,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388241650,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,502,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388241791,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,503,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388241937,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,504,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388242095,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,505,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388242216,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,506,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388242348,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,507,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388242484,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,508,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388242650,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,509,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388242811,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,510,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388242934,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,511,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388243078,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,512,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388243210,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,513,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388243368,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,514,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388243527,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,515,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388243660,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,516,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388243815,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,517,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388243963,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,518,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388244115,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,519,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388244253,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,520,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388244395,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,521,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388244531,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,522,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388244640,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,523,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388244811,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,524,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388244938,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,525,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388245072,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,526,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388245222,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,527,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388245382,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,528,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388245503,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,529,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388245655,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,530,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388245809,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,531,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388245967,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,532,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388246132,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,533,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388246246,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,534,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388246404,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,535,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388246555,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,536,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388246693,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,537,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388246845,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,538,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388246967,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,539,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247061,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,540,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247174,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,541,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247292,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,542,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247438,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,543,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247578,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,544,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247720,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,545,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247831,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,546,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388247939,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,547,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248078,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,548,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248207,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,549,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248338,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,550,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248475,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,551,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248595,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,552,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248726,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,553,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248829,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,554,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388248965,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,555,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249098,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,556,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249193,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,557,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249316,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,558,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249424,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,559,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249536,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,560,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249677,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,561,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249794,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,562,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388249897,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,563,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250006,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,564,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250117,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,565,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250214,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,566,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250338,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,567,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250456,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,568,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250585,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,569,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250716,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,570,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250830,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,571,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388250938,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,572,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251051,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,573,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251145,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,574,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251274,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,575,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251390,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,576,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251509,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,577,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251599,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,578,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251723,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,579,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251822,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,445,2018-05-08T18:14:33Z,2018-05-11T03:51:35Z,2018-05-30T16:29:20Z,CLOSED,False,0,0,42,https://github.com/BarbourSmith,Change folder name,1,[],https://github.com/MaslowCNC/Firmware/pull/445,https://github.com/MaslowCommunityGardenRobot,580,https://github.com/MaslowCNC/Firmware/pull/445#issuecomment-388251937,I think that the name for the folder containing the firmware as cnc_ctrl_v1 is a little confusing and that Maslow_Firmware might be a better name...unfortuately this will disrupt any branches whihc are out there and haven't been merged,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,446,2018-05-11T16:26:50Z,2018-05-13T16:27:18Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Reword message about arcs,2,[],https://github.com/MaslowCNC/Firmware/pull/446,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/446,"It seems like this message is giving folks the impression that something has gone wrong when really the machine is being smart and preventing an issue.
I think it makes sense to take out the words oops and error which make perfect sense when you understand the code but which are intimidating if you don't know what is going on","It seems like this message is giving folks the impression that something has gone wrong when really the machine is being smart and preventing an issue.
I think it makes sense to take out the words oops and error which make perfect sense when you understand the code but which are intimidating if you don't know what is going on",True,"{'HOORAY': ['https://github.com/blurfl'], 'HEART': ['https://github.com/blurfl', 'https://github.com/CptanPanic']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,446,2018-05-11T16:26:50Z,2018-05-13T16:27:18Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Reword message about arcs,2,[],https://github.com/MaslowCNC/Firmware/pull/446,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/446#issuecomment-388414744,"It seems like this message is giving folks the impression that something has gone wrong when really the machine is being smart and preventing an issue.
I think it makes sense to take out the words oops and error which make perfect sense when you understand the code but which are intimidating if you don't know what is going on","Congratulations on the pull request @BarbourSmith!!
Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/blurfl', 'https://github.com/CptanPanic']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,446,2018-05-11T16:26:50Z,2018-05-13T16:27:18Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Reword message about arcs,2,[],https://github.com/MaslowCNC/Firmware/pull/446,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/446#issuecomment-388416561,"It seems like this message is giving folks the impression that something has gone wrong when really the machine is being smart and preventing an issue.
I think it makes sense to take out the words oops and error which make perfect sense when you understand the code but which are intimidating if you don't know what is going on","Maybe ""large-radius arc"" instead of ""large arc""?",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,446,2018-05-11T16:26:50Z,2018-05-13T16:27:18Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Reword message about arcs,2,[],https://github.com/MaslowCNC/Firmware/pull/446,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/446#issuecomment-388425736,"It seems like this message is giving folks the impression that something has gone wrong when really the machine is being smart and preventing an issue.
I think it makes sense to take out the words oops and error which make perfect sense when you understand the code but which are intimidating if you don't know what is going on",I agree. Done!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,446,2018-05-11T16:26:50Z,2018-05-13T16:27:18Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Reword message about arcs,2,[],https://github.com/MaslowCNC/Firmware/pull/446,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/446#issuecomment-388638891,"It seems like this message is giving folks the impression that something has gone wrong when really the machine is being smart and preventing an issue.
I think it makes sense to take out the words oops and error which make perfect sense when you understand the code but which are intimidating if you don't know what is going on",Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,447,2018-05-11T17:53:16Z,2018-05-13T17:54:14Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Adds a link to a wiki page for when the sled is not keeping up,1,[],https://github.com/MaslowCNC/Firmware/pull/447,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/447,"Since this error catches most issues we've been getting a lot of folks asking about it in the forums.
The PR adds the URL of a wiki page with more information to the popup. I also removed the words about writing down the line number because the popup occurs both when a program is running and when there is no program running.
I would really like the link to be clickable, but opening a web browser from a popup is pretty tricky so this will have to work for now","Since this error catches most issues we've been getting a lot of folks asking about it in the forums.
The PR adds the URL of a wiki page with more information to the popup. I also removed the words about writing down the line number because the popup occurs both when a program is running and when there is no program running.
I would really like the link to be clickable, but opening a web browser from a popup is pretty tricky so this will have to work for now",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,447,2018-05-11T17:53:16Z,2018-05-13T17:54:14Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Adds a link to a wiki page for when the sled is not keeping up,1,[],https://github.com/MaslowCNC/Firmware/pull/447,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/447#issuecomment-388438156,"Since this error catches most issues we've been getting a lot of folks asking about it in the forums.
The PR adds the URL of a wiki page with more information to the popup. I also removed the words about writing down the line number because the popup occurs both when a program is running and when there is no program running.
I would really like the link to be clickable, but opening a web browser from a popup is pretty tricky so this will have to work for now","Congratulations on the pull request @BarbourSmith!!
Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/CptanPanic', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,447,2018-05-11T17:53:16Z,2018-05-13T17:54:14Z,2018-05-30T16:29:21Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Adds a link to a wiki page for when the sled is not keeping up,1,[],https://github.com/MaslowCNC/Firmware/pull/447,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/447#issuecomment-388644342,"Since this error catches most issues we've been getting a lot of folks asking about it in the forums.
The PR adds the URL of a wiki page with more information to the popup. I also removed the words about writing down the line number because the popup occurs both when a program is running and when there is no program running.
I would really like the link to be clickable, but opening a web browser from a popup is pretty tricky so this will have to work for now",Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,448,2018-05-11T18:01:31Z,2018-05-13T18:02:14Z,2018-05-30T16:29:22Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Move bracket in alarm code,1,[],https://github.com/MaslowCNC/Firmware/pull/448,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/448,When I was testing the reworded popup I noticed that the alarm triggered in every direction except when the right motor was moving to the left and I think this bracket needs to be moved over one place for the abs() to apply to the error and not the bool compare value üôÑ,When I was testing the reworded popup I noticed that the alarm triggered in every direction except when the right motor was moving to the left and I think this bracket needs to be moved over one place for the abs() to apply to the error and not the bool compare value üôÑ,True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,448,2018-05-11T18:01:31Z,2018-05-13T18:02:14Z,2018-05-30T16:29:22Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Move bracket in alarm code,1,[],https://github.com/MaslowCNC/Firmware/pull/448,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/448#issuecomment-388440288,When I was testing the reworded popup I noticed that the alarm triggered in every direction except when the right motor was moving to the left and I think this bracket needs to be moved over one place for the abs() to apply to the error and not the bool compare value üôÑ,"Congratulations on the pull request @BarbourSmith!!
Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/CptanPanic', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,448,2018-05-11T18:01:31Z,2018-05-13T18:02:14Z,2018-05-30T16:29:22Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Move bracket in alarm code,1,[],https://github.com/MaslowCNC/Firmware/pull/448,https://github.com/CptanPanic,3,https://github.com/MaslowCNC/Firmware/pull/448#issuecomment-388448359,When I was testing the reworded popup I noticed that the alarm triggered in every direction except when the right motor was moving to the left and I think this bracket needs to be moved over one place for the abs() to apply to the error and not the bool compare value üôÑ,"Good catch, those are tough ones to find.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,448,2018-05-11T18:01:31Z,2018-05-13T18:02:14Z,2018-05-30T16:29:22Z,MERGED,True,1,1,1,https://github.com/BarbourSmith,Move bracket in alarm code,1,[],https://github.com/MaslowCNC/Firmware/pull/448,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/448#issuecomment-388644794,When I was testing the reworded popup I noticed that the alarm triggered in every direction except when the right motor was moving to the left and I think this bracket needs to be moved over one place for the abs() to apply to the error and not the bool compare value üôÑ,Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,449,2018-05-11T19:11:04Z,2018-05-13T19:11:13Z,2018-06-18T17:52:50Z,MERGED,True,350,251,11,https://github.com/blurfl,Tle5206 release,30,[],https://github.com/MaslowCNC/Firmware/pull/449,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/449,"Merge the TLE5206 fork with the main. Most differences are found in System.cpp where board ID and pin assignments occur, and Motor.cpp where the pins get used.","Merge the TLE5206 fork with the main. Most differences are found in System.cpp where board ID and pin assignments occur, and Motor.cpp where the pins get used.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,449,2018-05-11T19:11:04Z,2018-05-13T19:11:13Z,2018-06-18T17:52:50Z,MERGED,True,350,251,11,https://github.com/blurfl,Tle5206 release,30,[],https://github.com/MaslowCNC/Firmware/pull/449,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/449#issuecomment-388458842,"Merge the TLE5206 fork with the main. Most differences are found in System.cpp where board ID and pin assignments occur, and Motor.cpp where the pins get used.","Congratulations on the pull request @blurfl!!
Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith', 'https://github.com/Bee91303']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,449,2018-05-11T19:11:04Z,2018-05-13T19:11:13Z,2018-06-18T17:52:50Z,MERGED,True,350,251,11,https://github.com/blurfl,Tle5206 release,30,[],https://github.com/MaslowCNC/Firmware/pull/449,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/449#issuecomment-388649088,"Merge the TLE5206 fork with the main. Most differences are found in System.cpp where board ID and pin assignments occur, and Motor.cpp where the pins get used.",Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,449,2018-05-11T19:11:04Z,2018-05-13T19:11:13Z,2018-06-18T17:52:50Z,MERGED,True,350,251,11,https://github.com/blurfl,Tle5206 release,30,[],https://github.com/MaslowCNC/Firmware/pull/449,https://github.com/Bee91303,4,https://github.com/MaslowCNC/Firmware/pull/449#issuecomment-392351553,"Merge the TLE5206 fork with the main. Most differences are found in System.cpp where board ID and pin assignments occur, and Motor.cpp where the pins get used.","This works on the board I built out - Thru hole, passes motor tests.  I have 2 motors and moved them around the board.  Maslow had an issue getting Z kits out and have since fixed it so I will have a Z motor soonish.",True,"{'THUMBS_UP': ['https://github.com/Bee91303', 'https://github.com/blurfl', 'https://github.com/GeroBH', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,450,2018-05-14T04:50:28Z,2018-05-16T04:51:15Z,2018-06-18T17:51:35Z,MERGED,True,0,1,1,https://github.com/blurfl,"Remove ""TLE5206-release firmware"" from sketch startup.",1,[],https://github.com/MaslowCNC/Firmware/pull/450,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/450,"This was useful before merging to the master, no longer needed.","This was useful before merging to the master, no longer needed.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,450,2018-05-14T04:50:28Z,2018-05-16T04:51:15Z,2018-06-18T17:51:35Z,MERGED,True,0,1,1,https://github.com/blurfl,"Remove ""TLE5206-release firmware"" from sketch startup.",1,[],https://github.com/MaslowCNC/Firmware/pull/450,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/450#issuecomment-388696446,"This was useful before merging to the master, no longer needed.","Congratulations on the pull request @blurfl!!
Now we need to decide as a community if we want to integrate these changes. You can vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a silly robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/CptanPanic']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,450,2018-05-14T04:50:28Z,2018-05-16T04:51:15Z,2018-06-18T17:51:35Z,MERGED,True,0,1,1,https://github.com/blurfl,"Remove ""TLE5206-release firmware"" from sketch startup.",1,[],https://github.com/MaslowCNC/Firmware/pull/450,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/450#issuecomment-389393635,"This was useful before merging to the master, no longer needed.",Woo!! Times up and we're ready to merge this pull request! Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/451,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392402071,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/bar,3,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392404749,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.",@blurfl I think you might be confused since I did not suggest anything like that :),True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392410197,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","Sorry for the incorrect reference, I've updated the comment to correct it. Thanks for your patience.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392878119,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","A radius of 1000 inches would create a 1.2"" high arc across a 96"" span, this would cut straight instead. Should the radius be larger, or is that case rare enough to ignore?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/davidelang,6,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392974395,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","where is the limit that triggers the math error? how many digits of precision
(and should we change the variables to double-precision floats to give more
usable significant digits)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392979043,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","where is the limit that triggers the math error?

in Issue #426 you suggested making some sample g-code files with large radius curves to see if they have problems. Have you had a chance to investigate that? The results would probably be helpful in this case.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392980124,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","should we change the variables to double-precision floats to give more usable significant digits

Unfortunately, on the Uno and other ATMEGA based boards, doubles occupy 4 bytes. That is, the double implementation is exactly the same as the float, with no gain in precision.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/davidelang,9,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-392981125,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","There isn't an 8 byte float available? not even with an alternate math library?

what about going to fixed-precision math?
‚Ä¶
On Tue, 29 May 2018, Scott Smith wrote:
 Unfortunately, on the Uno and other ATMEGA based boards, doubles occupy 4
 bytes. That is, the double implementation is exactly the same as the float,
 with no gain in precision.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/BarbourSmith,10,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-393006807,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.",My instinct is that when we are doing sin and cos on arcs with a radius of a mile we're never going to be able to compute that result accurate to within a mm. With arcs so large the right behavior is to treat the segment as a straight line and compute it as such. If the amount of the arc is much less than what we can measure it is safe to treat it as a straight line just like @blurfl has made it,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/MaslowCommunityGardenRobot,11,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-393009153,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/beretta42,12,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-394094225,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.",Sorry to drag this issue/commit up again.  1000 inches does not make a mile :)  I did a back-of-envelope calculation.. a circle with radius 1000 inches (25400mm)  yields an arc height of approximately 29mm.  This seems far from a straight line.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-394097670,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","1000 inches does not make a mile

That's true, it's only 83 feet. With that radius the arc across 8 feet would be 1.15 inches high. The 1000 inch value was picked out of the air, tested and found to correct the issue being addressed by a fair margin. The troublesome arcs in the forum discussion were in the quarter- to half-mile range, with mantissas out to four places.
In post-processing a complex shape, using different resolution settings, using an arc height less than that or converting the arc to smaller straight lines would create a file that would cut without the straight-line approximation.
We're bumping our noses on the limits of the floating point implementation versus various methods used by assorted post processors to approximate complex curves. Add to that the time and processing power limits of a low-cost microprocessor doing interrupt-driven PID control on a machine with six interrupt sources - there are many opportunities for contribution! üòÅ",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/davidelang,14,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-395928540,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","so, a floating point number precision is 24 bits, or just over 7 decimal digits.
( https://en.wikipedia.org/wiki/Single-precision_floating-point_format )

so if we are tracking things to 0.001mm, that means that around a radius of
10,000mm things break

unfortunantly, according to http://www.handymath.com/cgi-bin/arc18.cgi this
still has an arc height of 74mm over a 8' wide cut.

you have to go to a radius of 1,000,000 to get the arch height down to <1mm,
about 100x what we can do with floating point.

Now, if instead of tracking down to 0.001mm, we only track down to 0.1mm, then a
limit of 10,000mm for the radius would get the arc height that we throw away
down to <1mm, but I think that only tracking positions down to 0.1mm is going to
end up causing problems elsewhere.

I think that we are going to end up having to bite the bullet and move to fixed
point math for this to survive the single-precision limit (and that will wreak
havoc with the trig functions)

David Lang
‚Ä¶
On Tue, 29 May 2018, BarbourSmith wrote:
 My instinct is that when we are doing sin and cos on arcs with a radius of a mile we're never going to be able to compute that result accurate to within a mm. With arcs so large the right behavior is to treat the segment as a straight line and compute it as such. If the amount of the arc is much less than what we can measure it is safe to treat it as a straight line just like @blurfl has made it",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/davidelang,15,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-395929194,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","As I just noted ( I think in a different thread, apologies if this is a dup
here)

if we are trying to track things to 0.001mm, then we run out of precision on the
float around 10,000mm, and at that point the arc that we would have is 74mm
high.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/blurfl,16,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-395934645,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","move to fixed point math

AVR fixed point is pretty rare, Arduino compatible implementations are very rare. Do you have one in mind?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,451,2018-05-28T02:20:36Z,2018-05-30T02:21:14Z,2018-06-18T17:51:40Z,MERGED,True,1,1,1,https://github.com/blurfl,Convert arc with radius greater than 25400mm to a straight line,2,[],https://github.com/MaslowCNC/Firmware/pull/451,https://github.com/davidelang,17,https://github.com/MaslowCNC/Firmware/pull/451#issuecomment-395936614,"PR#420 added code to convert problematic G2/G3 arcs to G2 lines. This adds arcs with radius greater than 25400mm to the list of items converted.
@BarbourSmith suggested 'a few thousand inches' in Issue #426 , this is less than that.
This addresses the issue discussed in this forum topic.","On Fri, 8 Jun 2018, Scott Smith wrote:
 ```
 move to fixed point math
 ```
 AVR fixed point is pretty rare, Arduino compatible implementations are very rare. Do you have one in mind?
no, I am the type that would probably just open code some functions to do it.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,453,2018-06-05T18:29:10Z,2018-06-07T19:05:51Z,2018-07-26T20:10:12Z,MERGED,True,2,0,1,https://github.com/BarbourSmith,Turn off the warning for the G40 command,1,[],https://github.com/MaslowCNC/Firmware/pull/453,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/453,"G40 turns off cutter compensation which is already off so no need to do anything or spawn a warning.
See thread: https://forums.maslowcnc.com/t/command-g40-unsupported-and-ignored/4193/20","G40 turns off cutter compensation which is already off so no need to do anything or spawn a warning.
See thread: https://forums.maslowcnc.com/t/command-g40-unsupported-and-ignored/4193/20",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,453,2018-06-05T18:29:10Z,2018-06-07T19:05:51Z,2018-07-26T20:10:12Z,MERGED,True,2,0,1,https://github.com/BarbourSmith,Turn off the warning for the G40 command,1,[],https://github.com/MaslowCNC/Firmware/pull/453,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/453#issuecomment-394819079,"G40 turns off cutter compensation which is already off so no need to do anything or spawn a warning.
See thread: https://forums.maslowcnc.com/t/command-g40-unsupported-and-ignored/4193/20","Congratulations on the pull request @BarbourSmith
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/davidelang'], 'THUMBS_DOWN': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,453,2018-06-05T18:29:10Z,2018-06-07T19:05:51Z,2018-07-26T20:10:12Z,MERGED,True,2,0,1,https://github.com/BarbourSmith,Turn off the warning for the G40 command,1,[],https://github.com/MaslowCNC/Firmware/pull/453,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/453#issuecomment-395530976,"G40 turns off cutter compensation which is already off so no need to do anything or spawn a warning.
See thread: https://forums.maslowcnc.com/t/command-g40-unsupported-and-ignored/4193/20",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,454,2018-06-12T05:48:28Z,2018-06-12T11:55:33Z,2018-06-12T20:57:27Z,CLOSED,False,32,12,6,https://github.com/neilvangeffen,Guestbook - Ned Pull Request test,3,['invalid'],https://github.com/MaslowCNC/Firmware/pull/454,https://github.com/neilvangeffen,1,https://github.com/MaslowCNC/Firmware/pull/454,Put my name in the guest book. Time to do a pull request and see if it all worked out ok!,Put my name in the guest book. Time to do a pull request and see if it all worked out ok!,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,454,2018-06-12T05:48:28Z,2018-06-12T11:55:33Z,2018-06-12T20:57:27Z,CLOSED,False,32,12,6,https://github.com/neilvangeffen,Guestbook - Ned Pull Request test,3,['invalid'],https://github.com/MaslowCNC/Firmware/pull/454,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/454#issuecomment-396475663,Put my name in the guest book. Time to do a pull request and see if it all worked out ok!,"Congratulations on the pull request @neilvangeffen
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot'], 'THUMBS_DOWN': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,454,2018-06-12T05:48:28Z,2018-06-12T11:55:33Z,2018-06-12T20:57:27Z,CLOSED,False,32,12,6,https://github.com/neilvangeffen,Guestbook - Ned Pull Request test,3,['invalid'],https://github.com/MaslowCNC/Firmware/pull/454,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/454#issuecomment-396563275,Put my name in the guest book. Time to do a pull request and see if it all worked out ok!,"First, welcome @neilvangeffen ! Unfortunately, it looks like the test has gone awry - beyond just entering into the Guestbook, it would make many fundamental changes to the master firmware. I'm sure that's not what you wanted, so I'm going to close it rather than let it stand.
Are you experimenting with an XY version? You will want to keep that code in a local branch separate from the master branch. As it stands right now, the master firmware for everyone would be changed to XY by this pull request.
I would suggest making a branch for 'sign-the-guestbook', and a separate one for 'investigate-XY-operation'. Then create a pull request for the guestbook one, but not for the branch you'll use for your local development. A pull request is only needed when you want to propose changing the firmware for everyone to use what you've written.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,454,2018-06-12T05:48:28Z,2018-06-12T11:55:33Z,2018-06-12T20:57:27Z,CLOSED,False,32,12,6,https://github.com/neilvangeffen,Guestbook - Ned Pull Request test,3,['invalid'],https://github.com/MaslowCNC/Firmware/pull/454,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/454#issuecomment-396661240,Put my name in the guest book. Time to do a pull request and see if it all worked out ok!,"Very close though! It looks like the PR to sign the guest book wen't perfectly, all that you want to change for the next one is to make a new branch before working on the XY code.
Thanks for using the guest book! It's been neglected recently and it's good to see it in use again. üëç üëç",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,454,2018-06-12T05:48:28Z,2018-06-12T11:55:33Z,2018-06-12T20:57:27Z,CLOSED,False,32,12,6,https://github.com/neilvangeffen,Guestbook - Ned Pull Request test,3,['invalid'],https://github.com/MaslowCNC/Firmware/pull/454,https://github.com/neilvangeffen,5,https://github.com/MaslowCNC/Firmware/pull/454#issuecomment-396731329,Put my name in the guest book. Time to do a pull request and see if it all worked out ok!,"Cheers guys. Will try again :-) I thought pull request was for just a specific commit, not a whole branch.
So now i know and will get it right next time. Cheers!",True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/blurfl', 'https://github.com/BarbourSmith'], 'HOORAY': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,455,2018-06-19T18:25:14Z,2018-06-21T19:05:18Z,2018-07-26T20:10:11Z,MERGED,True,28,1,5,https://github.com/BarbourSmith,Add support for M106 and M107,2,[],https://github.com/MaslowCNC/Firmware/pull/455,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/455,"This PR adds support for using the M106 and M107 to turn on and off a laser diode controlled by port AUX2.
This has not been tested with a laser since I don't have one.
Original request can be found in the forums here:
https://forums.maslowcnc.com/t/laser-engrave-project-with-maslow-need-help-please/4363","This PR adds support for using the M106 and M107 to turn on and off a laser diode controlled by port AUX2.
This has not been tested with a laser since I don't have one.
Original request can be found in the forums here:
https://forums.maslowcnc.com/t/laser-engrave-project-with-maslow-need-help-please/4363",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,455,2018-06-19T18:25:14Z,2018-06-21T19:05:18Z,2018-07-26T20:10:11Z,MERGED,True,28,1,5,https://github.com/BarbourSmith,Add support for M106 and M107,2,[],https://github.com/MaslowCNC/Firmware/pull/455,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/455#issuecomment-398510437,"This PR adds support for using the M106 and M107 to turn on and off a laser diode controlled by port AUX2.
This has not been tested with a laser since I don't have one.
Original request can be found in the forums here:
https://forums.maslowcnc.com/t/laser-engrave-project-with-maslow-need-help-please/4363","Congratulations on the pull request @BarbourSmith
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/GeroBH']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,455,2018-06-19T18:25:14Z,2018-06-21T19:05:18Z,2018-07-26T20:10:11Z,MERGED,True,28,1,5,https://github.com/BarbourSmith,Add support for M106 and M107,2,[],https://github.com/MaslowCNC/Firmware/pull/455,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/455#issuecomment-399210530,"This PR adds support for using the M106 and M107 to turn on and off a laser diode controlled by port AUX2.
This has not been tested with a laser since I don't have one.
Original request can be found in the forums here:
https://forums.maslowcnc.com/t/laser-engrave-project-with-maslow-need-help-please/4363",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,456,2018-07-07T01:31:01Z,2018-07-09T02:05:20Z,2019-06-22T06:34:34Z,MERGED,True,2,0,1,https://github.com/blurfl,B11 should not trigger position error alarm,1,[],https://github.com/MaslowCNC/Firmware/pull/456,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/456,"The B11 gcode moves a motor at speed S for T seconds. It should not trigger the position error alarm as it is a testing gcode.
Usage example (moves the left motor at speed 200 for 2 seconds:
B11 L1 S200 T2
(S)peed accepts a float but treats that as an integer 0..255
(T)ime is a float","The B11 gcode moves a motor at speed S for T seconds. It should not trigger the position error alarm as it is a testing gcode.
Usage example (moves the left motor at speed 200 for 2 seconds:
B11 L1 S200 T2
(S)peed accepts a float but treats that as an integer 0..255
(T)ime is a float",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,456,2018-07-07T01:31:01Z,2018-07-09T02:05:20Z,2019-06-22T06:34:34Z,MERGED,True,2,0,1,https://github.com/blurfl,B11 should not trigger position error alarm,1,[],https://github.com/MaslowCNC/Firmware/pull/456,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/456#issuecomment-403181355,"The B11 gcode moves a motor at speed S for T seconds. It should not trigger the position error alarm as it is a testing gcode.
Usage example (moves the left motor at speed 200 for 2 seconds:
B11 L1 S200 T2
(S)peed accepts a float but treats that as an integer 0..255
(T)ime is a float","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,456,2018-07-07T01:31:01Z,2018-07-09T02:05:20Z,2019-06-22T06:34:34Z,MERGED,True,2,0,1,https://github.com/blurfl,B11 should not trigger position error alarm,1,[],https://github.com/MaslowCNC/Firmware/pull/456,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/456#issuecomment-403339242,"The B11 gcode moves a motor at speed S for T seconds. It should not trigger the position error alarm as it is a testing gcode.
Usage example (moves the left motor at speed 200 for 2 seconds:
B11 L1 S200 T2
(S)peed accepts a float but treats that as an integer 0..255
(T)ime is a float",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,456,2018-07-07T01:31:01Z,2018-07-09T02:05:20Z,2019-06-22T06:34:34Z,MERGED,True,2,0,1,https://github.com/blurfl,B11 should not trigger position error alarm,1,[],https://github.com/MaslowCNC/Firmware/pull/456,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/456#issuecomment-487388252,"The B11 gcode moves a motor at speed S for T seconds. It should not trigger the position error alarm as it is a testing gcode.
Usage example (moves the left motor at speed 200 for 2 seconds:
B11 L1 S200 T2
(S)peed accepts a float but treats that as an integer 0..255
(T)ime is a float","That's a good find! A PR to correct that would be great. Very glad to see the details checked, code polished.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,456,2018-07-07T01:31:01Z,2018-07-09T02:05:20Z,2019-06-22T06:34:34Z,MERGED,True,2,0,1,https://github.com/blurfl,B11 should not trigger position error alarm,1,[],https://github.com/MaslowCNC/Firmware/pull/456,https://github.com/esspe2,5,https://github.com/MaslowCNC/Firmware/pull/456#issuecomment-487415842,"The B11 gcode moves a motor at speed S for T seconds. It should not trigger the position error alarm as it is a testing gcode.
Usage example (moves the left motor at speed 200 for 2 seconds:
B11 L1 S200 T2
(S)peed accepts a float but treats that as an integer 0..255
(T)ime is a float","Hi,
Thanks for your nice reply!
PR seemed daunting, but I should have managed that by now, back to Git, finally using ssh keys btw.
Now, ""my"" PR #492 seems to include both the guestbook and the change, we'll see if all goes well.


Regards,¬†--Stephane Peters¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬†¬†",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,456,2018-07-07T01:31:01Z,2018-07-09T02:05:20Z,2019-06-22T06:34:34Z,MERGED,True,2,0,1,https://github.com/blurfl,B11 should not trigger position error alarm,1,[],https://github.com/MaslowCNC/Firmware/pull/456,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/456#issuecomment-487427881,"The B11 gcode moves a motor at speed S for T seconds. It should not trigger the position error alarm as it is a testing gcode.
Usage example (moves the left motor at speed 200 for 2 seconds:
B11 L1 S200 T2
(S)peed accepts a float but treats that as an integer 0..255
(T)ime is a float","Great to see you @blurfl, we've missed you üòÄ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,458,2018-07-19T00:53:37Z,2018-07-21T01:05:24Z,2018-07-26T20:10:10Z,MERGED,True,13,3,3,https://github.com/BarbourSmith,Add system status to position updates,2,[],https://github.com/MaslowCNC/Firmware/pull/458,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/458,This PR is intended to address the issue #457,This PR is intended to address the issue #457,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,458,2018-07-19T00:53:37Z,2018-07-21T01:05:24Z,2018-07-26T20:10:10Z,MERGED,True,13,3,3,https://github.com/BarbourSmith,Add system status to position updates,2,[],https://github.com/MaslowCNC/Firmware/pull/458,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/458#issuecomment-406121271,This PR is intended to address the issue #457,"Congratulations on the pull request @BarbourSmith
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,458,2018-07-19T00:53:37Z,2018-07-21T01:05:24Z,2018-07-26T20:10:10Z,MERGED,True,13,3,3,https://github.com/BarbourSmith,Add system status to position updates,2,[],https://github.com/MaslowCNC/Firmware/pull/458,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/458#issuecomment-406759466,This PR is intended to address the issue #457,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,460,2018-08-16T15:45:03Z,2018-08-18T16:05:21Z,2018-08-18T16:05:21Z,MERGED,True,1,1,1,https://github.com/ted1735,Update INSTRUCTIONS.md,2,[],https://github.com/MaslowCNC/Firmware/pull/460,https://github.com/ted1735,1,https://github.com/MaslowCNC/Firmware/pull/460,the link does not show up in the community garden. not sure why but it may be the period at the end of the sentence just deleted the period so it doesn't interfere with link...,the link does not show up in the community garden. not sure why but it may be the period at the end of the sentence just deleted the period so it doesn't interfere with link...,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,460,2018-08-16T15:45:03Z,2018-08-18T16:05:21Z,2018-08-18T16:05:21Z,MERGED,True,1,1,1,https://github.com/ted1735,Update INSTRUCTIONS.md,2,[],https://github.com/MaslowCNC/Firmware/pull/460,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/460#issuecomment-413598209,the link does not show up in the community garden. not sure why but it may be the period at the end of the sentence just deleted the period so it doesn't interfere with link...,"Congratulations on the pull request @ted1735
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/ted1735'], 'THUMBS_DOWN': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,460,2018-08-16T15:45:03Z,2018-08-18T16:05:21Z,2018-08-18T16:05:21Z,MERGED,True,1,1,1,https://github.com/ted1735,Update INSTRUCTIONS.md,2,[],https://github.com/MaslowCNC/Firmware/pull/460,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/460#issuecomment-413601299,the link does not show up in the community garden. not sure why but it may be the period at the end of the sentence just deleted the period so it doesn't interfere with link...,"Good catch, and a welcome contribution!
Removing the period probably won't have the desired effect, though. Take a look at the link in Step two which is properly formatted as ""[description] (link)"".
How about altering this PR to implement that format?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,460,2018-08-16T15:45:03Z,2018-08-18T16:05:21Z,2018-08-18T16:05:21Z,MERGED,True,1,1,1,https://github.com/ted1735,Update INSTRUCTIONS.md,2,[],https://github.com/MaslowCNC/Firmware/pull/460,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/460#issuecomment-413618862,the link does not show up in the community garden. not sure why but it may be the period at the end of the sentence just deleted the period so it doesn't interfere with link...,"Sorry, my comment was poorly structured and got rendered instead of showing what I meant. A link should have two parts, a description enclosed in square brackets followed by the link enclosed in parentheses, like so:
[https://github.com/MaslowCNC/Firmware/releases](https://github.com/MaslowCNC/Firmware/release)

Let's keep the https link as more secure...",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,460,2018-08-16T15:45:03Z,2018-08-18T16:05:21Z,2018-08-18T16:05:21Z,MERGED,True,1,1,1,https://github.com/ted1735,Update INSTRUCTIONS.md,2,[],https://github.com/MaslowCNC/Firmware/pull/460,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/460#issuecomment-414068557,the link does not show up in the community garden. not sure why but it may be the period at the end of the sentence just deleted the period so it doesn't interfere with link...,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,463,2018-09-06T09:34:42Z,2018-09-08T10:05:25Z,2018-09-08T10:05:25Z,MERGED,True,3,1,2,https://github.com/Morriz1971,Added to guestbook,7,[],https://github.com/MaslowCNC/Firmware/pull/463,https://github.com/Morriz1971,1,https://github.com/MaslowCNC/Firmware/pull/463,Add my name to the GuestBook.,Add my name to the GuestBook.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,463,2018-09-06T09:34:42Z,2018-09-08T10:05:25Z,2018-09-08T10:05:25Z,MERGED,True,3,1,2,https://github.com/Morriz1971,Added to guestbook,7,[],https://github.com/MaslowCNC/Firmware/pull/463,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/463#issuecomment-419169616,Add my name to the GuestBook.,"Congratulations on the pull request @Morriz1971
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,463,2018-09-06T09:34:42Z,2018-09-08T10:05:25Z,2018-09-08T10:05:25Z,MERGED,True,3,1,2,https://github.com/Morriz1971,Added to guestbook,7,[],https://github.com/MaslowCNC/Firmware/pull/463,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/463#issuecomment-419628943,Add my name to the GuestBook.,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,464,2018-09-26T21:38:13Z,2018-09-28T22:05:24Z,2019-06-22T06:31:43Z,MERGED,True,2,1,1,https://github.com/blurfl,"If zEncoderSteps is negative, use that same sign in G38.2 gcode",1,[],https://github.com/MaslowCNC/Firmware/pull/464,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/464,"Make G38.2 aware of inverted z axis motion.
Some non-stock z motors reverse the motor and encoder leads. Some users accomodate this by making the GC setting ""Z-Axis Encoder Steps per Revolution"" negative. This commit uses the sign of that 'sysSettings.zEncoderSteps' firmware setting to adjust the direction of travel inGcode.cpp:G38().","Make G38.2 aware of inverted z axis motion.
Some non-stock z motors reverse the motor and encoder leads. Some users accomodate this by making the GC setting ""Z-Axis Encoder Steps per Revolution"" negative. This commit uses the sign of that 'sysSettings.zEncoderSteps' firmware setting to adjust the direction of travel inGcode.cpp:G38().",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,464,2018-09-26T21:38:13Z,2018-09-28T22:05:24Z,2019-06-22T06:31:43Z,MERGED,True,2,1,1,https://github.com/blurfl,"If zEncoderSteps is negative, use that same sign in G38.2 gcode",1,[],https://github.com/MaslowCNC/Firmware/pull/464,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/464#issuecomment-424885161,"Make G38.2 aware of inverted z axis motion.
Some non-stock z motors reverse the motor and encoder leads. Some users accomodate this by making the GC setting ""Z-Axis Encoder Steps per Revolution"" negative. This commit uses the sign of that 'sysSettings.zEncoderSteps' firmware setting to adjust the direction of travel inGcode.cpp:G38().","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith', 'https://github.com/GeroBH']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,464,2018-09-26T21:38:13Z,2018-09-28T22:05:24Z,2019-06-22T06:31:43Z,MERGED,True,2,1,1,https://github.com/blurfl,"If zEncoderSteps is negative, use that same sign in G38.2 gcode",1,[],https://github.com/MaslowCNC/Firmware/pull/464,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/464#issuecomment-425578979,"Make G38.2 aware of inverted z axis motion.
Some non-stock z motors reverse the motor and encoder leads. Some users accomodate this by making the GC setting ""Z-Axis Encoder Steps per Revolution"" negative. This commit uses the sign of that 'sysSettings.zEncoderSteps' firmware setting to adjust the direction of travel inGcode.cpp:G38().",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,465,2018-10-02T07:40:28Z,2018-10-04T08:05:32Z,2019-06-22T06:31:38Z,MERGED,True,1,0,1,https://github.com/blurfl,add missing setting to defaults in Settings:settingsReset(),1,[],https://github.com/MaslowCNC/Firmware/pull/465,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/465,"settingsReset() does not include a default value for chainLength. Without a value for chainLength,  kinematics fails with:
""Message: Unable to find valid machine position for chain lengths ""

GC responds by sending it's own setting value ($10), but the kinematics error requires the user to recalibrate the chains.","settingsReset() does not include a default value for chainLength. Without a value for chainLength,  kinematics fails with:
""Message: Unable to find valid machine position for chain lengths ""

GC responds by sending it's own setting value ($10), but the kinematics error requires the user to recalibrate the chains.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,465,2018-10-02T07:40:28Z,2018-10-04T08:05:32Z,2019-06-22T06:31:38Z,MERGED,True,1,0,1,https://github.com/blurfl,add missing setting to defaults in Settings:settingsReset(),1,[],https://github.com/MaslowCNC/Firmware/pull/465,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/465#issuecomment-426185543,"settingsReset() does not include a default value for chainLength. Without a value for chainLength,  kinematics fails with:
""Message: Unable to find valid machine position for chain lengths ""

GC responds by sending it's own setting value ($10), but the kinematics error requires the user to recalibrate the chains.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/GeroBH', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,465,2018-10-02T07:40:28Z,2018-10-04T08:05:32Z,2019-06-22T06:31:38Z,MERGED,True,1,0,1,https://github.com/blurfl,add missing setting to defaults in Settings:settingsReset(),1,[],https://github.com/MaslowCNC/Firmware/pull/465,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/465#issuecomment-426923648,"settingsReset() does not include a default value for chainLength. Without a value for chainLength,  kinematics fails with:
""Message: Unable to find valid machine position for chain lengths ""

GC responds by sending it's own setting value ($10), but the kinematics error requires the user to recalibrate the chains.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,1,https://github.com/MaslowCNC/Firmware/pull/467,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430102266,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Congratulations on the pull request @johnboiles
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/johnboiles'], 'LAUGH': ['https://github.com/johnboiles'], 'THUMBS_DOWN': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,3,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430102607,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Some of the commits in this commit history are related to @madgrizzle's changes to chain tolerance, which I can post in a followup PR. I reverted those changes in ae35481 so that this would be a single-feature PR.
I'd recommend either squash-merging this into master OR I could squash together some of the individual commits to make more sense independently. Let me know if anyone has a strong preference.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430106490,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Mon, 15 Oct 2018, John Boiles wrote:
 Some of the commits in this commit history are related to @madgrizzle's
 changes to chain tolerance, which I can post in a followup PR. I reverted
 those changes in ae35481 so that this would be a single-feature PR.

 I'd recommend either squash-merging this into master OR I could squash
 together some of the individual commits to make more sense independently. Let
 me know if anyone has a strong preference.
I think we should hold off on this for a bit, we need to be simplifying the math
to figure things out, not add more variation.

David Lang",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430106974,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","this isn't a long-term no, just a short term one.
please reorder/squash/rebase to make things clearer but I think we will end up wanting to do tilt correction after we do other stuff",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,6,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430107913,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",Rebased to two commits -- changes from @madgrizzle and then my small fixes on top of that.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430116416,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","You and @madgrizzle have been doing much good work, it's great to see it beginning to bear fruit. The G2/G3 fix(separated from the nomenclature changes) will be most welcome.
However, I agree with @DavidLang that this one might best wait until it is needed in the Kinematics calculations. At that point, it will need documentation on what units to use and how to measure it.
A couple other comments - where does the number '0.0174532925199433' come from? Too, on the Arduino, Floats have only 6-7 decimal digits of precision.
Finally, when preparing a merge, how about unselecting all the unintentional little white space changes that creep into the files.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430117330,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","@BarbourSmith is off line for a couple days, how about closing this for a few days until he gets back?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,9,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430231826,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","This change was made to assist in arriving at a solution to the ""holey maslow"" calibration routine (which is on the back burner for the time being).  My theory is that some of the errors people see in their calibration, including me, is a result of a slightly out-of-level top beam (there are other factors.. this is just one of them).  This method uses the top beam tilt to calculate discrete coordinates for each motor.  The affect of tilt on the x coordinates is minute, but its significant on the y coordinates.  The FW currently assumes that the center of the workarea is perfectly centered between the motors (X coordinates of motors are calculated by dividing the distance between motors by two) and it is perfectly level (Y coordinates of each motor are equal to the height of motors).  If we strive for 0.5 mm accuracy, I believe that it's important that either this assumption is correct or that if its not correct, we account for it.  How accurate can we reasonably measure with a level?  Google search says the best bubble level is accurate to 0.3 degrees.  If I calculate it correctly, a 0.3 degree tilt results in one motor being ~19 mm higher than the other.  The current calibration model doesn't consider this at all and I think that's a source of error.
We can approach this issue one of three ways.. 1) ignore it, which I think is wrong; 2) incorporate top beam tilt into the calibration routine or, 3) let people manually measure tilt and enter it (of course, if you can measure it you may be able to correct it).  The problem with incorporating it into the calibration routine is that the current calibration routine is somewhat flawed.  I spent a lot of time on ""holey maslow"" but I don't think its the end-solution.  The current routine could use some refinement in how adjusts the parameters, but it has that cut34offset fudge factor in it that I think is problematic (I think that's where the top beam tilt devil is hiding).  We really should be reporting that value at the end of calibration to give people an indication of how ""well"" their calibration is.  I think some work will be needed to the calibration routine to bake in top beam tilt.
My opinion is that if we get this out there and let some people with calibration issues manually try it, we might get some feedback.. either positive or negative.  There's only so much @johnboiles and I can do to test things out.  To use it, I would suggest people download a level app on their phone, place their phone on the top beam and enter the measurement into the software and then rerun calibration and test to see if there is an improvement.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,10,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430233574,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","A couple other comments - where does the number '0.0174532925199433' come from?

It's just a conversion factor to take degrees to radians (Pi/180)... yeah, too many digits but I copied and pasted it from excel.  Didn't see the harm.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,11,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430235113,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","And this probably deserves its own thread somewhere, but who is developing software or working on things?  I know @johnboiles and I are doing work, but is anyone else?  I saw @blurfl posted an issue to FW a couple days ago, but that's about all.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,12,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430283379,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I think we should hold off on this for a bit, we need to be simplifying the math
to figure things out, not add more variation.

I'll leave it to you and @madgrizzle to debate the value of beam tilt correction. In my opinion it can't hurt. It seems like a great experimental feature that the community should continue to explore. I think there's value in making experimental features easier to try for people that don't feel comfortable running from source.
With regards to simplification, I think the change here that breaks out separate variables for leftMotorX, leftMotorY, rightMotorX, rightMotorY is a simplification. In the existing code, the _xCordOfMotor variable really means more of 'x distance from the center' and it's then multiplied by -1 to get get the actual x coordinate of the left motor. Even if we decide not to merge top beam correction, what do you think about keeping the separate leftMotorX, leftMotorY, rightMotorX, rightMotorY variables? I think it's overall more readable. To make the existing code even more readable we could separate the top beam correction into separate local variables
float topBeamTiltXCorrectionFactor = cos(sysSettings.topBeamTilt*0.0174532925199433);
float topBeamTiltYCorrectionFactor = sin(sysSettings.topBeamTilt*0.0174532925199433);

leftMotorX = topBeamTiltXCorrectionFactor*sysSettings.distBetweenMotors/-2.0;
leftMotorY = topBeamTiltYCorrectionFactor*sysSettings.distBetweenMotors/-2.0 + (sysSettings.motorOffsetY+sysSettings.machineHeight/2.0);
rightMotorX = topBeamTiltXCorrectionFactor*sysSettings.distBetweenMotors+leftMotorX;
rightMotorY = topBeamTiltYCorrectionFactor*sysSettings.distBetweenMotors/2.0 + (sysSettings.motorOffsetY+sysSettings.machineHeight/2.0);",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430289398,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I agree with @DavidLang that this should wait until it is

It's just a conversion factor to take degrees to radians (Pi/180)... yeah, too many digits but I copied and pasted it from excel. Didn't see the harm.

In the interest of clarity, how about using a named constant for it? The number of digits isn't directly harmful, but rather misleading.

who is developing software or working on things?

While github's 'Insights' view shows recent activity, it doesn't show what anyone is working on that hasn't been submitted. I've got irons in the fire looking at different processors and encoders. The Teensy 3.5/3.6 would bring welcome full floating point accuracy and a nice jump in speed. Separating the encoders from the motors could exchange chain sag for sag of a different, possibly lighter line. Neither ready for prime time, though.

If I calculate it correctly, a 0.3 degree tilt results in one motor being ~19 mm higher than the other. The current calibration model doesn't consider this at all and I think that's a source of error.

I think this is a good example of something that would be better addressed by a simple hardware fix (3/4"" or 19mm shim under a frame leg) than a software complication. That hardware approach would be pretty easy to test for someone set up to do the accuracy tests. Math on the Arduino platform is not the strong suit, and should be avoided when simpler solutions are available.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,14,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430290807,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","However, I agree with @DavidLang that this one might best wait until it is needed in the Kinematics calculations. At that point, it will need documentation on what units to use and how to measure it.

Are you referring to the calibration routine? I've seen reports in the forums of people like @dustcloud (in this post) having better success using measured values. I personally had better success using hand-measured values than using the calibration routine. In my opinion, the more ways we can give users to represent the real-world dimensions of their build, the better, as long as the defaults are sane.

Finally, when preparing a merge, how about unselecting all the unintentional little white space changes that creep into the files.

I started to remove whitespace changes from @madgrizzle's commits but git wrestled me at every turn (since this change was originally spread across ~10 different commits). Turns out git add -p doesn't like committing whitespace-only changes. I'm open to reverting all these, but then I'll just need to fight them in the future. I think these particular whitespace changes (removing blank whitespace from ends of lines) are a net positive. But I don't feel too strongly, let me know if you do.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,15,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430294948,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","In the interest of clarity, how about using a named constant for it? The number of digits isn't directly harmful, but rather misleading

Looks like Arduino.h defines DEG_TO_RAD . We should use that.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,16,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430298355,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",Closing this until @BarbourSmith is back. Let's continue the discussion though.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,17,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430300407,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I think this is a good example of something that would be better addressed by a simple hardware fix (3/4"" or 19mm shim under a frame leg) than a software complication.

I built my frame on casters so I could move it and they don't have height adjusters.  I think my frame in itself is level, just that the shed it's in is not level.  I'm not trying to cut all the way to the edge of plywood so I'm not worried about the workarea being level, but I'd rather not start shimming the top beam/motor mount to overcome things.. If the top beam tilt value is zero, then there is no difference in behavior between this PR and the current branch.

Math on the Arduino platform is not the strong suit, and should be avoided when simpler solutions are available.

I'd argue that the math is technically simpler since the iterative process of triangularInverse doesn't have to calculate the motor positions (they are precalculated).",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,18,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430306520,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I think my frame in itself is level, just that the shed it's in is not level. I'm not trying to cut all the way to the edge of plywood so I'm not worried about the workarea being level, but I'd rather not start shimming the top beam/motor mount to overcome things..

Likewise, my shop floor is far from level, so I attached my frame to the ceiling. The ceiling is more level but certainly not level either. I tried my best to adjust where I mounted the beam to get it level, but it‚Äôs not quite perfect. My best physical adjustment would be to shim the motor mounts. But that‚Äôs going to be very difficult / slow to iterate on to find the right size shim. I‚Äôd much rather tweak this value a tiny bit and then see if my calibration improves",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,19,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430319823,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","It still hasn't been demonstrated that the firmware without these changes is sensitive to leveling. I can see that a ceiling-mounted frame would be difficult to adjust for the purpose of testing, but a floor-standing one is possible.
Shimming the top beam would be a step in the wrong direction, the beam wants to be parallel to the workarea and centered on it. Leveling a piece of equipment is a pretty standard requirement when precision is wanted.
To really prove the need, runs at level and positive and negative angle should show the magnitude of the discrepancies that vary with the angle and direction.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,20,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430330324,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","It still hasn't been demonstrated that the firmware without these changes is sensitive to leveling.

Maybe the simulator updates need to be added to the GC PR.. had forgot I did those.


I can see that a ceiling-mounted frame would be difficult to adjust for the purpose of testing, but a floor-standing one is possible.
Yes, but then every time I move it to get to a new sheet of plywood, I have to jack the thing up, remove the shim, lower the jack, move it, get the plywood, move it back, jack it up, reshim it, lower the jack.


Shimming the top beam would be a step in the wrong direction, the beam wants to be parallel to the workarea and centered on it. Leveling a piece of equipment is a pretty standard requirement when precision is wanted.

Yes, I agree.. if I was doing this commercially, I'd have a Rick Sanchez come and make my floor truly level (that's from an episode of a tv show).  But I'm not going to relevel my shed 0.2 degrees for a hobby.

To really prove the need, runs at level and positive and negative angle should show the magnitude of the discrepancies that vary with the angle and direction.

I think using the simulator shows the effects.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,21,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430332489,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Maybe the simulator updates need to be added to the GC PR.. had forgot I did those.

Oops I missed those changes.

It still hasn't been demonstrated that the firmware without these changes is sensitive to leveling.

At very least, an out-of level beam is going to affect the chain length measurements since we use the vertical sprocket to measure the chain to known lengths. But maybe if you could get the sprocket perfectly perpendicular to the angle of the beam, it wouldn't matter, as long as you don't care about alignment with the edges of the work piece. @madgrizzle does that sound right? The simulator is definitely going to show error, since it's showing you the alignment error to the work piece.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,22,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430333002,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I think using the simulator shows the effects.

I think what this simulator shows is the situation where the top beam isn't parallel to the workarea. I guess I misunderstood their purpose.
If that's what these settings are meant for, then adjusting the workarea sheet within the frame is a better answer, and is independent of the frames attachment to the floor or ceiling.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,23,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430335885,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, madgrizzle wrote:
 We can approach this issue one of three ways.. 1) ignore it, which I think is
 wrong; 2) incorporate top beam tilt into the calibration routine or, 3) let
 people manually measure tilt and enter it (of course, if you can measure it
 you may be able to correct it).
I am not saying we should ignore it. I'm taking the position that in the short
term we need to fix the calibration and kinematics and adding more complications
to the math are not good.

In the meantime, have people measure the tilt and correct it.

After we figure out the correct math for chain sag, and fix the calibration
routine to work for level machines, then adding this sort of thing to figure out
non-level machines is a good thing.

But in the meantime, it's just adding more variables to an already complex
problem.

David Lang
k",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,24,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430336867,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","an out-of level beam is going to affect the chain length measurements since we use the vertical sprocket to measure the chain to known lengths.

From above, we're talking about a 0.3 degree (19mm, 3/4"") tilt, on a 10-tooth sprocket with #25 chain that's 0.05mm error on each side. That's in the order of negligible. I think that there are larger errors to find and fix.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,25,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430337434,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, John Boiles wrote:
> However, I agree with @DavidLang that this one might best wait until it is
> needed in the Kinematics calculations. At that point, it will need
> documentation on what units to use and how to measure it.

 Are you referring to the calibration routine? I've seen reports in the forums
 of people like @dustcloud (in this
 [post](https://forums.maslowcnc.com/t/what-must-be-adjusted-to-correct-out-of-round-circles/3162/151))
 having better success using measured values. I personally had better success
 using hand-measured values than using the calibration routine. In my opinion,
 the more ways we can give users to represent the real-world dimensions of
 their build, the better, as long as the defaults are sane.
This is exactly why I don't want to add more variables, the existing routines
aren't working. As we add more variables it becomes harder to figure out what's
causing what. We've seen people changing the wrong thing because it made their
test at the center come out better, never mind that it resulted in more errors
away from the center.
> Finally, when preparing a merge, how about unselecting all the unintentional
> little white space changes that creep into the files.

 I started to remove whitespace changes from @madgrizzle's commits but git
 wrestled me at every turn (since this change was originally spread across ~10
 different commits). Turns out `git add -p` doesn't like committing
 whitespace-only changes. I'm open to reverting all these, but then I'll just
 need to fight them in the future. I think these particular whitespace changes
 (removing blank whitespace from ends of lines) are a net positive. But I don't
 feel too strongly, let me know if you do.
I think the whitespace cleanup is useful, but it should be it's own commit (if
not it's own PR)",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,26,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430339890,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, John Boiles wrote:
 At very least, an out-of level beam is going to affect the chain length
 measurements since we use the vertical sprocket to measure the chain to known
 lengths. But maybe if you could get the sprocket perfectly perpendicular to
 the angle of the beam, it wouldn't matter, as long as you don't care about
 alignment with the edges of the work piece. @madgrizzle does that sound right?
 The simulator is definitely going to show error, since it's showing you the
 alignment error to the work piece.
No, the tilt doesn't affect chain length. It affects the tension on the two
chains, which affects chain sag, which affects the effective chain length.

Since we don't have the correct math to represent chain sag, I think the
attampts to correct for motor position are probably going to be incorrect.",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,27,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430340003,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I think what this simulator shows is the situation where the top beam isn't parallel to the workarea. I guess I misunderstood their purpose.
If that's what these settings are meant for, then adjusting the workarea sheet within the frame is a better answer, and is independent of the frames attachment to the floor or ceiling.

I see what you are saying and yes, this shows things based upon the top beam not being parallel to the work area.  Maybe you have a point.. I'd have to add gravity to the simulator to truly show the effects and I had other things to work on.  I'm personally convinced it matters, but the optical calibration method I'm working on potentially mitigates it as well as a host of other things.  That's part of the reason why I asked if anyone else is developing for the maslow, because I'm not spending time on improving the current calibration routine or trying to figure out chain sag, chain tolerance, etc.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,28,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430340426,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, madgrizzle wrote:
> I can see that a ceiling-mounted frame would be difficult to adjust for the purpose of testing, but a floor-standing one is possible.
 Yes, but then every time I move it to get to a new sheet of plywood, I have to
 jack the thing up, remove the shim, lower the jack, move it, get the plywood,
 move it back, jack it up, reshim it, lower the jack.
no, just mark on the floor where the wheels are and position shims as needed,
roll off the shims to where your plywood is, roll back to the known position on
top of the shims.

David Lang",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,29,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430341492,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","No, the tilt doesn't affect chain length. It affects the tension on the two chains, which affects chain sag, which affects the effective chain length. Since we don't have the correct math to represent chain sag, I think the attampts to correct for motor position are probably going to be incorrect.

It doesn't affect chain length, just where the sled ends up based upon chain lengths that are improperly calculated.  Maybe you are correct that since triangularInverse doesn't take gravity into account, this won't give a perfect result.  I suspect if gives a better result, but that's just an hypothesis.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,30,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430341965,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","roll back to the known position on top of the shims.

so now I need to build ramps :)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,31,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430349981,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, madgrizzle wrote:
 so now I need to build ramps :)
Think of it as leveling the floor of your shed yourself :-)

David Lang",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,32,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430350391,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, madgrizzle wrote:
> No, the tilt doesn't affect chain length. It affects the tension on the two
> chains, which affects chain sag, which affects the effective chain length.
> Since we don't have the correct math to represent chain sag, I think the
> attampts to correct for motor position are probably going to be incorrect.

 It doesn't affect chain length, just where the sled ends up based upon chain
 lengths that are improperly calculated.  Maybe you are correct that since
 triangularInverse doesn't take gravity into account, this won't give a perfect
 result.  I suspect if gives a better result, but that's just an hypothesis.
I think we will eventually need to take this into account, but I think it's
premature to do so now.

David Lang",True,{'THUMBS_DOWN': ['https://github.com/davidelang']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,33,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430350904,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I think the whitespace cleanup is useful, but it should be it's own commit (if
not it's own PR)

I'm open to this, but I really don't want the job of whitespace wrangler. What do y'all think about using clang-format or some other automatic formatter so that we can have an automated tool that can handle whitespace / formatting consistency? That way devs don't have to spend time reverting whitespace fixes made automatically by their editor.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,34,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430352004,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","so now I need to build ramps :)

If your floor is that sloped, consider retractable casters. Put the frame on a firm footing and only use wheels when they're needed.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,35,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430356200,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, John Boiles wrote:
> I think the whitespace cleanup is useful, but it should be it's own commit (if
 not it's own PR)

 I'm open to this, but I really don't want the job of whitespace wrangler. What
 do y'all think about using clang-format or some other automatic formatter so
 that we can have an automated tool that can handle whitespace / formatting
 consistency? That way devs don't have to spend time reverting whitespace fixes
 made automatically by their editor.
I think it's good to have a PR checker that checks for bad whitespace, but I
really don't like the idea of having anything force corrections.

There are a number of tools available for developers to clean up their code
before they check it in (lint for C/C++ programs see
https://en.wikipedia.org/wiki/Lint_(software) ). I think it would be a good idea
to define a code style to have lint enforce on the firmware (python has a
separate code style checker) and then see if we can get the helpful robot to run
these checks and report on the result.

Then right after a release, let's have someone do a whitespace/code style
cleanup and commit it.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,36,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430358562,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","whitespace wrangler

At present, that job amounts to asking a contributor to clean up the submission using the 'Tools/AutoFormat' in the Arduino IDE.

clang-format or some other automatic formatter

So long as it's available on all platforms and reasonably easy for a contributor to set up and use, great!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,37,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430359462,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Then right after a release, let's have someone do a whitespace/code style
cleanup and commit it.

If we use the IDE AutoFormat tool, it would be available to all. Asking a contributor to run that on a submission seems reasonable.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,38,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430361065,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I think it's good to have a PR checker that checks for bad whitespace, but I
really don't like the idea of having anything force corrections.


At present, that job amounts to asking a contributor to clean up the submission using the 'Tools/AutoFormat' in the Arduino IDE.

Just to be clear, y'all are asking me to revert good (as defined as consistent with the majority of the rest of the files in this project) whitespace changes in files that are modified in this PR.
I bet running 'Tools/AutoFormat' here would add a whole lot more whitespace changes to this PR.
I'm fine with either. I just want guidance on whether we want to do sweeping formatting fixes using an automated tool, OR optimize PRs to minimize non-code-related changes.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,39,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430361468,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, Scott Smith wrote:
> Then right after a release, let's have someone do a whitespace/code style
 cleanup and commit it.

 If we use the IDE AutoFormat tool, it would be available to all. Asking a contributor to run that on a submission seems reasonable.
Long term, this is what we should do. But when multiple people are working and
the old code is not clean, making the change can break other people's patches.

That's why I was suggesting that right after a release we do the cleanup, and
then push people to use the arduino autoformat (or equivalent) to keep things
clean.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,40,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430362531,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, John Boiles wrote:
> I think it's good to have a PR checker that checks for bad whitespace, but I
 really don't like the idea of having anything force corrections.

> At present, that job amounts to asking a contributor to clean up the submission using the 'Tools/AutoFormat' in the Arduino IDE.

 Just to be clear, y'all are asking me to revert _good_ (as defined as consistent with the majority of the rest of the files in this project) whitespace changes in files that are modified in this PR.

 I bet running 'Tools/AutoFormat' here would add a whole lot more whitespace changes to this PR.

 I'm fine with either. I just want guidance on whether we want to do sweeping formatting fixes using an automated tool, OR optimize PRs to minimize non-code-related changes.
I would say that for _this_ PR, we should not include other correct whitespace
changes, but should do those changes in a separate PR.

The reasoning behind this is that the whitespace changes make it harder to see
the functionality changes that this PR introduces.

Now, as I'm also advocating delaying this PR, it may be that by the time we are
ready to merge it, all those whitespace changes have been committed and so we
will want them in here.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,41,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430366237,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","OK, so the plan is

Revert whitespace changes here
Sometime later run tools/autoformat on all files (preferably right after a release)
Require devs to also run tools/autoformat in their PRs before merging (so that they don't have to manually fight potential whitespace changes from their editor)

Is that right? That works for me; I'm happy with any future where the computer deals with whitespace manually.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,42,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430371790,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Tue, 16 Oct 2018, John Boiles wrote:
 OK, so the plan is

 1. Revert whitespace changes here
 2. Sometime later run tools/autoformat on all files (preferably right after a release)
 3. Require devs to also run tools/autoformat in their PRs before merging (so that they don't have to manually fight potential whitespace changes from their editor)

 Is that right? That works for me; I'm happy with any future where the computer deals with whitespace manually.
That's what I'm suggesting.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/blurfl,43,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430375689,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",There has only been one commit since the recent release. I could open a PR with the above format sweep (ready to submit). Would that be helpful?,True,"{'THUMBS_UP': ['https://github.com/johnboiles', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,44,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430398153,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I support this. At first I was concerned this was going to make generating PRs for other changes from @madgrizzle a pain, but on second thought I think I can can squash his commits together and just run autoformat on the modified files there and it should make clean PRs.",True,{'THUMBS_UP': ['https://github.com/madgrizzle']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,45,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430452488,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",re-opened / reclosed to pull in the whitespace changes (looks like diffs don't update on closed PRs),True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/BarbourSmith,46,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430721815,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Great discussion everyone! I just want to add that y'all don't have to wait for me to merge pull requests. The goal of the automatic PR process is that I can go off the grid for a few days without worrying that I'm holding everything up.
If anyone feels like a pull request is contentious and not getting enough votes feel free to call attention to it in the forums and get more folks to vote it up or down",True,{'THUMBS_UP': ['https://github.com/johnboiles']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,47,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430729472,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",@BarbourSmith do you have an opinion on this one or would you rather us drive towards a community decision first? I can start a forum post if the latter,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/BarbourSmith,48,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430740411,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Let's start a community discussion and I'll participate! Now that we're moving towards a more distributed model with multiple people selling kits I can't wait to be just another average Joe üòÄ
I think the question for me is that if the work area is parallel to the to the top bar but the whole machine is angled by a few degrees because of a slanted floor what is the right thing to do?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,49,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430743077,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Wed, 17 Oct 2018, BarbourSmith wrote:
 I think the question for me is that if the work area is parallel to the to the
 top bar but the whole machine is angled by a few degrees because of a slanted
 floor what is the right thing to do?
the ""right thing to do"" is to make the machine level :-)

now, what we should do if that's not practical is a different question, and to
start with, we should answer the question of how much of a difference does it
make.

the difference is going to matter most in the bottom corners where tension is
the lowest.

Could someone make something long with regular marks in it and cut it out as low
on the sled as they can, then tilt the machine a significant amount (I'd say
raise one end significantly higher than the other, say put the legs on one side
on top of a 2x4) and then cut it again and compare the two pieces. If this is a
problem, the high side should end up being shorter than the low side. Let's see
how much they differ

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/madgrizzle,50,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430752016,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","In a thought experiment, I tilted the machine 90 degrees clockwise.  All it did was move the router up and down when the left motor turned and the right chain wrapped itself around the sprocket when the right motor turned ;)",True,{'LAUGH': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,51,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430761055,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",Reopening (for voting) and started the forum discussion here,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,52,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430761622,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Let's start a community discussion and I'll participate! Now that we're moving towards a more distributed model with multiple people selling kits I can't wait to be just another average Joe

What if @MaslowCommunityGardenRobot started a post automatically when a PR was published (since more people are checking the forums than are checking GitHub?)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/davidelang,53,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430764712,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","On Wed, 17 Oct 2018, John Boiles wrote:
 What if @MaslowCommunityGardenRobot started a post automatically when a PR was
 published (since more people are checking the forums than are checking
 GitHub?)
that would just mean that the discussion is happening in two places and people
will miss things said in one (with a lot of duplication between them)

Please stick with one place to discuss things as much as possible.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/BarbourSmith,54,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430779307,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","I would like to make the robot at least make an announcement that a vote has been called in the forums, but I haven't gotten around to it yet",True,"{'THUMBS_UP': ['https://github.com/johnboiles', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/MaslowCommunityGardenRobot,55,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430876381,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",Time is up and we're ready to merge this pull request. Great work!,True,{'CONFUSED': ['https://github.com/johnboiles']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/johnboiles,56,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-430880575,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779",Hmm I'm not sure if this is actually what the majority of people wanted based on the forum discussion. This is why it's important to vote üòÖ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,467,2018-10-16T04:51:34Z,2018-10-18T05:05:28Z,2018-10-18T17:47:26Z,MERGED,True,32,13,5,https://github.com/johnboiles,Beam tilt correction,4,[],https://github.com/MaslowCNC/Firmware/pull/467,https://github.com/BarbourSmith,57,https://github.com/MaslowCNC/Firmware/pull/467#issuecomment-431100904,"I'm starting to cherry-pick features and fixes from @madgrizzle's fork so that we can get them merged back upstream.
This change adds beam tilt correction -- From reading the code, it adjusts the x,y coordinates of the motors to account for the top beam being out-of-level.
Related GroundControl change is in MaslowCNC/GroundControl#779","Hmmm I think we got confused and voted on the wrong pull request. I feel silly now saying this but I didn't realize that there was a firmware PR and a GC pull request. I will remerge this one if the GC pull request goes through. @johnboiles sorry for the confusion and thanks for bearing with us while we figure out the whole ""vote to merge"" system! It's a bit messy right now but I think we'll get it worked out pretty quick",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,468,2018-10-16T05:19:39Z,2018-10-18T06:05:28Z,2018-10-18T06:05:28Z,MERGED,True,3,3,3,https://github.com/johnboiles,Adjust encoderStep defaults,2,[],https://github.com/MaslowCNC/Firmware/pull/468,https://github.com/johnboiles,1,https://github.com/MaslowCNC/Firmware/pull/468,@madgrizzle will have to chime in on the justification for this change. I just pulled it from his development branch!,@madgrizzle will have to chime in on the justification for this change. I just pulled it from his development branch!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,468,2018-10-16T05:19:39Z,2018-10-18T06:05:28Z,2018-10-18T06:05:28Z,MERGED,True,3,3,3,https://github.com/johnboiles,Adjust encoderStep defaults,2,[],https://github.com/MaslowCNC/Firmware/pull/468,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/468#issuecomment-430112368,@madgrizzle will have to chime in on the justification for this change. I just pulled it from his development branch!,"Congratulations on the pull request @johnboiles
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/johnboiles', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,468,2018-10-16T05:19:39Z,2018-10-18T06:05:28Z,2018-10-18T06:05:28Z,MERGED,True,3,3,3,https://github.com/johnboiles,Adjust encoderStep defaults,2,[],https://github.com/MaslowCNC/Firmware/pull/468,https://github.com/madgrizzle,3,https://github.com/MaslowCNC/Firmware/pull/468#issuecomment-430216777,@madgrizzle will have to chime in on the justification for this change. I just pulled it from his development branch!,"This change came about while trying to figure out why the B02 command is not working properly.  The ""correct"" value for encoder steps is 8113.73 (based upon work from a long while back).  In firmware, the default value was 8113.7 and in GC, the default value is 8113.73. GC updates the firmware to set it to 8113.73.  However, during troubleshooting the B02 command, I corrected the default value in FW to be 8113.73.  It's an innocuous change.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,468,2018-10-16T05:19:39Z,2018-10-18T06:05:28Z,2018-10-18T06:05:28Z,MERGED,True,3,3,3,https://github.com/johnboiles,Adjust encoderStep defaults,2,[],https://github.com/MaslowCNC/Firmware/pull/468,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/468#issuecomment-430885965,@madgrizzle will have to chime in on the justification for this change. I just pulled it from his development branch!,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,469,2018-10-18T17:44:09Z,2018-10-18T17:44:23Z,2018-10-18T17:44:46Z,MERGED,True,13,32,5,https://github.com/BarbourSmith,"Revert ""Beam tilt correction""",1,[],https://github.com/MaslowCNC/Firmware/pull/469,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/469,Reverts #467,Reverts #467,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/johnboiles,1,https://github.com/MaslowCNC/Firmware/pull/471,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395","This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395",True,{'THUMBS_UP': ['https://github.com/madgrizzle']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432059312,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395","Congratulations on the pull request @johnboiles
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/johnboiles', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432783099,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395",Great! I'm about to run a longer cut and give this a solid test. Excellent picking!,True,{'THUMBS_UP': ['https://github.com/johnboiles']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/johnboiles,4,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432784851,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395",I'm glad you were able to take a look and I'm glad you'll be able to test! Thanks @BarbourSmith,True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432832591,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395","I am two hours into a test with no issues so far. Gets my üëç for sure. Great work!
We should keep in mind that this change requires updating Ground Control to work properly so I bet we will see a couple questions in the forums triggered by that.",True,"{'HEART': ['https://github.com/blurfl', 'https://github.com/johnboiles']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/johnboiles,6,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432854776,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395",Great! What are you cutting?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432876079,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395",I'm making a skateboard rack for a friend:,True,{'HEART': ['https://github.com/johnboiles']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/johnboiles,8,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432887153,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395",Neat! Looking good. Thanks for sharing,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,471,2018-10-23T01:12:19Z,2018-10-25T02:05:32Z,2018-10-25T04:39:35Z,MERGED,True,26,34,5,https://github.com/johnboiles,Simplified Chain Tolerance Correction,3,[],https://github.com/MaslowCNC/Firmware/pull/471,https://github.com/MaslowCommunityGardenRobot,9,https://github.com/MaslowCNC/Firmware/pull/471#issuecomment-432887934,"This is another bit of code I found in @madgrizzle's development branch. I believe this to be a solid simplification of how the chain tolerance correction works.
In the current system, GroundControl accepts a positive or negative percentage adjustment to adjust the chain tolerance for each chain (e.g. 1.3% if your chain is 1.3% longer than expected), it then turns that into a calculated value for distPerRotLeftChainTolerance by multiplying the adjustment by distPerRot. That value is then sent to the firmware, where it is divided by 2*Pi and stored as RleftChainTolerance. It's then used in place of the sprocket radius R in the firmware for all calculations that involve the sprocket's radius.
With this change, GroundControl continues to accept a positive or negative percentage adjustment for each chain (current settings will continue to work), but does no calculation on that value. Then that adjustment is sent to the firmware as leftChainTolerance. That tolerance value is simply multiplied by the calculated chain length to derive the adjusted chain length.
Additionally, I think this is maybe slightly more accurate. The current chain tolerance adjustment adjusts for the bit of chain that is still on the sprocket (Chain1AroundSprocket). I think the length of the chain around the sprocket is a function of the radius of the sprocket, and not the tolerance in the chain, though it's likely not a big enough value to matter one way or another. It's trivial to make this change account for that as well.
The corresponding GroundControl change is MaslowCNC/GroundControl#783
Discussion in the forums is here: https://forums.maslowcnc.com/t/simplified-chain-tolerance-correction-pull-request/7395",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,472,2018-10-24T19:00:30Z,2018-10-25T04:25:05Z,2018-10-25T04:25:05Z,CLOSED,False,34,12,3,https://github.com/blurfl,G2/G3 z axis coordinated move,2,[],https://github.com/MaslowCNC/Firmware/pull/472,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/472,"Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.","Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,472,2018-10-24T19:00:30Z,2018-10-25T04:25:05Z,2018-10-25T04:25:05Z,CLOSED,False,34,12,3,https://github.com/blurfl,G2/G3 z axis coordinated move,2,[],https://github.com/MaslowCNC/Firmware/pull/472,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/472#issuecomment-432788997,"Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,472,2018-10-24T19:00:30Z,2018-10-25T04:25:05Z,2018-10-25T04:25:05Z,CLOSED,False,34,12,3,https://github.com/blurfl,G2/G3 z axis coordinated move,2,[],https://github.com/MaslowCNC/Firmware/pull/472,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/472#issuecomment-432910180,"Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.","The z axis doesn't keep,up at higher speeds; I'm going to close this and do some work to correct it.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,473,2018-10-25T18:34:27Z,2018-10-27T19:05:26Z,2019-06-22T06:31:32Z,MERGED,True,37,12,3,https://github.com/blurfl,G2/g3 z axis coordinated move,4,[],https://github.com/MaslowCNC/Firmware/pull/473,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/473,"Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.","Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,473,2018-10-25T18:34:27Z,2018-10-27T19:05:26Z,2019-06-22T06:31:32Z,MERGED,True,37,12,3,https://github.com/blurfl,G2/g3 z axis coordinated move,4,[],https://github.com/MaslowCNC/Firmware/pull/473,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/473#issuecomment-433169461,"Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. Vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/mfpiechowski', 'https://github.com/baverhey']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,473,2018-10-25T18:34:27Z,2018-10-27T19:05:26Z,2019-06-22T06:31:32Z,MERGED,True,37,12,3,https://github.com/blurfl,G2/g3 z axis coordinated move,4,[],https://github.com/MaslowCNC/Firmware/pull/473,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/473#issuecomment-433646962,"Adds Z axis handling for curved cuts, based on Motion::coordinatedMove() and work by @c0depr1sm.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,474,2018-11-03T03:05:00Z,2018-11-05T03:05:32Z,2018-11-05T03:05:32Z,CLOSED,False,341,6,12,https://github.com/johnboiles,Experimental optical calibration support,2,[],https://github.com/MaslowCNC/Firmware/pull/474,https://github.com/johnboiles,1,https://github.com/MaslowCNC/Firmware/pull/474,"Just wanted to put this out there for discussion and feedback. This is @madgrizzle's optical calibration correction feature from his fork. The two of us have been using it with success. It's caused my cuts to be more accurate than before.
There are two ways optical calibration corrections can work.


Interpolation mode A correction matrix from 465 calibration points (31 columns, 15 rows) is uploaded into EEPROM. Moves are adjusted by interpolating the error between the points to find the positional error at any position on the board.


Curve fit mode Curve fit coefficients are calculated by GroundControl based on the results of the calibration. The coefficients are stored into EEPROM. Moves are adjusted by using the curve fit equations to find the positional error at any position on the board.


Forum discussion is here.
Original Optical Calibration thread is here.","Just wanted to put this out there for discussion and feedback. This is @madgrizzle's optical calibration correction feature from his fork. The two of us have been using it with success. It's caused my cuts to be more accurate than before.
There are two ways optical calibration corrections can work.


Interpolation mode A correction matrix from 465 calibration points (31 columns, 15 rows) is uploaded into EEPROM. Moves are adjusted by interpolating the error between the points to find the positional error at any position on the board.


Curve fit mode Curve fit coefficients are calculated by GroundControl based on the results of the calibration. The coefficients are stored into EEPROM. Moves are adjusted by using the curve fit equations to find the positional error at any position on the board.


Forum discussion is here.
Original Optical Calibration thread is here.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,474,2018-11-03T03:05:00Z,2018-11-05T03:05:32Z,2018-11-05T03:05:32Z,CLOSED,False,341,6,12,https://github.com/johnboiles,Experimental optical calibration support,2,[],https://github.com/MaslowCNC/Firmware/pull/474,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/474#issuecomment-435555592,"Just wanted to put this out there for discussion and feedback. This is @madgrizzle's optical calibration correction feature from his fork. The two of us have been using it with success. It's caused my cuts to be more accurate than before.
There are two ways optical calibration corrections can work.


Interpolation mode A correction matrix from 465 calibration points (31 columns, 15 rows) is uploaded into EEPROM. Moves are adjusted by interpolating the error between the points to find the positional error at any position on the board.


Curve fit mode Curve fit coefficients are calculated by GroundControl based on the results of the calibration. The coefficients are stored into EEPROM. Moves are adjusted by using the curve fit equations to find the positional error at any position on the board.


Forum discussion is here.
Original Optical Calibration thread is here.","Congratulations on the pull request @johnboiles
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot'], 'THUMBS_DOWN': ['https://github.com/blurfl', 'https://github.com/johnboiles', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,474,2018-11-03T03:05:00Z,2018-11-05T03:05:32Z,2018-11-05T03:05:32Z,CLOSED,False,341,6,12,https://github.com/johnboiles,Experimental optical calibration support,2,[],https://github.com/MaslowCNC/Firmware/pull/474,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/474#issuecomment-435635590,"Just wanted to put this out there for discussion and feedback. This is @madgrizzle's optical calibration correction feature from his fork. The two of us have been using it with success. It's caused my cuts to be more accurate than before.
There are two ways optical calibration corrections can work.


Interpolation mode A correction matrix from 465 calibration points (31 columns, 15 rows) is uploaded into EEPROM. Moves are adjusted by interpolating the error between the points to find the positional error at any position on the board.


Curve fit mode Curve fit coefficients are calculated by GroundControl based on the results of the calibration. The coefficients are stored into EEPROM. Moves are adjusted by using the curve fit equations to find the positional error at any position on the board.


Forum discussion is here.
Original Optical Calibration thread is here.",I feel like until we have a number of folks using it that the added complexity isnt worth it just yet. I want to keep an eye on feature creep and only add things with wide spread appeal even when they are awesome features like this. It seems like without a place to get the calibration pattern and the camera the feature probably won't see significant use. Now if someone selling kits started shipping them with the hardware I would vote to add this right away,True,"{'HEART': ['https://github.com/blurfl'], 'THUMBS_UP': ['https://github.com/johnboiles']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,474,2018-11-03T03:05:00Z,2018-11-05T03:05:32Z,2018-11-05T03:05:32Z,CLOSED,False,341,6,12,https://github.com/johnboiles,Experimental optical calibration support,2,[],https://github.com/MaslowCNC/Firmware/pull/474,https://github.com/johnboiles,4,https://github.com/MaslowCNC/Firmware/pull/474#issuecomment-435679651,"Just wanted to put this out there for discussion and feedback. This is @madgrizzle's optical calibration correction feature from his fork. The two of us have been using it with success. It's caused my cuts to be more accurate than before.
There are two ways optical calibration corrections can work.


Interpolation mode A correction matrix from 465 calibration points (31 columns, 15 rows) is uploaded into EEPROM. Moves are adjusted by interpolating the error between the points to find the positional error at any position on the board.


Curve fit mode Curve fit coefficients are calculated by GroundControl based on the results of the calibration. The coefficients are stored into EEPROM. Moves are adjusted by using the curve fit equations to find the positional error at any position on the board.


Forum discussion is here.
Original Optical Calibration thread is here.",@BarbourSmith I agree (I downvoted). My goal here was to get some other eyes on it to see if anyone has ideas to improve it. Thanks for taking a look.,True,"{'HEART': ['https://github.com/blurfl', 'https://github.com/BarbourSmith'], 'THUMBS_UP': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,474,2018-11-03T03:05:00Z,2018-11-05T03:05:32Z,2018-11-05T03:05:32Z,CLOSED,False,341,6,12,https://github.com/johnboiles,Experimental optical calibration support,2,[],https://github.com/MaslowCNC/Firmware/pull/474,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/474#issuecomment-435741987,"Just wanted to put this out there for discussion and feedback. This is @madgrizzle's optical calibration correction feature from his fork. The two of us have been using it with success. It's caused my cuts to be more accurate than before.
There are two ways optical calibration corrections can work.


Interpolation mode A correction matrix from 465 calibration points (31 columns, 15 rows) is uploaded into EEPROM. Moves are adjusted by interpolating the error between the points to find the positional error at any position on the board.


Curve fit mode Curve fit coefficients are calculated by GroundControl based on the results of the calibration. The coefficients are stored into EEPROM. Moves are adjusted by using the curve fit equations to find the positional error at any position on the board.


Forum discussion is here.
Original Optical Calibration thread is here.",It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/477,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2","This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436069368,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436087580,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2",Way to fix that quickly!! Awesome. üëçüëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436738147,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2","I introduced a pretty major flaw in the previous release - G2 gcodes will spoil a user's expensive material.
This PR corrects that, and looks likely to merge.
Is there a way to avoid 30 days of damage before the next release?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436758037,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2",I think we could do an early release no problem. Should I just merge this right away and we could do a release today? We could also wait a few days if we want more time for testing.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436769750,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2",The user who identified the issue says he will test it this week. Let‚Äôs wait to hear from him.,True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/MaslowCommunityGardenRobot,7,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436810931,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/BarbourSmith,8,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436817229,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2",I just realized that I only increased the merge time to one week for Ground Control and the firmware is still 48hrs. Do we want one week on both or does 48hrs seem like enough time?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/servant74,9,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436821252,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2","If we are really paying attention, 48 hrs is enough.  If not, the week is
best.
If it is contriversial (lots of input) then 48 is probably best.

We will defer to your judgement Bar.
On Wed, Nov 7, 2018 at 5:34 PM BarbourSmith ***@***.***> wrote:
 I just realized that I only increased the merge time to one week for
 Ground Control and the firmware is still 48hrs. Do we want one week on both
 or does 48hrs seem like enough time?

 ‚Äî
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#477 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAlLkqxzQMEAcLWMeCgspbn-n8-Brhriks5us24LgaJpZM4YPXjv>
 .


--
<> ... Jack
If you are not paying for something, you are not a consumer, you are the
product. - Chamath Palihapitiya

""Tell me and I forget. Teach me and I remember. Involve me and I learn."" -
Ben Franklin",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/davidelang,10,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436828153,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2","On Wed, 7 Nov 2018, BarbourSmith wrote:
 I just realized that I only increased the merge time to one week for Ground Control and the firmware is still 48hrs. Do we want one week on both or does 48hrs seem like enough time?
I think the time delay is more important for firmware than for GC, so I would
say we want it for both.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,477,2018-11-05T22:17:09Z,2018-11-07T23:06:40Z,2019-06-22T06:30:57Z,MERGED,True,1,1,1,https://github.com/blurfl,Correct angle calculation,1,[],https://github.com/MaslowCNC/Firmware/pull/477,https://github.com/blurfl,11,https://github.com/MaslowCNC/Firmware/pull/477#issuecomment-436840208,"This PR addresses Issue #476: ""Motion:arc() bug - G2 gcode cuts counterclockwise instead of clockwise""
The variable theta used in the incremental motion calculation is defined to contain the value direction indicated by G2/G3. This PR removes a second reference to direction in that calculation to correct the issue that arises when a negative direction multiplied twice (G2 instance) cancels the direction. The effect was that G2 gcodes cut in the positive direction (as G3 does) instead of the correct direction.
Here is a cut that demonstrates the error and the fix. It should run a 1"" counterclockwise circle (G3) to the right of home, with Z beginning at 0 and ending at 0.5, then a clockwise circle (G2) to the left of home with Z finishing at 0. Without the patch, the G2 circle runs counterclockwise.
G20 G90
G0 X0 Y0 Z0
G3 X.0 Y0.001 Z-0.5 I1.0 J0.0 F100
G0 X0 Y0
G2 X.0 Y0.001 Z0.0 I-1.0 J0.0 F100
G0 X0 Y0
M2","The reason for the delay is to have more people test and report. Two weeks would be my vote, but one week is better than 48 hours.
--- Did anyone besides me test this PR? ---",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,478,2018-11-20T02:58:06Z,2018-11-20T02:58:24Z,2018-11-20T03:07:26Z,CLOSED,False,372,16,12,https://github.com/johnboiles,Optical Calibration fix and some report changes,6,[],https://github.com/MaslowCNC/Firmware/pull/478,https://github.com/johnboiles,1,https://github.com/MaslowCNC/Firmware/pull/478,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,478,2018-11-20T02:58:06Z,2018-11-20T02:58:24Z,2018-11-20T03:07:26Z,CLOSED,False,372,16,12,https://github.com/johnboiles,Optical Calibration fix and some report changes,6,[],https://github.com/MaslowCNC/Firmware/pull/478,https://github.com/johnboiles,2,https://github.com/MaslowCNC/Firmware/pull/478#issuecomment-440119748,,agh wrong fork,True,"{'HEART': ['https://github.com/blurfl'], 'THUMBS_UP': ['https://github.com/GeroBH']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,479,2019-01-21T18:45:40Z,2019-01-23T19:05:47Z,2019-01-23T19:05:47Z,MERGED,True,2,2,1,https://github.com/madgrizzle,Change operation associated with ChainTolerance,1,[],https://github.com/MaslowCNC/Firmware/pull/479,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/479,"This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.","This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,479,2019-01-21T18:45:40Z,2019-01-23T19:05:47Z,2019-01-23T19:05:47Z,MERGED,True,2,2,1,https://github.com/madgrizzle,Change operation associated with ChainTolerance,1,[],https://github.com/MaslowCNC/Firmware/pull/479,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/479#issuecomment-456172521,"This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.","Congratulations on the pull request @madgrizzle
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/ted1735', 'https://github.com/madgrizzle', 'https://github.com/c0depr1sm']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,479,2019-01-21T18:45:40Z,2019-01-23T19:05:47Z,2019-01-23T19:05:47Z,MERGED,True,2,2,1,https://github.com/madgrizzle,Change operation associated with ChainTolerance,1,[],https://github.com/MaslowCNC/Firmware/pull/479,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/479#issuecomment-456246107,"This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.","Excellent catch! üëç üëç ‚ù§Ô∏è ‚ù§Ô∏è
It was my experience that messing with the chain tolerance generally decreased my accuracy, I wonder if this could be the reason. Has anyone done a comparative calibration test yet?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,479,2019-01-21T18:45:40Z,2019-01-23T19:05:47Z,2019-01-23T19:05:47Z,MERGED,True,2,2,1,https://github.com/madgrizzle,Change operation associated with ChainTolerance,1,[],https://github.com/MaslowCNC/Firmware/pull/479,https://github.com/madgrizzle,4,https://github.com/MaslowCNC/Firmware/pull/479#issuecomment-456378272,"This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.",This was a recent error.  I recall you having that issue when using your original implementation which I think didn't have this problem.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,479,2019-01-21T18:45:40Z,2019-01-23T19:05:47Z,2019-01-23T19:05:47Z,MERGED,True,2,2,1,https://github.com/madgrizzle,Change operation associated with ChainTolerance,1,[],https://github.com/MaslowCNC/Firmware/pull/479,https://github.com/c0depr1sm,5,https://github.com/MaslowCNC/Firmware/pull/479#issuecomment-456599682,"This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.","Actually, I did somewhat of comparative test: The Zipper Tree Chalenge was done with an alternate triangular inverse function... including that chain tolerance calculation fix.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,479,2019-01-21T18:45:40Z,2019-01-23T19:05:47Z,2019-01-23T19:05:47Z,MERGED,True,2,2,1,https://github.com/madgrizzle,Change operation associated with ChainTolerance,1,[],https://github.com/MaslowCNC/Firmware/pull/479,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/479#issuecomment-456650347,"This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.",And the results speak for themselves. Very impressive!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,479,2019-01-21T18:45:40Z,2019-01-23T19:05:47Z,2019-01-23T19:05:47Z,MERGED,True,2,2,1,https://github.com/madgrizzle,Change operation associated with ChainTolerance,1,[],https://github.com/MaslowCNC/Firmware/pull/479,https://github.com/MaslowCommunityGardenRobot,7,https://github.com/MaslowCNC/Firmware/pull/479#issuecomment-456926686,"This was discovered by @c0depr1sm and @joshua in this thread: https://forums.maslowcnc.com/t/holey-triangular-calibration/6240/191.
The original implementation of ChainTolerance modified the sprocket's mmPerRotation (increasing it for a positive ChainTolerance value).  The effect was to reduce the amount of  chain fed out.  This was adjusted in a previous PR where the ChainTolerance only modified the ChainStraight length in triangularInverse (because there shouldn't be any chain stretch associated with the wrap around the sprocket).  However, the formula used actually increases the amount of chain that is fed out (i.e., multiplying by a factor of 1+ChainTolerance) instead of decreasing it.  So, this PR changes the operator such that the ChainTolerance is divided into the ChainStraight rather than multiplies it resulting in a smaller chain length amount being fed out.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,480,2019-02-15T18:31:50Z,2019-02-17T19:05:03Z,2019-02-17T19:05:03Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Change originalChainLength to 1651 mm,1,[],https://github.com/MaslowCNC/Firmware/pull/480,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/480,"Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.","Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,480,2019-02-15T18:31:50Z,2019-02-17T19:05:03Z,2019-02-17T19:05:03Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Change originalChainLength to 1651 mm,1,[],https://github.com/MaslowCNC/Firmware/pull/480,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/480#issuecomment-464163004,"Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.","Congratulations on the pull request @madgrizzle
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/GeroBH', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,480,2019-02-15T18:31:50Z,2019-02-17T19:05:03Z,2019-02-17T19:05:03Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Change originalChainLength to 1651 mm,1,[],https://github.com/MaslowCNC/Firmware/pull/480,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/480#issuecomment-464284246,"Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.","can we add a warning in GC if the originalChainLength is not a multiple of the
link size?

David Lang
‚Ä¶
On Fri, 15 Feb 2019, madgrizzle wrote:
 Date: Fri, 15 Feb 2019 10:31:51 -0800
 From: madgrizzle ***@***.***>
 Reply-To: MaslowCNC/Firmware
     <reply+0021b24f8e51d259ade84a75f8509e3b07a677e9b0946df092cf00000001187ec79
     ***@***.***>
 To: MaslowCNC/Firmware ***@***.***>
 Cc: Subscribed ***@***.***>
 Subject: [MaslowCNC/Firmware] Change originalChainLength to 1651 mm (#480)

 Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.
 You can view, comment on, or merge this pull request online at:

  #480

 -- Commit Summary --

  * Change originalChainLength to 1651 mm

 -- File Changes --

    M cnc_ctrl_v1/Settings.cpp (2)

 -- Patch Links --

 https://github.com/MaslowCNC/Firmware/pull/480.patch
 https://github.com/MaslowCNC/Firmware/pull/480.diff",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,480,2019-02-15T18:31:50Z,2019-02-17T19:05:03Z,2019-02-17T19:05:03Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Change originalChainLength to 1651 mm,1,[],https://github.com/MaslowCNC/Firmware/pull/480,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/480#issuecomment-464301024,"Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.","I feel like a warning might scare more people than it helps since most
people won't notice the difference.
‚Ä¶
On Sat, Feb 16, 2019, 11:07 AM David Lang ***@***.*** wrote:
 can we add a warning in GC if the originalChainLength is not a multiple of
 the
 link size?

 David Lang

 On Fri, 15 Feb 2019, madgrizzle wrote:

 > Date: Fri, 15 Feb 2019 10:31:51 -0800
 > From: madgrizzle ***@***.***>
 > Reply-To: MaslowCNC/Firmware
 >
 <reply+0021b24f8e51d259ade84a75f8509e3b07a677e9b0946df092cf00000001187ec79
 > ***@***.***>
 > To: MaslowCNC/Firmware ***@***.***>
 > Cc: Subscribed ***@***.***>
 > Subject: [MaslowCNC/Firmware] Change originalChainLength to 1651 mm
 (#480)
 >
 > Though it really doesn't matter to do this here, because ground control
 overwrites the default values, this proposal changes the
 originalChainLength default value to 1651 mm, which is an integral of 6.35
 mm (the pitch of a #25 chain) and therefore would result in a tooth being
 at 12 o'clock after the chains are extended. Using this value can allow
 someone to manually reset the chains without having to go through the long,
 tedious process of having the motor feed out the chain.
 > You can view, comment on, or merge this pull request online at:
 >
 > #480
 >
 > -- Commit Summary --
 >
 > * Change originalChainLength to 1651 mm
 >
 > -- File Changes --
 >
 > M cnc_ctrl_v1/Settings.cpp (2)
 >
 > -- Patch Links --
 >
 > https://github.com/MaslowCNC/Firmware/pull/480.patch
 > https://github.com/MaslowCNC/Firmware/pull/480.diff
 >
 >

 ‚Äî
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#480 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AI7QV8ATw4v5e0_CyoVyl4CmEDdNX5Ouks5vN4QXgaJpZM4a-M5e>
 .",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,480,2019-02-15T18:31:50Z,2019-02-17T19:05:03Z,2019-02-17T19:05:03Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Change originalChainLength to 1651 mm,1,[],https://github.com/MaslowCNC/Firmware/pull/480,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/480#issuecomment-464343266,"Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.","On Fri, 15 Feb 2019, BarbourSmith wrote:
 I feel like a warning might scare more people than it helps since most
 people won't notice the difference.
this error creates about 2mm of cut error after the first time someone resets
the chain.

I would unconditionally change saved values from 1650 to 1651, but for any other
value, I would warn about it and let the user override the warning. We could
limit the warning to a one-time thing or a check when someone goes to change
settings.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,480,2019-02-15T18:31:50Z,2019-02-17T19:05:03Z,2019-02-17T19:05:03Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Change originalChainLength to 1651 mm,1,[],https://github.com/MaslowCNC/Firmware/pull/480,https://github.com/GeroBH,6,https://github.com/MaslowCNC/Firmware/pull/480#issuecomment-464348473,"Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.","Why is there a warning from ""Travis CI"" about a missing 'Servo.h'?
Off-topic! How they build a global team and the tools used is worth a watch, as the downsides are also explained. https://www.youtube.com/watch?v=XAU5q-biY28
From the quick view it looks like a company supporting in software development?
Who hired them to follow the Maslow Firmware and complain about a file found in the Aduino IDE in /home/{username}/arduino-1.8.3/libraries/Servo/src?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,480,2019-02-15T18:31:50Z,2019-02-17T19:05:03Z,2019-02-17T19:05:03Z,MERGED,True,1,1,1,https://github.com/madgrizzle,Change originalChainLength to 1651 mm,1,[],https://github.com/MaslowCNC/Firmware/pull/480,https://github.com/MaslowCommunityGardenRobot,7,https://github.com/MaslowCNC/Firmware/pull/480#issuecomment-464495866,"Though it really doesn't matter to do this here, because ground control overwrites the default values, this proposal changes the originalChainLength default value to 1651 mm, which is an integral of 6.35 mm (the pitch of a #25 chain) and therefore would result in a tooth being at 12 o'clock after the chains are extended.  Using this value can allow someone to manually reset the chains without having to go through the long, tedious process of having the motor feed out the chain.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,481,2019-02-17T05:06:42Z,2019-02-19T06:05:04Z,2019-02-19T22:45:35Z,MERGED,True,87,23,5,https://github.com/c0depr1sm,Chain length calculation improvement: stretch compensation ,6,[],https://github.com/MaslowCNC/Firmware/pull/481,https://github.com/c0depr1sm,1,https://github.com/MaslowCNC/Firmware/pull/481,"Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.","Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.",True,"{'THUMBS_UP': ['https://github.com/BarbourSmith'], 'HOORAY': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,481,2019-02-17T05:06:42Z,2019-02-19T06:05:04Z,2019-02-19T22:45:35Z,MERGED,True,87,23,5,https://github.com/c0depr1sm,Chain length calculation improvement: stretch compensation ,6,[],https://github.com/MaslowCNC/Firmware/pull/481,https://github.com/c0depr1sm,2,https://github.com/MaslowCNC/Firmware/pull/481#issuecomment-464418610,"Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.",Looks like the automated travis builder does not respond like Arduino's IDE: there seems to be missing a Servo.h in the travis automated builder files? That is not a new file with this pull request. It looks like a file that was called for compilation since encoders were used?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,481,2019-02-17T05:06:42Z,2019-02-19T06:05:04Z,2019-02-19T22:45:35Z,MERGED,True,87,23,5,https://github.com/c0depr1sm,Chain length calculation improvement: stretch compensation ,6,[],https://github.com/MaslowCNC/Firmware/pull/481,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/481#issuecomment-464420928,"Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.","Congratulations on the pull request @c0depr1sm
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/GeroBH', 'https://github.com/mishle', 'https://github.com/matmaxgeds', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,481,2019-02-17T05:06:42Z,2019-02-19T06:05:04Z,2019-02-19T22:45:35Z,MERGED,True,87,23,5,https://github.com/c0depr1sm,Chain length calculation improvement: stretch compensation ,6,[],https://github.com/MaslowCNC/Firmware/pull/481,https://github.com/GeroBH,4,https://github.com/MaslowCNC/Firmware/pull/481#issuecomment-464507372,"Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.","Looks like the automated travis builder does not respond like Arduino's IDE: there seems to be missing a Servo.h in the travis automated builder files? That is not a new file with this pull request. It looks like a file that was called for compilation since encoders were used?

I've sent them this email:
Dear Support, (Antwort gerne auch auf Deutsch)
With 2 pull requests we added to:
#480
and
#481
there is a warning that all tests have failed with information leading here:
https://travis-ci.org/MaslowCNC/Firmware/builds/494405987?utm_source=github_status&utm_medium=notification
and here
https://travis-ci.org/MaslowCNC/Firmware/builds/493896920?utm_source=github_status&utm_medium=notification
Looking at the error, it's complaining about a Arduino library that can be found in the local installation of the IDE here:
/home/{username}/arduino-1.8.3/libraries/Servo/src/Servo.h
To me this looks more like an issue with your PlatformIO then with our firmware that compiles and runs local without issues.
Hope you could find this information useful and wondering who hired you to monitor our software. :-)
Hochachtungsvoll,
Gero Presser",True,{'THUMBS_UP': ['https://github.com/c0depr1sm']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,481,2019-02-17T05:06:42Z,2019-02-19T06:05:04Z,2019-02-19T22:45:35Z,MERGED,True,87,23,5,https://github.com/c0depr1sm,Chain length calculation improvement: stretch compensation ,6,[],https://github.com/MaslowCNC/Firmware/pull/481,https://github.com/schmittjoshc,5,https://github.com/MaslowCNC/Firmware/pull/481#issuecomment-464757257,"Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.","My only thing is: it looks like all the changes to the kinematics.cpp file are a direct copy-paste of the original ones I made in https://github.com/schmittjoshc/MaslowCNCFirmwareUpdate.  However, there are no links or references to those revisions.  The only exception is the implementation of chain-sag compensation.  You've chosen to implement the equations utilizing the quadratic assumption.  If you look at the equations, the full catenary equation is simpler and more computationally efficient; it is able to re-use the tension values from the tension calculations.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,481,2019-02-17T05:06:42Z,2019-02-19T06:05:04Z,2019-02-19T22:45:35Z,MERGED,True,87,23,5,https://github.com/c0depr1sm,Chain length calculation improvement: stretch compensation ,6,[],https://github.com/MaslowCNC/Firmware/pull/481,https://github.com/MaslowCommunityGardenRobot,6,https://github.com/MaslowCNC/Firmware/pull/481#issuecomment-464997196,"Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,481,2019-02-17T05:06:42Z,2019-02-19T06:05:04Z,2019-02-19T22:45:35Z,MERGED,True,87,23,5,https://github.com/c0depr1sm,Chain length calculation improvement: stretch compensation ,6,[],https://github.com/MaslowCNC/Firmware/pull/481,https://github.com/c0depr1sm,7,https://github.com/MaslowCNC/Firmware/pull/481#issuecomment-465342362,"Following tests with the help of beta testers on the forum, proposed improved firmware is ready for a pull request:

It implements chain tension and stretch calculations to improve chain length calculation.
It uses a default sled weight of 25 lbs (11.6 kilo) that you can set with macro $46=value where value  =kilo * 9.8 or lbs * 2.2*9.8. That settings would be eventually added to GroundControl.

The community will also enjoy improved standard Maslow Calibration results because:

the chain stretch compensation reduces the motor distance estimation error
the sag correction factor is still in use with that firmware.

Although the Standard calibration results will be improved, you might want to keep your known values if you trust them to be better.
Why that step?
What are the benefits of making this firmware improvement in such a step?

More constant vertical scale accross the workspace.
Users of the triangular link should get better results out of the current GroundControl Calibration scheme.
When Ground Control will be improved with sled weight setting parameter, it will be easy to set it specifically for their sled.
With that update, one can also start experimenting with chain tolerance optimisation using the Holey triangular Calibration (instructions here). That without installing another firmware: Just download in a separate folder the HoleyCalibration GroundControl, then you'll find there the gcode and python scripts.
(EDIT) It gets users ready for getting a better GroundControl with sled weight setting and is in line with Holey Triangular Calibration's features roadmap.","You are right @schmittjoshc , I should have referenced you work in the comments. I will correct the references in my next addition to the firmware. About the chain sag calculation, I will open another topic on the forum to define the proper evolution and support.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,482,2019-02-28T22:05:45Z,2019-02-28T22:08:22Z,2019-02-28T22:08:28Z,CLOSED,False,1,1,1,https://github.com/muizzk,Test pinning versions of PlatformIO,1,[],https://github.com/MaslowCNC/Firmware/pull/482,https://github.com/muizzk,1,https://github.com/MaslowCNC/Firmware/pull/482,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,483,2019-02-28T22:09:42Z,2019-02-28T22:11:41Z,2019-02-28T22:11:41Z,CLOSED,False,1,1,1,https://github.com/muizzk,Pinning PlatformIO to 3.6.3,1,[],https://github.com/MaslowCNC/Firmware/pull/483,https://github.com/muizzk,1,https://github.com/MaslowCNC/Firmware/pull/483,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,484,2019-02-28T22:12:52Z,2019-02-28T22:15:10Z,2019-02-28T22:15:10Z,CLOSED,False,1,1,1,https://github.com/muizzk,Pin Platform IO to 3.6.2,2,[],https://github.com/MaslowCNC/Firmware/pull/484,https://github.com/muizzk,1,https://github.com/MaslowCNC/Firmware/pull/484,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,485,2019-02-28T22:16:33Z,2019-02-28T22:18:26Z,2019-02-28T22:18:26Z,CLOSED,False,1,1,1,https://github.com/muizzk,Pin PlatformIO to 3.6.0,3,[],https://github.com/MaslowCNC/Firmware/pull/485,https://github.com/muizzk,1,https://github.com/MaslowCNC/Firmware/pull/485,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,486,2019-02-28T22:19:27Z,2019-03-02T23:04:36Z,2019-03-02T23:04:36Z,MERGED,True,3,3,2,https://github.com/muizzk,Step further back to PlatformIO 3.5.3,5,[],https://github.com/MaslowCNC/Firmware/pull/486,https://github.com/muizzk,1,https://github.com/MaslowCNC/Firmware/pull/486,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,486,2019-02-28T22:19:27Z,2019-03-02T23:04:36Z,2019-03-02T23:04:36Z,MERGED,True,3,3,2,https://github.com/muizzk,Step further back to PlatformIO 3.5.3,5,[],https://github.com/MaslowCNC/Firmware/pull/486,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/486#issuecomment-468475006,,"Congratulations on the pull request @muizzk
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,486,2019-02-28T22:19:27Z,2019-03-02T23:04:36Z,2019-03-02T23:04:36Z,MERGED,True,3,3,2,https://github.com/muizzk,Step further back to PlatformIO 3.5.3,5,[],https://github.com/MaslowCNC/Firmware/pull/486,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/486#issuecomment-468969022,,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,489,2019-03-28T14:47:59Z,2019-03-30T15:03:35Z,2019-03-30T15:03:35Z,MERGED,True,9,1,6,https://github.com/madgrizzle,Fix to EEPROM write issue,6,[],https://github.com/MaslowCNC/Firmware/pull/489,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/489,"This adds a flag (writeStepsToEEPROM) to the sys structure that is raised whenever an axis is attached.  The systemSaveAxesPosition() function tests that this flag is true and that all axes are detached.  If so, it calls settingsSaveStepstoEEprom() and after the EEPROM is saved, it clears the flag.  Therefore, the only time steps should be saved to EEPROM is after an axis becomes attached and then when all axes become detached.  So that's should only happen 2 seconds of idle after a motor move.","This adds a flag (writeStepsToEEPROM) to the sys structure that is raised whenever an axis is attached.  The systemSaveAxesPosition() function tests that this flag is true and that all axes are detached.  If so, it calls settingsSaveStepstoEEprom() and after the EEPROM is saved, it clears the flag.  Therefore, the only time steps should be saved to EEPROM is after an axis becomes attached and then when all axes become detached.  So that's should only happen 2 seconds of idle after a motor move.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,489,2019-03-28T14:47:59Z,2019-03-30T15:03:35Z,2019-03-30T15:03:35Z,MERGED,True,9,1,6,https://github.com/madgrizzle,Fix to EEPROM write issue,6,[],https://github.com/MaslowCNC/Firmware/pull/489,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/489#issuecomment-477634417,"This adds a flag (writeStepsToEEPROM) to the sys structure that is raised whenever an axis is attached.  The systemSaveAxesPosition() function tests that this flag is true and that all axes are detached.  If so, it calls settingsSaveStepstoEEprom() and after the EEPROM is saved, it clears the flag.  Therefore, the only time steps should be saved to EEPROM is after an axis becomes attached and then when all axes become detached.  So that's should only happen 2 seconds of idle after a motor move.","Congratulations on the pull request @madgrizzle
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/GeroBH', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,489,2019-03-28T14:47:59Z,2019-03-30T15:03:35Z,2019-03-30T15:03:35Z,MERGED,True,9,1,6,https://github.com/madgrizzle,Fix to EEPROM write issue,6,[],https://github.com/MaslowCNC/Firmware/pull/489,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/489#issuecomment-477834263,"This adds a flag (writeStepsToEEPROM) to the sys structure that is raised whenever an axis is attached.  The systemSaveAxesPosition() function tests that this flag is true and that all axes are detached.  If so, it calls settingsSaveStepstoEEprom() and after the EEPROM is saved, it clears the flag.  Therefore, the only time steps should be saved to EEPROM is after an axis becomes attached and then when all axes become detached.  So that's should only happen 2 seconds of idle after a motor move.","This looks very cleanly implemented. Excellent work!
I'm still pretty surprised that this issue exists. I know for a fact that we used to write to the eeprom only once two seconds after the motor was detached because I remember testing that with print statements early on, but the way the system works was refactored later and we could have changed the behavior.
I don't have access to an aduino right now to test, but can we confirm that a print statement added at line 163 in Settings.cpp EEPROM.put(310, sysSteps);, runs regularly?
If we are concerned about EEPROM fatigue we can move to a new location in memory from now on. I know we have a lot of extra slots although we would have to make it so the position was moved to the new location automatically so people won't be bothered by the change",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,489,2019-03-28T14:47:59Z,2019-03-30T15:03:35Z,2019-03-30T15:03:35Z,MERGED,True,9,1,6,https://github.com/madgrizzle,Fix to EEPROM write issue,6,[],https://github.com/MaslowCNC/Firmware/pull/489,https://github.com/madgrizzle,4,https://github.com/MaslowCNC/Firmware/pull/489#issuecomment-477837179,"This adds a flag (writeStepsToEEPROM) to the sys structure that is raised whenever an axis is attached.  The systemSaveAxesPosition() function tests that this flag is true and that all axes are detached.  If so, it calls settingsSaveStepstoEEprom() and after the EEPROM is saved, it clears the flag.  Therefore, the only time steps should be saved to EEPROM is after an axis becomes attached and then when all axes become detached.  So that's should only happen 2 seconds of idle after a motor move.","I can try it out with fakeservo tommorow/this weekend.  If surprised it's writing, but I'm working on porting code to a teensy and in testing the motors, I ran into issues and the culprit was that it was writing to eeprom during the maslowDelay calls.. once I prevented it writing, my issues went away.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,489,2019-03-28T14:47:59Z,2019-03-30T15:03:35Z,2019-03-30T15:03:35Z,MERGED,True,9,1,6,https://github.com/madgrizzle,Fix to EEPROM write issue,6,[],https://github.com/MaslowCNC/Firmware/pull/489,https://github.com/madgrizzle,5,https://github.com/MaslowCNC/Firmware/pull/489#issuecomment-478043521,"This adds a flag (writeStepsToEEPROM) to the sys structure that is raised whenever an axis is attached.  The systemSaveAxesPosition() function tests that this flag is true and that all axes are detached.  If so, it calls settingsSaveStepstoEEprom() and after the EEPROM is saved, it clears the flag.  Therefore, the only time steps should be saved to EEPROM is after an axis becomes attached and then when all axes become detached.  So that's should only happen 2 seconds of idle after a motor move.","Oh, cool.. I updated the code in patch-4 and it added it to the PR.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,489,2019-03-28T14:47:59Z,2019-03-30T15:03:35Z,2019-03-30T15:03:35Z,MERGED,True,9,1,6,https://github.com/madgrizzle,Fix to EEPROM write issue,6,[],https://github.com/MaslowCNC/Firmware/pull/489,https://github.com/MaslowCommunityGardenRobot,6,https://github.com/MaslowCNC/Firmware/pull/489#issuecomment-478254005,"This adds a flag (writeStepsToEEPROM) to the sys structure that is raised whenever an axis is attached.  The systemSaveAxesPosition() function tests that this flag is true and that all axes are detached.  If so, it calls settingsSaveStepstoEEprom() and after the EEPROM is saved, it clears the flag.  Therefore, the only time steps should be saved to EEPROM is after an axis becomes attached and then when all axes become detached.  So that's should only happen 2 seconds of idle after a motor move.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,490,2019-04-10T05:04:05Z,2019-04-12T07:03:10Z,2019-04-12T07:03:11Z,MERGED,True,1,1,1,https://github.com/davidelang,change firmware link from text to link,1,[],https://github.com/MaslowCNC/Firmware/pull/490,https://github.com/davidelang,1,https://github.com/MaslowCNC/Firmware/pull/490,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,490,2019-04-10T05:04:05Z,2019-04-12T07:03:10Z,2019-04-12T07:03:11Z,MERGED,True,1,1,1,https://github.com/davidelang,change firmware link from text to link,1,[],https://github.com/MaslowCNC/Firmware/pull/490,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/490#issuecomment-481561496,,"Congratulations on the pull request @davidelang
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/GeroBH']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,490,2019-04-10T05:04:05Z,2019-04-12T07:03:10Z,2019-04-12T07:03:11Z,MERGED,True,1,1,1,https://github.com/davidelang,change firmware link from text to link,1,[],https://github.com/MaslowCNC/Firmware/pull/490,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/490#issuecomment-481562239,,That looks great. I am still working on getting the maslowcnc.com page updated with links. I've locked myself out of that account and I'm working on getting back in.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,490,2019-04-10T05:04:05Z,2019-04-12T07:03:10Z,2019-04-12T07:03:11Z,MERGED,True,1,1,1,https://github.com/davidelang,change firmware link from text to link,1,[],https://github.com/MaslowCNC/Firmware/pull/490,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/490#issuecomment-482462366,,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/esspe2,1,https://github.com/MaslowCNC/Firmware/pull/492,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)","Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)",True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/492#issuecomment-487415102,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)","Congratulations on the pull request @esspe2
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith', 'https://github.com/GeroBH']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/492#issuecomment-487416483,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)","Learning git is a task, for sure.
One good practice is to put unrelated changes into separate PRs. For instance, the 'Corrected bit-masking...' would make sense as a separate PR.
Separating changes makes testing the individual effects easier. It's not a big issue in this case, but you might try it for the practice?",True,"{'THUMBS_UP': ['https://github.com/BarbourSmith'], 'HEART': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/esspe2,4,https://github.com/MaslowCNC/Firmware/pull/492#issuecomment-487417255,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)","Yes, I think like you, but I don't see a way to open a second PR, and all commits go in the open one.
Agreed, the next time I won't mess two unrelated changes",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/492#issuecomment-487418933,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)","üëçüèª You're good. The guestbook is a way to get started learning about git.
Look into the idea of 'git branch'. That's a way of gathering together commits to create a PR. Use separate branches for separate PRs. In this case, a branch for 'guestbook sign-in' and a separate branch for 'Corrected bit-masking...' would work.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/492#issuecomment-487427832,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)","Excellent work!
Git can be pretty intimidating at first, but once you have it down the collaboration it allows is wonderful. There is a program called Github Desktop (https://desktop.github.com/) which can be easier to jump into.
Also as a quick introduction to how things work around here (which is a little different from other projects) this pull request will be automatically be merged by @MaslowCommunityGardenRobot in 48 hours as because @blurfl and I voted for it with the üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/esspe2,7,https://github.com/MaslowCNC/Firmware/pull/492#issuecomment-487803763,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)","Thanks for all the support!
Happily there also is a Github Desktop for linux (https://github.com/shiftkey/desktop), I'll give it a try.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,492,2019-04-28T20:09:28Z,2019-04-30T21:02:39Z,2019-04-30T21:02:39Z,MERGED,True,2,0,1,https://github.com/esspe2,Line added to the guestbook,4,[],https://github.com/MaslowCNC/Firmware/pull/492,https://github.com/MaslowCommunityGardenRobot,8,https://github.com/MaslowCNC/Firmware/pull/492#issuecomment-488114594,"Added my name to the guestbook
and a slight correction of GCode.cpp
and a cancellation of this change ( I keep it for another PR)",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/esspe2,1,https://github.com/MaslowCNC/Firmware/pull/493,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone","Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/493#issuecomment-487422914,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone","Congratulations on the pull request @esspe2
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/spp2', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/493#issuecomment-487428267,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone","I am not in a position right now to test this on hardware so I am not going to vote, but this generally looks good to me üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/493#issuecomment-487430254,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone","I think this will need some testing. It compiles, but...
It looks to me like these functions from NutsAndBolts.h treat the second parameter as a mask instead of as a single bit number as the original code did. That clears, sets or test more bits that intended.
// These are nifty functions from Grbl
#define bit_true(x,mask) (x) |= (mask)
#define bit_false(x,mask) (x) &= ~(mask)
#define bit_istrue(x,mask) ((x & mask) != 0)
#define bit_isfalse(x,mask) ((x & mask) == 0)

The pre-defined Arduino functions bitSet() and bitClear() work on single bits as the original code does.
The logic test in the line
 if (line_flags & LINE_FLAG_COMMENT_PARENTHESES) { line_flags &= ~(LINE_FLAG_COMMENT_PARENTHESES); }

seems plain enough without changing it, though it might be re-written as
if (line_flags & LINE_FLAG_COMMENT_PARENTHESES) { bitClear(line_flags, LINE_FLAG_COMMENT_PARENTHESES); } 

to clarify the bit-clearing operation.
(As aprospero pointed out, this won't work because LINE_FLAG_COMMENT_PARENTHESES is a mask instead of a bit number.)",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/esspe2,5,https://github.com/MaslowCNC/Firmware/pull/493#issuecomment-487470676,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone","Ok,
I understand: beware of the definition, bit number vs bitmask, good point!
By chance this flag is already defined as a bitmask so the macro still works here:
GCode.h:
#define LINE_FLAG_COMMENT_PARENTHESES bit(0)
As for the readability, both ways seem valid, more a question of taste.
I thought better to use macros defined for those cases, which also permit to avoid confusions between  ""!"" and ""~"".
Well, in the last case the 'if' could even be dropped, since the only action is to clear the bit if it is set ;-)
What do you think?
GCode.cpp:
bitClear(line_flags, LINE_FLAG_COMMENT_PARENTHESES);",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/aprospero,6,https://github.com/MaslowCNC/Firmware/pull/493#issuecomment-487535541,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone","esspe2 is right, the nutsandbolts macros from grbl use masks, the builtin arduino functions use bit numbers. Since LINE_FLAG_COMMENT_PARENTHESES is in fact a mask (which masks only one bit) bitClear can't be used in this context but bit_false is ok.
I'm with esspe2, the 'if' should be dropped. The compiler would dop it anyway and the results is easier to read.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/493#issuecomment-487611672,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone","You're both right, the changes work as expected.  üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,493,2019-04-28T22:34:36Z,2019-04-30T23:02:34Z,2019-05-05T19:19:09Z,MERGED,True,4,4,1,https://github.com/esspe2,Correction of some bitwise operations in GCode.cpp  ,9,[],https://github.com/MaslowCNC/Firmware/pull/493,https://github.com/MaslowCommunityGardenRobot,8,https://github.com/MaslowCNC/Firmware/pull/493#issuecomment-488145935,"Convert direct Bitwise operations by macros defined in NutsAndBolts.h, less error-prone",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,494,2019-05-02T18:26:19Z,2019-05-04T19:02:23Z,2019-06-22T06:31:24Z,MERGED,True,12,11,1,https://github.com/blurfl,detach() should run once per state change,2,[],https://github.com/MaslowCNC/Firmware/pull/494,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/494,No need to repeat the operation once it has been accomplished.,No need to repeat the operation once it has been accomplished.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,494,2019-05-02T18:26:19Z,2019-05-04T19:02:23Z,2019-06-22T06:31:24Z,MERGED,True,12,11,1,https://github.com/blurfl,detach() should run once per state change,2,[],https://github.com/MaslowCNC/Firmware/pull/494,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/494#issuecomment-488792605,No need to repeat the operation once it has been accomplished.,"Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/esspe2', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,494,2019-05-02T18:26:19Z,2019-05-04T19:02:23Z,2019-06-22T06:31:24Z,MERGED,True,12,11,1,https://github.com/blurfl,detach() should run once per state change,2,[],https://github.com/MaslowCNC/Firmware/pull/494,https://github.com/esspe2,3,https://github.com/MaslowCNC/Firmware/pull/494#issuecomment-488838246,No need to repeat the operation once it has been accomplished.,"Positive vote for me, seems good practice.",True,{'HEART': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,494,2019-05-02T18:26:19Z,2019-05-04T19:02:23Z,2019-06-22T06:31:24Z,MERGED,True,12,11,1,https://github.com/blurfl,detach() should run once per state change,2,[],https://github.com/MaslowCNC/Firmware/pull/494,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/494#issuecomment-489355745,No need to repeat the operation once it has been accomplished.,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,495,2019-05-02T20:39:46Z,2019-05-04T21:02:29Z,2019-05-05T19:18:50Z,MERGED,True,2,0,1,https://github.com/esspe2,"Update guestBook.txt and say Hello, again!",1,[],https://github.com/MaslowCNC/Firmware/pull/495,https://github.com/esspe2,1,https://github.com/MaslowCNC/Firmware/pull/495,"Line added to the Guestbook (again);
since it had been deleted by my second PR, let's put the right content back after all.
This time I first have created a special branch (Gestbooks-revenge) before adding the line;
hopefully it will be cleaner that way.","Line added to the Guestbook (again);
since it had been deleted by my second PR, let's put the right content back after all.
This time I first have created a special branch (Gestbooks-revenge) before adding the line;
hopefully it will be cleaner that way.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,495,2019-05-02T20:39:46Z,2019-05-04T21:02:29Z,2019-05-05T19:18:50Z,MERGED,True,2,0,1,https://github.com/esspe2,"Update guestBook.txt and say Hello, again!",1,[],https://github.com/MaslowCNC/Firmware/pull/495,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/495#issuecomment-488831160,"Line added to the Guestbook (again);
since it had been deleted by my second PR, let's put the right content back after all.
This time I first have created a special branch (Gestbooks-revenge) before adding the line;
hopefully it will be cleaner that way.","Congratulations on the pull request @esspe2
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,495,2019-05-02T20:39:46Z,2019-05-04T21:02:29Z,2019-05-05T19:18:50Z,MERGED,True,2,0,1,https://github.com/esspe2,"Update guestBook.txt and say Hello, again!",1,[],https://github.com/MaslowCNC/Firmware/pull/495,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/495#issuecomment-488873624,"Line added to the Guestbook (again);
since it had been deleted by my second PR, let's put the right content back after all.
This time I first have created a special branch (Gestbooks-revenge) before adding the line;
hopefully it will be cleaner that way.",Nice work with the branches üòÄ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,495,2019-05-02T20:39:46Z,2019-05-04T21:02:29Z,2019-05-05T19:18:50Z,MERGED,True,2,0,1,https://github.com/esspe2,"Update guestBook.txt and say Hello, again!",1,[],https://github.com/MaslowCNC/Firmware/pull/495,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/495#issuecomment-489365337,"Line added to the Guestbook (again);
since it had been deleted by my second PR, let's put the right content back after all.
This time I first have created a special branch (Gestbooks-revenge) before adding the line;
hopefully it will be cleaner that way.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/esspe2,1,https://github.com/MaslowCNC/Firmware/pull/496,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-488831151,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","Congratulations on the pull request @esspe2
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot'], 'THUMBS_DOWN': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-488860373,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","Have you had a chance to test this? I haven't found a way to cause the print statement to occur. I've tried:


GroundControl strips off comments, but doesn't handle incorrectly bracketed comments properly - it ignores the line. The firmware runs the lines that GC does send without ever seeing the comments. There is an opportunity for a contribution in the GC repo right there...


Using a serial terminal (cycle DTR on/off/on to reset the firmware) to send gcodes with comments, the firmware freezes on receiving any line with a comment, correct or not.


Finally, would one want the firmware to stop or pause execution when a comment issue is detected? Look at the flag ALARM_GCODE_PARAM_ERROR, which posts the message:
There is a parameter error in this line of Gcode - make a note of the line number. Cutting will be put on hold until you choose whether to 'Resume Cut' (skipping this line) or 'Stop'. 
and handles the response.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/esspe2,4,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-488904901,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","Well seen: I didn't make any test, that just seemed logical and better than simply dropping the condition.
I have looked at the ALARM_GCODE_PARAM_ERROR flag and its message; even after hours of thinking I don't know which behavior is best.

ignore (actual)
warn and continue (my proposal)
stop and ask for reply to resume/stop (as with the flag)

You wouldn't find a way to cause its statement to print either üòâ (it isn't used anywhere)
Either way, if the firmware freeze appeared with this change, I'll close the PR; tell me what you see.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-488918250,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","The firmware freezes even without this change, so for that it doesn't matter.
I would suggest that stopping a cut to tell the user that a line is about to be skipped is very important. A path can be very distorted if one of its steps is eliminated. Stopping gives the operator a chance to fix things or cut their losses before expensive material is damaged. For that reason I lean toward a üëévote.
I'm not in a position to do anything about the firmware freeze issue though.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/davidelang,6,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-488952260,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","the problem is that you may freeze with the bit in contact with the wood, that
can lead to burning the wood, if not setting a fire.

if you are going to stop and complain, move the bit to the safe height first,
and then move it back into the wood after the fault is acknowledged.

It would be safer to have GC check the g-code when it loads the file.


David Lang
‚Ä¶
On Thu, 2 May 2019, Scott Smith wrote:
 Date: Thu, 02 May 2019 20:44:23 -0700
 From: Scott Smith ***@***.***>
 Reply-To: MaslowCNC/Firmware
     ***@***.***>
 To: MaslowCNC/Firmware ***@***.***>
 Cc: Subscribed ***@***.***>
 Subject: Re: [MaslowCNC/Firmware] Update GCode.cpp (#496)

 The firmware freezes even without this change, so for that it doesn't matter.
 I would suggest that stopping a cut to tell the user that a line is about to be skipped is very important. A path can be very distorted if one of its steps is eliminated. Stopping gives the operator a chance to fix things or cut their losses before expensive material is damaged. For that reason I lean toward a üëévote.
 I'm not in a position to do anything about the firmware freeze issue though.

 --
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly or view it on GitHub:
 #496 (comment)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-488985755,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","if you are going to stop and complain, move the bit to the safe height first,
and then move it back into the wood after the fault is acknowledged.

The stop alert pops up for other faults besides this one. 'Stop' behavior would make a good issue on its own.

It would be safer to have GC check the g-code when it loads the file.

Agreed, presently GC swallows the lines with faulty comments and sends a gcode stream missing those lines. This too is a separate issue. What other gcode senders are you familiar with - do they eat comments or send them on?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/esspe2,8,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-489027097,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","Other firmwares don't seem to bother with comments in gcode, if I have searched well:
Grbl, Repetier-DaVinci and Marlin gave me no clues about that, but I didn't look thoroughly of course.
So comments cleaning would be the responsibility of GC?
Then 'ignore' would be the best choice, just to be fool-proof.
And that PR set aside, some new issues could be filed after this discusssion.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,496,2019-05-02T20:59:23Z,2019-05-04T12:31:05Z,2019-05-04T12:33:35Z,CLOSED,False,7,1,1,https://github.com/esspe2,Modify ')' parsing in GCode.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/496,https://github.com/esspe2,9,https://github.com/MaslowCNC/Firmware/pull/496#issuecomment-489322831,"As discussed before, this condition seemed useless or incomplete.
In the latter case I put a pertinent warning following what I have understood.","OK we may abandon this PR for now: my change is useless before fixing the freeze behavior pointed by blrufl.
Btw this freeze seems to happen if there is at least one character after the opening parenthesis.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,498,2019-05-07T21:49:08Z,2019-05-09T22:02:24Z,2019-05-09T22:02:24Z,MERGED,True,6,4,1,https://github.com/esspe2,Move directWrite outside the loop,1,[],https://github.com/MaslowCNC/Firmware/pull/498,https://github.com/esspe2,1,https://github.com/MaslowCNC/Firmware/pull/498,"No need to repeat 1000 times the same actions, it seems sufficient to do the directWrite only once before the loop instead.","No need to repeat 1000 times the same actions, it seems sufficient to do the directWrite only once before the loop instead.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,498,2019-05-07T21:49:08Z,2019-05-09T22:02:24Z,2019-05-09T22:02:24Z,MERGED,True,6,4,1,https://github.com/esspe2,Move directWrite outside the loop,1,[],https://github.com/MaslowCNC/Firmware/pull/498,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/498#issuecomment-490271452,"No need to repeat 1000 times the same actions, it seems sufficient to do the directWrite only once before the loop instead.","Congratulations on the pull request @esspe2
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,498,2019-05-07T21:49:08Z,2019-05-09T22:02:24Z,2019-05-09T22:02:24Z,MERGED,True,6,4,1,https://github.com/esspe2,Move directWrite outside the loop,1,[],https://github.com/MaslowCNC/Firmware/pull/498,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/498#issuecomment-490309921,"No need to repeat 1000 times the same actions, it seems sufficient to do the directWrite only once before the loop instead.",Glad to see you combing through the code @esspe2! Keep up the good work! üíØüëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,498,2019-05-07T21:49:08Z,2019-05-09T22:02:24Z,2019-05-09T22:02:24Z,MERGED,True,6,4,1,https://github.com/esspe2,Move directWrite outside the loop,1,[],https://github.com/MaslowCNC/Firmware/pull/498,https://github.com/esspe2,4,https://github.com/MaslowCNC/Firmware/pull/498#issuecomment-490747467,"No need to repeat 1000 times the same actions, it seems sufficient to do the directWrite only once before the loop instead.","Thanks for your good words!
The call chain to the eeprom write is more like this:

 maslowDelay() 
 -> execSystemRealtime() 
 -> systemSaveAxesPosition() 
 -> settingsSaveStepstoEEprom() 
 -> EEPROM.put(310, sysSteps)


so this change doesn't really improve the eeprom issue, but I still feel it useful.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,498,2019-05-07T21:49:08Z,2019-05-09T22:02:24Z,2019-05-09T22:02:24Z,MERGED,True,6,4,1,https://github.com/esspe2,Move directWrite outside the loop,1,[],https://github.com/MaslowCNC/Firmware/pull/498,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/498#issuecomment-491084509,"No need to repeat 1000 times the same actions, it seems sufficient to do the directWrite only once before the loop instead.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/esspe2,1,https://github.com/MaslowCNC/Firmware/pull/499,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493715823,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","Congratulations on the pull request @esspe2
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/esspe2']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493716789,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","I'm not seeing those compiler warnings using the Arduino IDE 1.8.9, even with 'All' compiler warnings and 'verbose' output enabled. I don't see them in PlatformIO either. How could one find them to test the patch?
I think I see, this is an improvement on the previous 'compiler work-around', pulled back into System::setupAxes() instead of happening separate functions. That does get all the setup done in one place üëç.
I'd suggest adding the definitions of aux7..aux9 to each of the (pcbVersion == 0), ...1, ...2 sections to avoid the logic stub

}else{  // default values to keep compiler from complaining

on the end of the (pcbVersion == 3) section. Subsequent board versions would make that test messier.
Assigning them negative numbers to flag unused values is a good approach. This should should work for users who have made local changes to the AUX assignments for their own setups - their values won't be overwritten.
I think that defining the 'unused' AUX pins as INPUT would be safer than INPUT_PULLUP, though. We don't know what might be connected to those pins; they are initialized as INPUT by the Arduino firmware initialization routine which leaves them at 0 volts. The INPUT_PULLUP option puts IOREF voltage (3v3 or 5v) on the pin and might turn something on unintentionally.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/esspe2,4,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493741640,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","Strange, I have used the 1.8.2 version and didn't think that could make such difference.
Will switch shortly and correct the mistake of the aux5 line.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/esspe2,5,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493759948,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","I am still able to see the warnings in 1.8.9...
Here is the same gcc line as launched by the IDE, I see -Wall -Wextra :
$ rm /tmp/arduino_build_917408/sketch/System.cpp.o
$ ~/.arduino15/packages/arduino/tools/avr-gcc/5.4.0-atmel3.6.1-arduino2/bin/avr-g++ \
>        -c -g -Os -Wall -Wextra -std=gnu++11 -fpermissive -fno-exceptions \
>        -ffunction-sections -fdata-sections -fno-threadsafe-statics \
>        -Wno-error=narrowing -MMD -flto -mmcu=atmega2560 -DF_CPU=16000000L \
>        -DARDUINO=10809 -DARDUINO_AVR_MEGA2560 -DARDUINO_ARCH_AVR \
>        -I~/arduino-1.8.9/hardware/arduino/avr/cores/arduino \
>        -I~/arduino-1.8.9/hardware/arduino/avr/variants/mega \
>        -I~/arduino-1.8.9/libraries/Servo/src \
>        -I~/arduino-1.8.9/hardware/arduino/avr/libraries/EEPROM/src \
>        /tmp/arduino_build_917408/sketch/System.cpp \
>        -o /tmp/arduino_build_917408/sketch/System.cpp.o
/tmp/arduino_build_917408/sketch/System.cpp:254:43: warning: unused parameter 'aux3' [-Wunused-parameter]
 void configAuxLow(int aux1, int aux2, int aux3, int aux4, int aux5, int aux6) {
                                           ^
/tmp/arduino_build_917408/sketch/System.cpp:254:63: warning: unused parameter 'aux5' [-Wunused-parameter]
 void configAuxLow(int aux1, int aux2, int aux3, int aux4, int aux5, int aux6) {
                                                               ^
/tmp/arduino_build_917408/sketch/System.cpp:254:73: warning: unused parameter 'aux6' [-Wunused-parameter]
 void configAuxLow(int aux1, int aux2, int aux3, int aux4, int aux5, int aux6) {
                                                                         ^
/tmp/arduino_build_917408/sketch/System.cpp:262:24: warning: unused parameter 'aux7' [-Wunused-parameter]
 void configAuxHigh(int aux7, int aux8, int aux9) {
                        ^
/tmp/arduino_build_917408/sketch/System.cpp:262:34: warning: unused parameter 'aux8' [-Wunused-parameter]
 void configAuxHigh(int aux7, int aux8, int aux9) {
                                  ^
/tmp/arduino_build_917408/sketch/System.cpp:262:44: warning: unused parameter 'aux9' [-Wunused-parameter]
 void configAuxHigh(int aux7, int aux8, int aux9) {
                                            ^
$ 

Or maybe it's because my preferences.txt file contains these lines :
build.verbose=true
compiler.warning_level=all

At the end, that also could be from the ~/.arduino15/packages/arduino/hardware/megaavr/1.6.26/platform.txt file:
compiler.warning_flags=-w
compiler.warning_flags.none=-w
compiler.warning_flags.default=
compiler.warning_flags.more=-Wall
compiler.warning_flags.all=-Wall -Wextra",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/esspe2,6,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493760924,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","Cannot see better solution than this bunch of -1 's assignations for now;

I'd suggest adding the definitions of aux7..aux9 to each of the (pcbVersion == 0), ...1, ...2 sections to avoid the logic stub

But can you guarantee that all cases are taken into account without a last else ?
I fear the compiler is too dumb for that: you can see warnings related to aux3, aux5, ... too.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493767371,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","But can you guarantee that all cases are taken into account without a last else ?

That last else changes the value of all the auxX variables for all except whatever the is last (pcvVersion == ...). Before the patch, one could use those variables to reference gpio pins as defined by a specific board.

Cannot see better solution than this bunch of -1 's assignations for now;

What do you think about this approach
// Assign AUX pins to extern variables used by functions like Spindle and Probe
void configAuxLow(int aux1, int aux2, int aux3, int aux4, int aux5, int aux6) {
  SpindlePowerControlPin = aux1;   // output for controlling spindle power
  ProbePin = aux4;                 // use this input for zeroing zAxis with G38.2 gcode
  LaserPowerPin = aux2;            // output for controlling a laser diode
  pinMode(LaserPowerPin, OUTPUT);
  digitalWrite(LaserPowerPin, LOW);
  int unused;
  unused = aux3;
  unused = aux5;
  unused = aux6;
}

void configAuxHigh(int aux7, int aux8, int aux9) {
  int unused;
  unused = aux7;
  unused = aux8;
  unused = aux9;
}


That satisfies the compiler warnings listed above, though it generates an error that 'unused' is .... unused.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/esspe2,8,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493771373,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","That last else changes the value of all the auxX variables

I don't think so: from my point of view, each auxX receive only one value, precisely in one of the if's or in the last else.
If it is set in the if's, the  else won't do anything.
There is always only one assignment for all variables (unless I'm mistaken).
Beware, this PR relates to two warnings: uninitialized variables and unused variables.
For the uninitialized variables, I think the compiler won't be happy unless we give him the else statement, or some initial value like  int aux1=-1; and s.o. at line 96.  Question of taste.
If the famous else is executed, we know that no board was recognized, hence pins have not been defined, with or without the patch.
So I still see no harm to leave the block of -1's, just in case a new board came before upgrading the firmware.
Another alternative could be to replace the last test with an else, ie :
   else if(pcbVersion == 3){ // TLE5206
by:
    else { // TLE5206 by default
(still not convinced but it works)
Either way, if I were to push my thoughts further, the runtime should stop and yell something like board unrecognized, or version pins configuration unknown.
As for the unused variables, maybe any operation would do the trick, but at the end, it's just a way to help us build better code so I'm more inclined to simplify the code.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/blurfl,9,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493776164,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","If the famous else is executed, we know that no board was recognized, hence pins have been defined, with or without the patch.

Oops, I see that now. I plead lack of coffee...
Moving the value assignments up to where the auxN variables are defined does eliminate the need for assignments in a final famous else clause. Doesn't that also make the 'if(pcbVersion == 3){ // TLE5206' test in line 268 of the patch unnecessary? All nine auxN pins will have values regardless of which pcbVersion is detected.  What about including lines to set pinMode for aux1, aux2 and aux4 but comment them out, for completeness?

If the famous else is executed, we know that no board was recognized, hence pins have been defined, with or without the patch. ... the runtime should stop and yell something like board unrecognized, or version pins configuration unknown.

That would be a good separate patch, maybe create an alarm so Report.cpp could trigger GC to put up a dialog to alert the user. Something along the lines of ALARM_POSITION_LIMIT_ERROR? Should the test live in getPCBVersion()? FWIW, that's another place that could use some attention...

As for the unused variables, maybe any operation would do the trick, but at the end, it's just a way to help us build better code

üëçüëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493781295,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","That all works as advertised, üëç. Just curious, is the test for (pcbVersion >= 3) still needed in line 268? Is there any harm in handling all board versions the same, now that they all have the full seet of aux pin definitions?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/esspe2,11,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493784844,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.","Correct, I think the same!
I'm making the change right now, that will also be cleaner.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-493785879,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.",Looks very good üíØ Don't forget to cast your own vote at the bottom of  üëçthe MaslowCommunityGardenRobot's comment!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,499,2019-05-18T23:59:49Z,2019-05-21T00:01:51Z,2019-05-21T00:01:51Z,MERGED,True,32,23,4,https://github.com/esspe2,Avoid compiler warnings about aux3...aux9,7,[],https://github.com/MaslowCNC/Firmware/pull/499,https://github.com/MaslowCommunityGardenRobot,13,https://github.com/MaslowCNC/Firmware/pull/499#issuecomment-494191155,"Variables aux3 ... aux9 needed to be initialized and used, or the compiler emits warnings.
A negative value has been set initially, and dummy actions avoid the warning.
If in doubt, INPUT_PULLUP was used so that pins don't float and don't fire any interrupts for no reason.
This version doesn't use functions as workaround against the warnings, so assignations have been put back in setupAxes(), hopefully their intended place originally.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/501,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494260634,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"I've tested this against Maslow boards v1.1, v1.2 and a TLE5206 board. All those pass the GC 'Test Motors' test after this patch. Before the patch, the TLE5206 board did not.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494265798,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/davidelang', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494304412,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"It would be nice to understand what is going wrong and how we broke things, but I support this as a quick fix. I think we might encounter other weirdness down the road until we know what is happening so let's keep our eye on the underlying cause if we do",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494494787,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"Edit - testing with static loads on the motors suggest that coasting may be another cause. Adding a short wait for the motors to coast to a stop before changing direction is another possible patch.
The TLE5206 chip is asserting its open-collector Error Flag, which we connect to ENx but don't pay attention to. (_pwmPin in Motor.cpp, note to self - needs to be initialized INPUT_PULLUP).
When the movement commanded by Motor::write() is a start from a dead stop or while the motor is coasting and the direction abruptly changes, the TLE5206 can see the motor windings as a dead short and asserts EF.
The EF is cleared by toggling one or the other INx inputs. When the speed is less than full throttle, a pwm signal accomplishes this reset. Watching on a scope with pwm=254, after around 20 PWM pulses the motor has reached a speed where it no longer triggers EF.
I haven't looked to see why it worked back before PR#489, but a guess is that back then Axis::detach() was called frequently (in detachIfIdle()?) which would have toggled the INx lines if they were HIGH.
This patch would address the EF issue any time Motor::write() is called with max speed.
I did find that another way to accomplish this is to put a 'soft start' wait for the motor to coast to a stop in Axis::test() ahead of the second direction movement, like
    if (TLE5206) {
        // let the motor coast to a stop
        maslowDelay(100);
    }

I tested that approach with no a load on the motors and it worked, I'd have to change the setup here to test with loads on the motors.
That would more tightly focus this patch on the 'Test Motors' issue. What do you think?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494554792,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"Mmmm that makes more sense. So with a load on the motor it coasts less and so the issue is less likely to show up. If we put a delay in there does that solve the issue fully? I would feel more comfortable with a delay than a lockout of 255. Do you think this could be an issue while the machine is running, or does it seem like just a quirk with the test?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/davidelang,7,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494555720,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"On Tue, 21 May 2019, BarbourSmith wrote:
 Mmmm that makes more sense. So with a load on the motor it coasts less and so
 the issue is less likely to show up. If we put a delay in there does that
 solve the issue fully? I would feel more comfortable with a delay than a
 lockout of 255. Do you think this could be an issue while the machine is
 running, or does it seem like just a quirk with the test?
If we are not going to monitor the error pin, then we need to avoid situations
where this is critical. locking out 255 entirely is not that bad a thing.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494575786,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"If we are not going to monitor the error pin, then we need to avoid situations
where this is critical. locking out 255 entirely is not that bad a thing.

How about I put up a separate PR with the other approach and let the votes make the choice?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/davidelang,9,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494581260,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"On Tue, 21 May 2019, Scott Smith wrote:
> If we are not going to monitor the error pin, then we need to avoid situations
 where this is critical. locking out 255 entirely is not that bad a thing.

 How about I put up a separate PR with the other approach and let the votes make the choice?
If someone is willing to go to the effort of monitoring the pin and reacting
properly (including that it happened), that is clearly the best thing to do. But
if we don't have someone who is ready to do that, limiting it to 254 is a
quick-and-dirty fix.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494583426,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"monitoring the pin and reacting

Unfortunately all the interrupts are committed for the encoders. In lieu of that where would be an appropriate place to trigger the check of the error flags? One possibility is at the end of execSystemRealtime() which runs from the main loop() as well as from maslowDelay();",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/davidelang,11,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494584451,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"On Tue, 21 May 2019, Scott Smith wrote:
> monitoring the pin and reacting

 Unfortunately all the interrupts are committed for the encoders. In lieu of
 that where would be an appropriate place to trigger the check of the error
 flags? One possibility is at the end of execSystemRealtime() which runs from
 the main loop() as well as from maslowDelay();
this stays high until cleared, so it doesn't need to be an interrupt.

how bad would it be to wait until the next position calculation loop cycle?

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494587374,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"this stays high until cleared

The Axis::test() function doesn't use position calculation, but it does call maslowDelay() which calls execSystemRealtime(). That might be a good enough place to check it.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/davidelang,13,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494587949,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"this doesn't belong in the test subroutine, this is something that should be in
place for any time the motor is being driven.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/blurfl,14,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-494594003,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,"in place for any time the motor is being driven

Use your üëç vote here for that
or here for the patch that is confined to the 'Test Motors' issue.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,501,2019-05-21T06:34:15Z,2019-05-23T07:02:22Z,2019-06-22T06:34:57Z,MERGED,True,1,0,1,https://github.com/blurfl,Avoid PWM value 255 for TLE5206,1,[],https://github.com/MaslowCNC/Firmware/pull/501,https://github.com/MaslowCommunityGardenRobot,15,https://github.com/MaslowCNC/Firmware/pull/501#issuecomment-495093447,This patch only affects TLE5206 boards. If the PWM value is 255 it is changed to 254. This works around the  symptom noted in issue #500,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MarcinanProfesjonalista,1,https://github.com/MaslowCNC/Firmware/pull/502,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494454113,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Congratulations on the pull request @MarcinanBarbarzynca
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot'], 'THUMBS_DOWN': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494559431,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","It looks like the lint check is complaining with error:
System.cpp:240:5: error: 'else' without a previous 'if'
Which I think is caused by the else statement on 206 being followed by the if else further down, I believe that the last statement needs to be else.
I really like what you have done with making it possible to use a stand alone L298N board. Are you want to use a custom board version instead of matching the inputs to one of the existing ones? If you feel like you really need to go that route it's OK by me.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494573891,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","I can't remember the specific reason, but I know that the present firmware is crafted to avoid using D11, D12 or D13 as a PWM pin. That could give you trouble. Look at Motor::write() to see what I mean.
It would take some reworking the PCB, but using the same pin definitions for the L298 chip signals as the version 1 or version 2 board would make the software modifications much easier. No changes would be needed for Motor.cpp, for instance, and that's where the tricky parts are.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494580651,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","The existing versions are based around if there is one direction pin and an
enable pin to pulse or if there are different enable pins for each direction

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/esspe2,6,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494604335,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Maybe you have to fetch the last version of the firmware: with the PR #499, the test on the version 1.3 has been removed, so it has to be put back with a last else for your 4th version:
Before:
else { // (pcbVersion == 3) // TLE5206
    //TLE5206 PCB v1.3 Detected
   ( ... )
}

After:
else if (pcbVersion == 3){ // TLE5206
    //TLE5206 PCB v1.3 Detected
    ( ... )
}
else { // (pcbVersion == 4){//version not assigned
    //DIY motor shield for external H bridges.  
    (...)
}

Edit:
don't forget to change getPCBVersion() accordingly.",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MarcinanProfesjonalista,7,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494848279,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","I can't remember the specific reason, but I know that the present firmware is crafted to avoid using D11, D12 or D13 as a PWM pin. That could give you trouble. Look at Motor::write() to see what I mean.
It would take some reworking the PCB, but using the same pin definitions for the L298 chip signals as the version 1 or version 2 board would make the software modifications much easier. No changes would be needed for Motor.cpp, for instance, and that's where the tricky parts are.

Ok. Ill try to prepare new prototype for that :P",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494860643,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","PCB creation, software crafting, learning to use github, there's a lot of tasks to making a new board, it's an exciting process and you're making a good contribution, but there's a bit more work to do before this is ready for a PR. ;)
I think that the best way to do it is to wait until the whole thing - board and firmware - are made and tested and found to work, then create the PR. Before then, push your changes to your own fork, keep your own master current with the upstream master, and when all the coding is done with no more 'little touches' to take care of, then it will be time.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MarcinanProfesjonalista,9,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494862415,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.",I need to know witch pins are connected to make it 1.2 Version board. Give me 2 H to make new PCB,True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/esspe2,10,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494863875,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Why is there already some mention of a 1.4 board before your mod?
You may have to rename yours to ""1.5"" because getPCBVersion()¬† comments are rather confusing.between 1.3 and 1.4, someone please correct me if I'm wrong.
I think that the CI (failed)check is based on the latest version, but you started from before the PR #499.
So it doesn't understand which version of line 206 you have, and doesn't put back the if.
Do something like : save all your work, git fetch origin, git branch board1.5, copy your work, make another PR.
Or does some Git guru know a better way?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MarcinanProfesjonalista,11,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494871360,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Here is DIY version 1.2
https://easyeda.com/polaski/maslow-diy-1-2-shield-for-external-h-drivers
There is description witch pins connect to 5v and GND to get version 1.2, I don't understand it :(",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/esspe2,12,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494882485,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Here is some info for the pins of the documented board which is named ""V1.2b"":
From Config.h:
// Define version detect pins
#define VERS1 22
#define VERS2 23
#define VERS3 24
#define VERS4 25
#define VERS5 26
#define VERS6 27

Looking at:  https://raw.githubusercontent.com/MaslowCNC/Electronics/master/PowerDistributionBoardSchematic.PNG

JP3 connects pins 22&23 to 5V ,
JP4 connects pins 52&53 to GND. EDIT: not recommended for new designs

By chance pins pullups are defined in getPCBVersion(), which means:
VERS1==1 (used)
VERS2==1 (used)
VERS3==1 (unconnected ??)
VERS4==1 (unconnected ??)
VERS5==1 (unconnected ??)
VERS6==1 (unconnected ??)
PIN52==0 (unused ??)
PIN53==0 (unused ??)

I replicated the JP3 JP4 connexions on my prototype, which seems to work, but I feel that something has to be done about those pins 52&53, maybe you should connect them to the ground too.",True,{'THUMBS_UP': ['https://github.com/MarcinanProfesjonalista']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/blurfl,13,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494883377,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Here is DIY version 1.2

That will make your life very much easier - you shouldn't need to make any changes to Motors.cpp with this new layout. üíØ This is a great example of a hardware solution solving eliminating a scaly software issue :P

There is description witch pins connect to 5v and GND to get version 1.2

Here's my understanding:
On the original Maslow L298P boards, 
D22-D23 and D52-D53 on XIO were used to 
indicate the board revision number in binary. 
The software read these pins and detect the 
shield version.

#53-#52           #23-#22
-------           -------
GND-GND           GND-5V  -> rev.0001
GND-GND           5V-GND  -> rev.0002
GND-GND           5V-5V   -> rev.0003

Because D52 and D53 are used for 
SPI, newer boards should uses D22-D27.

#27-#26  #25-#24  #23-#22
-------  -------  -------
GND-GND  GND-5V   GND-GND -> rev 1.3. TLE5206
GND-GND  GND-5V   GND-5V  -> rev 1.4
GND-GND  GND-5V   5V -5V  -> rev 1.5  TLE9201 

You'll still need a version 1.4 definition, though, to get your AUX pin definitions. I didn't look to see whether your INCnA and INCnB pins match 1.2, but those will get handled by your 1.4 section as well. I don't think you would need any other changes to the firmware.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/esspe2,14,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494890474,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Thanks @blurfl , I was wondering what happened to the pins #53-#52.
Awww I see: duel between identification and SPI : ""this town ain't big enough for the both of us"".
Winner : SPI  !
But is it the end ? Maybe we still could use them in the version check AND afterwards for SPI if needed, I have some ideas.
OK, SPI SS/SCK pins are used without running the controller, so no check would do the trick.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MarcinanProfesjonalista,15,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494902170,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Here is my version 1.4 board.
https://docs.google.com/document/d/1dOIk3eNJ1dNO3xcWViaV02fj7BChyFAuJ0R7hZSsiss/edit?usp=sharing
https://easyeda.com/polaski/maslow-cnc-shield-v2
I updated pinouts
Here is my version 1.2 board:
https://easyeda.com/polaski/maslow-diy-1-2-shield-for-external-h-drivers
Here are description how to make one. (it still uses old pictures, when i made 1st prototype).
https://docs.google.com/document/d/1Wpc170mOkvBkJqCRWKsikC4eK_wcvOzLPOi6yunFxas/edit
When I will get motors and router from china (60 days) I will try to make 7-10 cnc mashines one by one.",True,{'EYES': ['https://github.com/MarcinanProfesjonalista']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/blurfl,16,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494910649,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Making great progress üëçüèª
If you're open to one more suggestion, instead of using the 5V supply pin of the Arduino, use the IOREF pin. The IOREF pin is internally tied to the 5V supply on Arduinos that use 5V, and tied to the 3.3V supply on Arduinos and compatibles that can be damaged by 5V on the inputs (Arduino Due, Teensy 3.6, Grand Central Metro). With that change, the boards would would work with the MaslowDue firmware with very few software changes. It's a hardware change that opens up software options.",True,{'THUMBS_UP': ['https://github.com/MarcinanProfesjonalista']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MarcinanProfesjonalista,17,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494911652,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Soo. What do You all think... Shall i get DIY version as 1.4?
I connected version pins as blurfl suggested.
Now we have 1.4 with 9 AUX pins and 1.2 with 6 aux.
I can't push my commit with 1.4 update :|.
On Arduino IDE i can upload main Maslow program, but when i try my own it gets some EEPROM error ""internal compiler error: Segmentation fault"".
When i replace version 3 with my code it works normally.
OK I now see that IOREF pin. Its top over Reset pin.
Now IOREF is used as 5v source for encoder.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/blurfl,18,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494938033,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Soo. What do You all think...

Your v1.2 board looks like it will run using the stock releases of firmware, which is a big plus for supporting users who are more comfortable with woodworking than with firmware versioning.
I'd suggest that you develop your v1.4 board on your own fork of the firmware and wait to merge it here until you've done more with it there.
At this point, this PR only seems to modify some of the whitespace in the System.cpp file. Perhaps it should be closed?",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/MarcinanProfesjonalista,19,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494943247,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Ye. I need to get rid my versioning. I will lock my self in 1.2 version for while, because I need to learn how to interact with github.
I will prepare better guide, maybe video on ""How to make Your Maslow 1.2 cnc shield for 15$"" (10$ for h bridges + 5$ for other parts)
The version 1.4 witch 9 AUX is ready to get own place in System.cpp, but i wont post it (conflicts + warnings xD).  https://docs.google.com/document/d/1dOIk3eNJ1dNO3xcWViaV02fj7BChyFAuJ0R7hZSsiss/edit <The pinouts will stay the same for probably 6 months",True,"{'THUMBS_UP': ['https://github.com/blurfl'], 'HEART': ['https://github.com/blurfl', 'https://github.com/BarbourSmith'], 'HOORAY': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/blurfl,20,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-494945658,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.",There's a lot to learn with github :) Your v1.2 board looks like it will make it very easy for someone to make. Great contributions!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,502,2019-05-21T15:43:37Z,2019-05-22T19:48:32Z,2019-05-23T00:12:55Z,CLOSED,False,2,13,1,https://github.com/MarcinanProfesjonalista,Added version 4,7,[],https://github.com/MaslowCNC/Firmware/pull/502,https://github.com/BarbourSmith,21,https://github.com/MaslowCNC/Firmware/pull/502#issuecomment-495020013,"Here is link to thread
https://forums.maslowcnc.com/t/managing-motors-with-dual-l298n/9896
Here is link to new shield prepared under DIY and external H bridges for people that need more current for their motors.
https://easyeda.com/polaski/maslow-cnc-shield-v2
I need to change attach version pins on board at the moment, so please write your suggestion on forum.","Excellent progress! I think a write up on how to build a DIY shield cheaply would be an awesome thing for the community. I know you are not alone in wanting that so hopefully you can save someone else the hassle of having to work it all out.
Jumping way back in the conversation:

I can't remember the specific reason, but I know that the present firmware is crafted to avoid using D11, D12 or D13 as a PWM pin. That could give you trouble. Look at Motor::write() to see what I mean.

Those pins use the same timers that we use to trigger some of our internal calculations to generate their PWM signals and so the PWM signals are not reliable on those pins. What you've done with using the 1.2 pinout is the right way to go. That is the best pinout we've found so far.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,503,2019-05-21T22:06:28Z,2019-05-23T23:01:59Z,2019-06-22T06:35:11Z,CLOSED,False,6,1,2,https://github.com/blurfl,Confine changes to Axis::test(),1,[],https://github.com/MaslowCNC/Firmware/pull/503,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/503,"This patch only affects TLE5206 boards. This works around the symptom noted in issue #500, addressing it as a motor coasting issue.

The TLE5206 chip is asserting its open-collector Error Flag, which we connect to ENx but don't pay attention to. (_pwmPin in Motor.cpp, note to self - needs to be initialized INPUT_PULLUP).
When the movement commanded by Motor::write() is a start from a dead stop or while the motor is coasting and the direction abruptly changes, the TLE5206 can see the motor windings as a dead short and asserts EF.","This patch only affects TLE5206 boards. This works around the symptom noted in issue #500, addressing it as a motor coasting issue.

The TLE5206 chip is asserting its open-collector Error Flag, which we connect to ENx but don't pay attention to. (_pwmPin in Motor.cpp, note to self - needs to be initialized INPUT_PULLUP).
When the movement commanded by Motor::write() is a start from a dead stop or while the motor is coasting and the direction abruptly changes, the TLE5206 can see the motor windings as a dead short and asserts EF.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,503,2019-05-21T22:06:28Z,2019-05-23T23:01:59Z,2019-06-22T06:35:11Z,CLOSED,False,6,1,2,https://github.com/blurfl,Confine changes to Axis::test(),1,[],https://github.com/MaslowCNC/Firmware/pull/503,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/503#issuecomment-494590135,"This patch only affects TLE5206 boards. This works around the symptom noted in issue #500, addressing it as a motor coasting issue.

The TLE5206 chip is asserting its open-collector Error Flag, which we connect to ENx but don't pay attention to. (_pwmPin in Motor.cpp, note to self - needs to be initialized INPUT_PULLUP).
When the movement commanded by Motor::write() is a start from a dead stop or while the motor is coasting and the direction abruptly changes, the TLE5206 can see the motor windings as a dead short and asserts EF.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot'], 'THUMBS_DOWN': ['https://github.com/davidelang', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,503,2019-05-21T22:06:28Z,2019-05-23T23:01:59Z,2019-06-22T06:35:11Z,CLOSED,False,6,1,2,https://github.com/blurfl,Confine changes to Axis::test(),1,[],https://github.com/MaslowCNC/Firmware/pull/503,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/503#issuecomment-494594782,"This patch only affects TLE5206 boards. This works around the symptom noted in issue #500, addressing it as a motor coasting issue.

The TLE5206 chip is asserting its open-collector Error Flag, which we connect to ENx but don't pay attention to. (_pwmPin in Motor.cpp, note to self - needs to be initialized INPUT_PULLUP).
When the movement commanded by Motor::write() is a start from a dead stop or while the motor is coasting and the direction abruptly changes, the TLE5206 can see the motor windings as a dead short and asserts EF.","we need to fix this everywhere, not just in the test() function.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,503,2019-05-21T22:06:28Z,2019-05-23T23:01:59Z,2019-06-22T06:35:11Z,CLOSED,False,6,1,2,https://github.com/blurfl,Confine changes to Axis::test(),1,[],https://github.com/MaslowCNC/Firmware/pull/503,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/503#issuecomment-495018806,"This patch only affects TLE5206 boards. This works around the symptom noted in issue #500, addressing it as a motor coasting issue.

The TLE5206 chip is asserting its open-collector Error Flag, which we connect to ENx but don't pay attention to. (_pwmPin in Motor.cpp, note to self - needs to be initialized INPUT_PULLUP).
When the movement commanded by Motor::write() is a start from a dead stop or while the motor is coasting and the direction abruptly changes, the TLE5206 can see the motor windings as a dead short and asserts EF.",I like this dueling pull requests thing üòÄ ... I think the other one is the proper solution because we don't want the machine to end up working differently during the test than during a cut,True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,503,2019-05-21T22:06:28Z,2019-05-23T23:01:59Z,2019-06-22T06:35:11Z,CLOSED,False,6,1,2,https://github.com/blurfl,Confine changes to Axis::test(),1,[],https://github.com/MaslowCNC/Firmware/pull/503,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/503#issuecomment-495414575,"This patch only affects TLE5206 boards. This works around the symptom noted in issue #500, addressing it as a motor coasting issue.

The TLE5206 chip is asserting its open-collector Error Flag, which we connect to ENx but don't pay attention to. (_pwmPin in Motor.cpp, note to self - needs to be initialized INPUT_PULLUP).
When the movement commanded by Motor::write() is a start from a dead stop or while the motor is coasting and the direction abruptly changes, the TLE5206 can see the motor windings as a dead short and asserts EF.",It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/505,,,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495038880,,"Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495045244,,Excellent documentation! I would thumbs up it three times if I could üëç üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495471869,,"Could you add the explination about how the pins are used on the different
versions (the same explination that you gave me about why you needed the new
board id because the different chip types use different ways of signalling
direction, speed, and enable)

David Lang

  On Wed, 22 May 2019, Scott Smith wrote:
‚Ä¶
 Date: Wed, 22 May 2019 18:42:13 -0700
 From: Scott Smith ***@***.***>
 Reply-To: MaslowCNC/Firmware
     ***@***.***>
 To: MaslowCNC/Firmware ***@***.***>
 Cc: Subscribed ***@***.***>
 Subject: [MaslowCNC/Firmware] Add comments to document the board versioning
     system (#505)


 You can view, comment on, or merge this pull request online at:

  #505

 -- Commit Summary --

  * Add comments to document the versioninbg syst

 -- File Changes --

    M cnc_ctrl_v1/System.cpp (29)

 -- Patch Links --

 https://github.com/MaslowCNC/Firmware/pull/505.patch
 https://github.com/MaslowCNC/Firmware/pull/505.diff",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495472514,,"the code says which pins are input and output for each motor, but they don't
describe the 'two pins to determine direction' vs 'one drection, one enable,
either can be PWM' vs...

That's the type of info I think needs to appear in this file as well.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/blurfl,6,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495475976,,"but they don't describe the 'two pins to determine direction' vs 'one drection, one enable, either can be PWM' vs...

That's better handled by reading the data sheets for the respective ICs. The complexities go beyond what's appropriate in a firmware comment. That's where it is appropriate to read the fine manual.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/davidelang,7,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495484486,,"On Thu, 23 May 2019, Scott Smith wrote:
> but they don't describe the 'two pins to determine direction' vs 'one drection, one enable, either can be PWM' vs...

 That's better handled by reading the data sheets for the respective ICs. The complexities go beyond what's appropriate in a firmware comment. That's where it is appropriate to read the fine manual.
in  that case, a link to the data sheets is appropriate (but I really thnk the
simple explination you gave me would be good to have)

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/blurfl,8,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495794986,,"I'm going to close this for now, as there is ongoing discussion in Issue #504. Best to wait for that discussion to finish, then implement those decisions.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/BarbourSmith,9,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495827794,,"Ok, but if the discussion goes on too long and we need someone to just put their foot down, let me know. Ultimately I think having this new board exist is much more important than what version number it gets. I am really excited about this new chip. It is a very cool find.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,505,2019-05-23T01:42:12Z,2019-05-24T21:37:49Z,2019-07-15T17:35:48Z,CLOSED,False,27,5,1,https://github.com/blurfl,Add comments to document the board versioning system,6,[],https://github.com/MaslowCNC/Firmware/pull/505,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/505#issuecomment-495829126,,"this new chip

Here is the $15 development board for the chip. Very slick! Here the manual for the dev kit (software is free, but haven't tried it).",True,"{'HOORAY': ['https://github.com/BarbourSmith'], 'THUMBS_UP': ['https://github.com/BarbourSmith'], 'ROCKET': ['https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,507,2019-05-27T01:47:34Z,2019-05-29T02:02:02Z,2019-06-22T06:30:10Z,MERGED,True,21,21,5,https://github.com/blurfl,rename RingBuffer to maslowRingBuffer,1,[],https://github.com/MaslowCNC/Firmware/pull/507,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/507,"to resolve a name conflict with the ARDUINO_GRAND_CENTRAL_M4
Addresses issue #506","to resolve a name conflict with the ARDUINO_GRAND_CENTRAL_M4
Addresses issue #506",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,507,2019-05-27T01:47:34Z,2019-05-29T02:02:02Z,2019-06-22T06:30:10Z,MERGED,True,21,21,5,https://github.com/blurfl,rename RingBuffer to maslowRingBuffer,1,[],https://github.com/MaslowCNC/Firmware/pull/507,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/507#issuecomment-496053214,"to resolve a name conflict with the ARDUINO_GRAND_CENTRAL_M4
Addresses issue #506",üëç üëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,507,2019-05-27T01:47:34Z,2019-05-29T02:02:02Z,2019-06-22T06:30:10Z,MERGED,True,21,21,5,https://github.com/blurfl,rename RingBuffer to maslowRingBuffer,1,[],https://github.com/MaslowCNC/Firmware/pull/507,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/507#issuecomment-496053684,"to resolve a name conflict with the ARDUINO_GRAND_CENTRAL_M4
Addresses issue #506","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/blurfl', 'https://github.com/davidelang']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,507,2019-05-27T01:47:34Z,2019-05-29T02:02:02Z,2019-06-22T06:30:10Z,MERGED,True,21,21,5,https://github.com/blurfl,rename RingBuffer to maslowRingBuffer,1,[],https://github.com/MaslowCNC/Firmware/pull/507,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/507#issuecomment-496754770,"to resolve a name conflict with the ARDUINO_GRAND_CENTRAL_M4
Addresses issue #506",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,510,2019-06-19T19:19:51Z,2019-06-21T20:00:50Z,2019-06-22T06:30:07Z,MERGED,True,27,1,1,https://github.com/blurfl,When (pinCheck >= 6) the board version matches the version strapping,1,[],https://github.com/MaslowCNC/Firmware/pull/510,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/510,"Add comments to explain the zero-based version number reported from the 1-based gpio pin strapping as suggested in recent discussions:
PR#502
Issue#504
PR#505
Beginning with board v1.6, the value from the gpio pins for new boards will be zero-based to match the number reported by the firmware and the silkscreen, as suggested here:
Issue#504

Hidden gem: starting with v1.5, pin numbering matches version numbering, we are good at least until v1.15! After that some creativity will be necessary.
But for that, return pinCheck<5 ? pinCheck-1 : pinCheck;, in getPCBVersion()
to be discussed, of course!

PR#502
PR#505
There is a parallel/competing PR#511 which updates the comments without changing the version strapping - choose one or the other with your vote.","Add comments to explain the zero-based version number reported from the 1-based gpio pin strapping as suggested in recent discussions:
PR#502
Issue#504
PR#505
Beginning with board v1.6, the value from the gpio pins for new boards will be zero-based to match the number reported by the firmware and the silkscreen, as suggested here:
Issue#504

Hidden gem: starting with v1.5, pin numbering matches version numbering, we are good at least until v1.15! After that some creativity will be necessary.
But for that, return pinCheck<5 ? pinCheck-1 : pinCheck;, in getPCBVersion()
to be discussed, of course!

PR#502
PR#505
There is a parallel/competing PR#511 which updates the comments without changing the version strapping - choose one or the other with your vote.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,510,2019-06-19T19:19:51Z,2019-06-21T20:00:50Z,2019-06-22T06:30:07Z,MERGED,True,27,1,1,https://github.com/blurfl,When (pinCheck >= 6) the board version matches the version strapping,1,[],https://github.com/MaslowCNC/Firmware/pull/510,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/510#issuecomment-503725145,"Add comments to explain the zero-based version number reported from the 1-based gpio pin strapping as suggested in recent discussions:
PR#502
Issue#504
PR#505
Beginning with board v1.6, the value from the gpio pins for new boards will be zero-based to match the number reported by the firmware and the silkscreen, as suggested here:
Issue#504

Hidden gem: starting with v1.5, pin numbering matches version numbering, we are good at least until v1.15! After that some creativity will be necessary.
But for that, return pinCheck<5 ? pinCheck-1 : pinCheck;, in getPCBVersion()
to be discussed, of course!

PR#502
PR#505
There is a parallel/competing PR#511 which updates the comments without changing the version strapping - choose one or the other with your vote.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,510,2019-06-19T19:19:51Z,2019-06-21T20:00:50Z,2019-06-22T06:30:07Z,MERGED,True,27,1,1,https://github.com/blurfl,When (pinCheck >= 6) the board version matches the version strapping,1,[],https://github.com/MaslowCNC/Firmware/pull/510,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/510#issuecomment-504107686,"Add comments to explain the zero-based version number reported from the 1-based gpio pin strapping as suggested in recent discussions:
PR#502
Issue#504
PR#505
Beginning with board v1.6, the value from the gpio pins for new boards will be zero-based to match the number reported by the firmware and the silkscreen, as suggested here:
Issue#504

Hidden gem: starting with v1.5, pin numbering matches version numbering, we are good at least until v1.15! After that some creativity will be necessary.
But for that, return pinCheck<5 ? pinCheck-1 : pinCheck;, in getPCBVersion()
to be discussed, of course!

PR#502
PR#505
There is a parallel/competing PR#511 which updates the comments without changing the version strapping - choose one or the other with your vote.","PR#510 and PR#511 aren't compatible with each other, one or the other can be merged but not both. I couldn't see a way to be sure that only one would 'win' merging, so I guess I'll watch the votes and close the one with a lower total. Help with the vote count by giving one a üëçüèªand the other a üëé.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,510,2019-06-19T19:19:51Z,2019-06-21T20:00:50Z,2019-06-22T06:30:07Z,MERGED,True,27,1,1,https://github.com/blurfl,When (pinCheck >= 6) the board version matches the version strapping,1,[],https://github.com/MaslowCNC/Firmware/pull/510,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/510#issuecomment-504273539,"Add comments to explain the zero-based version number reported from the 1-based gpio pin strapping as suggested in recent discussions:
PR#502
Issue#504
PR#505
Beginning with board v1.6, the value from the gpio pins for new boards will be zero-based to match the number reported by the firmware and the silkscreen, as suggested here:
Issue#504

Hidden gem: starting with v1.5, pin numbering matches version numbering, we are good at least until v1.15! After that some creativity will be necessary.
But for that, return pinCheck<5 ? pinCheck-1 : pinCheck;, in getPCBVersion()
to be discussed, of course!

PR#502
PR#505
There is a parallel/competing PR#511 which updates the comments without changing the version strapping - choose one or the other with your vote.","Got it! I saw updating the comments first and thought updating comments is
always a good idea...thanks for pointing out that merging both isn't a good
idea. I will take my üëç off of #511 when I next  get a stable internet
connection.
‚Ä¶
On Thu, Jun 20, 2019, 10:10 PM Scott Smith ***@***.***> wrote:
 PR#510 and PR#511 aren't compatible with each other, one or the other can
 be merged but not both. I couldn't see a way to be sure that only one would
 'win' merging, so I guess I'll watch the votes and close the one with a
 lower total. Help with the vote count by giving one a üëçüèªand the other a
 üëé.

 ‚Äî
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#510?email_source=notifications&email_token=ACHNAV6GKH2MJXGJ6BNFSZ3P3O2YZA5CNFSM4HZMSYF2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYGBFJQ#issuecomment-504107686>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ACHNAV3BONHVLNI7BNRXTYTP3O2YZANCNFSM4HZMSYFQ>
 .",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,510,2019-06-19T19:19:51Z,2019-06-21T20:00:50Z,2019-06-22T06:30:07Z,MERGED,True,27,1,1,https://github.com/blurfl,When (pinCheck >= 6) the board version matches the version strapping,1,[],https://github.com/MaslowCNC/Firmware/pull/510,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/510#issuecomment-504555198,"Add comments to explain the zero-based version number reported from the 1-based gpio pin strapping as suggested in recent discussions:
PR#502
Issue#504
PR#505
Beginning with board v1.6, the value from the gpio pins for new boards will be zero-based to match the number reported by the firmware and the silkscreen, as suggested here:
Issue#504

Hidden gem: starting with v1.5, pin numbering matches version numbering, we are good at least until v1.15! After that some creativity will be necessary.
But for that, return pinCheck<5 ? pinCheck-1 : pinCheck;, in getPCBVersion()
to be discussed, of course!

PR#502
PR#505
There is a parallel/competing PR#511 which updates the comments without changing the version strapping - choose one or the other with your vote.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,511,2019-06-19T19:19:55Z,2019-06-21T20:00:47Z,2019-06-22T06:30:09Z,CLOSED,False,28,4,1,https://github.com/blurfl,Add comments about board versioning.,1,[],https://github.com/MaslowCNC/Firmware/pull/511,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/511,"Explain the zero-based version number reported from the 1-based gpio pin strapping. Continue to use the same 1-based format for pin strapping.
Attempting to implement some of the suggestions in recent discussions:
PR#502
Issue#504
PR#505
There is a parallel/competing PR#51o which updates the comments and changes the version strapping for future boards - choose one or the other with your vote.","Explain the zero-based version number reported from the 1-based gpio pin strapping. Continue to use the same 1-based format for pin strapping.
Attempting to implement some of the suggestions in recent discussions:
PR#502
Issue#504
PR#505
There is a parallel/competing PR#51o which updates the comments and changes the version strapping for future boards - choose one or the other with your vote.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,511,2019-06-19T19:19:55Z,2019-06-21T20:00:47Z,2019-06-22T06:30:09Z,CLOSED,False,28,4,1,https://github.com/blurfl,Add comments about board versioning.,1,[],https://github.com/MaslowCNC/Firmware/pull/511,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/511#issuecomment-503725135,"Explain the zero-based version number reported from the 1-based gpio pin strapping. Continue to use the same 1-based format for pin strapping.
Attempting to implement some of the suggestions in recent discussions:
PR#502
Issue#504
PR#505
There is a parallel/competing PR#51o which updates the comments and changes the version strapping for future boards - choose one or the other with your vote.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot'], 'THUMBS_DOWN': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,511,2019-06-19T19:19:55Z,2019-06-21T20:00:47Z,2019-06-22T06:30:09Z,CLOSED,False,28,4,1,https://github.com/blurfl,Add comments about board versioning.,1,[],https://github.com/MaslowCNC/Firmware/pull/511,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/511#issuecomment-504107588,"Explain the zero-based version number reported from the 1-based gpio pin strapping. Continue to use the same 1-based format for pin strapping.
Attempting to implement some of the suggestions in recent discussions:
PR#502
Issue#504
PR#505
There is a parallel/competing PR#51o which updates the comments and changes the version strapping for future boards - choose one or the other with your vote.","PR#510 and PR#511 aren't compatible with each other, one or the other can be merged but not both. I couldn't see a way to be sure that only one would 'win' merging, so I guess I'll watch the votes and close the one with a lower total. Help with the vote count by giving one a üëçüèªand the other a üëé.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,511,2019-06-19T19:19:55Z,2019-06-21T20:00:47Z,2019-06-22T06:30:09Z,CLOSED,False,28,4,1,https://github.com/blurfl,Add comments about board versioning.,1,[],https://github.com/MaslowCNC/Firmware/pull/511,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/511#issuecomment-504555187,"Explain the zero-based version number reported from the 1-based gpio pin strapping. Continue to use the same 1-based format for pin strapping.
Attempting to implement some of the suggestions in recent discussions:
PR#502
Issue#504
PR#505
There is a parallel/competing PR#51o which updates the comments and changes the version strapping for future boards - choose one or the other with your vote.",It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,512,2019-06-19T20:22:03Z,2019-06-21T21:00:48Z,2019-06-22T06:30:05Z,MERGED,True,42,1,3,https://github.com/blurfl,Alarm if board version is unrecognized,2,[],https://github.com/MaslowCNC/Firmware/pull/512,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/512,"‚Ä¢ set all gpio pin numbers to 0
‚Ä¢ Post an error dialog
‚Ä¢ loop forever to cause a serial disconnect","‚Ä¢ set all gpio pin numbers to 0
‚Ä¢ Post an error dialog
‚Ä¢ loop forever to cause a serial disconnect",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,512,2019-06-19T20:22:03Z,2019-06-21T21:00:48Z,2019-06-22T06:30:05Z,MERGED,True,42,1,3,https://github.com/blurfl,Alarm if board version is unrecognized,2,[],https://github.com/MaslowCNC/Firmware/pull/512,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/512#issuecomment-503744864,"‚Ä¢ set all gpio pin numbers to 0
‚Ä¢ Post an error dialog
‚Ä¢ loop forever to cause a serial disconnect","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith', 'https://github.com/esspe2']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,512,2019-06-19T20:22:03Z,2019-06-21T21:00:48Z,2019-06-22T06:30:05Z,MERGED,True,42,1,3,https://github.com/blurfl,Alarm if board version is unrecognized,2,[],https://github.com/MaslowCNC/Firmware/pull/512,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/512#issuecomment-503796156,"‚Ä¢ set all gpio pin numbers to 0
‚Ä¢ Post an error dialog
‚Ä¢ loop forever to cause a serial disconnect",This is a great idea üëçüëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,512,2019-06-19T20:22:03Z,2019-06-21T21:00:48Z,2019-06-22T06:30:05Z,MERGED,True,42,1,3,https://github.com/blurfl,Alarm if board version is unrecognized,2,[],https://github.com/MaslowCNC/Firmware/pull/512,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/512#issuecomment-503817213,"‚Ä¢ set all gpio pin numbers to 0
‚Ä¢ Post an error dialog
‚Ä¢ loop forever to cause a serial disconnect","Credit for the idea goes to @esspe2, from his comment here üëç

Either way, if I were to push my thoughts further, the runtime should stop and yell something like board unrecognized, or version pins configuration unknown.",True,{'THUMBS_UP': ['https://github.com/esspe2']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,512,2019-06-19T20:22:03Z,2019-06-21T21:00:48Z,2019-06-22T06:30:05Z,MERGED,True,42,1,3,https://github.com/blurfl,Alarm if board version is unrecognized,2,[],https://github.com/MaslowCNC/Firmware/pull/512,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/512#issuecomment-504571431,"‚Ä¢ set all gpio pin numbers to 0
‚Ä¢ Post an error dialog
‚Ä¢ loop forever to cause a serial disconnect",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,513,2019-06-20T01:58:17Z,2019-06-22T02:00:45Z,2019-06-22T06:30:02Z,MERGED,True,22,1,2,https://github.com/blurfl,recognize a soft reset command in the serial stream,1,[],https://github.com/MaslowCNC/Firmware/pull/513,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/513,"‚Ä¢ Stop immediately
‚Ä¢ Save the position
‚Ä¢ Report the command received
‚Ä¢ Mimic the firmware response sequence so GC thinks we've just reset.
Teensy3.5/3.6 and GrandCentralMetroM4 don't reset when GC does the special Arduino serial-port-reset trick.
This PR adds a one-character command to trigger a soft reset. GRBL and MaslowDue use ctrl-X, so we match that. GC doesn't allow control characters in macros, so we allow a second option.
Since we've already been through most of the important things in setup(), we only need to send the text that GC expects when making a connection.
GroundControl PR#791 is the counterpart that sends the ctrl-X as part of the connection handshake.","‚Ä¢ Stop immediately
‚Ä¢ Save the position
‚Ä¢ Report the command received
‚Ä¢ Mimic the firmware response sequence so GC thinks we've just reset.
Teensy3.5/3.6 and GrandCentralMetroM4 don't reset when GC does the special Arduino serial-port-reset trick.
This PR adds a one-character command to trigger a soft reset. GRBL and MaslowDue use ctrl-X, so we match that. GC doesn't allow control characters in macros, so we allow a second option.
Since we've already been through most of the important things in setup(), we only need to send the text that GC expects when making a connection.
GroundControl PR#791 is the counterpart that sends the ctrl-X as part of the connection handshake.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,513,2019-06-20T01:58:17Z,2019-06-22T02:00:45Z,2019-06-22T06:30:02Z,MERGED,True,22,1,2,https://github.com/blurfl,recognize a soft reset command in the serial stream,1,[],https://github.com/MaslowCNC/Firmware/pull/513,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/513#issuecomment-503810654,"‚Ä¢ Stop immediately
‚Ä¢ Save the position
‚Ä¢ Report the command received
‚Ä¢ Mimic the firmware response sequence so GC thinks we've just reset.
Teensy3.5/3.6 and GrandCentralMetroM4 don't reset when GC does the special Arduino serial-port-reset trick.
This PR adds a one-character command to trigger a soft reset. GRBL and MaslowDue use ctrl-X, so we match that. GC doesn't allow control characters in macros, so we allow a second option.
Since we've already been through most of the important things in setup(), we only need to send the text that GC expects when making a connection.
GroundControl PR#791 is the counterpart that sends the ctrl-X as part of the connection handshake.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,513,2019-06-20T01:58:17Z,2019-06-22T02:00:45Z,2019-06-22T06:30:02Z,MERGED,True,22,1,2,https://github.com/blurfl,recognize a soft reset command in the serial stream,1,[],https://github.com/MaslowCNC/Firmware/pull/513,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/513#issuecomment-504617677,"‚Ä¢ Stop immediately
‚Ä¢ Save the position
‚Ä¢ Report the command received
‚Ä¢ Mimic the firmware response sequence so GC thinks we've just reset.
Teensy3.5/3.6 and GrandCentralMetroM4 don't reset when GC does the special Arduino serial-port-reset trick.
This PR adds a one-character command to trigger a soft reset. GRBL and MaslowDue use ctrl-X, so we match that. GC doesn't allow control characters in macros, so we allow a second option.
Since we've already been through most of the important things in setup(), we only need to send the text that GC expects when making a connection.
GroundControl PR#791 is the counterpart that sends the ctrl-X as part of the connection handshake.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,514,2019-07-16T01:19:08Z,2019-07-18T01:59:50Z,2019-07-18T01:59:50Z,MERGED,True,20,4,1,https://github.com/blurfl,Limit PWM frequency value,1,[],https://github.com/MaslowCNC/Firmware/pull/514,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/514,"The function that allows changing the PWM frequency needs some updating, to prevent invalid option values and to honor the PWM frequency limits of the driver chips.

constrain choices for all driver chips to valid values 1..3
update verboseDebug messages
limit the PWM frequency to less than the driver chip upper limit:
-- the TLE5206 is limited to PWM frequencies below 1,000Hz","The function that allows changing the PWM frequency needs some updating, to prevent invalid option values and to honor the PWM frequency limits of the driver chips.

constrain choices for all driver chips to valid values 1..3
update verboseDebug messages
limit the PWM frequency to less than the driver chip upper limit:
-- the TLE5206 is limited to PWM frequencies below 1,000Hz",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,514,2019-07-16T01:19:08Z,2019-07-18T01:59:50Z,2019-07-18T01:59:50Z,MERGED,True,20,4,1,https://github.com/blurfl,Limit PWM frequency value,1,[],https://github.com/MaslowCNC/Firmware/pull/514,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/514#issuecomment-511634178,"The function that allows changing the PWM frequency needs some updating, to prevent invalid option values and to honor the PWM frequency limits of the driver chips.

constrain choices for all driver chips to valid values 1..3
update verboseDebug messages
limit the PWM frequency to less than the driver chip upper limit:
-- the TLE5206 is limited to PWM frequencies below 1,000Hz","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,514,2019-07-16T01:19:08Z,2019-07-18T01:59:50Z,2019-07-18T01:59:50Z,MERGED,True,20,4,1,https://github.com/blurfl,Limit PWM frequency value,1,[],https://github.com/MaslowCNC/Firmware/pull/514,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/514#issuecomment-512634241,"The function that allows changing the PWM frequency needs some updating, to prevent invalid option values and to honor the PWM frequency limits of the driver chips.

constrain choices for all driver chips to valid values 1..3
update verboseDebug messages
limit the PWM frequency to less than the driver chip upper limit:
-- the TLE5206 is limited to PWM frequencies below 1,000Hz",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,516,2019-07-21T00:41:37Z,2019-07-23T00:59:42Z,2019-07-23T00:59:42Z,MERGED,True,1,1,1,https://github.com/blurfl,bump version number,1,[],https://github.com/MaslowCNC/Firmware/pull/516,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/516,bump...,bump...,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,516,2019-07-21T00:41:37Z,2019-07-23T00:59:42Z,2019-07-23T00:59:42Z,MERGED,True,1,1,1,https://github.com/blurfl,bump version number,1,[],https://github.com/MaslowCNC/Firmware/pull/516,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/516#issuecomment-513510237,bump...,"Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,516,2019-07-21T00:41:37Z,2019-07-23T00:59:42Z,2019-07-23T00:59:42Z,MERGED,True,1,1,1,https://github.com/blurfl,bump version number,1,[],https://github.com/MaslowCNC/Firmware/pull/516,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/516#issuecomment-514011222,bump...,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,518,2019-07-28T17:39:39Z,2019-07-30T17:59:32Z,2019-07-30T17:59:33Z,CLOSED,False,46,9,2,https://github.com/schmittjoshc,Merge Holey Calibration Updates into MaslowCNC:master,12,[],https://github.com/MaslowCNC/Firmware/pull/518,https://github.com/schmittjoshc,1,https://github.com/MaslowCNC/Firmware/pull/518,This is a pull request to merge all updates from schmittjoshc/Firmware:master into MaslowCNC/Firmware:master.,This is a pull request to merge all updates from schmittjoshc/Firmware:master into MaslowCNC/Firmware:master.,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,518,2019-07-28T17:39:39Z,2019-07-30T17:59:32Z,2019-07-30T17:59:33Z,CLOSED,False,46,9,2,https://github.com/schmittjoshc,Merge Holey Calibration Updates into MaslowCNC:master,12,[],https://github.com/MaslowCNC/Firmware/pull/518,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/518#issuecomment-515782459,This is a pull request to merge all updates from schmittjoshc/Firmware:master into MaslowCNC/Firmware:master.,"While this is a development that is much anticipated, maybe a PR that makes so many changes should wait until after the pending release. That would separate these changes from others and make testing and rollback easier.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,518,2019-07-28T17:39:39Z,2019-07-30T17:59:32Z,2019-07-30T17:59:33Z,CLOSED,False,46,9,2,https://github.com/schmittjoshc,Merge Holey Calibration Updates into MaslowCNC:master,12,[],https://github.com/MaslowCNC/Firmware/pull/518,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/518#issuecomment-515782467,This is a pull request to merge all updates from schmittjoshc/Firmware:master into MaslowCNC/Firmware:master.,"Congratulations on the pull request @schmittjoshc
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot'], 'THUMBS_DOWN': ['https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,518,2019-07-28T17:39:39Z,2019-07-30T17:59:32Z,2019-07-30T17:59:33Z,CLOSED,False,46,9,2,https://github.com/schmittjoshc,Merge Holey Calibration Updates into MaslowCNC:master,12,[],https://github.com/MaslowCNC/Firmware/pull/518,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/518#issuecomment-515791638,This is a pull request to merge all updates from schmittjoshc/Firmware:master into MaslowCNC/Firmware:master.,Does this incorporate all the changes in the holey calibration branch? If so I think this is a good motivator for us to get the release done quickly and then merge these changes for extensive testing in the next release.,True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,518,2019-07-28T17:39:39Z,2019-07-30T17:59:32Z,2019-07-30T17:59:33Z,CLOSED,False,46,9,2,https://github.com/schmittjoshc,Merge Holey Calibration Updates into MaslowCNC:master,12,[],https://github.com/MaslowCNC/Firmware/pull/518,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/518#issuecomment-516527214,This is a pull request to merge all updates from schmittjoshc/Firmware:master into MaslowCNC/Firmware:master.,It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/519,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).","Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/519#issuecomment-518316955,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).","I've tested this and confirm that it corrects the issue.
To test, set a macro to 'B11', disconnect the chains, and run the macro. Without the patch the motors run indefinitely; with the patch they stop after three seconds as intended.
@BarbourSmith, I think we should commit this patch immediately, before the Robot time period - Excellent work  @madgrizzle üíØ",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/davidelang,3,https://github.com/MaslowCNC/Firmware/pull/519#issuecomment-518325134,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).","definitely a longstanding bug. If it says it runs the motors for X time it
should stop them after that time.

while you are thinking about this code, could you make it so that both motors
can be given a speed in one statement?

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/519#issuecomment-518336104,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).","Congratulations on the pull request @madgrizzle
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/davidelang', 'https://github.com/madgrizzle', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/blurfl,5,https://github.com/MaslowCNC/Firmware/pull/519#issuecomment-518346928,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).","while you are thinking about this code, could you make it so that both motors can be given a speed in one statement?

How about capturing that in a new issue? That would be a feature, this is a bug fix.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/BarbourSmith,6,https://github.com/MaslowCNC/Firmware/pull/519#issuecomment-518538905,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).",Awesome work üëçüëçüëçüëç,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/519#issuecomment-518538980,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).",Now how did we introduce this bug?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,519,2019-08-05T16:47:53Z,2019-08-06T07:13:05Z,2019-08-06T09:38:00Z,MERGED,True,6,0,1,https://github.com/madgrizzle,Adds directWrite(0) at end of B11,1,[],https://github.com/MaslowCNC/Firmware/pull/519,https://github.com/davidelang,8,https://github.com/MaslowCNC/Firmware/pull/519#issuecomment-518593430,"Adds a directWrite(0) at end so motors are stopped.  They would stop on their own after the next move command is issued (typically where slack is reintroducted) but for some reason, currently unknown, the chain length measurement B10 function isn't working consistently and the motors keep getting pulled.  B11 could use further tweeking (no need to send directWrites every iteration of the timing loop).","On Tue, 6 Aug 2019, BarbourSmith wrote:
 Now how did we introduce this bug?
I think it's always been there. But it was papered over by the fact that we only
used this during calibration.

there was a change to logging in the holey triangular branch that caused some
logs to be supressed, making it so GC never saw the completion of the command
after this (the measurement) and so never issued the command following to
release slack.

David Lang",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,521,2019-08-10T19:14:54Z,2019-08-12T19:59:06Z,2019-08-12T19:59:06Z,MERGED,True,194,29,7,https://github.com/blurfl,Add TLE9201 board id6,5,[],https://github.com/MaslowCNC/Firmware/pull/521,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/521,"The TLE5206 is being sunsetted, and the replacement is the TLE9201. That chip has yet a different control arrangement - simpler but different enough that it needs separate handling. It has one dedicated PWM input, one dedicated DIRection input, and one ENAble input. PWM, DIR, ENA is a more common control scheme for motor drivers, so it's possible that future boards that drive separate motor driver boards would be able to use this configuration. The TLE9201 is rated for 6A continuous and runs in chopper mode at currents above that. It can handle PWM up to 20kHz (much better than the 1kHz of the TLE5206). It tri-states the outputs if it senses over-temperature, and flags the error.
The board uses gpio pins from the Mega XIO connector to increase the number of AUX pins to 9, three of which have hardware PWM (PWM for spindle speed would be possible) and two of which can do analog input as well as digital IO. It also frees up the SPI pins though it doesn't use them - the Mega seems busy enough already. Finally, it has an on-board EEPROM, buffers on the encoder lines and automatic voltage selection so it is hardware compatible with the MaslowDue project. (It runs a branch of that code on a Due, but needs someone with more PID-fu than I possess to tune the loop make it purr instead of growl. I'll send a board to someone serious about working on that. ;) DM me.)","The TLE5206 is being sunsetted, and the replacement is the TLE9201. That chip has yet a different control arrangement - simpler but different enough that it needs separate handling. It has one dedicated PWM input, one dedicated DIRection input, and one ENAble input. PWM, DIR, ENA is a more common control scheme for motor drivers, so it's possible that future boards that drive separate motor driver boards would be able to use this configuration. The TLE9201 is rated for 6A continuous and runs in chopper mode at currents above that. It can handle PWM up to 20kHz (much better than the 1kHz of the TLE5206). It tri-states the outputs if it senses over-temperature, and flags the error.
The board uses gpio pins from the Mega XIO connector to increase the number of AUX pins to 9, three of which have hardware PWM (PWM for spindle speed would be possible) and two of which can do analog input as well as digital IO. It also frees up the SPI pins though it doesn't use them - the Mega seems busy enough already. Finally, it has an on-board EEPROM, buffers on the encoder lines and automatic voltage selection so it is hardware compatible with the MaslowDue project. (It runs a branch of that code on a Due, but needs someone with more PID-fu than I possess to tune the loop make it purr instead of growl. I'll send a board to someone serious about working on that. ;) DM me.)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,521,2019-08-10T19:14:54Z,2019-08-12T19:59:06Z,2019-08-12T19:59:06Z,MERGED,True,194,29,7,https://github.com/blurfl,Add TLE9201 board id6,5,[],https://github.com/MaslowCNC/Firmware/pull/521,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/521#issuecomment-520175730,"The TLE5206 is being sunsetted, and the replacement is the TLE9201. That chip has yet a different control arrangement - simpler but different enough that it needs separate handling. It has one dedicated PWM input, one dedicated DIRection input, and one ENAble input. PWM, DIR, ENA is a more common control scheme for motor drivers, so it's possible that future boards that drive separate motor driver boards would be able to use this configuration. The TLE9201 is rated for 6A continuous and runs in chopper mode at currents above that. It can handle PWM up to 20kHz (much better than the 1kHz of the TLE5206). It tri-states the outputs if it senses over-temperature, and flags the error.
The board uses gpio pins from the Mega XIO connector to increase the number of AUX pins to 9, three of which have hardware PWM (PWM for spindle speed would be possible) and two of which can do analog input as well as digital IO. It also frees up the SPI pins though it doesn't use them - the Mega seems busy enough already. Finally, it has an on-board EEPROM, buffers on the encoder lines and automatic voltage selection so it is hardware compatible with the MaslowDue project. (It runs a branch of that code on a Due, but needs someone with more PID-fu than I possess to tune the loop make it purr instead of growl. I'll send a board to someone serious about working on that. ;) DM me.)","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,521,2019-08-10T19:14:54Z,2019-08-12T19:59:06Z,2019-08-12T19:59:06Z,MERGED,True,194,29,7,https://github.com/blurfl,Add TLE9201 board id6,5,[],https://github.com/MaslowCNC/Firmware/pull/521,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/521#issuecomment-520572313,"The TLE5206 is being sunsetted, and the replacement is the TLE9201. That chip has yet a different control arrangement - simpler but different enough that it needs separate handling. It has one dedicated PWM input, one dedicated DIRection input, and one ENAble input. PWM, DIR, ENA is a more common control scheme for motor drivers, so it's possible that future boards that drive separate motor driver boards would be able to use this configuration. The TLE9201 is rated for 6A continuous and runs in chopper mode at currents above that. It can handle PWM up to 20kHz (much better than the 1kHz of the TLE5206). It tri-states the outputs if it senses over-temperature, and flags the error.
The board uses gpio pins from the Mega XIO connector to increase the number of AUX pins to 9, three of which have hardware PWM (PWM for spindle speed would be possible) and two of which can do analog input as well as digital IO. It also frees up the SPI pins though it doesn't use them - the Mega seems busy enough already. Finally, it has an on-board EEPROM, buffers on the encoder lines and automatic voltage selection so it is hardware compatible with the MaslowDue project. (It runs a branch of that code on a Due, but needs someone with more PID-fu than I possess to tune the loop make it purr instead of growl. I'll send a board to someone serious about working on that. ;) DM me.)",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,522,2019-08-10T19:22:32Z,2019-08-12T19:59:01Z,2019-08-12T19:59:01Z,MERGED,True,1,1,1,https://github.com/blurfl,Resolve comile warning in function maslow ring buffer  increment end(),3,[],https://github.com/MaslowCNC/Firmware/pull/522,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/522,"The compiler posts a warning:
sketch/maslowRingBuffer.cpp: In member function 'int maslowRingBuffer::_incrementEnd()':
sketch/maslowRingBuffer.cpp:170:5: warning: this 'else' clause does not guard... [-Wmisleading-indentation]
else
^~~~
sketch/maslowRingBuffer.cpp:172:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'else'
return 0;
^~~~~~
Make the recommended change.","The compiler posts a warning:
sketch/maslowRingBuffer.cpp: In member function 'int maslowRingBuffer::_incrementEnd()':
sketch/maslowRingBuffer.cpp:170:5: warning: this 'else' clause does not guard... [-Wmisleading-indentation]
else
^~~~
sketch/maslowRingBuffer.cpp:172:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'else'
return 0;
^~~~~~
Make the recommended change.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,522,2019-08-10T19:22:32Z,2019-08-12T19:59:01Z,2019-08-12T19:59:01Z,MERGED,True,1,1,1,https://github.com/blurfl,Resolve comile warning in function maslow ring buffer  increment end(),3,[],https://github.com/MaslowCNC/Firmware/pull/522,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/522#issuecomment-520175728,"The compiler posts a warning:
sketch/maslowRingBuffer.cpp: In member function 'int maslowRingBuffer::_incrementEnd()':
sketch/maslowRingBuffer.cpp:170:5: warning: this 'else' clause does not guard... [-Wmisleading-indentation]
else
^~~~
sketch/maslowRingBuffer.cpp:172:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'else'
return 0;
^~~~~~
Make the recommended change.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,522,2019-08-10T19:22:32Z,2019-08-12T19:59:01Z,2019-08-12T19:59:01Z,MERGED,True,1,1,1,https://github.com/blurfl,Resolve comile warning in function maslow ring buffer  increment end(),3,[],https://github.com/MaslowCNC/Firmware/pull/522,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/522#issuecomment-520572299,"The compiler posts a warning:
sketch/maslowRingBuffer.cpp: In member function 'int maslowRingBuffer::_incrementEnd()':
sketch/maslowRingBuffer.cpp:170:5: warning: this 'else' clause does not guard... [-Wmisleading-indentation]
else
^~~~
sketch/maslowRingBuffer.cpp:172:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'else'
return 0;
^~~~~~
Make the recommended change.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,524,2019-08-13T17:17:24Z,2019-08-15T17:59:00Z,2019-08-15T17:59:00Z,MERGED,True,1,0,1,https://github.com/madgrizzle,Initialize sys.feedrate to 400 mm/min,2,[],https://github.com/MaslowCNC/Firmware/pull/524,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/524,sys.feedrate was not being initialized and resulted in a feed rate of 1 mm/min when gcode was sent without a feed rate (if no other feed rate had been previously sent).  This sets the feedrate to 400 mm/min (half of the maximum feed rate).  It appears to me that the firmware works in metric so this should be appropriate .,sys.feedrate was not being initialized and resulted in a feed rate of 1 mm/min when gcode was sent without a feed rate (if no other feed rate had been previously sent).  This sets the feedrate to 400 mm/min (half of the maximum feed rate).  It appears to me that the firmware works in metric so this should be appropriate .,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,524,2019-08-13T17:17:24Z,2019-08-15T17:59:00Z,2019-08-15T17:59:00Z,MERGED,True,1,0,1,https://github.com/madgrizzle,Initialize sys.feedrate to 400 mm/min,2,[],https://github.com/MaslowCNC/Firmware/pull/524,https://github.com/blurfl,2,https://github.com/MaslowCNC/Firmware/pull/524#issuecomment-520934640,sys.feedrate was not being initialized and resulted in a feed rate of 1 mm/min when gcode was sent without a feed rate (if no other feed rate had been previously sent).  This sets the feedrate to 400 mm/min (half of the maximum feed rate).  It appears to me that the firmware works in metric so this should be appropriate .,"This works as advertised, in inches as well as mm. üëç
A thought, though, how about using the sysSettings.maxfeed?
sys.feedrate = sysSettings.maxFeed / 2.0;",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,524,2019-08-13T17:17:24Z,2019-08-15T17:59:00Z,2019-08-15T17:59:00Z,MERGED,True,1,0,1,https://github.com/madgrizzle,Initialize sys.feedrate to 400 mm/min,2,[],https://github.com/MaslowCNC/Firmware/pull/524,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/524#issuecomment-520941115,sys.feedrate was not being initialized and resulted in a feed rate of 1 mm/min when gcode was sent without a feed rate (if no other feed rate had been previously sent).  This sets the feedrate to 400 mm/min (half of the maximum feed rate).  It appears to me that the firmware works in metric so this should be appropriate .,"Congratulations on the pull request @madgrizzle
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,524,2019-08-13T17:17:24Z,2019-08-15T17:59:00Z,2019-08-15T17:59:00Z,MERGED,True,1,0,1,https://github.com/madgrizzle,Initialize sys.feedrate to 400 mm/min,2,[],https://github.com/MaslowCNC/Firmware/pull/524,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/524#issuecomment-520944753,sys.feedrate was not being initialized and resulted in a feed rate of 1 mm/min when gcode was sent without a feed rate (if no other feed rate had been previously sent).  This sets the feedrate to 400 mm/min (half of the maximum feed rate).  It appears to me that the firmware works in metric so this should be appropriate .,"I agree, half of the max feed setting would be better than have of the max that
we think of as the machine limit.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,524,2019-08-13T17:17:24Z,2019-08-15T17:59:00Z,2019-08-15T17:59:00Z,MERGED,True,1,0,1,https://github.com/madgrizzle,Initialize sys.feedrate to 400 mm/min,2,[],https://github.com/MaslowCNC/Firmware/pull/524,https://github.com/madgrizzle,5,https://github.com/MaslowCNC/Firmware/pull/524#issuecomment-520947480,sys.feedrate was not being initialized and resulted in a feed rate of 1 mm/min when gcode was sent without a feed rate (if no other feed rate had been previously sent).  This sets the feedrate to 400 mm/min (half of the maximum feed rate).  It appears to me that the firmware works in metric so this should be appropriate .,modified.,True,"{'THUMBS_UP': ['https://github.com/BarbourSmith', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,524,2019-08-13T17:17:24Z,2019-08-15T17:59:00Z,2019-08-15T17:59:00Z,MERGED,True,1,0,1,https://github.com/madgrizzle,Initialize sys.feedrate to 400 mm/min,2,[],https://github.com/MaslowCNC/Firmware/pull/524,https://github.com/MaslowCommunityGardenRobot,6,https://github.com/MaslowCNC/Firmware/pull/524#issuecomment-521736545,sys.feedrate was not being initialized and resulted in a feed rate of 1 mm/min when gcode was sent without a feed rate (if no other feed rate had been previously sent).  This sets the feedrate to 400 mm/min (half of the maximum feed rate).  It appears to me that the firmware works in metric so this should be appropriate .,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,526,2019-08-14T05:22:40Z,2019-08-16T05:58:56Z,2019-08-16T05:58:56Z,MERGED,True,23,87,5,https://github.com/blurfl,"Revert ""Merge pull request #481""",1,[],https://github.com/MaslowCNC/Firmware/pull/526,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/526,"This reverts commit a204201, reversing
changes made to e7b454a.
It addresses Issue #525 .
See these ... threads in the forum as well.","This reverts commit a204201, reversing
changes made to e7b454a.
It addresses Issue #525 .
See these ... threads in the forum as well.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,526,2019-08-14T05:22:40Z,2019-08-16T05:58:56Z,2019-08-16T05:58:56Z,MERGED,True,23,87,5,https://github.com/blurfl,"Revert ""Merge pull request #481""",1,[],https://github.com/MaslowCNC/Firmware/pull/526,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/526#issuecomment-521112503,"This reverts commit a204201, reversing
changes made to e7b454a.
It addresses Issue #525 .
See these ... threads in the forum as well.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/madgrizzle', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,526,2019-08-14T05:22:40Z,2019-08-16T05:58:56Z,2019-08-16T05:58:56Z,MERGED,True,23,87,5,https://github.com/blurfl,"Revert ""Merge pull request #481""",1,[],https://github.com/MaslowCNC/Firmware/pull/526,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/526#issuecomment-521159125,"This reverts commit a204201, reversing
changes made to e7b454a.
It addresses Issue #525 .
See these ... threads in the forum as well.","Nice quick fix!
I think this speaks to the need for a more rigorous testing regime before we do releases. I will work on getting a check list put together which needs to be checked off before we do a release.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,526,2019-08-14T05:22:40Z,2019-08-16T05:58:56Z,2019-08-16T05:58:56Z,MERGED,True,23,87,5,https://github.com/blurfl,"Revert ""Merge pull request #481""",1,[],https://github.com/MaslowCNC/Firmware/pull/526,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/526#issuecomment-521894921,"This reverts commit a204201, reversing
changes made to e7b454a.
It addresses Issue #525 .
See these ... threads in the forum as well.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,527,2019-08-14T17:07:46Z,2019-08-16T17:59:00Z,2019-11-13T21:17:45Z,MERGED,True,17,0,1,https://github.com/BarbourSmith,Add a basic template for pull requests,2,[],https://github.com/MaslowCNC/Firmware/pull/527,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/527,"This will create text which is auto populated in the pull request window when a new pull request is created. See the description of how this works here:
https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
Let me know if we want to change the wording. This file can of course be itself edited by pull request so if we want to change the wording down the road it is always an option.
It will look like:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What feature does this pull request add or what issue does this pull request fix?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Thanks for contributing!","This will create text which is auto populated in the pull request window when a new pull request is created. See the description of how this works here:
https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
Let me know if we want to change the wording. This file can of course be itself edited by pull request so if we want to change the wording down the road it is always an option.
It will look like:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What feature does this pull request add or what issue does this pull request fix?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Thanks for contributing!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,527,2019-08-14T17:07:46Z,2019-08-16T17:59:00Z,2019-11-13T21:17:45Z,MERGED,True,17,0,1,https://github.com/BarbourSmith,Add a basic template for pull requests,2,[],https://github.com/MaslowCNC/Firmware/pull/527,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/527#issuecomment-521352724,"This will create text which is auto populated in the pull request window when a new pull request is created. See the description of how this works here:
https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
Let me know if we want to change the wording. This file can of course be itself edited by pull request so if we want to change the wording down the road it is always an option.
It will look like:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What feature does this pull request add or what issue does this pull request fix?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Thanks for contributing!","Congratulations on the pull request @BarbourSmith
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,527,2019-08-14T17:07:46Z,2019-08-16T17:59:00Z,2019-11-13T21:17:45Z,MERGED,True,17,0,1,https://github.com/BarbourSmith,Add a basic template for pull requests,2,[],https://github.com/MaslowCNC/Firmware/pull/527,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/527#issuecomment-521374255,"This will create text which is auto populated in the pull request window when a new pull request is created. See the description of how this works here:
https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
Let me know if we want to change the wording. This file can of course be itself edited by pull request so if we want to change the wording down the road it is always an option.
It will look like:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What feature does this pull request add or what issue does this pull request fix?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Thanks for contributing!","How about asking the originator how to test to demonstrate the effect of the change? For example, from PR#519
To test, set a macro to 'B11', disconnect the chains, and run the macro.
 Without the patch the motors run indefinitely; with the patch they stop 
after three seconds as intended.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,527,2019-08-14T17:07:46Z,2019-08-16T17:59:00Z,2019-11-13T21:17:45Z,MERGED,True,17,0,1,https://github.com/BarbourSmith,Add a basic template for pull requests,2,[],https://github.com/MaslowCNC/Firmware/pull/527,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/527#issuecomment-521386580,"This will create text which is auto populated in the pull request window when a new pull request is created. See the description of how this works here:
https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
Let me know if we want to change the wording. This file can of course be itself edited by pull request so if we want to change the wording down the road it is always an option.
It will look like:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What feature does this pull request add or what issue does this pull request fix?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Thanks for contributing!","questions I would ask

what behavior is expected to change from this PR (i.e. fix a bug, no expected
changes, new feature added, then provide details)

If this change affects calibration, can the user opt-out of recalibrating
(recognizing that they don't get the benefit of the change, does an upgrade
force them to recalibrate)

does this change require the firmware and GroundControl to both be changed (if
so, link to the PR for the other component)

is there a way to test this change",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,527,2019-08-14T17:07:46Z,2019-08-16T17:59:00Z,2019-11-13T21:17:45Z,MERGED,True,17,0,1,https://github.com/BarbourSmith,Add a basic template for pull requests,2,[],https://github.com/MaslowCNC/Firmware/pull/527,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/527#issuecomment-521400504,"This will create text which is auto populated in the pull request window when a new pull request is created. See the description of how this works here:
https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
Let me know if we want to change the wording. This file can of course be itself edited by pull request so if we want to change the wording down the road it is always an option.
It will look like:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What feature does this pull request add or what issue does this pull request fix?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Thanks for contributing!","Great suggestions. I've updated the wording to read:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Thanks for contributing!",True,{'THUMBS_UP': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,527,2019-08-14T17:07:46Z,2019-08-16T17:59:00Z,2019-11-13T21:17:45Z,MERGED,True,17,0,1,https://github.com/BarbourSmith,Add a basic template for pull requests,2,[],https://github.com/MaslowCNC/Firmware/pull/527,https://github.com/MaslowCommunityGardenRobot,6,https://github.com/MaslowCNC/Firmware/pull/527#issuecomment-522098144,"This will create text which is auto populated in the pull request window when a new pull request is created. See the description of how this works here:
https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
Let me know if we want to change the wording. This file can of course be itself edited by pull request so if we want to change the wording down the road it is always an option.
It will look like:
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What feature does this pull request add or what issue does this pull request fix?
Does this firmware change affect kinematics or any part of the calibration process?
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Thanks for contributing!",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,528,2019-08-16T16:13:32Z,2019-08-18T16:58:50Z,2019-08-18T16:58:50Z,MERGED,True,7,0,1,https://github.com/madgrizzle,EEPROM write after B06 and B08 Commands,2,[],https://github.com/MaslowCNC/Firmware/pull/528,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/528,"The firmware does not currently write steps to EEPROM after the completion of a B06 or B08 command, both of write directly modify the steps value of the encoder.  Normally this isn't a problem since steps get written after a move occurs, but during software testing I discovered I had to continuously reset my chain lengths every time I restarted webcontrol because the were set to 0,0 in EEPROM.  This fix sets sys.writeStepsToEEPROM to true after those commands are issued so the new steps value will be written to EEPROM.","The firmware does not currently write steps to EEPROM after the completion of a B06 or B08 command, both of write directly modify the steps value of the encoder.  Normally this isn't a problem since steps get written after a move occurs, but during software testing I discovered I had to continuously reset my chain lengths every time I restarted webcontrol because the were set to 0,0 in EEPROM.  This fix sets sys.writeStepsToEEPROM to true after those commands are issued so the new steps value will be written to EEPROM.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,528,2019-08-16T16:13:32Z,2019-08-18T16:58:50Z,2019-08-18T16:58:50Z,MERGED,True,7,0,1,https://github.com/madgrizzle,EEPROM write after B06 and B08 Commands,2,[],https://github.com/MaslowCNC/Firmware/pull/528,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/528#issuecomment-522079272,"The firmware does not currently write steps to EEPROM after the completion of a B06 or B08 command, both of write directly modify the steps value of the encoder.  Normally this isn't a problem since steps get written after a move occurs, but during software testing I discovered I had to continuously reset my chain lengths every time I restarted webcontrol because the were set to 0,0 in EEPROM.  This fix sets sys.writeStepsToEEPROM to true after those commands are issued so the new steps value will be written to EEPROM.","Congratulations on the pull request @madgrizzle
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,528,2019-08-16T16:13:32Z,2019-08-18T16:58:50Z,2019-08-18T16:58:50Z,MERGED,True,7,0,1,https://github.com/madgrizzle,EEPROM write after B06 and B08 Commands,2,[],https://github.com/MaslowCNC/Firmware/pull/528,https://github.com/madgrizzle,3,https://github.com/MaslowCNC/Firmware/pull/528#issuecomment-522081822,"The firmware does not currently write steps to EEPROM after the completion of a B06 or B08 command, both of write directly modify the steps value of the encoder.  Normally this isn't a problem since steps get written after a move occurs, but during software testing I discovered I had to continuously reset my chain lengths every time I restarted webcontrol because the were set to 0,0 in EEPROM.  This fix sets sys.writeStepsToEEPROM to true after those commands are issued so the new steps value will be written to EEPROM.","Does this firmware change affect kinematics? No
a) If so, does this change require recalibration? No
b) If so, is there an option for user to opt-out of the change until ready for recalibration? N/A If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?N/A
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)? No.. can't readily test stock firmware at the moment, but likelihood this causes an issue is extraordinarily low",True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,528,2019-08-16T16:13:32Z,2019-08-18T16:58:50Z,2019-08-18T16:58:50Z,MERGED,True,7,0,1,https://github.com/madgrizzle,EEPROM write after B06 and B08 Commands,2,[],https://github.com/MaslowCNC/Firmware/pull/528,https://github.com/blurfl,4,https://github.com/MaslowCNC/Firmware/pull/528#issuecomment-522104108,"The firmware does not currently write steps to EEPROM after the completion of a B06 or B08 command, both of write directly modify the steps value of the encoder.  Normally this isn't a problem since steps get written after a move occurs, but during software testing I discovered I had to continuously reset my chain lengths every time I restarted webcontrol because the were set to 0,0 in EEPROM.  This fix sets sys.writeStepsToEEPROM to true after those commands are issued so the new steps value will be written to EEPROM.","@madgrizzle , here's something more to look at in the B06 command.
When the B08 command changes the chain lengths it includes a line to alert the kinematics of the change:
kinematics.forward(leftAxis.read(), rightAxis.read(), &sys.xPosition, &sys.yPosition, 0, 0);

The B06 command does not do that. Because of that, a 'keeping up' alarm will arise if the first movement after a B06 command is greater that the alarm limit. Too, the sled position is not updated on the GC screen.
Presently GC only uses B06 in setSprocketsVertical.py, so the issue doesn't arise. Would it make sense for B06 to update the kinematics as well, though?
To see the problem,

start with the sled at the center of the workarea
use the Actions/Advanced/SetChainLength-Manual
use one of the UDLR arrows to move the sled by an amount greater than the alarm limit
-- no alarm given
create a macro ""B06 L1651 R1651""
return the sled to the center
use the macro
use one of the UDLR arrows to move the sled by an amount greater than the alarm limit
-- 'keeping up' alarm is posted

By adding the call to kinematics.forward() into B06, the alarm would be avoided and GC would properly display the changed position of the sled.
To test the change,

repeat the above test to verify that the 'keeping up' alarm does not occur
go into the calibration sequence to the sprocket alignment page and use the buttons to move the sprocket, verifying that the controls still work as expected.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,528,2019-08-16T16:13:32Z,2019-08-18T16:58:50Z,2019-08-18T16:58:50Z,MERGED,True,7,0,1,https://github.com/madgrizzle,EEPROM write after B06 and B08 Commands,2,[],https://github.com/MaslowCNC/Firmware/pull/528,https://github.com/madgrizzle,5,https://github.com/MaslowCNC/Firmware/pull/528#issuecomment-522108286,"The firmware does not currently write steps to EEPROM after the completion of a B06 or B08 command, both of write directly modify the steps value of the encoder.  Normally this isn't a problem since steps get written after a move occurs, but during software testing I discovered I had to continuously reset my chain lengths every time I restarted webcontrol because the were set to 0,0 in EEPROM.  This fix sets sys.writeStepsToEEPROM to true after those commands are issued so the new steps value will be written to EEPROM.","I updated patch to add the kinematics.forward.  Nice catch, @blurfl!",True,"{'THUMBS_UP': ['https://github.com/blurfl', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,528,2019-08-16T16:13:32Z,2019-08-18T16:58:50Z,2019-08-18T16:58:50Z,MERGED,True,7,0,1,https://github.com/madgrizzle,EEPROM write after B06 and B08 Commands,2,[],https://github.com/MaslowCNC/Firmware/pull/528,https://github.com/MaslowCommunityGardenRobot,6,https://github.com/MaslowCNC/Firmware/pull/528#issuecomment-522337993,"The firmware does not currently write steps to EEPROM after the completion of a B06 or B08 command, both of write directly modify the steps value of the encoder.  Normally this isn't a problem since steps get written after a move occurs, but during software testing I discovered I had to continuously reset my chain lengths every time I restarted webcontrol because the were set to 0,0 in EEPROM.  This fix sets sys.writeStepsToEEPROM to true after those commands are issued so the new steps value will be written to EEPROM.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/madgrizzle,1,https://github.com/MaslowCNC/Firmware/pull/529,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523054555,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","Congratulations on the pull request @madgrizzle
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/blurfl,3,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523064018,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!",Which values are you talking about? When would those be changed in normal use?,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/madgrizzle,4,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523083429,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","chainSagCorrection , leftChainTolerance, rightChainTolerance.  Normally these aren't changed so much that it results in a problem, but I think we saw it in v1.27 (@jess experienced it).  I've seen something like this happen in testing and never was able to figure it out, but by working on her issue I discovered what I think was the source of it.",True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/davidelang,5,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523085191,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","On Tue, 20 Aug 2019, Scott Smith wrote:
 Which values are you talking about? When would those be changed in normal use?
calibration settings, they would not be changed in normal use, just when doing
calibration, but they can make the calibration 'fail' and cause you to need to
calibrate again or reset the chains",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/madgrizzle,6,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523089609,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","I believe the only impact is that the controller would kick a sled-not-keeping-up error.  The calibration should still be good.  Once you clear it, you are good to go.  This just eliminates that error from occurring.  Changes to other parameters (rotational radius, distance between motors, etc.) call kinematics::init, just not those three.  I think it was just an oversight.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/blurfl,7,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523100335,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","chainSagCorrection , leftChainTolerance, rightChainTolerance

So would a test sending '$37=nnnn.mm' '$40...' and '$41...' show the issue? Looking for a clear test here...",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/madgrizzle,8,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523104507,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!",Yes.  The delta between the old and new value has to be significant enough to cause the new sled position to be more than your position error tolerance (2.0 mm default).,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/madgrizzle,9,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523104988,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","Once you get the initial sled-not-keeping-up alarm.  clear it and you shouldn't get it again.  When you do the fix, it shouldn't occur in the first place.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/blurfl,10,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523283016,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","Sending the '$NN=' commands does trigger the Kinematics.init(), and no bad things seem to happen, but since those are calculated values GC recalculates them and sends back the original value the next time a '$$' report is sent.
Haven't gone through a full recalibration to see whether the sled alarms are solved, though.
Moving the sled with changed '$NN=' values before GC restores them can trigger the alert with or without the patch, depending on the value. The alerts may be due to faulty measurements or flawed calculations?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/madgrizzle,11,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523446833,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","""Sending the '$NN=' commands does trigger the Kinematics.init(), and no bad things seem to happen, but since those are calculated values GC recalculates them and sends back the original value the next time a '$$' report is sent.""
Correct.. but there's no reason for a user to manually send the $NN= commands for that very reason.
""Haven't gone through a full recalibration to see whether the sled alarms are solved, though.
Moving the sled with changed '$NN=' values before GC restores them can trigger the alert with or without the patch, depending on the value. The alerts may be due to faulty measurements or flawed calculations?""
It's not specifically a calibration issue.  The issue occurs during calibration because that's when chain sag and chain tolerance factors are recalculated.  If one manually changes their values in settings, it could occur then.
This is what I suspect is happening and I don't fully understand it, but I think I'm in the general ballpark... The firmware keeps track of the sled's position in sys.xPosition, sys.yPosition.  The kinematics::forward function is used to find the sled position from the chain lengths using the kinematics formula.  Let's say for a given set of chain lengths, the sled position is 0,0.  Then, you update the chainSagCorrection value.  With the current firmware, the sled is still at 0,0 because you haven't recalculated the sled position using kinematics::init (which calls kinematics::forward) but if you had called it, the sled position would have updated to 0,1 (just as an example).  Then you tell the sled to move 1 inch.  During coordinatedMove, calculations are based upon the current sys.xPosition, sys.yPosition (0,0) and those calculations result in a given _setPoint per step (or something like that).  Then kinematics::inverse is called and chain lengths get calculated.  But at that time, the chain lengths are based upon the new chainSagCorrection value.  What I believe is happening is... something like... the amount of chain length to be let out/reeled in for that step is calculated to be more than what the machine is capable of because its the steps were based upon an incorrect starting point (0,0 vs. 0,1).  I can't tell you precisely what is going on.. I don't understand it enough.. but I think that's where the demon lies.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/blurfl,12,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523481241,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","Sorry, I wasn't clear. I don't question that it seems to be proper to run Kinematics.init() in these instances.
I'm just commenting that it is being hard to create a test situation that repeatably fails without and succeeds with the patch. Having a test like that, which others can run and confirm, is reassuring.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/madgrizzle,13,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523522916,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!","""Sorry, I wasn't clear. I don't question that it seems to be proper to run Kinematics.init() in these instances.""
I wasn't doubting that.. I think its intuitive that it should be run since its run when the ""original"" parameters are changed.  I agree it may be difficult to test because you have to create the conditions where it happens.. I tried to describe where I think the issue is occurring in case that helps.  I just know when @jess was trying to calibrate with v1.27 she was getting some really big numbers for chainTolerance (for reasons unrelated to this issue) and when they got pushed, after she tried to move the sled, it would raise that alarm (because of this issue).  I was able to duplicate that happening and when I added kinematics.init calls to those three items, it stopped happening.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,529,2019-08-20T14:52:17Z,2019-08-22T14:58:49Z,2019-08-22T14:58:49Z,MERGED,True,3,0,1,https://github.com/madgrizzle,Add Missing Kinematics.Init(),1,['bug'],https://github.com/MaslowCNC/Firmware/pull/529,https://github.com/MaslowCommunityGardenRobot,14,https://github.com/MaslowCNC/Firmware/pull/529#issuecomment-523943152,"Any changes to values that are used during the kinematics::forward calculations should call kinematics.init() so sled position can be recalculated.  If its not, this can cause a ""sled not keeping up"" error, particularly after calibration.  If the sled is at an unadjusted position and a move is made, the move will be made with the adjusted parameters and that can exceed the positionErrorLimit.
Did I miss any?
Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?  Fixes a bug
Does this firmware change affect kinematics or any part of the calibration process?
In a sense, it updates the sled position to utilize values just pushed to it
a) If so, does this change require recalibration?
no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
n/a
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
not required.. it eliminates the potential for a sled not keeping up error
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
fake servo only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Someone try it out by changing one of the values significantly and making the sled move.  Prior to this fix, if value change was significant enough, it would cause a sled not keeping up error.  This should fix it.
Thanks for contributing!",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,530,2019-08-22T02:23:32Z,2019-08-24T02:58:38Z,2019-08-24T02:58:39Z,MERGED,True,56,12,6,https://github.com/blurfl,add B99 command to control FAKE_SERVO mode,1,['enhancement'],https://github.com/MaslowCNC/Firmware/pull/530,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/530,"FAKE_SERVO mode is useful for testing firmware and GC changes, or troublesome gcode files without needing to run the router around the board. It can be used on a Mega/motorControl pair with no motors attached.
Use: 'B99 ON' turns FAKE_SERVO mode on, 'B99' with anything other than 'ON' (or nothing) turns it off.
The current state of FAKE_SERVO is reported at startup and when it changes.
The state is saved in EEPROM to persist over restarts, but is set off when the EEPROM is wiped, so off is the default state.
During FAKE_SERVO mode, the motors do not run. Instead computePID() spoofs the encoder value sent to the PID using a value that is +- 10% of the expected destination value. The cursor on the GC screen tracks the progress of the spoofed encoder values.
Files changed:
cnc_ctrl_v1.ino:

add global flag to signal Axis::computePID() and Motor::write()
check for saved state at startup and report it

Gcode.cpp:

add 'B99 ' command


if the line contains 'ON' set FAKE_SERVO_STATE otherwise clear it




report the state




save the value of FAKE_SERVO_STATE in the high byte of EEPROM to persiste over restarts




note that Setings::settingsWipe(SETTINGS_RESTORE_ALL) writes '0' to that location, which turns FAKE_SERVO off



Axis.cpp:

at start of Axis::computePID(), check 'if (FAKE_SERVO_STATE != 0)' to determine whether to fake the encoder change. The check adds very few microseconds to this importrant function.

Motor.cpp:

at the start of Motor::write() add a check for (FAKE_SERVO_STATE == 0) to determine whether to set the speed of the motor. This check adds only a few microseconds. Adding this check keeps the motors inoperative dureing FAKE_SERVO mode.

Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
This adds a feature.
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change the kinematics.
a) If so, does this change require recalibration?
It does not need recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
The default state is off.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
The change does not affect these, no changes are needed,
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
The PR has been tested on an actual machine and in fake servo mode üòÅ.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Create two macros: 'B99' and B99 ON'
Start GC and connect, note the line 'FAKE_SERVO off' on the screen.
Test for correct motor operation.
Use the 'B99 ON' macro, note the line 'FAKE_SERVO on'
Test that the cursor moves on the screen as expected but the motors stay quiet.
Disconnect the serial connection and reconnect to demonstrate that the state of FAKE_SERVO persists over a restart.
Use the 'B99' macro, note the line 'FAKE_SERVO off'
Test for correct motor operation.","FAKE_SERVO mode is useful for testing firmware and GC changes, or troublesome gcode files without needing to run the router around the board. It can be used on a Mega/motorControl pair with no motors attached.
Use: 'B99 ON' turns FAKE_SERVO mode on, 'B99' with anything other than 'ON' (or nothing) turns it off.
The current state of FAKE_SERVO is reported at startup and when it changes.
The state is saved in EEPROM to persist over restarts, but is set off when the EEPROM is wiped, so off is the default state.
During FAKE_SERVO mode, the motors do not run. Instead computePID() spoofs the encoder value sent to the PID using a value that is +- 10% of the expected destination value. The cursor on the GC screen tracks the progress of the spoofed encoder values.
Files changed:
cnc_ctrl_v1.ino:

add global flag to signal Axis::computePID() and Motor::write()
check for saved state at startup and report it

Gcode.cpp:

add 'B99 ' command


if the line contains 'ON' set FAKE_SERVO_STATE otherwise clear it




report the state




save the value of FAKE_SERVO_STATE in the high byte of EEPROM to persiste over restarts




note that Setings::settingsWipe(SETTINGS_RESTORE_ALL) writes '0' to that location, which turns FAKE_SERVO off



Axis.cpp:

at start of Axis::computePID(), check 'if (FAKE_SERVO_STATE != 0)' to determine whether to fake the encoder change. The check adds very few microseconds to this importrant function.

Motor.cpp:

at the start of Motor::write() add a check for (FAKE_SERVO_STATE == 0) to determine whether to set the speed of the motor. This check adds only a few microseconds. Adding this check keeps the motors inoperative dureing FAKE_SERVO mode.

Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
This adds a feature.
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change the kinematics.
a) If so, does this change require recalibration?
It does not need recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
The default state is off.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
The change does not affect these, no changes are needed,
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
The PR has been tested on an actual machine and in fake servo mode üòÅ.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Create two macros: 'B99' and B99 ON'
Start GC and connect, note the line 'FAKE_SERVO off' on the screen.
Test for correct motor operation.
Use the 'B99 ON' macro, note the line 'FAKE_SERVO on'
Test that the cursor moves on the screen as expected but the motors stay quiet.
Disconnect the serial connection and reconnect to demonstrate that the state of FAKE_SERVO persists over a restart.
Use the 'B99' macro, note the line 'FAKE_SERVO off'
Test for correct motor operation.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,530,2019-08-22T02:23:32Z,2019-08-24T02:58:38Z,2019-08-24T02:58:39Z,MERGED,True,56,12,6,https://github.com/blurfl,add B99 command to control FAKE_SERVO mode,1,['enhancement'],https://github.com/MaslowCNC/Firmware/pull/530,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/530#issuecomment-523726490,"FAKE_SERVO mode is useful for testing firmware and GC changes, or troublesome gcode files without needing to run the router around the board. It can be used on a Mega/motorControl pair with no motors attached.
Use: 'B99 ON' turns FAKE_SERVO mode on, 'B99' with anything other than 'ON' (or nothing) turns it off.
The current state of FAKE_SERVO is reported at startup and when it changes.
The state is saved in EEPROM to persist over restarts, but is set off when the EEPROM is wiped, so off is the default state.
During FAKE_SERVO mode, the motors do not run. Instead computePID() spoofs the encoder value sent to the PID using a value that is +- 10% of the expected destination value. The cursor on the GC screen tracks the progress of the spoofed encoder values.
Files changed:
cnc_ctrl_v1.ino:

add global flag to signal Axis::computePID() and Motor::write()
check for saved state at startup and report it

Gcode.cpp:

add 'B99 ' command


if the line contains 'ON' set FAKE_SERVO_STATE otherwise clear it




report the state




save the value of FAKE_SERVO_STATE in the high byte of EEPROM to persiste over restarts




note that Setings::settingsWipe(SETTINGS_RESTORE_ALL) writes '0' to that location, which turns FAKE_SERVO off



Axis.cpp:

at start of Axis::computePID(), check 'if (FAKE_SERVO_STATE != 0)' to determine whether to fake the encoder change. The check adds very few microseconds to this importrant function.

Motor.cpp:

at the start of Motor::write() add a check for (FAKE_SERVO_STATE == 0) to determine whether to set the speed of the motor. This check adds only a few microseconds. Adding this check keeps the motors inoperative dureing FAKE_SERVO mode.

Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
This adds a feature.
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change the kinematics.
a) If so, does this change require recalibration?
It does not need recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
The default state is off.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
The change does not affect these, no changes are needed,
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
The PR has been tested on an actual machine and in fake servo mode üòÅ.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Create two macros: 'B99' and B99 ON'
Start GC and connect, note the line 'FAKE_SERVO off' on the screen.
Test for correct motor operation.
Use the 'B99 ON' macro, note the line 'FAKE_SERVO on'
Test that the cursor moves on the screen as expected but the motors stay quiet.
Disconnect the serial connection and reconnect to demonstrate that the state of FAKE_SERVO persists over a restart.
Use the 'B99' macro, note the line 'FAKE_SERVO off'
Test for correct motor operation.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/blurfl', 'https://github.com/BarbourSmith', 'https://github.com/madgrizzle']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,530,2019-08-22T02:23:32Z,2019-08-24T02:58:38Z,2019-08-24T02:58:39Z,MERGED,True,56,12,6,https://github.com/blurfl,add B99 command to control FAKE_SERVO mode,1,['enhancement'],https://github.com/MaslowCNC/Firmware/pull/530,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/530#issuecomment-523815996,"FAKE_SERVO mode is useful for testing firmware and GC changes, or troublesome gcode files without needing to run the router around the board. It can be used on a Mega/motorControl pair with no motors attached.
Use: 'B99 ON' turns FAKE_SERVO mode on, 'B99' with anything other than 'ON' (or nothing) turns it off.
The current state of FAKE_SERVO is reported at startup and when it changes.
The state is saved in EEPROM to persist over restarts, but is set off when the EEPROM is wiped, so off is the default state.
During FAKE_SERVO mode, the motors do not run. Instead computePID() spoofs the encoder value sent to the PID using a value that is +- 10% of the expected destination value. The cursor on the GC screen tracks the progress of the spoofed encoder values.
Files changed:
cnc_ctrl_v1.ino:

add global flag to signal Axis::computePID() and Motor::write()
check for saved state at startup and report it

Gcode.cpp:

add 'B99 ' command


if the line contains 'ON' set FAKE_SERVO_STATE otherwise clear it




report the state




save the value of FAKE_SERVO_STATE in the high byte of EEPROM to persiste over restarts




note that Setings::settingsWipe(SETTINGS_RESTORE_ALL) writes '0' to that location, which turns FAKE_SERVO off



Axis.cpp:

at start of Axis::computePID(), check 'if (FAKE_SERVO_STATE != 0)' to determine whether to fake the encoder change. The check adds very few microseconds to this importrant function.

Motor.cpp:

at the start of Motor::write() add a check for (FAKE_SERVO_STATE == 0) to determine whether to set the speed of the motor. This check adds only a few microseconds. Adding this check keeps the motors inoperative dureing FAKE_SERVO mode.

Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
This adds a feature.
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change the kinematics.
a) If so, does this change require recalibration?
It does not need recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
The default state is off.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
The change does not affect these, no changes are needed,
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
The PR has been tested on an actual machine and in fake servo mode üòÅ.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Create two macros: 'B99' and B99 ON'
Start GC and connect, note the line 'FAKE_SERVO off' on the screen.
Test for correct motor operation.
Use the 'B99 ON' macro, note the line 'FAKE_SERVO on'
Test that the cursor moves on the screen as expected but the motors stay quiet.
Disconnect the serial connection and reconnect to demonstrate that the state of FAKE_SERVO persists over a restart.
Use the 'B99' macro, note the line 'FAKE_SERVO off'
Test for correct motor operation.","The PR has been tested on an actual machine and in fake servo mode üòÅ.

üòÄ üòÄ üòÄ
Nice work :)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,530,2019-08-22T02:23:32Z,2019-08-24T02:58:38Z,2019-08-24T02:58:39Z,MERGED,True,56,12,6,https://github.com/blurfl,add B99 command to control FAKE_SERVO mode,1,['enhancement'],https://github.com/MaslowCNC/Firmware/pull/530,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/530#issuecomment-524511475,"FAKE_SERVO mode is useful for testing firmware and GC changes, or troublesome gcode files without needing to run the router around the board. It can be used on a Mega/motorControl pair with no motors attached.
Use: 'B99 ON' turns FAKE_SERVO mode on, 'B99' with anything other than 'ON' (or nothing) turns it off.
The current state of FAKE_SERVO is reported at startup and when it changes.
The state is saved in EEPROM to persist over restarts, but is set off when the EEPROM is wiped, so off is the default state.
During FAKE_SERVO mode, the motors do not run. Instead computePID() spoofs the encoder value sent to the PID using a value that is +- 10% of the expected destination value. The cursor on the GC screen tracks the progress of the spoofed encoder values.
Files changed:
cnc_ctrl_v1.ino:

add global flag to signal Axis::computePID() and Motor::write()
check for saved state at startup and report it

Gcode.cpp:

add 'B99 ' command


if the line contains 'ON' set FAKE_SERVO_STATE otherwise clear it




report the state




save the value of FAKE_SERVO_STATE in the high byte of EEPROM to persiste over restarts




note that Setings::settingsWipe(SETTINGS_RESTORE_ALL) writes '0' to that location, which turns FAKE_SERVO off



Axis.cpp:

at start of Axis::computePID(), check 'if (FAKE_SERVO_STATE != 0)' to determine whether to fake the encoder change. The check adds very few microseconds to this importrant function.

Motor.cpp:

at the start of Motor::write() add a check for (FAKE_SERVO_STATE == 0) to determine whether to set the speed of the motor. This check adds only a few microseconds. Adding this check keeps the motors inoperative dureing FAKE_SERVO mode.

Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
This adds a feature.
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change the kinematics.
a) If so, does this change require recalibration?
It does not need recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
The default state is off.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
The change does not affect these, no changes are needed,
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
The PR has been tested on an actual machine and in fake servo mode üòÅ.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
Create two macros: 'B99' and B99 ON'
Start GC and connect, note the line 'FAKE_SERVO off' on the screen.
Test for correct motor operation.
Use the 'B99 ON' macro, note the line 'FAKE_SERVO on'
Test that the cursor moves on the screen as expected but the motors stay quiet.
Disconnect the serial connection and reconnect to demonstrate that the state of FAKE_SERVO persists over a restart.
Use the 'B99' macro, note the line 'FAKE_SERVO off'
Test for correct motor operation.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,532,2019-08-30T06:08:57Z,2019-09-01T06:58:20Z,2019-09-01T06:58:21Z,MERGED,True,17,15,5,https://github.com/blurfl,tighten up FAKE_SERVO access,1,[],https://github.com/MaslowCNC/Firmware/pull/532,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/532,"define a specific number value to indicate FAKE_SERVO as active in Config.h
in cnc_ctrl_v1 on startup, check the contents of EEPROM[ 4095 ] for that special value, if found enter FAKE_SERVO but if any othe value is found store a '0' there and indicate that FAKE_SERVO is 'off'
change the logic in Axis::computePID() and Motor::write() to check for the specific value ranther than non-zero.

What does this pull request do?
Does it add a new feature or fix a bug?
This PR addresses issue #531
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change kinematics
a) If so, does this change require recalibration?
It does not require recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Yes, it has been tested on an actual machine.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.

Start GC and connect; note the line 'FAKE_SERVO OFF'
try to turn FAKE_SERVO on using 'ctrl'-f; nothing happens
change Settings/GroundControl/'FAKE_SERVO allowed' from 'Not allowed' to 'Allowed'
close the settings pane, quit GC and re-open it.
after connecting, observe the line 'FAKE_SERVO OFF'
enable FAKE_SERVO mode using 'ctrl'-f
note the line 'FAKE_SERVO ON'
quit GC and re-open it
after connecting, observe the line 'FAKE_SERVO ON'
change Setting/GroundControl/FAKE_SERVO_allowed to 'Not allowed'
confirm that FAKE_SERVO can be turned off using the 'f' key, note the line 'FAKE_SERVO OFF'
confirm that 'ctrl'-f does not turn FAKE_SERVO on","define a specific number value to indicate FAKE_SERVO as active in Config.h
in cnc_ctrl_v1 on startup, check the contents of EEPROM[ 4095 ] for that special value, if found enter FAKE_SERVO but if any othe value is found store a '0' there and indicate that FAKE_SERVO is 'off'
change the logic in Axis::computePID() and Motor::write() to check for the specific value ranther than non-zero.

What does this pull request do?
Does it add a new feature or fix a bug?
This PR addresses issue #531
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change kinematics
a) If so, does this change require recalibration?
It does not require recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Yes, it has been tested on an actual machine.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.

Start GC and connect; note the line 'FAKE_SERVO OFF'
try to turn FAKE_SERVO on using 'ctrl'-f; nothing happens
change Settings/GroundControl/'FAKE_SERVO allowed' from 'Not allowed' to 'Allowed'
close the settings pane, quit GC and re-open it.
after connecting, observe the line 'FAKE_SERVO OFF'
enable FAKE_SERVO mode using 'ctrl'-f
note the line 'FAKE_SERVO ON'
quit GC and re-open it
after connecting, observe the line 'FAKE_SERVO ON'
change Setting/GroundControl/FAKE_SERVO_allowed to 'Not allowed'
confirm that FAKE_SERVO can be turned off using the 'f' key, note the line 'FAKE_SERVO OFF'
confirm that 'ctrl'-f does not turn FAKE_SERVO on",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,532,2019-08-30T06:08:57Z,2019-09-01T06:58:20Z,2019-09-01T06:58:21Z,MERGED,True,17,15,5,https://github.com/blurfl,tighten up FAKE_SERVO access,1,[],https://github.com/MaslowCNC/Firmware/pull/532,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/532#issuecomment-526483721,"define a specific number value to indicate FAKE_SERVO as active in Config.h
in cnc_ctrl_v1 on startup, check the contents of EEPROM[ 4095 ] for that special value, if found enter FAKE_SERVO but if any othe value is found store a '0' there and indicate that FAKE_SERVO is 'off'
change the logic in Axis::computePID() and Motor::write() to check for the specific value ranther than non-zero.

What does this pull request do?
Does it add a new feature or fix a bug?
This PR addresses issue #531
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change kinematics
a) If so, does this change require recalibration?
It does not require recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Yes, it has been tested on an actual machine.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.

Start GC and connect; note the line 'FAKE_SERVO OFF'
try to turn FAKE_SERVO on using 'ctrl'-f; nothing happens
change Settings/GroundControl/'FAKE_SERVO allowed' from 'Not allowed' to 'Allowed'
close the settings pane, quit GC and re-open it.
after connecting, observe the line 'FAKE_SERVO OFF'
enable FAKE_SERVO mode using 'ctrl'-f
note the line 'FAKE_SERVO ON'
quit GC and re-open it
after connecting, observe the line 'FAKE_SERVO ON'
change Setting/GroundControl/FAKE_SERVO_allowed to 'Not allowed'
confirm that FAKE_SERVO can be turned off using the 'f' key, note the line 'FAKE_SERVO OFF'
confirm that 'ctrl'-f does not turn FAKE_SERVO on","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,532,2019-08-30T06:08:57Z,2019-09-01T06:58:20Z,2019-09-01T06:58:21Z,MERGED,True,17,15,5,https://github.com/blurfl,tighten up FAKE_SERVO access,1,[],https://github.com/MaslowCNC/Firmware/pull/532,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/532#issuecomment-526892812,"define a specific number value to indicate FAKE_SERVO as active in Config.h
in cnc_ctrl_v1 on startup, check the contents of EEPROM[ 4095 ] for that special value, if found enter FAKE_SERVO but if any othe value is found store a '0' there and indicate that FAKE_SERVO is 'off'
change the logic in Axis::computePID() and Motor::write() to check for the specific value ranther than non-zero.

What does this pull request do?
Does it add a new feature or fix a bug?
This PR addresses issue #531
Does this firmware change affect kinematics or any part of the calibration process?
No, it does not change kinematics
a) If so, does this change require recalibration?
It does not require recalibration.
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Yes, it has been tested on an actual machine.
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.

Start GC and connect; note the line 'FAKE_SERVO OFF'
try to turn FAKE_SERVO on using 'ctrl'-f; nothing happens
change Settings/GroundControl/'FAKE_SERVO allowed' from 'Not allowed' to 'Allowed'
close the settings pane, quit GC and re-open it.
after connecting, observe the line 'FAKE_SERVO OFF'
enable FAKE_SERVO mode using 'ctrl'-f
note the line 'FAKE_SERVO ON'
quit GC and re-open it
after connecting, observe the line 'FAKE_SERVO ON'
change Setting/GroundControl/FAKE_SERVO_allowed to 'Not allowed'
confirm that FAKE_SERVO can be turned off using the 'f' key, note the line 'FAKE_SERVO OFF'
confirm that 'ctrl'-f does not turn FAKE_SERVO on",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,534,2019-10-06T06:31:22Z,2019-10-08T06:57:16Z,2019-10-08T06:57:16Z,MERGED,True,3,0,1,https://github.com/blurfl,remove characters within a comment,1,['bug'],https://github.com/MaslowCNC/Firmware/pull/534,https://github.com/blurfl,1,https://github.com/MaslowCNC/Firmware/pull/534,"Remove comment characters between parentheses. GC removes all comments, but WebControl passes them to the firmware. Without this patch, the Arduino reboots when WC sends a line that contains a gcode command and a comment.
What does this pull request do? - Removes the characters of a comment that fall between the parentheses.
Does it add a new feature or fix a bug? - It fixes a bug that made gcode files with comments on lines with gcode commands cause the Arduino to reboot.
Does this firmware change affect kinematics or any part of the calibration process? - no
a) If so, does this change require recalibration? - no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible. - NA
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change? - NA
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)? - yes, both
How can this pull request be tested? Please provide detailed steps about how to test this pull request.
Because GC strips comments before sending lines to the Firmware, testing needs to be done in WebControl.
Using WebControl, this gcode snippet will run correctly without the patch:
G90
G20
G0 X0 Y0
G1 X1 Y1
G1 X0 Y0

Using WebControl, this snippet will cause a 'Connection Lost' error and require WC to be restarted.
G90
G20
G0 X0 Y0
G1 X1 Y1 ( comment )
G1 X0 Y0

After applying the patch, the second snippet runs as expected.","Remove comment characters between parentheses. GC removes all comments, but WebControl passes them to the firmware. Without this patch, the Arduino reboots when WC sends a line that contains a gcode command and a comment.
What does this pull request do? - Removes the characters of a comment that fall between the parentheses.
Does it add a new feature or fix a bug? - It fixes a bug that made gcode files with comments on lines with gcode commands cause the Arduino to reboot.
Does this firmware change affect kinematics or any part of the calibration process? - no
a) If so, does this change require recalibration? - no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible. - NA
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change? - NA
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)? - yes, both
How can this pull request be tested? Please provide detailed steps about how to test this pull request.
Because GC strips comments before sending lines to the Firmware, testing needs to be done in WebControl.
Using WebControl, this gcode snippet will run correctly without the patch:
G90
G20
G0 X0 Y0
G1 X1 Y1
G1 X0 Y0

Using WebControl, this snippet will cause a 'Connection Lost' error and require WC to be restarted.
G90
G20
G0 X0 Y0
G1 X1 Y1 ( comment )
G1 X0 Y0

After applying the patch, the second snippet runs as expected.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,534,2019-10-06T06:31:22Z,2019-10-08T06:57:16Z,2019-10-08T06:57:16Z,MERGED,True,3,0,1,https://github.com/blurfl,remove characters within a comment,1,['bug'],https://github.com/MaslowCNC/Firmware/pull/534,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/534#issuecomment-538717586,"Remove comment characters between parentheses. GC removes all comments, but WebControl passes them to the firmware. Without this patch, the Arduino reboots when WC sends a line that contains a gcode command and a comment.
What does this pull request do? - Removes the characters of a comment that fall between the parentheses.
Does it add a new feature or fix a bug? - It fixes a bug that made gcode files with comments on lines with gcode commands cause the Arduino to reboot.
Does this firmware change affect kinematics or any part of the calibration process? - no
a) If so, does this change require recalibration? - no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible. - NA
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change? - NA
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)? - yes, both
How can this pull request be tested? Please provide detailed steps about how to test this pull request.
Because GC strips comments before sending lines to the Firmware, testing needs to be done in WebControl.
Using WebControl, this gcode snippet will run correctly without the patch:
G90
G20
G0 X0 Y0
G1 X1 Y1
G1 X0 Y0

Using WebControl, this snippet will cause a 'Connection Lost' error and require WC to be restarted.
G90
G20
G0 X0 Y0
G1 X1 Y1 ( comment )
G1 X0 Y0

After applying the patch, the second snippet runs as expected.","This sounds like a great idea to me, nice work üëç üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,534,2019-10-06T06:31:22Z,2019-10-08T06:57:16Z,2019-10-08T06:57:16Z,MERGED,True,3,0,1,https://github.com/blurfl,remove characters within a comment,1,['bug'],https://github.com/MaslowCNC/Firmware/pull/534,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/534#issuecomment-538717903,"Remove comment characters between parentheses. GC removes all comments, but WebControl passes them to the firmware. Without this patch, the Arduino reboots when WC sends a line that contains a gcode command and a comment.
What does this pull request do? - Removes the characters of a comment that fall between the parentheses.
Does it add a new feature or fix a bug? - It fixes a bug that made gcode files with comments on lines with gcode commands cause the Arduino to reboot.
Does this firmware change affect kinematics or any part of the calibration process? - no
a) If so, does this change require recalibration? - no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible. - NA
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change? - NA
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)? - yes, both
How can this pull request be tested? Please provide detailed steps about how to test this pull request.
Because GC strips comments before sending lines to the Firmware, testing needs to be done in WebControl.
Using WebControl, this gcode snippet will run correctly without the patch:
G90
G20
G0 X0 Y0
G1 X1 Y1
G1 X0 Y0

Using WebControl, this snippet will cause a 'Connection Lost' error and require WC to be restarted.
G90
G20
G0 X0 Y0
G1 X1 Y1 ( comment )
G1 X0 Y0

After applying the patch, the second snippet runs as expected.","Congratulations on the pull request @blurfl
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith', 'https://github.com/blurfl']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,534,2019-10-06T06:31:22Z,2019-10-08T06:57:16Z,2019-10-08T06:57:16Z,MERGED,True,3,0,1,https://github.com/blurfl,remove characters within a comment,1,['bug'],https://github.com/MaslowCNC/Firmware/pull/534,https://github.com/BarbourSmith,4,https://github.com/MaslowCNC/Firmware/pull/534#issuecomment-538718038,"Remove comment characters between parentheses. GC removes all comments, but WebControl passes them to the firmware. Without this patch, the Arduino reboots when WC sends a line that contains a gcode command and a comment.
What does this pull request do? - Removes the characters of a comment that fall between the parentheses.
Does it add a new feature or fix a bug? - It fixes a bug that made gcode files with comments on lines with gcode commands cause the Arduino to reboot.
Does this firmware change affect kinematics or any part of the calibration process? - no
a) If so, does this change require recalibration? - no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible. - NA
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change? - NA
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)? - yes, both
How can this pull request be tested? Please provide detailed steps about how to test this pull request.
Because GC strips comments before sending lines to the Firmware, testing needs to be done in WebControl.
Using WebControl, this gcode snippet will run correctly without the patch:
G90
G20
G0 X0 Y0
G1 X1 Y1
G1 X0 Y0

Using WebControl, this snippet will cause a 'Connection Lost' error and require WC to be restarted.
G90
G20
G0 X0 Y0
G1 X1 Y1 ( comment )
G1 X0 Y0

After applying the patch, the second snippet runs as expected.",I beat the robot to comment üòÄ,True,{'HEART': ['https://github.com/blurfl']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,534,2019-10-06T06:31:22Z,2019-10-08T06:57:16Z,2019-10-08T06:57:16Z,MERGED,True,3,0,1,https://github.com/blurfl,remove characters within a comment,1,['bug'],https://github.com/MaslowCNC/Firmware/pull/534,https://github.com/MaslowCommunityGardenRobot,5,https://github.com/MaslowCNC/Firmware/pull/534#issuecomment-539369782,"Remove comment characters between parentheses. GC removes all comments, but WebControl passes them to the firmware. Without this patch, the Arduino reboots when WC sends a line that contains a gcode command and a comment.
What does this pull request do? - Removes the characters of a comment that fall between the parentheses.
Does it add a new feature or fix a bug? - It fixes a bug that made gcode files with comments on lines with gcode commands cause the Arduino to reboot.
Does this firmware change affect kinematics or any part of the calibration process? - no
a) If so, does this change require recalibration? - no
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible. - NA
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change? - NA
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)? - yes, both
How can this pull request be tested? Please provide detailed steps about how to test this pull request.
Because GC strips comments before sending lines to the Firmware, testing needs to be done in WebControl.
Using WebControl, this gcode snippet will run correctly without the patch:
G90
G20
G0 X0 Y0
G1 X1 Y1
G1 X0 Y0

Using WebControl, this snippet will cause a 'Connection Lost' error and require WC to be restarted.
G90
G20
G0 X0 Y0
G1 X1 Y1 ( comment )
G1 X0 Y0

After applying the patch, the second snippet runs as expected.",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,539,2020-02-25T18:52:02Z,2020-02-27T18:52:03Z,2020-02-28T02:01:25Z,CLOSED,False,46,24,2,https://github.com/gb0101010101,Do not perform Z axis movement on G2 if Z is not specified in gcode line,1,[],https://github.com/MaslowCNC/Firmware/pull/539,https://github.com/gb0101010101,1,https://github.com/MaslowCNC/Firmware/pull/539,"What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0","What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,539,2020-02-25T18:52:02Z,2020-02-27T18:52:03Z,2020-02-28T02:01:25Z,CLOSED,False,46,24,2,https://github.com/gb0101010101,Do not perform Z axis movement on G2 if Z is not specified in gcode line,1,[],https://github.com/MaslowCNC/Firmware/pull/539,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/539#issuecomment-591009393,"What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0","Congratulations on the pull request @gb0101010101
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,539,2020-02-25T18:52:02Z,2020-02-27T18:52:03Z,2020-02-28T02:01:25Z,CLOSED,False,46,24,2,https://github.com/gb0101010101,Do not perform Z axis movement on G2 if Z is not specified in gcode line,1,[],https://github.com/MaslowCNC/Firmware/pull/539,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/539#issuecomment-591495487,"What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0","Awesome work @gb0101010101! üëç üëç
I don't have hardware to test this on, but it will get my vote if someone can confirm that it works as expected in hardware.
I like how you cleaned up the comments along the way üëç",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,539,2020-02-25T18:52:02Z,2020-02-27T18:52:03Z,2020-02-28T02:01:25Z,CLOSED,False,46,24,2,https://github.com/gb0101010101,Do not perform Z axis movement on G2 if Z is not specified in gcode line,1,[],https://github.com/MaslowCNC/Firmware/pull/539,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/539#issuecomment-592118681,"What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0",It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,539,2020-02-25T18:52:02Z,2020-02-27T18:52:03Z,2020-02-28T02:01:25Z,CLOSED,False,46,24,2,https://github.com/gb0101010101,Do not perform Z axis movement on G2 if Z is not specified in gcode line,1,[],https://github.com/MaslowCNC/Firmware/pull/539,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/539#issuecomment-592205109,"What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0","This is a great change, I vote that we re-open this as soon as someone tests it in hardware. I just don't want to risk a change to the master branch of the firmware without having proof in hardware.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,539,2020-02-25T18:52:02Z,2020-02-27T18:52:03Z,2020-02-28T02:01:25Z,CLOSED,False,46,24,2,https://github.com/gb0101010101,Do not perform Z axis movement on G2 if Z is not specified in gcode line,1,[],https://github.com/MaslowCNC/Firmware/pull/539,https://github.com/davidelang,6,https://github.com/MaslowCNC/Firmware/pull/539#issuecomment-592260864,"What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0","this could just be that nobody had a chance to test it and provide the up-vote
needed here.

David Lang
‚Ä¶
On Thu, 27 Feb 2020, MaslowCommunityGardenRobot wrote:
 Date: Thu, 27 Feb 2020 10:52:03 -0800
 From: MaslowCommunityGardenRobot ***@***.***>
 Reply-To: MaslowCNC/Firmware
     ***@***.***>
 To: MaslowCNC/Firmware ***@***.***>
 Cc: Subscribed ***@***.***>
 Subject: Re: [MaslowCNC/Firmware] Do not perform Z axis movement on G2 if Z is
      not specified in gcode line (#539)

 It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,539,2020-02-25T18:52:02Z,2020-02-27T18:52:03Z,2020-02-28T02:01:25Z,CLOSED,False,46,24,2,https://github.com/gb0101010101,Do not perform Z axis movement on G2 if Z is not specified in gcode line,1,[],https://github.com/MaslowCNC/Firmware/pull/539,https://github.com/BarbourSmith,7,https://github.com/MaslowCNC/Firmware/pull/539#issuecomment-592273279,"What does this pull request do?

Do not perform Z axis movement on G2 if Z is not specified in gcode line.
Set Z1 and Z2 to NAN if not provided.
Update arc() to deal with NAN Z.
Make Z calculations happen the same way as X&Y before movementUpdate().
Add Z end move same as X & Y.

Does it add a new feature or fix a bug?
Removes unnecessary z axis calculation and faulty movement. This fixes a problem in with Z axis not reaching target depth when G2 is executed as zxais.read was getting current z position whilst it was still in motion and using that for the G2 Z. This code lets the previous Z movement complete.
Does this firmware change affect kinematics or any part of the calibration process?
No.
a) If so, does this change require recalibration?
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
Fake servo only. Will hopefully test on actual machine this weekend.
How can this pull request be tested?
G2 code without Z
G0 G40 G90  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306
G0 Z0  

G2 code with Z
G0 G40 G90 G17  
G21  
G0 X0 Y0 Z0  
G1 Z-8  
G2 X37.93360 Y5.515 I43.2022 J129.306 Z-12 
G0 Z0","Yeah, I think that is exactly what happened üò¢",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,540,2020-03-03T15:15:25Z,2020-03-04T02:43:18Z,2020-03-04T02:43:18Z,MERGED,True,46,24,2,https://github.com/gb0101010101,gb0101010101-g2-arc-z-optional: Do not perform Z axis movement on G2 ‚Ä¶,1,[],https://github.com/MaslowCNC/Firmware/pull/540,https://github.com/gb0101010101,1,https://github.com/MaslowCNC/Firmware/pull/540,"Testing create pull request from same branch for @bar.
Same pull request as before but now tested on physical machine.","Testing create pull request from same branch for @bar.
Same pull request as before but now tested on physical machine.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,540,2020-03-03T15:15:25Z,2020-03-04T02:43:18Z,2020-03-04T02:43:18Z,MERGED,True,46,24,2,https://github.com/gb0101010101,gb0101010101-g2-arc-z-optional: Do not perform Z axis movement on G2 ‚Ä¶,1,[],https://github.com/MaslowCNC/Firmware/pull/540,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/540#issuecomment-594295145,"Testing create pull request from same branch for @bar.
Same pull request as before but now tested on physical machine.","It looks like for some reason the robot can't see a second pull request from the same branch üò¢
I'm really going to have to overhaul how that system works. Thanks for highlighting some of the issues with how it works now.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,541,2020-05-15T19:24:43Z,2020-05-17T19:49:10Z,2020-05-19T04:03:35Z,CLOSED,False,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/541,https://github.com/gb0101010101,1,https://github.com/MaslowCNC/Firmware/pull/541,"What does this pull request do?
Adds support for G2 & G3 commands that use radius R instead of I & J.
e.g. G02 X2.0 Y6.0 R2.0
The code only executes if R is provided in G2 or G3 command. If R, I & J are provided then I & J will be ignored.
Previously this was not supported and code execution would fail if the command was used.
Calculations are copied from MarlinFirmware
MarlinFirmware/Marlin@c2744d8
Does this firmware change affect kinematics or any part of the calibration process?
No.
How can this pull request be tested?
Turn on verbose debugging to see calculated points in console output.
This has not been tested on physical machine. I will not have access to a machine for a while.
Rendered output:
http://www.helmancnc.com/cnc-g02-circular-interpolation-clockwise-cnc-milling-sample-program/
Test G2 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G02 X2.0 Y6.0 R2.0 ; point C 
G01 X8.0 ; point D 
G02 X9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

Test G3 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G03 X-2.0 Y6.0 R2.0 ; point C 
G01 X-8.0 ; point D 
G03 X-9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

GroundControl/WebControl
This PR will need to match changes to GroundControl and WebControl so that they render the commands correctly.
WebControl PR https://github.com/madgrizzle/WebControl/pull/137","What does this pull request do?
Adds support for G2 & G3 commands that use radius R instead of I & J.
e.g. G02 X2.0 Y6.0 R2.0
The code only executes if R is provided in G2 or G3 command. If R, I & J are provided then I & J will be ignored.
Previously this was not supported and code execution would fail if the command was used.
Calculations are copied from MarlinFirmware
MarlinFirmware/Marlin@c2744d8
Does this firmware change affect kinematics or any part of the calibration process?
No.
How can this pull request be tested?
Turn on verbose debugging to see calculated points in console output.
This has not been tested on physical machine. I will not have access to a machine for a while.
Rendered output:
http://www.helmancnc.com/cnc-g02-circular-interpolation-clockwise-cnc-milling-sample-program/
Test G2 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G02 X2.0 Y6.0 R2.0 ; point C 
G01 X8.0 ; point D 
G02 X9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

Test G3 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G03 X-2.0 Y6.0 R2.0 ; point C 
G01 X-8.0 ; point D 
G03 X-9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

GroundControl/WebControl
This PR will need to match changes to GroundControl and WebControl so that they render the commands correctly.
WebControl PR https://github.com/madgrizzle/WebControl/pull/137",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,541,2020-05-15T19:24:43Z,2020-05-17T19:49:10Z,2020-05-19T04:03:35Z,CLOSED,False,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/541,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/541#issuecomment-629449395,"What does this pull request do?
Adds support for G2 & G3 commands that use radius R instead of I & J.
e.g. G02 X2.0 Y6.0 R2.0
The code only executes if R is provided in G2 or G3 command. If R, I & J are provided then I & J will be ignored.
Previously this was not supported and code execution would fail if the command was used.
Calculations are copied from MarlinFirmware
MarlinFirmware/Marlin@c2744d8
Does this firmware change affect kinematics or any part of the calibration process?
No.
How can this pull request be tested?
Turn on verbose debugging to see calculated points in console output.
This has not been tested on physical machine. I will not have access to a machine for a while.
Rendered output:
http://www.helmancnc.com/cnc-g02-circular-interpolation-clockwise-cnc-milling-sample-program/
Test G2 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G02 X2.0 Y6.0 R2.0 ; point C 
G01 X8.0 ; point D 
G02 X9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

Test G3 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G03 X-2.0 Y6.0 R2.0 ; point C 
G01 X-8.0 ; point D 
G03 X-9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

GroundControl/WebControl
This PR will need to match changes to GroundControl and WebControl so that they render the commands correctly.
WebControl PR https://github.com/madgrizzle/WebControl/pull/137","Congratulations on the pull request @gb0101010101
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,541,2020-05-15T19:24:43Z,2020-05-17T19:49:10Z,2020-05-19T04:03:35Z,CLOSED,False,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/541,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/541#issuecomment-629850794,"What does this pull request do?
Adds support for G2 & G3 commands that use radius R instead of I & J.
e.g. G02 X2.0 Y6.0 R2.0
The code only executes if R is provided in G2 or G3 command. If R, I & J are provided then I & J will be ignored.
Previously this was not supported and code execution would fail if the command was used.
Calculations are copied from MarlinFirmware
MarlinFirmware/Marlin@c2744d8
Does this firmware change affect kinematics or any part of the calibration process?
No.
How can this pull request be tested?
Turn on verbose debugging to see calculated points in console output.
This has not been tested on physical machine. I will not have access to a machine for a while.
Rendered output:
http://www.helmancnc.com/cnc-g02-circular-interpolation-clockwise-cnc-milling-sample-program/
Test G2 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G02 X2.0 Y6.0 R2.0 ; point C 
G01 X8.0 ; point D 
G02 X9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

Test G3 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G03 X-2.0 Y6.0 R2.0 ; point C 
G01 X-8.0 ; point D 
G03 X-9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

GroundControl/WebControl
This PR will need to match changes to GroundControl and WebControl so that they render the commands correctly.
WebControl PR https://github.com/madgrizzle/WebControl/pull/137",It looks like adding these changes right now isn't a good idea. Consider any feedback that the community has given about why not and feel free to open a new pull request with the changes,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,541,2020-05-15T19:24:43Z,2020-05-17T19:49:10Z,2020-05-19T04:03:35Z,CLOSED,False,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/541,https://github.com/davidelang,4,https://github.com/MaslowCNC/Firmware/pull/541#issuecomment-629962577,"What does this pull request do?
Adds support for G2 & G3 commands that use radius R instead of I & J.
e.g. G02 X2.0 Y6.0 R2.0
The code only executes if R is provided in G2 or G3 command. If R, I & J are provided then I & J will be ignored.
Previously this was not supported and code execution would fail if the command was used.
Calculations are copied from MarlinFirmware
MarlinFirmware/Marlin@c2744d8
Does this firmware change affect kinematics or any part of the calibration process?
No.
How can this pull request be tested?
Turn on verbose debugging to see calculated points in console output.
This has not been tested on physical machine. I will not have access to a machine for a while.
Rendered output:
http://www.helmancnc.com/cnc-g02-circular-interpolation-clockwise-cnc-milling-sample-program/
Test G2 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G02 X2.0 Y6.0 R2.0 ; point C 
G01 X8.0 ; point D 
G02 X9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

Test G3 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G03 X-2.0 Y6.0 R2.0 ; point C 
G01 X-8.0 ; point D 
G03 X-9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

GroundControl/WebControl
This PR will need to match changes to GroundControl and WebControl so that they render the commands correctly.
WebControl PR https://github.com/madgrizzle/WebControl/pull/137","@gb0101010101
please resubmit these as a new pull request.
Then when you get the message from the robot, go to the robot's post (which shows a thumbs up) and click the thumbs up. If there are >1 more thumbs up than there are thumbs down, it will get merged.
unfortunately, once the robot closes it, a new PR is required, it won't process this one again even if we re-open it.
we really need to increase the window to more than 2 days
@BarbourSmith  I thought you had increased it?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,541,2020-05-15T19:24:43Z,2020-05-17T19:49:10Z,2020-05-19T04:03:35Z,CLOSED,False,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/541,https://github.com/BarbourSmith,5,https://github.com/MaslowCNC/Firmware/pull/541#issuecomment-630565614,"What does this pull request do?
Adds support for G2 & G3 commands that use radius R instead of I & J.
e.g. G02 X2.0 Y6.0 R2.0
The code only executes if R is provided in G2 or G3 command. If R, I & J are provided then I & J will be ignored.
Previously this was not supported and code execution would fail if the command was used.
Calculations are copied from MarlinFirmware
MarlinFirmware/Marlin@c2744d8
Does this firmware change affect kinematics or any part of the calibration process?
No.
How can this pull request be tested?
Turn on verbose debugging to see calculated points in console output.
This has not been tested on physical machine. I will not have access to a machine for a while.
Rendered output:
http://www.helmancnc.com/cnc-g02-circular-interpolation-clockwise-cnc-milling-sample-program/
Test G2 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G02 X2.0 Y6.0 R2.0 ; point C 
G01 X8.0 ; point D 
G02 X9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

Test G3 code
G90 G00 X-2.0 Y-1.0 
G01 X0 Y0 F30.0 ; point A 
Y4.0 ; point B 
G03 X-2.0 Y6.0 R2.0 ; point C 
G01 X-8.0 ; point D 
G03 X-9.0 Y2.268 R2.0 ; point E 
G01 X0 Y0 ; point A 
G00 X-2.0 Y-1.0

GroundControl/WebControl
This PR will need to match changes to GroundControl and WebControl so that they render the commands correctly.
WebControl PR https://github.com/madgrizzle/WebControl/pull/137","I thought we decided to go back to 48 hours after some issues with the longer time frame for some reason. I'm open to making it longer again.
These look like great changes, but I also don't have access to a stock machine right now to test so before opening this again let's get someone lined up to do hardware testing?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,543,2020-05-18T15:12:01Z,2020-05-20T15:49:08Z,2020-05-20T15:49:08Z,MERGED,True,1105,19,5,https://github.com/ariasr,Z Axis limits,2,[],https://github.com/MaslowCNC/Firmware/pull/543,https://github.com/ariasr,1,https://github.com/MaslowCNC/Firmware/pull/543,"Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
This is a new feature. I have made some small tweaks to the code to be able to set upper and lower limits for the z axis in order to prevent motors from forcing the Z Axis beyond its limits.
I have added two variables to settings
float zAxisUpperLimit
float zAxisLowerLimit
I have created 4 ""B"" commands
B17 Sets the z axis upper limit to the current z axis position
B18 Sets the z axis lower limit to the current z axis position
B19 Clears z axis limits
B20 Echoes back z axis limits
Does this firmware change affect kinematics or any part of the calibration process?
It does not affect Kinematics. And I have kept it apart from calibration as some users might want to adjust this on the fly as part of the regular use.
a) If so, does this change require recalibration?
It does not require recalibration. However if the user wishes to establish some limits, he/she must set the limits using gcode commands B17 (Upper) and B18 (Lower)
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
By default this limits are set to NAN and will be ignored until specified.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
No recalibration needed. I intend to update webcontrol to be able to set the limits within the user interface. Meanwhile to make use of it you can send gcode directly.
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
It has been tested on an actual machine only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
1 - Move the Z axis to the highest point you with to set as a limit.
2 - Send a B17 gcode command.
3 - Move the Z axis to the lowest point you with to set as a limit.
4 - Send a B18 gcode command.
5 - Now attempt to move the Z axis beyond those limits. It should prevent you from exceeding the limits.
6 - Send the B20 gcode command and observe the limits echoed back
7 - Now attempt to reset the 0 location for the z axis
8 - Send the B20 gcode command and observe the limits echoed back, they should have been updated to account for the new 0 location
9 - Send the B19 gcode command to erase the limits
10 - Send the B20 gcode command and observe the limits echoed back, the limits should have been cleared.
11 - Now attempt to move the Z axis beyond the limits set in steps 1 and 2. It should allow you to move freely. (Careful not to exceed the physical limits of your machine)
Thanks for contributing!","Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
This is a new feature. I have made some small tweaks to the code to be able to set upper and lower limits for the z axis in order to prevent motors from forcing the Z Axis beyond its limits.
I have added two variables to settings
float zAxisUpperLimit
float zAxisLowerLimit
I have created 4 ""B"" commands
B17 Sets the z axis upper limit to the current z axis position
B18 Sets the z axis lower limit to the current z axis position
B19 Clears z axis limits
B20 Echoes back z axis limits
Does this firmware change affect kinematics or any part of the calibration process?
It does not affect Kinematics. And I have kept it apart from calibration as some users might want to adjust this on the fly as part of the regular use.
a) If so, does this change require recalibration?
It does not require recalibration. However if the user wishes to establish some limits, he/she must set the limits using gcode commands B17 (Upper) and B18 (Lower)
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
By default this limits are set to NAN and will be ignored until specified.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
No recalibration needed. I intend to update webcontrol to be able to set the limits within the user interface. Meanwhile to make use of it you can send gcode directly.
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
It has been tested on an actual machine only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
1 - Move the Z axis to the highest point you with to set as a limit.
2 - Send a B17 gcode command.
3 - Move the Z axis to the lowest point you with to set as a limit.
4 - Send a B18 gcode command.
5 - Now attempt to move the Z axis beyond those limits. It should prevent you from exceeding the limits.
6 - Send the B20 gcode command and observe the limits echoed back
7 - Now attempt to reset the 0 location for the z axis
8 - Send the B20 gcode command and observe the limits echoed back, they should have been updated to account for the new 0 location
9 - Send the B19 gcode command to erase the limits
10 - Send the B20 gcode command and observe the limits echoed back, the limits should have been cleared.
11 - Now attempt to move the Z axis beyond the limits set in steps 1 and 2. It should allow you to move freely. (Careful not to exceed the physical limits of your machine)
Thanks for contributing!",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,543,2020-05-18T15:12:01Z,2020-05-20T15:49:08Z,2020-05-20T15:49:08Z,MERGED,True,1105,19,5,https://github.com/ariasr,Z Axis limits,2,[],https://github.com/MaslowCNC/Firmware/pull/543,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/543#issuecomment-630271412,"Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
This is a new feature. I have made some small tweaks to the code to be able to set upper and lower limits for the z axis in order to prevent motors from forcing the Z Axis beyond its limits.
I have added two variables to settings
float zAxisUpperLimit
float zAxisLowerLimit
I have created 4 ""B"" commands
B17 Sets the z axis upper limit to the current z axis position
B18 Sets the z axis lower limit to the current z axis position
B19 Clears z axis limits
B20 Echoes back z axis limits
Does this firmware change affect kinematics or any part of the calibration process?
It does not affect Kinematics. And I have kept it apart from calibration as some users might want to adjust this on the fly as part of the regular use.
a) If so, does this change require recalibration?
It does not require recalibration. However if the user wishes to establish some limits, he/she must set the limits using gcode commands B17 (Upper) and B18 (Lower)
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
By default this limits are set to NAN and will be ignored until specified.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
No recalibration needed. I intend to update webcontrol to be able to set the limits within the user interface. Meanwhile to make use of it you can send gcode directly.
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
It has been tested on an actual machine only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
1 - Move the Z axis to the highest point you with to set as a limit.
2 - Send a B17 gcode command.
3 - Move the Z axis to the lowest point you with to set as a limit.
4 - Send a B18 gcode command.
5 - Now attempt to move the Z axis beyond those limits. It should prevent you from exceeding the limits.
6 - Send the B20 gcode command and observe the limits echoed back
7 - Now attempt to reset the 0 location for the z axis
8 - Send the B20 gcode command and observe the limits echoed back, they should have been updated to account for the new 0 location
9 - Send the B19 gcode command to erase the limits
10 - Send the B20 gcode command and observe the limits echoed back, the limits should have been cleared.
11 - Now attempt to move the Z axis beyond the limits set in steps 1 and 2. It should allow you to move freely. (Careful not to exceed the physical limits of your machine)
Thanks for contributing!","Congratulations on the pull request @ariasr
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/ariasr', 'https://github.com/BarbourSmith']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,543,2020-05-18T15:12:01Z,2020-05-20T15:49:08Z,2020-05-20T15:49:08Z,MERGED,True,1105,19,5,https://github.com/ariasr,Z Axis limits,2,[],https://github.com/MaslowCNC/Firmware/pull/543,https://github.com/BarbourSmith,3,https://github.com/MaslowCNC/Firmware/pull/543#issuecomment-630564189,"Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
This is a new feature. I have made some small tweaks to the code to be able to set upper and lower limits for the z axis in order to prevent motors from forcing the Z Axis beyond its limits.
I have added two variables to settings
float zAxisUpperLimit
float zAxisLowerLimit
I have created 4 ""B"" commands
B17 Sets the z axis upper limit to the current z axis position
B18 Sets the z axis lower limit to the current z axis position
B19 Clears z axis limits
B20 Echoes back z axis limits
Does this firmware change affect kinematics or any part of the calibration process?
It does not affect Kinematics. And I have kept it apart from calibration as some users might want to adjust this on the fly as part of the regular use.
a) If so, does this change require recalibration?
It does not require recalibration. However if the user wishes to establish some limits, he/she must set the limits using gcode commands B17 (Upper) and B18 (Lower)
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
By default this limits are set to NAN and will be ignored until specified.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
No recalibration needed. I intend to update webcontrol to be able to set the limits within the user interface. Meanwhile to make use of it you can send gcode directly.
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
It has been tested on an actual machine only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
1 - Move the Z axis to the highest point you with to set as a limit.
2 - Send a B17 gcode command.
3 - Move the Z axis to the lowest point you with to set as a limit.
4 - Send a B18 gcode command.
5 - Now attempt to move the Z axis beyond those limits. It should prevent you from exceeding the limits.
6 - Send the B20 gcode command and observe the limits echoed back
7 - Now attempt to reset the 0 location for the z axis
8 - Send the B20 gcode command and observe the limits echoed back, they should have been updated to account for the new 0 location
9 - Send the B19 gcode command to erase the limits
10 - Send the B20 gcode command and observe the limits echoed back, the limits should have been cleared.
11 - Now attempt to move the Z axis beyond the limits set in steps 1 and 2. It should allow you to move freely. (Careful not to exceed the physical limits of your machine)
Thanks for contributing!","This is a gorgeous pull request. Love how you documented the code. Love how you took time to answer all the pull request questions carefully. Awesome work, a great contribution. üëç üëç üôè",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,543,2020-05-18T15:12:01Z,2020-05-20T15:49:08Z,2020-05-20T15:49:08Z,MERGED,True,1105,19,5,https://github.com/ariasr,Z Axis limits,2,[],https://github.com/MaslowCNC/Firmware/pull/543,https://github.com/ariasr,4,https://github.com/MaslowCNC/Firmware/pull/543#issuecomment-630755121,"Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
This is a new feature. I have made some small tweaks to the code to be able to set upper and lower limits for the z axis in order to prevent motors from forcing the Z Axis beyond its limits.
I have added two variables to settings
float zAxisUpperLimit
float zAxisLowerLimit
I have created 4 ""B"" commands
B17 Sets the z axis upper limit to the current z axis position
B18 Sets the z axis lower limit to the current z axis position
B19 Clears z axis limits
B20 Echoes back z axis limits
Does this firmware change affect kinematics or any part of the calibration process?
It does not affect Kinematics. And I have kept it apart from calibration as some users might want to adjust this on the fly as part of the regular use.
a) If so, does this change require recalibration?
It does not require recalibration. However if the user wishes to establish some limits, he/she must set the limits using gcode commands B17 (Upper) and B18 (Lower)
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
By default this limits are set to NAN and will be ignored until specified.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
No recalibration needed. I intend to update webcontrol to be able to set the limits within the user interface. Meanwhile to make use of it you can send gcode directly.
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
It has been tested on an actual machine only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
1 - Move the Z axis to the highest point you with to set as a limit.
2 - Send a B17 gcode command.
3 - Move the Z axis to the lowest point you with to set as a limit.
4 - Send a B18 gcode command.
5 - Now attempt to move the Z axis beyond those limits. It should prevent you from exceeding the limits.
6 - Send the B20 gcode command and observe the limits echoed back
7 - Now attempt to reset the 0 location for the z axis
8 - Send the B20 gcode command and observe the limits echoed back, they should have been updated to account for the new 0 location
9 - Send the B19 gcode command to erase the limits
10 - Send the B20 gcode command and observe the limits echoed back, the limits should have been cleared.
11 - Now attempt to move the Z axis beyond the limits set in steps 1 and 2. It should allow you to move freely. (Careful not to exceed the physical limits of your machine)
Thanks for contributing!",Thank you,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,543,2020-05-18T15:12:01Z,2020-05-20T15:49:08Z,2020-05-20T15:49:08Z,MERGED,True,1105,19,5,https://github.com/ariasr,Z Axis limits,2,[],https://github.com/MaslowCNC/Firmware/pull/543,https://github.com/ersdds,5,https://github.com/MaslowCNC/Firmware/pull/543#issuecomment-631246458,"Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
This is a new feature. I have made some small tweaks to the code to be able to set upper and lower limits for the z axis in order to prevent motors from forcing the Z Axis beyond its limits.
I have added two variables to settings
float zAxisUpperLimit
float zAxisLowerLimit
I have created 4 ""B"" commands
B17 Sets the z axis upper limit to the current z axis position
B18 Sets the z axis lower limit to the current z axis position
B19 Clears z axis limits
B20 Echoes back z axis limits
Does this firmware change affect kinematics or any part of the calibration process?
It does not affect Kinematics. And I have kept it apart from calibration as some users might want to adjust this on the fly as part of the regular use.
a) If so, does this change require recalibration?
It does not require recalibration. However if the user wishes to establish some limits, he/she must set the limits using gcode commands B17 (Upper) and B18 (Lower)
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
By default this limits are set to NAN and will be ignored until specified.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
No recalibration needed. I intend to update webcontrol to be able to set the limits within the user interface. Meanwhile to make use of it you can send gcode directly.
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
It has been tested on an actual machine only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
1 - Move the Z axis to the highest point you with to set as a limit.
2 - Send a B17 gcode command.
3 - Move the Z axis to the lowest point you with to set as a limit.
4 - Send a B18 gcode command.
5 - Now attempt to move the Z axis beyond those limits. It should prevent you from exceeding the limits.
6 - Send the B20 gcode command and observe the limits echoed back
7 - Now attempt to reset the 0 location for the z axis
8 - Send the B20 gcode command and observe the limits echoed back, they should have been updated to account for the new 0 location
9 - Send the B19 gcode command to erase the limits
10 - Send the B20 gcode command and observe the limits echoed back, the limits should have been cleared.
11 - Now attempt to move the Z axis beyond the limits set in steps 1 and 2. It should allow you to move freely. (Careful not to exceed the physical limits of your machine)
Thanks for contributing!",üëç this is awasom,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,543,2020-05-18T15:12:01Z,2020-05-20T15:49:08Z,2020-05-20T15:49:08Z,MERGED,True,1105,19,5,https://github.com/ariasr,Z Axis limits,2,[],https://github.com/MaslowCNC/Firmware/pull/543,https://github.com/MaslowCommunityGardenRobot,6,https://github.com/MaslowCNC/Firmware/pull/543#issuecomment-631560685,"Thanks for contributing to The Maslow Firmware! You rock.
Please let the community know some basic information about this pull request.
What does this pull request do?
Does it add a new feature or fix a bug?
This is a new feature. I have made some small tweaks to the code to be able to set upper and lower limits for the z axis in order to prevent motors from forcing the Z Axis beyond its limits.
I have added two variables to settings
float zAxisUpperLimit
float zAxisLowerLimit
I have created 4 ""B"" commands
B17 Sets the z axis upper limit to the current z axis position
B18 Sets the z axis lower limit to the current z axis position
B19 Clears z axis limits
B20 Echoes back z axis limits
Does this firmware change affect kinematics or any part of the calibration process?
It does not affect Kinematics. And I have kept it apart from calibration as some users might want to adjust this on the fly as part of the regular use.
a) If so, does this change require recalibration?
It does not require recalibration. However if the user wishes to establish some limits, he/she must set the limits using gcode commands B17 (Upper) and B18 (Lower)
b) If so, is there an option for user to opt-out of the change until ready for recalibration? If not, explain why this is not possible.
By default this limits are set to NAN and will be ignored until specified.
c) Has the calibration model in gc/hc/wc been updated to agree with firmware change?
No recalibration needed. I intend to update webcontrol to be able to set the limits within the user interface. Meanwhile to make use of it you can send gcode directly.
d) Has this PR been tested on actual machine and/or in fake servo mode (indicate which or both)?
It has been tested on an actual machine only
How can this pull request be tested?
Please provide detailed steps about how to test this pull request.
1 - Move the Z axis to the highest point you with to set as a limit.
2 - Send a B17 gcode command.
3 - Move the Z axis to the lowest point you with to set as a limit.
4 - Send a B18 gcode command.
5 - Now attempt to move the Z axis beyond those limits. It should prevent you from exceeding the limits.
6 - Send the B20 gcode command and observe the limits echoed back
7 - Now attempt to reset the 0 location for the z axis
8 - Send the B20 gcode command and observe the limits echoed back, they should have been updated to account for the new 0 location
9 - Send the B19 gcode command to erase the limits
10 - Send the B20 gcode command and observe the limits echoed back, the limits should have been cleared.
11 - Now attempt to move the Z axis beyond the limits set in steps 1 and 2. It should allow you to move freely. (Careful not to exceed the physical limits of your machine)
Thanks for contributing!",Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,544,2020-05-19T19:02:42Z,2020-05-21T18:49:06Z,2020-05-21T18:49:06Z,MERGED,True,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/544,https://github.com/gb0101010101,1,https://github.com/MaslowCNC/Firmware/pull/544,Resubmitting PR #541,Resubmitting PR #541,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,544,2020-05-19T19:02:42Z,2020-05-21T18:49:06Z,2020-05-21T18:49:06Z,MERGED,True,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/544,https://github.com/gb0101010101,2,https://github.com/MaslowCNC/Firmware/pull/544#issuecomment-631025874,Resubmitting PR #541,Tested on physical machine by @Orob-Maslow with pictures in WebControlCNC/WebControl#137,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,544,2020-05-19T19:02:42Z,2020-05-21T18:49:06Z,2020-05-21T18:49:06Z,MERGED,True,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/544,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/544#issuecomment-631044222,Resubmitting PR #541,"Congratulations on the pull request @gb0101010101
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/gb0101010101', 'https://github.com/Orob-Maslow']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,544,2020-05-19T19:02:42Z,2020-05-21T18:49:06Z,2020-05-21T18:49:06Z,MERGED,True,31,0,1,https://github.com/gb0101010101,Add support for G2 & G3 commands that use radius R instead of I & J.,1,[],https://github.com/MaslowCNC/Firmware/pull/544,https://github.com/MaslowCommunityGardenRobot,4,https://github.com/MaslowCNC/Firmware/pull/544#issuecomment-632279157,Resubmitting PR #541,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,545,2020-05-20T23:29:37Z,2020-05-22T23:49:01Z,2020-05-22T23:49:02Z,MERGED,True,12,978,1,https://github.com/BarbourSmith,Revert pull pull request template to original version,1,[],https://github.com/MaslowCNC/Firmware/pull/545,https://github.com/BarbourSmith,1,https://github.com/MaslowCNC/Firmware/pull/545,Just reverting the pull request template back to the way it was üòõ ...It somehow became HTML,Just reverting the pull request template back to the way it was üòõ ...It somehow became HTML,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,545,2020-05-20T23:29:37Z,2020-05-22T23:49:01Z,2020-05-22T23:49:02Z,MERGED,True,12,978,1,https://github.com/BarbourSmith,Revert pull pull request template to original version,1,[],https://github.com/MaslowCNC/Firmware/pull/545,https://github.com/MaslowCommunityGardenRobot,2,https://github.com/MaslowCNC/Firmware/pull/545#issuecomment-631813257,Just reverting the pull request template back to the way it was üòõ ...It somehow became HTML,"Congratulations on the pull request @BarbourSmith
Now we need to decide as a community if we want to integrate these changes. You should vote by giving this comment a thumbs up or a thumbs down. Votes are counted in 48 hours. Ties will not be merged.
I'm just a robot, but I love to see people contributing so I'm going vote thumbs up (but my vote won't count...)!",True,"{'THUMBS_UP': ['https://github.com/MaslowCommunityGardenRobot', 'https://github.com/BarbourSmith'], 'LAUGH': ['https://github.com/rspeed']}"
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,545,2020-05-20T23:29:37Z,2020-05-22T23:49:01Z,2020-05-22T23:49:02Z,MERGED,True,12,978,1,https://github.com/BarbourSmith,Revert pull pull request template to original version,1,[],https://github.com/MaslowCNC/Firmware/pull/545,https://github.com/MaslowCommunityGardenRobot,3,https://github.com/MaslowCNC/Firmware/pull/545#issuecomment-632946295,Just reverting the pull request template back to the way it was üòõ ...It somehow became HTML,Time is up and we're ready to merge this pull request. Great work!,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,549,2021-06-06T20:39:15Z,2021-06-07T20:24:03Z,2021-06-10T15:19:08Z,CLOSED,False,125,36,6,https://github.com/EBS-Maslow,TB6643 v1.5 support,1,[],https://github.com/MaslowCNC/Firmware/pull/549,https://github.com/EBS-Maslow,1,https://github.com/MaslowCNC/Firmware/pull/549,"1- Added support for EBS shield TB6643 v1.5
2- Added acceleration control for ""test motors/encoders"" to avoid triggering the TLE5206/TB6643 overcurrent alarm/cut-off while testing (https://forums.maslowcnc.com/t/motor-wont-stop-turning/16680/8)
3- Fix for a small bug in Motor.cpp line 119 which prevented the brake for being applied.
4- Added laserOff to sys.stop and systemReset for safety
5- maxFeed bumped up to 900 (~35ipm)","1- Added support for EBS shield TB6643 v1.5
2- Added acceleration control for ""test motors/encoders"" to avoid triggering the TLE5206/TB6643 overcurrent alarm/cut-off while testing (https://forums.maslowcnc.com/t/motor-wont-stop-turning/16680/8)
3- Fix for a small bug in Motor.cpp line 119 which prevented the brake for being applied.
4- Added laserOff to sys.stop and systemReset for safety
5- maxFeed bumped up to 900 (~35ipm)",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,549,2021-06-06T20:39:15Z,2021-06-07T20:24:03Z,2021-06-10T15:19:08Z,CLOSED,False,125,36,6,https://github.com/EBS-Maslow,TB6643 v1.5 support,1,[],https://github.com/MaslowCNC/Firmware/pull/549,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/549#issuecomment-856972496,"1- Added support for EBS shield TB6643 v1.5
2- Added acceleration control for ""test motors/encoders"" to avoid triggering the TLE5206/TB6643 overcurrent alarm/cut-off while testing (https://forums.maslowcnc.com/t/motor-wont-stop-turning/16680/8)
3- Fix for a small bug in Motor.cpp line 119 which prevented the brake for being applied.
4- Added laserOff to sys.stop and systemReset for safety
5- maxFeed bumped up to 900 (~35ipm)","I'm seeing this as closed, is that right? These changes seem great. I dilly dallied on merging them because I don't really have the hardware to test them and I was trying to think up a way to, but I think they all look good and the only thing for it is to merge them and handle any issues which come up (which I wouldn't expect there to be any) when they come up.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,549,2021-06-06T20:39:15Z,2021-06-07T20:24:03Z,2021-06-10T15:19:08Z,CLOSED,False,125,36,6,https://github.com/EBS-Maslow,TB6643 v1.5 support,1,[],https://github.com/MaslowCNC/Firmware/pull/549,https://github.com/EBS-Maslow,3,https://github.com/MaslowCNC/Firmware/pull/549#issuecomment-858053974,"1- Added support for EBS shield TB6643 v1.5
2- Added acceleration control for ""test motors/encoders"" to avoid triggering the TLE5206/TB6643 overcurrent alarm/cut-off while testing (https://forums.maslowcnc.com/t/motor-wont-stop-turning/16680/8)
3- Fix for a small bug in Motor.cpp line 119 which prevented the brake for being applied.
4- Added laserOff to sys.stop and systemReset for safety
5- maxFeed bumped up to 900 (~35ipm)","Yes, I'm sorry, wanted to do some changes and due to my lack of github experience just closed it. Will do a new pull request.",True,{'THUMBS_UP': ['https://github.com/BarbourSmith']}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,550,2021-06-09T20:14:20Z,2021-06-10T15:39:41Z,2021-06-10T15:39:41Z,MERGED,True,132,47,16,https://github.com/EBS-Maslow,Adding TB6643 v1.5 support,3,[],https://github.com/MaslowCNC/Firmware/pull/550,https://github.com/EBS-Maslow,1,https://github.com/MaslowCNC/Firmware/pull/550,"1- Add support for EBS TB6643 v1.5 shield
2- Added pwm ramp to ""test motors/encoders"" function to avoid triggering the overcurrent alarm on the TB/TLE shields while testing.
3- Bumped up maxFeed to 900 (~35imp)
4- Fix a small bug in Motor.cpp line 119 that prevented from applying the motor brake when speed = 0
5 - Added lasserOff to system.stop & systemReset for safety","1- Add support for EBS TB6643 v1.5 shield
2- Added pwm ramp to ""test motors/encoders"" function to avoid triggering the overcurrent alarm on the TB/TLE shields while testing.
3- Bumped up maxFeed to 900 (~35imp)
4- Fix a small bug in Motor.cpp line 119 that prevented from applying the motor brake when speed = 0
5 - Added lasserOff to system.stop & systemReset for safety",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,550,2021-06-09T20:14:20Z,2021-06-10T15:39:41Z,2021-06-10T15:39:41Z,MERGED,True,132,47,16,https://github.com/EBS-Maslow,Adding TB6643 v1.5 support,3,[],https://github.com/MaslowCNC/Firmware/pull/550,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/550#issuecomment-858729359,"1- Add support for EBS TB6643 v1.5 shield
2- Added pwm ramp to ""test motors/encoders"" function to avoid triggering the overcurrent alarm on the TB/TLE shields while testing.
3- Bumped up maxFeed to 900 (~35imp)
4- Fix a small bug in Motor.cpp line 119 that prevented from applying the motor brake when speed = 0
5 - Added lasserOff to system.stop & systemReset for safety",I don't have much ability to test this other than to verify that it compiles...but it compiles so that's the best I can do üòÅ,True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,551,2021-07-01T19:37:00Z,2021-07-01T20:29:25Z,2021-07-01T20:30:28Z,MERGED,True,40,1,1,None,Update System.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/551,None,1,https://github.com/MaslowCNC/Firmware/pull/551,"Requested changes to support a new, Toshiba TB6643KQ based Maslow motor control shield.
## What does this pull request do?
The requested changes will allow for the recognition of a v1.8 motor control shield
## Does this firmware change affect kinematics or any part of the calibration process?
No
## How can this pull request be tested?
The code changes have been previously tested against an alpha and beta version of the board design. Current testing has proven the functionality of the board over several ""long duaration"" test cuts. A larger sample of users will be needed to test long term durability of the chips and board design. The release to the Community Garden and adoption by an enthusist base should provide sufficient functional testing of the beta design.","Requested changes to support a new, Toshiba TB6643KQ based Maslow motor control shield.
## What does this pull request do?
The requested changes will allow for the recognition of a v1.8 motor control shield
## Does this firmware change affect kinematics or any part of the calibration process?
No
## How can this pull request be tested?
The code changes have been previously tested against an alpha and beta version of the board design. Current testing has proven the functionality of the board over several ""long duaration"" test cuts. A larger sample of users will be needed to test long term durability of the chips and board design. The release to the Community Garden and adoption by an enthusist base should provide sufficient functional testing of the beta design.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,551,2021-07-01T19:37:00Z,2021-07-01T20:29:25Z,2021-07-01T20:30:28Z,MERGED,True,40,1,1,None,Update System.cpp,1,[],https://github.com/MaslowCNC/Firmware/pull/551,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/551#issuecomment-872531130,"Requested changes to support a new, Toshiba TB6643KQ based Maslow motor control shield.
## What does this pull request do?
The requested changes will allow for the recognition of a v1.8 motor control shield
## Does this firmware change affect kinematics or any part of the calibration process?
No
## How can this pull request be tested?
The code changes have been previously tested against an alpha and beta version of the board design. Current testing has proven the functionality of the board over several ""long duaration"" test cuts. A larger sample of users will be needed to test long term durability of the chips and board design. The release to the Community Garden and adoption by an enthusist base should provide sufficient functional testing of the beta design.","Nice first pull request! It's rare to see someone get it all right on the first go. You are now officially a contributor:
https://github.com/MaslowCNC/Firmware/graphs/contributors",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,552,2021-09-09T16:01:04Z,2021-09-11T15:00:22Z,2021-09-11T15:00:22Z,CLOSED,False,18,3,1,None,OSLEAP Initial Firmware Revisions,6,[],https://github.com/MaslowCNC/Firmware/pull/552,None,1,https://github.com/MaslowCNC/Firmware/pull/552,"This Pull Request will implement changes in the MaslowCNC:master firmware branch in order to support a new, open source motor shield (OSLEAP PCB v1.8).
The current master firmware branch contains previously merged code changes that although support this new shield, do so in a way that uses code for another model of shield.
The changes specified in this PR will cease the use of the existing firmware and begin implementing v1.8 specific firmware revisions that will provide the necessary functional suport.","This Pull Request will implement changes in the MaslowCNC:master firmware branch in order to support a new, open source motor shield (OSLEAP PCB v1.8).
The current master firmware branch contains previously merged code changes that although support this new shield, do so in a way that uses code for another model of shield.
The changes specified in this PR will cease the use of the existing firmware and begin implementing v1.8 specific firmware revisions that will provide the necessary functional suport.",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,552,2021-09-09T16:01:04Z,2021-09-11T15:00:22Z,2021-09-11T15:00:22Z,CLOSED,False,18,3,1,None,OSLEAP Initial Firmware Revisions,6,[],https://github.com/MaslowCNC/Firmware/pull/552,https://github.com/BarbourSmith,2,https://github.com/MaslowCNC/Firmware/pull/552#issuecomment-916986509,"This Pull Request will implement changes in the MaslowCNC:master firmware branch in order to support a new, open source motor shield (OSLEAP PCB v1.8).
The current master firmware branch contains previously merged code changes that although support this new shield, do so in a way that uses code for another model of shield.
The changes specified in this PR will cease the use of the existing firmware and begin implementing v1.8 specific firmware revisions that will provide the necessary functional suport.","Let's not worry about the build thing, that seems to be an issue unrelated to this pull request.
Generally we try to have pull requests be a single complete feature so that they can be tested. How would you feel about waiting until all of the changes are in place before we merge into the master branch?",True,{}
MaslowCNC/Firmware,https://github.com/MaslowCNC/Firmware,552,2021-09-09T16:01:04Z,2021-09-11T15:00:22Z,2021-09-11T15:00:22Z,CLOSED,False,18,3,1,None,OSLEAP Initial Firmware Revisions,6,[],https://github.com/MaslowCNC/Firmware/pull/552,None,3,https://github.com/MaslowCNC/Firmware/pull/552#issuecomment-917047877,"This Pull Request will implement changes in the MaslowCNC:master firmware branch in order to support a new, open source motor shield (OSLEAP PCB v1.8).
The current master firmware branch contains previously merged code changes that although support this new shield, do so in a way that uses code for another model of shield.
The changes specified in this PR will cease the use of the existing firmware and begin implementing v1.8 specific firmware revisions that will provide the necessary functional suport.","Let's not worry about the build thing, that seems to be an issue unrelated to this pull request.
Generally we try to have pull requests be a single complete feature so that they can be tested. How would you feel about waiting until all of the changes are in place before we merge into the master branch?

That's fine, we can wait until all the changes are ready before we merge.",True,{}
