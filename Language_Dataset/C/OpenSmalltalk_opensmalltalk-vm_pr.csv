OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,8,2016-06-21T08:02:25Z,2016-06-21T12:06:37Z,2016-06-21T16:48:43Z,CLOSED,False,8,8,3,https://github.com/nicolas-cellier-aka-nice,Change Get/Set WindowLong (W) ->  Get/Set WindowLongPtr (W) for 64 bi…,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/8,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/8,"GetWindowLong and SetWindowLong(W) are 32 bits only.
For compatibility with 64 bits, one must use GetWindowLongPtr SetWindowLongPtr(W).
See Microsoft documentation i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633584%28v=vs.85%29.aspx
Notice: I did not compile the code, win32 compilation setup being quite obsolete
but it's a good occasion to test social pull request and automated builds :)","GetWindowLong and SetWindowLong(W) are 32 bits only.
For compatibility with 64 bits, one must use GetWindowLongPtr SetWindowLongPtr(W).
See Microsoft documentation i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633584%28v=vs.85%29.aspx
Notice: I did not compile the code, win32 compilation setup being quite obsolete
but it's a good occasion to test social pull request and automated builds :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,8,2016-06-21T08:02:25Z,2016-06-21T12:06:37Z,2016-06-21T16:48:43Z,CLOSED,False,8,8,3,https://github.com/nicolas-cellier-aka-nice,Change Get/Set WindowLong (W) ->  Get/Set WindowLongPtr (W) for 64 bi…,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/8,https://github.com/codefrau,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/8#issuecomment-227409323,"GetWindowLong and SetWindowLong(W) are 32 bits only.
For compatibility with 64 bits, one must use GetWindowLongPtr SetWindowLongPtr(W).
See Microsoft documentation i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633584%28v=vs.85%29.aspx
Notice: I did not compile the code, win32 compilation setup being quite obsolete
but it's a good occasion to test social pull request and automated builds :)","The build failed: https://ci.appveyor.com/project/OpenSmalltalk/vm/build/1.0.5/job/aq0wt2ngf930c0av#L263
../../platforms/win32/vm/sqWin32Window.c: In function ‘ioSetFullScreen’:
../../platforms/win32/vm/sqWin32Window.c:1812:33: error: ‘GWLP_STYLE’ undeclared (first use in this function)
       SetWindowLongPtr(stWindow,GWLP_STYLE, WS_POPUP | WS_CLIPCHILDREN);
                                 ^",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,8,2016-06-21T08:02:25Z,2016-06-21T12:06:37Z,2016-06-21T16:48:43Z,CLOSED,False,8,8,3,https://github.com/nicolas-cellier-aka-nice,Change Get/Set WindowLong (W) ->  Get/Set WindowLongPtr (W) for 64 bi…,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/8,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/8#issuecomment-227420109,"GetWindowLong and SetWindowLong(W) are 32 bits only.
For compatibility with 64 bits, one must use GetWindowLongPtr SetWindowLongPtr(W).
See Microsoft documentation i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633584%28v=vs.85%29.aspx
Notice: I did not compile the code, win32 compilation setup being quite obsolete
but it's a good occasion to test social pull request and automated builds :)","Yep, GWL_STYLE and GWL_EXSTYLE constants must not be changed into GWLP_ unlike the others...
It's impossible to get it right without compiling first, it was just a try, but the feedback from appveyor is too slow.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,10,2016-06-21T12:10:34Z,2016-06-21T16:48:34Z,2016-06-21T16:48:43Z,MERGED,True,8,8,3,https://github.com/nicolas-cellier-aka-nice,Set window long ptr 64bit compatibility,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/10,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/10,"The GetWindowLong and SetWindowLong(W) functions work for 32bits pointer only...
Use GetWindowLongPtr instead of GetWindowLong (same for Set) so as to be 64bits compatible.
See Microsoft documentation, i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633585%28v=vs.85%29.aspx
This is is 2nd pull request, with corrected GWL_STYLE and GWL_EXSTYLE which must not be renamed to GWLP_ unlike other constants.","The GetWindowLong and SetWindowLong(W) functions work for 32bits pointer only...
Use GetWindowLongPtr instead of GetWindowLong (same for Set) so as to be 64bits compatible.
See Microsoft documentation, i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633585%28v=vs.85%29.aspx
This is is 2nd pull request, with corrected GWL_STYLE and GWL_EXSTYLE which must not be renamed to GWLP_ unlike other constants.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,10,2016-06-21T12:10:34Z,2016-06-21T16:48:34Z,2016-06-21T16:48:43Z,MERGED,True,8,8,3,https://github.com/nicolas-cellier-aka-nice,Set window long ptr 64bit compatibility,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/10,https://github.com/codefrau,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/10#issuecomment-227459788,"The GetWindowLong and SetWindowLong(W) functions work for 32bits pointer only...
Use GetWindowLongPtr instead of GetWindowLong (same for Set) so as to be 64bits compatible.
See Microsoft documentation, i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633585%28v=vs.85%29.aspx
This is is 2nd pull request, with corrected GWL_STYLE and GWL_EXSTYLE which must not be renamed to GWLP_ unlike other constants.","There is no need to make new pull requests all the time. Just keep pushing to your branch, the commits will be added to this pull request automatically. When merging this PR, it will take the tip of the branch.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,10,2016-06-21T12:10:34Z,2016-06-21T16:48:34Z,2016-06-21T16:48:43Z,MERGED,True,8,8,3,https://github.com/nicolas-cellier-aka-nice,Set window long ptr 64bit compatibility,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/10,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/10#issuecomment-227481490,"The GetWindowLong and SetWindowLong(W) functions work for 32bits pointer only...
Use GetWindowLongPtr instead of GetWindowLong (same for Set) so as to be 64bits compatible.
See Microsoft documentation, i.e. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633585%28v=vs.85%29.aspx
This is is 2nd pull request, with corrected GWL_STYLE and GWL_EXSTYLE which must not be renamed to GWLP_ unlike other constants.",continuous-integration/appveyor/pr fails because of a deployment problem. It looks like @timfel is currently working on deployments.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,11,2016-06-21T16:18:55Z,2016-06-21T18:30:18Z,2016-06-21T18:30:21Z,MERGED,True,27,21,4,https://github.com/timfel,"fix deployment to only run on master and Cog branch, and not for pull requests",2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/11,https://github.com/timfel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/11,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,11,2016-06-21T16:18:55Z,2016-06-21T18:30:18Z,2016-06-21T18:30:21Z,MERGED,True,27,21,4,https://github.com/timfel,"fix deployment to only run on master and Cog branch, and not for pull requests",2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/11,https://github.com/timfel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/11#issuecomment-227501477,,@fniephaus: can you check my bash foo?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,12,2016-06-22T02:41:10Z,2016-06-27T18:29:14Z,2016-07-07T04:11:51Z,CLOSED,False,15,15,6,https://github.com/rmacnak,Fix ARM builds for Newspeak.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12,https://github.com/rmacnak,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12,"Don't hardcode a Raspian configuration, which breaks ARMv7 Linux.
Disable fast bitblt as it is broken when assembled by ARMv7 gcc.
Don't link with libasound as Newspeak VM have no sound plugin.","Don't hardcode a Raspian configuration, which breaks ARMv7 Linux.
Disable fast bitblt as it is broken when assembled by ARMv7 gcc.
Don't link with libasound as Newspeak VM have no sound plugin.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,12,2016-06-22T02:41:10Z,2016-06-27T18:29:14Z,2016-07-07T04:11:51Z,CLOSED,False,15,15,6,https://github.com/rmacnak,Fix ARM builds for Newspeak.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12,https://github.com/timfel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12#issuecomment-227718279,"Don't hardcode a Raspian configuration, which breaks ARMv7 Linux.
Disable fast bitblt as it is broken when assembled by ARMv7 gcc.
Don't link with libasound as Newspeak VM have no sound plugin.","Hi, two questions:


should the mvm scripts be symlinks of one another? or are there significant differences? Just seems like a maintenance headache (not only in the newspeak build dirs, in all others, too)


I think we're building and uploading armv6 on Travis. Should we make this armv7?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,12,2016-06-22T02:41:10Z,2016-06-27T18:29:14Z,2016-07-07T04:11:51Z,CLOSED,False,15,15,6,https://github.com/rmacnak,Fix ARM builds for Newspeak.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12#issuecomment-228459343,"Don't hardcode a Raspian configuration, which breaks ARMv7 Linux.
Disable fast bitblt as it is broken when assembled by ARMv7 gcc.
Don't link with libasound as Newspeak VM have no sound plugin.","Hi Ryan,  Hi Tim,
I can't accept your change Ryan, because while it fixes builds for you, it breaks builds for Tim Rowledge and NuScratch, which has 2.5 million users.  I'm not sure what's best here.  We have to split the v6 builds, which are needed for Pi, from the v7 builds which are useful elsewhere.  So that means having two sets of travis builds for ARM32.  But how should we rename?
a) leave build.linux32ARM as the ""v6"" build, and add build.linux32ARMv7
b) change build.linux32ARM as in your commit and add build.linux32ARMv6 (since the mvm would default and not specify)
c) rename build.linux32ARM to build.linux32ARMv6 and add build.linux32ARMv7
d) ...?
b) or c) are attractive, but both need to be done in the same commit, and then separately someone needs to update travis, and get the nomenclature right.  I'd like to see the ""old"" build products clearly marked with either v6 or RPi.  Then the new products could be labeled as v7 or...?
P.S. How do we get notified of this discussion in email?  I'm visiting the site increasingly often, but it would be nice if I could get notifications, and of only this that I'm interested in.  Things could get v busy around here...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,12,2016-06-22T02:41:10Z,2016-06-27T18:29:14Z,2016-07-07T04:11:51Z,CLOSED,False,15,15,6,https://github.com/rmacnak,Fix ARM builds for Newspeak.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12,https://github.com/rmacnak,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12#issuecomment-228500334,"Don't hardcode a Raspian configuration, which breaks ARMv7 Linux.
Disable fast bitblt as it is broken when assembled by ARMv7 gcc.
Don't link with libasound as Newspeak VM have no sound plugin.","Hi Eliot,
You'll notice I made these changes only for the Newspeak builds, not the Squeak ones, so Scratch should be unaffected.  I'll defer on whether you'd rather split the build directory.
You should get notification emails for any issue or pull request you start or comment on. You can also click the subscribe button off to right if you're interested in other issues.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,12,2016-06-22T02:41:10Z,2016-06-27T18:29:14Z,2016-07-07T04:11:51Z,CLOSED,False,15,15,6,https://github.com/rmacnak,Fix ARM builds for Newspeak.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/12#issuecomment-228833134,"Don't hardcode a Raspian configuration, which breaks ARMv7 Linux.
Disable fast bitblt as it is broken when assembled by ARMv7 gcc.
Don't link with libasound as Newspeak VM have no sound plugin.",Better handled IMO by duplicating the build.linux32ARM directory into versions for v6 (pi) and v7 (everything else).,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,13,2016-06-22T17:18:24Z,2016-06-27T07:58:16Z,2016-10-09T01:11:42Z,MERGED,True,54,592,1,https://github.com/bencoman,Condense gitignore statements for builds.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/13,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/13,"Looking at .gitignore at the 311 entries for   /build.*
I found it a bit overwhelming trying to understand what actually was ignored.
Here is some analysis that condenses this to 55 entries. At the end I show some testing that shows this works based on the existing files.
ANALYSIS
Doing...
$ cd vm
$ find build* -name third-party -prune -o 
-type f -printf ""%f\n"" | sort | uniq -c | sort -hr > /tmp/filecount
finds a small number of files common across multiple directories...
111 mvm
46 plugins.int
46 plugins.ext
33 Makefile
26 makeallclean
23 makealldirty
11 conf.COG
6 makeproduct
6 makeall
6 HowToBuild
5 mkNamedPrims.sh
4 Squeak.rc
4 squeak.ico
4 Squeak.exe.manifest
4 Squeak.def.in
4 NotYetImplemented
4 makeproductclean
4 GreenCogSqueak.ico
4 Croquet.rc
4 Croquet.ico
4 Croquet.exe.manifest
4 Croquet.def.in
4 conf.COG.dbg
4 branding-sed-rules.gmk
4 branding.gmk
[cut a large number of files with count <= 3, which are examined below ]
$ cat /tmp/filecount | awk '$1 <= 3 {print ""find . -name ""  $2}' 
| sh | sort | grep build | grep -vE ""README|/make|/Make""
./build.linux32ARM/asasm
.//editnewspeakinstall.sh
./build.macos32x86//installer/*
./build.macos32x86/xcode/*
./build.win32x86/newspeak.cog.spur/nsvm.*
./build.win32x86/newspeak.stack.spur/nsvm*
The asasm & editnewspeakinstall.sh files can just be directly ignore-excluded.
The installer and xcode directories can be ignore-excluded, followed by their original ignore statements.
The last two ""nsvm"" lines seem a discrepancy, since .gitignore.orig
only shows...
/build.win32x86/newspeak.cog.spur/installer/nsvm.*
I'm not clear what to do here.  As a conservative approach, I track nsvm. Please advise.
IMPLEMENTATION, so I wondered if we could...
$ cp .gitignore .gitignore.orig
$ cat .gitignore.orig | grep -vE ""^[# ]_/build"" > .gitignore
then add to that new  .gitignore

start by ignoring everything build related with
/build_/*/
but don't-ignore individual files occurring four more times..
plus these two...
!/build.linux32ARM/asasm
!editnewspeakinstall.sh
and don't-ignore installer directories...
!installer
but do-ignore... grep installer .gitignore.orig
don't-ignore xcode directories....
!xcode
but do-ignore... grep xcode .gitignore.orig
not sure what to do with, conservatively don't-ignore it
!nsvm

TESTING (from vm directory after merging new .gitignore)
CHECK NEW ""bak"" FILES ARE IGNORED
$ find build* -type f | wc -l
1193
$ git status | wc -l
14
$ find build* -type f -exec cp {} {}.bak ;
$ git status | wc -l
14   # new bak files did not show up as untracked, i.e. ignored
CHECK ALL EXISTING FILES STILL TRACKED
$ find build* -type f -exec rm {} ;
$ git status | grep deleted | wc -l
1193    # same as original count of files
So it seems to work based on given data, but a lot easier to understand and modify in the future.","Looking at .gitignore at the 311 entries for   /build.*
I found it a bit overwhelming trying to understand what actually was ignored.
Here is some analysis that condenses this to 55 entries. At the end I show some testing that shows this works based on the existing files.
ANALYSIS
Doing...
$ cd vm
$ find build* -name third-party -prune -o 
-type f -printf ""%f\n"" | sort | uniq -c | sort -hr > /tmp/filecount
finds a small number of files common across multiple directories...
111 mvm
46 plugins.int
46 plugins.ext
33 Makefile
26 makeallclean
23 makealldirty
11 conf.COG
6 makeproduct
6 makeall
6 HowToBuild
5 mkNamedPrims.sh
4 Squeak.rc
4 squeak.ico
4 Squeak.exe.manifest
4 Squeak.def.in
4 NotYetImplemented
4 makeproductclean
4 GreenCogSqueak.ico
4 Croquet.rc
4 Croquet.ico
4 Croquet.exe.manifest
4 Croquet.def.in
4 conf.COG.dbg
4 branding-sed-rules.gmk
4 branding.gmk
[cut a large number of files with count <= 3, which are examined below ]
$ cat /tmp/filecount | awk '$1 <= 3 {print ""find . -name ""  $2}' 
| sh | sort | grep build | grep -vE ""README|/make|/Make""
./build.linux32ARM/asasm
.//editnewspeakinstall.sh
./build.macos32x86//installer/*
./build.macos32x86/xcode/*
./build.win32x86/newspeak.cog.spur/nsvm.*
./build.win32x86/newspeak.stack.spur/nsvm*
The asasm & editnewspeakinstall.sh files can just be directly ignore-excluded.
The installer and xcode directories can be ignore-excluded, followed by their original ignore statements.
The last two ""nsvm"" lines seem a discrepancy, since .gitignore.orig
only shows...
/build.win32x86/newspeak.cog.spur/installer/nsvm.*
I'm not clear what to do here.  As a conservative approach, I track nsvm. Please advise.
IMPLEMENTATION, so I wondered if we could...
$ cp .gitignore .gitignore.orig
$ cat .gitignore.orig | grep -vE ""^[# ]_/build"" > .gitignore
then add to that new  .gitignore

start by ignoring everything build related with
/build_/*/
but don't-ignore individual files occurring four more times..
plus these two...
!/build.linux32ARM/asasm
!editnewspeakinstall.sh
and don't-ignore installer directories...
!installer
but do-ignore... grep installer .gitignore.orig
don't-ignore xcode directories....
!xcode
but do-ignore... grep xcode .gitignore.orig
not sure what to do with, conservatively don't-ignore it
!nsvm

TESTING (from vm directory after merging new .gitignore)
CHECK NEW ""bak"" FILES ARE IGNORED
$ find build* -type f | wc -l
1193
$ git status | wc -l
14
$ find build* -type f -exec cp {} {}.bak ;
$ git status | wc -l
14   # new bak files did not show up as untracked, i.e. ignored
CHECK ALL EXISTING FILES STILL TRACKED
$ find build* -type f -exec rm {} ;
$ git status | grep deleted | wc -l
1193    # same as original count of files
So it seems to work based on given data, but a lot easier to understand and modify in the future.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,14,2016-06-23T15:06:20Z,2016-06-24T20:34:14Z,2016-06-24T20:34:14Z,MERGED,True,20,1,1,https://github.com/lauraperezcerrato,Added discussed guidelines for commiting source files,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/14,https://github.com/lauraperezcerrato,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/14,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,15,2016-06-24T08:13:09Z,2016-06-24T20:35:07Z,2016-10-09T01:11:26Z,MERGED,True,19,27,1,https://github.com/bencoman,Generalise determination of LD_LIBRARY_PATH in squeak run script,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/15,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/15,"Following on from my mail list post...
    http://forum.world.st/Can-t-infer-base-LD-LIBRARY-PATH-td4896471.html

the `squeak` run script has LD_LIBRARY_PATH hardcoded for a dozen platforms,
but after reformatting the case statement a pattern was apparent...

    /lib/libc*)             
        SVMLLP=""/lib                
           :/usr/lib"";;

    /lib32/libc*)               
        SVMLLP=""/lib32              
           :/usr/lib32"";;

    /lib64/libc*)               
        SVMLLP=""/lib64              
           :/usr/lib64"";;

    /lib/tls/libc*)     
        SVMLLP=""/lib/tls                        :    /lib
           :/usr/lib/tls                        :/usr/lib"";;

    /lib/i386-linux-gnu/libc*)  \
        SVMLLP=""/lib/i386-linux-gnu             :    /lib 
           :/usr/lib/i386-linux-gnu             :/usr/lib"";;

    /lib/i386-linux-gnu/i686/cmov/libc*)    \
        SVMLLP=""/lib/i386-linux-gnu/i686/cmov   :    /lib 
           :/usr/lib/i386-linux-gnu/i686/cmov   :/usr/lib"";;

    /lib/386-linux-gnu/i686/cmov/libc*) \
        SVMLLP=""/lib/386-linux-gnu/i686/cmov    :    /lib 
           :/usr/lib/386-linux-gnu/i686/cmov    :/usr/lib"";;

    /lib/tls/i686/cmov/libc*)   \
        SVMLLP=""/lib/tls/i686/cmov              :    /lib 
           :/usr/lib/tls/i686/cmov              :/usr/lib"";;

    /lib/tls/i686/nosegneg/libc*)   \
        SVMLLP=""/lib/i686/nosegneg/tls          :    /lib 
           :/usr/lib/i686/nosegneg/tls          :/usr/lib"";;

    /lib/arm-linux-gnueabihf/libc*) \
        SVMLLP=""/lib/arm-linux-gnueabihf        :    /lib 
           :/usr/lib/arm-linux-gnueabihf        :/usr/lib"";;

    /lib/x86_64-linux-gnu/libc*)    \
        SVMLLP=""/lib/x86_64-linux-gnu           :    /lib 
           :/usr/lib/x86_64-linux-gnu           :/usr/lib"";;


that could be reduced to...
    PLATFORMLIBDIR=`expr ""$LIBC_SO"" : '\(.*\)/libc.*'`
    SVMLLP=""$PLATFORMLIBDIR:/lib:/usr$PLATFORMLIBDIR:/usr/lib""


So this fixes my platform that the original was failing on, 
AND should work for most future platforms so users never see a failure 
for new platform that would otherwise need to another hard coded case.


Now one semantic has changed.  I couldn't determine how to run `cmd1 || cmd2` 
without it complaining about a missing cmd1 showing on the console.  
But the problem exists in original, which you can observe by swapping the
order of `/bin/uname` and `/usr/bin/uname`,  and then you get... 
     ./squeak: line 25: /usr/bin/uname: No such file or directory
So I just used plain `uname` .  Do we really care which one is used??","Following on from my mail list post...
    http://forum.world.st/Can-t-infer-base-LD-LIBRARY-PATH-td4896471.html

the `squeak` run script has LD_LIBRARY_PATH hardcoded for a dozen platforms,
but after reformatting the case statement a pattern was apparent...

    /lib/libc*)             
        SVMLLP=""/lib                
           :/usr/lib"";;

    /lib32/libc*)               
        SVMLLP=""/lib32              
           :/usr/lib32"";;

    /lib64/libc*)               
        SVMLLP=""/lib64              
           :/usr/lib64"";;

    /lib/tls/libc*)     
        SVMLLP=""/lib/tls                        :    /lib
           :/usr/lib/tls                        :/usr/lib"";;

    /lib/i386-linux-gnu/libc*)  \
        SVMLLP=""/lib/i386-linux-gnu             :    /lib 
           :/usr/lib/i386-linux-gnu             :/usr/lib"";;

    /lib/i386-linux-gnu/i686/cmov/libc*)    \
        SVMLLP=""/lib/i386-linux-gnu/i686/cmov   :    /lib 
           :/usr/lib/i386-linux-gnu/i686/cmov   :/usr/lib"";;

    /lib/386-linux-gnu/i686/cmov/libc*) \
        SVMLLP=""/lib/386-linux-gnu/i686/cmov    :    /lib 
           :/usr/lib/386-linux-gnu/i686/cmov    :/usr/lib"";;

    /lib/tls/i686/cmov/libc*)   \
        SVMLLP=""/lib/tls/i686/cmov              :    /lib 
           :/usr/lib/tls/i686/cmov              :/usr/lib"";;

    /lib/tls/i686/nosegneg/libc*)   \
        SVMLLP=""/lib/i686/nosegneg/tls          :    /lib 
           :/usr/lib/i686/nosegneg/tls          :/usr/lib"";;

    /lib/arm-linux-gnueabihf/libc*) \
        SVMLLP=""/lib/arm-linux-gnueabihf        :    /lib 
           :/usr/lib/arm-linux-gnueabihf        :/usr/lib"";;

    /lib/x86_64-linux-gnu/libc*)    \
        SVMLLP=""/lib/x86_64-linux-gnu           :    /lib 
           :/usr/lib/x86_64-linux-gnu           :/usr/lib"";;


that could be reduced to...
    PLATFORMLIBDIR=`expr ""$LIBC_SO"" : '\(.*\)/libc.*'`
    SVMLLP=""$PLATFORMLIBDIR:/lib:/usr$PLATFORMLIBDIR:/usr/lib""


So this fixes my platform that the original was failing on, 
AND should work for most future platforms so users never see a failure 
for new platform that would otherwise need to another hard coded case.


Now one semantic has changed.  I couldn't determine how to run `cmd1 || cmd2` 
without it complaining about a missing cmd1 showing on the console.  
But the problem exists in original, which you can observe by swapping the
order of `/bin/uname` and `/usr/bin/uname`,  and then you get... 
     ./squeak: line 25: /usr/bin/uname: No such file or directory
So I just used plain `uname` .  Do we really care which one is used??",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,17,2016-06-27T08:54:13Z,2016-06-29T18:49:30Z,2016-11-14T15:59:18Z,MERGED,True,16,3,1,https://github.com/timfel,update updateSCCSVersion script to run on checkout,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/17,https://github.com/timfel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/17,This makes sure that we're updating the revision info also upon switching branches and during bisects and such.,This makes sure that we're updating the revision info also upon switching branches and during bisects and such.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,18,2016-06-27T08:54:31Z,2016-06-28T07:13:26Z,2016-06-28T07:13:31Z,MERGED,True,4,0,1,https://github.com/timfel,try to quiet down ARM builds,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/18,https://github.com/timfel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/18,Should help with #16,Should help with #16,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,22,2016-07-05T21:56:50Z,2016-07-06T20:27:57Z,2016-07-06T20:27:59Z,MERGED,True,143,73,11,https://github.com/krono,Prepare Cocoa VM for High-DPI,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/22,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/22,"Works for both OpenGL and CoreGraphics backends (Why do we have
both?)

Needs new abstractions for 'squeak-screen-size' and
'squeak-mouse-position' in both backends/view. Is provided.","Works for both OpenGL and CoreGraphics backends (Why do we have
both?)

Needs new abstractions for 'squeak-screen-size' and
'squeak-mouse-position' in both backends/view. Is provided.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,22,2016-07-05T21:56:50Z,2016-07-06T20:27:57Z,2016-07-06T20:27:59Z,MERGED,True,143,73,11,https://github.com/krono,Prepare Cocoa VM for High-DPI,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/22,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/22#issuecomment-230615217,"Works for both OpenGL and CoreGraphics backends (Why do we have
both?)

Needs new abstractions for 'squeak-screen-size' and
'squeak-mouse-position' in both backends/view. Is provided.",Note that High-DPI is disabled by default in the .plist,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,24,2016-07-07T05:08:17Z,2016-07-27T09:59:48Z,2016-11-04T01:56:07Z,CLOSED,False,266,267,261,https://github.com/rmacnak,Make scripts fail-stop.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,https://github.com/rmacnak,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,24,2016-07-07T05:08:17Z,2016-07-27T09:59:48Z,2016-11-04T01:56:07Z,CLOSED,False,266,267,261,https://github.com/rmacnak,Make scripts fail-stop.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24#issuecomment-231964478,,"I'd prefer a set -e right after the shebang.
This has also caused a few builds to fail for some reason.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,24,2016-07-07T05:08:17Z,2016-07-27T09:59:48Z,2016-11-04T01:56:07Z,CLOSED,False,266,267,261,https://github.com/rmacnak,Make scripts fail-stop.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24#issuecomment-232827481,,"Ryan, Fabio, can I leave this to you two to agree upon?  Seems like a great change to me, but Fabio you have a niggle.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,24,2016-07-07T05:08:17Z,2016-07-27T09:59:48Z,2016-11-04T01:56:07Z,CLOSED,False,266,267,261,https://github.com/rmacnak,Make scripts fail-stop.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24#issuecomment-232909074,,"Hi Ryan,
I've restarted affected builds to rule out that the builds were just flaky, but it looks like this PR definitely breaks a few builds.
Could you look into this please?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,24,2016-07-07T05:08:17Z,2016-07-27T09:59:48Z,2016-11-04T01:56:07Z,CLOSED,False,266,267,261,https://github.com/rmacnak,Make scripts fail-stop.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,https://github.com/fniephaus,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24#issuecomment-232945319,,Forgot to mention: all failing builds are Newspeak builds on Linux...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,24,2016-07-07T05:08:17Z,2016-07-27T09:59:48Z,2016-11-04T01:56:07Z,CLOSED,False,266,267,261,https://github.com/rmacnak,Make scripts fail-stop.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,https://github.com/fniephaus,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24#issuecomment-232946568,,"It looks like it fails because it can't find the sources file (see this script).
@eliotmiranda do Newspeak builds really need a sources file?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,24,2016-07-07T05:08:17Z,2016-07-27T09:59:48Z,2016-11-04T01:56:07Z,CLOSED,False,266,267,261,https://github.com/rmacnak,Make scripts fail-stop.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24,https://github.com/fniephaus,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/24#issuecomment-235541951,,"Merged: 3e2b3e4 (had to rebase, so GitHub didn't pick up the merge automatically).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,25,2016-07-11T08:56:05Z,2016-07-13T07:31:14Z,2016-07-13T07:31:16Z,MERGED,True,131,25,34,https://github.com/krono,Add ioScreenScaleFactor.,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/25,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/25,"if in doubt, returns 1.0.

enables high-res support for Windows and Mac
Is support for VMMaker.oscog-topa.1900","if in doubt, returns 1.0.

enables high-res support for Windows and Mac
Is support for VMMaker.oscog-topa.1900",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/yoshikiohshima,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/yoshikiohshima,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-232712495,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.",Let me know if there is more things to do.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-232825659,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","Hi Yoshiki,  I've merged the request.  But there's still work to do for 64-bits.  The error is to do with the Objective-C GC policy on 64-bits, which differs from the 32-bit system.  I'm out of my depth here.  I suggest you talk with John McIntosh to understand what's needed. Here's the error when I include CameraPlugin in build.macos64x64/squeak.cog.spur/plugins.ext
    pcrePtr = (sqInt) pcre_compile(patternStrPtr, compileFlags, &errorStrBuffer, &errorOffset, NULL);

../../platforms/iOS/plugins/CameraPlugin/AVFoundationVideoGrabber.m:124:21: error: 'autorelease' is unavailable: not available in automatic reference counting mode
../../platforms/iOS/plugins/CameraPlugin/AVFoundationVideoGrabber.m:124:21: error: ARC forbids explicit message send of 'autorelease'
3 warnings and 2 errors generated.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/yoshikiohshima,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-232838727,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","I should have tested it.  Line 104 of
#define IOS 0
is supposed to prevent the compiler to see line 124:
[captureSession autorelease];
but we'd better have a different check.  I might not be able to get around
testing things at least until the 26th, but if anybody can test it, that is
great.
On Thu, Jul 14, 2016 at 4:56 PM, Eliot Miranda notifications@github.com
wrote:

Hi Yoshiki, I've merged the request. But there's still work to do for
64-bits. The error is to do with the Objective-C GC policy on 64-bits,
which differs from the 32-bit system. I suggest you talk with John McIntosh
to understand what's needed. Here's the error when I include CameraPlugin
in build.macos64x64/squeak.cog.spur/plugins.ext
pcrePtr = (sqInt) pcre_compile(patternStrPtr, compileFlags, &errorStrBuffer, &errorOffset, NULL);

../../platforms/iOS/plugins/CameraPlugin/AVFoundationVideoGrabber.m:124:21:
error: 'autorelease' is unavailable: not available in automatic reference
counting mode
../../platforms/iOS/plugins/CameraPlugin/AVFoundationVideoGrabber.m:124:21:
error: ARC forbids explicit message send of 'autorelease'
3 warnings and 2 errors generated.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#26 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AAMCgZ0UYOBrgp21HxthvGVW_ALOwustks5qVsyrgaJpZM4JKm8h
.


-- Yoshiki",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/yoshikiohshima,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-233015831,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","In any case I pushed a simple change to my forks branch called osxCamera2.
With this change, at least it compiles in build.macos32x86/squeak.cog.spur
and
build.macos64x64/squeak.cog.spur . At this moment I am confused with git
and cannot make a sane pull request...
On Thu, Jul 14, 2016 at 6:36 PM, Yoshiki Ohshima Yoshiki.Ohshima@acm.org
wrote:

I should have tested it.  Line 104 of
#define IOS 0
is supposed to prevent the compiler to see line 124:
[captureSession autorelease];
but we'd better have a different check.  I might not be able to get around
testing things at least until the 26th, but if anybody can test it, that is
great.
On Thu, Jul 14, 2016 at 4:56 PM, Eliot Miranda notifications@github.com
wrote:

Hi Yoshiki, I've merged the request. But there's still work to do for
64-bits. The error is to do with the Objective-C GC policy on 64-bits,
which differs from the 32-bit system. I suggest you talk with John McIntosh
to understand what's needed. Here's the error when I include CameraPlugin
in build.macos64x64/squeak.cog.spur/plugins.ext
pcrePtr = (sqInt) pcre_compile(patternStrPtr, compileFlags, &errorStrBuffer, &errorOffset, NULL);

../../platforms/iOS/plugins/CameraPlugin/AVFoundationVideoGrabber.m:124:21:
error: 'autorelease' is unavailable: not available in automatic reference
counting mode
../../platforms/iOS/plugins/CameraPlugin/AVFoundationVideoGrabber.m:124:21:
error: ARC forbids explicit message send of 'autorelease'
3 warnings and 2 errors generated.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#26 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AAMCgZ0UYOBrgp21HxthvGVW_ALOwustks5qVsyrgaJpZM4JKm8h
.


-- Yoshiki


-- Yoshiki",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/johnmci,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-233027424,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","You need to specify
AUTORELEASEOBJ(captureSession)
However it might not be that simple because I""m not sure if the FFI call is wrapped in an autorelease pool. Otherwise we would have the behaviour of leaking any autorelease objects. Normally you trigger some sort of UI event, but the entire UI Event processing is wrapped in a autorelease pool so once the event complete, or your GCD tasks completes (wrapped with autorelease pool) memory is cleaned up. However I'm not sure this applies here.
These macros are defined elsewhere
#if __has_feature(objc_arc)
#define RELEASEOBJ(x)
#define RETAINOBJ(x)
#define AUTORELEASEOBJ(x) x
#define SUPERDEALLOC
#else
#define RELEASEOBJ(x) [x release]
#define RETAINOBJ(x) [x retain]
#define AUTORELEASEOBJ(x) [x autorelease]
#define SUPERDEALLOC [super dealloc];
#endif",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/yoshikiohshima,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-233081260,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","Thanks.  We don't need memory management there as there won't be any complicated data structure allocated nor stored.  As I wrote I pushed change that simply change if a couple of if statements to  #if. Please review it...
-- Yoshiki

On Jul 15, 2016, at 1:15 PM, johnmci notifications@github.com wrote:
You need to specify
AUTORELEASEOBJ(captureSession)
However it might not be that simple because I""m not sure if the FFI call is wrapped in an autorelease pool. Otherwise we would have the behaviour of leaking any autorelease objects. Normally you trigger some sort of UI event, but the entire UI Event processing is wrapped in a autorelease pool so once the event complete, or your GCD tasks completes (wrapped with autorelease pool) memory is cleaned up. However I'm not sure this applies here.
These macros are defined elsewhere
#if __has_feature(objc_arc)
#define RELEASEOBJ(x)
#define RETAINOBJ(x)
#define AUTORELEASEOBJ(x) x
#define SUPERDEALLOC
#else
#define RELEASEOBJ(x) [x release]
#define RETAINOBJ(x) [x retain]
#define AUTORELEASEOBJ(x) [x autorelease]
#define SUPERDEALLOC [super dealloc];
#endif
―
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/johnmci,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-233093684,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","Ok, let me adjust a few things, do you have an image/change set you can send me and some instructions to enable testing",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,26,2016-07-12T17:08:00Z,2016-07-14T23:51:39Z,2016-07-16T11:51:26Z,MERGED,True,287,0,4,https://github.com/yoshikiohshima,add the CameraPlugin support for Mac OS.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26,https://github.com/yoshikiohshima,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/26#issuecomment-233126826,"The initial version of CameraPlugin support code for Mac OS and iOS.  Several years ago, there was a functionally similar code written by John Maloney for the Scratch project, but as Apple obsoletes APIs rapidly, the code is two generations old and does not compile on a modern version of Mac OS.
This version of CameraPlugin support code uses the latest version of Audio Visual API called AVFoundation.  The main part of code is taken from the equivalent code from openFramework, which is released under the MIT license.
While the code should work with minimum changes for the iOS devices, it has not been done and tested yet.","The simple test that Javier forwarded to the vm-dev should work:
http://lists.squeakfoundation.org/pipermail/vm-dev/2016-July/022575.html
(A bit add to have test code in a plugin code but anyway)
Fix the #waitMSecs: message to (Delay forMilliseconds: 50) wait.  and then
CameraPlugin videoTest should work.
On Fri, Jul 15, 2016 at 4:45 PM, johnmci notifications@github.com wrote:

Ok, let me adjust a few things, do you have an image/change set you can
send me and some instructions to enable testing
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#26 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AAMCgYoFd_zAVLGG0bUgprnG3Ai9ZiU3ks5qWBuCgaJpZM4JKm8h
.


-- Yoshiki",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,27,2016-07-14T21:50:06Z,2016-07-14T22:59:49Z,2016-07-14T23:00:13Z,MERGED,True,20,8,1,https://github.com/eliotmiranda,"FileDirectory internal logic leaks memory, needs autorelease pool to …",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/27,https://github.com/eliotmiranda,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/27,…wrap the osx/ios logic,…wrap the osx/ios logic,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,28,2016-07-14T22:57:32Z,2016-07-15T00:08:41Z,2016-07-15T00:08:42Z,MERGED,True,18,8,2,https://github.com/Rydier,Respect NO_NETWORK setting when building window menu on Windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/28,https://github.com/Rydier,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/28,This enables building a VM without SocketPlugin in int or extplugins when NO_NETWORK is set.,This enables building a VM without SocketPlugin in int or extplugins when NO_NETWORK is set.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,29,2016-07-18T03:48:14Z,2016-07-20T06:09:53Z,2016-07-20T06:09:53Z,MERGED,True,7,13,1,https://github.com/dtlewis290,"Map X windows properly when opening or reopening the display, as requ…",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/29,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/29,…ired for #forkSqueak to open a new X display window for a child Squeak image.,…ired for #forkSqueak to open a new X display window for a child Squeak image.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,29,2016-07-18T03:48:14Z,2016-07-20T06:09:53Z,2016-07-20T06:09:53Z,MERGED,True,7,13,1,https://github.com/dtlewis290,"Map X windows properly when opening or reopening the display, as requ…",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/29,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/29#issuecomment-233270951,…ired for #forkSqueak to open a new X display window for a child Squeak image.,"I had to restart two builds which failed because of some unrelated problem, now everything's green.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,29,2016-07-18T03:48:14Z,2016-07-20T06:09:53Z,2016-07-20T06:09:53Z,MERGED,True,7,13,1,https://github.com/dtlewis290,"Map X windows properly when opening or reopening the display, as requ…",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/29,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/29#issuecomment-233846970,…ired for #forkSqueak to open a new X display window for a child Squeak image.,Looks good to me.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,30,2016-07-18T08:13:25Z,2016-07-18T08:29:13Z,2016-07-18T08:38:23Z,MERGED,True,6,6,1,https://github.com/yoshikiohshima,fix the iOS check from if to #if.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30,https://github.com/yoshikiohshima,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30,"For 64 bit VM, #if out some use of the auto release feature.","For 64 bit VM, #if out some use of the auto release feature.",True,{'THUMBS_UP': ['https://github.com/fniephaus']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,30,2016-07-18T08:13:25Z,2016-07-18T08:29:13Z,2016-07-18T08:38:23Z,MERGED,True,6,6,1,https://github.com/yoshikiohshima,fix the iOS check from if to #if.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30#issuecomment-233267872,"For 64 bit VM, #if out some use of the auto release feature.",This is a follow up on #26.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,30,2016-07-18T08:13:25Z,2016-07-18T08:29:13Z,2016-07-18T08:38:23Z,MERGED,True,6,6,1,https://github.com/yoshikiohshima,fix the iOS check from if to #if.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30,https://github.com/yoshikiohshima,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30#issuecomment-233269392,"For 64 bit VM, #if out some use of the auto release feature.","Thank you Fabio for helping it in person!
On Mon, Jul 18, 2016 at 1:29 AM, Fabio Niephaus notifications@github.com
wrote:

Merged #30 #30.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#30 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AAMCgRRwf2SzAcaFM0PIP6ep3EmxhV-Sks5qWzlagaJpZM4JOfen
.


-- Yoshiki",True,{'LAUGH': ['https://github.com/fniephaus']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,30,2016-07-18T08:13:25Z,2016-07-18T08:29:13Z,2016-07-18T08:38:23Z,MERGED,True,6,6,1,https://github.com/yoshikiohshima,fix the iOS check from if to #if.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/30#issuecomment-233271491,"For 64 bit VM, #if out some use of the auto release feature.","No worries! BTW looks like there is something wrong with your fork's Cog branch which must have caused your problems:

Note that it's 15 commits ahead for some reason.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,31,2016-07-20T23:41:05Z,2016-07-21T15:24:55Z,2016-07-21T17:19:58Z,MERGED,True,148,162,10,https://github.com/nicolas-cellier-aka-nice,Revise the win32 makefiles for a modern cygwin,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/31,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/31,"Hacks in .travis_build.sh have been incorporated in the makefiles and can now be removed.
The toolchain config has been separated in its own file (Makefile.tools).
Note that the Bochs plugins production has not been tested by the author
It's also not yet tested by appveyor (the .travis_build.sh remove them from plugins.ext)","Hacks in .travis_build.sh have been incorporated in the makefiles and can now be removed.
The toolchain config has been separated in its own file (Makefile.tools).
Note that the Bochs plugins production has not been tested by the author
It's also not yet tested by appveyor (the .travis_build.sh remove them from plugins.ext)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,31,2016-07-20T23:41:05Z,2016-07-21T15:24:55Z,2016-07-21T17:19:58Z,MERGED,True,148,162,10,https://github.com/nicolas-cellier-aka-nice,Revise the win32 makefiles for a modern cygwin,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/31,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/31#issuecomment-234192757,"Hacks in .travis_build.sh have been incorporated in the makefiles and can now be removed.
The toolchain config has been separated in its own file (Makefile.tools).
Note that the Bochs plugins production has not been tested by the author
It's also not yet tested by appveyor (the .travis_build.sh remove them from plugins.ext)",LGTM,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,33,2016-07-25T00:26:53Z,2016-07-25T07:41:12Z,2016-07-25T07:41:15Z,MERGED,True,47,47,11,https://github.com/nicolas-cellier-aka-nice,Prefix the drag event types with SQ,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/33,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/33,"This is required for compatibility with MSVC (2015), otherwise there's a namespace conflict:

c:\program files (x86)\windows kits\8.1\include\um\oleidl.h(3541): error C2059: erreur de syntaxe : 'constant'

The offending code is:
    HRESULT ( STDMETHODCALLTYPE *DragEnter )(","This is required for compatibility with MSVC (2015), otherwise there's a namespace conflict:

c:\program files (x86)\windows kits\8.1\include\um\oleidl.h(3541): error C2059: erreur de syntaxe : 'constant'

The offending code is:
    HRESULT ( STDMETHODCALLTYPE *DragEnter )(",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,34,2016-07-25T22:17:52Z,2016-07-26T17:26:08Z,2016-07-26T18:06:19Z,MERGED,True,2487,2016,22,https://github.com/krono,Fixes for Windows,16,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34,"Highlights:

consistency,
compatibility,
Works better with MSVC","Highlights:

consistency,
compatibility,
Works better with MSVC",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,34,2016-07-25T22:17:52Z,2016-07-26T17:26:08Z,2016-07-26T18:06:19Z,MERGED,True,2487,2016,22,https://github.com/krono,Fixes for Windows,16,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34#issuecomment-235103648,"Highlights:

consistency,
compatibility,
Works better with MSVC",@nicolas-cellier-aka-nice Could you review?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,34,2016-07-25T22:17:52Z,2016-07-26T17:26:08Z,2016-07-26T18:06:19Z,MERGED,True,2487,2016,22,https://github.com/krono,Fixes for Windows,16,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34#issuecomment-235133737,"Highlights:

consistency,
compatibility,
Works better with MSVC","The only changes that I can hardly review is 82d1c33 , which should have been split into smaller parts. But I'm not much an expert of WINAPI anyway...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,34,2016-07-25T22:17:52Z,2016-07-26T17:26:08Z,2016-07-26T18:06:19Z,MERGED,True,2487,2016,22,https://github.com/krono,Fixes for Windows,16,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34#issuecomment-235179995,"Highlights:

consistency,
compatibility,
Works better with MSVC","@nicolas-cellier-aka-nice Thanks for the review.
Regarding  82d1c33, the changes are so intertwined it was too hard to disentangle them...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,34,2016-07-25T22:17:52Z,2016-07-26T17:26:08Z,2016-07-26T18:06:19Z,MERGED,True,2487,2016,22,https://github.com/krono,Fixes for Windows,16,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/34#issuecomment-235354067,"Highlights:

consistency,
compatibility,
Works better with MSVC",\o/,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,38,2016-08-17T16:39:22Z,2016-08-17T17:26:55Z,2016-08-17T17:27:06Z,MERGED,True,12,12,12,https://github.com/lauraperezcerrato,Changed scripts so they are explicitly interpreted by bash and not the default shell,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/38,https://github.com/lauraperezcerrato,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/38,"Dash is the default shell for Debian and other Linux distributions, and it's unable to run most of the scripts provided to build a VMMaker trunk image.","Dash is the default shell for Debian and other Linux distributions, and it's unable to run most of the scripts provided to build a VMMaker trunk image.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,38,2016-08-17T16:39:22Z,2016-08-17T17:26:55Z,2016-08-17T17:27:06Z,MERGED,True,12,12,12,https://github.com/lauraperezcerrato,Changed scripts so they are explicitly interpreted by bash and not the default shell,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/38,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/38#issuecomment-240484634,"Dash is the default shell for Debian and other Linux distributions, and it's unable to run most of the scripts provided to build a VMMaker trunk image.",Thanks! 😃,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,44,2016-08-19T22:48:17Z,2016-09-25T18:16:24Z,2016-09-25T18:16:28Z,MERGED,True,21,0,21,https://github.com/fniephaus,Enable HostWindowPlugin for all supported Linux builds,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/44,https://github.com/fniephaus,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/44,"HostWindowPlugin for 64bit Linux builds is not (yet) implemented.
Related discussion: http://forum.world.st/HostWindowPlugin-for-Linux-td4911988.html
@timrowledge","HostWindowPlugin for 64bit Linux builds is not (yet) implemented.
Related discussion: http://forum.world.st/HostWindowPlugin-for-Linux-td4911988.html
@timrowledge",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,45,2016-08-29T15:55:18Z,2016-09-23T13:33:49Z,2016-09-23T13:33:49Z,MERGED,True,2,2,1,https://github.com/lauraperezcerrato,Modified the mechanism that validated the Display being a 'sane' object since it wans't appropriate for Spur's object format field,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/45,https://github.com/lauraperezcerrato,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/45,"For such validation to be correct, one would have to shift the displayObject oop 24 bits, not 8 (see SpurMemoryManager>>#formatShift) but displayObject() is called and its result is used without validation on other parts of the codebase, so it seems simpler to get rid of it altogether.","For such validation to be correct, one would have to shift the displayObject oop 24 bits, not 8 (see SpurMemoryManager>>#formatShift) but displayObject() is called and its result is used without validation on other parts of the codebase, so it seems simpler to get rid of it altogether.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,45,2016-08-29T15:55:18Z,2016-09-23T13:33:49Z,2016-09-23T13:33:49Z,MERGED,True,2,2,1,https://github.com/lauraperezcerrato,Modified the mechanism that validated the Display being a 'sane' object since it wans't appropriate for Spur's object format field,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/45,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/45#issuecomment-243688708,"For such validation to be correct, one would have to shift the displayObject oop 24 bits, not 8 (see SpurMemoryManager>>#formatShift) but displayObject() is called and its result is used without validation on other parts of the codebase, so it seems simpler to get rid of it altogether.","The file should use isPointers from sqVirtualMachine.h.  Look at e.g.
$ egrep ""VirtualMachine|interpreterProxy"" platforms/unix/vm-display-X11/sqUnixOp
enGL.X11
#include ""sqVirtualMachine.h""
extern struct VirtualMachine *interpreterProxy;
fn= interpreterProxy->ioLoadFunctionFrom(""ioGetDisplay"", NULL);
fn= interpreterProxy->ioLoadFunctionFrom(""ioGetWindow"", NULL);
So change
static void redrawDisplay(int l, int r, int t, int b)
{
extern sqInt displayObject(void);
extern sqInt lengthOf(sqInt);
extern sqInt fetchPointerofObject(sqInt, sqInt);
sqInt displayObj= displayObject();
if ((((((unsigned)(oopAt(displayObj))) >> 8) & 15) <= 4)
&& ((lengthOf(displayObj)) >= 4))
{
to
static void redrawDisplay(int l, int r, int t, int b)
{
extern sqInt displayObject(void);
extern sqInt isPointers(sqInt);
extern sqInt lengthOf(sqInt);
extern sqInt fetchPointerofObject(sqInt, sqInt);
sqInt displayObj= displayObject();
if (isPointers(displayObj) && lengthOf(displayObj) >= 4)
{
More correctly it would call these functions through interpreterProxy, but the style above is faster.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,45,2016-08-29T15:55:18Z,2016-09-23T13:33:49Z,2016-09-23T13:33:49Z,MERGED,True,2,2,1,https://github.com/lauraperezcerrato,Modified the mechanism that validated the Display being a 'sane' object since it wans't appropriate for Spur's object format field,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/45,https://github.com/lauraperezcerrato,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/45#issuecomment-243775847,"For such validation to be correct, one would have to shift the displayObject oop 24 bits, not 8 (see SpurMemoryManager>>#formatShift) but displayObject() is called and its result is used without validation on other parts of the codebase, so it seems simpler to get rid of it altogether.",Thanks for the clarification!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,46,2016-09-05T14:16:34Z,2016-09-05T14:17:19Z,2016-09-08T17:37:27Z,CLOSED,False,32,2,3,https://github.com/lauraperezcerrato,Added quicksort implementation to allow sorting FloatArrays via primitive,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46,https://github.com/lauraperezcerrato,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,46,2016-09-05T14:16:34Z,2016-09-05T14:17:19Z,2016-09-08T17:37:27Z,CLOSED,False,32,2,3,https://github.com/lauraperezcerrato,Added quicksort implementation to allow sorting FloatArrays via primitive,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46,https://github.com/lauraperezcerrato,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46#issuecomment-244757731,,Tyding history and submitting again afterwards,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,46,2016-09-05T14:16:34Z,2016-09-05T14:17:19Z,2016-09-08T17:37:27Z,CLOSED,False,32,2,3,https://github.com/lauraperezcerrato,Added quicksort implementation to allow sorting FloatArrays via primitive,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46,https://github.com/StephanEggermont,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46#issuecomment-244801734,,"This quicksort can run out of stack space, and will be very slow with an already sorted array.
You might want to consider doing median of three pivot selection, switching to insertion sort for small subarrays (<10 or so) and  sorting smallest subarray first",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,46,2016-09-05T14:16:34Z,2016-09-05T14:17:19Z,2016-09-08T17:37:27Z,CLOSED,False,32,2,3,https://github.com/lauraperezcerrato,Added quicksort implementation to allow sorting FloatArrays via primitive,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46,https://github.com/lauraperezcerrato,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/46#issuecomment-245677149,,"Added a few of the suggested improvements, let's folow the discussion on the updated pull request #47",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,47,2016-09-05T15:30:48Z,2017-02-15T18:15:27Z,2017-02-15T18:15:27Z,CLOSED,False,97,0,2,https://github.com/lauraperezcerrato,Implementation of quicksort such as to sort FloatArrays faster using primitives,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/47,https://github.com/lauraperezcerrato,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/47,I'd like to merge the C code before pushing the primitive implementation to VMMaker,I'd like to merge the C code before pushing the primitive implementation to VMMaker,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,47,2016-09-05T15:30:48Z,2017-02-15T18:15:27Z,2017-02-15T18:15:27Z,CLOSED,False,97,0,2,https://github.com/lauraperezcerrato,Implementation of quicksort such as to sort FloatArrays faster using primitives,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/47,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/47#issuecomment-253975547,I'd like to merge the C code before pushing the primitive implementation to VMMaker,"Apart from the small technical detail already commented, I don't think that fast sort is the job of the FloatArrayPlugin, but rather the Image's or the JIT's responsibility.
Also, that would avoid subtile semantic deviation.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,48,2016-09-07T12:19:53Z,2016-09-07T14:38:46Z,2016-09-07T14:38:46Z,MERGED,True,3,1,1,https://github.com/ccrraaiigg,update tryLoadingBundle() for macOS Sierra,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/48,https://github.com/ccrraaiigg,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/48,"Update sqMacUnixExternalPrims.m:tryLoadingBundle() for macOS Sierra, to accommodate the fact that stringByAppendingPathExtension no longer allows slashes.","Update sqMacUnixExternalPrims.m:tryLoadingBundle() for macOS Sierra, to accommodate the fact that stringByAppendingPathExtension no longer allows slashes.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,51,2016-09-08T17:29:33Z,2016-09-27T23:46:37Z,2016-09-27T23:46:37Z,MERGED,True,6336,0,6,https://github.com/ronsaldo,VM support changes required by the LowcodeVM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/51,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/51,"These are the changes in the support sources that are required by the LowcodeVM.
I am also putting a copy of the full XML based specification of the Lowcode instruction set that is used to generate the StackInterpreter and Cogit implementation of the instructions.
The Lowcode SmalltalkHub project ( http://smalltalkhub.com/#!/~ronsaldo/Lowcode ) contains the generator scripts.
To generate the implementations of the Lowcode instructions to the StackInterpreter and the Cogit, the following script can be used:
LowcodeCogitGenerator generateFromFileNamed: 'lowcode.xml' to: 'LowcodeCog.st'
To generate the IRLowcodeBuilder (extended OpalCompiler IRBuilder) generation methods, the following script can be used:
LowcodeOpalCompilerGenerator generateFromFileNamed: 'lowcode.xml'.
For generating the x86 assembly for testing, I am using a script like the following one:
compilationContext := CompilationContext new encoderClass: OpalEncoderForSistaV1.
ir := IRLowcodeBuilder buildIR: [ :builder |
builder compilationContext: compilationContext.
builder
numArgs: 0;
addTemps: #(lowcodeFrameMark __lowcodePreviousNativeStackPointer lowcodeNativeFramePointer lowcodeNativeStackPointer lowcodeCalloutState);
    lowcodePushOneFloat32;
    lowcodeDuplicateFloat32;
    lowcodeFloat32Add;
    lowcodeFloat32ToOop;
    returnTop

].
method := ir compiledMethod.
method setSignFlag.
method setFrameBit: true.
StackToRegisterMappingCogit genAndDis: method options: #(
SistaVM true
LowcodeVM true
MULTIPLEBYTECODESETS true
bytecodeTableInitializer initializeBytecodeTableForSqueakV3PlusClosuresSistaV1Hybrid
ObjectMemory Spur32BitCoMemoryManager
FailImbalancedPrimitives false
ISA IA32).
The first instruction of a method that uses Lowcode must be localFrameSize: . This instructions builds
a stack frame that is used for primitive local variables, the secondary native stack, and it is never inspected by the GC. A Lowcode native stack frame is always pinned.
For tracking the presence of a native stack frame, and the necesity of cleaning the native stack frame when returning from a method, the temporary is used as flag by putting a special object that is compared by identity. I used this approach because I did not find any available bit in the stack frame for putting this flag. It also has the advantage of giving room for implementing a mechanism for native stack context mapping, by replacing this mark object with an object that represents a stack frame that should not be cleaned up on method return, and to avoid the overhead of allocating a complete object on the start of a Lowcode method.
For doing callout from the StackInterpreter, the lowcodeCalloutState is used by the interpreter. The StackInterpreter cannot use the normal C stack immediately because it pushes a big pressure in the C compiler. The Cogit version just uses the C stack for the callouts.","These are the changes in the support sources that are required by the LowcodeVM.
I am also putting a copy of the full XML based specification of the Lowcode instruction set that is used to generate the StackInterpreter and Cogit implementation of the instructions.
The Lowcode SmalltalkHub project ( http://smalltalkhub.com/#!/~ronsaldo/Lowcode ) contains the generator scripts.
To generate the implementations of the Lowcode instructions to the StackInterpreter and the Cogit, the following script can be used:
LowcodeCogitGenerator generateFromFileNamed: 'lowcode.xml' to: 'LowcodeCog.st'
To generate the IRLowcodeBuilder (extended OpalCompiler IRBuilder) generation methods, the following script can be used:
LowcodeOpalCompilerGenerator generateFromFileNamed: 'lowcode.xml'.
For generating the x86 assembly for testing, I am using a script like the following one:
compilationContext := CompilationContext new encoderClass: OpalEncoderForSistaV1.
ir := IRLowcodeBuilder buildIR: [ :builder |
builder compilationContext: compilationContext.
builder
numArgs: 0;
addTemps: #(lowcodeFrameMark __lowcodePreviousNativeStackPointer lowcodeNativeFramePointer lowcodeNativeStackPointer lowcodeCalloutState);
    lowcodePushOneFloat32;
    lowcodeDuplicateFloat32;
    lowcodeFloat32Add;
    lowcodeFloat32ToOop;
    returnTop

].
method := ir compiledMethod.
method setSignFlag.
method setFrameBit: true.
StackToRegisterMappingCogit genAndDis: method options: #(
SistaVM true
LowcodeVM true
MULTIPLEBYTECODESETS true
bytecodeTableInitializer initializeBytecodeTableForSqueakV3PlusClosuresSistaV1Hybrid
ObjectMemory Spur32BitCoMemoryManager
FailImbalancedPrimitives false
ISA IA32).
The first instruction of a method that uses Lowcode must be localFrameSize: . This instructions builds
a stack frame that is used for primitive local variables, the secondary native stack, and it is never inspected by the GC. A Lowcode native stack frame is always pinned.
For tracking the presence of a native stack frame, and the necesity of cleaning the native stack frame when returning from a method, the temporary is used as flag by putting a special object that is compared by identity. I used this approach because I did not find any available bit in the stack frame for putting this flag. It also has the advantage of giving room for implementing a mechanism for native stack context mapping, by replacing this mark object with an object that represents a stack frame that should not be cleaned up on method return, and to avoid the overhead of allocating a complete object on the start of a Lowcode method.
For doing callout from the StackInterpreter, the lowcodeCalloutState is used by the interpreter. The StackInterpreter cannot use the normal C stack immediately because it pushes a big pressure in the C compiler. The Cogit version just uses the C stack for the callouts.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,52,2016-09-12T11:23:01Z,2016-09-12T12:33:42Z,2016-09-12T16:10:56Z,CLOSED,False,568300,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits,41,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/52,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/52,"So... this is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch

they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come



So, I hope this does not break anything... After this I will move to merge linux branches.","So... this is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch

they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come



So, I hope this does not break anything... After this I will move to merge linux branches.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,52,2016-09-12T11:23:01Z,2016-09-12T12:33:42Z,2016-09-12T16:10:56Z,CLOSED,False,568300,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits,41,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/52,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/52#issuecomment-246333215,"So... this is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch

they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come



So, I hope this does not break anything... After this I will move to merge linux branches.","mmm... it breaks something in squeak (weird, I was sure I didn't change anything)
I will retract and review.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,53,2016-09-12T17:29:49Z,2016-09-13T11:40:12Z,2016-09-13T11:40:12Z,CLOSED,False,568302,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (2nd attempt),43,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,"So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,53,2016-09-12T17:29:49Z,2016-09-13T11:40:12Z,2016-09-13T11:40:12Z,CLOSED,False,568302,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (2nd attempt),43,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53#issuecomment-246432963,"So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","Sorry, but 40KLOC are way to much to be able to review… I can't even see the whole diff on GitHub.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,53,2016-09-12T17:29:49Z,2016-09-13T11:40:12Z,2016-09-13T11:40:12Z,CLOSED,False,568302,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (2nd attempt),43,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53#issuecomment-246448955,"So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","well, there are not so many, the problem is that I needed to commit pharosrc and pharo64src branches, because we need other generated sources…
but besides this, they are just a bunch of changes…

On 12 Sep 2016, at 19:53, Tobias Pape notifications@github.com wrote:
Sorry, but 40KLOC are way to much to be able to review… I can't even see the whole diff on GitHub.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #53 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AAfWXvCi9_LZlXCC9IHGQnbGX-FBYV96ks5qpZGIgaJpZM4J61Et.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,53,2016-09-12T17:29:49Z,2016-09-13T11:40:12Z,2016-09-13T11:40:12Z,CLOSED,False,568302,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (2nd attempt),43,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53#issuecomment-246450152,"So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","On 12.09.2016, at 20:42, Esteban Lorenzano notifications@github.com wrote:

well, there are not so many, the problem is that I needed to commit pharosrc and pharo64src branches, because we need other generated sources�
but besides this, they are just a bunch of changes�

Would it be possible to group them into 3 different PRs?


On 12 Sep 2016, at 19:53, Tobias Pape notifications@github.com wrote:
Sorry, but 40KLOC are way to much to be able to review� I can't even see the whole diff on GitHub.
�
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #53 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AAfWXvCi9_LZlXCC9IHGQnbGX-FBYV96ks5qpZGIgaJpZM4J61Et.

�
You are receiving this because you commented.
Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,53,2016-09-12T17:29:49Z,2016-09-13T11:40:12Z,2016-09-13T11:40:12Z,CLOSED,False,568302,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (2nd attempt),43,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,https://github.com/estebanlm,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53#issuecomment-246451675,"So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","On 12 Sep 2016, at 20:46, Tobias Pape notifications@github.com wrote:
On 12.09.2016, at 20:42, Esteban Lorenzano notifications@github.com wrote:

well, there are not so many, the problem is that I needed to commit pharosrc and pharo64src branches, because we need other generated sources�
but besides this, they are just a bunch of changes�

Would it be possible to group them into 3 different PRs?

don’t think so… but I can split on:

pharosrc/pharo64src (they are generated by VMMaker so they can be accepted without review)
the rest (this is really not much… I restrained them into the minimum… I will need to add more changes later, but this will build an usable VM for Pharo in mac)




On 12 Sep 2016, at 19:53, Tobias Pape notifications@github.com wrote:
Sorry, but 40KLOC are way to much to be able to review� I can't even see the whole diff on GitHub.
�
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #53 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AAfWXvCi9_LZlXCC9IHGQnbGX-FBYV96ks5qpZGIgaJpZM4J61Et.

�
You are receiving this because you commented.
Reply to this email directly, view it on GitHub, or mute the thread.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #53 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AAfWXqV_8-uJLalk2CintyDmZuIVzt-3ks5qpZ4OgaJpZM4J61Et.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,53,2016-09-12T17:29:49Z,2016-09-13T11:40:12Z,2016-09-13T11:40:12Z,CLOSED,False,568302,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (2nd attempt),43,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,https://github.com/krono,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53#issuecomment-246454791,"So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","On 12.09.2016, at 20:51, Esteban Lorenzano notifications@github.com wrote:


On 12 Sep 2016, at 20:46, Tobias Pape notifications@github.com wrote:
On 12.09.2016, at 20:42, Esteban Lorenzano notifications@github.com wrote:

well, there are not so many, the problem is that I needed to commit pharosrc and pharo64src branches, because we need other generated sources�
but besides this, they are just a bunch of changes�

Would it be possible to group them into 3 different PRs?

don’t think so… but I can split on:

pharosrc/pharo64src (they are generated by VMMaker so they can be accepted without review)
the rest (this is really not much… I restrained them into the minimum… I will need to add more changes later, but this will build an usable VM for Pharo in mac)


That's what I meant ;)




On 12 Sep 2016, at 19:53, Tobias Pape notifications@github.com wrote:
Sorry, but 40KLOC are way to much to be able to review� I can't even see the whole diff on GitHub.
�
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #53 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AAfWXvCi9_LZlXCC9IHGQnbGX-FBYV96ks5qpZGIgaJpZM4J61Et.

�
You are receiving this because you commented.
Reply to this email directly, view it on GitHub, or mute the thread.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #53 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AAfWXqV_8-uJLalk2CintyDmZuIVzt-3ks5qpZ4OgaJpZM4J61Et.

—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,53,2016-09-12T17:29:49Z,2016-09-13T11:40:12Z,2016-09-13T11:40:12Z,CLOSED,False,568302,204,202,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (2nd attempt),43,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53,https://github.com/estebanlm,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/53#issuecomment-246654714,"So... this is a first HUGE change :)
This change includes (not limited to):
Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch
they should all be correctly delimited with PharoVM definition
it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.",retracting this to split in parts,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,54,2016-09-13T11:48:53Z,2016-09-13T12:29:31Z,2016-09-13T12:29:31Z,MERGED,True,566697,0,122,https://github.com/estebanlm,Pharo sources as per VMMaker.oscog-eem.1950,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/54,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/54,VMMaker generated files (should work fine),VMMaker generated files (should work fine),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,55,2016-09-13T13:28:00Z,2016-09-15T11:23:12Z,2016-09-15T11:23:12Z,MERGED,True,1600,201,80,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (3rd attempt),49,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55,"Well.. let's see how this goes. Message is same as other attempts:
This is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch (they should all be correctly delimited with PharoVM definition)

it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","Well.. let's see how this goes. Message is same as other attempts:
This is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch (they should all be correctly delimited with PharoVM definition)

it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,55,2016-09-13T13:28:00Z,2016-09-15T11:23:12Z,2016-09-15T11:23:12Z,MERGED,True,1600,201,80,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (3rd attempt),49,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55#issuecomment-246977014,"Well.. let's see how this goes. Message is same as other attempts:
This is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch (they should all be correctly delimited with PharoVM definition)

it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.",so... any observations with this? Can we accept it so I can move on?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,55,2016-09-13T13:28:00Z,2016-09-15T11:23:12Z,2016-09-15T11:23:12Z,MERGED,True,1600,201,80,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (3rd attempt),49,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55#issuecomment-246989675,"Well.. let's see how this goes. Message is same as other attempts:
This is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch (they should all be correctly delimited with PharoVM definition)

it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.",I'm good with this.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,55,2016-09-13T13:28:00Z,2016-09-15T11:23:12Z,2016-09-15T11:23:12Z,MERGED,True,1600,201,80,https://github.com/estebanlm,Merge with Pharo (1). OSX 32/64 bits (3rd attempt),49,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55,https://github.com/estebanlm,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/55#issuecomment-247302174,"Well.. let's see how this goes. Message is same as other attempts:
This is a first HUGE change :)
This change includes (not limited to):

Correct Makefiles for building build.macos32x86/pharo.cog.spur
Correct Makefiles for building build.macos64x64/pharo.cog.spur
Merge back some platform files from Pharo branch (they should all be correctly delimited with PharoVM definition)

it is not finished, more changes will come
So, I hope this does not break anything... After this I will move to merge linux branches.","ok, no complain = merge! :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,56,2016-09-20T15:21:09Z,2016-09-20T18:10:38Z,2016-09-20T18:10:39Z,CLOSED,False,32859,589242,184,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins)",6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/56,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/56,"best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,56,2016-09-20T15:21:09Z,2016-09-20T18:10:38Z,2016-09-20T18:10:39Z,CLOSED,False,32859,589242,184,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins)",6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/56,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/56#issuecomment-248335085,"best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","yes, lots of file changes but this is just the generation of sources for  and removal of others :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,56,2016-09-20T15:21:09Z,2016-09-20T18:10:38Z,2016-09-20T18:10:39Z,CLOSED,False,32859,589242,184,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins)",6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/56,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/56#issuecomment-248384506,"best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","wow, I really screw this :)
Something with the FilePlugin... I will retract and retry later.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,58,2016-09-21T12:24:58Z,2016-09-21T13:59:34Z,2016-09-22T01:07:02Z,MERGED,True,32972,589433,186,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins) ",8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58,"2nd attempt :)
(eventually I will finish all this integrations and PRs will be smaller)

best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","2nd attempt :)
(eventually I will finish all this integrations and PRs will be smaller)

best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,58,2016-09-21T12:24:58Z,2016-09-21T13:59:34Z,2016-09-22T01:07:02Z,MERGED,True,32972,589433,186,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins) ",8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58#issuecomment-248660184,"2nd attempt :)
(eventually I will finish all this integrations and PRs will be smaller)

best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","As a rule of thumb, if ever github interface displays
""Sorry, we could not display the entire diff because it was too big. ""
then a review of the changes will hardly be possible at all",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,58,2016-09-21T12:24:58Z,2016-09-21T13:59:34Z,2016-09-22T01:07:02Z,MERGED,True,32972,589433,186,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins) ",8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58#issuecomment-248663552,"2nd attempt :)
(eventually I will finish all this integrations and PRs will be smaller)

best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","I know, but here is not necessary.
I just removed pharosrc/pharo64src and generate sources from VMMaker
(and redirect makefiles to here)
no need to review anything :)
Esteban

On 21 Sep 2016, at 18:06, Nicolas Cellier notifications@github.com wrote:
As a rule of thumb, if ever github interface displays
""Sorry, we could not display the entire diff because it was too big. ""
then a review of the changes will hardly be possible at all
—
You are receiving this because you modified the open/close state.
Reply to this email directly, view it on GitHub #58 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/AAfWXi7Uu5x8zoklO2kHa_jFZ-q6Sa8Wks5qsVYHgaJpZM4KCvLk.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,58,2016-09-21T12:24:58Z,2016-09-21T13:59:34Z,2016-09-22T01:07:02Z,MERGED,True,32972,589433,186,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins) ",8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58#issuecomment-248671094,"2nd attempt :)
(eventually I will finish all this integrations and PRs will be smaller)

best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","OK, A=Added D=Deleted M=Modified, it's just that I don't know what the I status mean?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,58,2016-09-21T12:24:58Z,2016-09-21T13:59:34Z,2016-09-22T01:07:02Z,MERGED,True,32972,589433,186,https://github.com/estebanlm,"Make Pharo use ""standard"" sources (spursrc, spur64src and src/plugins) ",8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/58#issuecomment-248786498,"2nd attempt :)
(eventually I will finish all this integrations and PRs will be smaller)

best than needing a regeneration each time (for osvm... we still make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src","Great news, Esteban.  Thanks!!
On Wed, Sep 21, 2016 at 5:24 AM, Esteban Lorenzano <notifications@github.com

wrote:
2nd attempt :)
(eventually I will finish all this integrations and PRs will be smaller)

best than needing a regeneration each time (for osvm... we still
make the generation but we don't care :P)
so we can remove (and we do it) pharosrc and pharo64src


You can view, comment on, or merge this pull request online at:
#58
Commit Summary

[snip]
,,,^..^,,,
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,62,2016-09-23T12:17:30Z,2016-09-23T13:33:14Z,2016-09-23T13:33:14Z,MERGED,True,241,0,10,https://github.com/estebanlm,add PharoVM ARMv6,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/62,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/62,"so, that... adding makefiles and travis to build the pharovm on ARMv6... it should work :)","so, that... adding makefiles and travis to build the pharovm on ARMv6... it should work :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,63,2016-09-24T08:17:18Z,2017-08-31T21:09:09Z,2017-09-01T21:54:25Z,CLOSED,False,1,5,1,https://github.com/zecke,FilePlugin: Remove misleading check for end of line,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63,"When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.","When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,63,2016-09-24T08:17:18Z,2017-08-31T21:09:09Z,2017-09-01T21:54:25Z,CLOSED,False,1,5,1,https://github.com/zecke,FilePlugin: Remove misleading check for end of line,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63#issuecomment-326421315,"When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.","For some reason, this PR was duplicated in #64",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,63,2016-09-24T08:17:18Z,2017-08-31T21:09:09Z,2017-09-01T21:54:25Z,CLOSED,False,1,5,1,https://github.com/zecke,FilePlugin: Remove misleading check for end of line,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63,https://github.com/zecke,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63#issuecomment-326489996,"When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.","Not duplicate but different branch. The README.md made me think that this should be updated too.
contains run-time and build-time support for various plugins.  The following
directories are subtrees that are shared with the old Squeak interpreter source:

 - platforms/Cross/plugins
   - https://github.com/OpenSmalltalk/vm/tree/platform/Cross/plugins",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,63,2016-09-24T08:17:18Z,2017-08-31T21:09:09Z,2017-09-01T21:54:25Z,CLOSED,False,1,5,1,https://github.com/zecke,FilePlugin: Remove misleading check for end of line,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/63#issuecomment-326691855,"When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.","Ah OK, I see it now.
This branch is abandon-ware, there haven't been a single commit here since svn -> git move...
So I think it's reasonable to close this PR.
If ever legacy interpreter is revived on git, there will be another way than thru a way behind branch...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,64,2016-09-24T08:19:47Z,2017-08-31T21:07:57Z,2017-08-31T21:07:57Z,MERGED,True,1,5,1,https://github.com/zecke,FilePlugin: Remove misleading check for end of line,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/64,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/64,"When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.","When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,64,2016-09-24T08:19:47Z,2017-08-31T21:07:57Z,2017-08-31T21:07:57Z,MERGED,True,1,5,1,https://github.com/zecke,FilePlugin: Remove misleading check for end of line,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/64,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/64#issuecomment-262235619,"When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.","👍 These changes are correct.
However, reading the mailing list thread, it seems that the intention was to read more than 1 character eventually, up to end of line (the primitive should read up to count characters).
http://lists.squeakfoundation.org/pipermail/vm-dev/2016-September/023232.html
So if we remove the cr/lf hack which is quite useless now, we also erase the intention...
Is it possible to open an issue so that we can come back to it later?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,64,2016-09-24T08:19:47Z,2017-08-31T21:07:57Z,2017-08-31T21:07:57Z,MERGED,True,1,5,1,https://github.com/zecke,FilePlugin: Remove misleading check for end of line,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/64,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/64#issuecomment-326420415,"When operating on stdin sqFileReadIntoAt will read one zero or one
byte from the FILE*. The loop will exit when bytesRead is not zero
and this will happen when a character was read. There is no reason
to exit the loop differently for \r or \n.","Compliantly to my own request, I opened #150, so that we do not forget why the cr/lf scanning was here.
It would be cool to get a little more contribution when the integrators emit such request, otherwise the PR might be rotting for so looong (10 month already is like an eternity).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,66,2016-09-27T15:53:26Z,2016-09-27T19:40:35Z,2016-09-27T19:40:35Z,MERGED,True,485,38,33,https://github.com/estebanlm,cache of third-party libraries and linux build (1st step),6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/66,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/66,"I added caching to the third-party libraries because is not good to download all the archives each time I do a clean up.
Also, I added some build makefiles needed for pharo linux build.","I added caching to the third-party libraries because is not good to download all the archives each time I do a clean up.
Also, I added some build makefiles needed for pharo linux build.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,67,2016-09-27T20:18:12Z,2016-09-27T20:18:26Z,2016-09-29T19:33:40Z,MERGED,True,64,0,1,https://github.com/estebanlm,added prepare-rpi.sh with all pre-reqs to build an ARMv6,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/67,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/67,"This is a small script with all I need to install to actually compile an ARMv6 VM.
It requires Ubuntu 14.04 LTS (no idea how it will work on other distributions)","This is a small script with all I need to install to actually compile an ARMv6 VM.
It requires Ubuntu 14.04 LTS (no idea how it will work on other distributions)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,67,2016-09-27T20:18:12Z,2016-09-27T20:18:26Z,2016-09-29T19:33:40Z,MERGED,True,64,0,1,https://github.com/estebanlm,added prepare-rpi.sh with all pre-reqs to build an ARMv6,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/67,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/67#issuecomment-249985620,"This is a small script with all I need to install to actually compile an ARMv6 VM.
It requires Ubuntu 14.04 LTS (no idea how it will work on other distributions)",auto-merge because is not a relevant change.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,67,2016-09-27T20:18:12Z,2016-09-27T20:18:26Z,2016-09-29T19:33:40Z,MERGED,True,64,0,1,https://github.com/estebanlm,added prepare-rpi.sh with all pre-reqs to build an ARMv6,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/67,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/67#issuecomment-250568192,"This is a small script with all I need to install to actually compile an ARMv6 VM.
It requires Ubuntu 14.04 LTS (no idea how it will work on other distributions)","Hi Esteban,
(skip to the bottom for the good news :-) )

when I try the install part of prepare.rpi.sh I get this:
sudo apt-get install -yq --no-install-suggests --no-install-recommends
--force-yes 
gcc-arm-linux-gnueabi 
gcc-arm-linux-gnueabihf 
qemu-system 
qemu-system-arm 
qemu-user 
qemu-user-static 
sbuild 
schroot 
scratchbox2 
debootstrap 
zlib1g:i386 
libstdc++6:i386 
libffi-dev:i386 
libffi6:i386 
libssl1.0.0:i386 
libbz2-1.0:i386 
libc6-dev-i386 
libc6:i386 
libexpat1:i386 
libtinfo5:i386 
binfmt-support 
build-essential 
python-dev 
libffi-dev 
zlib1g-dev
Reading package lists...
Building dependency tree...
Reading state information...
E: Unable to locate package gcc-arm-linux-gnueabi
E: Unable to locate package gcc-arm-linux-gnueabihf
E: Unable to locate package qemu-system-arm
E: Unable to locate package scratchbox2
E: Unable to locate package zlib1g
E: Unable to locate package libstdc++6
E: Couldn't find any package by regex 'libstdc++6'
E: Unable to locate package libffi-dev
E: Unable to locate package libffi6
E: Unable to locate package libssl1.0.0
E: Couldn't find any package by regex 'libssl1.0.0'
E: Unable to locate package libbz2-1.0
E: Couldn't find any package by regex 'libbz2-1.0'
E: Unable to locate package libc6-dev-i386
E: Unable to locate package libc6
E: Unable to locate package libexpat1
E: Unable to locate package libtinfo5
BTW, your chroot code inside prepare.rpi.sh is in terms of your username.
Perhaps you could pull that out into a parameterised script so you say, e.g.
prepare-rpi-chroot esteban

so that USER is an argument instead of being baked in.
Anyway, I can build the pharo VM, so a high thank you for that!
On Tue, Sep 27, 2016 at 1:18 PM, Esteban Lorenzano <notifications@github.com

wrote:
auto-merge because is not a relevant change.
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#67 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/APHa0BtsotHCVsLWRr_ft7jxHfrYNMA_ks5quXopgaJpZM4KIG5v
.


,,,^..^,,,
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,68,2016-10-02T06:25:42Z,2016-10-02T12:54:24Z,2016-10-02T12:54:24Z,MERGED,True,8,2,1,https://github.com/santana,fixes typos and formatting for README.md,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/68,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/68,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,69,2016-10-02T16:13:47Z,2016-10-04T07:48:41Z,2016-10-04T08:03:56Z,CLOSED,False,63,14,15,https://github.com/santana,OpenBSD,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/69,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/69,"makes build.linux64x64/squeak.cog.spur/build compile on OpenBSD 6.0
removes dependency on bash, since a) it is not necessary and b) it would require an additional package installation on OpenBSD","makes build.linux64x64/squeak.cog.spur/build compile on OpenBSD 6.0
removes dependency on bash, since a) it is not necessary and b) it would require an additional package installation on OpenBSD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,70,2016-10-03T20:10:10Z,2016-10-04T07:09:14Z,2016-10-04T07:09:14Z,CLOSED,False,454,121,18,https://github.com/estebanlm,add pharo 64bits linux and some minor enhancements,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/70,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/70,"this add 64bits for linux but also adapts command line to accept ""pharo format"" command (double dash instead one: --)
also it includes a couple of minor PharoVM changes (like XInitThreads)","this add 64bits for linux but also adapts command line to accept ""pharo format"" command (double dash instead one: --)
also it includes a couple of minor PharoVM changes (like XInitThreads)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,70,2016-10-03T20:10:10Z,2016-10-04T07:09:14Z,2016-10-04T07:09:14Z,CLOSED,False,454,121,18,https://github.com/estebanlm,add pharo 64bits linux and some minor enhancements,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/70,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/70#issuecomment-251271652,"this add 64bits for linux but also adapts command line to accept ""pharo format"" command (double dash instead one: --)
also it includes a couple of minor PharoVM changes (like XInitThreads)","Hi Esteban,
the builds are failing with:

/home/travis/build/OpenSmalltalk/opensmalltalk-vm/platforms/unix/vm/sqUnixMain.c:1416: undefined reference to VMOPTIONX' /home/travis/build/OpenSmalltalk/opensmalltalk-vm/platforms/unix/vm/sqUnixMain.c:1417: undefined reference toVMOPTIONX'
/home/travis/build/OpenSmalltalk/opensmalltalk-vm/platforms/unix/vm/sqUnixMain.c:1418: undefined reference to VMOPTIONX' /home/travis/build/OpenSmalltalk/opensmalltalk-vm/platforms/unix/vm/sqUnixMain.c:1419: undefined reference toVMOPTIONX'
/home/travis/build/OpenSmalltalk/opensmalltalk-vm/platforms/unix/vm/sqUnixMain.c:1420: undefined reference to VMOPTIONX' vm/vm.a(sqUnixMain.o):/home/travis/build/OpenSmalltalk/opensmalltalk-vm/platforms/unix/vm/sqUnixMain.c:1421: more undefined references toVMOPTIONX' follow
collect2: ld returned 1 exit status
make: *** [squeak] Error 1
../../editnewspeakinstall.sh: line 5: cd: ../../../products/nscogspur64linuxht: No such file or directory
The command ""$CHROOT ./.travis_build.sh"" exited with 1.
So something wrong perhaps with the definition of the OPTIONX macro?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,70,2016-10-03T20:10:10Z,2016-10-04T07:09:14Z,2016-10-04T07:09:14Z,CLOSED,False,454,121,18,https://github.com/estebanlm,add pharo 64bits linux and some minor enhancements,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/70,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/70#issuecomment-251310859,"this add 64bits for linux but also adapts command line to accept ""pharo format"" command (double dash instead one: --)
also it includes a couple of minor PharoVM changes (like XInitThreads)","damn, I forget to remove that X :P",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,71,2016-10-04T05:30:50Z,2016-10-04T07:24:30Z,2016-10-04T07:24:30Z,CLOSED,False,10,24,3,https://github.com/santana,replaces most sprintf with snprintf,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/71,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/71,"sprintf is inherently unsafe, easy to misuse. snprintf makes more robust code, it is harder to misuse.","sprintf is inherently unsafe, easy to misuse. snprintf makes more robust code, it is harder to misuse.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,72,2016-10-04T07:45:11Z,2016-10-16T02:05:15Z,2016-10-16T02:08:11Z,CLOSED,False,64862,41086,88,https://github.com/santana,snprintf,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/72,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/72,"sprintf is inherently unsafe, easy to misuse. snprintf makes more robust code, it is harder to misuse.","sprintf is inherently unsafe, easy to misuse. snprintf makes more robust code, it is harder to misuse.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,73,2016-10-04T07:48:01Z,2016-10-20T11:10:03Z,2016-10-20T11:10:04Z,MERGED,True,1357,164,68,https://github.com/estebanlm,add pharo 64bits linux and some minor enhancements (2nd attempt),42,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/73,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/73,"this add 64bits for linux but also adapts command line to accept ""pharo format"" command (double dash instead one: --)
also it includes a couple of minor PharoVM changes (like XInitThreads)","this add 64bits for linux but also adapts command line to accept ""pharo format"" command (double dash instead one: --)
also it includes a couple of minor PharoVM changes (like XInitThreads)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,73,2016-10-04T07:48:01Z,2016-10-20T11:10:03Z,2016-10-20T11:10:04Z,MERGED,True,1357,164,68,https://github.com/estebanlm,add pharo 64bits linux and some minor enhancements (2nd attempt),42,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/73,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/73#issuecomment-255076909,"this add 64bits for linux but also adapts command line to accept ""pharo format"" command (double dash instead one: --)
also it includes a couple of minor PharoVM changes (like XInitThreads)","I will integrate this: errors in v3 are not related to my changes (Cog branch is failing with this problem too) and the pharo errors is some random write error I asked travis support because is something I cannot handle my self (if you have an idea, please tell me :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74#issuecomment-251454838,,"Hi Gerardo,

On Oct 4, 2016, at 2:48 AM, Gerardo Santana notifications@github.com wrote:
@santana commented on this pull request.
In src/plugins/VMProfileLinuxSupportPlugin/VMProfileLinuxSupportPlugin.c:

@@ -171,7 +177,7 @@ primitiveDLSymInLibrary(void)
symName = malloc(sz + 1);
strncpy(symName, firstIndexableField(nameObj), sz);
symName[sz] = 0;

lib = dlopen(libName, RTLD_LAZY | RTLD_NODELETE);
Hi bencoman.


RTLD_NODELETE doesn't exist in OpenBSD: http://man.openbsd.org/dlopen.3

In which case good style would be
#if !defined(RTLD_NODELETE) /* eg OpenBSD */
define RTLD_NODELETE 0
#endif
rather than simply deleting the call.
Remember this addition should not cause changes, let alone regressions, to the existing platforms.

—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74#issuecomment-251457944,,"Hi @eliotmiranda, the call was not delete, it only looks like this in the context of the github comments. the actual diff or the split view show this better.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/santana,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74#issuecomment-251848390,,"indeed, I didn't delete any call; just conditionally choose to not use RTLD_NODELETE when the OS is OpenBSD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/bencoman,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74#issuecomment-251990218,,"On Wed, Oct 5, 2016 at 1:25 AM, Eliot Miranda notifications@github.com wrote:

Hi Gerardo,

On Oct 4, 2016, at 2:48 AM, Gerardo Santana notifications@github.com wrote:
@santana commented on this pull request.
In src/plugins/VMProfileLinuxSupportPlugin/VMProfileLinuxSupportPlugin.c:

@@ -171,7 +177,7 @@ primitiveDLSymInLibrary(void)
symName = malloc(sz + 1);
strncpy(symName, firstIndexableField(nameObj), sz);
symName[sz] = 0;

lib = dlopen(libName, RTLD_LAZY | RTLD_NODELETE);




hi Eliot,
My mistake confusing things by putting my comment on a line splitting
away the associated replacement, which is...

lib = dlopen(libName, RTLD_MODE);

If that is clearer, would you still recommend implicitly forcing an
unset RTLD_NODELETE to zero, instead of a platform define like this...
+#ifdef OpenBSD
+#include <dlfcn.h>
+#define RTLD_MODE RTLD_LAZY
+#else
+#define RTLD_MODE (RTLD_LAZY | RTLD_NODELETE)
+#endif
The former seems to implicitly hide which platforms RTLD_NODELETE is
missing from, where the latter is explicit.   But also, if latter is
acceptable, is there any preference for application defines to be
named like  SQ_RTLD_MODE?
Also btw, is the .../src/ folder generated code? ...so this change
actually needs to be made somewhere in VMMaker?
cheers -ben


Hi bencoman.
RTLD_NODELETE doesn't exist in OpenBSD: http://man.openbsd.org/dlopen.3

In which case good style would be
#if !defined(RTLD_NODELETE) /* eg OpenBSD */
define RTLD_NODELETE 0
#endif
rather than simply deleting the call.
Remember this addition should not cause changes, let alone regressions, to the existing platforms.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/krono,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74#issuecomment-252035888,,"On 06.10.2016, at 17:03, Ben Coman notifications@github.com wrote:

On Wed, Oct 5, 2016 at 1:25 AM, Eliot Miranda notifications@github.com wrote:

Hi Gerardo,

On Oct 4, 2016, at 2:48 AM, Gerardo Santana notifications@github.com wrote:
@santana commented on this pull request.
In src/plugins/VMProfileLinuxSupportPlugin/VMProfileLinuxSupportPlugin.c:

@@ -171,7 +177,7 @@ primitiveDLSymInLibrary(void)
symName = malloc(sz + 1);
strncpy(symName, firstIndexableField(nameObj), sz);
symName[sz] = 0;

lib = dlopen(libName, RTLD_LAZY | RTLD_NODELETE);




hi Eliot,
My mistake confusing things by putting my comment on a line splitting
away the associated replacement, which is...

lib = dlopen(libName, RTLD_MODE);

If that is clearer, would you still recommend implicitly forcing an
unset RTLD_NODELETE to zero, instead of a platform define like this...
+#ifdef OpenBSD
+#include <dlfcn.h>
+#define RTLD_MODE RTLD_LAZY
+#else
+#define RTLD_MODE (RTLD_LAZY | RTLD_NODELETE)
+#endif
The former seems to implicitly hide which platforms RTLD_NODELETE is
missing from, where the latter is explicit. But also, if latter is
acceptable, is there any preference for application defines to be
named like SQ_RTLD_MODE?

That sounds strange to me, because Silently defining RTLD_NODELETE to
zero would obscure that some platforms do not support that.

Also btw, is the .../src/ folder generated code? ...so this change
actually needs to be made somewhere in VMMaker?
cheers -ben


Hi bencoman.
RTLD_NODELETE doesn't exist in OpenBSD: http://man.openbsd.org/dlopen.3

In which case good style would be
#if !defined(RTLD_NODELETE) /* eg OpenBSD */
define RTLD_NODELETE 0
#endif
rather than simply deleting the call.
Remember this addition should not cause changes, let alone regressions, to the existing platforms.
�
You are receiving this because you commented.
Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/eliotmiranda,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74#issuecomment-254656975,,"Hi Gerardo,
I've just seen the commit.  The problem is that

src/plugins/VMProfileLinuxSupportPlugin/VMProfileLinuxSupportPlugin.c is a
generated file.  The right place for the fix is not in opensmalltalk/vm but
in VMMaker.oscog.  I'll make the fix there right now.  Please see the
commit message on vm-dev.  I'll regenerate and push soon.
On Sat, Oct 8, 2016 at 10:17 PM, Gerardo Santana notifications@github.com
wrote:

Closed #74 #74.
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#74 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/APHa0AM0edwHIpCuDqHUXXwgdB0C9dUsks5qyHjggaJpZM4KNZhN
.


,,,^..^,,,
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,74,2016-10-04T08:06:13Z,2016-10-09T05:17:19Z,2016-10-19T01:30:12Z,CLOSED,False,54,6,11,https://github.com/santana,OpenBSD Support,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74,https://github.com/bencoman,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/74#issuecomment-254685976,,"Hi Eliot, even though really I already knew the answer, you see above that
I ask to confirm 'src' was generated. So newcomers obviously bump into this
too.  Also there are now quite a few srcxxx folders cluttering the root
folder. would you be amendable to someone moving the srcxxx folders under a
'generated' folder to make it obvious?

Cheers -Ben",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,75,2016-10-06T07:14:47Z,2018-10-18T07:39:33Z,2018-10-18T07:39:33Z,CLOSED,False,69,391,18,https://github.com/santana,Simplifies the several shell scripts for building each Cog VM flavor …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/75,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/75,…for Squeak into a single Makefile,…for Squeak into a single Makefile,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,75,2016-10-06T07:14:47Z,2018-10-18T07:39:33Z,2018-10-18T07:39:33Z,CLOSED,False,69,391,18,https://github.com/santana,Simplifies the several shell scripts for building each Cog VM flavor …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/75,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/75#issuecomment-430907204,…for Squeak into a single Makefile,"While I like this, we wont go that way in the foreseeable future …",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,76,2016-10-07T05:37:20Z,2016-10-13T20:23:56Z,2016-10-13T20:31:26Z,MERGED,True,12,10,1,https://github.com/santana,replaces bash with sh,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76,"bash is not installed by default in other platforms. Also, reduces several subshells to one.","bash is not installed by default in other platforms. Also, reduces several subshells to one.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,76,2016-10-07T05:37:20Z,2016-10-13T20:23:56Z,2016-10-13T20:31:26Z,MERGED,True,12,10,1,https://github.com/santana,replaces bash with sh,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76#issuecomment-253447205,"bash is not installed by default in other platforms. Also, reduces several subshells to one.","@eliotmiranda I vote to accept this.
The travis check failure is bogus (two fails, completely unrelated to this PR),
the change is goot.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,76,2016-10-07T05:37:20Z,2016-10-13T20:23:56Z,2016-10-13T20:31:26Z,MERGED,True,12,10,1,https://github.com/santana,replaces bash with sh,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76,https://github.com/santana,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76#issuecomment-253626291,"bash is not installed by default in other platforms. Also, reduces several subshells to one.","@fniephaus if you quote your variables (as they already are) you don't need [[ ]], which is not portable, as @krono correctly points out.",True,{'THUMBS_UP': ['https://github.com/fniephaus']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,76,2016-10-07T05:37:20Z,2016-10-13T20:23:56Z,2016-10-13T20:31:26Z,MERGED,True,12,10,1,https://github.com/santana,replaces bash with sh,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76#issuecomment-253628083,"bash is not installed by default in other platforms. Also, reduces several subshells to one.","Thanks, @santana. Since I have been involved in creating this script and @krono also approves your changes, I am going to merge this...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,76,2016-10-07T05:37:20Z,2016-10-13T20:23:56Z,2016-10-13T20:31:26Z,MERGED,True,12,10,1,https://github.com/santana,replaces bash with sh,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76,https://github.com/santana,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/76#issuecomment-253629876,"bash is not installed by default in other platforms. Also, reduces several subshells to one.",Thank you @fniephaus It makes my work on OpenBSD (and every other UNIX-like) a bit easier.,True,{'THUMBS_UP': ['https://github.com/fniephaus']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,77,2016-10-08T23:57:12Z,2016-10-10T19:24:25Z,2016-10-10T19:24:25Z,MERGED,True,1,1,1,https://github.com/santana,bug fix: too many characters were allowed to be written to buf.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/77,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/77,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,78,2016-10-09T05:17:35Z,2016-10-14T23:19:53Z,2016-10-14T23:19:53Z,MERGED,True,48,5,8,https://github.com/santana,OpenBSD support,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,78,2016-10-09T05:17:35Z,2016-10-14T23:19:53Z,2016-10-14T23:19:53Z,MERGED,True,48,5,8,https://github.com/santana,OpenBSD support,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78#issuecomment-253636320,,"LGTM, what do you think @krono? Doesn't look like this is changing any of the original code paths, so I'd say this can be merged.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,78,2016-10-09T05:17:35Z,2016-10-14T23:19:53Z,2016-10-14T23:19:53Z,MERGED,True,48,5,8,https://github.com/santana,OpenBSD support,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78#issuecomment-253642224,,"I'm ok in principle. But we have naming problems now. I think that's the reason @eliotmiranda wanted an openbsd64x64  (or so) dir. probably unix64x64 would be better… I don't know, man :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,78,2016-10-09T05:17:35Z,2016-10-14T23:19:53Z,2016-10-14T23:19:53Z,MERGED,True,48,5,8,https://github.com/santana,OpenBSD support,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78,https://github.com/santana,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78#issuecomment-253652119,,"What naming problems? How is this change going to impact naming?
I don't think we need yet another directory. Maybe I can help if I can understand the problem.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,78,2016-10-09T05:17:35Z,2016-10-14T23:19:53Z,2016-10-14T23:19:53Z,MERGED,True,48,5,8,https://github.com/santana,OpenBSD support,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78,https://github.com/fniephaus,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78#issuecomment-253813760,,"@krono I don't see why there's a need for an openbsd64x64 or is it possible to emulate an OpenBSD build just like we are emulating ARM builds?
Other than that, there seems to be FreeBSD support already which is also part of build.linux64x64.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,78,2016-10-09T05:17:35Z,2016-10-14T23:19:53Z,2016-10-14T23:19:53Z,MERGED,True,48,5,8,https://github.com/santana,OpenBSD support,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78,https://github.com/krono,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/78#issuecomment-253868518,,"¯_(ツ)_/¯ Then the appropriate name would be unix….
Nevertheless, all changes to Cross and unix dirs are ok, and the changes to the mvm and such script are portable. OK from here",True,{'THUMBS_UP': ['https://github.com/fniephaus']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,79,2016-10-09T16:40:32Z,2018-10-18T07:37:28Z,2019-11-26T12:45:39Z,MERGED,True,18,9,3,https://github.com/bencoman,Download PharoXXX.sources if its not found in the usual location.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/79,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/79,If someone makes a fresh clone of the repository then the PharoXXX.sources file wont exist and a fresh-out-of-the-box Pharo build won't succeed.  So download it from its well known location.,If someone makes a fresh clone of the repository then the PharoXXX.sources file wont exist and a fresh-out-of-the-box Pharo build won't succeed.  So download it from its well known location.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,79,2016-10-09T16:40:32Z,2018-10-18T07:37:28Z,2019-11-26T12:45:39Z,MERGED,True,18,9,3,https://github.com/bencoman,Download PharoXXX.sources if its not found in the usual location.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/79,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/79#issuecomment-253445377,If someone makes a fresh clone of the repository then the PharoXXX.sources file wont exist and a fresh-out-of-the-box Pharo build won't succeed.  So download it from its well known location.,Assigning this to @estebanlm since he is currently merging the Pharo VM back...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,79,2016-10-09T16:40:32Z,2018-10-18T07:37:28Z,2019-11-26T12:45:39Z,MERGED,True,18,9,3,https://github.com/bencoman,Download PharoXXX.sources if its not found in the usual location.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/79,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/79#issuecomment-305508899,If someone makes a fresh clone of the repository then the PharoXXX.sources file wont exist and a fresh-out-of-the-box Pharo build won't succeed.  So download it from its well known location.,"On May 31, 2017, at 8:37 PM, Ben Coman ***@***.***> wrote:

 @bencoman commented on this pull request.

 In build.linux32x86/editpharoinstall.sh:

 > @@ -11,8 +11,11 @@ if [ ""$1"" = -source ]; then
  else
  	SourceFile=""PharoV50""
  fi
 -SOURCE=../../sources/$SourceFile.sources
 -test -f $SOURCE || SOURCE=../../../sources/$SourceFile.sources
 The root directory seems like the best place for the 'sources' folder. There are multiple build.xxx folders that use the files. That should be okay since the .sources files are gitignored.

+1
…
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,81,2016-10-16T02:11:40Z,2016-11-14T19:05:08Z,2016-11-14T19:05:08Z,MERGED,True,12,26,5,https://github.com/santana,replaces sprintf with snprintf,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/81,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/81,sprintf is usually misused; snprintf is safer in that regard.,sprintf is usually misused; snprintf is safer in that regard.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,81,2016-10-16T02:11:40Z,2016-11-14T19:05:08Z,2016-11-14T19:05:08Z,MERGED,True,12,26,5,https://github.com/santana,replaces sprintf with snprintf,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/81,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/81#issuecomment-260321430,sprintf is usually misused; snprintf is safer in that regard.,"Sounds good to me too, and no build is failing on tested platforms (the red crosses are unrelated).
It will be time to fix those eventual platforms not supporting snprintf when we encounter one (if ever).
If there is no other objection against this change, I'll merge this evening.",True,{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,82,2016-10-25T08:45:29Z,2017-05-27T08:06:09Z,2017-05-27T08:06:09Z,CLOSED,False,687,328,8,https://github.com/fniephaus,"Fixed race conditions in sqFilePluginBasicPrims.c's sqFileOpen(), ...",1,['enhancement'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82,https://github.com/fniephaus,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82,"This commit fixes race conditions in sqFilePluginBasicPrims.c's sqFileOpen() and buffer overflows in sqUnixFile.c and adds sqFileOpenNew() to support a new primitive to open only new files for IO atomically using open() with O_CREAT|O_EXCL and the equivalent on Windows, failing if they already exist. This will hopefully eventually replace any in-image code that tests for a file's existence before opening it for writing and creation/truncation, a classic race condition.
I don't have a Github account so I attached the commit as a ""git format-patch"" patch that you can apply with ""git am"". Details of the issues fixed follow.
sqFileOpen() issues:
Look at the current implementation. It tries fopen() with ""r+b"", reading/writing of an existing file, then if that fails, with ""w+b"", reading/writing of a new or truncated file. If the file is created and modified elsewhere between the first and second fopen(), you get unintentional truncation with potential data loss. There's also a minor race condition involving the setting of Mac file characteristics. The fix is replacing use of fopen() with the more general sys call open() and fdopen() after and proper error checking throughout.
sqUnixFile.c issues:
Evaluate this in a Pharo5/6 image with a recent SpurVM:
name := String newFrom: ((1 to: 10000) collect: [ :e | $a ]).
(name, '/', name) asFileReference writeStream.
it should crash with a stack trace with dir_EntryLookup() on top. I fixed it by cleaning up sqUnixFile.c, making it use safer string functions adapted from BSD's strlcpy()/strlcat(), added checks throughout for truncation, removed obsolete includes, and made unexternally referenced global vars static. The iOS branch uses strlcpy()/strlcat() directly, but we sadly can't assume all non-BSDs like Linux have them, so I inserted renamed versions, which is common: http://marc.info/?l=openbsd-tech&m=138733933417096&w=2
The diff is smaller than it looks, because I ran sqUnixFile.c through Lindent to make it easier for me to edit and replaced the function-generating macros in sqUnixCharConv.c with their output (""gcc -E"" with minor awk post-processing).

Submitted by monty via the vm-dev mailing list.","This commit fixes race conditions in sqFilePluginBasicPrims.c's sqFileOpen() and buffer overflows in sqUnixFile.c and adds sqFileOpenNew() to support a new primitive to open only new files for IO atomically using open() with O_CREAT|O_EXCL and the equivalent on Windows, failing if they already exist. This will hopefully eventually replace any in-image code that tests for a file's existence before opening it for writing and creation/truncation, a classic race condition.
I don't have a Github account so I attached the commit as a ""git format-patch"" patch that you can apply with ""git am"". Details of the issues fixed follow.
sqFileOpen() issues:
Look at the current implementation. It tries fopen() with ""r+b"", reading/writing of an existing file, then if that fails, with ""w+b"", reading/writing of a new or truncated file. If the file is created and modified elsewhere between the first and second fopen(), you get unintentional truncation with potential data loss. There's also a minor race condition involving the setting of Mac file characteristics. The fix is replacing use of fopen() with the more general sys call open() and fdopen() after and proper error checking throughout.
sqUnixFile.c issues:
Evaluate this in a Pharo5/6 image with a recent SpurVM:
name := String newFrom: ((1 to: 10000) collect: [ :e | $a ]).
(name, '/', name) asFileReference writeStream.
it should crash with a stack trace with dir_EntryLookup() on top. I fixed it by cleaning up sqUnixFile.c, making it use safer string functions adapted from BSD's strlcpy()/strlcat(), added checks throughout for truncation, removed obsolete includes, and made unexternally referenced global vars static. The iOS branch uses strlcpy()/strlcat() directly, but we sadly can't assume all non-BSDs like Linux have them, so I inserted renamed versions, which is common: http://marc.info/?l=openbsd-tech&m=138733933417096&w=2
The diff is smaller than it looks, because I ran sqUnixFile.c through Lindent to make it easier for me to edit and replaced the function-generating macros in sqUnixCharConv.c with their output (""gcc -E"" with minor awk post-processing).

Submitted by monty via the vm-dev mailing list.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,82,2016-10-25T08:45:29Z,2017-05-27T08:06:09Z,2017-05-27T08:06:09Z,CLOSED,False,687,328,8,https://github.com/fniephaus,"Fixed race conditions in sqFilePluginBasicPrims.c's sqFileOpen(), ...",1,['enhancement'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82,https://github.com/zecke,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82#issuecomment-255981723,"This commit fixes race conditions in sqFilePluginBasicPrims.c's sqFileOpen() and buffer overflows in sqUnixFile.c and adds sqFileOpenNew() to support a new primitive to open only new files for IO atomically using open() with O_CREAT|O_EXCL and the equivalent on Windows, failing if they already exist. This will hopefully eventually replace any in-image code that tests for a file's existence before opening it for writing and creation/truncation, a classic race condition.
I don't have a Github account so I attached the commit as a ""git format-patch"" patch that you can apply with ""git am"". Details of the issues fixed follow.
sqFileOpen() issues:
Look at the current implementation. It tries fopen() with ""r+b"", reading/writing of an existing file, then if that fails, with ""w+b"", reading/writing of a new or truncated file. If the file is created and modified elsewhere between the first and second fopen(), you get unintentional truncation with potential data loss. There's also a minor race condition involving the setting of Mac file characteristics. The fix is replacing use of fopen() with the more general sys call open() and fdopen() after and proper error checking throughout.
sqUnixFile.c issues:
Evaluate this in a Pharo5/6 image with a recent SpurVM:
name := String newFrom: ((1 to: 10000) collect: [ :e | $a ]).
(name, '/', name) asFileReference writeStream.
it should crash with a stack trace with dir_EntryLookup() on top. I fixed it by cleaning up sqUnixFile.c, making it use safer string functions adapted from BSD's strlcpy()/strlcat(), added checks throughout for truncation, removed obsolete includes, and made unexternally referenced global vars static. The iOS branch uses strlcpy()/strlcat() directly, but we sadly can't assume all non-BSDs like Linux have them, so I inserted renamed versions, which is common: http://marc.info/?l=openbsd-tech&m=138733933417096&w=2
The diff is smaller than it looks, because I ran sqUnixFile.c through Lindent to make it easier for me to edit and replaced the function-generating macros in sqUnixCharConv.c with their output (""gcc -E"" with minor awk post-processing).

Submitted by monty via the vm-dev mailing list.",A change without the whitespace changes would be good. The isatty change looks fishy and my attention span stopped due the whitespace changes.. run lindent after fixing your buffer overflow..,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,82,2016-10-25T08:45:29Z,2017-05-27T08:06:09Z,2017-05-27T08:06:09Z,CLOSED,False,687,328,8,https://github.com/fniephaus,"Fixed race conditions in sqFilePluginBasicPrims.c's sqFileOpen(), ...",1,['enhancement'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82#issuecomment-304025997,"This commit fixes race conditions in sqFilePluginBasicPrims.c's sqFileOpen() and buffer overflows in sqUnixFile.c and adds sqFileOpenNew() to support a new primitive to open only new files for IO atomically using open() with O_CREAT|O_EXCL and the equivalent on Windows, failing if they already exist. This will hopefully eventually replace any in-image code that tests for a file's existence before opening it for writing and creation/truncation, a classic race condition.
I don't have a Github account so I attached the commit as a ""git format-patch"" patch that you can apply with ""git am"". Details of the issues fixed follow.
sqFileOpen() issues:
Look at the current implementation. It tries fopen() with ""r+b"", reading/writing of an existing file, then if that fails, with ""w+b"", reading/writing of a new or truncated file. If the file is created and modified elsewhere between the first and second fopen(), you get unintentional truncation with potential data loss. There's also a minor race condition involving the setting of Mac file characteristics. The fix is replacing use of fopen() with the more general sys call open() and fdopen() after and proper error checking throughout.
sqUnixFile.c issues:
Evaluate this in a Pharo5/6 image with a recent SpurVM:
name := String newFrom: ((1 to: 10000) collect: [ :e | $a ]).
(name, '/', name) asFileReference writeStream.
it should crash with a stack trace with dir_EntryLookup() on top. I fixed it by cleaning up sqUnixFile.c, making it use safer string functions adapted from BSD's strlcpy()/strlcat(), added checks throughout for truncation, removed obsolete includes, and made unexternally referenced global vars static. The iOS branch uses strlcpy()/strlcat() directly, but we sadly can't assume all non-BSDs like Linux have them, so I inserted renamed versions, which is common: http://marc.info/?l=openbsd-tech&m=138733933417096&w=2
The diff is smaller than it looks, because I ran sqUnixFile.c through Lindent to make it easier for me to edit and replaced the function-generating macros in sqUnixCharConv.c with their output (""gcc -E"" with minor awk post-processing).

Submitted by monty via the vm-dev mailing list.","I have created a new PR for the fopen race conditions
#140
It remains to fix the buffer overrun either with those strlcpy/cat or more classical strncpy/cat.
The rest of changes is cosmetic (replace C macros for generating several functions by the preprocessed, indentation, ...).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,82,2016-10-25T08:45:29Z,2017-05-27T08:06:09Z,2017-05-27T08:06:09Z,CLOSED,False,687,328,8,https://github.com/fniephaus,"Fixed race conditions in sqFilePluginBasicPrims.c's sqFileOpen(), ...",1,['enhancement'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/82#issuecomment-304436715,"This commit fixes race conditions in sqFilePluginBasicPrims.c's sqFileOpen() and buffer overflows in sqUnixFile.c and adds sqFileOpenNew() to support a new primitive to open only new files for IO atomically using open() with O_CREAT|O_EXCL and the equivalent on Windows, failing if they already exist. This will hopefully eventually replace any in-image code that tests for a file's existence before opening it for writing and creation/truncation, a classic race condition.
I don't have a Github account so I attached the commit as a ""git format-patch"" patch that you can apply with ""git am"". Details of the issues fixed follow.
sqFileOpen() issues:
Look at the current implementation. It tries fopen() with ""r+b"", reading/writing of an existing file, then if that fails, with ""w+b"", reading/writing of a new or truncated file. If the file is created and modified elsewhere between the first and second fopen(), you get unintentional truncation with potential data loss. There's also a minor race condition involving the setting of Mac file characteristics. The fix is replacing use of fopen() with the more general sys call open() and fdopen() after and proper error checking throughout.
sqUnixFile.c issues:
Evaluate this in a Pharo5/6 image with a recent SpurVM:
name := String newFrom: ((1 to: 10000) collect: [ :e | $a ]).
(name, '/', name) asFileReference writeStream.
it should crash with a stack trace with dir_EntryLookup() on top. I fixed it by cleaning up sqUnixFile.c, making it use safer string functions adapted from BSD's strlcpy()/strlcat(), added checks throughout for truncation, removed obsolete includes, and made unexternally referenced global vars static. The iOS branch uses strlcpy()/strlcat() directly, but we sadly can't assume all non-BSDs like Linux have them, so I inserted renamed versions, which is common: http://marc.info/?l=openbsd-tech&m=138733933417096&w=2
The diff is smaller than it looks, because I ran sqUnixFile.c through Lindent to make it easier for me to edit and replaced the function-generating macros in sqUnixCharConv.c with their output (""gcc -E"" with minor awk post-processing).

Submitted by monty via the vm-dev mailing list.","I've replayed the fopen race condition changes
I've substituted the buffer overrun with a minimal change
I haven't touched the char conv since it was not strictly necessary.
I'll thus close this PR
There is probably some unexploited value in cleaning more aggressively, so please replay the interesting part and reopen a new pull request, but do so in a fashion that is easier to review (separate changes into several commits and eventually several PR).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,85,2016-11-01T02:16:13Z,2016-11-01T05:15:23Z,2016-11-01T05:15:23Z,CLOSED,False,7,0,1,https://github.com/rmacnak,Not for merging. Testing Travis.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/85,https://github.com/rmacnak,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/85,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,88,2016-11-01T12:59:13Z,2020-04-22T08:30:38Z,2020-04-22T08:30:38Z,CLOSED,False,55,46,14,https://github.com/zecke,configure.ac: Modernize scripts to allow autoreconf,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88,"Allow to autoreconf with autoconf released in 2012. It might
be best to remove generated files to prevent bitrot again or
at least run it as part of the CI process.
Just tried to autoreconf but didn't run the script yet. Let's
see how it goes in CI.","Allow to autoreconf with autoconf released in 2012. It might
be best to remove generated files to prevent bitrot again or
at least run it as part of the CI process.
Just tried to autoreconf but didn't run the script yet. Let's
see how it goes in CI.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,88,2016-11-01T12:59:13Z,2020-04-22T08:30:38Z,2020-04-22T08:30:38Z,CLOSED,False,55,46,14,https://github.com/zecke,configure.ac: Modernize scripts to allow autoreconf,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88,https://github.com/zecke,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88#issuecomment-257709214,"Allow to autoreconf with autoconf released in 2012. It might
be best to remove generated files to prevent bitrot again or
at least run it as part of the CI process.
Just tried to autoreconf but didn't run the script yet. Let's
see how it goes in CI.","Some of the link errors are from the fact that the MIDIPlugin now compiles against alsa (as configured) so..
/* this simply doesn't work */
#if defined(USE_MIDI_ALSA)
# include ""sqUnixMIDIALSA.inc""
#else

the else part is not taken anymore. I don't think the buildsystem in this incarnation has a way to easily propagate link dependencies... but if MIDIPlugin is using asound.. and MIDIPlugin is built-in.. then squeak would need to link to asound...
a.) Link -lasound like -luuid -lpthread is passed
b.) Add a proper flag to enable/disable alsa in the MIDIPlugin and disable it to match status quo
c.) Improve buildsystem (and replicate automake+libtool)
d.) be happy that it ""simply works"" now?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,88,2016-11-01T12:59:13Z,2020-04-22T08:30:38Z,2020-04-22T08:30:38Z,CLOSED,False,55,46,14,https://github.com/zecke,configure.ac: Modernize scripts to allow autoreconf,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88#issuecomment-279034660,"Allow to autoreconf with autoconf released in 2012. It might
be best to remove generated files to prevent bitrot again or
at least run it as part of the CI process.
Just tried to autoreconf but didn't run the script yet. Let's
see how it goes in CI.","Holger, I hit confirm too soon.  Looks like the Cog version of the ALSA selection is correct.  can you resolve the conflict?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,88,2016-11-01T12:59:13Z,2020-04-22T08:30:38Z,2020-04-22T08:30:38Z,CLOSED,False,55,46,14,https://github.com/zecke,configure.ac: Modernize scripts to allow autoreconf,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88#issuecomment-430906294,"Allow to autoreconf with autoconf released in 2012. It might
be best to remove generated files to prevent bitrot again or
at least run it as part of the CI process.
Just tried to autoreconf but didn't run the script yet. Let's
see how it goes in CI.","@zecke, any interest in seeing whether this works with current Cog?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,88,2016-11-01T12:59:13Z,2020-04-22T08:30:38Z,2020-04-22T08:30:38Z,CLOSED,False,55,46,14,https://github.com/zecke,configure.ac: Modernize scripts to allow autoreconf,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/88#issuecomment-617633287,"Allow to autoreconf with autoconf released in 2012. It might
be best to remove generated files to prevent bitrot again or
at least run it as part of the CI process.
Just tried to autoreconf but didn't run the script yet. Let's
see how it goes in CI.","This had been integrated in fec94cb.
Close",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,89,2016-11-04T10:43:18Z,2016-11-04T18:17:35Z,2016-11-05T00:29:43Z,MERGED,True,126,172,7,https://github.com/fniephaus,Run Newspeak bootstrapping after building vm,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/89,https://github.com/fniephaus,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/89,/cc @gbracha @rmacnak,/cc @gbracha @rmacnak,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,89,2016-11-04T10:43:18Z,2016-11-04T18:17:35Z,2016-11-05T00:29:43Z,MERGED,True,126,172,7,https://github.com/fniephaus,Run Newspeak bootstrapping after building vm,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/89,https://github.com/rmacnak,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/89#issuecomment-258578289,/cc @gbracha @rmacnak,LGTM,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,90,2016-11-06T20:07:11Z,2016-11-06T21:16:10Z,2016-11-06T21:16:17Z,MERGED,True,121,12,4,https://github.com/fniephaus,Enable SUnit testing via smalltalkCI for Squeak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/90,https://github.com/fniephaus,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/90,"32bit only as 64bit is not yet supported by smalltalkCI.
I'm also working on support for Travis CI's container-based infrastructure:
travis-ci/travis-build#879
Once that is done, I can switch the builds back onto the faster containers.
Related: #86","32bit only as 64bit is not yet supported by smalltalkCI.
I'm also working on support for Travis CI's container-based infrastructure:
travis-ci/travis-build#879
Once that is done, I can switch the builds back onto the faster containers.
Related: #86",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,91,2016-11-08T12:10:06Z,2016-11-08T13:56:24Z,2017-04-04T11:44:33Z,MERGED,True,72,63,2,https://github.com/estebanlm,pharovm: add double-dash for command line options (macOS),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/91,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/91,in pharo we use double dash (I will submit linux and windows versions in a couple of days),in pharo we use double dash (I will submit linux and windows versions in a couple of days),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,92,2016-11-08T18:27:30Z,2016-11-09T10:20:54Z,2016-11-09T10:20:54Z,MERGED,True,276,140,50,https://github.com/estebanlm,cache built thirdparty libraries ,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/92,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/92,"so they are built just once (otherwise they are built always and there is no point since they do not change).
also, introduce pharo.cog.spur for win32","so they are built just once (otherwise they are built always and there is no point since they do not change).
also, introduce pharo.cog.spur for win32",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,92,2016-11-08T18:27:30Z,2016-11-09T10:20:54Z,2016-11-09T10:20:54Z,MERGED,True,276,140,50,https://github.com/estebanlm,cache built thirdparty libraries ,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/92,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/92#issuecomment-259380379,"so they are built just once (otherwise they are built always and there is no point since they do not change).
also, introduce pharo.cog.spur for win32",error is because of introduction of tests... nothing to do with PR,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,93,2016-11-12T03:02:29Z,2016-11-12T09:15:05Z,2016-11-12T11:59:07Z,MERGED,True,146,135,9,https://github.com/nicolas-cellier-aka-nice,Cleanup surfaces for x64,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/93,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/93,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,93,2016-11-12T03:02:29Z,2016-11-12T09:15:05Z,2016-11-12T11:59:07Z,MERGED,True,146,135,9,https://github.com/nicolas-cellier-aka-nice,Cleanup surfaces for x64,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/93,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/93#issuecomment-260111135,,"OK, so two pharo builds failed with the pull request, but not in the branch.
The console log is too long, so I cannot easily confirm what the error is, but it is presumably unrelated.
Also two squeak.stack.v3 failed, one triggered a ld bug on windows (?), the other had a single squeak image test that timed out.
https://ci.appveyor.com/project/OpenSmalltalk/vm/build/1.0.414/job/3rp04as3mt4r351q#L2914
collect2: fatal error: ld terminated with signal 11 [Segmentation fault], core dumped
https://travis-ci.org/OpenSmalltalk/opensmalltalk-vm/jobs/175250412#8507
MCWorkingCopyTest>>#testDoubleRepeatedMerge (100469ms)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,94,2016-11-12T19:02:29Z,2016-11-12T19:02:56Z,2016-11-12T19:03:00Z,MERGED,True,31,24,10,https://github.com/nicolas-cellier-aka-nice,Less warnings 20161112,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/94,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/94,Remove a few C compiler warnings (false positive),Remove a few C compiler warnings (false positive),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,95,2016-11-13T22:51:11Z,2016-11-14T10:23:58Z,2016-11-14T10:25:17Z,MERGED,True,22015,21990,97,https://github.com/nicolas-cellier-aka-nice,Llp64 v3,10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/95,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/95,"Cumulative fixes for LLP64 compilation (Win64), including VMMaker generated source code.
With this, I get a functional 64bits squeak.stack.spur on WIN64.
Concerning the plugins,

FFI tests pass
Alien tests pass, including the qsort callback example

But at least those are broken and crash the VM:

FloatMathPlugin
JPEGReadWriter2Plugin
I did not disable the build so that we can eventually debug it.","Cumulative fixes for LLP64 compilation (Win64), including VMMaker generated source code.
With this, I get a functional 64bits squeak.stack.spur on WIN64.
Concerning the plugins,

FFI tests pass
Alien tests pass, including the qsort callback example

But at least those are broken and crash the VM:

FloatMathPlugin
JPEGReadWriter2Plugin
I did not disable the build so that we can eventually debug it.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,97,2016-11-15T15:19:16Z,2016-11-15T15:49:28Z,2016-11-15T15:49:30Z,MERGED,True,219,0,15,https://github.com/timfel,"Build sista on windows, too",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/97,https://github.com/timfel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/97,Simply copies the build files yet again,Simply copies the build files yet again,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,98,2016-11-16T08:20:50Z,2016-11-16T10:32:21Z,2016-11-16T10:32:23Z,MERGED,True,38,7,2,https://github.com/timfel,Try to build 64bit windows stack VMs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/98,https://github.com/timfel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/98,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,99,2016-11-17T22:16:28Z,2016-11-17T22:16:43Z,2016-11-17T22:16:47Z,MERGED,True,14,14,4,https://github.com/nicolas-cellier-aka-nice,Use clang for win64,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/99,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/99,Note that this avoids a crash in FFI tests,Note that this avoids a crash in FFI tests,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,100,2016-11-20T14:54:49Z,2016-11-20T18:06:40Z,2016-11-20T18:06:44Z,MERGED,True,33,24,12,https://github.com/nicolas-cellier-aka-nice,Legacy mac os fix,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/100,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/100,"Note that it's still possible to build legacy Carbon VM from modern OSX/modern Xcode.
For that, I use https://github.com/devernay/xcodelegacy, and a copy of the CoreVM.xcodeproj updated to use latest compiler.","Note that it's still possible to build legacy Carbon VM from modern OSX/modern Xcode.
For that, I use https://github.com/devernay/xcodelegacy, and a copy of the CoreVM.xcodeproj updated to use latest compiler.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,101,2016-11-24T13:51:54Z,2016-11-25T14:18:59Z,2016-11-25T14:18:59Z,MERGED,True,484,21,26,https://github.com/estebanlm,add win32 build rules,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/101,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/101,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,101,2016-11-24T13:51:54Z,2016-11-25T14:18:59Z,2016-11-25T14:18:59Z,MERGED,True,484,21,26,https://github.com/estebanlm,add win32 build rules,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/101,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/101#issuecomment-262965454,,I will accept because the problem has nothing to do (and it will fixed with lib caching feature),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,102,2016-11-24T23:43:00Z,2016-11-24T23:43:26Z,2016-11-24T23:43:29Z,MERGED,True,15,13,13,https://github.com/nicolas-cellier-aka-nice,Warning fix 2016 11 21,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/102,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/102,"Note that most of these FFI files must be kind of legacy, but who knows...","Note that most of these FFI files must be kind of legacy, but who knows...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,103,2016-11-25T16:36:23Z,2016-11-25T20:28:08Z,2016-11-25T20:28:08Z,MERGED,True,43,29,17,https://github.com/estebanlm,add IMMUTABILITY as default for PharoVM,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/103,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/103,... and some plugins added to win32 build,... and some plugins added to win32 build,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,104,2016-11-28T15:45:21Z,2016-11-29T12:54:23Z,2017-04-04T11:44:28Z,MERGED,True,15,15,4,https://github.com/estebanlm,go back to version 0.23 of libgit2 (migration is not done),3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/104,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/104,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,105,2016-12-05T13:21:38Z,2016-12-05T19:59:56Z,2016-12-05T19:59:56Z,MERGED,True,444,323,70,https://github.com/estebanlm,fix PharoVM-win32 build + enhancements,16,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/105,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/105,"added STACK_ALIGN_BYTES=16, ALLOCA_LIES_SO_USE_GETSP=0 flags to win32. Is a workaround, but it works for now.
added a ""third-party"" directory to put ""specs"", to define common third-party library versions (this is first attempt to reduce the amount of duplicated code I have now).","added STACK_ALIGN_BYTES=16, ALLOCA_LIES_SO_USE_GETSP=0 flags to win32. Is a workaround, but it works for now.
added a ""third-party"" directory to put ""specs"", to define common third-party library versions (this is first attempt to reduce the amount of duplicated code I have now).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,105,2016-12-05T13:21:38Z,2016-12-05T19:59:56Z,2016-12-05T19:59:56Z,MERGED,True,444,323,70,https://github.com/estebanlm,fix PharoVM-win32 build + enhancements,16,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/105,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/105#issuecomment-264960166,"added STACK_ALIGN_BYTES=16, ALLOCA_LIES_SO_USE_GETSP=0 flags to win32. Is a workaround, but it works for now.
added a ""third-party"" directory to put ""specs"", to define common third-party library versions (this is first attempt to reduce the amount of duplicated code I have now).",Error is with sista. Not related.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,106,2016-12-07T17:37:15Z,2016-12-07T17:37:29Z,2016-12-07T17:37:29Z,MERGED,True,12,2,3,https://github.com/estebanlm,use special spec for libpng on windows,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/106,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/106,because there are compilation problems otherwise,because there are compilation problems otherwise,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,107,2016-12-13T14:42:13Z,2016-12-13T18:47:14Z,2016-12-13T18:47:14Z,MERGED,True,28173,22163,74,https://github.com/estebanlm,add double dash for Pharo on windows (the only remaining),4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/107,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/107,Pharo uses doubledash (--) for command line options,Pharo uses doubledash (--) for command line options,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,108,2016-12-14T20:08:13Z,2017-01-12T07:50:21Z,2017-01-12T07:50:21Z,MERGED,True,290893,225440,219,https://github.com/estebanlm,enhance third-party libraries build + others,19,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/108,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/108,"This PR simplifies the structure of third-party libraries... still in the process of getting the simples process possible.
It adds symlinks for linux and mac platforms (since some libraries are accessed through symlinks in some libraries).
It also removes the ""ALLOCA_LIES_SO_USE_GETSP"" workaround for FFI in Windows.","This PR simplifies the structure of third-party libraries... still in the process of getting the simples process possible.
It adds symlinks for linux and mac platforms (since some libraries are accessed through symlinks in some libraries).
It also removes the ""ALLOCA_LIES_SO_USE_GETSP"" workaround for FFI in Windows.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,109,2016-12-21T02:17:37Z,2016-12-22T16:37:44Z,2019-05-11T01:04:49Z,MERGED,True,15,11,2,https://github.com/ronsaldo,Bug when calling mprotect and VirtualAlloc with the SpurMemoryManager,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/109,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/109,"The endAddr parameter to sqMakeMemoryNotExecutableFromTo is exclusive. This means, that the size computation (endAddr - startAddr + 1) does not need the extra + 1.
When computing the size for mprotect and VirtualProtect with just endAddr - startAddr, the call does not fail anymore in Windows, Linux and OS X.
Please validate this with how are these functions used from the Slang side.","The endAddr parameter to sqMakeMemoryNotExecutableFromTo is exclusive. This means, that the size computation (endAddr - startAddr + 1) does not need the extra + 1.
When computing the size for mprotect and VirtualProtect with just endAddr - startAddr, the call does not fail anymore in Windows, Linux and OS X.
Please validate this with how are these functions used from the Slang side.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,110,2016-12-23T20:38:10Z,2018-04-13T22:23:25Z,2018-04-13T22:23:25Z,MERGED,True,8,6,1,https://github.com/santana,adds more dependencies to the CentOS list,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/110,https://github.com/santana,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/110,and adds the -y flag so it can be copied and pasted and expected to work,and adds the -y flag so it can be copied and pasted and expected to work,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,110,2016-12-23T20:38:10Z,2018-04-13T22:23:25Z,2018-04-13T22:23:25Z,MERGED,True,8,6,1,https://github.com/santana,adds more dependencies to the CentOS list,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/110,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/110#issuecomment-313141412,and adds the -y flag so it can be copied and pasted and expected to work,"This is fine, but also needs to be made to the same sections in the other build.linux*/HowToBuild files.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,110,2016-12-23T20:38:10Z,2018-04-13T22:23:25Z,2018-04-13T22:23:25Z,MERGED,True,8,6,1,https://github.com/santana,adds more dependencies to the CentOS list,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/110,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/110#issuecomment-363049183,and adds the -y flag so it can be copied and pasted and expected to work,"Could you update this PR please, @santana?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,111,2017-01-11T08:12:12Z,2017-02-10T18:55:50Z,2017-02-10T18:55:50Z,MERGED,True,902037,63,109,https://github.com/ronsaldo,Lowcode fixup,28,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/111,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/111,"Fixing Lowcode to work in 32 bits Linux, OS X and Windows.
This pull request includes the adaptation of normal OpenSmalltalk VM building scripts to build some Pharo VMs with the Lowcode inline primitives in Linux and OS X. In Windows I failed to build a Pharo VM due to the dependencies, so I tested using a Squeak VM with the Lowcode instructions and a Pharo image ( http://ronie.cl/files/images/Pharo-lowcode.zip ).
What is changed:

More build scripts
Fixing the LowcodeFFI callout interpreter trampolines for building in OS X and Windows
Some missing memory accessors.

What is working with these changes:

All WodenMath tests are passing. WodenMath uses the Lowcode type system for generating Lowcode instructions at compile time.
UnifiedFFI callouts using Lowcode (Need to install the Lowcode uFFI backend by calling LowcodeFFICalloutAPI install, otherwise the SqueakFFI backend will be used).

What is not working(yet):

UnifiedFFI callbacks using Lowcode. Crashing immediately in Windows. In Linux, does not crash all of the time, which seems to be some difference between the Interpreter and the Cogit","Fixing Lowcode to work in 32 bits Linux, OS X and Windows.
This pull request includes the adaptation of normal OpenSmalltalk VM building scripts to build some Pharo VMs with the Lowcode inline primitives in Linux and OS X. In Windows I failed to build a Pharo VM due to the dependencies, so I tested using a Squeak VM with the Lowcode instructions and a Pharo image ( http://ronie.cl/files/images/Pharo-lowcode.zip ).
What is changed:

More build scripts
Fixing the LowcodeFFI callout interpreter trampolines for building in OS X and Windows
Some missing memory accessors.

What is working with these changes:

All WodenMath tests are passing. WodenMath uses the Lowcode type system for generating Lowcode instructions at compile time.
UnifiedFFI callouts using Lowcode (Need to install the Lowcode uFFI backend by calling LowcodeFFICalloutAPI install, otherwise the SqueakFFI backend will be used).

What is not working(yet):

UnifiedFFI callbacks using Lowcode. Crashing immediately in Windows. In Linux, does not crash all of the time, which seems to be some difference between the Interpreter and the Cogit",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,112,2017-01-12T09:38:41Z,2017-01-14T09:50:24Z,2017-01-14T09:50:24Z,MERGED,True,14,6,1,https://github.com/estebanlm,"allow build linux version for itimer, threaded or both",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/112,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/112,"before it was building always both and that breaks Pharo process.
with this change, if environment variable HEARTBEAT is set (threaded or itimer) then just that vm is built. If not, it behaves as before (building both).","before it was building always both and that breaks Pharo process.
with this change, if environment variable HEARTBEAT is set (threaded or itimer) then just that vm is built. If not, it behaves as before (building both).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,113,2017-01-15T16:41:23Z,2017-01-17T19:00:38Z,2017-01-17T19:00:38Z,MERGED,True,130,21,6,https://github.com/estebanlm,add posix permissions to FilePlugin for Windows (PharoVM),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/113,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/113,"I ported our implementation of posix permission for windows (we were having a lot of problems without it). It would be cool if it becomes common to all VMs, but for the moment is just in PharoVM (I'll let you guys to choose if you want it or not :) )
btw, this PR also fixes a bug on #isDirectory on macOS: it was not resolving correctly if directory was a symlink","I ported our implementation of posix permission for windows (we were having a lot of problems without it). It would be cool if it becomes common to all VMs, but for the moment is just in PharoVM (I'll let you guys to choose if you want it or not :) )
btw, this PR also fixes a bug on #isDirectory on macOS: it was not resolving correctly if directory was a symlink",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,114,2017-01-24T14:14:05Z,2017-01-26T17:45:00Z,2017-01-26T17:45:00Z,MERGED,True,101,21,5,https://github.com/estebanlm,adding AioPlugin (external) to Pharo linux distributions,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/114,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/114,"it was missing, no idea why :)","it was missing, no idea why :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,116,2017-02-06T14:33:14Z,2017-02-07T18:07:44Z,2017-02-07T18:07:44Z,MERGED,True,18597,13427,58,https://github.com/estebanlm,configure.ac: Modernize scripts to allow autoreconf,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/116,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/116,"This PR takes the same changes applied here: pharo-project/pharo-vm#114
The idea is to create a modern version of configure.ac which in time will help in the general health of the building process.
This change should not impact at how it works building process now.","This PR takes the same changes applied here: pharo-project/pharo-vm#114
The idea is to create a modern version of configure.ac which in time will help in the general health of the building process.
This change should not impact at how it works building process now.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,117,2017-02-10T10:48:26Z,2017-02-10T18:56:59Z,2019-05-11T01:05:02Z,MERGED,True,7,17,1,https://github.com/ronsaldo,"In the SystemV AMD64 ABI, floats and doubles are returned in XMM0.",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/117,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/117,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,120,2017-02-21T00:22:54Z,2017-02-21T17:32:58Z,2017-02-21T17:33:11Z,MERGED,True,12,6,3,https://github.com/nicolas-cellier-aka-nice,Fix issue 119 jpeg plugin crashes in Win64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/120,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/120,"Solution is to align jump_buf on 16bytes boundary by using malloc/free pairs around setjmp/longjmp calls.
The struct error_mgr2 now contains a pointer to the jump_buf for this purpose.","Solution is to align jump_buf on 16bytes boundary by using malloc/free pairs around setjmp/longjmp calls.
The struct error_mgr2 now contains a pointer to the jump_buf for this purpose.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,120,2017-02-21T00:22:54Z,2017-02-21T17:32:58Z,2017-02-21T17:33:11Z,MERGED,True,12,6,3,https://github.com/nicolas-cellier-aka-nice,Fix issue 119 jpeg plugin crashes in Win64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/120,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/120#issuecomment-281285420,"Solution is to align jump_buf on 16bytes boundary by using malloc/free pairs around setjmp/longjmp calls.
The struct error_mgr2 now contains a pointer to the jump_buf for this purpose.",The failures are completely unrelated to the fix,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,121,2017-02-21T07:22:30Z,2017-09-19T18:22:28Z,2017-09-19T18:22:28Z,CLOSED,False,435,338,28,https://github.com/ronsaldo,Fixing and updating the Lowcode building scripts for Linux,10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/121,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/121,"In this pull request I am fixing and updating the Lowcode building scripts for linux.
I am also updating SDL2 to the latest version, because the old version is not building on Ubuntu 16.10.
I am regenerating spurlowcode64src because I was missing a method that produced undefined references in debug mode.","In this pull request I am fixing and updating the Lowcode building scripts for linux.
I am also updating SDL2 to the latest version, because the old version is not building on Ubuntu 16.10.
I am regenerating spurlowcode64src because I was missing a method that produced undefined references in debug mode.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,121,2017-02-21T07:22:30Z,2017-09-19T18:22:28Z,2017-09-19T18:22:28Z,CLOSED,False,435,338,28,https://github.com/ronsaldo,Fixing and updating the Lowcode building scripts for Linux,10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/121,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/121#issuecomment-291633040,"In this pull request I am fixing and updating the Lowcode building scripts for linux.
I am also updating SDL2 to the latest version, because the old version is not building on Ubuntu 16.10.
I am regenerating spurlowcode64src because I was missing a method that produced undefined references in debug mode.","Hi Ronie, is this PR still relevant? If yes we can cherry pick the interesting bits.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,121,2017-02-21T07:22:30Z,2017-09-19T18:22:28Z,2017-09-19T18:22:28Z,CLOSED,False,435,338,28,https://github.com/ronsaldo,Fixing and updating the Lowcode building scripts for Linux,10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/121,https://github.com/ronsaldo,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/121#issuecomment-330627644,"In this pull request I am fixing and updating the Lowcode building scripts for linux.
I am also updating SDL2 to the latest version, because the old version is not building on Ubuntu 16.10.
I am regenerating spurlowcode64src because I was missing a method that produced undefined references in debug mode.",I will move the interesting parts into a separate pull request. Closing this for now.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,122,2017-02-21T12:20:45Z,2017-02-21T17:30:13Z,2017-02-21T17:30:30Z,MERGED,True,474,12,3,https://github.com/nicolas-cellier-aka-nice,Apply jpeg patch 6b2 from the Independent JPEG Group (IJG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/122,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/122,"This patch is available thru http://jpegclub.org/support/
Also add the original README from IJG. It's usefull for clearly identifying the origin of this 3rd party code and contains necessary legal notice about distribution.","This patch is available thru http://jpegclub.org/support/
Also add the original README from IJG. It's usefull for clearly identifying the origin of this 3rd party code and contains necessary legal notice about distribution.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,123,2017-02-26T04:26:10Z,2017-02-27T09:43:23Z,2017-02-27T09:43:23Z,MERGED,True,3,0,1,https://github.com/zecke,libtool: Help people living in the past,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/123,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/123,"Teach the old libtool a new option (that is enabled anyway).
This will help people not re-generating their buildsystem. As
the old configure has been patched by hand, I think adding
this option is in line as well.
In commit fec94cb I made it
possible to run autoreconf and the newer libtool required us
to pass --preserve-dup-deps to list objects multiple times.
Adding this option sadly broke the build when using the
already generated ltmain.sh/libtool. Try to fix that.","Teach the old libtool a new option (that is enabled anyway).
This will help people not re-generating their buildsystem. As
the old configure has been patched by hand, I think adding
this option is in line as well.
In commit fec94cb I made it
possible to run autoreconf and the newer libtool required us
to pass --preserve-dup-deps to list objects multiple times.
Adding this option sadly broke the build when using the
already generated ltmain.sh/libtool. Try to fix that.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,124,2017-02-26T23:22:13Z,2017-02-26T23:22:28Z,2017-02-26T23:22:34Z,MERGED,True,2,2,2,https://github.com/nicolas-cellier-aka-nice,Ubuntu14 fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/124,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/124,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287614543,,"so... this is very weird. Most of the modifications there actually are not mine, and they are already present on Cog branch.
Does anyone knows why is showing it like this... and what can I do to fix it?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/bencoman,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287618841,,"If you look at the network chart (my favourite github feature),
https://github.com/OpenSmalltalk/opensmalltalk-vm/network
on the far right (19-March) I can see estebanlm/Cog pulls in from OpenSmalltalk/Cog mainline.
Following your branch to the far left where it first branched off OpenSmalltalk/Cog (6-Feb)
I see the first commit of the branch is the first commit listed above.
Your pull request merges all the commits on that branch back into the mainline.
When you say ""they are already present on Cog branch"" that would seem to only your own Cog branch.  For example, picking the next commit on your branch (18 Feb).
ca2fc67 Removed builldbg and buildast from zip step
I don't see it in the log of the  OpenSmalltalk/Cog mainline.
On my local machine...
$ cd opensmaltalk-vm
$ git remote -v
opensmalltalk-vm	https://github.com/OpenSmalltalk/opensmalltalk-vm.git (fetch)
$ git fetch opensmalltalk-vm
$ git checkout opensmalltalk-vm/Cog
You are in 'detached HEAD' state. 
HEAD is now at 1f81775... CogVM source as per VMMaker.oscog-eem.2166
$ git log | grep buildbg
==>nothing

So is it confusion about which Cog branch is which?
Perhaps this branch you normally work on should be called ""pharo-vm"" branch?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/estebanlm,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287623170,,"mmm... not sure I understand. I work on estebanlm/opensmalltalk-vm/Cog, and I keep it update with OpenSmalltalk/opensmalltalk-vm/Cog.
Before doing a PR, I always merge with latest sources from OpenSmalltalk/opensmalltalk-vm/Cog, to keep the branch up-to-date. I really cannot understand why I have some changes that should not be there (because I pulled them from the branch against whom I made the PR).
Now, even more weird: when I did the PR and wrote the first comment, I was seeing ""257"" files changed and that's why I was scared. Now it says 35 and looks a lot more reasonable (and those changes were the ones I did :P)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/bencoman,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287629739,,"You didn't provide a concrete example of ""they are already present on Cog branch"" or previously report the number (257) of changed files (so I did't pay attention to it) but maybe it was a glitch and I only saw the more-reasonable view. So my response was trying to fit a square peg into round hole.  Please ignore.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/estebanlm,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287632477,,"yeah, thanks for look at it! :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/nicolas-cellier-aka-nice,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287639369,,"Hi Esteban, could I request a more continuous integration?
There are plenty of good things here, but now we'll have to merge with my work on building windows pharo VM (both 32 and 64 bits).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/estebanlm,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287639999,,"yes, of course... I usually do it faster, but last couple of months have been... hard :S
can I merge this?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,127,2017-03-19T12:51:22Z,2017-03-19T20:31:36Z,2017-04-04T11:44:06Z,MERGED,True,199,146,35,https://github.com/estebanlm,fixes on linux build for pharo + others,31,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127,https://github.com/nicolas-cellier-aka-nice,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/127#issuecomment-287645171,,"OK, I'll merge the 2 requests",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,128,2017-03-19T19:06:38Z,2017-03-19T20:34:29Z,2017-03-19T20:34:39Z,MERGED,True,771,84,49,https://github.com/nicolas-cellier-aka-nice,Build pharo 32 and 64 bits version on appveyor with cygwin,37,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/128,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/128,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,129,2017-04-04T11:48:51Z,2017-04-04T20:23:25Z,2017-04-05T12:44:23Z,CLOSED,False,168570,22112,140,https://github.com/estebanlm,fixes for Pharo,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129,"cairo for windows builds with correct link to freetype2
libsdl2 for linux uses correct version (0.4.1)","cairo for windows builds with correct link to freetype2
libsdl2 for linux uses correct version (0.4.1)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,129,2017-04-04T11:48:51Z,2017-04-04T20:23:25Z,2017-04-05T12:44:23Z,CLOSED,False,168570,22112,140,https://github.com/estebanlm,fixes for Pharo,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129#issuecomment-291601492,"cairo for windows builds with correct link to freetype2
libsdl2 for linux uses correct version (0.4.1)","The problem with this web interface is that we see all the changes of the merge from opensmalltalkvm->pharovm... We don't want to see them, they are already in opensmalltalk-vm tree obviously.
Exactly like recent changes from Tobias...
Ah, but I see that those merge are not marked as such in the network... So it's the workflow that is not really git friendly (et vice et versa).
This git/github interface is far far inferior to Monticello interface where only the diff to be applied are visible when we request a merge.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,129,2017-04-04T11:48:51Z,2017-04-04T20:23:25Z,2017-04-05T12:44:23Z,CLOSED,False,168570,22112,140,https://github.com/estebanlm,fixes for Pharo,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129#issuecomment-291620815,"cairo for windows builds with correct link to freetype2
libsdl2 for linux uses correct version (0.4.1)","I've cherry picked all the relevant changes without conflict (these were false conflicts).
The remaining are merges from opensmalltalk-vm but not regular merges.
They are all marked as authored by Esteban which is a weird workflow (thus the conflicts).
They don't bring a single change. That's why I will close the pull request rather than merge, it's already merged.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,129,2017-04-04T11:48:51Z,2017-04-04T20:23:25Z,2017-04-05T12:44:23Z,CLOSED,False,168570,22112,140,https://github.com/estebanlm,fixes for Pharo,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129,https://github.com/estebanlm,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129#issuecomment-291764854,"cairo for windows builds with correct link to freetype2
libsdl2 for linux uses correct version (0.4.1)","yeah, but now you cause a conflict in my sources :)
(yes, I agree there is something weird in the diff tool of github... it shoudln't show differences in the merged files... they are already there).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,129,2017-04-04T11:48:51Z,2017-04-04T20:23:25Z,2017-04-05T12:44:23Z,CLOSED,False,168570,22112,140,https://github.com/estebanlm,fixes for Pharo,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129,https://github.com/nicolas-cellier-aka-nice,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/129#issuecomment-291849778,"cairo for windows builds with correct link to freetype2
libsdl2 for linux uses correct version (0.4.1)","I Esteban, just merge opensmalltalk-vm/cog using git, there should not be any conflict.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,130,2017-04-06T15:05:23Z,2017-04-08T08:44:41Z,2017-04-08T08:44:41Z,MERGED,True,235,1,7,https://github.com/estebanlm,pharo to deploy from opensmalltalk-vm,36,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/130,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/130,"again, is showing me a lot of changed sources which actually are not part of the change :(","again, is showing me a lot of changed sources which actually are not part of the change :(",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,130,2017-04-06T15:05:23Z,2017-04-08T08:44:41Z,2017-04-08T08:44:41Z,MERGED,True,235,1,7,https://github.com/estebanlm,pharo to deploy from opensmalltalk-vm,36,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/130,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/130#issuecomment-292239690,"again, is showing me a lot of changed sources which actually are not part of the change :(","ah no, now is ok :)
(there are somethings very weird with this PRs :P )",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,130,2017-04-06T15:05:23Z,2017-04-08T08:44:41Z,2017-04-08T08:44:41Z,MERGED,True,235,1,7,https://github.com/estebanlm,pharo to deploy from opensmalltalk-vm,36,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/130,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/130#issuecomment-292704471,"again, is showing me a lot of changed sources which actually are not part of the change :(","ok, let's see how this works :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,131,2017-04-08T09:01:36Z,2017-04-08T09:01:43Z,2017-04-08T12:45:53Z,MERGED,True,6,6,1,https://github.com/estebanlm,"and of course, as soon as I merged I discover there was something mis…",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/131,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/131,…sing…,…sing…,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,131,2017-04-08T09:01:36Z,2017-04-08T09:01:43Z,2017-04-08T12:45:53Z,MERGED,True,6,6,1,https://github.com/estebanlm,"and of course, as soon as I merged I discover there was something mis…",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/131,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/131#issuecomment-292715785,…sing…,"On Sat, Apr 8, 2017 at 5:01 PM, Esteban Lorenzano ***@***.***> wrote:
 …sing…

A new vocation?

cheers -ben",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,132,2017-04-11T08:49:17Z,2017-04-11T16:18:20Z,2017-04-11T16:18:20Z,MERGED,True,105,88,6,https://github.com/estebanlm,improve linux Threaded Heartbeat VM text and instructions,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/132,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/132,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,133,2017-04-12T08:50:44Z,2017-04-12T08:50:49Z,2017-04-12T08:50:49Z,MERGED,True,10,4,1,https://github.com/estebanlm,revert to ugly define because exeName is not present in all platforms,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/133,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/133,(which makes non-linux builds to fail),(which makes non-linux builds to fail),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,134,2017-04-25T11:06:20Z,2017-05-07T07:55:05Z,2017-05-07T07:55:31Z,CLOSED,False,15,17,2,https://github.com/kksubbu,added uuid-dev and other packages essential on Ubuntu,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/134,https://github.com/kksubbu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/134,"Added uuid-dev and other packages to let configure step proceed without failure on Ubuntu 64b. Without uuid-dev, configure will report an error about missing -luuid and stop.","Added uuid-dev and other packages to let configure step proceed without failure on Ubuntu 64b. Without uuid-dev, configure will report an error about missing -luuid and stop.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,134,2017-04-25T11:06:20Z,2017-05-07T07:55:05Z,2017-05-07T07:55:31Z,CLOSED,False,15,17,2,https://github.com/kksubbu,added uuid-dev and other packages essential on Ubuntu,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/134,https://github.com/kksubbu,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/134#issuecomment-299688941,"Added uuid-dev and other packages to let configure step proceed without failure on Ubuntu 64b. Without uuid-dev, configure will report an error about missing -luuid and stop.",Will submit pulls from a separate topic branch,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/kksubbu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-299717019,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","IIABDFI
Esteban rewrote the code that use -- for Pharo, preserving - for Squeak.  What's the problem??

_,,,^..^,,,_ (phone)
…
 On May 7, 2017, at 8:50 AM, Ben Coman ***@***.***> wrote:

 @bencoman requested changes on this pull request.

 Can we have some discussion on [vm-dev] about the flexibility of Squeakers to use double-hyphen options as default?

 In platforms/unix/vm/sqUnixMain.c:

 > @@ -1467,7 +1464,8 @@ static int vm_parseArgument(int argc, char **argv)

    /* vm arguments */

 -  if      (!strcmp(argv[0], VMOPTION(""help"")))		{ usage();		return 1; }
 +  if      (!strcmp(argv[0], VMOPTION(""help"")))		{ usage(0);         /*NOTREACHED*/}
 Would it be better to shift the exit() out of usage(), so that real code affection execution flow is used here rather than a comment. i.e. here... { usage(); exit(0) } ??

 In platforms/unix/vm/sqUnixMain.c:

 > @@ -1721,7 +1719,7 @@ static void usage(void)
    printf(""\nAvailable drivers:\n"");
    for (m= modules;  m->next;  m= m->next)
      printf(""  %s\n"", m->name);
 -  exit(1);
 +  exit(exitValue);
 Refactor the exit() out to the caller ??

 In platforms/unix/vm/sqUnixMain.c:

 > @@ -1819,7 +1817,8 @@ static void parseArguments(int argc, char **argv)
        if (n == 0)			/* option not recognised */
  	{
  	  fprintf(stderr, ""unknown option: %s\n"", argv[0]);
 -	  usage();
 +	  usage(1);
 +	  /*NOTREACHED*/
 Same as above, refactor exit out of usage() ? i.e. here...
 usage();
 exit(1)

 In platforms/unix/vm/sqUnixMain.c:

 >  {
    struct SqModule *m= 0;
    printf(""Usage: %s [<option>...] [<imageName> [<argument>...]]\n"", argVec[0]);
    printf(""       %s [<option>...] -- [<argument>...]\n"", argVec[0]);
 +  printf(""options begin with single -, but -- prefix is silently accepted\n"");
 The problem is that single-hyphen default is then what is advised by --help. Why isn't it preferable to conform to Unix conventions [1] ""The GNU double-hyphen option leader was chosen so that traditional single-letter options and GNU-style keyword options could be unambiguously mixed on the same command line. ""
 [1] http://www.catb.org/~esr/writings/taoup/html/ch10s05.html

 The single-hyphen could be silently accepted for backward compatibility. Maybe better would be a deprecated message, but perhaps that could adversely affect existing scripts(?).

 How do Squeakers feel about that?

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/kksubbu,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-300081379,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","A quick check for the patch:
$ cd oscogvm/build.linux64x64/squeak.cog.spur/build
$ for i in help version; do ./squeak -$i >/dev/null && echo pass; ./squeak --$i >/dev/null && echo pass; done
pass
pass
pass
pass
$ for i in help version; do ./squeak ---$i >/dev/null || echo pass; done
unknown option: --help
pass
unknown option: --version
pass",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/bencoman,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-300149111,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","But... $ pharo --help
shows...
-encoding        set the internal character encoding (default: MacRoman)
instead of...
--encoding        set the internal character encoding (default: MacRoman)
I don't know whether that is critical.  Its Esteban's call.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/bencoman,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-300153206,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","Also, I'm (only mildly) curious why the original...
{ versionInfo();	return 1; }
was changed to
{ versionInfo();	return 0; }
when at the end of vm_parseArgument() is has
return 0;	/* option not recognised */
Anyway it seems to have little impact.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/kksubbu,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-300207510,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","On Tuesday 09 May 2017 06:04 PM, Ben Coman wrote:
 But... $ pharo --help
 shows...
 -encoding set the internal character encoding (default: MacRoman)
 instead of...
 --encoding set the internal character encoding (default: MacRoman)
 I don't know whether that is critical. Its Esteban's call.
This is intentional. -encoding is the option, but --encoding is also
accepted as explained near the beginning of the help text.

Regards .. Subbu",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/kksubbu,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-300212293,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","On Tuesday 09 May 2017 06:22 PM, Ben Coman wrote:
 Also, I'm (only mildly) curious why the original...
 { versionInfo(); return 1; }
 was changed to
 { versionInfo(); return 0; }
 when at the end of vm_parseArgument() is has
 return 0; /* option not recognised */
this is because it could be valid option for another module/plugin. See
----
  modulesDo (m)
        if ((n= m->parseArgument(argc, argv)))
           break;
----
options which are not picked up by any module are caught just below this
code. Something like

   +<plugin>=opt1,opt2:value,...

would be more robust in avoid name clashes across modules, but the code
will get even more complex.

Regards .. Subbu",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/kksubbu,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-300388826,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","Fixed vm extensions to handle -/-- prefixes for options gracefully. Here is the smoke test script:
#!/bin/sh
for i in help version; do
	./squeak -$i >/dev/null && echo pass -$i
	./squeak --$i >/dev/null && echo pass --$i
	./squeak ---$i >/dev/null || echo pass ---$i
done &&
# test options for vm X11 and sound
for i in headless swapbtn jit nomixer; do
	./squeak --$i --help >/dev/null && echo pass --$i
	./squeak ---$i --help >/dev/null || echo pass ---$i
	./squeak ---$i >/dev/null || echo pass ---$i
done &&
# test options with arg
for i in memory title; do
	./squeak --$i 1024 --help >/dev/null && echo pass --$i
	./squeak ---$i 1024 --help >/dev/null || echo pass ---$i
	./squeak ---$i 1024 >/dev/null || echo pass ---$i
done && echo pass all",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,136,2017-05-07T08:57:36Z,2017-11-01T09:28:19Z,2017-11-01T09:28:19Z,MERGED,True,15,26,4,https://github.com/kksubbu,command line arguments use single dash prefix but also accept doubledash,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136,https://github.com/bencoman,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/136#issuecomment-333791630,"Unix conventions use -- for word options and - for single letter options. But this applies only to Unix commands and not to virtual machines like qemu or squeak.
PharoVM compile time macro replaced - with --. These modifications use a single dash in all help messages while recovering gracefully if two dashes are used for prefixes accomodating both classic squeak and the newer pharo usage.
Using -help or -version no longer exits with non-zero codes as they are valid usages.","I'm not sure my bike-shedding helped anything. Anyway, while this is waiting for authoritative go/nogo from a committer, I've done a another review just now and I'm satisfied with all the answers to my queries.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,137,2017-05-07T09:25:02Z,2017-05-08T18:34:13Z,2017-05-10T08:24:41Z,MERGED,True,1,2,1,https://github.com/kksubbu,[skip ci] uuid-dev is needed on Ubuntu for configure script.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/137,https://github.com/kksubbu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/137,Updated build instructions to add uuid-dev and GL libraries for configure script to run on Ubuntu. Without uuid-dev configure would fail with an error message about missing uuid library.,Updated build instructions to add uuid-dev and GL libraries for configure script to run on Ubuntu. Without uuid-dev configure would fail with an error message about missing uuid library.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,137,2017-05-07T09:25:02Z,2017-05-08T18:34:13Z,2017-05-10T08:24:41Z,MERGED,True,1,2,1,https://github.com/kksubbu,[skip ci] uuid-dev is needed on Ubuntu for configure script.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/137,https://github.com/kksubbu,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/137#issuecomment-300075444,Updated build instructions to add uuid-dev and GL libraries for configure script to run on Ubuntu. Without uuid-dev configure would fail with an error message about missing uuid library.,"On Tuesday 09 May 2017 12:04 AM, Eliot Miranda wrote:
 Hi Subbu; this should surely be in all the linux HowToBuilds, no?
Yes. I just haven't tested it on all variants.

IMHO, it is better to have one build folder for all linux builds and
handle variants like insruction set architecture, wordsize etc. within
that build. Linux has a much large number of variants compared to other
platforms, but it is easy to detect them on the fly (e.g. package name
varying by distro) through scripts/* and makefiles.

Regards .. Subbu",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,138,2017-05-11T06:59:21Z,2017-05-13T18:04:34Z,2019-05-11T01:05:57Z,MERGED,True,963,85,10,https://github.com/ronsaldo,Fixing Pharo SDL2 on OS X,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138,"This pull request fixes the Pharo SDL2 bindings by ensuring to restore the OpenGL context that is used by the image whenever a display primitive changes. Snippet for testing in Pharo:
FFIExternalStructure withAllSubclassesDo: #rebuildFieldAccessors.
OSWindowGenericRendererDrawingExample new open.","This pull request fixes the Pharo SDL2 bindings by ensuring to restore the OpenGL context that is used by the image whenever a display primitive changes. Snippet for testing in Pharo:
FFIExternalStructure withAllSubclassesDo: #rebuildFieldAccessors.
OSWindowGenericRendererDrawingExample new open.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,138,2017-05-11T06:59:21Z,2017-05-13T18:04:34Z,2019-05-11T01:05:57Z,MERGED,True,963,85,10,https://github.com/ronsaldo,Fixing Pharo SDL2 on OS X,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138#issuecomment-301237231,"This pull request fixes the Pharo SDL2 bindings by ensuring to restore the OpenGL context that is used by the image whenever a display primitive changes. Snippet for testing in Pharo:
FFIExternalStructure withAllSubclassesDo: #rebuildFieldAccessors.
OSWindowGenericRendererDrawingExample new open.","hey @ronsaldo
what about the B3D plugin makefile? I know Eliot has been working on it... it will not interfere?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,138,2017-05-11T06:59:21Z,2017-05-13T18:04:34Z,2019-05-11T01:05:57Z,MERGED,True,963,85,10,https://github.com/ronsaldo,Fixing Pharo SDL2 on OS X,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138,https://github.com/ronsaldo,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138#issuecomment-301263527,"This pull request fixes the Pharo SDL2 bindings by ensuring to restore the OpenGL context that is used by the image whenever a display primitive changes. Snippet for testing in Pharo:
FFIExternalStructure withAllSubclassesDo: #rebuildFieldAccessors.
OSWindowGenericRendererDrawingExample new open.","Hi @estebanlm
I am working with Eliot on this for a client. As for the B3D makefile, Eliot told me about the -Wl,-U...for accesing some functions on the main window. Last night I tested it with Squeak 5.1.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,138,2017-05-11T06:59:21Z,2017-05-13T18:04:34Z,2019-05-11T01:05:57Z,MERGED,True,963,85,10,https://github.com/ronsaldo,Fixing Pharo SDL2 on OS X,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138,https://github.com/estebanlm,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/138#issuecomment-301264422,"This pull request fixes the Pharo SDL2 bindings by ensuring to restore the OpenGL context that is used by the image whenever a display primitive changes. Snippet for testing in Pharo:
FFIExternalStructure withAllSubclassesDo: #rebuildFieldAccessors.
OSWindowGenericRendererDrawingExample new open.",ok,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,139,2017-05-12T23:29:49Z,2017-05-13T08:46:27Z,2017-05-13T08:46:27Z,MERGED,True,29,8,13,https://github.com/sophie-kaleba,add linux and mac VMProfilePlugins for Pharo,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/139,https://github.com/sophie-kaleba,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/139,"The VMProfiler is currently being ported to Pharo. These light plugins are needed to make it work.
see : http://forum.world.st/Missing-plugins-to-make-the-vmProfiler-work-on-Pharo-td4946444.html","The VMProfiler is currently being ported to Pharo. These light plugins are needed to make it work.
see : http://forum.world.st/Missing-plugins-to-make-the-vmProfiler-work-on-Pharo-td4946444.html",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,140,2017-05-25T14:32:54Z,2017-05-26T11:58:35Z,2017-05-26T11:58:42Z,MERGED,True,262,67,3,https://github.com/nicolas-cellier-aka-nice,Monty fix fopen race,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/140,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/140,"OK, the unix/mac build pass with one exception which is not new
If ever someoneelse wants to have a look I let a few hours for review.","OK, the unix/mac build pass with one exception which is not new
If ever someoneelse wants to have a look I let a few hours for review.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,142,2017-06-21T15:39:58Z,2017-06-28T09:28:09Z,2017-06-28T09:28:19Z,MERGED,True,25,9,7,https://github.com/estebanlm,updates libgit2 for pharo-vm and some other plugins,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/142,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/142,"also it adds files for compiling on freebsd, etc.","also it adds files for compiling on freebsd, etc.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,142,2017-06-21T15:39:58Z,2017-06-28T09:28:09Z,2017-06-28T09:28:19Z,MERGED,True,25,9,7,https://github.com/estebanlm,updates libgit2 for pharo-vm and some other plugins,17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/142,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/142#issuecomment-311606969,"also it adds files for compiling on freebsd, etc.",merged because is ok :),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,143,2017-07-03T06:23:01Z,2017-07-03T16:16:11Z,2018-02-05T02:59:34Z,MERGED,True,127,0,1,https://github.com/akgrant43,Add checkoutVMbyDate,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/143,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/143,"checkoutVMbyDate is a convenience script to check out the commit of a
particular VM.","checkoutVMbyDate is a convenience script to check out the commit of a
particular VM.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,143,2017-07-03T06:23:01Z,2017-07-03T16:16:11Z,2018-02-05T02:59:34Z,MERGED,True,127,0,1,https://github.com/akgrant43,Add checkoutVMbyDate,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/143,https://github.com/kksubbu,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/143#issuecomment-312595474,"checkoutVMbyDate is a convenience script to check out the commit of a
particular VM.","Alistair,
You could use awk to simplify extraction of date string:
vs1=$($pharoexe --version | awk -F\$ '/Date/ {print substr($2,8,24)}'

For example,
$ ./pharo Pharo --version | awk -F\$ '/Date/ {print substr($2,8,24)}'
Tue May 30 19:41:27 2017",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,144,2017-07-18T09:09:44Z,2018-08-19T09:20:04Z,2018-08-19T09:20:05Z,CLOSED,False,0,19,1,https://github.com/lukego,sqUnixHeartbeat.c: Remove warning about thread priorities,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/144,https://github.com/lukego,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/144,"JFYI: This is a patch that I applied on my own application-specific branch.

The default behavior is to print a loud warning about thread
priorities and ask the user to update the Linux kernel configuration
to allow Squeak a higher-priority thread.
pthread_setschedparam failed: Operation not permitted
This VM uses a separate heartbeat thread to update its internal clock
and handle events.  For best operation, this thread should run at a
higher priority, however the VM was unable to change the priority.  The
effect is that heavily loaded systems may experience some latency
issues.  If this occurs, please create the appropriate configuration
file in /etc/security/limits.d/ as shown below:

cat <<END | sudo tee /etc/security/limits.d/pharo.conf
*      hard    rtprio  2
*      soft    rtprio  2
END

and report to the pharo mailing list whether this improves behaviour.

You will need to log out and log back in for the limits to take effect.
For more information please see
https://github.com/OpenSmalltalk/opensmalltalk-vm/releases/tag/r3732#linux

I am removing this message for a combination of reasons:

Is there really a problem? How to demonstrate it?
Is this really a solution? How to demonstrate it?
Is there potential for unintended system-wide consequences?
Could we lower the prio of the main thread instead?
No option to suppress this message if you don't want to see it?

Generally I am skeptical that Linux needs any scheduler tweaks for
~millisecond response time (that's not very tight) and if the system
really is overloaded then I don't think it's safe to assume the user
wants Pharo to clobber all the other work.
The printed instructions are also distro-specific and won't work on
NixOS, which makes it all the more bothersome to see that message
every single time Pharo is started, and in all log files, etc...","JFYI: This is a patch that I applied on my own application-specific branch.

The default behavior is to print a loud warning about thread
priorities and ask the user to update the Linux kernel configuration
to allow Squeak a higher-priority thread.
pthread_setschedparam failed: Operation not permitted
This VM uses a separate heartbeat thread to update its internal clock
and handle events.  For best operation, this thread should run at a
higher priority, however the VM was unable to change the priority.  The
effect is that heavily loaded systems may experience some latency
issues.  If this occurs, please create the appropriate configuration
file in /etc/security/limits.d/ as shown below:

cat <<END | sudo tee /etc/security/limits.d/pharo.conf
*      hard    rtprio  2
*      soft    rtprio  2
END

and report to the pharo mailing list whether this improves behaviour.

You will need to log out and log back in for the limits to take effect.
For more information please see
https://github.com/OpenSmalltalk/opensmalltalk-vm/releases/tag/r3732#linux

I am removing this message for a combination of reasons:

Is there really a problem? How to demonstrate it?
Is this really a solution? How to demonstrate it?
Is there potential for unintended system-wide consequences?
Could we lower the prio of the main thread instead?
No option to suppress this message if you don't want to see it?

Generally I am skeptical that Linux needs any scheduler tweaks for
~millisecond response time (that's not very tight) and if the system
really is overloaded then I don't think it's safe to assume the user
wants Pharo to clobber all the other work.
The printed instructions are also distro-specific and won't work on
NixOS, which makes it all the more bothersome to see that message
every single time Pharo is started, and in all log files, etc...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,144,2017-07-18T09:09:44Z,2018-08-19T09:20:04Z,2018-08-19T09:20:05Z,CLOSED,False,0,19,1,https://github.com/lukego,sqUnixHeartbeat.c: Remove warning about thread priorities,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/144,https://github.com/jecisc,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/144#issuecomment-345460065,"JFYI: This is a patch that I applied on my own application-specific branch.

The default behavior is to print a loud warning about thread
priorities and ask the user to update the Linux kernel configuration
to allow Squeak a higher-priority thread.
pthread_setschedparam failed: Operation not permitted
This VM uses a separate heartbeat thread to update its internal clock
and handle events.  For best operation, this thread should run at a
higher priority, however the VM was unable to change the priority.  The
effect is that heavily loaded systems may experience some latency
issues.  If this occurs, please create the appropriate configuration
file in /etc/security/limits.d/ as shown below:

cat <<END | sudo tee /etc/security/limits.d/pharo.conf
*      hard    rtprio  2
*      soft    rtprio  2
END

and report to the pharo mailing list whether this improves behaviour.

You will need to log out and log back in for the limits to take effect.
For more information please see
https://github.com/OpenSmalltalk/opensmalltalk-vm/releases/tag/r3732#linux

I am removing this message for a combination of reasons:

Is there really a problem? How to demonstrate it?
Is this really a solution? How to demonstrate it?
Is there potential for unintended system-wide consequences?
Could we lower the prio of the main thread instead?
No option to suppress this message if you don't want to see it?

Generally I am skeptical that Linux needs any scheduler tweaks for
~millisecond response time (that's not very tight) and if the system
really is overloaded then I don't think it's safe to assume the user
wants Pharo to clobber all the other work.
The printed instructions are also distro-specific and won't work on
NixOS, which makes it all the more bothersome to see that message
every single time Pharo is started, and in all log files, etc...",What is the status of the PR? It would be good to have less warning. It create a lot of noise in CI logs.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,144,2017-07-18T09:09:44Z,2018-08-19T09:20:04Z,2018-08-19T09:20:05Z,CLOSED,False,0,19,1,https://github.com/lukego,sqUnixHeartbeat.c: Remove warning about thread priorities,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/144,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/144#issuecomment-414114830,"JFYI: This is a patch that I applied on my own application-specific branch.

The default behavior is to print a loud warning about thread
priorities and ask the user to update the Linux kernel configuration
to allow Squeak a higher-priority thread.
pthread_setschedparam failed: Operation not permitted
This VM uses a separate heartbeat thread to update its internal clock
and handle events.  For best operation, this thread should run at a
higher priority, however the VM was unable to change the priority.  The
effect is that heavily loaded systems may experience some latency
issues.  If this occurs, please create the appropriate configuration
file in /etc/security/limits.d/ as shown below:

cat <<END | sudo tee /etc/security/limits.d/pharo.conf
*      hard    rtprio  2
*      soft    rtprio  2
END

and report to the pharo mailing list whether this improves behaviour.

You will need to log out and log back in for the limits to take effect.
For more information please see
https://github.com/OpenSmalltalk/opensmalltalk-vm/releases/tag/r3732#linux

I am removing this message for a combination of reasons:

Is there really a problem? How to demonstrate it?
Is this really a solution? How to demonstrate it?
Is there potential for unintended system-wide consequences?
Could we lower the prio of the main thread instead?
No option to suppress this message if you don't want to see it?

Generally I am skeptical that Linux needs any scheduler tweaks for
~millisecond response time (that's not very tight) and if the system
really is overloaded then I don't think it's safe to assume the user
wants Pharo to clobber all the other work.
The printed instructions are also distro-specific and won't work on
NixOS, which makes it all the more bothersome to see that message
every single time Pharo is started, and in all log files, etc...","Is there really a problem? How to demonstrate it?

According to #275 (comment) and #275 (comment), there is.
I'm afraid we can't just remove that message. You should, however, be able to suppress the warning by redirecting stderr to /dev/null/ (via 2>/dev/null). I would not be opposed to adding a flag for this as well (e.g. -suppress-rtprio-warning).
Closing this in favor of #275.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,145,2017-07-18T18:01:56Z,2017-07-18T20:17:46Z,2017-07-18T20:17:46Z,MERGED,True,12,12,1,https://github.com/zecke,vm-sound-pulse: Change return value from int to void,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/145,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/145,"These routines didn't return anything and callers didn't seem to check
the return value. Change to void to fix these warnings:
E: no-return-in-nonvoid-function platforms/unix/vm-sound-pulse/sqUnixSoundPulseAudio.c:455, 519, 528, 600, 713, 821, 814","These routines didn't return anything and callers didn't seem to check
the return value. Change to void to fix these warnings:
E: no-return-in-nonvoid-function platforms/unix/vm-sound-pulse/sqUnixSoundPulseAudio.c:455, 519, 528, 600, 713, 821, 814",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,147,2017-08-25T15:18:01Z,2017-11-09T23:00:23Z,2018-02-05T02:59:38Z,MERGED,True,8,0,1,https://github.com/akgrant43,Issue 20294 Add FileAttributesPlugin to the linux 32 bit VM,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147,"Add the windows support code for the FileAttributesPlugin:
platforms/win32/plugins/FileAttributesPlugin/sqWin32File.h","Add the windows support code for the FileAttributesPlugin:
platforms/win32/plugins/FileAttributesPlugin/sqWin32File.h",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,147,2017-08-25T15:18:01Z,2017-11-09T23:00:23Z,2018-02-05T02:59:38Z,MERGED,True,8,0,1,https://github.com/akgrant43,Issue 20294 Add FileAttributesPlugin to the linux 32 bit VM,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147#issuecomment-324992039,"Add the windows support code for the FileAttributesPlugin:
platforms/win32/plugins/FileAttributesPlugin/sqWin32File.h","Hi Alistair,
I think better than duplicating sqWin32File.h is to add a Makefile.plugin to add FilePlugin as an include path.  It would look like this:
platforms/win32/plugins/FileAttributesPlugin/Makefile.plugin:
INCLUDES += -I$(WIN32PLUGINSDIR)/FilePlugin
See for example platforms/win32/plugins/Win32OSProcessPlugin/Makefile.plugin",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,147,2017-08-25T15:18:01Z,2017-11-09T23:00:23Z,2018-02-05T02:59:38Z,MERGED,True,8,0,1,https://github.com/akgrant43,Issue 20294 Add FileAttributesPlugin to the linux 32 bit VM,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147#issuecomment-325113774,"Add the windows support code for the FileAttributesPlugin:
platforms/win32/plugins/FileAttributesPlugin/sqWin32File.h","Hi Eliot,
Thanks!  That's a much better solution.
I've updated the branch to add the makefile and removed the copy of sqWin32File.h.  The PR should contain 2 commits, with one file changed (the addition of Makefile.plugin).
Thanks again,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,147,2017-08-25T15:18:01Z,2017-11-09T23:00:23Z,2018-02-05T02:59:38Z,MERGED,True,8,0,1,https://github.com/akgrant43,Issue 20294 Add FileAttributesPlugin to the linux 32 bit VM,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147#issuecomment-325195106,"Add the windows support code for the FileAttributesPlugin:
platforms/win32/plugins/FileAttributesPlugin/sqWin32File.h","Just note that failures are unrelated, so this should not prevent acceptance of this PR
For Pharo win64 it's the obsolete libpng link problem
For non windows spur Squeak, it's the testBecomeHash that fails.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,147,2017-08-25T15:18:01Z,2017-11-09T23:00:23Z,2018-02-05T02:59:38Z,MERGED,True,8,0,1,https://github.com/akgrant43,Issue 20294 Add FileAttributesPlugin to the linux 32 bit VM,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/147#issuecomment-325195741,"Add the windows support code for the FileAttributesPlugin:
platforms/win32/plugins/FileAttributesPlugin/sqWin32File.h","Nicolas, thanks for your review and approval.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325194056,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","As usual, failures are unrelated...
But why change the ftp address to http?
And why 1.6.30 and not 1.6.32?
It seems there are later vulnerability fixes.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325194695,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","Hi Nicolas,

But why change the ftp address to http?

Only because that's the address I found on what I believe is the
official home page (happy to be corrected).

And why 1.6.30 and not 1.6.32?

Sigh...  Yesterday .30 was the latest version.
Given the comment about .31 I assume they reverted back to .30 as soon
as they found the bug, and have now resolved it in .32.

It seems there are later vulnerability fixes.

I'll update the branch and re-test (hopefully tonight).
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325194933,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","Hi Alistair,
I suggest you let the ftp address unchanged (it still is valid and linked from there front page), switch to 1.6.32, and I'll accept the new PR immediately 👍  (hoping we'll be faster than libpng team)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325195686,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","Hi Nicolas,

I suggest you let the ftp address unchanged (it still is valid and linked from there front page)

I can't find any reference to simplesystems, i.e.:
ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng16/libpng-1.6.x.tar.gz
from: http://www.libpng.org/pub/png/libpng.html (which is the official home page?)
The reason I changed to sourceforge was that what was the then current version (.30) wasn't available at simplesystems.  My guess is that it was still hosting .31 (the broken version).
Sourceforge also seems to be much faster than simplesystems for me, 0.5s vs 91s

switch to 1.6.32, and I'll accept the new PR immediately 👍 (hoping we'll be faster than libpng team)

Sure, I'll change it back to simplesystems, 0.32, do a test build and let you know.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325196923,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","Oh, I see, they switched, as explained at https://libpng.sourceforge.io/

The previous ftp site is still being maintained at ftp://ftp.simplesystems.org/pub/png, but the OSUOSL site is much faster and has a more complete archive of old versions.

I just checked that 1.6.32 was available at ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng16/
I cannot list the new ftp site thru fireftp client, while it works for the old (???)
So for the moment I suggest keeping the old ftp site as long as it is maintained...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/akgrant43,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325202371,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","Hi Nicolas,
Done...
You should see 2 commits with 1 file changed (just 29 -> 32).
Just FYI, using Chrome I can get a directory listing from both:
ftp://ftp.simplesystems.org/pub/png/src/libpng16/
ftp://ftp-osl.osuosl.org/pub/libpng/src/libpng16/
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/nicolas-cellier-aka-nice,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325220550,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","OK, that's just fireftp which hangs, I can see the ftp contents thru MacOSX Finder",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,148,2017-08-27T08:16:29Z,2017-08-27T19:55:26Z,2018-02-05T02:59:42Z,MERGED,True,3,3,1,https://github.com/akgrant43,20341-libpng-source-is-no-longer-available,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148,https://github.com/akgrant43,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/148#issuecomment-325226162,"The source at ftp.simplesystems.org seems to have gone away.
Based on information at http://www.libpng.org/pub/png/libpng.html
update the download url to point to sourceforge and update to 1.6.30.","Thanks, Nicolas!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,149,2017-08-29T21:48:56Z,2017-08-30T11:17:05Z,2017-08-30T11:17:15Z,MERGED,True,9,16,9,https://github.com/nicolas-cellier-aka-nice,Compile SqueakSSL plugin on windows,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/149,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/149,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,155,2017-10-07T19:31:12Z,2018-10-18T16:45:09Z,2018-11-07T15:08:01Z,MERGED,True,5,3,1,https://github.com/michael-roe,Added X11 support for horizontal scroll wheel.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155,https://github.com/michael-roe,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155,"Added X11 support for mice with a horizontal scroll wheel, such as Apple mice.","Added X11 support for mice with a horizontal scroll wheel, such as Apple mice.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,155,2017-10-07T19:31:12Z,2018-10-18T16:45:09Z,2018-11-07T15:08:01Z,MERGED,True,5,3,1,https://github.com/michael-roe,Added X11 support for horizontal scroll wheel.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155,https://github.com/michael-roe,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155#issuecomment-335040384,"Added X11 support for mice with a horizontal scroll wheel, such as Apple mice.","In the Pharo bug tracker, issue #4795 ""Horizontal wheel events"" explains why this fix will be problematic: control+left/right arrow are used for other purposes (moving by a word in the text editor), so we can't use this key combination to represent a scroll wheel event without breaking its other use as a shortcut in the text editor.
In the Mac OS virtual machine, fakeMouseWheelKeyboardEvents() in sqMacUIEvents.c has an #ifdef PharoVM to use control+option+command+shift+cursor key for mouse wheel events, avoiding the clash with the text editor's keyboard shortcut. We could do this in the Unix virtual machine as well.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,155,2017-10-07T19:31:12Z,2018-10-18T16:45:09Z,2018-11-07T15:08:01Z,MERGED,True,5,3,1,https://github.com/michael-roe,Added X11 support for horizontal scroll wheel.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155#issuecomment-430907906,"Added X11 support for mice with a horizontal scroll wheel, such as Apple mice.","@eliotmiranda, any thoughts here? Otherwise, I'd just merge and see",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,155,2017-10-07T19:31:12Z,2018-10-18T16:45:09Z,2018-11-07T15:08:01Z,MERGED,True,5,3,1,https://github.com/michael-roe,Added X11 support for horizontal scroll wheel.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155#issuecomment-431010210,"Added X11 support for mice with a horizontal scroll wheel, such as Apple mice.",No thoughts.  I’m not doing much work on Linux these days.  So I agree.  Let’s merge and see what happens.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,155,2017-10-07T19:31:12Z,2018-10-18T16:45:09Z,2018-11-07T15:08:01Z,MERGED,True,5,3,1,https://github.com/michael-roe,Added X11 support for horizontal scroll wheel.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/155#issuecomment-436654622,"Added X11 support for mice with a horizontal scroll wheel, such as Apple mice.","and on iOS (the Cocoa Mac OS/iPhone platforms) the same approach is taken in fakeMouseWheelKeyboardEventsKeyCode:windowIndex:
evt.modifiers = (CtrlKeyBit | OptionKeyBit | CommandKeyBit | ShiftKeyBit);

So I shall modify the X11 code to do the same.  And I shall comment the code.  These things NEED TO BE COMMENTED :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,156,2017-10-09T16:50:05Z,2017-10-10T19:12:32Z,2017-10-10T19:17:53Z,MERGED,True,3,3,1,https://github.com/zecke,"openssl: Upgrade to minor release ""l"" to address multiple issues",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156,"According to https://www.openssl.org/news/vulnerabilities.html#y2017
this should fix:
CVE-2017-3731, CVE-2017-3732, CVE-2016-7055.
The download should have the sha256sum of:
ce07195b659e75f4e1db43552860070061f156a98bb37b672b101ba6e3ddf30c","According to https://www.openssl.org/news/vulnerabilities.html#y2017
this should fix:
CVE-2017-3731, CVE-2017-3732, CVE-2016-7055.
The download should have the sha256sum of:
ce07195b659e75f4e1db43552860070061f156a98bb37b672b101ba6e3ddf30c",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,156,2017-10-09T16:50:05Z,2017-10-10T19:12:32Z,2017-10-10T19:17:53Z,MERGED,True,3,3,1,https://github.com/zecke,"openssl: Upgrade to minor release ""l"" to address multiple issues",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156#issuecomment-335221124,"According to https://www.openssl.org/news/vulnerabilities.html#y2017
this should fix:
CVE-2017-3731, CVE-2017-3732, CVE-2016-7055.
The download should have the sha256sum of:
ce07195b659e75f4e1db43552860070061f156a98bb37b672b101ba6e3ddf30c","+1 for this change but is it sustainable?
I understand that declaring a specific version is a good recipe for having reproducible artefacts.
But we are then taking responsibilities wrt security and somehow duplicating the work made in OS distributions. Can we really assume these responsibilities, or should we employ our scarce resources to more Smalltalk-specific tasks?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,156,2017-10-09T16:50:05Z,2017-10-10T19:12:32Z,2017-10-10T19:17:53Z,MERGED,True,3,3,1,https://github.com/zecke,"openssl: Upgrade to minor release ""l"" to address multiple issues",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156,https://github.com/zecke,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156#issuecomment-335352390,"According to https://www.openssl.org/news/vulnerabilities.html#y2017
this should fix:
CVE-2017-3731, CVE-2017-3732, CVE-2016-7055.
The download should have the sha256sum of:
ce07195b659e75f4e1db43552860070061f156a98bb37b672b101ba6e3ddf30c","Well my personal opinion doesn't really matter here. As OpenSSL is not a system library on Windows OpenSSL we"" have assumed this responsibility. Luckily for freetype2, libpng, and OpenSSL (which are currently vulnerable) the risk of upgrade is low (API stability, minor versions are maintained)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,156,2017-10-09T16:50:05Z,2017-10-10T19:12:32Z,2017-10-10T19:17:53Z,MERGED,True,3,3,1,https://github.com/zecke,"openssl: Upgrade to minor release ""l"" to address multiple issues",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/156#issuecomment-335577340,"According to https://www.openssl.org/news/vulnerabilities.html#y2017
this should fix:
CVE-2017-3731, CVE-2017-3732, CVE-2016-7055.
The download should have the sha256sum of:
ce07195b659e75f4e1db43552860070061f156a98bb37b672b101ba6e3ddf30c","Funnily enough, it seems that the build failed not because of your PR, but because wget libpng failed (they have a strict policy: remove their tarball as soon as a security issue is fixed). I still think that we can't run after such train...
Note that since we use the cygwin distribution for mingw target, (the mingw version of) openssl is built and updated by cygwin folks... So even if it is not purely OS provided, it's cared of by maintainers one layer above.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/jecisc,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-339999626,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.",This bug this PR correct is really bothering for industrial applications to deploy on Windows. Thank you!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-340224686,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","OK, it seems that you are after the right bug.
If I rephrase: ALLOC_WIN32_PATH macro does handle path longer than MAX_PATH with \\?\ prefix
When path is shorter, but path+name is longer than MAX_PATH, we go thru  REALLOC_WIN32_PATH which does nothing for long path...
However, I don't think that the fix is correct...
IMO, the fix could be done using strncpy with prescribed Smalltalk string length
and we don't need a terminating NULL character since ALLOC_WIN32_PATH does not require one",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-340276614,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","I have pushed a concurrent solution in the FIX_WIN32_LONG_FILENAME branch.
It rather fix the REALLOC_WIN32_PATH macro.
It may seem more complex than strncpy solution though.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/estebanlm,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-340286870,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","I really don't care as long as the problem is solve, but... why to use macros when we could use functions?
They are a lot easier to understand/debug.
What's the gain on rely on macros?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-340528047,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","I think that using a macro was essentially for using alloca instead of malloc.
Using alloca in a function that would then return a dangling pointer would not be a good idea, would it?
The macro can also directly invoke FAIL(), while I'm not so sure that a function could. We would have to write more code for checking invalid output after calling the function, so the macro somehow factor that code.
I have chosen to change the REALLOC_WIN32_PATH macro for 2 reasons:

it is used twice (in the directory lookup too)
I overlooked all the #if !defined(WIN_CE) part, and thought it was safer to make a more local change for not breaking anything.

Now having two similar macros doing essentially the same thing smells, and your solution would be much nicer and simpler if it were correct. Do you want to correct it, or should I proceed?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/estebanlm,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-340530218,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","it was essential? I had no idea.
Please go ahead with the correction, I have really little time this days (and I'm traveling to Argentina friday).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/nicolas-cellier-aka-nice,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-340532458,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","The main problem with malloc is that we must not forget to free in every possible failure case, or we'll get a leaking heap... So yes, I think it was easier to alloca.
I think that the author started to patch one place, then realized he had to repeat same job again and again. I'm not a big fan of macros in C, but this is a case where it can save time/bugs.
I will try to implement a solution based on yours tonight and keep a single macro instead of two.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/jecisc,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-368006358,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.","@nicolas-cellier-aka-nice Was your version implemented/integrated?
Since there is no reference to this PR it's hard to know if it was redone.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/nicolas-cellier-aka-nice,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-368258028,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.",#162,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,161,2017-10-27T15:10:27Z,2017-10-30T20:09:32Z,2018-02-24T21:28:21Z,CLOSED,False,8,10,1,https://github.com/estebanlm,fix the preparation of windows paths for dir_EntryLookup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161,https://github.com/jecisc,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/161#issuecomment-368261633,"if path+name was bigger than 260 but name was smaller, then the conversion was not being applied.
This breaks the function when trying to check for files that actually valid.",Thank you for the info!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,162,2017-10-30T20:27:00Z,2017-10-31T07:16:11Z,2018-12-10T22:06:46Z,MERGED,True,46,57,2,https://github.com/nicolas-cellier-aka-nice,Fix win32 long filename,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/162,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/162,"original algorithm did fail to prepend win32Path with '\\?\' when path name length was beyond the limit, but path name length + file name length was over the limit...
IOW pathLength<MAX_PATH-12 && pathLength+nameStringLength>MAX_PATH","original algorithm did fail to prepend win32Path with '\\?\' when path name length was beyond the limit, but path name length + file name length was over the limit...
IOW pathLength<MAX_PATH-12 && pathLength+nameStringLength>MAX_PATH",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,165,2017-11-03T11:37:37Z,2017-11-09T22:51:44Z,2017-11-14T19:25:29Z,MERGED,True,10,0,1,None,Fix #164,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/165,None,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/165,This changes .appveyor.yml to build Win32 Lowcode VMs.,This changes .appveyor.yml to build Win32 Lowcode VMs.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,None,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.","To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166#issuecomment-343326152,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.","Sounds reasonnable., I presume that the flags enable software DEP.
Would activation of DEP still be enabling the JIT?
(I understand that activation of DEP is configured somewhere else in the system, so it should not prevent inclusion of this PR)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,None,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166#issuecomment-343543027,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.","Yes, my VM has ASLR and DEP on and it works.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166#issuecomment-343591147,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.","My question was probably completely irrelevant because DEP honours the executable page flags, and we explicitly ask for executable pages for the JIT don't we?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,None,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166#issuecomment-343659506,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.","Yes, you do, because otherwise my changed VM would crash.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166#issuecomment-348426694,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.","Hi Luis, I would have expected to be redirected to usage of PAGE_EXECUTE_* macro or sqMakeMemoryExecutableFromTo() in initializeCodeZoneFromupTo() rather than just it works for me ;)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,https://github.com/nicolas-cellier-aka-nice,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166#issuecomment-348426998,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.",What about win64?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,166,2017-11-03T12:11:52Z,2017-12-01T07:55:08Z,2017-12-02T18:47:10Z,MERGED,True,1,1,1,None,Enable ASLR and DEP in Win32,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166,None,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/166#issuecomment-348711726,"To increase the security of native code running in the VM against buffer overflows and other attacks, Address Space Layout Randomisation (ASLR) and Data Execution Prevention (DEP) can be enabled.
This pull request changes Makefile.tools for win32 to enable ASLR and DEP.
I've modified the PE header of Squeak.exe locally and it works.",Line 207 in sqWin32SpurAlloc.c contains PAGE_EXECUTE_READWRITE in sqMakeMemoryExecutableFromTo.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,167,2017-11-07T20:09:49Z,2017-11-09T22:42:31Z,2017-11-09T22:42:31Z,MERGED,True,12,3,3,https://github.com/ckeen,Improve OpenBSD support (base files),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167,https://github.com/ckeen,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167,"Hi,
These rather simple patches enable the compilation of the base source files. The build script adaption will happen in a separate pull request as this might require further refactoring of the existing build infrastructure so as not to break other platforms.
Note, that I have not tested the i386 related patches due to lack of HW. They do look Ok though.","Hi,
These rather simple patches enable the compilation of the base source files. The build script adaption will happen in a separate pull request as this might require further refactoring of the existing build infrastructure so as not to break other platforms.
Note, that I have not tested the i386 related patches due to lack of HW. They do look Ok though.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,167,2017-11-07T20:09:49Z,2017-11-09T22:42:31Z,2017-11-09T22:42:31Z,MERGED,True,12,3,3,https://github.com/ckeen,Improve OpenBSD support (base files),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167,https://github.com/ckeen,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167#issuecomment-343301303,"Hi,
These rather simple patches enable the compilation of the base source files. The build script adaption will happen in a separate pull request as this might require further refactoring of the existing build infrastructure so as not to break other platforms.
Note, that I have not tested the i386 related patches due to lack of HW. They do look Ok though.",I have no idea how to read those Travis logs but it looks like that is not related to my changes?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,167,2017-11-07T20:09:49Z,2017-11-09T22:42:31Z,2017-11-09T22:42:31Z,MERGED,True,12,3,3,https://github.com/ckeen,Improve OpenBSD support (base files),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167#issuecomment-343315188,"Hi,
These rather simple patches enable the compilation of the base source files. The build script adaption will happen in a separate pull request as this might require further refactoring of the existing build infrastructure so as not to break other platforms.
Note, that I have not tested the i386 related patches due to lack of HW. They do look Ok though.","For the linux32 pharo vm, it's libgit2 compilation that fails with

error: size of array ‘curl_rule_01’ is negative

see https://travis-ci.org/OpenSmalltalk/opensmalltalk-vm/jobs/298742876
and https://stackoverflow.com/questions/35181744/size-of-array-curl-rule-01-is-negative
For the linux32 squeak VM, it seems that the test phase stale

Running suite ""Squeak-5.1 on TravisCI (873.9)"" with 3699 tests.
...snip...
No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.

https://travis-ci.org/OpenSmalltalk/opensmalltalk-vm/jobs/298742871
What we need to check is the build status before the PR. I'm not sure it was ever green for a long time... (that ---biiiiiiiiiip--- !!!)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,167,2017-11-07T20:09:49Z,2017-11-09T22:42:31Z,2017-11-09T22:42:31Z,MERGED,True,12,3,3,https://github.com/ckeen,Improve OpenBSD support (base files),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/167#issuecomment-343316106,"Hi,
These rather simple patches enable the compilation of the base source files. The build script adaption will happen in a separate pull request as this might require further refactoring of the existing build infrastructure so as not to break other platforms.
Note, that I have not tested the i386 related patches due to lack of HW. They do look Ok though.","Hmm I just reviewed the changes, there's not a chance out of a million that it would change the linux build status, so I'm accepting immediately",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,168,2017-11-09T01:45:01Z,,2020-09-10T18:31:21Z,OPEN,False,392,294,24,https://github.com/ronsaldo,Feature lowcode linux build scripts update,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,Updating the Linux Lowcode VM building scripts.,Updating the Linux Lowcode VM building scripts.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,168,2017-11-09T01:45:01Z,,2020-09-10T18:31:21Z,OPEN,False,392,294,24,https://github.com/ronsaldo,Feature lowcode linux build scripts update,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,https://github.com/ronsaldo,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168#issuecomment-343023593,Updating the Linux Lowcode VM building scripts.,"I see this error. Do not integrate yet.
libtool: link: gcc -m64 -shared  -fPIC -DPIC  .libs/SDL2DisplayPlugin.o   -lSDL2  -m64 -O2 -msse2 -Wl,-z -Wl,now   -Wl,-soname -Wl,SDL2DisplayPlugin.so -o .libs/SDL2DisplayPlugin.so
/usr/bin/ld: cannot find -lSDL2",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,168,2017-11-09T01:45:01Z,,2020-09-10T18:31:21Z,OPEN,False,392,294,24,https://github.com/ronsaldo,Feature lowcode linux build scripts update,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,https://github.com/ronsaldo,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168#issuecomment-343025526,Updating the Linux Lowcode VM building scripts.,I see that the SDL2DisplayPlugin is not being built on Linux since ages. I will try to fix this problem in a separate issue and pull request.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,168,2017-11-09T01:45:01Z,,2020-09-10T18:31:21Z,OPEN,False,392,294,24,https://github.com/ronsaldo,Feature lowcode linux build scripts update,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168#issuecomment-343317901,Updating the Linux Lowcode VM building scripts.,"So should we wait a bit for integration?
(IMO there's low risk of collision with other devs anyway)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,168,2017-11-09T01:45:01Z,,2020-09-10T18:31:21Z,OPEN,False,392,294,24,https://github.com/ronsaldo,Feature lowcode linux build scripts update,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,https://github.com/ronsaldo,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168#issuecomment-343326639,Updating the Linux Lowcode VM building scripts.,"Not anymore :), if possible integrate it now. As I said, I will try to fix the plugin problem in a separate issue/PR. I will probably have to contact Esteban. It looks like I am not the only one interested on this.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,168,2017-11-09T01:45:01Z,,2020-09-10T18:31:21Z,OPEN,False,392,294,24,https://github.com/ronsaldo,Feature lowcode linux build scripts update,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,https://github.com/krono,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168#issuecomment-430905645,Updating the Linux Lowcode VM building scripts.,@ronsaldo can you merge from Cog or Rebase so we see whether it still works? then we could merge.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,168,2017-11-09T01:45:01Z,,2020-09-10T18:31:21Z,OPEN,False,392,294,24,https://github.com/ronsaldo,Feature lowcode linux build scripts update,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168,https://github.com/krono,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/168#issuecomment-690604873,Updating the Linux Lowcode VM building scripts.,@ronsaldo any news here?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,174,2017-11-24T08:26:31Z,2017-11-24T08:51:07Z,2017-11-24T08:51:07Z,MERGED,True,23,18,1,https://github.com/zecke,openssl: Fix compability with OpenSSL 1.1 as used by debian,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/174,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/174,"Norbert reported that a build for Debian9 fails to open outgoing
TLS connections. In OpenSSL the semantic of BIO_write for zero
sized writes has been changed. Do not attempt to write if the
length is zero. Check for the length before calling BIO_write.
I have updated the outgoing connection code and updated the
incoming connection one as well (didn't manually test it though)
and left the decrypt routine as is.
The Pharo testcase:
./products/phcogspurlinuxht/pharo ~/Pharo-60520.image eval ""ZnEasy getPng: 'https://pharo.org/files/pharo.png'""
OpenSSL-issue: openssl/openssl#4782","Norbert reported that a build for Debian9 fails to open outgoing
TLS connections. In OpenSSL the semantic of BIO_write for zero
sized writes has been changed. Do not attempt to write if the
length is zero. Check for the length before calling BIO_write.
I have updated the outgoing connection code and updated the
incoming connection one as well (didn't manually test it though)
and left the decrypt routine as is.
The Pharo testcase:
./products/phcogspurlinuxht/pharo ~/Pharo-60520.image eval ""ZnEasy getPng: 'https://pharo.org/files/pharo.png'""
OpenSSL-issue: openssl/openssl#4782",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,174,2017-11-24T08:26:31Z,2017-11-24T08:51:07Z,2017-11-24T08:51:07Z,MERGED,True,23,18,1,https://github.com/zecke,openssl: Fix compability with OpenSSL 1.1 as used by debian,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/174,https://github.com/zecke,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/174#issuecomment-346769796,"Norbert reported that a build for Debian9 fails to open outgoing
TLS connections. In OpenSSL the semantic of BIO_write for zero
sized writes has been changed. Do not attempt to write if the
length is zero. Check for the length before calling BIO_write.
I have updated the outgoing connection code and updated the
incoming connection one as well (didn't manually test it though)
and left the decrypt routine as is.
The Pharo testcase:
./products/phcogspurlinuxht/pharo ~/Pharo-60520.image eval ""ZnEasy getPng: 'https://pharo.org/files/pharo.png'""
OpenSSL-issue: openssl/openssl#4782",@estebanlm,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,176,2017-12-22T10:35:38Z,2017-12-22T10:38:02Z,2017-12-22T14:26:22Z,MERGED,True,5,7,2,https://github.com/demarey,Use the new files.pharo.org server to deploy Pharo VMs,4,"['Pharo', 'CI']",https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176,https://github.com/demarey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,176,2017-12-22T10:35:38Z,2017-12-22T10:38:02Z,2017-12-22T14:26:22Z,MERGED,True,5,7,2,https://github.com/demarey,Use the new files.pharo.org server to deploy Pharo VMs,4,"['Pharo', 'CI']",https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176,https://github.com/clementbera,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176#issuecomment-353571574,,It impacts only pharo deployment scripts. Merging.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,176,2017-12-22T10:35:38Z,2017-12-22T10:38:02Z,2017-12-22T14:26:22Z,MERGED,True,5,7,2,https://github.com/demarey,Use the new files.pharo.org server to deploy Pharo VMs,4,"['Pharo', 'CI']",https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176#issuecomment-353579068,,"meh :/
I was doing the same in branch estebanlm/fix-pharo-upload
anyway, cool is done... now there are a problem in the build of libgit2 I guess due some dependencies?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,176,2017-12-22T10:35:38Z,2017-12-22T10:38:02Z,2017-12-22T14:26:22Z,MERGED,True,5,7,2,https://github.com/demarey,Use the new files.pharo.org server to deploy Pharo VMs,4,"['Pharo', 'CI']",https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176#issuecomment-353601867,,I've just pushed ec439f1 with a fix for the libcurl/libgit2 issue.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,176,2017-12-22T10:35:38Z,2017-12-22T10:38:02Z,2017-12-22T14:26:22Z,MERGED,True,5,7,2,https://github.com/demarey,Use the new files.pharo.org server to deploy Pharo VMs,4,"['Pharo', 'CI']",https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176,https://github.com/estebanlm,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/176#issuecomment-353607980,,"On 22 Dec 2017, at 14:49, Fabio Niephaus ***@***.***> wrote:

 I've just pushed ec439f1 <ec439f1> with a fix for the libcurl/libgit2 issue.

thanks :)
…
 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub <#176 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAfWXnu4_zhuCJvoxA2y2t6bV37J47YMks5tC7N9gaJpZM4RK5EA>.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,179,2017-12-26T17:51:05Z,2018-01-04T08:24:44Z,2018-01-04T08:59:54Z,MERGED,True,2,7,3,https://github.com/aryler,Normal way to #include <errno.h>,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/179,https://github.com/aryler,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/179,"I'm pretty certain that
#include <errno.h>
is the right way to do it everywhere.","I'm pretty certain that
#include <errno.h>
is the right way to do it everywhere.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,179,2017-12-26T17:51:05Z,2018-01-04T08:24:44Z,2018-01-04T08:59:54Z,MERGED,True,2,7,3,https://github.com/aryler,Normal way to #include <errno.h>,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/179,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/179#issuecomment-355132424,"I'm pretty certain that
#include <errno.h>
is the right way to do it everywhere.","It sounds correct, I verified man errno for freebsd, openbsd, linux and all mention <errno.h>
I think it comes from macos, where man errno does not answer anything usefull...
But where I get this answer to man 2 intro
NAME
intro -- introduction to system calls and error numbers
SYNOPSIS
#include <sys/errno.h>
DESCRIPTION
This section provides an overview of the system calls, their error returns, and other common
definitions and concepts.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,179,2017-12-26T17:51:05Z,2018-01-04T08:24:44Z,2018-01-04T08:59:54Z,MERGED,True,2,7,3,https://github.com/aryler,Normal way to #include <errno.h>,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/179,https://github.com/aryler,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/179#issuecomment-355142970,"I'm pretty certain that
#include <errno.h>
is the right way to do it everywhere.","MacOS seems to be the only one that specifies sys/errno.h in documentation.
But if that were necessary then I suspect sys/errno.h would be found in more places in the codebase.
Even in the MacOS dir there are plenty of plain errno.h's.
Plain errno.h is POSIX.
I'm pretty certain it's normal for errno.h to #include sys/errno.h.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,181,2018-01-03T00:51:11Z,2018-01-03T07:31:50Z,2018-01-03T07:31:56Z,MERGED,True,27,25,2,https://github.com/nicolas-cellier-aka-nice,Windows vm accept single or double dash option,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/181,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/181,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,182,2018-01-03T08:27:39Z,2018-01-03T09:01:10Z,2018-01-03T09:01:14Z,MERGED,True,3,3,1,https://github.com/nicolas-cellier-aka-nice,Fix -textenc option parsing in unix vm,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/182,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/182,"The terminal null character of text encoding was not copied to the uppercase variant.
This is a bug, alloca does not set the allocated bytes to zero.
While at it, use VMOPTION macro where we handle vm option strings.
We may get rid of VMOPTION macro in the future, but this is another decision.","The terminal null character of text encoding was not copied to the uppercase variant.
This is a bug, alloca does not set the allocated bytes to zero.
While at it, use VMOPTION macro where we handle vm option strings.
We may get rid of VMOPTION macro in the future, but this is another decision.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,183,2018-01-03T13:03:38Z,2018-01-03T15:18:24Z,2018-12-10T22:06:44Z,MERGED,True,257,262,2,https://github.com/nicolas-cellier-aka-nice,Fix some unary option parsing in unix vm,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/183,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/183,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,184,2018-01-03T15:42:08Z,2018-01-03T16:07:49Z,2018-01-03T16:07:52Z,MERGED,True,24,23,2,https://github.com/nicolas-cellier-aka-nice,Cleanup windows vm usage message,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/184,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/184,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,at least in high sierra this was failing,at least in high sierra this was failing,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355075769,at least in high sierra this was failing,What is openssl necessary for?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355078924,at least in high sierra this was failing,"No idea, but SqueakSSL needs it.
then, we need it too (for other stuff like ssh2 and libgit2, etc.)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355084963,at least in high sierra this was failing,"No, SqueakSSL on macOS does not use openssl. In fact, the -lssl -lcrypto should be removed",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355085355,at least in high sierra this was failing,"If you need openssl for ssh2 and libgit2, Ok, but SqueakSSL is not the place for that",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/estebanlm,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355086040,at least in high sierra this was failing,"ah well... it was like that (i didn't added the -lssl -lcrypto), and because of them it was failing the build.
I just made sure compilation succeeds.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/krono,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355086332,at least in high sierra this was failing,"Yeah, I see, not meant to blame you.
I think I'll just remove it directly in Cog, ok?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/eliotmiranda,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355115137,at least in high sierra this was failing,"On Jan 3, 2018, at 10:20 AM, Tobias Pape ***@***.***> wrote:

 Yeah, I see, not meant to blame you.
 I think I'll just remove it directly in Cog, ok?

Yes please :-)
…
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355115259,at least in high sierra this was failing,It has been done :D,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/nicolas-cellier-aka-nice,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355125262,at least in high sierra this was failing,"I presume that the changes for building openssl are still necessary (if openssl is used by some other libs).
Esteban, could you remove changes to platforms/iOS/plugins/SqueakSSL/Makefile and commit again?",True,{'THUMBS_UP': ['https://github.com/krono']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/estebanlm,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355221591,at least in high sierra this was failing,"yeah, on his way",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,185,2018-01-03T17:09:26Z,2018-01-04T08:09:53Z,2018-01-04T08:09:53Z,MERGED,True,1,2,2,https://github.com/estebanlm,fix SqueakSSL plugin build for PharoVM macOS,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185,https://github.com/krono,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/185#issuecomment-355221815,at least in high sierra this was failing,yay,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,186,2018-01-03T21:19:14Z,2018-10-18T07:31:36Z,2018-10-18T07:31:42Z,MERGED,True,18,13,1,https://github.com/nicolas-cellier-aka-nice,HowToBuild doesn't have to mention missing libssl,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186,"Because we don't need to link against libssl.
Keep the hint from Eliot for an hypothetical libfoobar.dylib missing.","Because we don't need to link against libssl.
Keep the hint from Eliot for an hypothetical libfoobar.dylib missing.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,186,2018-01-03T21:19:14Z,2018-10-18T07:31:36Z,2018-10-18T07:31:42Z,MERGED,True,18,13,1,https://github.com/nicolas-cellier-aka-nice,HowToBuild doesn't have to mention missing libssl,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186#issuecomment-355238740,"Because we don't need to link against libssl.
Keep the hint from Eliot for an hypothetical libfoobar.dylib missing.","I don't think you need to open PRs for edits like this unless you want feedback of course.
Also, if you add [ci skip] to your commit message, you don't trigger a new CI build which is handy when you didn't edit code :)
Best,
Fabio",True,{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,186,2018-01-03T21:19:14Z,2018-10-18T07:31:36Z,2018-10-18T07:31:42Z,MERGED,True,18,13,1,https://github.com/nicolas-cellier-aka-nice,HowToBuild doesn't have to mention missing libssl,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186#issuecomment-355256093,"Because we don't need to link against libssl.
Keep the hint from Eliot for an hypothetical libfoobar.dylib missing.","Thanks Fabio, [ci skip] is usefull
I edited from Web interface and I think it forced me to branch...
Let's ask Eliot's feedback explicitely (since he wrote the original)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,186,2018-01-03T21:19:14Z,2018-10-18T07:31:36Z,2018-10-18T07:31:42Z,MERGED,True,18,13,1,https://github.com/nicolas-cellier-aka-nice,HowToBuild doesn't have to mention missing libssl,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186#issuecomment-355256309,"Because we don't need to link against libssl.
Keep the hint from Eliot for an hypothetical libfoobar.dylib missing.",No worries! Thanks for taking care of this,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,186,2018-01-03T21:19:14Z,2018-10-18T07:31:36Z,2018-10-18T07:31:42Z,MERGED,True,18,13,1,https://github.com/nicolas-cellier-aka-nice,HowToBuild doesn't have to mention missing libssl,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/186#issuecomment-430905004,"Because we don't need to link against libssl.
Keep the hint from Eliot for an hypothetical libfoobar.dylib missing.",Long sitting here. Let's do it.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,187,2018-01-03T21:58:27Z,2018-01-04T22:40:50Z,2018-01-04T22:40:58Z,MERGED,True,1,1,1,https://github.com/nicolas-cellier-aka-nice,SqueakSSL does not use openssl on windows VM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/187,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/187,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,188,2018-01-04T09:45:28Z,2018-01-05T17:33:17Z,2018-01-05T17:33:17Z,MERGED,True,10,5,1,https://github.com/aryler,Fix improper commenting,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/188,https://github.com/aryler,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/188,"It looks like the original intent was to disable ac3 on line 119 like on line 95, and afterwards there was a decision to drop file extensions altogether.","It looks like the original intent was to disable ac3 on line 119 like on line 95, and afterwards there was a decision to drop file extensions altogether.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,189,2018-01-04T22:15:17Z,2018-01-05T00:10:09Z,2018-12-10T22:06:40Z,MERGED,True,12,0,1,https://github.com/nicolas-cellier-aka-nice,Let Win64 ABI use an unwind-free setjmp,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/189,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/189,"More information can be found in this commit comment:
e45e7eb","More information can be found in this commit comment:
e45e7eb",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,191,2018-01-11T12:27:41Z,2018-01-17T09:46:21Z,2018-01-17T10:33:23Z,MERGED,True,6,0,6,https://github.com/akgrant43,Build FileAttributesPlugin on Linux (32 & 64 bit),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/191,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/191,"Once the functionality has been confirmed on Linux, I'll add ArmV6,
MacOS and Windows.
Fogbugz issue: https://pharo.fogbugz.com/f/cases/20294","Once the functionality has been confirmed on Linux, I'll add ArmV6,
MacOS and Windows.
Fogbugz issue: https://pharo.fogbugz.com/f/cases/20294",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,195,2018-01-18T11:34:52Z,2018-01-18T11:36:22Z,2018-01-18T11:36:34Z,MERGED,True,144,56,8,https://github.com/fniephaus,Revise packaging,33,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/195,https://github.com/fniephaus,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/195,"Closes #5, #84, #170, and #171.","Closes #5, #84, #170, and #171.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,201,2018-01-27T22:15:15Z,2018-01-27T23:06:54Z,2018-01-27T23:06:54Z,MERGED,True,2,2,1,https://github.com/rmacnak,Update Newspeak commits used for testing.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/201,https://github.com/rmacnak,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/201,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,202,2018-01-29T11:01:57Z,2018-01-29T11:47:11Z,2018-01-29T11:47:11Z,MERGED,True,5,3,3,https://github.com/estebanlm,add pharo certificates,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/202,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/202,it should work :),it should work :),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,203,2018-01-29T16:38:54Z,2018-01-30T09:06:22Z,2018-01-30T09:06:22Z,MERGED,True,4,3,5,https://github.com/estebanlm,Add pharo certificates,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/203,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/203,maybe this time it works :),maybe this time it works :),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,204,2018-01-30T14:16:06Z,2018-01-30T14:55:46Z,2018-01-30T14:55:46Z,MERGED,True,0,0,2,https://github.com/estebanlm,re-exported certificates,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/204,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/204,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,205,2018-01-30T19:17:04Z,2018-01-31T14:13:16Z,2018-01-31T14:13:20Z,MERGED,True,472,85,4,https://github.com/krono,[SqueakSSL] Overlay OpenSSL for linux/unix,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205,"When we dynamically link against OpenSSL, the bundles are not portable,
as CentOS and friends use other SO_NAMEs than Debian and friends. Also,
soft-fallback for later features such as host name verification is hard.
When we statically link, we might lack behind the OS, the binaries are
bigger, and the legal situation is less clear.
So we now support not linking at all but rather lookup all necessary
functions/symbols at runtime.
This can be disabled with SQSSL_OPENSSL_LINKED which effectively results
in the dynamically-linked behavior. (This is preferable for platform
builds, eg, debs and rpms)","When we dynamically link against OpenSSL, the bundles are not portable,
as CentOS and friends use other SO_NAMEs than Debian and friends. Also,
soft-fallback for later features such as host name verification is hard.
When we statically link, we might lack behind the OS, the binaries are
bigger, and the legal situation is less clear.
So we now support not linking at all but rather lookup all necessary
functions/symbols at runtime.
This can be disabled with SQSSL_OPENSSL_LINKED which effectively results
in the dynamically-linked behavior. (This is preferable for platform
builds, eg, debs and rpms)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,205,2018-01-30T19:17:04Z,2018-01-31T14:13:16Z,2018-01-31T14:13:20Z,MERGED,True,472,85,4,https://github.com/krono,[SqueakSSL] Overlay OpenSSL for linux/unix,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205#issuecomment-361737056,"When we dynamically link against OpenSSL, the bundles are not portable,
as CentOS and friends use other SO_NAMEs than Debian and friends. Also,
soft-fallback for later features such as host name verification is hard.
When we statically link, we might lack behind the OS, the binaries are
bigger, and the legal situation is less clear.
So we now support not linking at all but rather lookup all necessary
functions/symbols at runtime.
This can be disabled with SQSSL_OPENSSL_LINKED which effectively results
in the dynamically-linked behavior. (This is preferable for platform
builds, eg, debs and rpms)","Thanks, @krono! These are important SqueakSSL plugin updates and we might want them in the release which is due in two days. I'll give everyone 12 hours from now to review the code changes. If no one objects, I will merge this in once CI has passed.
@krono Could you please provide some concrete examples that can be used to test these changes from inside an image, so it's easier to verify these changes on all platforms?
/cc @eliotmiranda @estebanlm",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,205,2018-01-30T19:17:04Z,2018-01-31T14:13:16Z,2018-01-31T14:13:20Z,MERGED,True,472,85,4,https://github.com/krono,[SqueakSSL] Overlay OpenSSL for linux/unix,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205#issuecomment-361928673,"When we dynamically link against OpenSSL, the bundles are not portable,
as CentOS and friends use other SO_NAMEs than Debian and friends. Also,
soft-fallback for later features such as host name verification is hard.
When we statically link, we might lack behind the OS, the binaries are
bigger, and the legal situation is less clear.
So we now support not linking at all but rather lookup all necessary
functions/symbols at runtime.
This can be disabled with SQSSL_OPENSSL_LINKED which effectively results
in the dynamically-linked behavior. (This is preferable for platform
builds, eg, debs and rpms)","Here's the most simple use case:
(WebClient httpGet: 'https://danluu.com') content",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,205,2018-01-30T19:17:04Z,2018-01-31T14:13:16Z,2018-01-31T14:13:20Z,MERGED,True,472,85,4,https://github.com/krono,[SqueakSSL] Overlay OpenSSL for linux/unix,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/205#issuecomment-361943783,"When we dynamically link against OpenSSL, the bundles are not portable,
as CentOS and friends use other SO_NAMEs than Debian and friends. Also,
soft-fallback for later features such as host name verification is hard.
When we statically link, we might lack behind the OS, the binaries are
bigger, and the legal situation is less clear.
So we now support not linking at all but rather lookup all necessary
functions/symbols at runtime.
This can be disabled with SQSSL_OPENSSL_LINKED which effectively results
in the dynamically-linked behavior. (This is preferable for platform
builds, eg, debs and rpms)","With the help of @krono, I was able to verify that this is working fine for squeak.cog.spur on CentOS (x64 and i386).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,206,2018-01-31T08:53:43Z,2018-01-31T09:50:40Z,2018-01-31T09:50:40Z,MERGED,True,0,0,2,https://github.com/estebanlm,new try with certificates,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/206,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/206,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.","Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212#issuecomment-362970390,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.",Fogbugz: https://pharo.fogbugz.com/f/cases/21234/Add-FileAttributesPlugin-to-win64x64,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212#issuecomment-363001471,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.","win64x64 appears to be incorrectly trying to use lstat() (win32 does the right thing).  I'll have to look in to this further.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212#issuecomment-363002227,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.",Please note that third party libs for Pharo are also failing to build on macOS at the moment.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212#issuecomment-363696929,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.","Currently working on the solution, see: http://lists.squeakfoundation.org/pipermail/vm-dev/2018-February/026715.html",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/akgrant43,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212#issuecomment-366213927,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.","The CI build failed, however it appears to be a problem with uploading the files at the end (ssh connection reset).
I've marked the fogbugz issue Resolved (Fix Review Needed)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/fniephaus,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212#issuecomment-366236771,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.",@eliotmiranda can this be merged?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,212,2018-02-05T03:09:52Z,2018-02-17T00:26:40Z,2018-02-20T09:29:17Z,MERGED,True,48,45,2,https://github.com/akgrant43,21234-Add-FileAttributesPlugin-to-win64x64,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212,https://github.com/akgrant43,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/212#issuecomment-366240284,"Add FileAttributesPlugin to build.win64x64/pharo.cog.spur/plugins.ext
All pharo.cog.spur platforms are now compiling FileAttributesPlugin.","Note that FileAttributesPlugin.c is generated from:
Name: FileAttributesPlugin.oscog-AlistairGrant.27
Author: AlistairGrant
Time: 16 February 2018, 2:50:37.845172 pm
UUID: 5f8d8c2b-5326-4d03-80d3-348e0a109592
Ancestors: FileAttributesPlugin.oscog-AlistairGrant.26",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/j4yk,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.","allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.",True,{'THUMBS_UP': ['https://github.com/krono']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213#issuecomment-363324877,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.",Ok from me.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213#issuecomment-363357543,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.","Thanks, @j4yk.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213#issuecomment-367238737,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.","@j4yk we had to revert this change, see http://forum.world.st/git-bites-again-td5067505.html",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213#issuecomment-431437031,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.",Looks good to me.  Merge it.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213#issuecomment-450502192,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.","This is a must have!
because using git stash save / git stash pop destroys the stash stack when there is nothing to save!!!
See answer to https://stackoverflow.com/questions/27697835/stash-branch-working-copy-confusion
Unfortunately, this PR has rotten and now conflicts.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/krono,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213#issuecomment-450510827,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.",Pinning @j4yk again :),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,213,2018-02-05T23:21:07Z,2018-02-06T09:10:29Z,2018-12-29T18:24:30Z,MERGED,True,12,14,1,https://github.com/j4yk,Make updateSCCSVersions work in more situations,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213,https://github.com/j4yk,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/213#issuecomment-450511103,"allow spaces in paths (added quotes)
support cases where the repository is not in a .git directory at the top of the working tree
do not hardcode the directory level of this script
avoid stashing the whole working tree when only two well-known files need to be updated
touch should suffice to make a file different from its index version (i. e., eligible for checkout)

Please review for compatibility and pick those parts of the changes that you like.","This one has been abandoned due to errors (see Fabio's last comment) and was superseded by #227, IIRC.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,214,2018-02-06T09:41:25Z,2018-02-06T10:06:37Z,2018-02-06T10:06:37Z,MERGED,True,3,3,3,https://github.com/estebanlm,Add pharo certificates,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/214,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/214,"ok, THIS time should work","ok, THIS time should work",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,215,2018-02-06T09:57:31Z,2018-02-06T10:12:04Z,2018-02-06T10:12:04Z,MERGED,True,13,12,4,https://github.com/estebanlm,Restore Pharo packaging,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/215,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/215,pharo does not packages with top subdir so we need to restore old packaging,pharo does not packages with top subdir so we need to restore old packaging,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,218,2018-02-20T09:28:35Z,2018-02-20T12:29:11Z,2018-02-20T12:55:30Z,MERGED,True,12,2,10,https://github.com/akgrant43,21375-Add-FileAttributesPlugin-to-stack-and-lowcode-VMs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218,"Add FileAttributesPlugin to any remaining VM that already includes
FilePlugin.","Add FileAttributesPlugin to any remaining VM that already includes
FilePlugin.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,218,2018-02-20T09:28:35Z,2018-02-20T12:29:11Z,2018-02-20T12:55:30Z,MERGED,True,12,2,10,https://github.com/akgrant43,21375-Add-FileAttributesPlugin-to-stack-and-lowcode-VMs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218#issuecomment-366957750,"Add FileAttributesPlugin to any remaining VM that already includes
FilePlugin.","The appveyor failure was a squeak build, which doesn't include FileAttributesPlugin, and looks like it was a failure to download cygwin related files.  This PR should be good to go...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,218,2018-02-20T09:28:35Z,2018-02-20T12:29:11Z,2018-02-20T12:55:30Z,MERGED,True,12,2,10,https://github.com/akgrant43,21375-Add-FileAttributesPlugin-to-stack-and-lowcode-VMs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218#issuecomment-366957879,"Add FileAttributesPlugin to any remaining VM that already includes
FilePlugin.",Fogbugz: https://pharo.fogbugz.com/f/cases/21375/,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,218,2018-02-20T09:28:35Z,2018-02-20T12:29:11Z,2018-02-20T12:55:30Z,MERGED,True,12,2,10,https://github.com/akgrant43,21375-Add-FileAttributesPlugin-to-stack-and-lowcode-VMs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218#issuecomment-366962490,"Add FileAttributesPlugin to any remaining VM that already includes
FilePlugin.","The appveyor failure was a squeak build, which doesn't include FileAttributesPlugin, and looks like it was a failure to download cygwin related files. This PR should be good to go...

Thanks for the info. I've fixed the problem that caused Pharo builds to fail on PRs in the meantime.
Merging this now, assuming @eliotmiranda and @estebanlm are ok with that...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,218,2018-02-20T09:28:35Z,2018-02-20T12:29:11Z,2018-02-20T12:55:30Z,MERGED,True,12,2,10,https://github.com/akgrant43,21375-Add-FileAttributesPlugin-to-stack-and-lowcode-VMs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/218#issuecomment-366968769,"Add FileAttributesPlugin to any remaining VM that already includes
FilePlugin.","Merging this now, assuming @eliotmiranda and @estebanlm are ok with that...

Thanks @fniephaus !
I checked with @estebanlm before submitting the PR.
I didn't check with @eliotmiranda, but this doesn't change the VM, just the pharo build on some platforms, so hope that is OK.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/clementbera,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?","I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/clementbera,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219#issuecomment-366992076,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?",I am not sure what is the process from there so I'll wait for some one like Fabio to comment the pull request.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/clementbera,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219#issuecomment-367024928,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?",I am a bit confused here. Builds is red but I did not change anything ?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219#issuecomment-367470717,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?","Hi Clément,
I'm not sure why the builds were failing, but I've just pushed a commit that add pharo.sista.spur builds to our CI. Let's see if the builds are passing this time...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/clementbera,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219#issuecomment-367644395,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?","64 bits sista builds can be disabled for now. So it looks good.
I wonder, where do I need to change things so that the build upload the built VM into file.pharo.org/vm/sista in a similar way to the other VMs ? That's the only missing thing.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/fniephaus,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219#issuecomment-367649414,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?","Ok cool, I've just disabled the 64bit builds.
Please get in touch with @estebanlm with regard to the file uploads. Right now, I assume the sista builds are uploaded to the file server, but may override existing files depending on the build order. The reason for that might be that the pack/deploy scripts for Pharo do not know about sista yet and treat all VMs as a standard spur vm.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/clementbera,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219#issuecomment-371437258,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?",Let's merge I will patch deployment later.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,219,2018-02-20T14:21:47Z,2018-03-08T09:52:29Z,2018-03-08T10:04:53Z,MERGED,True,850,0,31,https://github.com/clementbera,Added pharo.sista.spur builds,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219,https://github.com/fniephaus,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/219#issuecomment-371440720,"I checked the Mac 32 builds were working fine.
I did not check Linux & win.
Is there something to change on the CI to make them build ?","@estebanlm and I have fixed the problem described above in the meantime. Hopefully, everything works and you don't have to patch anything :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,220,2018-02-21T13:22:11Z,2018-02-21T20:46:24Z,2018-02-22T17:54:39Z,MERGED,True,45,46,1,https://github.com/akgrant43,21379 FileAttributesPlugin _WIN32 & nil creationTime,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/220,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/220,"Name: FileAttributesPlugin.oscog-AlistairGrant.28
Author: AlistairGrant
Time: 21 February 2018, 9:46:27.211606 am
UUID: fb804aff-1cbd-4ffa-b48a-e3d665d10673
Ancestors: FileAttributesPlugin.oscog-AlistairGrant.27
1.2.6: Clean up Windows specific code, return nil for creationTime on
Unix

Use the option: pragma to make Windows specific methods only compile
on Windows.
Return nil instead of -1 for file creationTime on Unix

Fogbugz:
https://pharo.fogbugz.com/f/cases/21379/FileAttributesPlugin-_WIN32-nil-creationTime","Name: FileAttributesPlugin.oscog-AlistairGrant.28
Author: AlistairGrant
Time: 21 February 2018, 9:46:27.211606 am
UUID: fb804aff-1cbd-4ffa-b48a-e3d665d10673
Ancestors: FileAttributesPlugin.oscog-AlistairGrant.27
1.2.6: Clean up Windows specific code, return nil for creationTime on
Unix

Use the option: pragma to make Windows specific methods only compile
on Windows.
Return nil instead of -1 for file creationTime on Unix

Fogbugz:
https://pharo.fogbugz.com/f/cases/21379/FileAttributesPlugin-_WIN32-nil-creationTime",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,221,2018-02-23T14:14:08Z,2018-02-23T23:56:54Z,2022-03-16T11:47:58Z,MERGED,True,175,173,127,https://github.com/krono,Use C99,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/221,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/221,"It is so old it already could drive a Car.
Or drink wine and beer in Germany.
[eliot: :-) ]","It is so old it already could drive a Car.
Or drink wine and beer in Germany.
[eliot: :-) ]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,222,2018-03-02T10:32:00Z,2018-03-03T11:06:02Z,2018-03-03T15:14:24Z,MERGED,True,221,6,4,https://github.com/akgrant43,21462 open a file stream based on fd or file,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/222,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/222,"Extend FilePlugin to allow a file to be opened using either the file
descriptor (fd) or FILE* in Pharo.
Original list discussion: http://forum.world.st/Using-a-Unix-filedescriptor-in-a-FileStream-td4916353.html
Original PR: pharo-project/pharo-vm#108
Updated PR: pharo-project/pharo-vm#142
(both superseeded)
Many thanks to @zecke for the original code.
As a (redundant) example of how this can be used, to open stderr (fd=2)
for writing:
| stderr |

stderr := BinaryFileStream handle: (FilePluginPrims new
    openFileDescriptor: 2 writable: true)
        file: (File named: 'fd2')
        forWrite: true.

stderr nextPutAll: 'Hello World'; lf.","Extend FilePlugin to allow a file to be opened using either the file
descriptor (fd) or FILE* in Pharo.
Original list discussion: http://forum.world.st/Using-a-Unix-filedescriptor-in-a-FileStream-td4916353.html
Original PR: pharo-project/pharo-vm#108
Updated PR: pharo-project/pharo-vm#142
(both superseeded)
Many thanks to @zecke for the original code.
As a (redundant) example of how this can be used, to open stderr (fd=2)
for writing:
| stderr |

stderr := BinaryFileStream handle: (FilePluginPrims new
    openFileDescriptor: 2 writable: true)
        file: (File named: 'fd2')
        forWrite: true.

stderr nextPutAll: 'Hello World'; lf.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,223,2018-03-03T18:12:41Z,2018-03-07T09:04:06Z,2018-08-26T19:31:17Z,MERGED,True,149,124,4,https://github.com/akgrant43,Include FilePlugin>>primitiveFileOpenUseFileDescriptor & primitiveFileOpenUseFile,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/223,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/223,"on all platforms (not just PharoVM).
See also discussion at: http://lists.squeakfoundation.org/pipermail/vm-dev/2018-March/026955.html","on all platforms (not just PharoVM).
See also discussion at: http://lists.squeakfoundation.org/pipermail/vm-dev/2018-March/026955.html",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,224,2018-03-07T17:11:00Z,2018-03-15T16:57:14Z,2018-03-15T16:57:14Z,MERGED,True,10,51,4,https://github.com/smalltalking,Do not cache fileSize in SQFile,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224,"If you have more than one reference to the same file from the image (e.g. the changes file), then the file size cache will prevent changes written by one reference to be noticed by another, so you have to reopen all other references to actualize their cached file size.
These changes will make that unnecessary.
I could only test the code on linux, but hopefully the MacOS/iOS and win32 implementations are correct too.
The changes do not cover platforms Plan9 and RiscOS. That's up to someone who has access to and experience with them.
There's room for optimization on platforms which support the fstat() function (the current implementation just seeks to the end of the file and then back to the original position).","If you have more than one reference to the same file from the image (e.g. the changes file), then the file size cache will prevent changes written by one reference to be noticed by another, so you have to reopen all other references to actualize their cached file size.
These changes will make that unnecessary.
I could only test the code on linux, but hopefully the MacOS/iOS and win32 implementations are correct too.
The changes do not cover platforms Plan9 and RiscOS. That's up to someone who has access to and experience with them.
There's room for optimization on platforms which support the fstat() function (the current implementation just seeks to the end of the file and then back to the original position).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,224,2018-03-07T17:11:00Z,2018-03-15T16:57:14Z,2018-03-15T16:57:14Z,MERGED,True,10,51,4,https://github.com/smalltalking,Do not cache fileSize in SQFile,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224#issuecomment-373102200,"If you have more than one reference to the same file from the image (e.g. the changes file), then the file size cache will prevent changes written by one reference to be noticed by another, so you have to reopen all other references to actualize their cached file size.
These changes will make that unnecessary.
I could only test the code on linux, but hopefully the MacOS/iOS and win32 implementations are correct too.
The changes do not cover platforms Plan9 and RiscOS. That's up to someone who has access to and experience with them.
There's room for optimization on platforms which support the fstat() function (the current implementation just seeks to the end of the file and then back to the original position).","Hi @smalltalking,
I'm just wondering why you haven't followed up on this PR?
The linux builds failed because there is still a reference to setSize in
sqFilePluginBasicPrims.c.
When I tested the speed difference, not caching the size added about 2
microseconds to retrieving the file size on my 4 or 5 year old Dell
XPS13 (SSD).
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,224,2018-03-07T17:11:00Z,2018-03-15T16:57:14Z,2018-03-15T16:57:14Z,MERGED,True,10,51,4,https://github.com/smalltalking,Do not cache fileSize in SQFile,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224,https://github.com/smalltalking,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224#issuecomment-373184930,"If you have more than one reference to the same file from the image (e.g. the changes file), then the file size cache will prevent changes written by one reference to be noticed by another, so you have to reopen all other references to actualize their cached file size.
These changes will make that unnecessary.
I could only test the code on linux, but hopefully the MacOS/iOS and win32 implementations are correct too.
The changes do not cover platforms Plan9 and RiscOS. That's up to someone who has access to and experience with them.
There's room for optimization on platforms which support the fstat() function (the current implementation just seeks to the end of the file and then back to the original position).","Hi @akgrant43,
I wrote these changes last October. There was a small discussion about them on the mailing list.
I wanted to create a pull request in October, but I had some other things to do.
After I made the pull request, I saw that the changes interfered with your FilePlugin changes, so I decided to wait till those are fully integrated.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,224,2018-03-07T17:11:00Z,2018-03-15T16:57:14Z,2018-03-15T16:57:14Z,MERGED,True,10,51,4,https://github.com/smalltalking,Do not cache fileSize in SQFile,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224,https://github.com/akgrant43,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/224#issuecomment-373275682,"If you have more than one reference to the same file from the image (e.g. the changes file), then the file size cache will prevent changes written by one reference to be noticed by another, so you have to reopen all other references to actualize their cached file size.
These changes will make that unnecessary.
I could only test the code on linux, but hopefully the MacOS/iOS and win32 implementations are correct too.
The changes do not cover platforms Plan9 and RiscOS. That's up to someone who has access to and experience with them.
There's room for optimization on platforms which support the fstat() function (the current implementation just seeks to the end of the file and then back to the original position).","Thanks for the explanation and link to the email discussion.
The remaining changes I have planned for FilePlugin will take quite a while (I need to learn about the simulator first).
Can you update the PR and I'll merge it in?
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,225,2018-03-08T10:15:27Z,2018-03-13T08:55:37Z,2018-03-13T08:55:37Z,MERGED,True,17,4,4,https://github.com/clementbera,added deployment scripts for sista VM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/225,https://github.com/clementbera,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/225,"I don't know how to check it works. Can some one review this ? Esteban or Fabio ?
Else I will merge next week and check if nothing breaks.","I don't know how to check it works. Can some one review this ? Esteban or Fabio ?
Else I will merge next week and check if nothing breaks.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,225,2018-03-08T10:15:27Z,2018-03-13T08:55:37Z,2018-03-13T08:55:37Z,MERGED,True,17,4,4,https://github.com/clementbera,added deployment scripts for sista VM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/225,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/225#issuecomment-371444667,"I don't know how to check it works. Can some one review this ? Esteban or Fabio ?
Else I will merge next week and check if nothing breaks.","Does the ../vm/sista directory exist on the server? Maybe it needs to be created manually before your changes work. AFAICT, the changes look good so far but it's better @estebanlm has a look as well and merges this.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,225,2018-03-08T10:15:27Z,2018-03-13T08:55:37Z,2018-03-13T08:55:37Z,MERGED,True,17,4,4,https://github.com/clementbera,added deployment scripts for sista VM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/225,https://github.com/clementbera,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/225#issuecomment-372591694,"I don't know how to check it works. Can some one review this ? Esteban or Fabio ?
Else I will merge next week and check if nothing breaks.",Let's just merge and we will see if it works.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,226,2018-03-11T12:56:47Z,2018-03-15T19:36:44Z,2022-03-16T11:48:00Z,MERGED,True,36351,36482,173,https://github.com/krono,The Yakshaving,95,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/226,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/226,"Ok, don't mind the branch name. This started out as a trial to improve OpenBSD support, especially since my SqueakSSL/Unix changes broke it for them. But things got out of hand (viz. Yak shaving )
Travis Changes

This adds a few more libraries for Travis, such that more plugins are actually built and not disabled due to missing dependencies

scripts/updateSCCSVersions


This is a bash script now, but bash is not in /usr/bin on all platforms. Solution: use /usr/bin/env bash. Problem 2: We want bash -e, but POSIX/execve only specifies #! <interpreter> <onearg>. Solution 2:
#! /usr/bin/env bash
set -e
@fniephaus we should do that for all instances of bash -e, probably.


Autoconf.

A lot of selections, flags, and specifics where handled in dispersed mvm files.
Most of which can now be handled via the results of autoconf, that is

the Makefiles (with their respective flags)
the config.h


Also, modernized a good bunch of autoconf/m4 files to more recent styles.
And, finally, selection of OpenSSL/LibreSSL backend settings for SqueakSSL via configure.

Missing here

not all acinclude.m4 adhere to autoconf's current style.
Cog's options (eg, COGMTVM) are not yet covered.

Tiny things

Improve no-op definotion of VM_LABEL as not to make gcc complain about strange expressions.","Ok, don't mind the branch name. This started out as a trial to improve OpenBSD support, especially since my SqueakSSL/Unix changes broke it for them. But things got out of hand (viz. Yak shaving )
Travis Changes

This adds a few more libraries for Travis, such that more plugins are actually built and not disabled due to missing dependencies

scripts/updateSCCSVersions


This is a bash script now, but bash is not in /usr/bin on all platforms. Solution: use /usr/bin/env bash. Problem 2: We want bash -e, but POSIX/execve only specifies #! <interpreter> <onearg>. Solution 2:
#! /usr/bin/env bash
set -e
@fniephaus we should do that for all instances of bash -e, probably.


Autoconf.

A lot of selections, flags, and specifics where handled in dispersed mvm files.
Most of which can now be handled via the results of autoconf, that is

the Makefiles (with their respective flags)
the config.h


Also, modernized a good bunch of autoconf/m4 files to more recent styles.
And, finally, selection of OpenSSL/LibreSSL backend settings for SqueakSSL via configure.

Missing here

not all acinclude.m4 adhere to autoconf's current style.
Cog's options (eg, COGMTVM) are not yet covered.

Tiny things

Improve no-op definotion of VM_LABEL as not to make gcc complain about strange expressions.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,226,2018-03-11T12:56:47Z,2018-03-15T19:36:44Z,2022-03-16T11:48:00Z,MERGED,True,36351,36482,173,https://github.com/krono,The Yakshaving,95,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/226,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/226#issuecomment-373497744,"Ok, don't mind the branch name. This started out as a trial to improve OpenBSD support, especially since my SqueakSSL/Unix changes broke it for them. But things got out of hand (viz. Yak shaving )
Travis Changes

This adds a few more libraries for Travis, such that more plugins are actually built and not disabled due to missing dependencies

scripts/updateSCCSVersions


This is a bash script now, but bash is not in /usr/bin on all platforms. Solution: use /usr/bin/env bash. Problem 2: We want bash -e, but POSIX/execve only specifies #! <interpreter> <onearg>. Solution 2:
#! /usr/bin/env bash
set -e
@fniephaus we should do that for all instances of bash -e, probably.


Autoconf.

A lot of selections, flags, and specifics where handled in dispersed mvm files.
Most of which can now be handled via the results of autoconf, that is

the Makefiles (with their respective flags)
the config.h


Also, modernized a good bunch of autoconf/m4 files to more recent styles.
And, finally, selection of OpenSSL/LibreSSL backend settings for SqueakSSL via configure.

Missing here

not all acinclude.m4 adhere to autoconf's current style.
Cog's options (eg, COGMTVM) are not yet covered.

Tiny things

Improve no-op definotion of VM_LABEL as not to make gcc complain about strange expressions.",,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/j4yk,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...","I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-430907582,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...","@j4yk, can you tell me whether this is still relevant?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/j4yk,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-431418299,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...","Well I guess so for the benefits outlined in #213. But I cannot check now whether anything has changed in the baseline script in the meantime.
Has anyone tried it, to avoid that it only works on my machine?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-450501244,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...",@j4yk can you rebase onto Cog or merge Cog into here? let's see to get this going,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/nicolas-cellier-aka-nice,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-450502793,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...","Hi Tobias, I tried the resolve thru github which is a bit scary but OK for such simple change.
The sole conflict was your own change of a tab to spaces...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/fniephaus,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-450503201,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...","Now that this has been merged, do not forget to run the script manually once in order to update your local hooks. Otherwise, your local copy will still be using git stash.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/krono,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-450510967,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...",@fniephaus We should ping vm-dev regarding that,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/eliotmiranda,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-450514655,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...","First, Jakob, huge thanks for this.  The weird symptom of getting merge conflicts appearing in certain files after each push has disappeared.  Second, I did apply the script manually but it made no alterations to sqSCCSVersion.h in my case (it was already localized to my machine).  So it may not be necessary to run it, but it does no harm.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,227,2018-03-11T19:24:19Z,2018-12-29T16:05:54Z,2018-12-29T19:52:39Z,MERGED,True,25,15,1,https://github.com/j4yk,Second attempt to improve updateSCCSVersions,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227,https://github.com/fniephaus,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/227#issuecomment-450515900,"I finally got around to solve the ""not a git repository"" issue with my previous pull request. For the analysis see below. Please review and try it out before merging.
When the script is run as a hook, the environment variable GIT_DIR is set to .git (path relative to the working tree) for regular repositories. This affects the behavior of rev-parse. When the script is run from the working tree and the checkout commands towards the bottom are executed, the script actually invokes itself as the post-checkout script. During that inner invocation, the script would cd to .git/hooks, and because of the GIT_DIR variable, rev-parse would then look for the git repository in .git/hooks/.git. This failed, of course.
The second error message ""unrecognized input"" came from git apply when it was fed with empty input (because there were no uncommitted changes to either *Version.h file).
Since GIT_DIR caused the trouble, why not use it to detect whether the script is run as a hook...","Second, I did apply the script manually but it made no alterations to sqSCCSVersion.h in my case (it was already localized to my machine). So it may not be necessary to run it, but it does no harm.

The behavior with regard to sqSCCSVersion.h shouldn't change at all. More importantly, running the script manually also copies and, in our case, updates the script in the repository's hooks directory (see here) to configure Git for our needs. This change is within the .git directory and therefore doesn't alter your local copy, the OpenSmalltalkVM code base.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,228,2018-03-15T17:25:43Z,2018-03-15T19:15:41Z,2018-03-15T19:15:41Z,MERGED,True,1,1,1,https://github.com/smalltalking,Fixed getGoodSpur64VM.sh: 64-bit VM directory name is different,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/228,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/228,"mv quit with an error, because the directory didn't exist.","mv quit with an error, because the directory didn't exist.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,228,2018-03-15T17:25:43Z,2018-03-15T19:15:41Z,2018-03-15T19:15:41Z,MERGED,True,1,1,1,https://github.com/smalltalking,Fixed getGoodSpur64VM.sh: 64-bit VM directory name is different,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/228,https://github.com/smalltalking,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/228#issuecomment-373458405,"mv quit with an error, because the directory didn't exist.",Should have tagged it to avoid invoking CI...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,229,2018-03-20T10:56:41Z,2018-03-20T10:59:08Z,2018-03-20T10:59:19Z,MERGED,True,52,6,3,https://github.com/krono,Krono/ossfix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/229,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/229,Small fix for cross(-unix)-platform OSS,Small fix for cross(-unix)-platform OSS,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,230,2018-03-22T22:12:18Z,2018-03-31T06:49:33Z,2018-03-31T09:25:32Z,MERGED,True,1,1,1,https://github.com/smalltalking,Fixed typo in the download URL,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/230,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/230,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,230,2018-03-22T22:12:18Z,2018-03-31T06:49:33Z,2018-03-31T09:25:32Z,MERGED,True,1,1,1,https://github.com/smalltalking,Fixed typo in the download URL,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/230,https://github.com/clementbera,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/230#issuecomment-377671276,,Seems to solve a typo without side-effect - Travis is not showing any new problems even if red.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,230,2018-03-22T22:12:18Z,2018-03-31T06:49:33Z,2018-03-31T09:25:32Z,MERGED,True,1,1,1,https://github.com/smalltalking,Fixed typo in the download URL,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/230,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/230#issuecomment-377679642,,"Yes, this script is not used by travis.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,231,2018-03-25T12:24:52Z,2018-04-02T12:56:08Z,2018-04-02T12:56:08Z,MERGED,True,8,6,1,https://github.com/zecke,macos: Fix --trace for the PharoVM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/231,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/231,"Introduce VMOPTIONLEN that can offset the extra '-' in the
calculations.","Introduce VMOPTIONLEN that can offset the extra '-' in the
calculations.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,231,2018-03-25T12:24:52Z,2018-04-02T12:56:08Z,2018-04-02T12:56:08Z,MERGED,True,8,6,1,https://github.com/zecke,macos: Fix --trace for the PharoVM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/231,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/231#issuecomment-377923455,"Introduce VMOPTIONLEN that can offset the extra '-' in the
calculations.","Agree, we can do better, but this is good enough, we'll see better later.
See also
#136
#181",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377703216,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","The discussion on vm-dev shows that this tries to solve a problem which rather is at image side in latest Pharo.
See http://lists.squeakfoundation.org/pipermail/vm-dev/2018-March/027341.html
and that we should aim at simplifying the implementation rather than complexifying
See http://lists.squeakfoundation.org/pipermail/vm-dev/2018-March/027343.html
And excuse the naive question, but why feof() would not work for all cases?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377704874,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Nicolas,
There are actually 3 or 4 issues (depending on what you want to include at the moment):


ZnBufferedReadStream was doing the wrong thing (the image side issue you mentioned).
That has been fixed.


#atEnd returns the wrong information for non-regular files on Unix.
That's what this PR will fix.
http://lists.squeakfoundation.org/pipermail/vm-dev/2018-March/027342.html demonstrates the issue.


Stdio streams are treated as a special case on Unix.
Now that we can open streams by file descriptor we're almost at the point where we can remove special handling for stdio streams on Unix.  I haven't gone through all the code to be sure though.  That would obviously simplify things.


Stdio streams are treated as a special case on Windows.
I haven't looked at this at all.



And excuse the naive question, but why feof() would not work for all cases?

It might, but currently there are tests in the Pharo automated test suite which explicitly check that #atEnd returns true when the stream has returned the last character (but not past it).  I don't know how important these tests are.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/OpenSmalltalk-Bot,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377705650,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","On Sat, Mar 31, 2018 at 09:01:49AM -0700, Nicolas Cellier wrote:

 The discussion on vm-dev shows that this tries to solve a problem which rather is at image side in latest Pharo.
 See http://lists.squeakfoundation.org/pipermail/vm-dev/2018-March/027341.html
 and that we should aim at simplifying the implementation rather than complexifying
 See http://lists.squeakfoundation.org/pipermail/vm-dev/2018-March/027343.html

 About the simplification, wasn't there another effort to remove the cached file size?
 And excuse the naive question, but why feof() would not work for all cases?

It is not naive, and it is definitely not obvious.

The answer I would give is that the feof() test has a different meaning from
""at end of file"". The feof() test determines if an end of file flag was set
in some previous operation. If the flag is set, then you know that you are
at the end of file. But if it is not set, you could still be at the end of
file position, in which case the end of file flag will be set the next time
you attempt to do a read.

Thus if we want atEnd to mean ""at the end now, and the next read will produce
an error"", then the feof() cannot answer that.

Dave",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/nicolas-cellier-aka-nice,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377793153,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Both,
thanks for the feof() explanation, I should have known this.
So, it shows that we are not on the right track.
The right way to do it on Unix is to try to read and check if atEnd in
post-condition rather than trying to test atEnd in pre-condition.
This is exactly as suggested by Levente.
Or even better, get some end-of-file error condition directly in response
to read primitive, and handle that gracefully at image side.

IMO primitiveFileAtEnd should rather be deprecated.


2018-03-31 18:35 GMT+02:00 OpenSmalltalk-Bot <notifications@github.com>:
…
 On Sat, Mar 31, 2018 at 09:01:49AM -0700, Nicolas Cellier wrote:
 >
 > The discussion on vm-dev shows that this tries to solve a problem which
 rather is at image side in latest Pharo.
 > See http://lists.squeakfoundation.org/pipermail/vm-dev/2018-
 March/027341.html
 > and that we should aim at simplifying the implementation rather than
 complexifying
 > See http://lists.squeakfoundation.org/pipermail/vm-dev/2018-
 March/027343.html
 >
 > About the simplification, wasn't there another effort to remove the
 cached file size?
 > And excuse the naive question, but why feof() would not work for all
 cases?
 >

 It is not naive, and it is definitely not obvious.

 The answer I would give is that the feof() test has a different meaning
 from
 ""at end of file"". The feof() test determines if an end of file flag was set
 in some previous operation. If the flag is set, then you know that you are
 at the end of file. But if it is not set, you could still be at the end of
 file position, in which case the end of file flag will be set the next time
 you attempt to do a read.

 Thus if we want atEnd to mean ""at the end now, and the next read will
 produce
 an error"", then the feof() cannot answer that.

 Dave

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#232 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAscIrim1_6lcCunTBfwxNA7jtNToY5Kks5tj7BugaJpZM4S6rMa>
 .",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377794428,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","For example in Squeak, we can rewrite atEnd like this:
StandardFileStream>>atEnd
    ""Answer whether the receiver is at its end. ""
    collection ifNotNil: [ position < readLimit ifTrue: [ ^false ] ].
    self basicNext ifNil: [ ^true ].
    self skip: -1.
    ^false

then entirely remove primAtEnd: which has no more sender.
I presume it should be more or less equivalent in Pharo.
Then tell about limitation and deprecation in primitiveFileAtEnd comment.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377794834,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Nicolas,

So, it shows that we are not on the right track.
The right way to do it on Unix is to try to read and check if atEnd in
post-condition rather than trying to test atEnd in pre-condition.

But that is exactly what this PR is about - it provides the ability for a post-condition check to be performed.

This is exactly as suggested by Levente.
Or even better, get some end-of-file error condition directly in response
to read primitive, and handle that gracefully at image side.

The correct usage, as you say above, is to read until there is no more data, and then check to see if the end of file has been reached.  Without this (modified) primitive there's no way to perform that check.
We could change the image to handle no-more-data and end-of-file differently, but it would still require the check to be made, and I wouldn't combine the read and eof checks in to one primitive.

IMO primitiveFileAtEnd should rather be deprecated.

Based on my understanding, I disagree.  Please let me know if I'm missing something.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377795132,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","For example in Squeak, we can rewrite atEnd like this:
...

I think this will return incorrect results.  No-more-data is not the same is end-of-file.  No-more-data just says that there isn't any data available now, but that may change.
Don't forget we are talking about non-regular files, e.g. /dev/urandom, that isn't a real stream, it is calculated and may be waiting on external resources.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377801495,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","I'll never learn to not reply when I'm in a hurry...

Don't forget we are talking about non-regular files, e.g. /dev/urandom, that isn't a real stream,
it is calculated and may be waiting on external resources.

It is, of course, a real stream.  Just not a regular file.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/nicolas-cellier-aka-nice,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377810556,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Alistair,
OK, I see your point, my proposal would work for /dev/random but maybe not all possible kind of stream
But then primitiveFileAtEnd is trying to be too smart:

being able to test atEnd in pre-condition for regular files
being able to test atEnd in post-condition for the rest of the world (pipe socket special devices etc...).

It's kind of brainfuck. I say we should simplify and keep only one, post-condition with a simple feof and leave smartness at image side.
What if we add
primitiveEncounteredEndOfFile
    ""Answer true if the end of file was encountered at last read operation"".

And leave current primitive only for backward compatibility with deprecation warning in the comment?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/OpenSmalltalk-Bot,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377813148,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","On Sun, Apr 01, 2018 at 12:26:56PM -0700, Nicolas Cellier wrote:

 Hi Alistair,
 OK, I see your point, my proposal would work for /dev/random but maybe not all possible kind of stream
 But then primitiveFileAtEnd is trying to be too smart:
 - being able to test atEnd in pre-condition for regular files
 - being able to test atEnd in post-condition for the rest of the world (pipe socket special devices etc...).
 It's kind of brainfuck. I say we should simplify and keep only one, post-condition with a simple feof and leave smartness at image side.
 What if we add

     primitiveEncounteredEndOfFile
         ""Answer true if the end of file was encountered at last read operation"".

 And leave current primitive only for backward compatibility with deprecation warning in the comment?

As a point of reference, in OSProcess it is implemented as StandardFileStream>>atEndOfFile
as an extension in *OSProcess-Base, as distinct from StandardFileStream>>atEnd. The EOF
test is done in the OSProcessPlugin (not FilePlugin), and is implemented as #primitiveTestEndOfFileFlag.

The most important use case is for a file stream on an OS pipe (e.g. OSPipe new reader).

Similar to /dev/random, the stream on an OS pipe is represented as a kind of
PositionableStream, but it is a positionable stream that does not know its
position, and for which the position is not settable.

I do not know of a perfect solution to this, but if you want to experiment on
the image side with the different semantics of ""at end now"" versus ""last operation
hit the EOF condition so do not bother asking for more"" then the primitiveTestEndOfFileFlag
that is present in any VM with the UnixOSProcessPlugin will probably give you
what is needed to try out some new ideas.

Dave",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/nicolas-cellier-aka-nice,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-377820660,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi David, I will have a look.
We still have ungetc to just skip: -1 even on a pipe, as long as called only once.
This could be used to test atEndNow in precondition, Am I wrong?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,13,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-378168866,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Nicolas and Dave,

We still have ungetc to just skip: -1 even on a pipe, as long as called only once.
This could be used to test atEndNow in precondition, Am I wrong?

You're correct (as I understand it).  I think it is more a matter of
what do we want to try and move to in the long term.
Right now the behaviour of #atEnd is:

True after moving past the end for stdio files
True when at the end for regular (disk) files
Broken for non-regular files

So we already have both behaviours.
My natural inclination is to minimise the primitive code and let the
image handle it.  In this case, that means keeping the feof() behaviour
and eventually changing the definition for regular files.
The primitive should also be checking ferror(), so should be
something like (untested):
sqInt
sqFileAtEnd(SQFile *f) {
	sqInt status;
	/* Return true if the file's read/write head is at the end of the file. */

	if (!sqFileValid(f))
		return interpreterProxy->success(false);
	pentry(sqFileAtEnd);
	/* Regular files test based on current position vs size,
	 * all other files use feof() */
	if (f->isStdioStream || !S_ISREG(f->st_mode))
		status = feof(getFile(f))
	else
		status = ftell(getFile(f)) >= getSize(f);
	if (ferror(getFile(f)))
		primitiveFailForOSError(errno);
	return pexit(status);
}

Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/nicolas-cellier-aka-nice,14,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-378183604,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Alistair, you are perfectly right.
The dual pre/post condition did already exist, and you are proposing an improvement.
My only concern was about complexifying a piece that we will keep forever for compatibility reasons, while we may better make deeper changes at the image side.
But 'the best is the enemy of the good', if you think that this change is vital for Pharo, i have no further objection.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,15,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-378215544,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Nicolas,
Thanks.  I agree that this isn't simplifying the existing code, although I also think it isn't really adding complexity.  It does result in an arguably correct response where before it was clearly incorrect.
Just for the record, the same incorrect behaviour currently exists in Squeak (#atEnd returns the wrong result for a non-regular file).
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/eliotmiranda,16,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-378252881,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Alistair,
 On Apr 3, 2018, at 4:19 AM, akgrant43 ***@***.***> wrote:

 Hi Nicolas,

 Thanks. I agree that this isn't simplifying the existing code, although I also think it isn't really adding complexity. It does result in an arguably correct response where before it was clearly incorrect.

 Just for the record, the same incorrect behaviour currently exists in Squeak (#atEnd returns the wrong result for a non-regular file).

Please add the gist of David's description of feof() to the code when you fix this.  That's extremely important information.  TIA
…
 Cheers,
 Alistair

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,17,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-378749873,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Please add the gist of David's description of feof() to the code when you fix this.  That's extremely important information.  TIA

Done.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/nicolas-cellier-aka-nice,18,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-378751460,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","wow, if it works, it looks good!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,19,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-378758092,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","wow, if it works, it looks good!

I've run the full automated test suite on Ubuntu 64 with Squeak5.1-16549-64bit.image.  There were 4 failures and 3 errors, but none looked remotely related.
Pharo 7 I filtered the packages in Test Runner with 'Zinc|File' and there were no failures.",True,{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/jecisc,20,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-379199478,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","@akgrant43
Hi,
Since this PR was merged OSProcess is broken if I use it with the latest Pharo 61 and the latest VM.
Here is an example of error:
BufferedAsyncFileReadStream(Object)>>primitiveFailed:
BufferedAsyncFileReadStream(Object)>>primitiveFailed
BufferedAsyncFileReadStream(StandardFileStream)>>primAtEnd:
BufferedAsyncFileReadStream(StandardFileStream)>>atEnd
[ self readBuffer atEnd and: [ super atEnd ] ] in BufferedAsyncFileReadStream>>atEnd
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
BufferedAsyncFileReadStream>>atEnd
BufferedAsyncFileReadStream(AttachableFileStream)>>upToEnd
ExternalPipe>>upToEnd
PipeableOSProcess(PipeJunction)>>upToEnd
[ super upToEnd ] in PipeableOSProcess>>upToEnd
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
PipeableOSProcess>>upToEnd
PipeableOSProcess(PipeJunction)>>outputOn:
PipeableOSProcess(PipeJunction)>>output
PipeableOSProcess(PipeJunction)>>outputAndError",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,21,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-379201472,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Cyril,
Can you provide some sample code that triggers the problem?  I've never used BufferedAsyncFileReadStream directly, and it's quite a while since I've used OSProcess.
Also:
32 or 64 bit?
OS?
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/jecisc,22,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-379204116,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Yes sorry I was a little in a hurry :)
OS:
 ~> lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 16.04.3 LTS
Release:        16.04
Codename:       xenial

Pharo version: Pharo 61 60540
VM: Latest VM 64bits (we do not test the latest 32bits vm so it's maybe the same)
We use OSProcess this way:
compileFile: aFile
	| thisProcess currentPath result command |
	thisProcess := OSProcess thisOSProcess.
	currentPath := thisProcess environment at: #PATH.
	thisProcess environment at: #PATH put: self binDirectory , ':' , currentPath.
	command := PipeableOSProcess command: ( '""' , self binPath , '"" ""' , aFile fullName , '""').
	[ result := command outputAndError ] ensure: [ command close ].
	thisProcess environment at: #PATH put: currentPath.
	^ result first",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/akgrant43,23,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-379209968,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","Hi Cyril,
I wasn't able to reproduce it, although I'm obviously missing the definition of ""self binPath"".
Are you able to adapt the script below to trigger the failure?
| thisProcess currentPath result command aFile |

	aFile := 'PharoDebug.log' asFileReference.
	aFile exists ifFalse: [ self error: 'I want a reasonable size file (several kB)' ].
	thisProcess := OSProcess thisOSProcess.
	currentPath := thisProcess environment at: #PATH.
	command := PipeableOSProcess command: ( 'cat ' , aFile fullName).
	[ result := command outputAndError ] ensure: [ command close ].
	thisProcess environment at: #PATH put: currentPath.
	result


"" #('THERE_BE_DRAGONS_HERE
...
""

System Report:
Image
-----
/home/alistair/pharo7/IssueOSProcess6/Pharo.image
Pharo6.0
Latest update: #60540
Unnamed

Virtual Machine
---------------
/home/alistair/pharo7/IssueOSProcess6/vm/lib/pharo/5.0-201804051426/pharo
CoInterpreter VMMaker.oscog-eem.2361 uuid: 7ca2f89a-de70-422f-b92b-54f91ac4e47b Apr  5 2018
StackToRegisterMappingCogit VMMaker.oscog-eem.2361 uuid: 7ca2f89a-de70-422f-b92b-54f91ac4e47b Apr  5 2018
VM: 201804051426 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Apr 5 16:26:17 2018 +0200 $ CommitHash: 3421494 $ Plugins: 201804051426 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/jecisc,24,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-379213911,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","I could not include everything because it's a proprietary code (I already had to remove some part in this example )
It'll be a little hard to get a reproducible case since I only have a windows :( I saw the failure on a Jenkins build. I'll try to find a way to reproduce it.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,232,2018-03-26T08:01:59Z,2018-04-05T14:26:18Z,2018-04-08T15:12:43Z,MERGED,True,23,7,1,https://github.com/akgrant43,FilePlugin>>primitiveFileAtEnd for non-regular files,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232,https://github.com/jecisc,25,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/232#issuecomment-379217503,"FilePlugin currently splits files in to two groups: 1) Stdio streams and
2) everything else.
To test for the end of file, FilePlugin>>primitiveFileAtEnd:

Uses feof() for stdio streams.
Compares the current position to the file size for everything else.

This returns the expected results for regular files, but fails for
non-regular files, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
returns an empty array.
On Unix, the proper way to check is to read past the end of the file and
then call feof() to confirm that it is in fact at the end.
Pharo has plenty of code that assumes that a file position >= the file
size means that the file is at the end, and as stated above this
generally works for regular files.
This patch modifies FilePlugin>>primitiveFileAtEnd to:
a) Keep the current behaviour of using the file position test for
regular files.
b) Keep the current behaviour of using feof() for stdio streams.
c) Use feof() for non-regular files, e.g. /dev/urandom.
This allows existing code to continue to function, and allows
non-regular files to be tested correctly.
After applying the patch, the example code above answers the expected
result, e.g.:
(FileSystem / 'dev' / 'urandom') binaryReadStream next: 8.
"" #[179 136 227 226 28 147 197 125]""
On Windows, as far as I can tell, all files are regular, and the
position test is used regularly, so no change is requried.
Fogbugz: https://pharo.fogbugz.com/f/cases/21643/","I added to our Jenkins a command to print the version and I see that we used the same VM.
5.0-201804051426  Thu Apr  5 14:34:45 UTC 2018 gcc 4.8 [Production Spur 64-bit VM]
CoInterpreter VMMaker.oscog-eem.2361 uuid: 7ca2f89a-de70-422f-b92b-54f91ac4e47b Apr  5 2018
StackToRegisterMappingCogit VMMaker.oscog-eem.2361 uuid: 7ca2f89a-de70-422f-b92b-54f91ac4e47b Apr  5 2018
VM: 201804051426 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $
Date: Thu Apr 5 16:26:17 2018 +0200 $ CommitHash: 3421494 $
Plugins: 201804051426 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $
Linux travis-job-8fe7d8cc-2ee3-4c21-8897-143e18d7a979 4.4.0-101-generic #124~14.04.1-Ubuntu SMP Fri Nov 10 19:05:36 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
plugin path: /var/lib/jenkins/workspace/Ada-Generator/ARCHITECTURE/64/PHARO/61/VERSION/development/pharo-vm/lib/pharo/5.0-201804051426 [default: /var/lib/jenkins/workspace/Ada-Generator/ARCHITECTURE/64/PHARO/61/VERSION/development/pharo-vm/lib/pharo/5.0-201804051426/]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,233,2018-04-02T12:23:35Z,2018-04-03T08:50:48Z,2018-04-03T18:42:42Z,MERGED,True,38,4,3,https://github.com/akgrant43,vm version string: add commit short hash,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/233,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/233,"Modify the version string so that the git commit short hash is displayed
after the commit date.","Modify the version string so that the git commit short hash is displayed
after the commit date.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,233,2018-04-02T12:23:35Z,2018-04-03T08:50:48Z,2018-04-03T18:42:42Z,MERGED,True,38,4,3,https://github.com/akgrant43,vm version string: add commit short hash,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/233,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/233#issuecomment-377965391,"Modify the version string so that the git commit short hash is displayed
after the commit date.",+1 for Git commit short hashes in the version string.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,234,2018-04-02T17:13:49Z,2018-10-18T07:28:51Z,2022-03-16T11:48:30Z,CLOSED,False,51,36,3,https://github.com/krono,Krono/upgrade gcc,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/234,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/234,"Upgrade GCC, demote Newspeak builds","Upgrade GCC, demote Newspeak builds",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,234,2018-04-02T17:13:49Z,2018-10-18T07:28:51Z,2022-03-16T11:48:30Z,CLOSED,False,51,36,3,https://github.com/krono,Krono/upgrade gcc,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/234,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/234#issuecomment-378009306,"Upgrade GCC, demote Newspeak builds","No you didn't touch, it's just an effect of cygwin upgrades...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,234,2018-04-02T17:13:49Z,2018-10-18T07:28:51Z,2022-03-16T11:48:30Z,CLOSED,False,51,36,3,https://github.com/krono,Krono/upgrade gcc,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/234,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/234#issuecomment-430904258,"Upgrade GCC, demote Newspeak builds","Let's close this, no longer relevant",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,235,2018-04-02T20:29:48Z,2018-04-02T20:30:25Z,2018-04-02T20:30:32Z,MERGED,True,44,35,6,https://github.com/nicolas-cellier-aka-nice,Compile sista with clang,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/235,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/235,"This builds pharo.sista.spur with clang in order to workaround gcc bugs
This also re-arrange the build matrix order for appveyor and build stages order for travis
This also fix a compiler warning for ALSA sound, necessary for compiling with clang (it's treated as an error in clang, not in gcc)
[ci skip] the build is green in its branch and no concurrent feature happened, so let's not wait another pair of hours.","This builds pharo.sista.spur with clang in order to workaround gcc bugs
This also re-arrange the build matrix order for appveyor and build stages order for travis
This also fix a compiler warning for ALSA sound, necessary for compiling with clang (it's treated as an error in clang, not in gcc)
[ci skip] the build is green in its branch and no concurrent feature happened, so let's not wait another pair of hours.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,238,2018-04-06T15:01:27Z,2018-04-06T17:28:16Z,2018-04-06T22:57:42Z,MERGED,True,1,0,1,https://github.com/jecisc,Do not convert line ending of image/*.sh files on windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238,https://github.com/jecisc,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238,Cygwin cannot run scripts with crlf. I added image/*.sh to the gitattributes to not convert their line ending.,Cygwin cannot run scripts with crlf. I added image/*.sh to the gitattributes to not convert their line ending.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,238,2018-04-06T15:01:27Z,2018-04-06T17:28:16Z,2018-04-06T22:57:42Z,MERGED,True,1,0,1,https://github.com/jecisc,Do not convert line ending of image/*.sh files on windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238#issuecomment-379287029,Cygwin cannot run scripts with crlf. I added image/*.sh to the gitattributes to not convert their line ending.,"Hi Cyril,
Which file was causing problems (so I can do a git checkout and manual inspect the file before applying your PR)?
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,238,2018-04-06T15:01:27Z,2018-04-06T17:28:16Z,2018-04-06T22:57:42Z,MERGED,True,1,0,1,https://github.com/jecisc,Do not convert line ending of image/*.sh files on windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238,https://github.com/jecisc,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238#issuecomment-379288499,Cygwin cannot run scripts with crlf. I added image/*.sh to the gitattributes to not convert their line ending.,It was buildspurvmmakerimage.sh and all the scripts it calls.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,238,2018-04-06T15:01:27Z,2018-04-06T17:28:16Z,2018-04-06T22:57:42Z,MERGED,True,1,0,1,https://github.com/jecisc,Do not convert line ending of image/*.sh files on windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238#issuecomment-379311740,Cygwin cannot run scripts with crlf. I added image/*.sh to the gitattributes to not convert their line ending.,"Note that there is a workaround: put set -o igncr in your .bash_profile
See https://stackoverflow.com/questions/14598753/running-bash-script-in-cygwin-on-windows-7 for example.
I agree that it's preferable to correctly set the git file attributes and avoid the problem at the source!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,238,2018-04-06T15:01:27Z,2018-04-06T17:28:16Z,2018-04-06T22:57:42Z,MERGED,True,1,0,1,https://github.com/jecisc,Do not convert line ending of image/*.sh files on windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238,https://github.com/jecisc,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/238#issuecomment-379321628,Cygwin cannot run scripts with crlf. I added image/*.sh to the gitattributes to not convert their line ending.,"Thank you for the information! I did not knew. I'll probably still try to avoid adding this, like that I'll encounter the problems and do PR to correct them.",True,{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,239,2018-04-06T23:55:00Z,2018-04-07T05:47:13Z,2018-04-07T05:47:43Z,MERGED,True,18,0,2,https://github.com/jecisc,Add instructions to download squeak vm for cygwin to build VMMaker,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/239,https://github.com/jecisc,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/239,"In the image directory, there are scripts to prepare a VMMaker image with squeak.
Those scripts have instructions to download the latest squeak vm depending on the OS. Currently, there is only Darwin and Linux. This PR add instructions for Cygwin.","In the image directory, there are scripts to prepare a VMMaker image with squeak.
Those scripts have instructions to download the latest squeak vm depending on the OS. Currently, there is only Darwin and Linux. This PR add instructions for Cygwin.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,239,2018-04-06T23:55:00Z,2018-04-07T05:47:13Z,2018-04-07T05:47:43Z,MERGED,True,18,0,2,https://github.com/jecisc,Add instructions to download squeak vm for cygwin to build VMMaker,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/239,https://github.com/clementbera,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/239#issuecomment-379434504,"In the image directory, there are scripts to prepare a VMMaker image with squeak.
Those scripts have instructions to download the latest squeak vm depending on the OS. Currently, there is only Darwin and Linux. This PR add instructions for Cygwin.","Merged, harmless, script related.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,241,2018-04-07T11:37:13Z,2018-04-07T15:27:11Z,2018-04-07T15:27:23Z,MERGED,True,3,0,2,https://github.com/nicolas-cellier-aka-nice,compile win32 squeak.sista.spur + lowcode with clang,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/241,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/241,"Same as we done for Pharo to workaround gcc bug
It just fix the two appveyor red builds (for which failure is allowed) and does not touch anything else, so it is safe to merge.
[ci skip]","Same as we done for Pharo to workaround gcc bug
It just fix the two appveyor red builds (for which failure is allowed) and does not touch anything else, so it is safe to merge.
[ci skip]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379476201,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","Hi Cyril,

    wouldn't it be better to have the script in scripts with some visible name?

_,,,^..^,,,_ (phone)
…
 On Apr 7, 2018, at 7:59 AM, CyrilFerlicot ***@***.***> wrote:

 Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.

 I am not sure it will work at the first try. I do a PR to let appveyor test it for me.

 You can view, comment on, or merge this pull request online at:

   #242

 Commit Summary

 Refactor cygwin installation for appveyor. Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allow the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all neededs dependencies.
 File Changes

 M .appveyor.yml (21)
 A .appveyor_installCygwin.bat (70)
 M build.win32x86/HowToBuild (3)
 M build.win64x64/HowToBuild (2)
 Patch Links:

 https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242.patch
 https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242.diff
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379476487,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",I hesitated because the installations of Travis are at the root. I'll do the changes because I wanted to add it there at the beginning and changed my mind to follow travis. I forgot about the visibility problem.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379476616,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",Maybe we should move all of them to scripts/ci/ or a new top-level dir ci/?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/nicolas-cellier-aka-nice,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379476847,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","It looks good to me, and the cygwin install was performed.
I wonder why the build later failed?
https://ci.appveyor.com/project/OpenSmalltalk/vm/build/1.0.1240/job/8juaracj8h7yeiyy",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379476852,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","It seems a good solution. For my part, I have no preference between /scripts/ci or /ci. So I'll do the changes to the PR when a decision will be made.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379477029,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","@nicolas-cellier-aka-nice Maybe variables name conflicted? This seems very unlikely since one is a batch script and the other a bash script but I don't have enough experience with appveyor to totally exclude the possibility.
In my next commit I can add some logs to the travis build script to spot the prolem.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379478750,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","I moved the script to scripts/ci/ and renamed it. If later the ci/ folder is chosen I can change it.
I also corrected the typo and changed the variables names to be totally sure they do not interfere.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379490280,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",The build buildwin64.64/pharo.cog.spur failed. I launched it locally to check if I can reproduce the problem.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379491604,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",I get the same error locally.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379492201,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","I don't know what can be the error because if I compare this build with a build that passed earlier, the only change I can find is that now cygwin install unzip to be able to also build VMMaker.
See diff here: https://www.diffchecker.com/sAQ7WlFr
At the left the build from Merge pull request #241 from OpenSmalltalk/sista_lowcode_clang_again
At the right the build from Pull request #242 - Refactor cygwin installation for appveyor",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/nicolas-cellier-aka-nice,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379494817,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","There is another difference:
the successfull build does use the .thirdparty-cache
https://ci.appveyor.com/project/OpenSmalltalk/vm/build/1.0.1241/job/jde7286l603l9134?fullLog=true

line 5 Cache '.thirdparty-cache' - Restored

Then it just keep the prebuilt library rather than rebuilding it

line 362 cp -f /cygdrive/c/projects/vm/.thirdparty-cache/windows/x86_64/bin/libssh2-1.dll build/vm",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/nicolas-cellier-aka-nice,13,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379495784,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","Could it be related to this commit?
57e68ce
See my comment about THIRDPARTY_TOOLCHAIN in build.win64x64/common/Makefile.lib.extra",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,14,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379504697,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","IIUC the CI caches the build of external plugins and it just builds the plugins sometimes. (randomly?)
So, if I restart the build it will pass except if I have another build triggering the recreation of the cache? Should I do that since the problem is not related to this PR?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/eliotmiranda,15,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379511599,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","On Sat, Apr 7, 2018 at 8:15 AM, Fabio Niephaus ***@***.***> wrote:
 Maybe we should move all of them to scripts/ci/ or a new top-level dir ci/?

+1.  Lovely idea.  Succinct and indicative.

_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/fniephaus,16,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-379528826,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",Let's avoid another top-level dir and go with scripts/ci/. But please be aware that the scripts might make assumptions as to where they live. CI should bark anyway at you if you've missed something :) thanks!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/bencoman,17,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-404555510,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","After getting tired of having to re-run the CygWin setup-x86.exe a few times to install one-more-missing-requirement, I discovered this PR and manually extracted ""scripts/ci/installCygwin.bat"" from this PR to my system so I could run it manually.
Afterwards doing ""cd build.win32x86/pharo.cog.spur;  ./mvm"" worked like a dream and an hour later the compile completed successfully.
So it seems this is a great initiative.  What is holding it up?
Can an admin give the CI a bump to see if the error was transitory?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/eliotmiranda,18,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-404593068,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","Hi Ben,
On Thu, Jul 12, 2018 at 8:37 AM, Ben Coman ***@***.***> wrote:
 After getting tired of having to re-run the CygWin setup-x86.exe a few
 times to install one-more-missing-requirement, I discovered this PR and
 manually extracted ""scripts/ci/installCygwin.bat"" from this PR to my system
 so I could run it manually.

So should this be mentioned in HowToBuild?
 Afterwards doing ""cd build.win32x86/pharo.cog.spur; ./mvm"" worked like a
 dream and an hour later the compile completed successfully.

An hour?
 So it seems this is a great initiative. What is holding it up?

What's the issue?
 Can an admin give the CI a bump to see if the error was transitory?

_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/OpenSmalltalk-Bot,19,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-404767842,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","Hi,
On 12/07/2018 19:43, Eliot Miranda wrote:
 Hi Ben,

 So should this be mentioned in HowToBuild?

This will be mentionned after the PR is integrated:

https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242/files#diff-ac2d0c36ed846d5d97ea3d911ecb424aR74


 An hour?

When there is no cashes the build of the windows VM can take between
45min and 4h from my experience (Maybe one was on a SSD and another on
an HDD)

 What's the issue?

The issue is that the CI is broken and only pass because of caches in
other PR. With this PR, one of the cache was invalidated and the VM
build broke, so the PR was not integrated because the check did not pass.

Maybe it is corrected by now?

Anyway, now there is a merge conflict :(
…
> Can an admin give the CI a bump to see if the error was transitory?
>
 _,,,^..^,,,_
 best, Eliot

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#242 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AhLyW_cSqykK4M8NEEzlsHl9Gi7uqJSHks5uF4rQgaJpZM4TLHTw>.


-- 
Cyril Ferlicot
https://ferlicot.fr",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/bencoman,20,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-404838822,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","On 13 July 2018 at 01:43, Eliot Miranda ***@***.***> wrote:
 Hi Ben,

 On Thu, Jul 12, 2018 at 8:37 AM, Ben Coman ***@***.***>
 wrote:

 > After getting tired of having to re-run the CygWin setup-x86.exe a few
 > times to install one-more-missing-requirement, I discovered this PR and
 > manually extracted ""scripts/ci/installCygwin.bat"" from this PR to my
 system
 > so I could run it manually.
 >

 So should this be mentioned in HowToBuild?

Definitely! Once this PR is merged. The PR includes an update to
HowToBuild...
  https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242/files


 > Afterwards doing ""cd build.win32x86/pharo.cog.spur; ./mvm"" worked like a
 > dream and an hour later the compile completed successfully.
 >

 An hour?

Cyril saw similar time, step 5 here...
   http://forum.world.st/Compiling-the-windows-32-bits-
vm-tp5072691p5073200.html
I believe most of this time was building Pharo's third-party libs.

cheers -ben",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,21,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-404839259,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",Checks are now green! :),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/jecisc,22,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-410450991,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",Any news on this integration?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/bencoman,23,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-414112898,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237","Can this please be integrated?  It seems amendments covered off all comments.

I moved the script to  .../scripts/ci/

Actually, I think it might be better located in just  .../scripts/  since its useful to anyone manually setting up for local cygwin builds - but don't let that hold up the integration.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/fniephaus,24,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-414114452,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",@bencoman merged and moved via 815be6b.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,242,2018-04-07T14:59:13Z,2018-08-19T09:10:08Z,2018-08-19T13:39:55Z,MERGED,True,80,21,5,https://github.com/jecisc,Refactor cygwin installation for appveyor,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242,https://github.com/bencoman,25,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/242#issuecomment-414128561,"Now the installation is extracted to a reusable batch script and install all dependencies, including the ones installed by default on appveyor. This allows the users of the vm to use the script to build their own cygwin to compile the vm without having to look for all needed dependencies.
I am not sure it will work at the first try. I do a PR to let appveyor test it for me.
Close: #237",Super cool. Thanks @fniephaus.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,243,2018-04-08T15:11:57Z,2018-04-09T04:37:33Z,2018-04-09T04:37:45Z,MERGED,True,14,4,1,https://github.com/akgrant43,primitiveFileAtEnd / sqFileAtEnd stdio handling,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/243,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/243,"Modify sqFileAtEnd (primitiveFileAtEnd) so that:

stdout & stderr always return false
feof() isn't valid on these files.
Don't peek if stdin is a terminal
We don't want to block in this case.
Don't peek if already at end
There's no need.","Modify sqFileAtEnd (primitiveFileAtEnd) so that:

stdout & stderr always return false
feof() isn't valid on these files.
Don't peek if stdin is a terminal
We don't want to block in this case.
Don't peek if already at end
There's no need.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,244,2018-04-08T22:47:04Z,2018-08-19T09:14:19Z,2018-08-19T09:14:19Z,MERGED,True,6,6,7,https://github.com/jecisc,Move travis scripts to scripts/ci/,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/244,https://github.com/jecisc,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/244,"Move travis scripts to scripts/ci/.
For now, I did not changes the paths in the moved scripts because I think the resolutions of paths take the working directory, thus maybe I need to change nothing. We'll see if travis complains.","Move travis scripts to scripts/ci/.
For now, I did not changes the paths in the moved scripts because I think the resolutions of paths take the working directory, thus maybe I need to change nothing. We'll see if travis complains.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,244,2018-04-08T22:47:04Z,2018-08-19T09:14:19Z,2018-08-19T09:14:19Z,MERGED,True,6,6,7,https://github.com/jecisc,Move travis scripts to scripts/ci/,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/244,https://github.com/jecisc,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/244#issuecomment-380031042,"Move travis scripts to scripts/ci/.
For now, I did not changes the paths in the moved scripts because I think the resolutions of paths take the working directory, thus maybe I need to change nothing. We'll see if travis complains.",@fniephaus The PR seems to pass travis and appveyor check. Only needs a human review and it should be ready to integrate. :),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,245,2018-04-09T17:12:27Z,2018-04-10T05:27:58Z,2018-04-10T05:28:30Z,MERGED,True,22,14,1,https://github.com/akgrant43,sqFileAtEnd() revert to previous error checking,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/245,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/245,"sqFileAtEnd() hasn't done any error checking.  However adding it has
caused a report of primitive failures where previously none occurred.
No information is given about what the error is (errno isn't set), and
because no other functions are doing error checking we can't know how
far back the error occurred.
We can't limit error checking to this call because clearerr() clears not
only the error flag, but also the end-of-file flag.","sqFileAtEnd() hasn't done any error checking.  However adding it has
caused a report of primitive failures where previously none occurred.
No information is given about what the error is (errno isn't set), and
because no other functions are doing error checking we can't know how
far back the error occurred.
We can't limit error checking to this call because clearerr() clears not
only the error flag, but also the end-of-file flag.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,246,2018-04-10T21:04:11Z,2018-04-13T22:11:13Z,2018-04-13T22:11:13Z,MERGED,True,30,10,8,https://github.com/jecisc,[ci skip] Correct typos and add documentation about ./mvm -f,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/246,https://github.com/jecisc,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/246,"I heard that in windows and OSX it is possible to only compile the production vm with ./mvm -f. Since it was not written in the HozToBuild files, this PR add the documentation.
Please correct me if I'm wrong!","I heard that in windows and OSX it is possible to only compile the production vm with ./mvm -f. Since it was not written in the HozToBuild files, this PR add the documentation.
Please correct me if I'm wrong!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,247,2018-04-12T14:46:31Z,2018-04-13T20:22:56Z,2018-04-13T20:22:56Z,MERGED,True,0,252,2,https://github.com/jecisc,[ci skip] Remove old files not useful anymore,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/247,https://github.com/jecisc,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/247,"I think that the old README and the empty CHANGES files are not useful anymore (the old README will still be in the history if needed).
This PR remove them. If you think I'm wrong just close this PR, it's fine with me.","I think that the old README and the empty CHANGES files are not useful anymore (the old README will still be in the history if needed).
This PR remove them. If you think I'm wrong just close this PR, it's fine with me.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,248,2018-04-13T23:35:37Z,2018-04-14T23:34:04Z,2018-04-16T17:34:52Z,MERGED,True,108,13,6,https://github.com/VincentBlondeau,Add new primitive for HostWindowPlugin: primitiveHostWindowIcon,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/248,https://github.com/VincentBlondeau,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/248,"Only the C part of the primitive
See https://pharo.fogbugz.com/f/cases/21701/Add-primitive-to-change-the-window-icon","Only the C part of the primitive
See https://pharo.fogbugz.com/f/cases/21701/Add-primitive-to-change-the-window-icon",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,249,2018-04-16T21:07:19Z,2018-04-16T22:29:26Z,2018-04-16T22:29:26Z,MERGED,True,1,1,1,https://github.com/jecisc,Correct content of source generation workspace,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/249,https://github.com/jecisc,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/249,"The command #generateAllConfigurationsUnderVersionControl seems to already generate the plugins, so there is no need to generate them a second time I guess. I moved the plugins generation command to the selective commands in the source generation workspace.","The command #generateAllConfigurationsUnderVersionControl seems to already generate the plugins, so there is no need to generate them a second time I guess. I moved the plugins generation command to the selective commands in the source generation workspace.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,250,2018-04-17T13:37:30Z,2018-04-17T19:17:31Z,2018-04-17T19:17:31Z,MERGED,True,3,3,1,https://github.com/estebanlm,attempt to fix dependency problems on pharo.cog.spur linux32,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/250,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/250,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,253,2018-04-18T10:02:12Z,2018-05-07T14:42:32Z,2018-05-07T14:42:32Z,CLOSED,False,8,6,2,https://github.com/estebanlm,another try to properly build libgit2,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/253,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/253,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,253,2018-04-18T10:02:12Z,2018-05-07T14:42:32Z,2018-05-07T14:42:32Z,CLOSED,False,8,6,2,https://github.com/estebanlm,another try to properly build libgit2,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/253,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/253#issuecomment-387087140,,will create another PR,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,Related to pharo-project/pharo#694,Related to pharo-project/pharo#694,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-383789148,Related to pharo-project/pharo#694,"Hi Vincent, in isStdioDescriptorATTY at line 898 there is no guard to check if pGetFileInformationByHandleEx has already been fetched.  The code needs to be something like
static pfnGetFileInformationByHandleEx pGetFileInformationByHandleEx = NULL;

if (! pGetFileInformationByHandleEx) {
	pGetFileInformationByHandleEx = (pfnGetFileInformationByHandleEx)
		GetProcAddress(GetModuleHandle(TEXT(""kernel32.dll"")),
					""GetFileInformationByHandleEx"");
	if (! pGetFileInformationByHandleEx)
		return -2;
}

Also, a word to the wise.  It's great to save vertical real estate putting things on long lines, but not for error returns, because of line oriented debugging.  We may want to put a breakpoint on an error return, not the guard for that return.  And so, the error return should be on a different line to the guard.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-383790127,Related to pharo-project/pharo#694,"Also, in platforms/Cross/plugins/FilePlugin/sqFilePluginBasicPrims.c, the comment ""//There is always an TTY to write into for Unix and Mac"" (and hence the implementation) is wrong.  It should be something like
sqInt sqStdioDescriptorIsATTY(void) {
	return isatty(fileno(stdin));
 }",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-383791517,Related to pharo-project/pharo#694,"Thanks Eliot for the piece of advice! I am not an expert in C yet ;)
I made the changes but I was wondering why it is needed to set a guard: the line before just set the pGetFileInformationByHandleEx to NULL.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-383808814,Related to pharo-project/pharo#694,"Hi Vincent,
Just based on a quick visual inspection of the code:

It looks like on Unix sqStdioDescriptorIsATTY() checks stdin, while on Windows it checks stdout, which is a bit inconsistent and they can be redirected independently anyway.  Why not pass an argument allowing the user to specify which file to check (0, 1, 2)?
We'll want to modify sqFileStdioHandlesInto() in sqWin32FilePrims.c to use the new check (instead of GetConsoleMode()).
Actually, since the result is always stored in the SQFile structure for the stdio streams, the primitive could just return the cached value rather than determining it every time.
sqFileAtEnd() on Windows just assumes that stdin is never at EOF if it is a terminal.  I don't know how EOF is signalled in a terminal on Windows (Ctrl-D?), but we could also improve this (although maybe this can be a separate PR).

Thanks!
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/eliotmiranda,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384105237,Related to pharo-project/pharo#694,"Hi Vincent,  shouldn't all the
files[0].isStdioStream = sqIsFileDescriptorATTY(0);
occurrences in platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c: sqFileStdioHandlesInto read either
files[0].isStdioStream = sqIsFileDescriptorATTY(STD_INPUT_HANDLE);
or
files[0].isStdioStream = sqIsFileDescriptorATTY(files[0].file);
?  Since sqIsFileDescriptorATTY could a HANDLE right?  And then you could get rid of the
h = (HANDLE)_get_osfhandle(fdNum);
call in sqIsFileDescriptorATTY, and rename it to sqIsFileHandleATTY.  yes it ,means that the Windows and Unix code differ a little, but they are different.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384108935,Related to pharo-project/pharo#694,The exposed primitive sqIsFileDescriptorATTY should not receive an HANDLE because one needs to call sqIsFileDescriptorATTY to know if an handle is available. But I can change sqWin32FilePrims.c:isFileDescriptorATTY to take an HANDLE as argument instead of a String,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384182750,Related to pharo-project/pharo#694,"Hi Vincent,
After checking out and building VincentBlondeau:addStdoutIsConsolePrimitive I get:
~/pharo7/pharo-snap/pharo-vm/opensmalltalk-vm/build.win32x86/pharo.cog.spur/builddbg/vm
$ gdb PharoConsole.exe
GNU gdb (GDB) (Cygwin 7.10.1-1) 7.10.1
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type ""show copying""
and ""show warranty"" for details.
This GDB was configured as ""i686-pc-cygwin"".
Type ""show configuration"" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type ""help"".
Type ""apropos word"" to search for commands related to ""word""...
Reading symbols from PharoConsole.exe...done.
(gdb) run --version
Starting program: /home/alistair/pharo7/pharo-snap/pharo-vm/opensmalltalk-vm/build.win32x86/pharo.cog.spur/builddbg/vm/PharoConsole.exe --                                               version
[New Thread 6252.0x16b0]
[New Thread 6252.0x1114]
[New Thread 6252.0x1a68]
[New Thread 6252.0x1d10]

Program received signal SIGSEGV, Segmentation fault.
0x76e1299b in msvcrt!_fileno () from /cygdrive/c/WINDOWS/System32/msvcrt.dll
(gdb) bt
#0  0x76e1299b in msvcrt!_fileno () from /cygdrive/c/WINDOWS/System32/msvcrt.dll
#1  0x00b4b17b in ?? ()
#2  0x00b4b333 in ?? ()
#3  0x00b4c567 in ?? ()
#4  0x00c22a7d in ?? ()
#5  0x00a913e3 in ?? ()
#6  0x74fc9564 in KERNEL32!BaseThreadInitThunk () from /cygdrive/c/WINDOWS/System32/KERNEL32.DLL
#7  0x773529ac in ntdll!EtwProcessPrivateLoggerRequest () from /cygdrive/c/WINDOWS/SYSTEM32/ntdll.dll
#8  0x77352980 in ntdll!EtwProcessPrivateLoggerRequest () from /cygdrive/c/WINDOWS/SYSTEM32/ntdll.dll
#9  0x00000000 in ?? ()
(gdb)

Sorry, but I'm out of time for today.  Hopefully I'll get to investigate a bit more over the coming days.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384369945,Related to pharo-project/pharo#694,"I was using the wrong function to convert the handle to a number. I found another solution that works, now, I hope it will be working",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384620453,Related to pharo-project/pharo#694,"Hi Vincent & Eliot,
This still isn't working because
sqFileStdioHandlesIntoFile_WithHandle_IsWritable() doesn't take SQFile
by reference (arrays are just pointers to the first element in C, which
is why the array of SQFile structures doesn't need to be passed by
reference explicitly):
sqFileStdioHandlesIntoFile_WithHandle_IsWritable(SQFile *file, HANDLE handle, int isWritable) {
        file->sessionID = thisSession;
        file->file = handle;
        file->writable = isWritable;
        file->lastOp = 0; /* unused on win32 */
        file->isStdioStream = isFileHandleATTY(handle);
        AddHandleToTable(win32Files, handle);
}


sqFileStdioHandlesInto(SQFile files[3])
{
        sqFileStdioHandlesIntoFile_WithHandle_IsWritable(&files[0], GetStdHandle(STD_INPUT_HANDLE), false);
        sqFileStdioHandlesIntoFile_WithHandle_IsWritable(&files[1], GetStdHandle(STD_OUTPUT_HANDLE), true);
        sqFileStdioHandlesIntoFile_WithHandle_IsWritable(&files[2], GetStdHandle(STD_ERROR_HANDLE), true);

        return 7;
}

I think that gets the basic changes you wanted done.  But it still
leaves stdio in cygwin terminals broken.  After a bit more reading it
looks like cygwin terminals and Windows ReadConsole() and WriteConsole()
functions are fundamentally incompatible.
I don't understand what ReadConsole() and WriteConsole() provide in
terms of benefits over FILE* streams, so I can't really comment on
the cost of replacing them.
Eliot, what are your thoughts about moving the stdio functionlity to use
FILE* streams instead of HANDLE streams?
I think that would allow the VM to use fread(), feof(), and fwrite() to
read and write stdio to terminals (cygwin), consoles (windows), pipes
and regular files.
Another option may be to leave the existing console functionality and
use the connectToFileDescriptor() routine to separately open the stdio
streams as FILE* streams.  The image can then decide how it wants to
interact with stdio.
(we should probably move this conversation to vm-dev and out of this
particular PR)
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384685196,Related to pharo-project/pharo#694,"I forgot that structs are directly stored in the array without pointer to them. I fixed it.
What do you mean by broken? Do you have an example I can reproduce?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384764181,Related to pharo-project/pharo#694,"Hi Vincent & Eliot,

What do you mean by broken? Do you have an example I can reproduce?

Sure - if you start PharoConsole.exe from within a cygwin (mintty)
terminal and remove the #isWin32 block from Stdio
class>>standardIOStreamNamed:forWrite: so that you are actually using
stdout, and then attempt to write something to stdout you'll get a
primitive failure.  The same sequence works from a dos box (cmd.exe).
That's because the read and write primitives rely on the Windows
ReadConsole() and WriteConsole() functions, which only work in a dos
box, not in mintty.
When we started these modifications I assumed that it would be possible
to have I/O that worked in both cygwin (mintty) and a dos box (cmd.exe).
However on further reading it looks like MingW programs (which use
either Windows functions such as ReadConsole() and WriteConsole() or
the MS posix implementation) will only work properly in a dos box.  If
you want proper mintty support you need to use the cygwin implementation
of the posix functions.
As an example, attempting to use the MingW/MS fread() function and
signal EOF:

In a dos box, typing Control-Z correctly signals EOF.
In a cygwin terminal (mintty), Control-D is never passed to the
program, so EOF is never true. (If you then type Control-C to
terminate the program, sometimes the terminal then consumes the
earlier Control-D and logs you out :-().

Someone please explain how I am wrong and how to get stdio working on
both dos boxes and cygwin terminals...
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/OpenSmalltalk-Bot,13,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384777486,Related to pharo-project/pharo#694,"Hi Alistair,
 On Apr 26, 2018, at 12:35 PM, akgrant43 ***@***.***> wrote:

 Hi Vincent & Eliot,

 What do you mean by broken? Do you have an example I can reproduce?

 Sure - if you start PharoConsole.exe from within a cygwin (mintty)
 terminal and remove the #isWin32 block from Stdio
 class>>standardIOStreamNamed:forWrite: so that you are actually using
 stdout, and then attempt to write something to stdout you'll get a
 primitive failure. The same sequence works from a dos box (cmd.exe).

 That's because the read and write primitives rely on the Windows
 ReadConsole() and WriteConsole() functions, which only work in a dos
 box, not in mintty.

 When we started these modifications I assumed that it would be possible
 to have I/O that worked in both cygwin (mintty) and a dos box (cmd.exe).
 However on further reading it looks like MingW programs (which use
 either Windows functions such as ReadConsole() and WriteConsole() or
 the MS posix implementation) will only work properly in a dos box. If
 you want proper mintty support you need to use the cygwin implementation
 of the posix functions.

 As an example, attempting to use the MingW/MS fread() function and
 signal EOF:

 In a dos box, typing Control-Z correctly signals EOF.
 In a cygwin terminal (mintty), Control-D is never passed to the
 program, so EOF is never true. (If you then type Control-C to
 terminate the program, sometimes the terminal then consumes the
 earlier Control-D and logs you out :-().
 Someone please explain how I am wrong and how to get stdio working on
 both dos boxes and cygwin terminals...

Ugh.  I didn't realize one couldn't use the same code in both :-(.  I guess we have to test to find out what the context is and use dread in one and ReadConsole in the other.  But I don't get it.  IIRC, it used to be the case that ReadConsole/WriteConsole worked in both.
…
 Thanks,
 Alistair

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,14,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384886716,Related to pharo-project/pharo#694,"Hi Vincent & Eliot,

Ugh.  I didn't realize one couldn't use the same code in both :-(.  I guess we have to test to find out what the context is and use dread in one and ReadConsole in the other.

I think it is worse than that.  If I use the following test code in a
cygwin terminal:
#include <stdio.h>
#include <stdlib.h>


int main()
{
char	buf[1024];
char	*bufp;
int	cread;
int	count = 0;

bufp = &buf[0];
do {
    cread = fread(bufp, 1, 1, stdin);
    count += cread;
    bufp += cread;
    if (count > 16) break; }
while (cread > 0);
buf[count] = 0;

if (! feof(stdin))
    fprintf(stderr, ""Error, not at end of file\n"");

printf(""--\n"");
printf(""%s\n"", buf);
printf(""--\n"");
printf(""Read %d characters\n"", count);
exit(0);
}

And compile it with mingw:
$ i686-w64-mingw32-gcc -m32 consolestdio.c

It won't recognise EOF (Control-D).
$ ./a.exe
hello world
<Ctrl-D>
asdfasdfasdfasdfasdf
--
hello world

asdf
--
Read 17 characters
Error, not at end of file

If I compile it with gcc:
$ gcc -m32 consolestdio.c

It works as expected:
$ ./a.exe
hello world
<Ctrl-D>
--
hello world

--
Read 12 characters

So the best option I see for supporting both cygwin terminals and dos
boxes is to make our own dll that wraps around the cygwin1.dll functions
and to load it as required.  Although I'm a bit concerned that I haven't
found any mention of doing this elsewhere (and it's a lot of work for
one specific use case).

But I don't get it.  IIRC, it used to be the case that ReadConsole/WriteConsole worked in both.

I'd still like to be proved wrong...
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/OpenSmalltalk-Bot,15,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384908509,Related to pharo-project/pharo#694,"On 27 April 2018 at 15:16, akgrant43 ***@***.***> wrote:


 Hi Vincent & Eliot,

 Ugh. I didn't realize one couldn't use the same code in both :-(. I guess
 we have to test to find out what the context is and use dread in one and
 ReadConsole in the other.

 I think it is worse than that. If I use the following test code in a
 cygwin terminal:

 #include <stdio.h>
 #include <stdlib.h>


 int main()
 {
 char	buf[1024];
 char	*bufp;
 int	cread;
 int	count = 0;

 bufp = &buf[0];
 do {
     cread = fread(bufp, 1, 1, stdin);
     count += cread;
     bufp += cread;
     if (count > 16) break; }
 while (cread > 0);
 buf[count] = 0;

 if (! feof(stdin))
     fprintf(stderr, ""Error, not at end of file\n"");

 printf(""--\n"");
 printf(""%s\n"", buf);
 printf(""--\n"");
 printf(""Read %d characters\n"", count);
 exit(0);
 }

 And compile it with mingw:

 $ i686-w64-mingw32-gcc -m32 consolestdio.c

 It won't recognise EOF (Control-D).

Try Ctrl-Z
""In a non-Cygwin Windows program, Ctrl-Z on input triggers an end-of-file
condition.""

https://stackoverflow.com/questions/39327818/reading-till-eof-in-java-on-cygwin-on-windows-10

cheers -ben",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,16,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384941529,Related to pharo-project/pharo#694,"Hi Ben,

Try Ctrl-Z
""In a non-Cygwin Windows program, Ctrl-Z on input triggers an end-of-file condition.""

I had tried this, and since it's bash it just stopped the program, as expected.
I'd also looked at the page you referenced, but on reading it again thought I'd try unsetting the susp key:
stty susp ''

And sure enough, running the mingw version works this time:
$ ./mingw.exe
asdf<Enter>
<Ctrl-Z><Enter>
--
asdf

--
Read 5 characters

While it is a workaround, I'm not sure that asking users to modify the terminal settings and remember to use Ctrl-Z instead of Ctrl-D for Pharo in bash is going to be practical.
What do you think?
Just for LOLs, the following does work:
$ cat | vm/PharoConsole Pharo7.0.image eval StdioStreamTest manualStdinTest | tee /dev/null
asdf<Enter>
<Ctrl-D>

It doesn't work in headless mode, I haven't figured out why yet.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/OpenSmalltalk-Bot,17,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-384957789,Related to pharo-project/pharo#694,"On 27 April 2018 at 19:18, akgrant43 ***@***.***> wrote:
 While it is a workaround, I'm not sure that asking users to modify the
 terminal settings and remember to use Ctrl-Z instead of Ctrl-D for Pharo in
 bash is going to be practical.

 What do you think?

Probably not.  It just helps characterize the problem better.

cheers -ben",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/OpenSmalltalk-Bot,18,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-385605443,Related to pharo-project/pharo#694,"Hi Eliot & Vincent,
On 27 April 2018 at 09:16, akgrant43 ***@***.***> wrote:



 > But I don't get it. IIRC, it used to be the case that ReadConsole/WriteConsole worked in both.

 I'd still like to be proved wrong...
This thread has been quiet for a few days, so I guess my wishes aren't
met and there isn't a way to have a program work in both Windows
Consoles and cygwin terminals.

One of the articles forwarded by Ben suggested the workaround is to have
a .com version of the program, which does all the work if the command
line arguments only require console i/o.  If a gui is required, it
relaunches the .exe version which then opens the windows.  We could
extend that to also check for cygwin and relaunch a cygwin exe.
However I think that is effectively adding another platform to support,
which is more effort than I want to put in.

Assuming all of the above, I think we might as well (reluctantly) rip
out the code that tests for cygwin terminals and just leave Vincent's
primitives in.  This will at least allow the image to properly determine
whether it can write to the console or if it should create files
instead.

What do you think?

Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/OpenSmalltalk-Bot,19,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-385660024,Related to pharo-project/pharo#694,"Actually, the primitive needs to be an enumerated value indicating one of:

- no console (windows only)
- console / terminal
- pipe
- file

Cheers,
Alistair
(on phone)
…
On Tue., 1 May 2018, 07:56 Alistair Grant, ***@***.***> wrote:
 Hi Eliot & Vincent,

 On 27 April 2018 at 09:16, akgrant43 ***@***.***> wrote:
 >
 >
 >
 > > But I don't get it. IIRC, it used to be the case that
 ReadConsole/WriteConsole worked in both.
 >
 > I'd still like to be proved wrong...


 This thread has been quiet for a few days, so I guess my wishes aren't
 met and there isn't a way to have a program work in both Windows
 Consoles and cygwin terminals.

 One of the articles forwarded by Ben suggested the workaround is to have
 a .com version of the program, which does all the work if the command
 line arguments only require console i/o.  If a gui is required, it
 relaunches the .exe version which then opens the windows.  We could
 extend that to also check for cygwin and relaunch a cygwin exe.
 However I think that is effectively adding another platform to support,
 which is more effort than I want to put in.

 Assuming all of the above, I think we might as well (reluctantly) rip
 out the code that tests for cygwin terminals and just leave Vincent's
 primitives in.  This will at least allow the image to properly determine
 whether it can write to the console or if it should create files
 instead.

 What do you think?

 Thanks,
 Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/eliotmiranda,20,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-387826747,Related to pharo-project/pharo#694,"So this is real goodness.  Can we not address the issues and get this in?  Right now as I understand it we know how to discover both a Cygwin console and a Windows Console, but the two require separate approaches.  Can we not add both of them?  As far as the end-of-file issue dgoes I would say that is not a deal breaker.  If I were implementing a REPL I would want EOF to cause the system to exit cleanly but I would also live with having to issue a proper quit command.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,21,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-387842377,Related to pharo-project/pharo#694,"Hi Eliot and Vincent,
(I only have phone access, so apologies for typos, formatting, etc.)
Unless I'm misunderstanding the situation, we can't easily add support
for both cygwin terminals and windows consoles.
We're compiling and linking with mingw, which means we have access to
the windows consoles directly (through ReadConsole() and
WriteConsole()).  If we want to access the cygwin terminals properly we
need to use the posix io functions in cygwin1.dll (not the MS supplied
versions of the posix io functions).
I guess it would be possible to write a wrapper DLL around the posix io
functions in cygwin1.dll and load that if we recognise that we are in a
cygwin terminal.  But that is obviously a fair bit of effort (not
something that I'm interested in doing in the short or medium term).
Given your acceptance of not recognising EOF correctly in a cygwin
terminal I would extend my previous suggestion that we modify Vincent's
primitiveIsFileDescriptorATTY to return an enumerated value:
0 - no console (windows only)
1 - normal terminal (unix terminal / windows console)
2 - pipe
3 - file
4 - cygwin terminal (windows only)
What do you think?
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/eliotmiranda,22,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-387878181,Related to pharo-project/pharo#694,"Hi Alistair,
I agree we shouldn't include cygwin1.dll.  But the existence of cygwin1.dll is proof that the relevant code can be implemented above Win32.  I do know that one can read from cygwin terminals; I was doing that regularly with the old VM.  So the issue is simply identifying a cygwin console as a tty.  We can put reading/writing from/to it to one side and first focus on identification.  I'm happy for you to extend primitiveIsFileDescriptorATTY as you suggest.  What I think we need, though, is to be able to identify either a Windows console or a cygwin console independently of cygwin1.dll (even if we have to copy some liberally licensed code from it).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,23,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388091484,Related to pharo-project/pharo#694,"Great, I think we're in agreement.
Vincent, what do you think?
Cheers,
Alistair",True,{'THUMBS_UP': ['https://github.com/VincentBlondeau']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,24,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388096594,Related to pharo-project/pharo#694,"Sounds good! The only thing is I can check the result only under windows. So, I don't know which values to return for Linux if the terminal is not a tty. Should I return 2 or 3? And how do I know that is a file or a pipe?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/eliotmiranda,25,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388099937,Related to pharo-project/pharo#694,"Hi Vincent,
Alistair defined the values earlier in the thread:

0 - no console (windows only)
1 - normal terminal (unix terminal / windows console)
2 - pipe
3 - file
4 - cygwin terminal (windows only)
I expect it'll be fine for you to extend the windows code but leave the Unix code for Alistair to implement.",True,{'THUMBS_UP': ['https://github.com/VincentBlondeau']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,26,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388113342,Related to pharo-project/pharo#694,"Hi Vincent,
I assumed that for Windows you could already distinguish between pipes and normal files since the pty check uses the pipe name as part of its check.  If not...
The fstat() st_mode field has S_IFIFO which indicates a first-in first-out (pipe) file.
Some of the documentation I saw said that S_IFIFO is for named pipes, I don't know what it will return for stdin being a pipe.
fstat() takes a file descriptor, so you'll need to convert a HANDLE to a fd.
If you can get Windows working I'm happy to take care of the Unix side.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,27,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388216595,Related to pharo-project/pharo#694,"That should do it with these adds.
However, I do not know how to test if pipes or files are used under windows.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,28,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388277618,Related to pharo-project/pharo#694,"Hi Vincent,
In cygwin you can test pipes with:
$ cat | PharoConsole Pharo7.0.image | tee /dev/null

It's also a hacky way to get terminal i/o working in a cygwin terminal.
In a windows console:
echo ""hello world"" | PharoConsole Pharo7.0.image

Should allow you to test stdin at least (untested).
In both cygwin terminals and windows consoles file i/o can be tested with:
PharoConsole Pharo7.0.image < a.txt > b.txt

HTH,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,29,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388418734,Related to pharo-project/pharo#694,"That's helping!
Tested and working!
Thanks Alistair!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/OpenSmalltalk-Bot,30,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388495307,Related to pharo-project/pharo#694,"On 11-05-2018, at 10:36 AM, akgrant43 ***@***.***> wrote:

 In platforms/RiscOS/plugins/FilePlugin/sqFilePluginBasicPrims.c:
Nice to see someone else caring for RISC OS :-)

tim
--
tim Rowledge; tim@rowledge.org; http://www.rowledge.org/tim
Useful Latin Phrases:- Anulos qui animum ostendunt omnes gestemus! = Let's all wear mood rings!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/OpenSmalltalk-Bot,31,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388540335,Related to pharo-project/pharo#694,"Am 11.05.2018 um 23:53 schrieb tim Rowledge ***@***.***>:




> On 11-05-2018, at 10:36 AM, akgrant43 ***@***.***> wrote:
>
> In platforms/RiscOS/plugins/FilePlugin/sqFilePluginBasicPrims.c:


 Nice to see someone else caring for RISC OS :-)

Yes, but what for?

Norbert",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/VincentBlondeau,32,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-388902001,Related to pharo-project/pharo#694,@akgrant43 : Are the changes I made ok to be integrated?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,254,2018-04-24T00:36:05Z,2018-05-15T14:32:04Z,2018-05-15T19:12:59Z,MERGED,True,247,66,6,https://github.com/VincentBlondeau,Add accurate check for console stdio + add associated primitive ,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254,https://github.com/akgrant43,33,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/254#issuecomment-389280883,Related to pharo-project/pharo#694,"Hi Vincent,

Are the changes I made ok to be integrated?

Yes :-)  Sorry, I'm not getting much Pharo time at the moment.
Cheers,
Alistair",True,{'THUMBS_UP': ['https://github.com/VincentBlondeau']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,255,2018-05-07T14:43:18Z,2018-05-09T08:36:13Z,2018-05-09T08:36:13Z,MERGED,True,9,7,2,https://github.com/estebanlm,another try to properly build libgit2 (v3),14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/255,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/255,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,255,2018-05-07T14:43:18Z,2018-05-09T08:36:13Z,2018-05-09T08:36:13Z,MERGED,True,9,7,2,https://github.com/estebanlm,another try to properly build libgit2 (v3),14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/255,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/255#issuecomment-387165520,,"this PR should be ready to integrate, but it is failing on sista builds (no related with my changes).
Con someone take a look?
Should I integrate anyway?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,255,2018-05-07T14:43:18Z,2018-05-09T08:36:13Z,2018-05-09T08:36:13Z,MERGED,True,9,7,2,https://github.com/estebanlm,another try to properly build libgit2 (v3),14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/255,https://github.com/estebanlm,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/255#issuecomment-387665352,,"meh, I'm going to accept it anyway, since sista builds are also failing in Cog branch",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,256,2018-05-07T15:06:11Z,2018-05-07T16:23:42Z,2018-08-26T19:24:57Z,CLOSED,False,8,0,1,https://github.com/akgrant43,libgit2 build logging,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/256,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/256,"Temporary debug logging to try and figure out why libssh2 isn't
correctly referenced in libgit2.
This should NOT be merged in to the main code.","Temporary debug logging to try and figure out why libssh2 isn't
correctly referenced in libgit2.
This should NOT be merged in to the main code.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,256,2018-05-07T15:06:11Z,2018-05-07T16:23:42Z,2018-08-26T19:24:57Z,CLOSED,False,8,0,1,https://github.com/akgrant43,libgit2 build logging,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/256,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/256#issuecomment-387120703,"Temporary debug logging to try and figure out why libssh2 isn't
correctly referenced in libgit2.
This should NOT be merged in to the main code.",Need a new PR to force libgit2 rebuild. :-(,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,257,2018-05-07T16:25:27Z,2018-05-07T17:02:53Z,2018-08-26T19:24:57Z,CLOSED,False,8,0,1,https://github.com/akgrant43,Makefile.libgit2 additional logging,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/257,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/257,"Dump libssh2 symbol information to confirm presence of
libssh2_userauth_publickey_frommemory
Not for integration in to Cog.","Dump libssh2 symbol information to confirm presence of
libssh2_userauth_publickey_frommemory
Not for integration in to Cog.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,257,2018-05-07T16:25:27Z,2018-05-07T17:02:53Z,2018-08-26T19:24:57Z,CLOSED,False,8,0,1,https://github.com/akgrant43,Makefile.libgit2 additional logging,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/257,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/257#issuecomment-387132773,"Dump libssh2 symbol information to confirm presence of
libssh2_userauth_publickey_frommemory
Not for integration in to Cog.","Closing, will need new PR to force libgit2 build again.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/Rydier,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389209777,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","Error logs of linux builds for
https://travis-ci.org/OpenSmalltalk/opensmalltalk-vm/jobs/378430866
(and onwards) state they try loading
http://security.ubuntu.com/ubuntu/pool/main/g/gcc-4.8/libx32itm1_4.8.4-2ubuntu1~14.04.3_amd64.deb
while the file on server is
http://security.ubuntu.com/ubuntu/pool/main/g/gcc-4.8/libx32itm1_4.8.4-2ubuntu1~14.04.4_amd64.deb
so an out-of-date package cache is the likely culprit?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389212684,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","Hmm, this seems like a travis problem then, too",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/akgrant43,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389213464,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","so an out-of-date package cache is the likely culprit?

That's my guess, and why I tried this PR (which is admittedly experimental).
It would be good if someone could confirm that the changes make sense (I'm not familiar with travis at all).
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389258649,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages",@fniephaus do you have an idea?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/fniephaus,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389299285,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","I haven't seen those errors before, so I am also assuming that there was/is a problem on Travis' side. A quick look at they status page revealed this incident which mentions apt-get update-related problems.
@akgrant43 was this a temporary problem or does the problem still exist? And for how long have you seen these errors (hours/days/weeks)?
Best,
Fabio",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/akgrant43,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389302600,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","Hi Fabio,
The apt-get update issues mentioned on the Travis page match the symptoms we're seeing.  My interpretation of what is written there is that this PR should be accepted now and reverted once Travis have their infrastructure issues sorted out.
The problem still existed as of a few hours ago.  It looks like the first instance was a couple of days ago, but the last commit before that was 6 days ago - about the time the Travis reports the issue as arising.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/fniephaus,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389309802,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","@akgrant43 why merge and roll back later? I mean, why is this just a temporary fix? What are the disadvantages/advantages if we keep the commit?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/akgrant43,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389312917,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","why merge and roll back later? I mean, why is this just a temporary fix? What are the disadvantages/advantages if we keep the commit?

The advantage is that the script will survive Travis not updating the environment for us.
The disadvantages are:

It's a bit slower (there's obviously more being done).
It increases slightly the chances that a temporary network problem will causes the build to fail.

Of course, there may be others that I haven't thought of.
I should also add that it isn't 100% clear to me that Travis will ever ""fix"" the issue.  They may decide that if you want to install software you should do an update - they mention trying to automatically determine whether an install is done, and maybe our script isn't detected.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,261,2018-05-15T15:07:47Z,2018-05-16T10:01:15Z,2018-05-16T10:01:28Z,MERGED,True,7,0,2,https://github.com/akgrant43,.travis_install.sh update,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261,https://github.com/akgrant43,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/261#issuecomment-389454385,"Run apt-get update to ensure we are using the current packages.
Hopefully this will remove the various
E: Failed to fetch http://something.deb  404  Not Found [IP: 35.184.213.5 80]
messages","There doesn't seem to be any real opposition to this, it's a small update that can easily be reversed, so if there's no dissenting comment in the next 30 minutes I'll merge it in.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,262,2018-05-16T15:22:49Z,2018-05-17T12:23:53Z,2018-05-17T12:24:28Z,MERGED,True,13,2,1,https://github.com/akgrant43,sqFilePluginBasicPrims.c add sqFileDescriptorType(),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/262,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/262,"Add the Unix implementation of sqFileDescriptorType() to answer an
enumerated type indicating whether the supplied file descriptor is a
terminal, pipe or file.
The Windows implementation was added 15 May 2018 in commit 858bed2.","Add the Unix implementation of sqFileDescriptorType() to answer an
enumerated type indicating whether the supplied file descriptor is a
terminal, pipe or file.
The Windows implementation was added 15 May 2018 in commit 858bed2.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,262,2018-05-16T15:22:49Z,2018-05-17T12:23:53Z,2018-05-17T12:24:28Z,MERGED,True,13,2,1,https://github.com/akgrant43,sqFilePluginBasicPrims.c add sqFileDescriptorType(),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/262,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/262#issuecomment-389590827,"Add the Unix implementation of sqFileDescriptorType() to answer an
enumerated type indicating whether the supplied file descriptor is a
terminal, pipe or file.
The Windows implementation was added 15 May 2018 in commit 858bed2.","The Windows build error is in a third-party library.  The changes are in a section of code that is #ifdef'd out of Windows.
The travis build passed the critical platforms and only failed in the sista builds - not related.
I'll merge the PR tomorrow if no one complains.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,266,2018-06-06T13:19:55Z,2018-06-08T06:13:48Z,2018-06-08T06:13:57Z,MERGED,True,8,5,1,https://github.com/akgrant43,"BuildSqueakSpurTrunkVMMakerImage.st sort versions, use FileAttributes…",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/266,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/266,"…Plugin.oscog
BuildSqueakSpurTrunkVMMakerImage.st currently assumes that packages
returned from a repository are sorted by version, however this doesn't
appear to be true for smalltalkhub.com.

Sort packages by version to ensure the latest is used.
Load FileAttributesPlugin.oscog (which replaced FileAttributesPlugin)","…Plugin.oscog
BuildSqueakSpurTrunkVMMakerImage.st currently assumes that packages
returned from a repository are sorted by version, however this doesn't
appear to be true for smalltalkhub.com.

Sort packages by version to ensure the latest is used.
Load FileAttributesPlugin.oscog (which replaced FileAttributesPlugin)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,266,2018-06-06T13:19:55Z,2018-06-08T06:13:48Z,2018-06-08T06:13:57Z,MERGED,True,8,5,1,https://github.com/akgrant43,"BuildSqueakSpurTrunkVMMakerImage.st sort versions, use FileAttributes…",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/266,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/266#issuecomment-395658458,"…Plugin.oscog
BuildSqueakSpurTrunkVMMakerImage.st currently assumes that packages
returned from a repository are sorted by version, however this doesn't
appear to be true for smalltalkhub.com.

Sort packages by version to ensure the latest is used.
Load FileAttributesPlugin.oscog (which replaced FileAttributesPlugin)",BuildSqueakSpurTrunkVMMakerImage.st isn't part of the build process - CI failures unrelated.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,268,2018-06-16T13:27:05Z,2018-06-17T17:02:39Z,2018-07-09T18:30:37Z,MERGED,True,143,21,4,https://github.com/akgrant43,FileAttributesPlugin 1.3.0,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/268,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/268,1.3.0: Change from Unix (UTC) timestamps to Squeak timestamps for file attributes.,1.3.0: Change from Unix (UTC) timestamps to Squeak timestamps for file attributes.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,270,2018-06-26T12:28:00Z,2018-06-28T12:56:30Z,2018-06-28T12:56:30Z,MERGED,True,43,182,9,https://github.com/estebanlm,Add win64 to Pharo VMs,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/270,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/270,"Working on this PR to add all dependencies to make Pharo run on Windows 64bit.
This is applying what we have talked before (instead building, taking dependencies from mingw versions).
This avoids a lot of problems, but adds a couple of extra libraries to the dependency list... nothing serious or big so we will continue as is for now.","Working on this PR to add all dependencies to make Pharo run on Windows 64bit.
This is applying what we have talked before (instead building, taking dependencies from mingw versions).
This avoids a lot of problems, but adds a couple of extra libraries to the dependency list... nothing serious or big so we will continue as is for now.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,270,2018-06-26T12:28:00Z,2018-06-28T12:56:30Z,2018-06-28T12:56:30Z,MERGED,True,43,182,9,https://github.com/estebanlm,Add win64 to Pharo VMs,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/270,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/270#issuecomment-401024814,"Working on this PR to add all dependencies to make Pharo run on Windows 64bit.
This is applying what we have talked before (instead building, taking dependencies from mingw versions).
This avoids a lot of problems, but adds a couple of extra libraries to the dependency list... nothing serious or big so we will continue as is for now.",is working (now I have to adjust things most probably in the 64bit frameworks),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,271,2018-07-09T19:48:05Z,2018-07-22T18:59:15Z,2018-07-22T19:00:51Z,MERGED,True,1,0,1,https://github.com/marfrit,Add fflush to sqFileTruncate to make FileHandleTest green on (my) 64 …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271,https://github.com/marfrit,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271,"As discussed in thread 5264ee14-637f-9f39-b616-563a0177d029@reauktion.de on vm-dev
As this is my very first PR ever, I am not 100% sure everything is correct. If not, please indicate the mistake that has been made.","As discussed in thread 5264ee14-637f-9f39-b616-563a0177d029@reauktion.de on vm-dev
As this is my very first PR ever, I am not 100% sure everything is correct. If not, please indicate the mistake that has been made.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,271,2018-07-09T19:48:05Z,2018-07-22T18:59:15Z,2018-07-22T19:00:51Z,MERGED,True,1,0,1,https://github.com/marfrit,Add fflush to sqFileTruncate to make FileHandleTest green on (my) 64 …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271,https://github.com/marfrit,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271#issuecomment-404899076,"As discussed in thread 5264ee14-637f-9f39-b616-563a0177d029@reauktion.de on vm-dev
As this is my very first PR ever, I am not 100% sure everything is correct. If not, please indicate the mistake that has been made.","Hmm, Travis build failed for some non-related MacOS X build problems afaic.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,271,2018-07-09T19:48:05Z,2018-07-22T18:59:15Z,2018-07-22T19:00:51Z,MERGED,True,1,0,1,https://github.com/marfrit,Add fflush to sqFileTruncate to make FileHandleTest green on (my) 64 …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271#issuecomment-405028991,"As discussed in thread 5264ee14-637f-9f39-b616-563a0177d029@reauktion.de on vm-dev
As this is my very first PR ever, I am not 100% sure everything is correct. If not, please indicate the mistake that has been made.","Agreed.  Other Mac platforms built successfully, and the error is curl in retrieving third party libraries.
I'll merge Monday, when I'll be available in case something goes wrong.
Thanks, @marfrit !",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,271,2018-07-09T19:48:05Z,2018-07-22T18:59:15Z,2018-07-22T19:00:51Z,MERGED,True,1,0,1,https://github.com/marfrit,Add fflush to sqFileTruncate to make FileHandleTest green on (my) 64 …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271,https://github.com/akgrant43,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/271#issuecomment-406888818,"As discussed in thread 5264ee14-637f-9f39-b616-563a0177d029@reauktion.de on vm-dev
As this is my very first PR ever, I am not 100% sure everything is correct. If not, please indicate the mistake that has been made.","Hi @marfrit,
My apologies for the delay in merging.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,273,2018-07-20T20:40:24Z,2018-07-24T09:04:58Z,2018-07-24T09:04:58Z,MERGED,True,28,28,8,https://github.com/smalltalking,Make sqUnixHostWindowPlugin.c compile on 64-bit systems,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/273,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/273,"And readd HostWindowPlugin to builds, especially to those
which had it before 6666edc.","And readd HostWindowPlugin to builds, especially to those
which had it before 6666edc.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,276,2018-08-12T05:31:05Z,2018-08-13T09:22:29Z,2018-08-13T09:34:52Z,MERGED,True,51,31,4,https://github.com/akgrant43,274 primitiveFileStdioHandles() fails to return nil if stdio file is …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276,"…not available
According to the comment for primitiveFileStdioHandles():
Answer an Array of file handles for standard in, standard out and
standard error, with nil in entries that are unvailable, e.g. because
the platform does not provide standard error, etc.
However, on Windows in practice an array of sqFile entries with null
handles is returned. The image is unable to distinguish between valid
and invalid entries since sqFile is private to the VM.

Modify sqWin32FilePrims.c() to set the valid mask correctly.
Modify primitiveFileStdioHandles() to treat a mask of 0 as
successfully determining that no stdio is available (a normal case
on Windows).
A validMask of -1 is treated as an error.
Update comments to reflect changed behaviour","…not available
According to the comment for primitiveFileStdioHandles():
Answer an Array of file handles for standard in, standard out and
standard error, with nil in entries that are unvailable, e.g. because
the platform does not provide standard error, etc.
However, on Windows in practice an array of sqFile entries with null
handles is returned. The image is unable to distinguish between valid
and invalid entries since sqFile is private to the VM.

Modify sqWin32FilePrims.c() to set the valid mask correctly.
Modify primitiveFileStdioHandles() to treat a mask of 0 as
successfully determining that no stdio is available (a normal case
on Windows).
A validMask of -1 is treated as an error.
Update comments to reflect changed behaviour",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,276,2018-08-12T05:31:05Z,2018-08-13T09:22:29Z,2018-08-13T09:34:52Z,MERGED,True,51,31,4,https://github.com/akgrant43,274 primitiveFileStdioHandles() fails to return nil if stdio file is …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276#issuecomment-412335366,"…not available
According to the comment for primitiveFileStdioHandles():
Answer an Array of file handles for standard in, standard out and
standard error, with nil in entries that are unvailable, e.g. because
the platform does not provide standard error, etc.
However, on Windows in practice an array of sqFile entries with null
handles is returned. The image is unable to distinguish between valid
and invalid entries since sqFile is private to the VM.

Modify sqWin32FilePrims.c() to set the valid mask correctly.
Modify primitiveFileStdioHandles() to treat a mask of 0 as
successfully determining that no stdio is available (a normal case
on Windows).
A validMask of -1 is treated as an error.
Update comments to reflect changed behaviour",Restarting failing builds...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,276,2018-08-12T05:31:05Z,2018-08-13T09:22:29Z,2018-08-13T09:34:52Z,MERGED,True,51,31,4,https://github.com/akgrant43,274 primitiveFileStdioHandles() fails to return nil if stdio file is …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276#issuecomment-412370228,"…not available
According to the comment for primitiveFileStdioHandles():
Answer an Array of file handles for standard in, standard out and
standard error, with nil in entries that are unvailable, e.g. because
the platform does not provide standard error, etc.
However, on Windows in practice an array of sqFile entries with null
handles is returned. The image is unable to distinguish between valid
and invalid entries since sqFile is private to the VM.

Modify sqWin32FilePrims.c() to set the valid mask correctly.
Modify primitiveFileStdioHandles() to treat a mask of 0 as
successfully determining that no stdio is available (a normal case
on Windows).
A validMask of -1 is treated as an error.
Update comments to reflect changed behaviour","Thanks, Fabio.
The build got further this time, the newspeak.cog.spur builds failed in .travis_test.sh, but there doesn't seem to be any useful debug information.
Given the main squeak and pharo builds all passed, it seems unlikely that this change is the cause of the newspeak failure.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,276,2018-08-12T05:31:05Z,2018-08-13T09:22:29Z,2018-08-13T09:34:52Z,MERGED,True,51,31,4,https://github.com/akgrant43,274 primitiveFileStdioHandles() fails to return nil if stdio file is …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276#issuecomment-412453707,"…not available
According to the comment for primitiveFileStdioHandles():
Answer an Array of file handles for standard in, standard out and
standard error, with nil in entries that are unvailable, e.g. because
the platform does not provide standard error, etc.
However, on Windows in practice an array of sqFile entries with null
handles is returned. The image is unable to distinguish between valid
and invalid entries since sqFile is private to the VM.

Modify sqWin32FilePrims.c() to set the valid mask correctly.
Modify primitiveFileStdioHandles() to treat a mask of 0 as
successfully determining that no stdio is available (a normal case
on Windows).
A validMask of -1 is treated as an error.
Update comments to reflect changed behaviour",All green now!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,276,2018-08-12T05:31:05Z,2018-08-13T09:22:29Z,2018-08-13T09:34:52Z,MERGED,True,51,31,4,https://github.com/akgrant43,274 primitiveFileStdioHandles() fails to return nil if stdio file is …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276#issuecomment-412458566,"…not available
According to the comment for primitiveFileStdioHandles():
Answer an Array of file handles for standard in, standard out and
standard error, with nil in entries that are unvailable, e.g. because
the platform does not provide standard error, etc.
However, on Windows in practice an array of sqFile entries with null
handles is returned. The image is unable to distinguish between valid
and invalid entries since sqFile is private to the VM.

Modify sqWin32FilePrims.c() to set the valid mask correctly.
Modify primitiveFileStdioHandles() to treat a mask of 0 as
successfully determining that no stdio is available (a normal case
on Windows).
A validMask of -1 is treated as an error.
Update comments to reflect changed behaviour","Hi Fabio,
Thanks very much for following up on this!
Merging now...
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,276,2018-08-12T05:31:05Z,2018-08-13T09:22:29Z,2018-08-13T09:34:52Z,MERGED,True,51,31,4,https://github.com/akgrant43,274 primitiveFileStdioHandles() fails to return nil if stdio file is …,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276,https://github.com/fniephaus,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/276#issuecomment-412461940,"…not available
According to the comment for primitiveFileStdioHandles():
Answer an Array of file handles for standard in, standard out and
standard error, with nil in entries that are unvailable, e.g. because
the platform does not provide standard error, etc.
However, on Windows in practice an array of sqFile entries with null
handles is returned. The image is unable to distinguish between valid
and invalid entries since sqFile is private to the VM.

Modify sqWin32FilePrims.c() to set the valid mask correctly.
Modify primitiveFileStdioHandles() to treat a mask of 0 as
successfully determining that no stdio is available (a normal case
on Windows).
A validMask of -1 is treated as an error.
Update comments to reflect changed behaviour",🎉,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,277,2018-08-12T21:11:48Z,2018-08-23T00:35:28Z,2018-08-28T15:03:51Z,CLOSED,False,140,107,11,https://github.com/akgrant43,FileAttributesPlugin 1.3.3: Add path encoding / decoding,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/277,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/277,MacOS uses custom decomposed UTF8 encoded strings for path names (while precomposed Unicode strings are typically used within the image).  Encode and decode path names using the existing VM routines (ux2sqPath() and sq2uxPath()).,MacOS uses custom decomposed UTF8 encoded strings for path names (while precomposed Unicode strings are typically used within the image).  Encode and decode path names using the existing VM routines (ux2sqPath() and sq2uxPath()).,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,277,2018-08-12T21:11:48Z,2018-08-23T00:35:28Z,2018-08-28T15:03:51Z,CLOSED,False,140,107,11,https://github.com/akgrant43,FileAttributesPlugin 1.3.3: Add path encoding / decoding,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/277,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/277#issuecomment-412374072,MacOS uses custom decomposed UTF8 encoded strings for path names (while precomposed Unicode strings are typically used within the image).  Encode and decode path names using the existing VM routines (ux2sqPath() and sq2uxPath()).,MacOS isn't finding a required .h file.  Investigating...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,277,2018-08-12T21:11:48Z,2018-08-23T00:35:28Z,2018-08-28T15:03:51Z,CLOSED,False,140,107,11,https://github.com/akgrant43,FileAttributesPlugin 1.3.3: Add path encoding / decoding,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/277,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/277#issuecomment-415232831,MacOS uses custom decomposed UTF8 encoded strings for path names (while precomposed Unicode strings are typically used within the image).  Encode and decode path names using the existing VM routines (ux2sqPath() and sq2uxPath()).,"This has lots of unnecessary changes from trying to figure out OSX behaviour.
Closing and starting again in #280",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,278,2018-08-13T19:53:35Z,2018-08-14T05:44:10Z,2018-08-26T19:32:48Z,MERGED,True,15,16,4,https://github.com/akgrant43,274: Update primitiveFileStdioHandles error handling.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/278,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/278,"Previously validMask = -1 was considered an error.  Now validMask < 0 is
considered an error and the value is returned to the image with
primitiveFailForOSError().
This is more robust against word length in the VM and provides a general
mechanism for the plugin to provide error information back to the image.","Previously validMask = -1 was considered an error.  Now validMask < 0 is
considered an error and the value is returned to the image with
primitiveFailForOSError().
This is more robust against word length in the VM and provides a general
mechanism for the plugin to provide error information back to the image.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,279,2018-08-19T09:38:50Z,2018-08-19T17:26:32Z,2018-08-20T13:47:02Z,CLOSED,False,2,1,1,https://github.com/fniephaus,Suppress rtprio warning when ${CI} env var is set,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279,https://github.com/fniephaus,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279,"This makes the rtprio warning less verbose when the ${CI} env var is set.
${CI} is usually set by common CI providers, see:

https://docs.travis-ci.com/user/environment-variables/#default-environment-variables
https://www.appveyor.com/docs/environment-variables/
https://docs.gitlab.com/ee/ci/variables/#predefined-variables-environment-variables

""pthread_setschedparam failed: Operation not permitted"" is still printed to inform about the misconfiguration.
If no one objects, I will merge this in the next couple of days...
Closes #275","This makes the rtprio warning less verbose when the ${CI} env var is set.
${CI} is usually set by common CI providers, see:

https://docs.travis-ci.com/user/environment-variables/#default-environment-variables
https://www.appveyor.com/docs/environment-variables/
https://docs.gitlab.com/ee/ci/variables/#predefined-variables-environment-variables

""pthread_setschedparam failed: Operation not permitted"" is still printed to inform about the misconfiguration.
If no one objects, I will merge this in the next couple of days...
Closes #275",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,279,2018-08-19T09:38:50Z,2018-08-19T17:26:32Z,2018-08-20T13:47:02Z,CLOSED,False,2,1,1,https://github.com/fniephaus,Suppress rtprio warning when ${CI} env var is set,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279#issuecomment-414133977,"This makes the rtprio warning less verbose when the ${CI} env var is set.
${CI} is usually set by common CI providers, see:

https://docs.travis-ci.com/user/environment-variables/#default-environment-variables
https://www.appveyor.com/docs/environment-variables/
https://docs.gitlab.com/ee/ci/variables/#predefined-variables-environment-variables

""pthread_setschedparam failed: Operation not permitted"" is still printed to inform about the misconfiguration.
If no one objects, I will merge this in the next couple of days...
Closes #275","Hi Fabio,
I think using a CI environment variable to control the output of
warnings is less than ideal:


It is doing double duty with a variable, which is never a good idea.


If I'm running a CI that does allow rtprio and I want the warning, I
have to write the non-obvious script to unset the environment
variable.


If I'm running some other production environment and want to suppress
the warning I have to do something like:


export CI ""this is a ugly hack to make smalltalk suppress one warning""
squeak/pharo some.image
Either of:
--suppress-rtprio-warning  # previously suggested
or
--suppress list,of,warnings
as command line options is a better approach.  We have CI specific
scripts which can do the appropriate thing.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,279,2018-08-19T09:38:50Z,2018-08-19T17:26:32Z,2018-08-20T13:47:02Z,CLOSED,False,2,1,1,https://github.com/fniephaus,Suppress rtprio warning when ${CI} env var is set,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279#issuecomment-414142463,"This makes the rtprio warning less verbose when the ${CI} env var is set.
${CI} is usually set by common CI providers, see:

https://docs.travis-ci.com/user/environment-variables/#default-environment-variables
https://www.appveyor.com/docs/environment-variables/
https://docs.gitlab.com/ee/ci/variables/#predefined-variables-environment-variables

""pthread_setschedparam failed: Operation not permitted"" is still printed to inform about the misconfiguration.
If no one objects, I will merge this in the next couple of days...
Closes #275","@akgrant43 I agree, a command line flag is nice and this was just a practical ""hack"". As I mentioned, the ""pthread_setschedparam failed: Operation not permitted"" error is still displayed, it's just the ""how to fix it"" that I tried to suppress here.
I'd like to see that flag implemented soon, but I'm afraid I don't have enough time to work on it (if you know how the option parse work, it should be much work. I just haven't touched that code yet).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,279,2018-08-19T09:38:50Z,2018-08-19T17:26:32Z,2018-08-20T13:47:02Z,CLOSED,False,2,1,1,https://github.com/fniephaus,Suppress rtprio warning when ${CI} env var is set,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279,https://github.com/akgrant43,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/279#issuecomment-414149546,"This makes the rtprio warning less verbose when the ${CI} env var is set.
${CI} is usually set by common CI providers, see:

https://docs.travis-ci.com/user/environment-variables/#default-environment-variables
https://www.appveyor.com/docs/environment-variables/
https://docs.gitlab.com/ee/ci/variables/#predefined-variables-environment-variables

""pthread_setschedparam failed: Operation not permitted"" is still printed to inform about the misconfiguration.
If no one objects, I will merge this in the next couple of days...
Closes #275","Hi @fniephaus ,
Thanks for the clarification.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,280,2018-08-23T00:33:59Z,2018-08-23T05:50:52Z,2018-08-23T05:50:52Z,MERGED,True,154,121,42,https://github.com/akgrant43,1.3.3: Add path encoding / decoding,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/280,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/280,"MacOS uses custom decomposed UTF8 encoded strings for path names (while
precomposed Unicode strings are typically used within the image).
Encode and decode path names using the existing VM routines (ux2sqPath()
and sq2uxPath()).
Linux provides ux2sqPath() and sq2uxPath() as part of vm.a.
OSX requires a plugin specific Makefile to access sqUnixCharConv.[ch]","MacOS uses custom decomposed UTF8 encoded strings for path names (while
precomposed Unicode strings are typically used within the image).
Encode and decode path names using the existing VM routines (ux2sqPath()
and sq2uxPath()).
Linux provides ux2sqPath() and sq2uxPath() as part of vm.a.
OSX requires a plugin specific Makefile to access sqUnixCharConv.[ch]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,281,2018-08-25T16:34:11Z,2018-08-25T19:13:33Z,2018-08-25T19:13:33Z,MERGED,True,11,4,1,https://github.com/akgrant43,sqUnixCharConv.c: correct path encoding,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/281,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/281,"Use UTF8 instead of MacRoman when converting paths sq to ux
Convert decomposed to precomposed UTF8 when convert ux to sq","Use UTF8 instead of MacRoman when converting paths sq to ux
Convert decomposed to precomposed UTF8 when convert ux to sq",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,282,2018-08-27T10:26:20Z,2018-08-28T14:55:38Z,2018-11-23T14:56:28Z,MERGED,True,20,15,1,https://github.com/akgrant43,FileAttributesPlugin 1.3.4,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/282,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/282,"Answer unsupportedOperation for isSymlink on Windows
Expect filenames to be passed as ByteArrays (UTF8 encoded)
-- Strings are still allowed for backward compatibility","Answer unsupportedOperation for isSymlink on Windows
Expect filenames to be passed as ByteArrays (UTF8 encoded)
-- Strings are still allowed for backward compatibility",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,283,2018-08-28T16:52:58Z,2018-08-29T16:22:36Z,2018-10-03T06:53:36Z,MERGED,True,128,7,1,https://github.com/akgrant43,FileAttributes 1.4.0: File permissions and ownership,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/283,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/283,"Add the ability to modify the posix permissions (chmod()) and user and
group ids (chown()).
Also properly declare cPathString in unixPathToOop:.","Add the ability to modify the posix permissions (chmod()) and user and
group ids (chown()).
Also properly declare cPathString in unixPathToOop:.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,285,2018-10-02T07:03:52Z,2018-10-03T06:18:03Z,2018-10-03T06:18:03Z,MERGED,True,1706,846,9,https://github.com/akgrant43,FileAttributesPlugin 2.0.0: Fixes UTF8 on Windows,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/285,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/285,"Restructure FileAttributesPlugin to move platform specific functionality out to separate files. This is required as Windows requires the ""wide"" versions of posix functions to be used, e.g. access() vs. _waccess(), while other seem to require the Windows native functions, e.g. iterating over directories, and interleaving #ifdef _WIN32 was becoming unwieldy.","Restructure FileAttributesPlugin to move platform specific functionality out to separate files. This is required as Windows requires the ""wide"" versions of posix functions to be used, e.g. access() vs. _waccess(), while other seem to require the Windows native functions, e.g. iterating over directories, and interleaving #ifdef _WIN32 was becoming unwieldy.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,286,2018-10-02T13:29:14Z,2018-10-02T15:17:18Z,2019-01-05T19:16:50Z,MERGED,True,0,2,1,https://github.com/akgrant43,sqWin32Directory.c: Remove ifdef PharoVM to include required headers,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/286,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/286,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,287,2018-10-03T21:03:28Z,2018-10-04T05:25:53Z,2018-10-04T05:25:53Z,MERGED,True,181,121,5,https://github.com/akgrant43,FileAttributesPlugin v2.0.1,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/287,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/287,"The following primitives weren't updated as part of the support file
restructure:


primitiveChangeMode
primitiveChangeOwner
primitiveSymlinkChangeOwner
primitiveRewinddir

Get these working again in the new framework (fapath).


Rewinding the directory on Windows returns the first entry.
Modify the primitive to behave this way on all platforms.


Path conversion primitives shouldn't include the Long Path Prefix on
Windows as part of the path.","The following primitives weren't updated as part of the support file
restructure:


primitiveChangeMode
primitiveChangeOwner
primitiveSymlinkChangeOwner
primitiveRewinddir

Get these working again in the new framework (fapath).


Rewinding the directory on Windows returns the first entry.
Modify the primitive to behave this way on all platforms.


Path conversion primitives shouldn't include the Long Path Prefix on
Windows as part of the path.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,289,2018-10-05T09:37:17Z,2018-10-05T11:55:15Z,2018-10-05T11:57:21Z,CLOSED,False,1,1,1,https://github.com/pavel-krivanek,increse fallback window size on Mac to a standard dimension,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289,https://github.com/pavel-krivanek,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289,#288,#288,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,289,2018-10-05T09:37:17Z,2018-10-05T11:55:15Z,2018-10-05T11:57:21Z,CLOSED,False,1,1,1,https://github.com/pavel-krivanek,increse fallback window size on Mac to a standard dimension,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289#issuecomment-427317908,#288,how is  976 by 665 a “standard” dimension? that does not make sense,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,289,2018-10-05T09:37:17Z,2018-10-05T11:55:15Z,2018-10-05T11:57:21Z,CLOSED,False,1,1,1,https://github.com/pavel-krivanek,increse fallback window size on Mac to a standard dimension,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289,https://github.com/pavel-krivanek,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289#issuecomment-427327961,#288,just Pharo standard dimension of Pharo window... Squeak has 1024@768. Both are random values from the perspective of this PR.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,289,2018-10-05T09:37:17Z,2018-10-05T11:55:15Z,2018-10-05T11:57:21Z,CLOSED,False,1,1,1,https://github.com/pavel-krivanek,increse fallback window size on Mac to a standard dimension,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289,https://github.com/OpenSmalltalk-Bot,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289#issuecomment-427331375,#288,"no, they're not random.
1024x768 is the XGA standard resolution. an alternative would be 640x480, which is VGA, but not large enough for most Smalltalk tools. see also https://en.wikipedia.org/wiki/Display_resolution
-- 
Sent from a mobile device",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,289,2018-10-05T09:37:17Z,2018-10-05T11:55:15Z,2018-10-05T11:57:21Z,CLOSED,False,1,1,1,https://github.com/pavel-krivanek,increse fallback window size on Mac to a standard dimension,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289,https://github.com/pavel-krivanek,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289#issuecomment-427334140,#288,"well, I updated the PR. I know from where 1024x768 comes from. That's why I wanted a smaller resolution since on displays with XGA resolution is the window too big because of window decorations etc. I meant that from the perspective of this PR the values are ""random"" magic numbers and it is not a proper solution. But better than nothing.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,289,2018-10-05T09:37:17Z,2018-10-05T11:55:15Z,2018-10-05T11:57:21Z,CLOSED,False,1,1,1,https://github.com/pavel-krivanek,increse fallback window size on Mac to a standard dimension,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289,https://github.com/pavel-krivanek,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/289#issuecomment-427340025,#288,Closing this PR. It does not solve the problem in the right place,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,291,2018-10-05T12:18:14Z,2018-10-07T14:12:18Z,2020-09-07T12:45:32Z,MERGED,True,11,11,5,https://github.com/krono,prefer image's saved size over arbitrary defaults if unknown,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291,fixes #288 when applied,fixes #288 when applied,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,291,2018-10-05T12:18:14Z,2018-10-07T14:12:18Z,2020-09-07T12:45:32Z,MERGED,True,11,11,5,https://github.com/krono,prefer image's saved size over arbitrary defaults if unknown,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291#issuecomment-427345798,fixes #288 when applied,"@pavel-krivanek, have a look.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,291,2018-10-05T12:18:14Z,2018-10-07T14:12:18Z,2020-09-07T12:45:32Z,MERGED,True,11,11,5,https://github.com/krono,prefer image's saved size over arbitrary defaults if unknown,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291#issuecomment-427346161,fixes #288 when applied,@OpenSmalltalk/collaborators  please test whether you see unintended behavior.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,291,2018-10-05T12:18:14Z,2018-10-07T14:12:18Z,2020-09-07T12:45:32Z,MERGED,True,11,11,5,https://github.com/krono,prefer image's saved size over arbitrary defaults if unknown,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291,https://github.com/pavel-krivanek,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/291#issuecomment-427348540,fixes #288 when applied,looks good. We will try it,True,{'THUMBS_UP': ['https://github.com/krono']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,293,2018-10-06T18:16:09Z,2018-10-07T09:12:50Z,2018-11-23T14:55:55Z,MERGED,True,29,9,1,https://github.com/akgrant43,FileAttributesPlugin 2.0.2: free faPath,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/293,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/293,"It's too easy to forget that C doesn't have garbage collection,
especially in slang... :-)","It's too easy to forget that C doesn't have garbage collection,
especially in slang... :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,293,2018-10-06T18:16:09Z,2018-10-07T09:12:50Z,2018-11-23T14:55:55Z,MERGED,True,29,9,1,https://github.com/akgrant43,FileAttributesPlugin 2.0.2: free faPath,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/293,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/293#issuecomment-427637857,"It's too easy to forget that C doesn't have garbage collection,
especially in slang... :-)",Build failures were attempts to install packages prior to compiling.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/guillep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.","While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295#issuecomment-431833039,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.",Please do remove the guard.  This is clearly the right thing to do on any flavour.  Thanks for this important fix!!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/clementbera,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295#issuecomment-431835741,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.","Do you want to review John since I believe you have good OSX experience?
If no one else wants to review I'll merge wednesday afternoon, unless someone has already merged before.
Thanks Guille for this fix. Was very annoying.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/johnmci,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295#issuecomment-431903055,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.","Ok I will take a look
…
Sent from my iPhone
 On Oct 22, 2018, at 06:28, Clement Bera ***@***.***> wrote:

 Do you want to review John since I believe you have good OSX experience?

 If no one else wants to review I'll merge wednesday afternoon.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/johnmci,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295#issuecomment-432007797,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.","Ok it looks ok, not sure if it would affect the older multi-window support but I’m not sure anyone used that anyway.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/clementbera,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295#issuecomment-432099089,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.","Thanks John. I was scared because last time someone tried to fix this it had side effect on some events in the main window.
I merge then. We will see if someone complains.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/guillep,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295#issuecomment-432159863,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.",I've posted #296 removing the PharoVM guard and adding some comments.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,295,2018-10-22T10:30:57Z,2018-10-23T05:36:11Z,2018-10-23T08:59:10Z,MERGED,True,18,0,1,https://github.com/guillep,Do only handle events that correspond to the VM window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295,https://github.com/guillep,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/295#issuecomment-432159953,"While playing with SDL on OSX we have noticed that the main window in the VM is randomly eating events that belong to other windows. This happens because we are consuming events regardless the window they come from.
The corresponding code is in the method pumpRunLoopEventSendAndSignal: in
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/OSX/sqSqueakOSXApplication%2Bevents.m
I've playing around with making the VM consume only events that come from its own window or from no window (window=null). This seems to work correctly, and I've had run into no issues in the last couple of hours.
I've put a guard so my code is only valid for PHAROVM builds, but I'd gladly remove the guards if people think this is a good move for all the community.",BTW Thanks!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,296,2018-10-23T08:58:03Z,2018-10-23T18:08:46Z,2018-10-23T18:08:46Z,MERGED,True,11,20,1,https://github.com/guillep,Added comments and removed PharoVM guards for windowing support,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/296,https://github.com/guillep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/296,"Last integration of #295 went too fast :)
This PR does some cleanups:

remove the PharoVM guards,
added comments

Answering the questions from the other thread: this should have no effect on systems using a single window. However, with multiple windowing systems,  this makes the consumption of events a cooperative task. If let's say SDL does not consume its events (because we don't call the event processing routine), then those events stay in the queue for ever.
To make it more robust I've been trying to use a separate queue to store alien events and repost them in the queue afterwads, but I could not manage to make it work. And Cocoa's support/documentation does not help here...","Last integration of #295 went too fast :)
This PR does some cleanups:

remove the PharoVM guards,
added comments

Answering the questions from the other thread: this should have no effect on systems using a single window. However, with multiple windowing systems,  this makes the consumption of events a cooperative task. If let's say SDL does not consume its events (because we don't call the event processing routine), then those events stay in the queue for ever.
To make it more robust I've been trying to use a separate queue to store alien events and repost them in the queue afterwads, but I could not manage to make it work. And Cocoa's support/documentation does not help here...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,297,2018-10-26T01:59:56Z,2018-10-27T02:42:19Z,2018-10-28T15:28:04Z,MERGED,True,3,3,2,https://github.com/tcj,Use output of xcode-select to determine path of Xcode in Mac Makefile…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/297,https://github.com/tcj,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/297,"…, instead of hard-coding.
xcode-select allows for multiple versions of Xcode to be installed and to be selected by the user.
DO NOT put a space in a renamed Xcode.app, however: this will break SDK detection in the Makefile.
Add OS X 10.14 SDKs for x64 build, as supplied by Xcode 10.","…, instead of hard-coding.
xcode-select allows for multiple versions of Xcode to be installed and to be selected by the user.
DO NOT put a space in a renamed Xcode.app, however: this will break SDK detection in the Makefile.
Add OS X 10.14 SDKs for x64 build, as supplied by Xcode 10.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-439398422,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","Hi @eliotmiranda,
I didn't have time to work on this (and I don't have much time now to be honest, I need to release Pharo7 and there are still too many things open :( )
Specially, because those changes are not mine but from @ronsaldo and I first need to see what he did and what you want to to be able to fix it :P
I think is to merge latest changes to File plugin there? (no idea how hard would it be :P)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-439431399,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)",I can have a look at platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c and platforms/win32/vm if that helps.  And try building the headless version on linux.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/ronsaldo,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-440332411,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","When I started making the minheadless vm, I rewrote most of the file primitives to force Unicode usage by manually converting from UTF-8 into UTF-16, and removing the usage of tchar for explicit wchar. I remember that I was having Unicode related issues with spanish accents in directories and folders, and also some differences when compiling with MSVC. In parallel, in the main vm branch I think that there was a parallel refactoring on these primitives, so another pass on it should be needed.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-440948727,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","Hi Esteban, Eliot & Ronie,
Ronie, thanks for the history and explanation re Unicode.
Esteban & Ronnie, can I ask what the long term goals are for this code base?
The reason is that it appears to be adding significant complexity to the code base:
It's breaking the existing directory structure, e.g. the two instances of sqUnixCharConv.c are in:
./platforms/minheadless/unix/sqUnixCharConv.c
./platforms/unix/vm/sqUnixCharConv.c

It adds 69 file names.  Some of these obviously need to be duplicated, e.g. make files are specific to the build type, but other examples include:

sqUnixCharConv.h is copied unchanged.
Changes the return types of some functions with the same name, e.g. 'int' to 'sqInt'.
sqWin32Heartbeat.c where the entire file is copied so that 1 function can be extended (ioHighResClock()).

And with an admission of being too lazy to figure it out, I'm not sure how to build the Windows minheadless variant of, e.g., pharo.cog.spur.  There's:
build.linux64x64/pharo.cog.spur.minheadless/build/mvm

for linux 64 bit, and the equivalent for linux 32 bit and MacOS 32 bit, but not MacOS 64 bit or Windows.  Should:
build.minheadless.cmake/x86/pharo.cog.spur/mvm

be used?
I can understand the problems of chasing a moving target, but without a commitment to continue working on this it looks like it will increase technical debt.
Or am I missing something?
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/girba,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-440950034,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","I can address the high level concern. I will let the others address the specifics in the code. The high level goal of this code is to enable the VM to not assume a UI, or even a specific UI. This is important for enabling other user interface technologies.
The Windows part does not work yet. However, the goal of this branch is to integrate it now to not lose the work. The Windows support will be added later.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/estebanlm,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-440983968,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","Medium term, it is intended to use this codebase as the foundation for the official PharoVMs (because we want a real headless option, with the responsibility of starting a world from the image, not the VM).
Of course, that does not means it does not needs work on it.
Most of the duplicates and that is because when started, @ronsaldo wanted to keep it as separated as possible from the main sources, as a way to preserve them and being able to modify what he needed.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/bencoman,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-441037277,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","not sure how to build the Windows minheadless variant of, e.g.,
 pharo.cog.spur.

I documented my experience getting the Windows build working with MSVC
here...
http://forum.world.st/Minheadless-trial-td5082569.html

After taking a short break from it I was planning to catch it up to
Esteban's branch
but I hadn't got an opportunity yet.  Seeing Esteban integrating it
prompted me to plan some time
for this at the end of next week, but thats not assured so if you are so
inclined to have a go at it, please do.

From memory this gets at least the StackInterpreter doing simple arithmetic
from the command line,
which should allow you to test file primitives from the command-line.
Esteban mentioned he had
a custom Image for a minheadless+GUI.  I don't remember the state I got Cog
to.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/akgrant43,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-441110358,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","@girba, @estebanlm & @ronsaldo  thanks for the explanation.  That makes sense, although I think we need to be careful about the duplication.
@bencoman thanks for the write-up, that explains quite a bit that I didn't really understand.
Progress report:
I've successfully built a linux 64 bit cog spur VM and started a standard image with it.  Changes include:

platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c
-- Reinstate stdio processing as highlighted by @eliotmiranda
-- I also looked at platforms/win32/vm, but the changes there all look fine.
build.linux64x64/pharo.cog.spur.minheadless/build/mvm
-- Fix the install directory processing and change it so it doesn't write in the middle of the 32 bit VM
cmake/Plugins.cmake
-- Add FileAttributesPlugin
third-party/libsdl2.spec
-- fix libSDL2 linux64 so file name

See: https://github.com/akgrant43/opensmalltalk-vm/tree/akg-minheadless-vm
The only issue I've found so far is that right mouse click isn't working.
The MacOS build will still be broken.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/akgrant43,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-441219345,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","Current status:

The CI build completes for:
-- Windows
-- Main Squeak and Pharo linux and Mac builds
-- Other linux builds
-- Other Mac builds fails in the newspeak tests.  I don't think this is
related.

I've only tested linux64 at this stage, but given:

minheadless are (mostly) separate builds.
both Esteban and I have done some ad-hoc testing.
the CI succeeds.
the fact that this code is more susceptible than most to diverging
from the main repository (due to code duplication).
Esteban and Doru both seem committed to continuing with this work.
integrating the code now will facilitate others looking at the code,
e.g. Ben planned to have a look next week.

it may be worthwhile integrating this now.
What do you think?
Just a reminder, the PR is not this one, but:
#310
My Win32 build fails trying to build and install freetype:
-- Installing: /home/alistair/pharo7/pharo-snap/pharo-vm/opensmalltalk-vm/.thirdparty-cache/windows/i386/include/freetype2/freetype/tttables.h
-- Installing: /home/alistair/pharo7/pharo-snap/pharo-vm/opensmalltalk-vm/.thirdparty-cache/windows/i386/include/freetype2/freetype/tttags.h
-- Installing: /home/alistair/pharo7/pharo-snap/pharo-vm/opensmalltalk-vm/.thirdparty-cache/windows/i386/include/freetype2/ft2build.h
CMake Error at cmake_install.cmake:35 (file):
file INSTALL cannot find
""/home/alistair/pharo7/pharo-snap/pharo-vm/opensmalltalk-vm/build.win32x86/pharo.cog.spur/build/third-party/freetype-2.9.1/build/include/freetype/config/ftconfig.h"".
I've never used cmake before, so am starting to learn about it, but does
anyone recognise the above?
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,298,2018-10-28T09:45:03Z,2018-11-28T06:35:58Z,2018-11-28T06:35:58Z,CLOSED,False,15892,389,165,https://github.com/estebanlm,Add minheadless vm,91,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298,https://github.com/akgrant43,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/298#issuecomment-442336404,"adds the minheadless sources from @ronsaldo + my own changes.
this is still WIP (is working for Mac and Linux but not for Win), but to be honest, I want this integrated before the structure reorganisation so I do not need to do it myself after ;)","This has been added through PR #310 which builds on this one.
Closing.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,299,2018-10-30T16:42:02Z,2018-10-31T18:08:30Z,2018-10-31T18:08:30Z,MERGED,True,4,10,2,https://github.com/bwestergaard,replace valloc() with mmap() when allocating executable pages for cal…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/299,https://github.com/bwestergaard,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/299,"…lbacks
Under linux, if SELinux is enabled (i.e. not permisive or disabled), then
the heap memory allocated with vmalloc() and marked as executable with mprotect()
will fail.  In order to have this work with SELinux enabled (and not providing
a module policy file to allow execheap) mmap() should be used.
Note, it might be possible to remove the stdlib.h and sys/mman.h header
file references.
See: http://lists.squeakfoundation.org/pipermail/vm-dev/2018-October/029102.html","…lbacks
Under linux, if SELinux is enabled (i.e. not permisive or disabled), then
the heap memory allocated with vmalloc() and marked as executable with mprotect()
will fail.  In order to have this work with SELinux enabled (and not providing
a module policy file to allow execheap) mmap() should be used.
Note, it might be possible to remove the stdlib.h and sys/mman.h header
file references.
See: http://lists.squeakfoundation.org/pipermail/vm-dev/2018-October/029102.html",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,299,2018-10-30T16:42:02Z,2018-10-31T18:08:30Z,2018-10-31T18:08:30Z,MERGED,True,4,10,2,https://github.com/bwestergaard,replace valloc() with mmap() when allocating executable pages for cal…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/299,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/299#issuecomment-434490154,"…lbacks
Under linux, if SELinux is enabled (i.e. not permisive or disabled), then
the heap memory allocated with vmalloc() and marked as executable with mprotect()
will fail.  In order to have this work with SELinux enabled (and not providing
a module policy file to allow execheap) mmap() should be used.
Note, it might be possible to remove the stdlib.h and sys/mman.h header
file references.
See: http://lists.squeakfoundation.org/pipermail/vm-dev/2018-October/029102.html","Bob, could you add a comment in front of the mmap call that says this is equivalent to valloc but that it doesn't work on the version of selinux that gave the grief?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,300,2018-10-31T09:51:13Z,2018-10-31T17:48:57Z,2018-11-01T18:18:39Z,MERGED,True,30,20,1,https://github.com/guillep,Consume all events in the event queue to avoid application lockups,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/300,https://github.com/guillep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/300,"It seems that ""peeking"" from the event queue does not yield events in case of changing resolutions:
NSApp nextEventMatchingMask:NSEventMaskAny
                             untilDate:nil
                             inMode:NSEventTrackingRunLoopMode
                             dequeue: ***NO***

And then it never enters the loop...
Of course, apple's doc says nothing about this: https://developer.apple.com/documentation/appkit/nsapplication/1428485-nexteventmatchingmask?language=objc
So all this is speculation ^^.
This new version consumes all pending events in the NSApp, and it does not show any lockups when e.g., switching resolutions. If the event does not correspond to this window, we take it from the event queue anyways and re-post it afterwards, to give other windows the opportunity to consume their events.","It seems that ""peeking"" from the event queue does not yield events in case of changing resolutions:
NSApp nextEventMatchingMask:NSEventMaskAny
                             untilDate:nil
                             inMode:NSEventTrackingRunLoopMode
                             dequeue: ***NO***

And then it never enters the loop...
Of course, apple's doc says nothing about this: https://developer.apple.com/documentation/appkit/nsapplication/1428485-nexteventmatchingmask?language=objc
So all this is speculation ^^.
This new version consumes all pending events in the NSApp, and it does not show any lockups when e.g., switching resolutions. If the event does not correspond to this window, we take it from the event queue anyways and re-post it afterwards, to give other windows the opportunity to consume their events.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,301,2018-11-05T16:35:09Z,2018-11-06T03:09:44Z,2018-12-30T14:27:29Z,MERGED,True,4,0,1,https://github.com/akgrant43,BuildSqueakSpurTrunkVMMakerImage.st disable underscores,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/301,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/301,"Disable underscores as assignment, allowing underscores in method names,
which are used by vmmaker.","Disable underscores as assignment, allowing underscores in method names,
which are used by vmmaker.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,301,2018-11-05T16:35:09Z,2018-11-06T03:09:44Z,2018-12-30T14:27:29Z,MERGED,True,4,0,1,https://github.com/akgrant43,BuildSqueakSpurTrunkVMMakerImage.st disable underscores,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/301,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/301#issuecomment-436077494,"Disable underscores as assignment, allowing underscores in method names,
which are used by vmmaker.","From the squeak mailing list, this sounds necessary for having working Refactoring Tools.
Maybe [skip ci] if bots don't test these build scripts.
No time to run the script, if you did please proceed and merge your own PR 👍",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,301,2018-11-05T16:35:09Z,2018-11-06T03:09:44Z,2018-12-30T14:27:29Z,MERGED,True,4,0,1,https://github.com/akgrant43,BuildSqueakSpurTrunkVMMakerImage.st disable underscores,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/301,https://github.com/OpenSmalltalk-Bot,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/301#issuecomment-436207876,"Disable underscores as assignment, allowing underscores in method names,
which are used by vmmaker.","Hi Nicolas,
On Tue, 6 Nov 2018 at 00:41, Nicolas Cellier ***@***.***> wrote:



 From the squeak mailing list, this sounds necessary for having working Refactoring Tools.
 Maybe [skip ci] if bots don't test these build scripts.
Shall do.
 No time to run the script, if you did please proceed and merge your own PR
I had tested it, but Eliot beat me to it.


Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,303,2018-11-07T23:08:59Z,2018-11-10T04:47:56Z,2018-11-10T23:14:58Z,CLOSED,False,24,11,2,https://github.com/tom95,"x11: emit mouse wheel events, drop the ctrl+arrow workaround",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303,https://github.com/tom95,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303,"These changes fixed the horizontal scrolling issues for me. Cursory testing revealed no unintended sideeffects, but more testing should be done. I did not find an easy way to test if horizontal scrolling works as intended, plainly logging the events looks good, however.
No image-side changes were necessary, so I would claim that the VMs for the other platforms can continue to work as normal, even with this change just on x11.
Using the workaround to mark a scroll event by detecting all modifiers being pressed down instead, will require an image-side change though.","These changes fixed the horizontal scrolling issues for me. Cursory testing revealed no unintended sideeffects, but more testing should be done. I did not find an easy way to test if horizontal scrolling works as intended, plainly logging the events looks good, however.
No image-side changes were necessary, so I would claim that the VMs for the other platforms can continue to work as normal, even with this change just on x11.
Using the workaround to mark a scroll event by detecting all modifiers being pressed down instead, will require an image-side change though.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,303,2018-11-07T23:08:59Z,2018-11-10T04:47:56Z,2018-11-10T23:14:58Z,CLOSED,False,24,11,2,https://github.com/tom95,"x11: emit mouse wheel events, drop the ctrl+arrow workaround",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303#issuecomment-437504831,"These changes fixed the horizontal scrolling issues for me. Cursory testing revealed no unintended sideeffects, but more testing should be done. I did not find an easy way to test if horizontal scrolling works as intended, plainly logging the events looks good, however.
No image-side changes were necessary, so I would claim that the VMs for the other platforms can continue to work as normal, even with this change just on x11.
Using the workaround to mark a scroll event by detecting all modifiers being pressed down instead, will require an image-side change though.","Hi Tom,
not my area of expertise but I see from platforms/Cross/vm/sq.h this:

/* User input recording II:
   The following functions and definition can be used on
   platform supporting events directly.
*/

/* Event types. */
#define EventTypeNone       0
#define EventTypeMouse      1
#define EventTypeKeyboard   2
#define EventTypeDragDropFiles  3
#define EventTypeMenu       4
#define EventTypeWindow     5
#define EventTypeComplex    6 /* For iPhone apps */
**#define EventTypeMouseWheel 7 /* defunct; platforms map to EventTypeKeyboard */**
#define EventTypePlugin     8 /* Terf: events from ActiveX Controls */

So what /is/ the status of systems w.r.t. genuine mouse wheel events?  Should we instead use e.g.
#if DeliverMouseWheelEvents
... your code ...
#else
... existing code ...
#endif

or better still have some variable, settable via a primitive, etc, to enable delivery of mouse wheel events?  The mapping of wheel events to to key presses seems like a massive hack to me but images depend on it, so if we do deliver them as proper events it means either (effectively) a new VM, or the VM providing a way to switch between the two variants.  Since backwards compatibility is key we either make this a #define and remember to enable it at some future date (an approach almost guaranteed to fail from forgetfulness) or we bite the bullet and provide proper modal control (provide both modes and a way of controlling which mode, with a flag that persists in the image so that it doesn't have to be set on every launch).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,303,2018-11-07T23:08:59Z,2018-11-10T04:47:56Z,2018-11-10T23:14:58Z,CLOSED,False,24,11,2,https://github.com/tom95,"x11: emit mouse wheel events, drop the ctrl+arrow workaround",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303,https://github.com/tom95,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303#issuecomment-437510583,"These changes fixed the horizontal scrolling issues for me. Cursory testing revealed no unintended sideeffects, but more testing should be done. I did not find an easy way to test if horizontal scrolling works as intended, plainly logging the events looks good, however.
No image-side changes were necessary, so I would claim that the VMs for the other platforms can continue to work as normal, even with this change just on x11.
Using the workaround to mark a scroll event by detecting all modifiers being pressed down instead, will require an image-side change though.","I have found that the image had good support for MouseWheelEvents for a while. Based on the method stamps it seems Marcel added the necessary image-side code on 6/10/2016 via the MouseWheelEvent and MouseWheelState classes.
The original comment that you pointed out in the opensmalltalk sources comes from commit 3010e44
You're right though that images from before October '16 on X11 would find themselves without scroll support. Do the images have some sort of capability advertising system or will this need to be a primitive invoked on system startup?
I believe this is a rather urgent fix. As Chris already pointed out on the mailing list, it effectively makes scrolling in any function larger than the code panel effectively impossible on X11 in 5.2. Or at least I keep slipping in horizontal scroll events when using my touchpad. If this PR turns out to be a major undertaking, however, we may be better off reverting the commit that enabled horizontal scroll events in the first place for the moment and revisit this afterwards with the cleanest possible solution.
What is the scope of backwards compatibility for the VM? Are breaking changes like this allowed in major version increments (e.g. 5.2->5.3 or 5.2->6.0) or to be avoided at all cost?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,303,2018-11-07T23:08:59Z,2018-11-10T04:47:56Z,2018-11-10T23:14:58Z,CLOSED,False,24,11,2,https://github.com/tom95,"x11: emit mouse wheel events, drop the ctrl+arrow workaround",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303#issuecomment-437551211,"These changes fixed the horizontal scrolling issues for me. Cursory testing revealed no unintended sideeffects, but more testing should be done. I did not find an easy way to test if horizontal scrolling works as intended, plainly logging the events looks good, however.
No image-side changes were necessary, so I would claim that the VMs for the other platforms can continue to work as normal, even with this change just on x11.
Using the workaround to mark a scroll event by detecting all modifiers being pressed down instead, will require an image-side change though.","The scope of backward-compatibility for the VM is complete except between major releases, so a 5.n VM must be backward-compatible with any and all 5.x, x <= n.  So the right way to do this is
a) make all platforms test a flag (I propose sendWheelEvents) and if the flag is set, deliver the events as EventTypeMouseWheel, otherwise to do the current mapping hack
b) add a bit to the image state flags that persist in the image header that corresponds to the sendWheelEvents, and initialize sendWheelEvents at start-up based on this flag
c) add a command-line switch (eg -wheelevents & -no-wheelevents) to override the flag
Tom, if you have energy can you write code for a) ?  I will do b) & c), and will do a) if you're indisposed.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,303,2018-11-07T23:08:59Z,2018-11-10T04:47:56Z,2018-11-10T23:14:58Z,CLOSED,False,24,11,2,https://github.com/tom95,"x11: emit mouse wheel events, drop the ctrl+arrow workaround",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303#issuecomment-437558180,"These changes fixed the horizontal scrolling issues for me. Cursory testing revealed no unintended sideeffects, but more testing should be done. I did not find an easy way to test if horizontal scrolling works as intended, plainly logging the events looks good, however.
No image-side changes were necessary, so I would claim that the VMs for the other platforms can continue to work as normal, even with this change just on x11.
Using the workaround to mark a scroll event by detecting all modifiers being pressed down instead, will require an image-side change though.",Closed in favor of 897ef17,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,303,2018-11-07T23:08:59Z,2018-11-10T04:47:56Z,2018-11-10T23:14:58Z,CLOSED,False,24,11,2,https://github.com/tom95,"x11: emit mouse wheel events, drop the ctrl+arrow workaround",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303,https://github.com/tom95,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/303#issuecomment-437629347,"These changes fixed the horizontal scrolling issues for me. Cursory testing revealed no unintended sideeffects, but more testing should be done. I did not find an easy way to test if horizontal scrolling works as intended, plainly logging the events looks good, however.
No image-side changes were necessary, so I would claim that the VMs for the other platforms can continue to work as normal, even with this change just on x11.
Using the workaround to mark a scroll event by detecting all modifiers being pressed down instead, will require an image-side change though.",I see you were a little faster than me :) Thank you for all the adaptions!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/eliotmiranda,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.","Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-438482472,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.","Hi Eliot, great work!
It seems that history graph is flatten though.
This generates strange diffs for parallel branches.
Also a (Tonel?) bug flips compound category from Symbol to String et vice et versa, which generates spurious diffs...
Which tool did you use for the mc->git conversion?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/georgeganea,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-438576862,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.","Hi Nicolas,
We used  https://github.com/peteruhnak/git-migration.
We selected the packages
#('Balloon-Engine-Pools' 'BytecodeSets.spur' 'VMMaker' 'VMMaker.oscog' 'Cog' 'CogTools' 'ImageFormat' 'VMMakerCompatibilityForPharo6' 'Android-Base' 'CMakeVMMaker' 'CMakeVMMakerSqueak' 'CogAttic' 'CogBenchmarks' 'CogCompatibility' 'CogTools-Listener' 'ImageFormat' 'MemoryAccess' 'Qwaq-VMProfiling' 'SlangBrowser' 'VMM-touch-temp' 'VMMakerCompatibilityForPharo6' 'VMMakerExtras' 'VMMakerJS'), and the migration tool just creates a long line of commits.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/georgeganea,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-438577129,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.","Could you please post an example for ""strange diffs for parallel branches"" and also for the ""compound category from Symbol to String et vice et versa""?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/nicolas-cellier-aka-nice,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-438607783,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.","Example of String/Symbol mess: find the real changes in:
4accb9e
Example of parallel branches mess:
This commit is a merge of VMMaker.oscog-nice.2109 and VMMaker.oscog-eem.2109, and thus should have 2 parents instead of one:
d5fae5a
Its parent is VMMaker.oscog-nice.2109
af7947f
and its parent has been marked incorrectly as VMMaker.oscog-eem.2109
a97aba9
We thus see diffs between two different branches VMMaker.oscog-nice.2109 and VMMaker.oscog-eem.2109 which is completely irrelevant...
Also, it would be good to append the name of original Monticello package (and why not URL) at the end of the commit message for easing diagnostics!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-438821408,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.",parallel branch problems is now peteruhnak/git-migration#18,True,{'THUMBS_UP': ['https://github.com/georgeganea']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/georgeganea,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-438951091,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.","parallel branch problems is now peteruhnak/git-migration#18

Very cool!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/georgeganea,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-439039350,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.",I did pharo-vcs/tonel#63.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,305,2018-11-09T19:09:32Z,2020-10-28T16:08:05Z,2020-10-28T16:08:05Z,CLOSED,False,329657,0,827,https://github.com/eliotmiranda,Pullrequest/vmmaker,3302,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/305#issuecomment-690604494,"Initial pull request to include VMMaker source in opensmalltalk-vm repo.
Things that still need to be done before we can move to this version:

provide access to the Smalltalk part of the repo (Tonel format) from Squeak.
plugin source still needs to be included.","This looks a bit outdated, no?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-437650704,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.",This is great! Could @johnmci have a look at this please? I'm not very familiar with the OpenGL API or Metal API...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/OpenSmalltalk-Bot,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-437676837,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","On Sat, Nov 10, 2018 at 11:24:46PM -0800, Ronie Salgado wrote:

 Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.

Very nice to see this :-)

Dave",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-438094554,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","Hi Ronie, can you add a comment to platforms/iOS/vm/OSX/SqueakMainShaders.metal.inc to explain what's in SqueakMainShaders_metallib?  This is some mysterious s&%t ;-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-438095722,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","Superb work, Ronie.  So thorough.  Shame about the selector comparisons in doCommandBySelector:; I know the time isn't an issue but it's ugly :-)  I suppose we could implement the selectors instead.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/ronsaldo,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-438145516,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","About platforms/iOS/vm/OSX/SqueakMainShaders.metal.inc , I agree, but the metal build tools were not working on CI, and I did not want to bump up the required version of XCode. So I ended copying the approach of offline compilation from SDL2. I just added the comment.
Well as for the doCommandBySelector; comparison, I copied most of the event related stuff from the sqSqueakOSXOpenGLView.m and sqSqueakOSXCGView.m . I think that someone else should refactor these parts in order to avoid code duplication.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/fniephaus,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-438176566,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","@ronsaldo maybe it's time to bump the macOS version our CI uses? The binaries should still work on older macOS systems, right?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/bencoman,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-451131583,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","Lets not allow this go stale.  What is blocking it?
Can the CI be bumped to check how it fits with recent movement of Cog branch.
@eliotmiranda, are you satisfied with Ronnie's commit 6e1da75?
@fniephaus, unless its blocking, lets move any macOS version bump to a separate issue.
@johnmci, are you available to review? otherwise please advise us not to wait.",True,"{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice', 'https://github.com/fniephaus']}"
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/bencoman,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-453089627,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","Please respond...
@eliotmiranda, does Ronnie's commit 6e1da75 satisfy your request to add comments ?
@johnmci, are you available to review as Fabio requested? otherwise please advise us not to wait.
@fniephaus, unless its blocking, can any macOS version bump be done in a separate issue?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/fniephaus,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-453280755,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","unless its blocking, can any macOS version bump be done in a separate issue?

Sure, no need to bump the version at all if it's not required by this change.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/fniephaus,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-453290159,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","I got super excited about this PR again, so I merged it locally into Cog and build a Squeak VM. I'm on macOS Mojave and my MacBook has a Retina Display. Unfortunately, I am seeing this when opening the Squeak-5.2 release image:

Mouse events seem to work fine, so only the rendering is off for some reason.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,306,2018-11-11T07:24:44Z,2019-02-18T17:42:24Z,2019-05-11T01:05:32Z,MERGED,True,3096,18,16,https://github.com/ronsaldo,Use Metal instead of OpenGL for the main VM Window in OS X,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306,https://github.com/eliotmiranda,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/306#issuecomment-454116709,"Because OpenGL is being deprecated by Apple, use Metal instead of OpenGL for main VM window in OS X.
Metal only works in 64 bits mode. So, I also made the needed changes to keep using OpenGL in the 32 bits version of the OS X VM.","Hi Ben,
On Thu, Jan 10, 2019 at 5:06 AM Ben Coman ***@***.***> wrote:
 Please respond...
 @eliotmiranda <https://github.com/eliotmiranda>, are you satisfied with
 Ronnie's commit 6e1da75
 <6e1da75>
 ?

yes
 @johnmci <https://github.com/johnmci>, are you available to review as
 Fabio requested? otherwise please advise us not to wait.
 @fniephaus <https://github.com/fniephaus>, unless its blocking, can any
 macOS version bump be done in a separate issue?

_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,307,2018-11-16T13:46:11Z,2018-11-20T11:08:58Z,2018-11-20T11:10:38Z,MERGED,True,12,8,2,https://github.com/estebanlm,update freetype2 to v2.9.1,4,['Pharo'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/307,https://github.com/estebanlm,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/307,we use a very old version of freetype2 and some problems we have may have been fixed since 2.6.5.,we use a very old version of freetype2 and some problems we have may have been fixed since 2.6.5.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,308,2018-11-21T10:12:58Z,2018-11-22T11:41:13Z,2018-11-22T14:36:54Z,CLOSED,False,458837,0,1256,https://github.com/georgeganea,Pullrequest2/vmmaker,3305,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308,https://github.com/georgeganea,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308,"Since the previous pullrequest (pullrequest/vmmaker) was not updated with the new commits, I'm opening a new one.
In this episode:

commit comments also contain the mcz filename
the category issue has beed addressed
the commit dates and author dates are now the same so that the Github Network insight view is usable again","Since the previous pullrequest (pullrequest/vmmaker) was not updated with the new commits, I'm opening a new one.
In this episode:

commit comments also contain the mcz filename
the category issue has beed addressed
the commit dates and author dates are now the same so that the Github Network insight view is usable again",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,308,2018-11-21T10:12:58Z,2018-11-22T11:41:13Z,2018-11-22T14:36:54Z,CLOSED,False,458837,0,1256,https://github.com/georgeganea,Pullrequest2/vmmaker,3305,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308#issuecomment-440858113,"Since the previous pullrequest (pullrequest/vmmaker) was not updated with the new commits, I'm opening a new one.
In this episode:

commit comments also contain the mcz filename
the category issue has beed addressed
the commit dates and author dates are now the same so that the Github Network insight view is usable again","Greatly appreciate the fix to the commit dates.   The network graph looks much better. Thx George.
Its good to have the mcz name there too, but its a bit opaque having ""only"" the mcz name.
So a suggestion to fine-tune that... merge the first three lines of the mcz-commit-message onto a single line for the git-commit-message.  As shown here, only the first line of the commit message is displayed...

You should be able to reproduce that by doing...
$ git remote add ben  https://github.com/bencoman/opensmalltalk-vm.git
$ git fetch ben
$ git checkout -b ben/vmmaker-unmerged   # taken from this pull request
$ git branch vmmaker-comment-mod
$ git checkout vmmaker-comment-mod
$ git filter-branch -f --msg-filter /your/path/to/vmmaker-comment-mod.awk

where vmmaker-comment-mod.awk is...
#!/usr/bin/awk -f
(NR==1) {printf ""%s.mcz "", $0 ; next}
(NR==2) {printf ""%s "", $0; next}
{print}

Adding the "".mcz"" will make vmmaker more explicit after merging into the Cog mainline.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,308,2018-11-21T10:12:58Z,2018-11-22T11:41:13Z,2018-11-22T14:36:54Z,CLOSED,False,458837,0,1256,https://github.com/georgeganea,Pullrequest2/vmmaker,3305,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308,https://github.com/bencoman,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308#issuecomment-440862241,"Since the previous pullrequest (pullrequest/vmmaker) was not updated with the new commits, I'm opening a new one.
In this episode:

commit comments also contain the mcz filename
the category issue has beed addressed
the commit dates and author dates are now the same so that the Github Network insight view is usable again","btw, I'm curious how the merge into the Cog branch is done.  You can see in the graph the red line dropping down from the OpenSmalltalk/Cog branch to join the blue line from bencoman/vmmaker-comment-mod branch.  This was produced by doing...
$ git remote add OpenSmalltalk  https://github.com/OpenSmalltalk/opensmalltalk-vm.git
$ git fetch OpenSmalltalk
$ git branch vmmaker-merge
$ git checkout vmmaker-merge
$ git merge OpenSmalltalk/Cog --allow-unrelated-histories

but you must be doing something different (perhaps outside git)
since I don't see any merge line from Cog into this pull request.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,308,2018-11-21T10:12:58Z,2018-11-22T11:41:13Z,2018-11-22T14:36:54Z,CLOSED,False,458837,0,1256,https://github.com/georgeganea,Pullrequest2/vmmaker,3305,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308,https://github.com/georgeganea,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308#issuecomment-441007980,"Since the previous pullrequest (pullrequest/vmmaker) was not updated with the new commits, I'm opening a new one.
In this episode:

commit comments also contain the mcz filename
the category issue has beed addressed
the commit dates and author dates are now the same so that the Github Network insight view is usable again","The merge into Cog should be done once the pull request is accepted. In your fork, you merged OpenSmalltalk/Cog into the vmmaker branch. That is why that blue line is there. I did not do that last step you did: git merge OpenSmalltalk/Cog --allow-unrelated-histories.
I'm not sure I understand if/why we need to merge OpenSmalltalk/Cog into feenkcom/pullrequest3/vmmaker before we merge feenkcom/pullrequest3/vmmaker into OpenSmalltalk/Cog.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,308,2018-11-21T10:12:58Z,2018-11-22T11:41:13Z,2018-11-22T14:36:54Z,CLOSED,False,458837,0,1256,https://github.com/georgeganea,Pullrequest2/vmmaker,3305,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308,https://github.com/georgeganea,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308#issuecomment-441008147,"Since the previous pullrequest (pullrequest/vmmaker) was not updated with the new commits, I'm opening a new one.
In this episode:

commit comments also contain the mcz filename
the category issue has beed addressed
the commit dates and author dates are now the same so that the Github Network insight view is usable again",I've deleted pullrequest2 and created #309.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,308,2018-11-21T10:12:58Z,2018-11-22T11:41:13Z,2018-11-22T14:36:54Z,CLOSED,False,458837,0,1256,https://github.com/georgeganea,Pullrequest2/vmmaker,3305,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308,https://github.com/bencoman,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/308#issuecomment-441049076,"Since the previous pullrequest (pullrequest/vmmaker) was not updated with the new commits, I'm opening a new one.
In this episode:

commit comments also contain the mcz filename
the category issue has beed addressed
the commit dates and author dates are now the same so that the Github Network insight view is usable again","I did not do that last step you did: git merge OpenSmalltalk/Cog --allow-unrelated-histories.

But on that branch your last commit was ""merge with Cog"" and git log  seemed to show history items from the Cog branch, and I couldn't guess how you did it.  Just asking to see if I could learn something new.

I'm not sure I understand if/why we need to merge OpenSmalltalk/Cog into feenkcom/pullrequest3/vmmaker before we merge feenkcom/pullrequest3/vmmaker into OpenSmalltalk/Cog.

Its a big merge and merging first into you local repo allows you to better review the final result before doing the PR, and makes that PR a simple fast-forward merge.
Also I presumed this applies...
https://stackoverflow.com/questions/12413745/pull-requests-for-orphan-branch
though I've not tested this in practice. YMMV",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,309,2018-11-22T11:51:02Z,2019-02-18T06:16:59Z,2019-02-18T06:16:59Z,CLOSED,False,458837,0,1256,https://github.com/georgeganea,Pullrequest3/vmmaker,3306,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/309,https://github.com/georgeganea,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/309,"Yet another pull request for merging vmmaker code into opensmalltalk-vm.
Commits now have nicer looking comments as suggested in #308.","Yet another pull request for merging vmmaker code into opensmalltalk-vm.
Commits now have nicer looking comments as suggested in #308.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,310,2018-11-23T06:58:49Z,2018-11-27T23:42:07Z,2018-12-30T14:27:26Z,MERGED,True,15873,386,166,https://github.com/akgrant43,minheadless updates,102,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/310,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/310,"platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c
-- Reinstate stdio processing as highlighted by @eliotmiranda
-- I also looked at platforms/win32/vm, but the changes there all look fine.
build.linux64x64/pharo.cog.spur.minheadless/build/mvm & build.linux32x86/pharo.cog.spur.minheadless/build/mvm
-- Fix the install directory processing and change it so it doesn't write in the middle of the 32 bit VM
cmake/Plugins.cmake
-- Add FileAttributesPlugin
third-party/libsdl2.spec
-- fix libSDL2 linux64 so file name","platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c
-- Reinstate stdio processing as highlighted by @eliotmiranda
-- I also looked at platforms/win32/vm, but the changes there all look fine.
build.linux64x64/pharo.cog.spur.minheadless/build/mvm & build.linux32x86/pharo.cog.spur.minheadless/build/mvm
-- Fix the install directory processing and change it so it doesn't write in the middle of the 32 bit VM
cmake/Plugins.cmake
-- Add FileAttributesPlugin
third-party/libsdl2.spec
-- fix libSDL2 linux64 so file name",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,310,2018-11-23T06:58:49Z,2018-11-27T23:42:07Z,2018-12-30T14:27:26Z,MERGED,True,15873,386,166,https://github.com/akgrant43,minheadless updates,102,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/310,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/310#issuecomment-441628171,"platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c
-- Reinstate stdio processing as highlighted by @eliotmiranda
-- I also looked at platforms/win32/vm, but the changes there all look fine.
build.linux64x64/pharo.cog.spur.minheadless/build/mvm & build.linux32x86/pharo.cog.spur.minheadless/build/mvm
-- Fix the install directory processing and change it so it doesn't write in the middle of the 32 bit VM
cmake/Plugins.cmake
-- Add FileAttributesPlugin
third-party/libsdl2.spec
-- fix libSDL2 linux64 so file name","This PR is an extension of the work done by Esteban in
https://github.com/estebanlm/opensmalltalk-vm/tree/add-minheadless-vm
#298
which in turn builds on the work done by Ronie Salgardo at
https://github.com/ronsaldo/opensmalltalk-vm/tree/MinimalisticHeadless
The main discussion is in PR 298 (linked above).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,310,2018-11-23T06:58:49Z,2018-11-27T23:42:07Z,2018-12-30T14:27:26Z,MERGED,True,15873,386,166,https://github.com/akgrant43,minheadless updates,102,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/310,https://github.com/girba,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/310#issuecomment-442339301,"platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c
-- Reinstate stdio processing as highlighted by @eliotmiranda
-- I also looked at platforms/win32/vm, but the changes there all look fine.
build.linux64x64/pharo.cog.spur.minheadless/build/mvm & build.linux32x86/pharo.cog.spur.minheadless/build/mvm
-- Fix the install directory processing and change it so it doesn't write in the middle of the 32 bit VM
cmake/Plugins.cmake
-- Add FileAttributesPlugin
third-party/libsdl2.spec
-- fix libSDL2 linux64 so file name","Thanks a lot, everyone!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,311,2018-11-30T23:20:19Z,2018-12-01T00:23:41Z,2019-05-11T01:06:13Z,MERGED,True,369,118,12,https://github.com/ronsaldo,Fix the build of the minheadless VM for Pharo in Win32.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311,"Quick fixup of the minheadless VM for windows using the CMake building scripts.
The VM builds and works with Cygwin for 32 bits.
It builds with MSVC, but fails with several errors on runtime.","Quick fixup of the minheadless VM for windows using the CMake building scripts.
The VM builds and works with Cygwin for 32 bits.
It builds with MSVC, but fails with several errors on runtime.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,311,2018-11-30T23:20:19Z,2018-12-01T00:23:41Z,2019-05-11T01:06:13Z,MERGED,True,369,118,12,https://github.com/ronsaldo,Fix the build of the minheadless VM for Pharo in Win32.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311#issuecomment-443418024,"Quick fixup of the minheadless VM for windows using the CMake building scripts.
The VM builds and works with Cygwin for 32 bits.
It builds with MSVC, but fails with several errors on runtime.","Hi Ronie,

What is your procedure for building with MSVC ?
I'd like to have a go at it.

cheers -ben
…
On Sat, 1 Dec 2018 at 07:20, Ronie Salgado ***@***.***> wrote:
 Quick fixup of the minheadless VM for windows using the CMake building
 scripts.
 The VM builds and works with Cygwin for 32 bits.
 It builds with MSVC, but fails with several errors on runtime.
 ------------------------------
 You can view, comment on, or merge this pull request online at:

   #311
 Commit Summary

    - Fix the build of the minheadless VM for Pharo in Win32.

 File Changes

    - *M* CMakeLists.txt
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-0>
    (23)
    - *M* build.minheadless.cmake/x64/common/configure_variant.sh
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-1>
    (1)
    - *M* cmake/Plugins.cmake
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-2>
    (9)
    - *M* cmake/PluginsPharo.cmake
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-3>
    (19)
    - *M* platforms/Cross/plugins/IA32ABI/ia32abicc.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-4>
    (4)
    - *M* platforms/Cross/plugins/IA32ABI/x64win64abicc.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-5>
    (8)
    - *M* platforms/Cross/plugins/IA32ABI/xabicc.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-6>
    (6)
    - *M* platforms/Cross/plugins/Mpeg3Plugin/libmpeg/changesForSqueak.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-7>
    (3)
    - *M* platforms/Cross/plugins/Mpeg3Plugin/libmpeg/mpeg3private.h
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-8>
    (3)
    - *M* platforms/minheadless/windows/sqPlatformSpecific-Win32.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-9>
    (123)
    - *M* platforms/minheadless/windows/sqWin32Directory.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-10>
    (269)
    - *A* platforms/minheadless/windows/sqWin32Stubs.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311/files#diff-11>
    (19)

 Patch Links:

    - https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311.patch
    - https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/311.diff

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#311>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/ABolJ8jAUbhxA8NQPK4dTjyPdyEuzmS1ks5u0b00gaJpZM4Y8jIn>
 .",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/ronsaldo,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-443397814,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,"Hi Ben,
On a quick glance, some of these changes are still required, particularly the FPU one, probably the alloca one.
Other changes, such as the #define BUILD_VM_CORE is actually wrong. The minheadless builds the VM itself in a separate library (currently a static library) that can actually be embedded in any application. The public interface for this library is in include/OpenSmalltalkVM.h The problem in windows here was that BUILD_OSVM_STATIC in a previous version was BUILD_SQUEAK_STATIC . After a commentary from @estebanlm I changed the squeak_ prefix for the osvm_ in this public interface.
The public interface file is intended as an stable standalone interface to the vm. So, dependencies on sq.h or similar should not be allowed in this file (In my opinion). The implementation for this interface is in platforms/minheadless/common/sqVirtualMachineInterface.c . This header should be something that an user can copy to /usr/include . osvm_main can be used as an example on how to embed the VM in an application:

OSVM_VM_CORE_PUBLIC OSVMError
osvm_main(int argc, const char **argv)
{
OSVMError error;
/* Global initialization */
error = osvm_initialize();
if(error)
    return error;

/* Parse the command line*/
error = osvm_parseCommandLineArguments(argc, argv);
if(error)
    return error;

/* Initialize the VM */
error = osvm_initializeVM();
if(error)
    return error;

/* Load the command line image or the default one. */
error = osvm_loadDefaultImage();
if(error)
    return error;

/* Run Squeak */
error = osvm_run();

/* Shutdown*/
osvm_shutdown();

return error;

}

A part of the better 32 bits detection and configuration should also be integrated. When I started the minheadless VM two years ago, there was no stable win64 version of the VM.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/bencoman,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-443418737,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,"Okay. I see my BUILD_VM_CORE was to work around an unknown symbol ""_imp_osvm_main"",
which I guess your BUILD_OSVM_STATIC fixed.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-506004995,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,"Hi Ben,  I'm currently working on building the Tertf (3D ICC) VM using MSVC Community edition.  When I'm done I'll probably migrate the MSVC-specific Makefiles for build.win32* and platforms/win32/plugins into opensmalltalk-vm.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-690603873,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,Is this still necessary with the current MSVC stuff?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/eliotmiranda,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-690748683,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,"Whether it's necessary or not, it's useful to have a minimal headless VM.  That said, given that the MSVC 2017 build works, the headful makefiles could be used to inform the CMake build (settings, dealing with setjmp/longjmp issues, etc).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/krono,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-690899455,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,"Makes sense!
Do we want to deal with that herein or a new pr?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/eliotmiranda,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-691107427,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,If herein is simpler then herein :-),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-691110281,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,"since 4 out of 6 files have conflicts and some changes are marked ""not required"" or ""already taken care of"" by @bencoman, I'd say, starting over is easier?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,312,2018-12-01T03:03:01Z,2020-09-11T14:33:43Z,2020-09-11T14:33:43Z,CLOSED,False,54,18,9,https://github.com/bencoman,DO NOT INTEGRATE - FOR DISCUSSION ONLY Minimalistic headless x64 msvc2017,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312,https://github.com/eliotmiranda,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/312#issuecomment-691130830,Ronie submitted a pull request that fixes the build with cygwin for win32 ( #311 ) and I'm curious if any of my changes here are still applicable.   @ronsaldo could you comment on these...,Cool.  Closing...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443449592,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","Hi Ben,
platforms/minheadless/windows/sqPlatformSpecific-Win32.c still has to cover both x64 and x86 so IMO the right way to write this:
    /* Setup the FPU */
    // x64 does not support _MCW_PC or _MCW_IC (https://msdn.microsoft.com/en-us/library/e9b52ceh.aspx)
     _controlfp(FPU_DEFAULT, _MCW_EM | _MCW_RC );


is
    /* Setup the FPU */
    // x64 does not support _MCW_PC or _MCW_IC (https://msdn.microsoft.com/en-us/library/e9b52ceh.aspx)
#if !defined(_MCW_PC)
# define _MCW_PC 0
#endif
#if !defined(_MCW_IC)
# define _MCW_IC 0
#endif 
     _controlfp(FPU_DEFAULT, _MCW_EM | _MCW_RC | _MCW_PC | _MCW_IC);",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/OpenSmalltalk-Bot,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443515695,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","On Sun, 2 Dec 2018 at 03:01, Eliot Miranda ***@***.***> wrote:



 Hi Ben,

 platforms/minheadless/windows/sqPlatformSpecific-Win32.c still has to
cover both x64 and x86 so IMO the right way to write this:

 /* Setup the FPU */
 // x64 does not support _MCW_PC or _MCW_IC (
https://msdn.microsoft.com/en-us/library/e9b52ceh.aspx)
  _controlfp(FPU_DEFAULT, _MCW_EM | _MCW_RC );

 is

 /* Setup the FPU */
 // x64 does not support _MCW_PC or _MCW_IC (

https://msdn.microsoft.com/en-us/library/e9b52ceh.aspx)

 #if !defined(_MCW_PC)
 #define _MCW_PC 0
 #endif

 #if !defined(_MCW_IC)
 #define _MCW_IC 0
 #endif

 _controlfp(FPU_DEFAULT, _MCW_EM | _MCW_RC | _MCW_PC | _MCW_IC);
Good point. I didn't consider that.
But given that _controlfp is called from two locations, I'm not sure where
to put the defines.
* up the top of the c-file
* close to the first call for definition/use locality
* factor both calls out to a function

Also is there any concern about that the possibility of different behaviour
between 32-bit and 64-bit?
I would guess not, but just asking.

Then I got curious what those defs actually were...
[1] https://docs.microsoft.com/en-us/previous-versions/c9676k6h(v=vs.140)
[2]
https://www.intel.com/content/dam/support/us/en/documents/processors/pentium4/sb/25366521.pdf

_MCW_IC
Infinity control [1]
""8.1.6 Infinity Control Flag [2]  The infinity control flag (bit 12 of the
x87 FPU control word) is provided for compatibility with the Intel 287 Math
Coprocessor;
it is not meaningful for later version x87 FPU coprocessors or IA-32
processors.""

So it seems redundant, or maybe I will learn something new today.
Do we expect any modern supported machine to be using a 287 Coprocessor?


_MCW_PC
Precision control [1]
""8.1.5.2 Precision Control Field  [2] The precision-control (PC) field
(bits 8 and 9 of the x87 FPU control word) determines the precision (64,
53, or 24 bits) of floating-point
calculations made by the x87 FPU (see Table 8-2). The ##>>default precision
is double extended precision<<##, which uses the full 64-bit significand
available with the double
extended-precision floating-point format of the x87 FPU data registers.
This setting is best suited for most applications, because it allows
applications to take full advantage
of the maximum precision available with the x87 FPU data registers.""

So do we ever change the FPU away from the default to 53bits or 24bits?
If not, then it seems redundant.
The code example of [1] shows how  _MCW_PC and _PC_24  are used to change
the FPU precision and back.

cheers -ben",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443530325,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","Hi Ben,
put the definitions at the top of the file or at the first occurrence of _controlfp as you see fit.  It does look as if we can ignore _MCW_IC.  _MCW_PC on the other hand is vital.  If the VM called foreign code though the FFI and that foreign code changed the _MCW_PC mode before calling back, unless the callback entry code resets the fp mode back to the default, the VM's floating point results would be incorrect.  Essentially callbacks must reinitialize the processor so that it functions as expected on each callback in case foreign code puts the processor into some other mode.  With simple processors this isn't an issue but with the x86 it is.
An alternative may be to jettison the entire use of _controlfp if we can be convinced that the VM only makes use of SSE instructions to implement floating point.  That's the case with the JIT floating point code.  And we use -SSE3 flags on all compilers I'm aware of.  If we go this route I would still include the _controlfp code, surrounded by #if 0 ... #endif, simply to document the issue.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/bencoman,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443764778,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","Hi Eliot, I think I captured everything discussed.
One extra thing though...
I was wondering that if x64 doesn't support _MCW_RC, then the _PC_53 is irrelevant, thus our 64-bit VM would be using the CPU default 64-bit extended floating point and be different from our 32-bit VM, but then I got this insight...

The CPU hardware default is 64-bit precision mode (80-bit long double); Microsoft expects software to set 53-bit mode before any user mode x87 instructions are reached. Microsoft made a change in responsibility for initializing precision mode in the X64 OS. The X64 OS sets 53-bit mode prior to starting your .exe, where the 32-bit OS expected the program to make that initialization.

If that is how you understand it, I think that explanation could be a useful code comment.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/eliotmiranda,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443877985,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","Hi Ben,
ideally we'd have bit-identical FP on all platforms.  Currently this is only achievable using Andreas Raab's FloatMath plugin, used by Croquet and Terf, and not yet tested in 64-bits.  What that has to say about whether we support the default or 53-bit on x64 I don't know.  i guess we should for now simply support the default m ode.  In any case it's unlikely to make much difference because the computational model yields results being truncated to 53 bits after each operation (i.e. other than in the graphics subsystem, floating point operations are performed on double-precision floats so there's no scope for extended calculations to use 64-bit precision internally.  So feel free to include the above as commentary but I think we want to apply your pull request asap and so we should leave the precision argument for a later day when we have more data (such as a 64-bit Terf to test).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/OpenSmalltalk-Bot,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443886742,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","FloatMathPlugin is based on Sun microsystems fdlibm. This library does not
compile correctly on modern C compiler because it uses pointer aliasing to
access bits of a double as two int32. Nowadays, pointer aliasing is
undefined behavior. The same library was used in java and compiled with
special flags, but this is fragile. It is easy to replace this UB, but that
mean forking this now unmaintained code, unless we find another already
existing fork. No time to search now.

Le lun. 3 déc. 2018 à 22:31, Eliot Miranda <notifications@github.com> a
écrit :
…


 Hi Ben,

 ideally we'd have bit-identical FP on all platforms.  Currently this is only achievable using Andreas Raab's FloatMath plugin, used by Croquet and Terf, and not yet tested in 64-bits.  What that has to say about whether we support the default or 53-bit on x64 I don't know.  i guess we should for now simply support the default m ode.  In any case it's unlikely to make much difference because the computational model yields results being truncated to 53 bits after each operation (i.e. other than in the graphics subsystem, floating point operations are performed on double-precision floats so there's no scope for extended calculations to use 64-bit precision internally.  So feel free to include the above as commentary but I think we want to apply your pull request asap and so we should leave the precision argument for a later day when we have more data (such as a 64-bit Terf to test).

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#313 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AhLyW19NRT5NIHT-ZwfbaMs_Mn160JzRks5u1ZhKgaJpZM4Y84NR>
 .",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/eliotmiranda,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443895753,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","Hi Nicolas,  thanks for the reminder.  The problem is indeed that that plugin is written w.r.t. fdlibm which is effectively obsolete.  However there is an alternative.  See first this for a good overview of the issue:
http://christian-seiler.de/projekte/fpmath/
and then this for a widely used solution:
https://www.mpfr.org
This still presents problems; we'd hav e to modify the JIT to generate analogous code to Gnu's MPFR.  But at least we have a reference implementation against which to test.
We should perhaps take this discussion to a new issue.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/bencoman,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-443900428,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","Okay, its ready to go. Please merge.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,313,2018-12-01T12:45:09Z,2018-12-04T01:27:21Z,2018-12-04T11:27:46Z,MERGED,True,30,9,3,https://github.com/bencoman,Fixes for 64-bit MSVC minheadless build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313,https://github.com/nicolas-cellier-aka-nice,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/313#issuecomment-444067761,"Following on from @ronsaldo's PR #311, these are some additional fixes for 64-bit MSVC build from my minheadless trial (http://forum.world.st/Minheadless-trial-td5082569.html).  We both made some changes around 32/64 bit detection in CMakeLists.txt so that still needs some work. All my other fixes were already covered in PR #311.","mpfr is multiple precision (arbitrary precision if you prefer). IMO it's too much for FloatMathPlugin.
CRLIBM (correctly rounded mathematical libray) could be a good modern alternative to fdlibm (from INRIA too).
CRLIBM is also LGPL
https://hal-ens-lyon.archives-ouvertes.fr/ensl-01529804/file/crlibm.pdf",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.","Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317#issuecomment-445117938,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.","I've rebased this away from my serial-fix-attempt onto the latest HEAD with Eliot's fix.
build.win32x86/pharo.stack.spur/mvm -d succeeded on my machine.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/bencoman,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317#issuecomment-445128164,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.","This is the same error I initially got on my local machine with last week's HEAD.  Then I went back a few dozen commits and that Freetype build worked okay, then when I returned to the HEAD commit, it now worked. Huh!?
No clue here. see... http://forum.world.st/Freetype-ftconfig-h-missing-td5089946.html
-- Build files have been written to: /cygdrive/c/projects/vm/build.win32x86/pharo.cog.spur/build/third-party/freetype-2.9.1/build
make[3]: Entering directory '/cygdrive/c/projects/vm/build.win32x86/pharo.cog.spur/build/third-party/freetype-2.9.1/build'
[100%] Linking C shared library libfreetype.dll
[100%] Built target freetype
[100%] Built target freetype
Install the project...
-- Installing: /cygdrive/c/projects/vm/.thirdparty-cache/windows/i386/include/freetype2/freetype/config/ftheader.h
...etc...
-- Installing: /cygdrive/c/projects/vm/.thirdparty-cache/windows/i386/include/freetype2/ft2build.h
CMake Error at cmake_install.cmake:35 (file):
  file INSTALL cannot find
  ""/cygdrive/c/projects/vm/build.win32x86/pharo.cog.spur/build/third-party/freetype-2.9.1/build/include/freetype/config/ftconfig.h"".
make[1]: *** [Makefile:62: install] Error 1
make[1]: Leaving directory '/cygdrive/c/projects/vm/build.win32x86/pharo.cog.spur/build/third-party/freetype-2.9.1/build'
make: *** [../third-party/Makefile.freetype2:25: /cygdrive/c/projects/vm/.thirdparty-cache/windows/i386/bin/libfreetype.dll] Error 2
Command exited with code 1",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/akgrant43,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317#issuecomment-445141116,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.","Hi Ben,
Are you sure you didn't just go back to using the previous version of freetype (pre 2.9.1)?
If you do have 2.9.1, do you know which commit you went back to?
I'm still not able to build on windows :-(
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/bencoman,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317#issuecomment-445160437,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.","nope. freetype-2.9.1 also fails...
$ git clone --depth 10 https://github.com/OpenSmalltalk/opensmalltalk-vm.git
$ git checkout -b depth10 HEAD~9
$ cd build.win32x86/pharo.cog.spur
To fail faster...
$ vi Makefile  # to ignore the other libraries...
THIRDPARTYLIBS:=freetype2

$ ./mvm -d
file INSTALL cannot find
  ""/home/Ben/Repos/depth10/opensmalltalk-vm/build.win32x86/pharo.cog.spur/builddbg/third-party/freetype-2.9.1/build/include/freetype/config/ftconfig.h"".
make[2]: *** [Makefile:62: install] Error 1
make[2]: Leaving directory '/home/Ben/Repos/depth10/opensmalltalk-vm/build.win32x86/pharo.cog.spur/builddbg/third-party/freetype-2.9.1/build'
make[1]: *** [../third-party/Makefile.freetype2:25: /home/Ben/Repos/depth10/opensmalltalk-vm/.thirdparty-cache/windows/i386/bin/libfreetype.dll] Error 2",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/bencoman,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317#issuecomment-445248739,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.",I opened a new issue #319 for the freetype error introduced two weeks ago.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/eliotmiranda,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317#issuecomment-446067613,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.","Hi Nicolas, the flags are necessary (but one is misnamed).  See platforms/Cross/vm/sqCogStackAlignment.h for use and default definition of STACK_ALIGN_BYTES.  See src/plugins/SqueakFFIPrims/X64Win64FFIPlugin.c for use of ALLOCA_LIES_SO_SETSP_BEFORE_CALL. But ALLOCA_LIES_SO_SETSP_BEFORE_CALL is set up by X64Win64FFIPlugin.c so we don't need it on the command line.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,317,2018-12-06T12:16:52Z,2018-12-30T15:48:38Z,2018-12-30T15:48:38Z,MERGED,True,186,0,8,https://github.com/bencoman,Add stack win32 build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317,https://github.com/bencoman,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/317#issuecomment-447656726,"Commit 1 just copied build.win64x64/pharo.cog.spur to build.win32x86/pharo.cog.spur unchanged so that
Commit 2 would show just the changes made to turn it into a build of the stack vm.
Reviewers: Probably you just want to review Commit 2 rather than the whole PR.","I solved the freetype-2.9.1 build error in issue #319.  It was an upstream problem unrelated to this PR.
Is there anything remaining to prevent this PR being merged?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,318,2018-12-06T16:33:06Z,2018-12-07T04:16:31Z,2018-12-07T04:22:35Z,CLOSED,False,2,1,1,https://github.com/bencoman,Fix compile for Windows serial,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/318,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/318,"Recently platforms/Cross/plugins/SerialPlugin/sqNullSerialPort.c
was copied from platforms/iOS/plugins/SerialPlugin/sqNullSerialPort.c
but ""noErr"" enum from https://opensource.apple.com/source/CarbonHeaders/CarbonHeaders-18.1/MacTypes.h
doesn't exist on Windows.
Change it to a #define.","Recently platforms/Cross/plugins/SerialPlugin/sqNullSerialPort.c
was copied from platforms/iOS/plugins/SerialPlugin/sqNullSerialPort.c
but ""noErr"" enum from https://opensource.apple.com/source/CarbonHeaders/CarbonHeaders-18.1/MacTypes.h
doesn't exist on Windows.
Change it to a #define.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,318,2018-12-06T16:33:06Z,2018-12-07T04:16:31Z,2018-12-07T04:22:35Z,CLOSED,False,2,1,1,https://github.com/bencoman,Fix compile for Windows serial,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/318,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/318#issuecomment-445117556,"Recently platforms/Cross/plugins/SerialPlugin/sqNullSerialPort.c
was copied from platforms/iOS/plugins/SerialPlugin/sqNullSerialPort.c
but ""noErr"" enum from https://opensource.apple.com/source/CarbonHeaders/CarbonHeaders-18.1/MacTypes.h
doesn't exist on Windows.
Change it to a #define.",CANCEL: Eliot solved it another way.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,320,2018-12-11T21:40:59Z,2018-12-12T05:46:15Z,2018-12-12T05:46:45Z,MERGED,True,122,2,9,https://github.com/KenDickey,Aarch64 linux,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/320,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/320,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,320,2018-12-11T21:40:59Z,2018-12-12T05:46:15Z,2018-12-12T05:46:45Z,MERGED,True,122,2,9,https://github.com/KenDickey,Aarch64 linux,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/320,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/320#issuecomment-446470115,,This is fine apart from a small slip in the build directory name.  There should be no x after linux64.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,321,2018-12-14T16:58:12Z,2018-12-15T09:09:57Z,2018-12-16T00:11:31Z,MERGED,True,774,462,8,https://github.com/akgrant43,FileAttributesPlugin 2.0.6,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/321,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/321,"Handle VM restart mid directory iteration
Handle long file names on Windows

Assuming the build succeeds and I don't think of anything else, I'll merge this in the next 48 hours.","Handle VM restart mid directory iteration
Handle long file names on Windows

Assuming the build succeeds and I don't think of anything else, I'll merge this in the next 48 hours.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,321,2018-12-14T16:58:12Z,2018-12-15T09:09:57Z,2018-12-16T00:11:31Z,MERGED,True,774,462,8,https://github.com/akgrant43,FileAttributesPlugin 2.0.6,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/321,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/321#issuecomment-447607424,"Handle VM restart mid directory iteration
Handle long file names on Windows

Assuming the build succeeds and I don't think of anything else, I'll merge this in the next 48 hours.","Hi Alistair,

   you can do better than using malloc & free in primitiveClosedir et al.
If you look at the changes I made in VMMaker.oscog-eem.2490
& VMMaker.oscog-eem.2491 you'll see a simple pattern:

SerialPlugin>>copyPortNameToCString: portName
<returnTypeC: #'char *'>
| port portNameSize |
<inline: #always>
<var: 'port' type: #'char *'>
portNameSize := interpreterProxy slotSizeOf: (portName asOop: String).
port := self alloca: portNameSize + 1.
self memcpy: port _: portName _: portNameSize.
port at: portNameSize put: 0.
^port

This method simply copies a Smalltalk string to a null-terminated C string
via alloca.  If you don't know this, alloca is like malloc but it allocates
on the stack in the current stack frame and so the space it allocates is
automatically freed on return from the function in which alloca is
invoked.  Because the method is marked <inline: #always> it is in lined
into its caller and so the alloca happens in the calling method, e.g.

SerialPlugin>>primitiveSerialPortCloseByName: portName
| port |
self primitive: 'primitiveSerialPortCloseByName'
parameters: #(String).
port := self copyPortNameToCString: portName.
self serialPortCloseByName: port

and there is no need to free anything.

Hence in e.g. primitiveClosedir where you write

primitiveClosedir
""Close the directory stream for dirPointerOop. Answer dirPointerOop on
success.
Raise PrimErrBadArgument if the parameter is not a ByteArray length
size(void *).
If closedir() returns an error raise PrimitiveOSError.""

| dirPointerOop faPathPtr faPath result |
<export: true>
<var: 'faPath' type: #'fapath *'>
<var: 'faPathPtr' type: #'fapathptr *'>

dirPointerOop := interpreterProxy stackValue: 0.
faPathPtr := self cCode: '(fapathptr *)structFromObjectsize(dirPointerOop,
sizeof(fapathptr))'
inSmalltalk: [self structFromObject: dirPointerOop size: self
sizeOfFaPathPtr].
faPathPtr = 0 ifTrue:
[^interpreterProxy primitiveFailFor: PrimErrBadArgument].
(self faValidateSessionId: (self cCode: 'faPathPtr->sessionId' inSmalltalk:
[faPathPtr first])) ifFalse:
[self free: faPathPtr.
^interpreterProxy primitiveFailFor: PrimErrBadArgument].
faPath := self cCode: 'faPathPtr->faPath' inSmalltalk: [faPathPtr second].

result := self faCloseDirectory: faPath.
self faInvalidateSessionId: (self cCode: '&faPathPtr->sessionId'
inSmalltalk: [faPathPtr]).
result = 0 ifFalse:
[^interpreterProxy primitiveFailForOSError: result].
self free: faPathPtr.
self free: faPath.
interpreterProxy pop: 2 thenPush: dirPointerOop

if you implement structFromObject:size: like this:

FileAttributesPlugin>>structFromObject: anObject size: structSize
""Allocate memory of the requiested size and copy the contents of anObject
in to it.
anObject is expected to be bytes, e.g. ByteArray or String.
Use alloca to avoid having to explicitly free memory.""

<returnTypeC: #'void *'>
| buffer |
<inline: #always>

(interpreterProxy stSizeOf: anObject) = structSize ifFalse:
[interpreterProxy primitiveFailFor: PrimErrBadArgument.
^0].
buffer := self alloca: structSize.
buffer = 0
ifTrue: [interpreterProxy primitiveFailFor: PrimErrNoCMemory]
ifFalse:
[self memcpy: buffer
_: (interpreterProxy arrayValueOf: anObject)
_: structSize].
^buffer

you can then write primitiveCloseDir as

FileAttributesPlugin>>primitiveClosedir
""Close the directory stream for dirPointerOop. Answer dirPointerOop on
success.
Raise PrimErrBadArgument if the parameter is not a ByteArray length
size(void *).
If closedir() returns an error raise PrimitiveOSError.""

| dirPointerOop faPathPtr faPath result |
<export: true>
<var: 'faPath' type: #'fapath *'>
<var: 'faPathPtr' type: #'fapathptr *'>

dirPointerOop := interpreterProxy stackValue: 0.
faPathPtr := self structFromObject: dirPointerOop size: (self sizeof:
faPathPtr)].
faPathPtr = 0 ifTrue:
[^interpreterProxy primitiveFailFor: PrimErrBadArgument].
(self faValidateSessionId: (self cCode: 'faPathPtr->sessionId' inSmalltalk:
[faPathPtr first])) ifFalse:
[^interpreterProxy primitiveFailFor: PrimErrBadArgument].
faPath := self cCode: 'faPathPtr->faPath' inSmalltalk: [faPathPtr second].

result := self faCloseDirectory: faPath.
self faInvalidateSessionId: (self cCode: '&faPathPtr->sessionId'
inSmalltalk: [faPathPtr]).
result = 0 ifFalse:
[^interpreterProxy primitiveFailForOSError: result].
self free: faPath.
interpreterProxy pop: 2 thenPush: dirPointerOop

If you would go as far as to make a VMStructType subclass for fapath et al
you could then write it as

FileAttributesPlugin>>primitiveClosedir
""Close the directory stream for dirPointerOop. Answer dirPointerOop on
success.
Raise PrimErrBadArgument if the parameter is not a ByteArray length
size(void *).
If closedir() returns an error raise PrimitiveOSError.""

| dirPointerOop faPathPtr result |
<export: true>
<var: 'faPathPtr' type: #'FAPathptr *'>

dirPointerOop := interpreterProxy stackValue: 0.
faPathPtr := self structFromObject: dirPointerOop size: (self sizeof:
faPathPtr)].
faPathPtr = 0 ifTrue:
[^interpreterProxy primitiveFailFor: PrimErrBadArgument].
(self faValidateSessionId: faPathPtr sessionId) ifFalse:
[^interpreterProxy primitiveFailFor: PrimErrBadArgument].

result := self faCloseDirectory: faPathPtr faPath.
self faInvalidateSessionId: faPathPtr sessionId.
result = 0 ifFalse:
[^interpreterProxy primitiveFailForOSError: result].
self free: faPathPtr faPath.
interpreterProxy pop: 2 thenPush: dirPointerOop

and then as

FileAttributesPlugin>>primitiveClosedir
""Close the directory stream for dirPointerOop. Answer dirPointerOop on
success.
Raise PrimErrBadArgument if the parameter is not a ByteArray length
size(void *).
If closedir() returns an error raise PrimitiveOSError.""

| dirPointerOop faPathPtr result |
<export: true>
<var: 'faPathPtr' type: #'FAPathptr *'>

dirPointerOop := interpreterProxy stackValue: 0.
faPathPtr := self structFromObject: dirPointerOop size: (self sizeof:
faPathPtr)].
(faPathPtr ~= 0
and: [self faValidateSessionId: faPathPtr sessionId]) ifFalse:
[^interpreterProxy primitiveFailFor: PrimErrBadArgument].

result := self faCloseDirectory: faPathPtr faPath.
self faInvalidateSessionId: faPathPtr sessionId.
result = 0 ifFalse:
[^interpreterProxy primitiveFailForOSError: result].
self free: faPathPtr faPath.
interpreterProxy pop: 2 thenPush: dirPointerOop

The only thing that;'s unclear for me at the moment is how the result of
faInvalidateSessionId: gets tested.  result doesn't get set by it.  I
presume it sets primitive failure, but there';s no test for primitive
failure where result is tested (result = 0).

HTH!
…
On Sat, Dec 15, 2018 at 1:10 AM akgrant43 ***@***.***> wrote:
 Merged #321 <#321>
 into Cog.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#321 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/APHa0Kry-Zrt5kUswbgFCps_HW63I6gEks5u5LxogaJpZM4ZT4Mm>
 .


-- 
_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,322,2018-12-17T07:21:32Z,2018-12-17T07:22:34Z,2018-12-17T07:22:34Z,MERGED,True,1,1,1,https://github.com/akgrant43,FileAttributesPlugin 2.0.6,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/322,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/322,Regenerate FileAttributesPlugin with clean VMMaker,Regenerate FileAttributesPlugin with clean VMMaker,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,323,2018-12-19T07:24:33Z,2018-12-19T14:04:46Z,2018-12-19T14:04:46Z,MERGED,True,91,128,1,https://github.com/akgrant43,FileAttributesPlugin 2.0.7,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/323,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/323,"Move some allocations from the heap to the stack.
These allocations where never used outside the context of the allocating
routine, so can be on the stack instead.","Move some allocations from the heap to the stack.
These allocations where never used outside the context of the allocating
routine, so can be on the stack instead.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,325,2018-12-20T13:53:16Z,2018-12-20T17:04:06Z,2018-12-20T17:36:14Z,CLOSED,False,8971912,0,10520,https://github.com/bencoman,Issue #319 - patch broken Freetype 2.9.1 build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release.  Here we cherry pick that commit into a patch file.","The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release.  Here we cherry pick that commit into a patch file.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,325,2018-12-20T13:53:16Z,2018-12-20T17:04:06Z,2018-12-20T17:36:14Z,CLOSED,False,8971912,0,10520,https://github.com/bencoman,Issue #319 - patch broken Freetype 2.9.1 build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325#issuecomment-449013344,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release.  Here we cherry pick that commit into a patch file.","Sorry, I didn't test run installCygwin.bat and appveyor barfed the PR.
I'll force push a fix in a moment.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,325,2018-12-20T13:53:16Z,2018-12-20T17:04:06Z,2018-12-20T17:36:14Z,CLOSED,False,8971912,0,10520,https://github.com/bencoman,Issue #319 - patch broken Freetype 2.9.1 build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325,https://github.com/bencoman,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325#issuecomment-449034969,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release.  Here we cherry pick that commit into a patch file.","Damn. A little more tuning to do. Didn't get this on my local machine...
patch -p1 -d build/third-party < ../../third-party/freetype291.patch
can't find file to patch at input line 9",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,325,2018-12-20T13:53:16Z,2018-12-20T17:04:06Z,2018-12-20T17:36:14Z,CLOSED,False,8971912,0,10520,https://github.com/bencoman,Issue #319 - patch broken Freetype 2.9.1 build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325,https://github.com/bencoman,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325#issuecomment-449037874,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release.  Here we cherry pick that commit into a patch file.",I've temporarily moved pharo.cog.spur to the top of appveyor.yml to help it fail sooner while ironing this out.  appveyor.yml should be reverted before merging.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,325,2018-12-20T13:53:16Z,2018-12-20T17:04:06Z,2018-12-20T17:36:14Z,CLOSED,False,8971912,0,10520,https://github.com/bencoman,Issue #319 - patch broken Freetype 2.9.1 build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325,https://github.com/bencoman,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325#issuecomment-449075852,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release.  Here we cherry pick that commit into a patch file.","@estebanlm sorry I screwed this up trying to speed up cloning with depth=1 and then pushing that.
Its 1:30am and I need to head to be and flying interstate all tomorrow.  I'll pick it up again tomorrow night unless you are in a hurry to do it yourself.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,325,2018-12-20T13:53:16Z,2018-12-20T17:04:06Z,2018-12-20T17:36:14Z,CLOSED,False,8971912,0,10520,https://github.com/bencoman,Issue #319 - patch broken Freetype 2.9.1 build,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325,https://github.com/bencoman,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/325#issuecomment-449077281,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release.  Here we cherry pick that commit into a patch file.","@estebanlm Oh, and the mistake I made was trying to patch in $(THIRDPARTYDIR)
instead of $(FREETYPE2DIR)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,326,2018-12-21T11:14:23Z,2018-12-21T18:00:34Z,2018-12-23T18:44:35Z,MERGED,True,16,2,2,https://github.com/shingarov,Check sanity of curled gzip data,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326,https://github.com/shingarov,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326,"The getGoodSpur*VM.sh scripts assume that the VM mentioned in the
topmost notification, is always there on bintray.  This is not
always the case.  Unfortunately, bintray will not return a 404 code
on a 404 error, but instead give a 200 with garbage data.  While we
can't do anything about that, at least make an attempt to bail if
the file doesn't even look like gzip-compressed data.","The getGoodSpur*VM.sh scripts assume that the VM mentioned in the
topmost notification, is always there on bintray.  This is not
always the case.  Unfortunately, bintray will not return a 404 code
on a 404 error, but instead give a 200 with garbage data.  While we
can't do anything about that, at least make an attempt to bail if
the file doesn't even look like gzip-compressed data.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,326,2018-12-21T11:14:23Z,2018-12-21T18:00:34Z,2018-12-23T18:44:35Z,MERGED,True,16,2,2,https://github.com/shingarov,Check sanity of curled gzip data,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326#issuecomment-449389091,"The getGoodSpur*VM.sh scripts assume that the VM mentioned in the
topmost notification, is always there on bintray.  This is not
always the case.  Unfortunately, bintray will not return a 404 code
on a 404 error, but instead give a 200 with garbage data.  While we
can't do anything about that, at least make an attempt to bail if
the file doesn't even look like gzip-compressed data.","This looks good, however shouldn't it ""exit 1"" on error so the calling script knows not to proceed?
Bonus points :-): It would be really nice if it could retrieve the previous version (but I haven't looked at bintray to see if they is practical).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,326,2018-12-21T11:14:23Z,2018-12-21T18:00:34Z,2018-12-23T18:44:35Z,MERGED,True,16,2,2,https://github.com/shingarov,Check sanity of curled gzip data,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326#issuecomment-449406173,"The getGoodSpur*VM.sh scripts assume that the VM mentioned in the
topmost notification, is always there on bintray.  This is not
always the case.  Unfortunately, bintray will not return a 404 code
on a 404 error, but instead give a 200 with garbage data.  While we
can't do anything about that, at least make an attempt to bail if
the file doesn't even look like gzip-compressed data.","Looks good.  I'll leave it a bit longer in case there is any more feedback and then merge it in.
Thanks,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,326,2018-12-21T11:14:23Z,2018-12-21T18:00:34Z,2018-12-23T18:44:35Z,MERGED,True,16,2,2,https://github.com/shingarov,Check sanity of curled gzip data,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/326#issuecomment-449656209,"The getGoodSpur*VM.sh scripts assume that the VM mentioned in the
topmost notification, is always there on bintray.  This is not
always the case.  Unfortunately, bintray will not return a 404 code
on a 404 error, but instead give a 200 with garbage data.  While we
can't do anything about that, at least make an attempt to bail if
the file doesn't even look like gzip-compressed data.","Hi Boris,  I’m wondering if the right thing to do is to build a vm that includes the processor simulator plugins in the relevant ../build.* directories.  The makefiles are set up to build the processor simulator plugins only if the support libraries (the processor simulator code itself) have been built, so by default the CI does not build them.
I would prefer that we set up a CI to build the processor simulator plugins and download and install these as part of the getGoodSpurVM scripts, but that’s work I haven’t found time for and at least on Mac installing a plugin in the .app will break the signature and provoke a warning on launch.  So building a vm in place, while slow and not yet automated might be the right approach.  It does mean running the conf.COG scripts and make in the relevant build./{bochsx86,bochsx64,gdbarm32} directories, none of which is as smooth as it might be.  What do you think?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,327,2018-12-21T14:31:44Z,2018-12-30T15:44:31Z,2018-12-30T15:44:31Z,MERGED,True,35,4,3,https://github.com/bencoman,Fix Freetype 2.9.1 third-party build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/327,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/327,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release. Here we cherry pick that commit into a patch file.
P.S.  PR #325 was accidentally closed and I can't reopen it, so repeat in this new PR.","The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release. Here we cherry pick that commit into a patch file.
P.S.  PR #325 was accidentally closed and I can't reopen it, so repeat in this new PR.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,327,2018-12-21T14:31:44Z,2018-12-30T15:44:31Z,2018-12-30T15:44:31Z,MERGED,True,35,4,3,https://github.com/bencoman,Fix Freetype 2.9.1 third-party build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/327,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/327#issuecomment-450557046,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release. Here we cherry pick that commit into a patch file.
P.S.  PR #325 was accidentally closed and I can't reopen it, so repeat in this new PR.","@estebanlm, when you are back on board after vacation, this one is ready to go.
Appveyor passed, but also at I did some additional testing switching third-party-caching on and off
at https://ci.appveyor.com/project/bencoman/opensmalltalk-vm/history
between builds 0.0.23.bencoman and 0.0.30.bencoman
The key to a working non-cached build (i.e. a fresh local clone) is this line...
cp libfreetype.dll $(THIRDPARTYLIBDIR)/$(FREETYPE2LIBNAME)

I'm not sure if that is the best way, but was the simplest.  Could you give that a critical review.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,327,2018-12-21T14:31:44Z,2018-12-30T15:44:31Z,2018-12-30T15:44:31Z,MERGED,True,35,4,3,https://github.com/bencoman,Fix Freetype 2.9.1 third-party build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/327,https://github.com/bencoman,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/327#issuecomment-450557354,"The Freetype 2.9.1 ""release"" was broken for CMake builds (at least tested on Windows).
This was fixed two commits later but the maitainers didn't feel it was important enough (??)
to issue another release. Here we cherry pick that commit into a patch file.
P.S.  PR #325 was accidentally closed and I can't reopen it, so repeat in this new PR.","Travis failure seems irrelevant - presumably due to hiccup in external network resource.
36 of 37 Travis jobs succeeded. The one that failed was...
   1590.36  Xcode: xcode7.3 C ARCH=""macos32x86"" FLAVOR=""squeak.stack.spur""
   3699 Tests, 20 Failures, 3 Errors  

All 23 failures were from StringSocketTestCase & SocketStreamTest due to 10 second timeout.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,328,2018-12-21T18:08:07Z,2018-12-21T18:09:43Z,2018-12-21T18:09:43Z,MERGED,True,2,2,2,https://github.com/akgrant43,getGoodSpur[64]VM.sh sort for latest VM,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/328,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/328,"BinTray sorts the notifications page by the notification timestamp, but
this is not always in the same order as the VM timestamp.  Sort the
output before taking the desired entry.
[ci skip]","BinTray sorts the notifications page by the notification timestamp, but
this is not always in the same order as the VM timestamp.  Sort the
output before taking the desired entry.
[ci skip]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,329,2018-12-28T16:53:04Z,2018-12-29T14:12:46Z,2018-12-29T14:12:59Z,MERGED,True,204,216,21,https://github.com/nicolas-cellier-aka-nice,Win64 cleanups,26,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329,"This is essentially sanitizing and cleanups of existing win32 platform code.
There's no new feature or behavior change except this one: path passed to security plugin will be interpreted as UTF-8 encoded on windows VM.
These changes are required before cleaning the contract between image and VM, especially about encoding of various strings passed: they should be encoded in UTF8 which seems best for platform interoperability.
It's a step forward for enabling the -DUNICODE as attempted by Tobias about 2 years ago.
It is also very important to reduce the number of compiler warnings. 9 times out of 10, these warnings are false positive, but the tenth is indicating a true problem that we'd better not ignore. If we let the benign warnings overflow us, then we are depriving ourself of a useful tool.","This is essentially sanitizing and cleanups of existing win32 platform code.
There's no new feature or behavior change except this one: path passed to security plugin will be interpreted as UTF-8 encoded on windows VM.
These changes are required before cleaning the contract between image and VM, especially about encoding of various strings passed: they should be encoded in UTF8 which seems best for platform interoperability.
It's a step forward for enabling the -DUNICODE as attempted by Tobias about 2 years ago.
It is also very important to reduce the number of compiler warnings. 9 times out of 10, these warnings are false positive, but the tenth is indicating a true problem that we'd better not ignore. If we let the benign warnings overflow us, then we are depriving ourself of a useful tool.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,329,2018-12-28T16:53:04Z,2018-12-29T14:12:46Z,2018-12-29T14:12:59Z,MERGED,True,204,216,21,https://github.com/nicolas-cellier-aka-nice,Win64 cleanups,26,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329#issuecomment-450401395,"This is essentially sanitizing and cleanups of existing win32 platform code.
There's no new feature or behavior change except this one: path passed to security plugin will be interpreted as UTF-8 encoded on windows VM.
These changes are required before cleaning the contract between image and VM, especially about encoding of various strings passed: they should be encoded in UTF8 which seems best for platform interoperability.
It's a step forward for enabling the -DUNICODE as attempted by Tobias about 2 years ago.
It is also very important to reduce the number of compiler warnings. 9 times out of 10, these warnings are false positive, but the tenth is indicating a true problem that we'd better not ignore. If we let the benign warnings overflow us, then we are depriving ourself of a useful tool.","I really like this PR.
There's one more ""fundamental"" comment tho:
I'd think that we should not change Windows code to contain any explicit SomFunc…A(…) calls any more.
I'd rather say,

Either do a conversation,
Use a TCHAR variant or,
Explicitly use the SomeFunc…W(…) variant.

PS: I just read the last Windows version not being UNICODE was Windows ME. Everything after that internally is …W in the first place…",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,329,2018-12-28T16:53:04Z,2018-12-29T14:12:46Z,2018-12-29T14:12:59Z,MERGED,True,204,216,21,https://github.com/nicolas-cellier-aka-nice,Win64 cleanups,26,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329#issuecomment-450425978,"This is essentially sanitizing and cleanups of existing win32 platform code.
There's no new feature or behavior change except this one: path passed to security plugin will be interpreted as UTF-8 encoded on windows VM.
These changes are required before cleaning the contract between image and VM, especially about encoding of various strings passed: they should be encoded in UTF8 which seems best for platform interoperability.
It's a step forward for enabling the -DUNICODE as attempted by Tobias about 2 years ago.
It is also very important to reduce the number of compiler warnings. 9 times out of 10, these warnings are false positive, but the tenth is indicating a true problem that we'd better not ignore. If we let the benign warnings overflow us, then we are depriving ourself of a useful tool.","Hi Tobias, about LoadLibraryA, I see nothing in MSDN suggesting that these ASCII versions will be deprecated.
https://docs.microsoft.com/en-us/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya
The purpose of using W variants is to enable usage of internationalized strings, like in window titles, file names, etc... But when we have a simple explicit ASCII string like ""advapi32.dll"", using the W variant brings nothing.
About windowTitle, I can explain more: if you look at https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/476f70605a0352dd7528d251f7403e9233716cdb/platforms/win32/vm/sqWin32Window.c
you'll see this: if(*windowTitle) sprintf(titleString, ""%s"", windowTitle); we first copy the char *windowTitle to the char *titleString. It obviously cannot be UTF16 at this stage, otherwise the copy would be shorten at first ASCII character.
Then titleString is interpreted as UTF8, converted to UTF16 before being displayed as title, line 773:
MultiByteToWideChar(CP_UTF8, 0, titleString, -1, wideTitle, MAX_PATH+20);
SetWindowTextW(stWindow, wideTitle);

This was before I change anything. Also we have this function:
char *ioGetWindowLabel(void) {
  return windowTitle;
}

I think it is for the purpose of communicating the title back to the image. For communicating with the image, we wish using UTF8, so the minimal and simplest change was to just declare windowTitle as char * (which it is now because we can't use -DUNICODE yet), and align the squeak.ini preference to read in UTF16 and convert back to UTF8. You are right, I messed up this part (because I currently compile with -DUNICODE for the purpose of discovering the flaws, when I should rather compile with AND without this option). I will issue another commit and use GetPrivateProfileStringW unconditionnally, which is a lot simpler.
In fact, most of the time, we have to communicate the strings with the image, and for that, we will need to perform UTF8-UTF16 conversions, so compiling with -DUNICODE is not enough and not really a goal per se. Using the generic versions and generic TCHAR *string has only a value if we want to maintain both an ASCII version and a Wide version. But as you said, the ASCII version does not have much interest now, so we could as well directly use W version where we think we need them, or for making the code a bit more uniform (polishing). If it adds un-necessary complexity, I would say just stick to the A version.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,329,2018-12-28T16:53:04Z,2018-12-29T14:12:46Z,2018-12-29T14:12:59Z,MERGED,True,204,216,21,https://github.com/nicolas-cellier-aka-nice,Win64 cleanups,26,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/329#issuecomment-450443177,"This is essentially sanitizing and cleanups of existing win32 platform code.
There's no new feature or behavior change except this one: path passed to security plugin will be interpreted as UTF-8 encoded on windows VM.
These changes are required before cleaning the contract between image and VM, especially about encoding of various strings passed: they should be encoded in UTF8 which seems best for platform interoperability.
It's a step forward for enabling the -DUNICODE as attempted by Tobias about 2 years ago.
It is also very important to reduce the number of compiler warnings. 9 times out of 10, these warnings are false positive, but the tenth is indicating a true problem that we'd better not ignore. If we let the benign warnings overflow us, then we are depriving ourself of a useful tool.","I agree with most of what you said.
I'd rather have consistency when ""conversing"" with the Windows API. I.e. Either TCHAR, Or …A Or …W, but if possible not a mixture, to also in the future understand what we were doing here :)
Apart from that, good work!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,330,2018-12-30T14:44:22Z,2018-12-30T15:51:56Z,2018-12-30T15:52:00Z,MERGED,True,27,25,2,https://github.com/akgrant43,FileAttributesPlugin 2.0.8,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/330,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/330,"Get the plugin simulator working again.
Until the first call to #primitiveFailForOSError:, at which point the
simulator fails (the real plugin works). Still on the ToDo list...","Get the plugin simulator working again.
Until the first call to #primitiveFailForOSError:, at which point the
simulator fails (the real plugin works). Still on the ToDo list...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,330,2018-12-30T14:44:22Z,2018-12-30T15:51:56Z,2018-12-30T15:52:00Z,MERGED,True,27,25,2,https://github.com/akgrant43,FileAttributesPlugin 2.0.8,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/330,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/330#issuecomment-450569320,"Get the plugin simulator working again.
Until the first call to #primitiveFailForOSError:, at which point the
simulator fails (the real plugin works). Still on the ToDo list...","No need to wait full completion of CI, enough versions are already working",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,331,2018-12-31T00:49:45Z,,2020-09-10T18:28:29Z,OPEN,False,55,67,3,https://github.com/bencoman,Be explicit about which test image version - move to CI config [HOLD],2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/331,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/331,First try to see what Travis thinks about these changes.,First try to see what Travis thinks about these changes.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,331,2018-12-31T00:49:45Z,,2020-09-10T18:28:29Z,OPEN,False,55,67,3,https://github.com/bencoman,Be explicit about which test image version - move to CI config [HOLD],2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/331,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/331#issuecomment-453565573,First try to see what Travis thinks about these changes.,HOLD this for the moment.  I'm developing another idea to demonstrate shortly.,True,{'THUMBS_UP': ['https://github.com/fniephaus']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,331,2018-12-31T00:49:45Z,,2020-09-10T18:28:29Z,OPEN,False,55,67,3,https://github.com/bencoman,Be explicit about which test image version - move to CI config [HOLD],2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/331,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/331#issuecomment-690602938,First try to see what Travis thinks about these changes.,@bencoman I think we held for  a moment :),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,332,2018-12-31T17:50:45Z,2019-01-02T14:54:46Z,2019-01-02T14:54:54Z,MERGED,True,565,752,17,https://github.com/nicolas-cellier-aka-nice,Win64 unicode,36,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/332,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/332,We can now at least compile the whole VM and main plugins with -DUNICODE,We can now at least compile the whole VM and main plugins with -DUNICODE,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-450823909,,This is annoying... the build fails in a different plugin every time.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-450825081,,Maybe you should remove -j4 like Ben did.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/OpenSmalltalk-Bot,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-450828732,,"On Wed, 2 Jan 2019 at 18:04, Nicolas Cellier ***@***.***> wrote:
 Maybe you should remove -j4 like Ben did.

Actually I'm curious why we've go the -j4? Maybe it was just to speed local
builds?
There didn't seem to much degradation in build time on Travis when I remove
it.
IIUC, our Travis build runs on a virtual machine with 2 CPUS shared over
five separate Travis jobs running in parallel,
so not much is gained by further ""make""-level parallelization within each
job.

So after further observation of build times, maybe -j4 should be removed
permanently.
Clearly understandable log files seems more important.

cheers -ben",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-450834988,,"Maybe you should remove -j4 like Ben did.

Thanks!

So after further observation of build times, maybe -j4 should be removed permanently.
Clearly understandable log files seems more important.

+1",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-450836433,,"Look:
https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/src/plugins/SqueakFFIPrims/SqueakFFIPrims.c removed the #if defined(__arm__) so as to enable arm64
From my understanding, this is the only macro that enables recognizing arm on gcc
http://infocenter.arm.com/help/topic/com.arm.doc.dui0491i/BABJFEFG.html",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/akgrant43,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-450843406,,Defining ARM32 allows the build to succeed.  It will be tonight before I get a chance to tidy this up and try a build for real.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/nicolas-cellier-aka-nice,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-450877752,,"Fixed in 1c6552d
Note: at least, all travis builds are green
I don't wait for appveyor status because the queue is too deep, but we did not change anything related to windows in latest commits.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,334,2019-01-01T19:22:52Z,2019-01-02T14:32:38Z,2019-01-03T07:33:22Z,CLOSED,False,5,159,3,https://github.com/akgrant43,[IGNORE]  Dummy commit to allow test CI build from known base,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334,https://github.com/akgrant43,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/334#issuecomment-451071733,,"Hi Nicolas & Ben,
Thanks for your assistance with tracking this down and fixing it.
Just FYI: I fired up a Raspberry Pi I have lying around and checked that the new VM will at least start and can run LibC>>system:.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,337,2019-01-02T05:01:21Z,2019-01-02T08:34:28Z,2019-01-02T08:40:06Z,MERGED,True,16,0,1,https://github.com/bencoman,Add pluginreport script [skip ci],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/337,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/337,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,337,2019-01-02T05:01:21Z,2019-01-02T08:34:28Z,2019-01-02T08:40:06Z,MERGED,True,16,0,1,https://github.com/bencoman,Add pluginreport script [skip ci],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/337,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/337#issuecomment-450806291,,"The Travis failure was the existing persistent ARM build.
Also I guess I shouldn't have put the dash in [skip-ci]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,337,2019-01-02T05:01:21Z,2019-01-02T08:34:28Z,2019-01-02T08:40:06Z,MERGED,True,16,0,1,https://github.com/bencoman,Add pluginreport script [skip ci],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/337,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/337#issuecomment-450809496,,"I should also have used [skip travis] for WIN64_UNICODE since it only
modify platforms/win32
https://changelog.travis-ci.com/skip-travis-ci-builds-with-skip-travis-in-commit-message-74620

Le mer. 2 janv. 2019 à 09:18, Ben Coman <notifications@github.com> a écrit :
…
 The Travis failure was the existing persistent ARM build.
 Also I guess I shouldn't have put the dash in [skip-ci]

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#337 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAscIioYpscU6sySV3k4MV47uefMa3eCks5u_Gs4gaJpZM4ZmNdB>
 .",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,338,2019-01-03T08:47:19Z,2019-01-03T13:12:05Z,2019-01-03T13:23:25Z,MERGED,True,114,114,9,https://github.com/nicolas-cellier-aka-nice,Win64 fixes,13,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/338,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/338,"This fixes are mainly

my own failure to respect the invariant imageName and imageNameW must always be synched, writing in imageNameT (the TCHAR* facade) cannot work!
SecurityPlugin broken by merge win minheadless experiments. I agree with the spirit of the changes (UNICODE), but this is unfinished.
a few potential security flaws coming from the past

[skip travis] i don't know if this incantation will work the way i wish... These are platforms/win32 changes only","This fixes are mainly

my own failure to respect the invariant imageName and imageNameW must always be synched, writing in imageNameT (the TCHAR* facade) cannot work!
SecurityPlugin broken by merge win minheadless experiments. I agree with the spirit of the changes (UNICODE), but this is unfinished.
a few potential security flaws coming from the past

[skip travis] i don't know if this incantation will work the way i wish... These are platforms/win32 changes only",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,340,2019-01-03T14:38:19Z,2019-01-03T18:11:12Z,2019-01-03T18:29:40Z,MERGED,True,1,1,1,https://github.com/akgrant43,linux32ARMv6 mvm missing quotes,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340,"build.linux32ARMv6/pharo.cog.spur/build/mvm is missing quotes around a
parameter triggering a syntax error","build.linux32ARMv6/pharo.cog.spur/build/mvm is missing quotes around a
parameter triggering a syntax error",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,340,2019-01-03T14:38:19Z,2019-01-03T18:11:12Z,2019-01-03T18:29:40Z,MERGED,True,1,1,1,https://github.com/akgrant43,linux32ARMv6 mvm missing quotes,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340#issuecomment-451167192,"build.linux32ARMv6/pharo.cog.spur/build/mvm is missing quotes around a
parameter triggering a syntax error",maybe try if [skip appveyor] works...,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,340,2019-01-03T14:38:19Z,2019-01-03T18:11:12Z,2019-01-03T18:29:40Z,MERGED,True,1,1,1,https://github.com/akgrant43,linux32ARMv6 mvm missing quotes,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340#issuecomment-451168248,"build.linux32ARMv6/pharo.cog.spur/build/mvm is missing quotes around a
parameter triggering a syntax error","I thought of that just after I pressed the create PR button :-(
It would be good if there was a way of cancelling the appveyor build (without cancelling the entire PR).
I'll try adding it when I merge, or if another commit is required.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,340,2019-01-03T14:38:19Z,2019-01-03T18:11:12Z,2019-01-03T18:29:40Z,MERGED,True,1,1,1,https://github.com/akgrant43,linux32ARMv6 mvm missing quotes,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340,https://github.com/akgrant43,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/340#issuecomment-451233850,"build.linux32ARMv6/pharo.cog.spur/build/mvm is missing quotes around a
parameter triggering a syntax error","Thanks, Nicolas.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,343,2019-01-04T14:46:40Z,2019-01-05T18:58:08Z,2019-01-05T18:58:09Z,CLOSED,False,8,68,3,https://github.com/akgrant43,openssl: Update from 1.0.2l to 1.0.2q,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/343,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/343,We should be using the latest openssl library to avoid known vulnerabilities.,We should be using the latest openssl library to avoid known vulnerabilities.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,343,2019-01-04T14:46:40Z,2019-01-05T18:58:08Z,2019-01-05T18:58:09Z,CLOSED,False,8,68,3,https://github.com/akgrant43,openssl: Update from 1.0.2l to 1.0.2q,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/343,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/343#issuecomment-451681818,We should be using the latest openssl library to avoid known vulnerabilities.,Recreating without the noise.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,344,2019-01-04T15:47:43Z,2019-01-04T19:40:20Z,2019-01-04T19:40:54Z,MERGED,True,69,19,9,https://github.com/nicolas-cellier-aka-nice,Backport winfix to minheadless,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/344,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/344,"Some of these fixes are necessary for compiling the WIN32/WIN64 minheadless version since my UNICODE clean-up of platforms/win32/plugins (they are shared with minheadless, the compatibility problem is for SecurityPlugin).
Other fixes are good to have.
[skip ci] until we add a minheadless build on the CI...","Some of these fixes are necessary for compiling the WIN32/WIN64 minheadless version since my UNICODE clean-up of platforms/win32/plugins (they are shared with minheadless, the compatibility problem is for SecurityPlugin).
Other fixes are good to have.
[skip ci] until we add a minheadless build on the CI...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,347,2019-01-05T11:02:39Z,2019-01-05T13:24:07Z,2019-01-05T13:24:10Z,MERGED,True,197,187,20,https://github.com/nicolas-cellier-aka-nice,Ascii warn printf,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/347,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/347,Restore the compatibility with minheadless,Restore the compatibility with minheadless,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,348,2019-01-05T18:59:00Z,2019-01-05T19:00:12Z,2019-01-05T19:00:12Z,MERGED,True,4,4,1,https://github.com/akgrant43,openssl: Update from 1.0.2l to 1.0.2q,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/348,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/348,We should be using the latest 1.0.2 openssl library to avoid known vulnerabilities.,We should be using the latest 1.0.2 openssl library to avoid known vulnerabilities.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,349,2019-01-05T19:24:34Z,2019-01-07T06:49:48Z,2019-01-07T06:49:48Z,MERGED,True,5,0,1,https://github.com/akgrant43,.appveyor.yml test - try to add [skip appveyor],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,"Based on appveyor/ci#1865
[skip appveyor]","Based on appveyor/ci#1865
[skip appveyor]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,349,2019-01-05T19:24:34Z,2019-01-07T06:49:48Z,2019-01-07T06:49:48Z,MERGED,True,5,0,1,https://github.com/akgrant43,.appveyor.yml test - try to add [skip appveyor],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349#issuecomment-451684510,"Based on appveyor/ci#1865
[skip appveyor]","Hi @akgrant43,
Have you seen this? https://www.appveyor.com/docs/how-to/filtering-commits/",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,349,2019-01-05T19:24:34Z,2019-01-07T06:49:48Z,2019-01-07T06:49:48Z,MERGED,True,5,0,1,https://github.com/akgrant43,.appveyor.yml test - try to add [skip appveyor],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349#issuecomment-451684903,"Based on appveyor/ci#1865
[skip appveyor]","Hi Fabio,
My understanding with the default commit filter is that it requires the [skip ci] message in the commit title.  Most people don't want the first line of the commit polluted by this type of message, so the idea here is to allow the [skip ci] to be placed anywhere in the commit message (it has it's own drawbacks, see https://help.appveyor.com/discussions/problems/11603-skip-ci-doesnt-work-as-expected for a discussion (thanks to Ben for providing this link).
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,349,2019-01-05T19:24:34Z,2019-01-07T06:49:48Z,2019-01-07T06:49:48Z,MERGED,True,5,0,1,https://github.com/akgrant43,.appveyor.yml test - try to add [skip appveyor],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349#issuecomment-451686698,"Based on appveyor/ci#1865
[skip appveyor]","Interesting... We could be using something like this
only_commits:
    files:
        - *src/
        - platforms/win32/
        - platforms/Cross/
        - build.win*/
        - third-party/",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,349,2019-01-05T19:24:34Z,2019-01-07T06:49:48Z,2019-01-07T06:49:48Z,MERGED,True,5,0,1,https://github.com/akgrant43,.appveyor.yml test - try to add [skip appveyor],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349#issuecomment-451687064,"Based on appveyor/ci#1865
[skip appveyor]","Hi Nicolas,

Interesting... We could be using something like this
only_commits:
    files:
        - *src/
        - platforms/win32/
        - platforms/Cross/
        - build.win*/
        - third-party/


The drawback of this approach is that we identify the VM by the commit id, and this will prevent the same commit id being present on all platforms whenever a change is made that doesn't affect Windows.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,349,2019-01-05T19:24:34Z,2019-01-07T06:49:48Z,2019-01-07T06:49:48Z,MERGED,True,5,0,1,https://github.com/akgrant43,.appveyor.yml test - try to add [skip appveyor],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,https://github.com/fniephaus,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349#issuecomment-451702107,"Based on appveyor/ci#1865
[skip appveyor]","The drawback of this approach is that we identify the VM by the commit id, and this will prevent the same commit id being present on all platforms whenever a change is made that doesn't affect Windows.

Well shouldn't it work that way? I mean, there are other drawbacks of identifying VMs by commit id (e.g. the need for git hooks). More importantly, why rebuild all Linux/macOS VMs when only Windows code was modified? I have never expected bleeding edge ""releases"" on Bintray to be complete, no one really should because they are mainly for development and builds happen to fail from time to time. Stable release builds will still be triggered simultaneously on AppVeyor and Travis. So we should be fine, right?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,349,2019-01-05T19:24:34Z,2019-01-07T06:49:48Z,2019-01-07T06:49:48Z,MERGED,True,5,0,1,https://github.com/akgrant43,.appveyor.yml test - try to add [skip appveyor],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349,https://github.com/akgrant43,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/349#issuecomment-451719955,"Based on appveyor/ci#1865
[skip appveyor]","Well shouldn't it work that way? I mean, there are other drawbacks of identifying VMs by commit id (e.g. the need for git hooks).

I'm not sure.  If we introduced a version number or build number there may still be a need to substitute it in to other files, so there may still be a use for the commit hooks.  And event with the other identifier, I wouldn't want to get rid of the CommitHash - it makes it easy as a developer to find the code.

More importantly, why rebuild all Linux/macOS VMs when only Windows code was modified?

This is a good point, of course.

I have never expected bleeding edge ""releases"" on Bintray to be complete, no one really should because they are mainly for development and builds happen to fail from time to time. Stable release builds will still be triggered simultaneously on AppVeyor and Travis. So we should be fine, right?

Implicit in what you're saying is that someone then manually starts a full build for every release candidate.
So, I'm fine with the change you're proposing, it just requires buy-in from the people that are actually responsible for the releases in the various flavours (and thus are responsible for ensuring a full build for the released VM).
It also doesn't completely remove the usefulness of being able to skip building when desired. :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,350,2019-01-06T07:09:31Z,2019-02-02T08:06:11Z,2019-02-02T08:06:11Z,MERGED,True,36,6,1,https://github.com/akgrant43,CONTRIBUTING.md: Add some style guidelines,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350,[ci skip],[ci skip],True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,350,2019-01-06T07:09:31Z,2019-02-02T08:06:11Z,2019-02-02T08:06:11Z,MERGED,True,36,6,1,https://github.com/akgrant43,CONTRIBUTING.md: Add some style guidelines,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350,https://github.com/akgrant43,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350#issuecomment-455569446,[ci skip],"Hi Fabio & Nicolas,
Thanks for your feedback and my apologies for not responding, I've been caught up with other things the last couple of weeks.  I haven't forgotten and definitely not ignoring this.
Cheers,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,350,2019-01-06T07:09:31Z,2019-02-02T08:06:11Z,2019-02-02T08:06:11Z,MERGED,True,36,6,1,https://github.com/akgrant43,CONTRIBUTING.md: Add some style guidelines,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350#issuecomment-455569816,[ci skip],"No worries at all, there's no rush. Have a great weekend...
Fabio",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,350,2019-01-06T07:09:31Z,2019-02-02T08:06:11Z,2019-02-02T08:06:11Z,MERGED,True,36,6,1,https://github.com/akgrant43,CONTRIBUTING.md: Add some style guidelines,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350,https://github.com/akgrant43,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/350#issuecomment-459945384,[ci skip],"There haven't been any more comments for a couple of weeks.  I'm not particularly happy with the section on tabs vs spaces, however it's always easier to criticise someone else's work than start with a blank slate, so take this as inspiration! :-)
[ci skip]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,351,2019-01-08T13:07:10Z,,2020-09-10T18:27:49Z,OPEN,False,10,34,1,https://github.com/bencoman,Simplify gitignore build directories [skip ci],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/351,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/351,"I noticed that modified Makefiles weren't being pickup up by git status.
It was too tedious trying to fix the existing definitions, so I've condensed them down to 4 lines from 34.
I'm reasonably sure the result is the same, but if I've missed something its low impact, so maybe just integrate first to let everyone suck-n-see.
Doing a git status before each git commit will let you confirm that its working.","I noticed that modified Makefiles weren't being pickup up by git status.
It was too tedious trying to fix the existing definitions, so I've condensed them down to 4 lines from 34.
I'm reasonably sure the result is the same, but if I've missed something its low impact, so maybe just integrate first to let everyone suck-n-see.
Doing a git status before each git commit will let you confirm that its working.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,351,2019-01-08T13:07:10Z,,2020-09-10T18:27:49Z,OPEN,False,10,34,1,https://github.com/bencoman,Simplify gitignore build directories [skip ci],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/351,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/351#issuecomment-452297412,"I noticed that modified Makefiles weren't being pickup up by git status.
It was too tedious trying to fix the existing definitions, so I've condensed them down to 4 lines from 34.
I'm reasonably sure the result is the same, but if I've missed something its low impact, so maybe just integrate first to let everyone suck-n-see.
Doing a git status before each git commit will let you confirm that its working.",Bah! HOLD for a minute,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,351,2019-01-08T13:07:10Z,,2020-09-10T18:27:49Z,OPEN,False,10,34,1,https://github.com/bencoman,Simplify gitignore build directories [skip ci],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/351,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/351#issuecomment-690602557,"I noticed that modified Makefiles weren't being pickup up by git status.
It was too tedious trying to fix the existing definitions, so I've condensed them down to 4 lines from 34.
I'm reasonably sure the result is the same, but if I've missed something its low impact, so maybe just integrate first to let everyone suck-n-see.
Doing a git status before each git commit will let you confirm that its working.",@bencoman Are you interested in reviewing thas since the .gitignore changed?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,352,2019-01-08T13:47:20Z,2019-01-10T09:22:25Z,2019-01-11T10:53:15Z,MERGED,True,6,3,2,https://github.com/guillep,Rename freetype library as expected by cairo in 64bit windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352,https://github.com/guillep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352,"Rename freetype library as expected by cairo in 64bit windows.
This PR only affects pharo builds for windows, and particularly windows 64.","Rename freetype library as expected by cairo in 64bit windows.
This PR only affects pharo builds for windows, and particularly windows 64.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,352,2019-01-08T13:47:20Z,2019-01-10T09:22:25Z,2019-01-11T10:53:15Z,MERGED,True,6,3,2,https://github.com/guillep,Rename freetype library as expected by cairo in 64bit windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352#issuecomment-452423273,"Rename freetype library as expected by cairo in 64bit windows.
This PR only affects pharo builds for windows, and particularly windows 64.","Why the level of indirection?  For example, all the spec files look like
freetype2_spec_download_url:=http://ftp.igh.cnrs.fr/pub/nongnu/freetype/freetype-2.9.1.tar.gz
freetype2_spec_archive_name:=freetype-2.9.1.tar.gz
freetype2_spec_unpack_dir_name:=freetype-2.9.1
freetype2_spec_product_name_macOS:=libfreetype.6.dylib
freetype2_spec_product_name_linux:=
freetype2_spec_product_name_windows:=libfreetype.dll
freetype2_spec_symlinks_macOS:=libfreetype*.dylib
and are included in a Makefile (in this case Makefile.freetype2) in the following style:
include ../../third-party/freetype2.spec
# plugin definitions
FREETYPE2URL:=$(freetype2_spec_download_url)
FREETYPE2LIBNAME:=$(freetype2_spec_product_name_macOS)
FREETYPE2DIR:=$(THIRDPARTYDIR)/$(freetype2_spec_unpack_dir_name)
FREETYPE2ARCHIVE:=$(THIRDPARTYCACHEDIR)/$(freetype2_spec_archive_name)
FREETYPE2LIB:=$(THIRDPARTYINSTALLDIR)/$(FREETYPE2LIBNAME)
FREETYPE2SYMLINKS:=$(freetype2_spec_symlinks_macOS)
Why not just have the spec file read
FREETYPE2URL:=http://ftp.igh.cnrs.fr/pub/nongnu/freetype/freetype-2.9.1.tar.gz
FREETYPE2LIBNAME:=libfreetype.6.dylib
FREETYPE2DIR:=freetype-2.9.1
FREETYPE2ARCHIVE:=freetype-2.9.1.tar.gz
FREETYPE2SYMLINKS:=libfreetype*.dylib
(or better still:
FREETYPE2VER:=freetype-2.9.1
FREETYPE2ARCHIVE:=$(FREETYPE2VER).tar.gz
FREETYPE2URL:=http://ftp.igh.cnrs.fr/pub/nongnu/freetype/$(FREETYPE2ARCHIVE)
FREETYPE2LIBNAME:=libfreetype.6.dylib
FREETYPE2DIR:=$(FREETYPE2VER)
FREETYPE2SYMLINKS:=libfreetype*.dylib
)
and then use make's ability to redefine macros to include the above more simply as:
include ../../third-party/freetype2.spec
# plugin definitions
FREETYPE2DIR:=$(THIRDPARTYDIR)/$(FREETYPE2DIR)
FREETYPE2ARCHIVE:=$(THIRDPARTYCACHEDIR)/$(FREETYPE2ARCHIVE)
FREETYPE2LIB:=$(THIRDPARTYINSTALLDIR)/$(FREETYPE2LIB)
What does the extra level of names buy us?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,352,2019-01-08T13:47:20Z,2019-01-10T09:22:25Z,2019-01-11T10:53:15Z,MERGED,True,6,3,2,https://github.com/guillep,Rename freetype library as expected by cairo in 64bit windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352,https://github.com/guillep,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352#issuecomment-452687693,"Rename freetype library as expected by cairo in 64bit windows.
This PR only affects pharo builds for windows, and particularly windows 64.","I don't know, I just limited myself to edit the existing files respecting the existing structure :)
Probably @estebanlm can answer with more detail?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,352,2019-01-08T13:47:20Z,2019-01-10T09:22:25Z,2019-01-11T10:53:15Z,MERGED,True,6,3,2,https://github.com/guillep,Rename freetype library as expected by cairo in 64bit windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352#issuecomment-452764370,"Rename freetype library as expected by cairo in 64bit windows.
This PR only affects pharo builds for windows, and particularly windows 64.","Currently, this is a pure hack: download the already built DLL instead of building it on the CI.
The extra indirection is because download name does not match install name.
Maybe just merge this now to let pharo make progress and clean later.
The travis failures are unrelated.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,352,2019-01-08T13:47:20Z,2019-01-10T09:22:25Z,2019-01-11T10:53:15Z,MERGED,True,6,3,2,https://github.com/guillep,Rename freetype library as expected by cairo in 64bit windows,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352,https://github.com/estebanlm,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/352#issuecomment-453025398,"Rename freetype library as expected by cairo in 64bit windows.
This PR only affects pharo builds for windows, and particularly windows 64.","as @nicolas-cellier-aka-nice sais, is a hack to allow us to continue working.
some libraries presented problems to build it with the tool chain needed to build the vm. At the end I decided to skip that problem for now (since it was consuming far too much of my time).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,353,2019-01-16T11:14:34Z,2019-01-22T22:23:12Z,2022-04-13T11:43:18Z,MERGED,True,1,1,1,https://github.com/guillep,Patch callback thunkEntry to not optimize,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353,https://github.com/guillep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353,"O2 and O1 compilation produce a segmentation fault due to stack corruption (when debugging we saw some extra pushes from the stack) on callbacks return. This happens on windows 32, when compiling with mingw gcc 7.4.0.
The issue can be reproduced easily by running the Alien qsort example in latest vms in both Pharo and Squeak.
This PR proposes to patch just the thunkEntry function. Not optimizing just that function solves the issue in our environment, though maybe there is a more fine-grained solution. We should still investigate what is the particular optimization that causes the problem.","O2 and O1 compilation produce a segmentation fault due to stack corruption (when debugging we saw some extra pushes from the stack) on callbacks return. This happens on windows 32, when compiling with mingw gcc 7.4.0.
The issue can be reproduced easily by running the Alien qsort example in latest vms in both Pharo and Squeak.
This PR proposes to patch just the thunkEntry function. Not optimizing just that function solves the issue in our environment, though maybe there is a more fine-grained solution. We should still investigate what is the particular optimization that causes the problem.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,353,2019-01-16T11:14:34Z,2019-01-22T22:23:12Z,2022-04-13T11:43:18Z,MERGED,True,1,1,1,https://github.com/guillep,Patch callback thunkEntry to not optimize,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353#issuecomment-455515414,"O2 and O1 compilation produce a segmentation fault due to stack corruption (when debugging we saw some extra pushes from the stack) on callbacks return. This happens on windows 32, when compiling with mingw gcc 7.4.0.
The issue can be reproduced easily by running the Alien qsort example in latest vms in both Pharo and Squeak.
This PR proposes to patch just the thunkEntry function. Not optimizing just that function solves the issue in our environment, though maybe there is a more fine-grained solution. We should still investigate what is the particular optimization that causes the problem.","Sounds good.
Note that Alien exampleCqsort works when VM is compiled with mvm -f and clang...
Just change the default compiler in https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/build.win32x86/common/Makefile.tools
I'm using this version which seems up-to-date on cygwin distrib:

$ i686-w64-mingw32-clang --version
clang version 5.0.1 (tags/RELEASE_501/final)
Target: i686-w64-windows-gnu
Thread model: posix
InstalledDir: /usr/bin",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,353,2019-01-16T11:14:34Z,2019-01-22T22:23:12Z,2022-04-13T11:43:18Z,MERGED,True,1,1,1,https://github.com/guillep,Patch callback thunkEntry to not optimize,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353,https://github.com/marceltaeumel,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353#issuecomment-830607945,"O2 and O1 compilation produce a segmentation fault due to stack corruption (when debugging we saw some extra pushes from the stack) on callbacks return. This happens on windows 32, when compiling with mingw gcc 7.4.0.
The issue can be reproduced easily by running the Alien qsort example in latest vms in both Pharo and Squeak.
This PR proposes to patch just the thunkEntry function. Not optimizing just that function solves the issue in our environment, though maybe there is a more fine-grained solution. We should still investigate what is the particular optimization that causes the problem.","qsort still SEGFAULTs for me when compiled via Cygwin with gcc-Version 10.2.0 (GCC) in production mode (./mvm -f). :-(
When trying to qsort a list of 10 floats, the first callback is fine but the second callback has a different address for the callback context -- which should not happen -- and shows bogus values for the stack arguments. Maybe it is related to some sort of stack optimization?
Works fine with DEBUG build, does also SEGFAULT with ASSERT build.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,353,2019-01-16T11:14:34Z,2019-01-22T22:23:12Z,2022-04-13T11:43:18Z,MERGED,True,1,1,1,https://github.com/guillep,Patch callback thunkEntry to not optimize,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353,https://github.com/marceltaeumel,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/353#issuecomment-1097952470,"O2 and O1 compilation produce a segmentation fault due to stack corruption (when debugging we saw some extra pushes from the stack) on callbacks return. This happens on windows 32, when compiling with mingw gcc 7.4.0.
The issue can be reproduced easily by running the Alien qsort example in latest vms in both Pharo and Squeak.
This PR proposes to patch just the thunkEntry function. Not optimizing just that function solves the issue in our environment, though maybe there is a more fine-grained solution. We should still investigate what is the particular optimization that causes the problem.","I think I will force the optimization to -O0 in ia32abicc.c since we still do not understand why thunkEntry gets messed up like this in 32-bit builds using gcc. But keep it optimized for clang.
#if defined(__GNUC__) && !defined(__clang__)
__attribute__((optimize(""O0"")))
#endif",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,354,2019-01-17T09:39:27Z,2019-01-17T13:47:08Z,2019-01-17T13:51:39Z,MERGED,True,16,6,2,https://github.com/guillep,Ignore missing dylibs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/354,https://github.com/guillep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/354,"The ignore mechanism was only implemented for bundles, but not for dylibs, used only in Pharo builds.
This PR introduces the same mechanism as in bundles for dylibs, both in 32 and 64 bit builds.
This should fix pharo osx builds, with no effects on other platforms or builds.","The ignore mechanism was only implemented for bundles, but not for dylibs, used only in Pharo builds.
This PR introduces the same mechanism as in bundles for dylibs, both in 32 and 64 bit builds.
This should fix pharo osx builds, with no effects on other platforms or builds.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,354,2019-01-17T09:39:27Z,2019-01-17T13:47:08Z,2019-01-17T13:51:39Z,MERGED,True,16,6,2,https://github.com/guillep,Ignore missing dylibs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/354,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/354#issuecomment-455107837,"The ignore mechanism was only implemented for bundles, but not for dylibs, used only in Pharo builds.
This PR introduces the same mechanism as in bundles for dylibs, both in 32 and 64 bit builds.
This should fix pharo osx builds, with no effects on other platforms or builds.",You replaced tabs by spaces. That's not gonna work correctly in a Makefile…,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,354,2019-01-17T09:39:27Z,2019-01-17T13:47:08Z,2019-01-17T13:51:39Z,MERGED,True,16,6,2,https://github.com/guillep,Ignore missing dylibs,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/354,https://github.com/guillep,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/354#issuecomment-455121979,"The ignore mechanism was only implemented for bundles, but not for dylibs, used only in Pharo builds.
This PR introduces the same mechanism as in bundles for dylibs, both in 32 and 64 bit builds.
This should fix pharo osx builds, with no effects on other platforms or builds.","Yes, I realized that ^^
The latest build is green :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,355,2019-01-17T15:10:05Z,2019-01-17T23:23:51Z,2019-01-18T08:36:27Z,MERGED,True,1,1,1,https://github.com/guillep,Fix set icon of window on windows to use wide chars,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/355,https://github.com/guillep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/355,"_waccess expects a wide char string and we are using the utf8 encoded string. Strange this did not make compilation fail.
This was detected by a test in Pharo using the set icon primitive :)","_waccess expects a wide char string and we are using the utf8 encoded string. Strange this did not make compilation fail.
This was detected by a test in Pharo using the set icon primitive :)",True,{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,356,2019-01-21T01:09:36Z,2019-01-21T01:32:30Z,2019-01-21T01:32:55Z,MERGED,True,119,112,10,https://github.com/KenDickey,arm64ffi progress,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/356,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/356,Should have 3 unit test failures..,Should have 3 unit test failures..,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,356,2019-01-21T01:09:36Z,2019-01-21T01:32:30Z,2019-01-21T01:32:55Z,MERGED,True,119,112,10,https://github.com/KenDickey,arm64ffi progress,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/356,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/356#issuecomment-455922912,Should have 3 unit test failures..,"Looks good.  ARM64FFIPlugin.c needs to be regenerated with a clean VMMaker.oscog to avoid having a dirty package.  But we can fix that soon enough.  Ken, you're going to commit those changes to VMMakerInbox right?  Once done I can regenerate ARM64FFIPlugin.c",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,356,2019-01-21T01:09:36Z,2019-01-21T01:32:30Z,2019-01-21T01:32:55Z,MERGED,True,119,112,10,https://github.com/KenDickey,arm64ffi progress,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/356,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/356#issuecomment-455923006,Should have 3 unit test failures..,oops :-(  didn't mean to close.  Sorry for the noise.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,357,2019-01-22T01:32:33Z,2019-01-22T22:20:17Z,2019-01-22T22:20:18Z,MERGED,True,669,2,4,https://github.com/KenDickey,lost?,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/357,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/357,"I did a checkout and tried a build, but 3 files seem to have been lost.
Added & built fine (still fail 3 unit tests).
Huh???
arm64abicc.c
dabusinessARM64.h
dabusinessARM32.h","I did a checkout and tried a build, but 3 files seem to have been lost.
Added & built fine (still fail 3 unit tests).
Huh???
arm64abicc.c
dabusinessARM64.h
dabusinessARM32.h",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,357,2019-01-22T01:32:33Z,2019-01-22T22:20:17Z,2019-01-22T22:20:18Z,MERGED,True,669,2,4,https://github.com/KenDickey,lost?,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/357,https://github.com/KenDickey,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/357#issuecomment-456456799,"I did a checkout and tried a build, but 3 files seem to have been lost.
Added & built fine (still fail 3 unit tests).
Huh???
arm64abicc.c
dabusinessARM64.h
dabusinessARM32.h","Followup: only 1 file needed.  dabusinessARM{32,64}.h split was unneeded.  Just arm64abicc.c with reference to dabusinessARM.y",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,358,2019-01-22T15:27:59Z,2019-01-22T22:21:26Z,2019-01-22T22:21:26Z,MERGED,True,39,18,1,https://github.com/tesonep,Win32 Events when using SDL,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/358,https://github.com/tesonep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/358,"When used with SDL, the events in the main VM windows are not properly handled.
SDL has its own GetMessage / DispatchMessage loop.
The VM implementation was expecting to have a pointer to the message read from GetMessage. Stored in the variable lastMessage.
This variable is Null when the GetMessage is executed by SDL.
So, I have modified the process to recreate the MSG from the information provided by the Window Callback Arguments.","When used with SDL, the events in the main VM windows are not properly handled.
SDL has its own GetMessage / DispatchMessage loop.
The VM implementation was expecting to have a pointer to the message read from GetMessage. Stored in the variable lastMessage.
This variable is Null when the GetMessage is executed by SDL.
So, I have modified the process to recreate the MSG from the information provided by the Window Callback Arguments.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,359,2019-01-23T12:07:32Z,2019-01-23T18:07:43Z,2019-01-23T18:07:43Z,MERGED,True,2,2,1,https://github.com/astares,Use OpenSmalltalk instead of Squeak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/359,https://github.com/astares,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/359,"as it is used for Squeak, Cuis, Pharo, ...","as it is used for Squeak, Cuis, Pharo, ...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,362,2019-01-27T12:14:01Z,2019-01-29T10:02:38Z,2019-01-29T10:02:38Z,MERGED,True,1,18,2,https://github.com/pavel-krivanek,remove emulation of single button mouse on Windows and Linux,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/362,https://github.com/pavel-krivanek,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/362,fixes #361,fixes #361,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,364,2019-01-29T16:36:52Z,2019-01-29T20:34:02Z,2019-01-31T17:49:53Z,MERGED,True,994,0,37,https://github.com/zecke,pharo: Forward the packaging directory from pharo-vm here,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/364,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/364,"Add structure and rules to build a source package for Debian/Ubuntu
and use it for RPM based distributions. A source package can be built
by the Open Build Service (OBS) or by users. It is intended to be
rebuildable by any user.
Next steps are to hook this into the travis-ci build to upload a
new source package on every build into an experimental feed.","Add structure and rules to build a source package for Debian/Ubuntu
and use it for RPM based distributions. A source package can be built
by the Open Build Service (OBS) or by users. It is intended to be
rebuildable by any user.
Next steps are to hook this into the travis-ci build to upload a
new source package on every build into an experimental feed.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,364,2019-01-29T16:36:52Z,2019-01-29T20:34:02Z,2019-01-31T17:49:53Z,MERGED,True,994,0,37,https://github.com/zecke,pharo: Forward the packaging directory from pharo-vm here,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/364,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/364#issuecomment-459182219,"Add structure and rules to build a source package for Debian/Ubuntu
and use it for RPM based distributions. A source package can be built
by the Open Build Service (OBS) or by users. It is intended to be
rebuildable by any user.
Next steps are to hook this into the travis-ci build to upload a
new source package on every build into an experimental feed.","Great initiative. Thanks Holger.
Just curious what the concept is behind having a new top-level directory ""packaging"" rather than a directory under ""deploy/pharo"" ?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,364,2019-01-29T16:36:52Z,2019-01-29T20:34:02Z,2019-01-31T17:49:53Z,MERGED,True,994,0,37,https://github.com/zecke,pharo: Forward the packaging directory from pharo-vm here,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/364,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/364#issuecomment-459439878,"Add structure and rules to build a source package for Debian/Ubuntu
and use it for RPM based distributions. A source package can be built
by the Open Build Service (OBS) or by users. It is intended to be
rebuildable by any user.
Next steps are to hook this into the travis-ci build to upload a
new source package on every build into an experimental feed.",+1 for moving this to deploy/pharo.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,366,2019-02-02T11:34:09Z,2019-02-04T08:06:23Z,2019-02-04T13:36:14Z,MERGED,True,3,60,3,https://github.com/akgrant43,365: Remove PharoV50.sources from linux builds,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/366,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/366,"Pharo linux builds are still including PharoV50.sources, which isn't
used in any currently supported versions.  For Pharo7 and later sources
are generated for each build, so there's no need to ever include
sources.","Pharo linux builds are still including PharoV50.sources, which isn't
used in any currently supported versions.  For Pharo7 and later sources
are generated for each build, so there's no need to ever include
sources.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,367,2019-02-02T12:44:00Z,2019-02-18T07:42:59Z,2019-02-18T07:42:59Z,MERGED,True,4,3,37,https://github.com/zecke,Move the directory into deploy/,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/367,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/367,"No need for another top-level directory. I didn't move it into
deploy/pharo/ as we might want to use some of the same files for
squeak.","No need for another top-level directory. I didn't move it into
deploy/pharo/ as we might want to use some of the same files for
squeak.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,367,2019-02-02T12:44:00Z,2019-02-18T07:42:59Z,2019-02-18T07:42:59Z,MERGED,True,4,3,37,https://github.com/zecke,Move the directory into deploy/,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/367,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/367#issuecomment-459967145,"No need for another top-level directory. I didn't move it into
deploy/pharo/ as we might want to use some of the same files for
squeak.",Thanks! +1 for using all/some of this for Squeak.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,369,2019-02-04T18:29:30Z,2019-02-04T19:37:33Z,2019-02-04T19:37:33Z,MERGED,True,2,2,2,https://github.com/akgrant43,Handle spaces in VM path name,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/369,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/369,"Modify the launch script templates to handle spaces in the VM path name.
dirname takes one or more paths, so if the path has spaces and isn't
quoted it is treated as two paths... not what we want.","Modify the launch script templates to handle spaces in the VM path name.
dirname takes one or more paths, so if the path has spaces and isn't
quoted it is treated as two paths... not what we want.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,370,2019-02-04T20:20:10Z,2019-02-26T13:58:11Z,2019-02-26T13:58:11Z,MERGED,True,660,3,25,https://github.com/KenDickey,ARM64 funs for struct returns,18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,Needed by VMMaker.oscog-KenD.2581,Needed by VMMaker.oscog-KenD.2581,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,370,2019-02-04T20:20:10Z,2019-02-26T13:58:11Z,2019-02-26T13:58:11Z,MERGED,True,660,3,25,https://github.com/KenDickey,ARM64 funs for struct returns,18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,https://github.com/KenDickey,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370#issuecomment-461236955,Needed by VMMaker.oscog-KenD.2581,Added trampoline call for non-register struct returns.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,370,2019-02-04T20:20:10Z,2019-02-26T13:58:11Z,2019-02-26T13:58:11Z,MERGED,True,660,3,25,https://github.com/KenDickey,ARM64 funs for struct returns,18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,https://github.com/KenDickey,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370#issuecomment-461239457,Needed by VMMaker.oscog-KenD.2581,Corresponds to VMMaker.oscog-KenD.2519,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,370,2019-02-04T20:20:10Z,2019-02-26T13:58:11Z,2019-02-26T13:58:11Z,MERGED,True,660,3,25,https://github.com/KenDickey,ARM64 funs for struct returns,18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,https://github.com/KenDickey,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370#issuecomment-461485401,Needed by VMMaker.oscog-KenD.2581,Just added the ARM64FFIPlugin.c generated by VMMaker.  Not essential.  Better if you regenerate from VMMaker.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,370,2019-02-04T20:20:10Z,2019-02-26T13:58:11Z,2019-02-26T13:58:11Z,MERGED,True,660,3,25,https://github.com/KenDickey,ARM64 funs for struct returns,18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,https://github.com/KenDickey,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370#issuecomment-461987307,Needed by VMMaker.oscog-KenD.2581,"Started looking at/for Pharo UnifiedFFI, of course this means I needed an aarch64 Pharo.
First steps.  Alpha.
Many 7.0 core unit tests failing.
tests_Pharo7.0.1_2019-02-08_15-00-32.txt",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,370,2019-02-04T20:20:10Z,2019-02-26T13:58:11Z,2019-02-26T13:58:11Z,MERGED,True,660,3,25,https://github.com/KenDickey,ARM64 funs for struct returns,18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,https://github.com/OpenSmalltalk-Bot,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370#issuecomment-461995029,Needed by VMMaker.oscog-KenD.2581,"That is great to be hear youre looking at that. What platform are you
developing / testing on?
…
On Sat, 9 Feb. 2019, 07:58 Ken Dickey ***@***.*** wrote:


 Started looking at/for Pharo UnifiedFFI, of course this means I needed an
 aarch64 Pharo.
 First steps. Alpha.
 Many 7.0 core unit tests failing.

 tests_Pharo7.0.1_2019-02-08_15-00-32.txt
 <https://github.com/OpenSmalltalk/opensmalltalk-vm/files/2847297/tests_Pharo7.0.1_2019-02-08_15-00-32.txt>

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#370 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AhLyW235plKPXgC6LsiEkEMhNlWbr_F6ks5vLg8lgaJpZM4ah91u>
 .",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,370,2019-02-04T20:20:10Z,2019-02-26T13:58:11Z,2019-02-26T13:58:11Z,MERGED,True,660,3,25,https://github.com/KenDickey,ARM64 funs for struct returns,18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370,https://github.com/OpenSmalltalk-Bot,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/370#issuecomment-461995340,Needed by VMMaker.oscog-KenD.2581,"That is great to be hear youre looking at that. What platform are you
developing / testing on?

Cheers ben
…
On Sat, 9 Feb. 2019, 07:58 Ken Dickey ***@***.*** wrote:


 Started looking at/for Pharo UnifiedFFI, of course this means I needed an
 aarch64 Pharo.
 First steps. Alpha.
 Many 7.0 core unit tests failing.

 tests_Pharo7.0.1_2019-02-08_15-00-32.txt
 <https://github.com/OpenSmalltalk/opensmalltalk-vm/files/2847297/tests_Pharo7.0.1_2019-02-08_15-00-32.txt>

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#370 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AhLyW235plKPXgC6LsiEkEMhNlWbr_F6ks5vLg8lgaJpZM4ah91u>
 .",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,371,2019-02-06T07:31:36Z,2019-02-06T23:51:19Z,2019-02-06T23:51:19Z,MERGED,True,36,15,2,https://github.com/akgrant43,Deleting a directory on a CIFS mounted file system fails,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/371,https://github.com/akgrant43,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/371,See #368,See #368,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/maenu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html",True,"{'THUMBS_UP': ['https://github.com/chisandrei', 'https://github.com/tcj']}"
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/maenu,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468249930,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","I used @autoreleasepool because it is used elsewhere: https://github.com/OpenSmalltalk/opensmalltalk-vm/search?q=autoreleasepool&unscoped_q=autoreleasepool
Having said that, I have virtually no experience with Objective-C and on the coding conventions for the VM, so expert opinions are highly appreciated. Also, we need to make sure that the solution does not have unwanted side-effects. If I am understanding the code correctly, we only have to make sure that alienEventQueue is eventually released.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468250520,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","the @autoreleasepool is ok, leave it there. Just maybe add the other things too :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/maenu,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468252869,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","I do not fully get the idea of AUTORELEASEOBJ and friends, this needs to be tested again. Guille mentioned that [alienEventQueue release] lead to segfaults: http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030607.html. Not sure if this might cause issues.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468253626,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","Yea, don't release manually.
The macros get populated depending on availability of ARC: https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/iOS/vm/SqueakPureObjc_Prefix.pch
So, when ARC is present (it mostly is nowadays), both macros do exaclty nothing.",True,{'THUMBS_UP': ['https://github.com/maenu']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/maenu,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468260164,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","Hm, where @autoreleasepool is used, RELEASEOBJ is mostly not used. Isn't @autoreleasepool enough, even for non-ARC?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/krono,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468260399,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html",Don't know. That's why I tagged @johnmci,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/krono,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468373330,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","Ok, as @krono pointed out
 NSMutableArray *alienEventQueue = AUTORELEASEOBJ([[NSMutableArray alloc] init]);
 with the autoreleasepool.
Do we need the `RELEASEOBJ` in this case?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/OpenSmalltalk-Bot,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468422324,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","No you do not need the RELEASEOBJ

Before ARC there was a lot of work involved in managing memory.
For situation where you allocated or made a copy of an object (various rules).

X = [NSMutableArray alloc] init]);

Then you had to ensure you released the object when you were done via release, or tag it via autorelease

For the case where an object was created but autoreleased you then had to ensure you retain it either via an explicit retain or use of a retain property,

So
saying
self.retainedObject = [NSArray array]; //returns autorelease object
versus
retainedObject = [[NSArray alloc] init];

had very different meaning as the self. would do the assignment and retain, but use without self. would not do the retain, which was not needed as the alloc/init gives a retain count of 1.

Post ARC the compiler is aware of the scope of the life of the object and inserts retain/release as needbe.

That all said what is going on is very subtle. The actual problem is that the
X = [NSMutableArray alloc] init]);
is handled OK by ARC because the object is autoreleased when the method ends.

However the question is well what happens to the auto release pool?
When does that get cleaned up?

That is the actual problem, and adding the auto-release pool cleans up the NSEvents that are creating the majority of the garbage, since there is no autorelease wrapper for the callout from the interp.c code.

There likely are others, mmm ioSetCursor
Maybe there needs to be a general rule that any call outs to obj logic from interp.c have to have an autorelease pool?

....
John M. McIntosh. Corporate Smalltalk Consulting Ltd https://www.linkedin.com/in/smalltalk

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
…
On Thursday, February 28, 2019 9:59 AM, Tobias Pape ***@***.***> wrote:
> Ok, as @krono pointed out
> NSMutableArray *alienEventQueue = AUTORELEASEOBJ([[NSMutableArray alloc] init]);
> with the autoreleasepool.

 Do we need the `RELEASEOBJ` in this case?

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, [view it on GitHub](#373 (comment)), or [mute the thread](https://github.com/notifications/unsubscribe-auth/AhLyW0_DSJBNfTEFzQknE8qU_rqNMnwtks5vSBkBgaJpZM4bWbAu).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/krono,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-468425292,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","John, thank you for clearing up what's going on
BTW: could you open an issue for the autoreleasepool-on-callout?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/johnmci,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-471768037,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html","I will be at Camp Smalltalk at end of March, likely will work on this then.",True,{'THUMBS_UP': ['https://github.com/maenu']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,373,2019-02-28T09:56:07Z,2019-06-28T00:06:50Z,2019-06-28T00:06:50Z,MERGED,True,10,8,1,https://github.com/maenu,fix event memory leak,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373,https://github.com/eliotmiranda,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/373#issuecomment-505997977,"Fixes a memory leak in the macOS event loop, see discussion on mailing list http://lists.squeakfoundation.org/pipermail/vm-dev/2019-February/030595.html",@johnmci can you review this now?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,375,2019-03-06T03:31:32Z,2019-03-19T12:41:26Z,2019-03-19T12:41:26Z,MERGED,True,40,12,3,https://github.com/zecke,packaging: Fully catch-up and get it buildable,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/375,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/375,"Add another editpharoinstall.sh that doesn't try to copy from /usr/src
Match ""Name"" and spec filename for OpenSUSE tumbleweed
Fix the PharoV60.sources dependency. It is still 6 and not 7.","Add another editpharoinstall.sh that doesn't try to copy from /usr/src
Match ""Name"" and spec filename for OpenSUSE tumbleweed
Fix the PharoV60.sources dependency. It is still 6 and not 7.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,375,2019-03-06T03:31:32Z,2019-03-19T12:41:26Z,2019-03-19T12:41:26Z,MERGED,True,40,12,3,https://github.com/zecke,packaging: Fully catch-up and get it buildable,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/375,https://github.com/estebanlm,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/375#issuecomment-474345154,"Add another editpharoinstall.sh that doesn't try to copy from /usr/src
Match ""Name"" and spec filename for OpenSUSE tumbleweed
Fix the PharoV60.sources dependency. It is still 6 and not 7.",issues should not be related,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,377,2019-03-13T02:20:24Z,2019-03-24T22:50:41Z,2019-03-24T22:50:52Z,CLOSED,False,0,0,0,https://github.com/KenDickey,Merge pull request #2 from OpenSmalltalk/Cog,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/377,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/377,Update,Update,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,377,2019-03-13T02:20:24Z,2019-03-24T22:50:41Z,2019-03-24T22:50:52Z,CLOSED,False,0,0,0,https://github.com/KenDickey,Merge pull request #2 from OpenSmalltalk/Cog,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/377,https://github.com/KenDickey,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/377#issuecomment-472254447,Update,Delete this misake,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,377,2019-03-13T02:20:24Z,2019-03-24T22:50:41Z,2019-03-24T22:50:52Z,CLOSED,False,0,0,0,https://github.com/KenDickey,Merge pull request #2 from OpenSmalltalk/Cog,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/377,https://github.com/KenDickey,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/377#issuecomment-476009366,Update,Mistake,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,379,2019-03-17T17:04:41Z,2019-03-19T15:32:39Z,2019-03-19T16:52:24Z,MERGED,True,3,0,1,https://github.com/afelisatti,Add DS_Store to gitignore,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/379,https://github.com/afelisatti,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/379,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,381,2019-03-21T16:24:18Z,2019-03-23T02:41:09Z,2021-07-27T08:27:08Z,MERGED,True,8,15,1,https://github.com/tesonep,Fixing the change to fullscreen,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/381,https://github.com/tesonep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/381,"Changing the implementation of the fullScreen primitive to follow the guidelines here:
https://developer.apple.com/library/archive/documentation/General/Conceptual/MOSXAppProgrammingGuide/FullScreenApp/FullScreenApp.html
It works from the primitive and from the green button in the window","Changing the implementation of the fullScreen primitive to follow the guidelines here:
https://developer.apple.com/library/archive/documentation/General/Conceptual/MOSXAppProgrammingGuide/FullScreenApp/FullScreenApp.html
It works from the primitive and from the green button in the window",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,381,2019-03-21T16:24:18Z,2019-03-23T02:41:09Z,2021-07-27T08:27:08Z,MERGED,True,8,15,1,https://github.com/tesonep,Fixing the change to fullscreen,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/381,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/381#issuecomment-475832420,"Changing the implementation of the fullScreen primitive to follow the guidelines here:
https://developer.apple.com/library/archive/documentation/General/Conceptual/MOSXAppProgrammingGuide/FullScreenApp/FullScreenApp.html
It works from the primitive and from the green button in the window",Appears to work perfectly.  Thanks Pablo!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,381,2019-03-21T16:24:18Z,2019-03-23T02:41:09Z,2021-07-27T08:27:08Z,MERGED,True,8,15,1,https://github.com/tesonep,Fixing the change to fullscreen,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/381,https://github.com/StephanEggermont,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/381#issuecomment-476584530,"Changing the implementation of the fullScreen primitive to follow the guidelines here:
https://developer.apple.com/library/archive/documentation/General/Conceptual/MOSXAppProgrammingGuide/FullScreenApp/FullScreenApp.html
It works from the primitive and from the green button in the window",Should that be fixed in pharo.cog.spur_macos64x64_201903251926?. I still manage to get an unresponsive Pharo image when doing in a playground: Display toggleFullscreen,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.","This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382#issuecomment-476315521,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.","When I try and compile on 64-bit (build.macos64x64/squeak.cog.spur; macOS High Sierra 10.13.6; clang --version: Apple LLVM version 7.0.0 (clang-700.1.76) Target: x86_64-apple-darwin17.7.0) I get the following error message:
../../platforms/iOS/vm/OSX/sqSqueakOSXMetalView.m:79:17: error: ARC forbids Objective-C objects in struct
that line is the ""texture"" declaration in
typedef struct ExtraLayer
{
    id<MTLTexture> texture;
    int x, y;
    int w, h;
} ExtraLayer;",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/maenu,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382#issuecomment-477094965,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.","Not sure if this fits here, but if I download the latest Pharo 7 VM on macOS High Sierra, the VM seems not to start properly, resulting in a black window and:
2019-03-27 11:48:46.282 Pharo[1041:7933912] Pipeline state creation error: Function screenQuadFragmentShader is using language version 2.1 which is incompatible with this OS.

I looked into this a while ago, and there should be some flags to enable Metal 1 compatibility, then we would get at least down to El Capitan support. Adding Metal as required dependency is a non-backwards-compatible change, this should be handled with care (e.g. do we need non-metal builds, archive old non-metal builds for older OSs?).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382#issuecomment-477775045,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.","Hi @maenu,
can you work with @ronsaldo to look at getting down to El Capitan support?  Right now I'm on High Sierra (10.3) and Metal 2 doesn't even work there-on.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/maenu,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382#issuecomment-477949438,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.","I will have a look, maybe @ronsaldo is even at PharoDays next week?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/maenu,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382#issuecomment-482096835,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.","Sorry to revive the merged thread, but what is the state on this?
I just built the macOS 64bit Pharo Cog VM on Sierra, Metal seems to be enabled (-DUSE_METAL=1), and the VM runs my image. But downloading a fresh VM from Pharo downloads gives me 2019-03-27 11:48:46.282 Pharo[1041:7933912] Pipeline state creation error: Function screenQuadFragmentShader is using language version 2.1 which is incompatible with this OS. again.
My current hypothesis is, that the downloaded VM is built on a newer macOS, which removes the compatibility for Sierra. Anybody knows how this happens and how we could trick a newer macOS in building a VM with a El Capitan/Sierra/High Sierra compatibility?
The only thing I found to control compatibility is the -mmacosx-version-min, which is 10.7 in my local build. It looks like there is nothing other than this flag to achieve compatibility, see also https://github.com/gfx-rs/gfx/blob/master/src/backend/metal/build.rs.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/ronsaldo,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382#issuecomment-482122593,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.",@maenu That is interesting. Did you download that VM from bintray? That also looks like an error from the older version.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,382,2019-03-25T04:12:45Z,2019-03-27T18:15:24Z,2019-04-12T07:19:55Z,MERGED,True,2953,1263,32,https://github.com/ronsaldo,"Initial port of the B3DAccelerator plugin, plus extra Metal and rendering clean up",10,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382,https://github.com/maenu,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/382#issuecomment-482466727,"This is the branch with the port of the B3DAccelerator plugin to Metal. Most the examples in Balloon3D are working with this new plugin, after forcing it by modifying:
B3DSceneMorph >> accelerationEnabled
""Return true if hardware acceleration is enabled""
""self accelerationSuspended ifTrue:[^false].
^self valueOfProperty: #accelerationEnabled ifAbsent:[false]""
^ true
Shaders are now compiled in runtime, from source code which is embedded in a C-string.
In addition to these changes, in the last commit I did some refactoring of the Metal VM code. I am copying the message of that commit:

I introduced a hack to select the type of rendering view in runtime.
I am compiling by again the old core graphics based renderer, but this is only used when the -core-graphics option is passed in the command line.
I added dummy headless view, that does not render and stubs most of the event.
I added the -metal, -opengl, and -core-graphics command line options for selecting the rendering backend.
I am testing the Metal implementation by compiling the shader library. If the shader library compilation fails, then Metal will not be used, and instead OpenGL will be used as a fallback, by default.",@ronsaldo I got the VM with curl https://get.pharo.org/64/70+vmLatest | bash. Maybe that is not really the latest VM.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,384,2019-03-27T18:47:29Z,2019-03-27T19:11:35Z,2019-05-11T01:05:25Z,MERGED,True,94,59,3,https://github.com/ronsaldo,Fix compilation problem with ARC in some compilers.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/384,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/384,This fixes a compilation error that is produced by some versions of clang. No ARC pointers in structs are allowed.,This fixes a compilation error that is produced by some versions of clang. No ARC pointers in structs are allowed.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/zecke,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-477472243,,I have difficulties building the VM so this is not tested locally. We need to have a look at iceberg before merging it.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/akgrant43,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-478351308,,"Hi Holger,

I have difficulties building the VM so this is not tested locally. We need to have a look at iceberg before merging it.

I've built this on Ubuntu 16.04 and haven't seen any issues with iceberg (or anything else).
HTH,
Alistair",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/niquis7,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-486225909,,"I'm supporting this PR from the sidelines! :)
I've downloaded the release version of Pharo 7.0 and noticed there were linker resolution errors on my CentOS: libcurl-gnutls.so does not exist on Fedora/CentOS, only the openSSL flavor.
Plus the linker wasn't able to resolve libssl.so.1.0.0 and libcrypto.so.1.0.0.
Both are fixed by this PR (I built it in a Xenial docker container), and the third parties are brought up to date, so really, two birds with one stone.
It seems Travis only has issues building the macOS versions.",True,{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-506004385,,"Hi Holger, I heartily agree with you that this is an important issue.  In talking with @ronsaldo this morning he wrote
""The painful change is building all of these third party dependencies with cmake. And cmake is not suitable at all for doing this. I would like to remove these third party dependencies on the near future, but for doing this we need a server for holding them.""
and I replied
I think the best thing to do is to
a) have a directory in each build.foo* which includes the pre-built support libraries
b) have a separate repository to build the support libraries
c) a workflow where when a new version of a library is needed one checks out repository b) and builds, and then replaces the libraries in a) and commits.  That is what I'm doing with Terf.  See terf-cogvm/platforms/Cross/third-party/lib.macos32x86 & lib.macos64x64.
And he agrees.
So was soon as possible we should split the repository to create e.g. opensmalltalk-third-party and stop rebuilding third-party software unnecessarily.  We do have to decide where the products live on opensmalltalk-vm.  I propose that they live in build.*/third-party/lib",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/fniephaus,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-506021275,,"Sounds reasonable. I'm not sure how big those libraries would be, but if we do decide to commit them to a Git repository alongside instructions to generate them, we could include them as Git submodules. This would allow us to control which version of which library comes with which version of the main repository.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/bencoman,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-506395682,,"On Thu, 27 Jun 2019 at 03:01, Eliot Miranda ***@***.***> wrote:
 @ronsaldo <https://github.com/ronsaldo> this morning wrote:

 ""need a server for holding them.""

Could use github ""releases"" (
https://help.github.com/en/articles/creating-releases)
It won't change too often so doesn't need something high volume like
BinTray.
 and I replied

 I think the best thing to do is to
 a) have a directory in each build.foo* which includes the pre-built
 support libraries
 b) have a separate repository to build the support libraries

Consider having a separate mirror-repo for each third-party library.

Libraries that are github hosted can just be forked.
e.g.  https://github.com/freedesktop/cairo

Libraries that are git based by hosted elsewhere can be cloned and pushed
to opensmalltalk-vm account with full history e.g.
https://www.freetype.org/developer.html

Libraries with a git repo can just be untar'ed locally and pushed via git
to opensmalltalk-vm account
(I only spot checked, but didn't bump into a library not using git)

The thing I'm not clear on is whether there are inter-dependencies between
third-party libraries to be kept in sync.
But anyway this can be done via the library.spec files.

cheers -ben

c) a workflow where when a new version of a library is needed one checks
…
 out repository b) and builds, and then replaces the libraries in a) and
 commits. That is what I'm doing with Terf. See
 terf-cogvm/platforms/Cross/third-party/lib.macos32x86 & lib.macos64x64.

 And he agrees.

 So was soon as possible we should split the repository to create e.g.
 opensmalltalk-third-party and stop rebuilding third-party software
 unnecessarily. We do have to decide where the products live on
 opensmalltalk-vm. I propose that they live in build.*/third-party/lib",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/krono,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-617624338,,Can this be closed in favor of  #482 ?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,386,2019-03-28T06:55:01Z,2020-09-10T18:25:45Z,2020-09-10T18:25:45Z,MERGED,True,26,42,11,https://github.com/zecke,third-party: Stop building/using vulnerable software,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/386#issuecomment-690601266,,🤷,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/tesonep,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/demarey,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-478030721,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","fixes pharo-project/pharo#3036
fixes pharo-project/pharo-launcher#318",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/bencoman,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-478197112,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","Query though... why disable B3DAcceleratorPlugin ?
This is not mentioned anywhere in this PR.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/tesonep,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-478572395,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","It is true, I have reverted that change. Sorry!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/bencoman,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-478629915,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","No worries.  A fresh set of eyes is always useful.
Looks good to me now.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/eliotmiranda,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-506000790,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","Hi Pablo,
why not rewrite the Makefiles to use platforms/iOS/vm/English.lproj/$(SYSTEM)-MainMenu.xib?  This would match $(OSXDIR)/$(SYSTEM)-Info.plist and mean less files had to change.  We'd have to duplicate the MainMenu.xib files, one for Newspeak, Pharo and Squeak, but that's not much, and is in the pattern we already have.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/astares,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-511455990,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey",@tesonep ping,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/nicolas-cellier-aka-nice,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-553545692,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","Agree with Eliot, the changes are good, but would be better factored and generalized if we would

change the common/Makefile.app to include the flavour specific menu platforms/iOS/vm/English.lproj/$(SYSTEM)-MainMenu.xib
and mv platforms/iOS/vm/English.lproj/MainMenu.xib platforms/iOS/vm/English.lproj/Squeak-MainMenu.xib
then cp platforms/iOS/vm/English.lproj/Squeak-MainMenu.xib platforms/iOS/vm/English.lproj/Newspeak-MainMenu.xib",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-690600253,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey",I'm inclined to close. Any takers otherwise?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/astares,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-692525699,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","Still not solved - and customization should be allowed/possible.
Otherwise people will not be able to build labeled products based on the VM.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,388,2019-03-29T14:41:40Z,2020-10-19T20:33:49Z,2021-03-31T09:46:42Z,MERGED,True,2602,9,21,https://github.com/tesonep,Customization for Pharo & About Dialog,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388,https://github.com/demarey,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/388#issuecomment-692535503,"We added customization for Pharo to allow a different menu to be used.


We modified the default action of help menu to open an URL (only for Pharo)


We added a Info.plist property with the string value of the URL (only for Pharo)


And also the about dialog was not receiving the close event, we have fixed that. It was related with the filtering of events for SDL.


@demarey","I did a PR to update this one some days ago: tesonep#1
Waiting for merge",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,390,2019-04-11T12:00:54Z,2020-09-10T18:22:06Z,2020-09-10T18:22:06Z,MERGED,True,1,1,1,https://github.com/maenu,fix libgit2 makefile,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/390,https://github.com/maenu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/390,"I am using MacPort's CMake which works fine, except that it needs a path argument for the libgit2 makefile. Can somebody check if this is compatible with their CMakes?","I am using MacPort's CMake which works fine, except that it needs a path argument for the libgit2 makefile. Can somebody check if this is compatible with their CMakes?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,390,2019-04-11T12:00:54Z,2020-09-10T18:22:06Z,2020-09-10T18:22:06Z,MERGED,True,1,1,1,https://github.com/maenu,fix libgit2 makefile,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/390,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/390#issuecomment-690599233,"I am using MacPort's CMake which works fine, except that it needs a path argument for the libgit2 makefile. Can somebody check if this is compatible with their CMakes?","Since this doesnt do harm, as that part is essentially unused, just",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,393,2019-05-04T00:25:18Z,2019-06-26T18:41:43Z,2019-06-26T18:41:43Z,MERGED,True,2,2,2,https://github.com/zecke,"cli: pollpip consumes an argument, document it",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/393,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/393,"pollpip consumes an argument that was not documented
It specifies to print a '.' while it prints one of '|/-'","pollpip consumes an argument that was not documented
It specifies to print a '.' while it prints one of '|/-'",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,394,2019-05-04T00:26:02Z,2019-05-15T12:33:29Z,2019-05-15T13:57:45Z,MERGED,True,0,5,1,https://github.com/zecke,serial: Remove unused variable holding a default filename,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,394,2019-05-04T00:26:02Z,2019-05-15T12:33:29Z,2019-05-15T13:57:45Z,MERGED,True,0,5,1,https://github.com/zecke,serial: Remove unused variable holding a default filename,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394#issuecomment-492622950,,Its easy to confirm its unused... https://github.com/OpenSmalltalk/opensmalltalk-vm/search?q=serialPortBaseName&unscoped_q=serialPortBaseName,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,394,2019-05-04T00:26:02Z,2019-05-15T12:33:29Z,2019-05-15T13:57:45Z,MERGED,True,0,5,1,https://github.com/zecke,serial: Remove unused variable holding a default filename,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394#issuecomment-492635134,,That code is all over the place… __APPLE  ?!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,394,2019-05-04T00:26:02Z,2019-05-15T12:33:29Z,2019-05-15T13:57:45Z,MERGED,True,0,5,1,https://github.com/zecke,serial: Remove unused variable holding a default filename,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394,https://github.com/bencoman,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394#issuecomment-492644811,,"That code is all over the place… __APPLE ?!
@krono, was that a response for me?  Yes _APPLE is all over,
but serialPortBaseName per url  search?q=serialPortBaseName is not.
Anyway I see you've merged it already. cheers.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,394,2019-05-04T00:26:02Z,2019-05-15T12:33:29Z,2019-05-15T13:57:45Z,MERGED,True,0,5,1,https://github.com/zecke,serial: Remove unused variable holding a default filename,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/394#issuecomment-492666046,,"no, I meant the original one :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,395,2019-05-04T00:32:01Z,2021-01-23T11:20:31Z,2021-01-23T11:20:31Z,CLOSED,False,152,114,18,https://github.com/zecke,Add --quiet option to allow an app to own stdout and stderr,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395,https://github.com/zecke,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395,I envison to have --quiet and --debugoutput FILENAME as options in the future. For an end-user it is difficult to separate application output/error from VM one (e.g. the infamous thread priority warning).,I envison to have --quiet and --debugoutput FILENAME as options in the future. For an end-user it is difficult to separate application output/error from VM one (e.g. the infamous thread priority warning).,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,395,2019-05-04T00:32:01Z,2021-01-23T11:20:31Z,2021-01-23T11:20:31Z,CLOSED,False,152,114,18,https://github.com/zecke,Add --quiet option to allow an app to own stdout and stderr,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395#issuecomment-492658638,I envison to have --quiet and --debugoutput FILENAME as options in the future. For an end-user it is difficult to separate application output/error from VM one (e.g. the infamous thread priority warning).,"An expansive scattering of changes, but pretty much all of them are...
simply refactoring fprintf(stderr,  ==>  fprintf(VM_ERR(),
excepting the following which looks fine...
static FILE *VM_ERR_FILE = NULL;

FILE *VM_ERR(void)
{
	if (!VM_ERR_FILE) {
		VM_ERR_FILE = stderr;
	}
	return VM_ERR_FILE;
}

void sqSetVmErrFile(FILE *file)
{
	VM_ERR_FILE = file;
}



static int vm_parseArgument(int argc, char **argv)
{
   ...
   else if (!strcmp(argv[0], VMOPTION(""quiet""))) {
       sqSetVmErrFile(fopen(""/dev/null"", ""w""));
       return 1;
    }
    return 0; /* option not recognised */
}

(void) printUsage {
        ...
	printf(""  ""VMOPTION(""quiet"")""                don't print debugging messages from the VM\n"");
        ...
}

        

And the following seems correct to align with sq.h...
- extern void addIdleUsecs(long idleUsecs);
+ extern void addIdleUsecs(sqInt idleUsecs);


  
    
      opensmalltalk-vm/platforms/Cross/vm/sq.h
    
    
         Line 180
      in
      83aebb1
    
  
  
    

        
          
           void	addIdleUsecs(sqInt);",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,395,2019-05-04T00:32:01Z,2021-01-23T11:20:31Z,2021-01-23T11:20:31Z,CLOSED,False,152,114,18,https://github.com/zecke,Add --quiet option to allow an app to own stdout and stderr,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395#issuecomment-505997091,I envison to have --quiet and --debugoutput FILENAME as options in the future. For an end-user it is difficult to separate application output/error from VM one (e.g. the infamous thread priority warning).,"Hi Holger,
I don't object to this in principle.  But I question whether it is necessary, except on Windows.  Let me ask you why using the shell to redirect stderr to /dev/null is inadequate.  I would simply do

bin/squeak my image.image 2>/dev/null &
Where does this not work?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,395,2019-05-04T00:32:01Z,2021-01-23T11:20:31Z,2021-01-23T11:20:31Z,CLOSED,False,152,114,18,https://github.com/zecke,Add --quiet option to allow an app to own stdout and stderr,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395,https://github.com/zecke,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395#issuecomment-509581335,I envison to have --quiet and --debugoutput FILENAME as options in the future. For an end-user it is difficult to separate application output/error from VM one (e.g. the infamous thread priority warning).,"It takes the ability from an application author to use stderr. I look at it from the point of view of using the ""ecstatic"" cli application (pillar to html) and the scheduler param warning printed by the VM really takes away from the quality/usefulness of the app (I have neither seen this with python, ruby, java, libstdc++ runtimes).
There are probably more elegant ways to achieve this but wanted to get a discussion started.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,395,2019-05-04T00:32:01Z,2021-01-23T11:20:31Z,2021-01-23T11:20:31Z,CLOSED,False,152,114,18,https://github.com/zecke,Add --quiet option to allow an app to own stdout and stderr,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395,https://github.com/zecke,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/395#issuecomment-765907953,I envison to have --quiet and --debugoutput FILENAME as options in the future. For an end-user it is difficult to separate application output/error from VM one (e.g. the infamous thread priority warning).,Closing as contributing seemed too hard.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,398,2019-06-07T23:10:23Z,2019-06-08T08:12:20Z,2019-06-08T08:13:52Z,MERGED,True,1,0,1,https://github.com/ronsaldo,Add missing code signing command for MacOS Travis,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/398,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/398,"I am adding a missing command that is now required for code signing in Travis. Otherwise, it seem that the build is hanging because it is expecting manual password input.
See https://docs.travis-ci.com/user/common-build-problems/#mac-macos-sierra-1012-code-signing-errors","I am adding a missing command that is now required for code signing in Travis. Otherwise, it seem that the build is hanging because it is expecting manual password input.
See https://docs.travis-ci.com/user/common-build-problems/#mac-macos-sierra-1012-code-signing-errors",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,398,2019-06-07T23:10:23Z,2019-06-08T08:12:20Z,2019-06-08T08:13:52Z,MERGED,True,1,0,1,https://github.com/ronsaldo,Add missing code signing command for MacOS Travis,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/398,https://github.com/ronsaldo,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/398#issuecomment-500067831,"I am adding a missing command that is now required for code signing in Travis. Otherwise, it seem that the build is hanging because it is expecting manual password input.
See https://docs.travis-ci.com/user/common-build-problems/#mac-macos-sierra-1012-code-signing-errors","Hi,
It seems that the PR Travis test is useless for this commit, because of this in the .travis.yml:
yml after_success: (cd deploy && ./filter-exec.sh pack-vm.sh) 
Does it make sense to filter the packing vm step?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,398,2019-06-07T23:10:23Z,2019-06-08T08:12:20Z,2019-06-08T08:13:52Z,MERGED,True,1,0,1,https://github.com/ronsaldo,Add missing code signing command for MacOS Travis,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/398,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/398#issuecomment-500106047,"I am adding a missing command that is now required for code signing in Travis. Otherwise, it seem that the build is hanging because it is expecting manual password input.
See https://docs.travis-ci.com/user/common-build-problems/#mac-macos-sierra-1012-code-signing-errors","@ronsaldo for security reasons, PR builds are not deployed. Let me know if you like permissions to directly push to this repository.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,399,2019-06-08T00:05:02Z,2019-06-08T08:09:34Z,2019-06-08T08:09:55Z,MERGED,True,4,10,1,https://github.com/ronsaldo,Fix 32 bits CI builds because of the Metal integration,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/399,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/399,"This should fix this issue: #385 (comment)
On 32 bits it is possible to link with the Metal libraries, but the MTLCreateSystemDefaultDevice() function always returns nil, at least on my machines.","This should fix this issue: #385 (comment)
On 32 bits it is possible to link with the Metal libraries, but the MTLCreateSystemDefaultDevice() function always returns nil, at least on my machines.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,399,2019-06-08T00:05:02Z,2019-06-08T08:09:34Z,2019-06-08T08:09:55Z,MERGED,True,4,10,1,https://github.com/ronsaldo,Fix 32 bits CI builds because of the Metal integration,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/399,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/399#issuecomment-500105800,"This should fix this issue: #385 (comment)
On 32 bits it is possible to link with the Metal libraries, but the MTLCreateSystemDefaultDevice() function always returns nil, at least on my machines.","Thanks for the fix, @ronsaldo!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/kksubbu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,This patch solves the problem discussed in #396,This patch solves the problem discussed in #396,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400#issuecomment-500221528,This patch solves the problem discussed in #396,"I think we really should wait with this until Eliot's approval. He put the code in there not too long ago, and I'm sure he had good reason to…",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400#issuecomment-501030990,This patch solves the problem discussed in #396,"I agree with Tobias, I suggest that we analyze the failure further, specifically what happens to modifiers state before reverting those lines. I commented Issue #396 with a bit more information about my yet incomplete understanding of the problem.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400#issuecomment-501086795,This patch solves the problem discussed in #396,"On Sun, Jun 9, 2019 at 8:33 AM Tobias Pape ***@***.***> wrote:
 I think we really should wait with this until Eliot's approval. He put the
 code in there not too long ago, and I'm sure he had good reason to…

IIRC, I just rubber stamped someone else's contribution.

_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/akgrant43,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400#issuecomment-501288384,This patch solves the problem discussed in #396,"I think this is the relevant issue: feenkcom/gtoolkit#9 (comment)
See John Brant's comments from 14 December.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/OpenSmalltalk-Bot,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400#issuecomment-501290820,This patch solves the problem discussed in #396,"On Wed, 12 Jun 2019 at 09:40, Eliot Miranda <notifications@github.com>
wrote:
  On Sun, Jun 9, 2019 at 8:33 AM Tobias Pape ***@***.***>
 wrote:

 > I think we really should wait with this until Eliot's approval. He put
 the
 > code in there not too long ago, and I'm sure he had good reason to…
 >

 IIRC, I just rubber stamped someone else's contribution.


Original Author is John Brant 6 months ago...
https://github.com/OpenSmalltalk/opensmalltalk-vm/blame/Cog/platforms/unix/vm-display-X11/sqUnixX11.c#L2065-L2072

Commit...
1b837f9",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/bencoman,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400#issuecomment-501299997,This patch solves the problem discussed in #396,"Good find @akgrant43. Paraphrasing feenkcom/gtoolkit#9...
[Edit: ] Better to record this on the issue... #396 (comment)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,400,2019-06-09T14:47:48Z,2019-06-13T04:45:10Z,2019-06-13T04:45:10Z,CLOSED,False,0,8,1,https://github.com/kksubbu,Elided code that caused ctrl keyboard shortcuts to fail on 32b images,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400,https://github.com/kksubbu,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/400#issuecomment-501546557,This patch solves the problem discussed in #396,John Brant reported that this patch breaks ctrl-a handling in 64b image. So this patch will not solve the issue for all Squeak and Pharo images. I will withdraw the patch. Further discussions can continue in #396,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,403,2019-06-12T21:39:30Z,2019-06-26T18:33:33Z,2019-09-04T16:53:34Z,MERGED,True,4,40,3,https://github.com/nicolas-cellier-aka-nice,Do not convert keyboard event charCode to mac-roman encoding,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/403,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/403,"Fix issue 401
Image do not use such mac-roman encoding for ages.
On the contrary, images have to undo this translation by sending macToSqueak here and there which makes no sense.
We do not need this opensmalltalk VM to be compatible with 15-years old images. Let's clean-up.","Fix issue 401
Image do not use such mac-roman encoding for ages.
On the contrary, images have to undo this translation by sending macToSqueak here and there which makes no sense.
We do not need this opensmalltalk VM to be compatible with 15-years old images. Let's clean-up.",True,"{'THUMBS_UP': ['https://github.com/krono', 'https://github.com/fniephaus']}"
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,404,2019-06-13T03:36:00Z,2019-06-26T18:20:11Z,2019-06-26T18:20:11Z,MERGED,True,3596,401,108,https://github.com/ronsaldo,Fix the minheadless VM for CI,54,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/404,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/404,"This pull request fixes the CMake based build system for the minheadless for building on CI for both, Pharo and Squeak. This also adds two variants of the minheadless vm:

The true headless VM variant.
A vm with SDL2 based display that supports standard Pharo and Squeak images, for 32 and 64 bits in Linux, Mac and Windows.

In addition to these fixes, this PR implements adds an image selection dialog for Mac and Windows when the Minheadless VM can not find automatically an image. This allows double clicking the Minheadless VM.
The automatic image search and detection in the Minheadless vm works like this now:

If there is an image called startup.image in the same folder as the vm executable, (or in the bundle Resources folder in the case of Mac OS X), then this image is executed always.
If there is not an startup.image file in these folder, the vm executable, the Mac Resource folder, or the working directory is searched for all the files with the .image extension. If only one of these files is found, then this image file is executed. If no images are found, or more than one image is found, then image selection dialog is display on Mac and Windows (on Linux, the VM just exits).

This pull request re-implements the thirdparty dependency download, configuration and build using CMake. Only the dependencies that are actually used by a VM variant are built automatically, and it is built only once. AppVeyor and Travis caches are also supported by the CMake based build system. The thirdparty dependencies that are built with CMake are placed under the .thirdparty-cache/cmake folder to avoid clashing and breaking the Makefile based build system. Building thirdparty dependencies with CMake works, but it is messy and hacky (so it is using the Makefiles). The thirdparty dependency build system should be moved into a separate repository. Third party dependencies are quite stable and do not change as frequent as the VM, so it should be easier, cleaner and faster to handle them in a separate repository.","This pull request fixes the CMake based build system for the minheadless for building on CI for both, Pharo and Squeak. This also adds two variants of the minheadless vm:

The true headless VM variant.
A vm with SDL2 based display that supports standard Pharo and Squeak images, for 32 and 64 bits in Linux, Mac and Windows.

In addition to these fixes, this PR implements adds an image selection dialog for Mac and Windows when the Minheadless VM can not find automatically an image. This allows double clicking the Minheadless VM.
The automatic image search and detection in the Minheadless vm works like this now:

If there is an image called startup.image in the same folder as the vm executable, (or in the bundle Resources folder in the case of Mac OS X), then this image is executed always.
If there is not an startup.image file in these folder, the vm executable, the Mac Resource folder, or the working directory is searched for all the files with the .image extension. If only one of these files is found, then this image file is executed. If no images are found, or more than one image is found, then image selection dialog is display on Mac and Windows (on Linux, the VM just exits).

This pull request re-implements the thirdparty dependency download, configuration and build using CMake. Only the dependencies that are actually used by a VM variant are built automatically, and it is built only once. AppVeyor and Travis caches are also supported by the CMake based build system. The thirdparty dependencies that are built with CMake are placed under the .thirdparty-cache/cmake folder to avoid clashing and breaking the Makefile based build system. Building thirdparty dependencies with CMake works, but it is messy and hacky (so it is using the Makefiles). The thirdparty dependency build system should be moved into a separate repository. Third party dependencies are quite stable and do not change as frequent as the VM, so it should be easier, cleaner and faster to handle them in a separate repository.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,404,2019-06-13T03:36:00Z,2019-06-26T18:20:11Z,2019-06-26T18:20:11Z,MERGED,True,3596,401,108,https://github.com/ronsaldo,Fix the minheadless VM for CI,54,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/404,https://github.com/ronsaldo,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/404#issuecomment-501551989,"This pull request fixes the CMake based build system for the minheadless for building on CI for both, Pharo and Squeak. This also adds two variants of the minheadless vm:

The true headless VM variant.
A vm with SDL2 based display that supports standard Pharo and Squeak images, for 32 and 64 bits in Linux, Mac and Windows.

In addition to these fixes, this PR implements adds an image selection dialog for Mac and Windows when the Minheadless VM can not find automatically an image. This allows double clicking the Minheadless VM.
The automatic image search and detection in the Minheadless vm works like this now:

If there is an image called startup.image in the same folder as the vm executable, (or in the bundle Resources folder in the case of Mac OS X), then this image is executed always.
If there is not an startup.image file in these folder, the vm executable, the Mac Resource folder, or the working directory is searched for all the files with the .image extension. If only one of these files is found, then this image file is executed. If no images are found, or more than one image is found, then image selection dialog is display on Mac and Windows (on Linux, the VM just exits).

This pull request re-implements the thirdparty dependency download, configuration and build using CMake. Only the dependencies that are actually used by a VM variant are built automatically, and it is built only once. AppVeyor and Travis caches are also supported by the CMake based build system. The thirdparty dependencies that are built with CMake are placed under the .thirdparty-cache/cmake folder to avoid clashing and breaking the Makefile based build system. Building thirdparty dependencies with CMake works, but it is messy and hacky (so it is using the Makefiles). The thirdparty dependency build system should be moved into a separate repository. Third party dependencies are quite stable and do not change as frequent as the VM, so it should be easier, cleaner and faster to handle them in a separate repository.","Travis errors are not related to this PR:
curl -o ../../.thirdparty-cache/libgit2-v0.25.1.tar.gz -L https://github.com/libgit2/libgit2/archive/v0.25.1.tar.gz
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                             Dload  Upload   Total   Spent    Left  Speed

0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: github.com
make: *** [../../.thirdparty-cache/libgit2-v0.25.1.tar.gz] Error 6",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,406,2019-06-14T02:12:25Z,2019-06-26T18:17:20Z,2019-06-26T18:17:20Z,MERGED,True,143,143,143,https://github.com/tcj,fix issue #405: path to checkSCCSversion was wrong in linux mvm scripts,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/406,https://github.com/tcj,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/406,"for Linux mvm build scripts, changed path to checkSCCSversion to reflect its being three nestings away rather than two","for Linux mvm build scripts, changed path to checkSCCSversion to reflect its being three nestings away rather than two",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,408,2019-06-17T15:04:27Z,,2019-06-30T17:56:25Z,OPEN,False,20,2,2,https://github.com/LeonMatthes,Allow choosing an image via zenity when no arguments are provided,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408,https://github.com/LeonMatthes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408,Makes it much easier to open an image when you have many images to choose from,Makes it much easier to open an image when you have many images to choose from,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,408,2019-06-17T15:04:27Z,,2019-06-30T17:56:25Z,OPEN,False,20,2,2,https://github.com/LeonMatthes,Allow choosing an image via zenity when no arguments are provided,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408#issuecomment-506913304,Makes it much easier to open an image when you have many images to choose from,"Hi Leon,
alas I think this way will fail:

if [ $# -eq 0 && which zenity &>/dev/null ]; then
VM_ARGS=$(zenity --title 'Select an image' --file-selection --file-filter '.image' --file-filter '')
else
VM_ARGS=$@
fi
LD_LIBRARY_PATH=""$PLUGINS:$SVMLLP:${LD_LIBRARY_PATH}"" exec $GDB ""$BIN/squeak"" ""${VM_ARGS}""

That's illustrated by the following test programme:
-----------8<-------------
#!/bin/bash
ARGS=$@
echo; echo A
for a in ""$ARGS""; do
echo $a
done
ARGS=""$@""
echo; echo B
for a in ""$ARGS""; do
echo $a
done
ARGS=""$@""
echo; echo C
for a in $ARGS; do
echo $a
done
ARGS=$@
echo; echo D
for a in $ARGS; do
echo $a
done
-----------8<-------------
If one invokes this with ./testshellargs.sh 'arg one' 'arg two' then the output is
A
arg one arg two
B
arg one arg two
C
arg
one
arg
two
D
arg
one
arg
two
We have to find some way of writing this so that the output is
YES!!!
arg one
arg two",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,408,2019-06-17T15:04:27Z,,2019-06-30T17:56:25Z,OPEN,False,20,2,2,https://github.com/LeonMatthes,Allow choosing an image via zenity when no arguments are provided,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408#issuecomment-506914409,Makes it much easier to open an image when you have many images to choose from,"Hi Leon, the only way I know of doing this is to expand $@ within double quotes at the point of command dispatch.  Here's the illustration of the magic incantation:
ZENITY_ARGS=
echo 'YES!!!'
for a in ${ZENITY_ARGS:=""$@""}; do
echo $a
done
so the right form would be
ZENITY_ARGS=
if [ $# -eq 0 && which zenity &>/dev/null ]; then
ZENITY_ARGS=$(zenity --title 'Select an image' --file-selection --file-filter '.image' --file-filter '')
fi
LD_LIBRARY_PATH=""$PLUGINS:$SVMLLP:${LD_LIBRARY_PATH}"" exec $GDB ""$BIN/squeak"" ${ZENITY_ARGS:=""$@""}",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,408,2019-06-17T15:04:27Z,,2019-06-30T17:56:25Z,OPEN,False,20,2,2,https://github.com/LeonMatthes,Allow choosing an image via zenity when no arguments are provided,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408,https://github.com/OpenSmalltalk-Bot,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/408#issuecomment-507054961,Makes it much easier to open an image when you have many images to choose from,"On 2019-06-28, at 6:05 PM, Eliot Miranda ***@***.***> wrote:

 ZENITY_ARGS=$(zenity --title 'Select an image' --file-selection --file-filter '.image' --file-filter '')
 fi
Just a small flag-waving point - on a Pi, at least, that needs to be --file-selection '*.image' to actually show any image files.

tim
--
tim Rowledge; tim@rowledge.org; http://www.rowledge.org/tim
Plan to be spontaneous tomorrow.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,409,2019-06-22T23:48:21Z,2019-06-23T06:18:48Z,2019-06-23T06:18:48Z,MERGED,True,3,4,1,https://github.com/ronsaldo,"Always call XInitThreads, not only on the Pharo VM. ",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/409,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/409,"Otherwise, a segmentation fault on quit time is produced when using third party libraries such as Vulkan drivers that depend on it.
Here is the stack trace that I obtain:
C stack backtrace & registers:
rax 0x7f9521972810 rbx 0x00000000 rcx 0x013df6a0 rdx 0x7f9522cf3ca0
rdi 0x00000000 rsi 0x00000000 rbp 0x013cd090 rsp 0x7ffd0cf3f3d8
r8  0x00000001 r9  0x00000007 r10 0x00000016 r11 0x00000000
r12 0x013ddfe8 r13 0x00000000 r14 0x00000000 r15 0x00000000
rip 0x7f9522d03960
*/lib/x86_64-linux-gnu/libpthread.so.0(__pthread_mutex_lock+0x0)[0x7f9522d03960]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41b7c3]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41d24e]
/lib/x86_64-linux-gnu/libpthread.so.0(+0x12dd0)[0x7f9522d0bdd0]
/lib/x86_64-linux-gnu/libpthread.so.0(__pthread_mutex_lock+0x0)[0x7f9522d03960]
/usr/lib/x86_64-linux-gnu/libX11.so.6(XrmDestroyDatabase+0x27)[0x7f952198d287]
/usr/lib/x86_64-linux-gnu/libX11.so.6(_XFreeDisplayStructure+0x39b)[0x7f95219747ab]
/usr/lib/x86_64-linux-gnu/libX11.so.6(XCloseDisplay+0xdf)[0x7f9521961c4f]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/vm-display-X11.so(disconnectXDisplay+0xa6)[0x7f9521b28456]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(ioExitWithErrorCode+0x21)[0x41dfe1]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(interpret+0xa1f5)[0x467fd5]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x469216]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(interpret+0x246)[0x45e026]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(main+0x2fa)[0x41acfa]
/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xeb)[0x7f9522b3309b]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41b024]
[0x0]","Otherwise, a segmentation fault on quit time is produced when using third party libraries such as Vulkan drivers that depend on it.
Here is the stack trace that I obtain:
C stack backtrace & registers:
rax 0x7f9521972810 rbx 0x00000000 rcx 0x013df6a0 rdx 0x7f9522cf3ca0
rdi 0x00000000 rsi 0x00000000 rbp 0x013cd090 rsp 0x7ffd0cf3f3d8
r8  0x00000001 r9  0x00000007 r10 0x00000016 r11 0x00000000
r12 0x013ddfe8 r13 0x00000000 r14 0x00000000 r15 0x00000000
rip 0x7f9522d03960
*/lib/x86_64-linux-gnu/libpthread.so.0(__pthread_mutex_lock+0x0)[0x7f9522d03960]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41b7c3]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41d24e]
/lib/x86_64-linux-gnu/libpthread.so.0(+0x12dd0)[0x7f9522d0bdd0]
/lib/x86_64-linux-gnu/libpthread.so.0(__pthread_mutex_lock+0x0)[0x7f9522d03960]
/usr/lib/x86_64-linux-gnu/libX11.so.6(XrmDestroyDatabase+0x27)[0x7f952198d287]
/usr/lib/x86_64-linux-gnu/libX11.so.6(_XFreeDisplayStructure+0x39b)[0x7f95219747ab]
/usr/lib/x86_64-linux-gnu/libX11.so.6(XCloseDisplay+0xdf)[0x7f9521961c4f]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/vm-display-X11.so(disconnectXDisplay+0xa6)[0x7f9521b28456]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(ioExitWithErrorCode+0x21)[0x41dfe1]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(interpret+0xa1f5)[0x467fd5]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x469216]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(interpret+0x246)[0x45e026]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(main+0x2fa)[0x41acfa]
/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xeb)[0x7f9522b3309b]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41b024]
[0x0]",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,409,2019-06-22T23:48:21Z,2019-06-23T06:18:48Z,2019-06-23T06:18:48Z,MERGED,True,3,4,1,https://github.com/ronsaldo,"Always call XInitThreads, not only on the Pharo VM. ",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/409,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/409#issuecomment-504723893,"Otherwise, a segmentation fault on quit time is produced when using third party libraries such as Vulkan drivers that depend on it.
Here is the stack trace that I obtain:
C stack backtrace & registers:
rax 0x7f9521972810 rbx 0x00000000 rcx 0x013df6a0 rdx 0x7f9522cf3ca0
rdi 0x00000000 rsi 0x00000000 rbp 0x013cd090 rsp 0x7ffd0cf3f3d8
r8  0x00000001 r9  0x00000007 r10 0x00000016 r11 0x00000000
r12 0x013ddfe8 r13 0x00000000 r14 0x00000000 r15 0x00000000
rip 0x7f9522d03960
*/lib/x86_64-linux-gnu/libpthread.so.0(__pthread_mutex_lock+0x0)[0x7f9522d03960]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41b7c3]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41d24e]
/lib/x86_64-linux-gnu/libpthread.so.0(+0x12dd0)[0x7f9522d0bdd0]
/lib/x86_64-linux-gnu/libpthread.so.0(__pthread_mutex_lock+0x0)[0x7f9522d03960]
/usr/lib/x86_64-linux-gnu/libX11.so.6(XrmDestroyDatabase+0x27)[0x7f952198d287]
/usr/lib/x86_64-linux-gnu/libX11.so.6(_XFreeDisplayStructure+0x39b)[0x7f95219747ab]
/usr/lib/x86_64-linux-gnu/libX11.so.6(XCloseDisplay+0xdf)[0x7f9521961c4f]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/vm-display-X11.so(disconnectXDisplay+0xa6)[0x7f9521b28456]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(ioExitWithErrorCode+0x21)[0x41dfe1]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(interpret+0xa1f5)[0x467fd5]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x469216]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(interpret+0x246)[0x45e026]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak(main+0x2fa)[0x41acfa]
/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xeb)[0x7f9522b3309b]
sqcogspur64linuxht/lib/squeak/5.0-201906220205/squeak[0x41b024]
[0x0]","Thanks, @ronsaldo!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,410,2019-06-26T16:35:38Z,2019-06-26T18:12:03Z,2019-06-26T18:12:03Z,MERGED,True,12,4,1,https://github.com/ronsaldo,Fix display corruption when using the Metal backend,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/410,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/410,"Fix display corruption when using the Metal backend on a Mac with Retina Display.
The display corruption was caused by a mismatch between the Form resolution, and the texture size. This ended with a wrong stride for the texture data uploads, which translated to graphics glitches.","Fix display corruption when using the Metal backend on a Mac with Retina Display.
The display corruption was caused by a mismatch between the Form resolution, and the texture size. This ended with a wrong stride for the texture data uploads, which translated to graphics glitches.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,411,2019-06-27T00:44:48Z,2019-06-27T19:59:44Z,2019-06-27T19:59:44Z,MERGED,True,5,5,1,https://github.com/ronsaldo,Tag the minheadless builds with CMake with a suffix instead of a prefix.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/411,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/411,"I just noticed that the bintray deployment script has the following regex:
{""includePattern"": ""../products/((newspeak|pharo|squeak).*\.(?:gz|zip|dmg))"", ""uploadPattern"": ""$1""}
Since I was tagging the minheadless with a cmake-minhdls- prefix, they build artifacts are not matching this regex. I prefer changing the prefix with a -cmake-minhdls suffix instead of messing with a potentially dangerous regex.","I just noticed that the bintray deployment script has the following regex:
{""includePattern"": ""../products/((newspeak|pharo|squeak).*\.(?:gz|zip|dmg))"", ""uploadPattern"": ""$1""}
Since I was tagging the minheadless with a cmake-minhdls- prefix, they build artifacts are not matching this regex. I prefer changing the prefix with a -cmake-minhdls suffix instead of messing with a potentially dangerous regex.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,411,2019-06-27T00:44:48Z,2019-06-27T19:59:44Z,2019-06-27T19:59:44Z,MERGED,True,5,5,1,https://github.com/ronsaldo,Tag the minheadless builds with CMake with a suffix instead of a prefix.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/411,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/411#issuecomment-506217616,"I just noticed that the bintray deployment script has the following regex:
{""includePattern"": ""../products/((newspeak|pharo|squeak).*\.(?:gz|zip|dmg))"", ""uploadPattern"": ""$1""}
Since I was tagging the minheadless with a cmake-minhdls- prefix, they build artifacts are not matching this regex. I prefer changing the prefix with a -cmake-minhdls suffix instead of messing with a potentially dangerous regex.",+1 for consistency,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,412,2019-07-14T18:35:18Z,2019-08-20T21:48:03Z,2019-08-20T21:48:03Z,MERGED,True,2,1,2,https://github.com/aletg,Creation script fixes,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/412,https://github.com/aletg,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/412,Two little fixes for spur-vmmaker image creation scripts.,Two little fixes for spur-vmmaker image creation scripts.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,412,2019-07-14T18:35:18Z,2019-08-20T21:48:03Z,2019-08-20T21:48:03Z,MERGED,True,2,1,2,https://github.com/aletg,Creation script fixes,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/412,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/412#issuecomment-523208283,Two little fixes for spur-vmmaker image creation scripts.,"Sounds good, but would merit a [skip ci] or [ci skip] in commit message to avoid starting a new build",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419#issuecomment-523765016,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,Please explain.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/ronsaldo,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419#issuecomment-523828645,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,"On the minheadless VM that is built using cmake, the add_vm_plugin_sources cmake macro requires specifying the the plugin sources explicitly, which is omitting the src/plugins/SqueakSSL/SqueakSSL.c in the compilation of the plugin. By using the other macro (add_vm_plugin_auto), the platform specific files are automatically found with a glob pattern. This is a mistake that I introduced myself. This problem can be reproduced in Pharo using the minheadless vm of this repository on OS X with the following script:
´´´smalltalk
url := 'https://google.com' asZnUrl.
ZnClient new
url: url;
get;
response
´´´
CI errors on travis are not related to this PR.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419#issuecomment-523851929,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,"Ok, but then I don't understand why Mac needs the explicit ${SqueakSSL_Sources}. Apparently, Windows and Unix don't, but also have such specific sources.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/ronsaldo,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419#issuecomment-523855268,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,"In the case of the minheadless VM for OS X, we are treating the VM as it were an unix since we are removing all of the platform specific windowing code in this VM variant. For this reason, in the cases where OS X is different than another unix, the plugin code has to be added manually.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/ronsaldo,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419#issuecomment-523855388,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,"In the case of the minheadless VM for OS X, we are treating the VM as it were an unix since we are removing all of the platform specific windowing code in this VM variant. For this reason, in the cases where OS X is different than another unix, the plugin code has to be added manually.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/fniephaus,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419#issuecomment-523877100,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,Side note: I would've liked to see the explanation to be part of the commit message. It'll be rather hard to find this discussion if we need to in the future. But it's not too late: we can still add the info to the merge commit.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,419,2019-08-21T23:43:06Z,2019-08-31T08:50:52Z,2019-08-31T08:50:52Z,MERGED,True,5,1,1,https://github.com/ronsaldo,Minheadless SqueakSSL plugin compilation bug fix,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419,https://github.com/OpenSmalltalk-Bot,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/419#issuecomment-523996777,I fixed a mistake in the compilation of the SqueakSSL plugin in the minheadless VM for Mac.,"On 2019-08-22, at 5:07 AM, Fabio Niephaus ***@***.***> wrote:

 Side note: I would've liked to see the explanation to be part of the commit message. It'll be rather hard to find this discussion if we need to in the future. But it's not too late: we can still add the info to the merge commit.
Generically we should include actually meaningful comments and explanations to every change, vm or image. But we don't. This makes me sad.


tim
--
tim Rowledge; tim@rowledge.org; http://www.rowledge.org/tim
Useful random insult:- Runs squares around the competition.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,422,2019-08-31T08:46:52Z,2019-09-02T19:27:25Z,2019-09-02T19:27:37Z,MERGED,True,1550,3,9,https://github.com/nicolas-cellier-aka-nice,hack to restore B3DAcceleratorPlugin on macos32x86,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/422,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/422,"This is a temporary hack because MacOS32 is going away soon anyway
It restore the files from 5a38b34
in platforms/iOS/plugins/B3DAcceleratorPlugin32
and hack the build.macos32x86 makefiles to use that
NOTE: the CI fails with a Newspeak-64 segfault during tests, but it can't be related to macosx32 B3DAcceleratorPlugin fix obviously...","This is a temporary hack because MacOS32 is going away soon anyway
It restore the files from 5a38b34
in platforms/iOS/plugins/B3DAcceleratorPlugin32
and hack the build.macos32x86 makefiles to use that
NOTE: the CI fails with a Newspeak-64 segfault during tests, but it can't be related to macosx32 B3DAcceleratorPlugin fix obviously...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,424,2019-09-03T14:01:19Z,2019-09-04T16:51:32Z,2019-09-18T03:36:05Z,MERGED,True,80,3,5,https://github.com/nicolas-cellier-aka-nice,Restore support for large cursor on linux X11 VM,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,"Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev","Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,424,2019-09-03T14:01:19Z,2019-09-04T16:51:32Z,2019-09-18T03:36:05Z,MERGED,True,80,3,5,https://github.com/nicolas-cellier-aka-nice,Restore support for large cursor on linux X11 VM,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424#issuecomment-527472610,"Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev","Could someone fluent in autotools double check this
It worked for me, but I'm very unsure.
Should I commit the generated aclocal.m4 config.h.in and configure files?
I presume so...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,424,2019-09-03T14:01:19Z,2019-09-04T16:51:32Z,2019-09-18T03:36:05Z,MERGED,True,80,3,5,https://github.com/nicolas-cellier-aka-nice,Restore support for large cursor on linux X11 VM,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,https://github.com/OpenSmalltalk-Bot,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424#issuecomment-527701698,"Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev","On Tue, Sep 03, 2019 at 07:02:56AM -0700, Nicolas Cellier wrote:

 Could someone fluent in autotools double check this
 It worked for me, but I'm very unsure.

 Should I commit the generated aclocal.m4 config.h.in and configure files?
 I presume so...

I am not fluent in autotools, but if it generates the expected #define in
config.h and if it results in a VM with large cursor support, that means
that both the configuration for compiling and the linker options to include
the necessary header are working as expected. Sorry I cannot do a better
job of confirming, but if that is what you see, then yes you should commit
the generated aclocal.m4 and config.h.in files.

Dave",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,424,2019-09-03T14:01:19Z,2019-09-04T16:51:32Z,2019-09-18T03:36:05Z,MERGED,True,80,3,5,https://github.com/nicolas-cellier-aka-nice,Restore support for large cursor on linux X11 VM,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424#issuecomment-527810495,"Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev","I committed the generated configure. Of course it works for me, the question is if it works for everyone.
I have a doubt, it seems that I set the -DHAVE_LIBXRENDER define if I find the header,
then check whether the library libXrender.so is required or not (and add it to LIBS if required).
That does not cover the case when header would be present, but the library would be required AND absent. Should we cover that case?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,424,2019-09-03T14:01:19Z,2019-09-04T16:51:32Z,2019-09-18T03:36:05Z,MERGED,True,80,3,5,https://github.com/nicolas-cellier-aka-nice,Restore support for large cursor on linux X11 VM,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,https://github.com/OpenSmalltalk-Bot,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424#issuecomment-528158647,"Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev","On Wed, Sep 04, 2019 at 01:59:21AM -0700, Nicolas Cellier wrote:

 I committed the generated configure.
 I have a doubt, it seems that I set the `-DHAVE_LIBXRENDER` define if I find the header,
 then check whether the library libXrender.so is required or not (and add it to `LIBS` if required).

 That does not cover the case when header would be present, but the library would be required AND absent. Should we cover that case?

For the case of a VM compiled with HAVE_LIBXRENDER, but running on a
machine that does not have the xrender library runtime, this could be
a problem.

In practice, I expect that any Linux machine with X11 will also provide
the runtime library for xrender, but that is just a guess.

To test this, I started with an interpreter VM compiled with Xrender
development libraries, and with large cursor support working. I then
removed (renamed) the following runtime libraries:

	/usr/lib/x86_64-linux-gnu/libXrender.a
	/usr/lib//x86_64-linux-gnu/libXrender.so
	/usr/lib/x86_64-linux-gnu/libXrender.so.1
	/usr/lib//x86_64-linux-gnu/libXrender.so.1.3.0

Result: The VM fails to run, and crashes:

	lewis@lewis-Gazelle-Pro:~/squeak/Squeak4.6$ squeak squeak.175
	libXrender.so.1: cannot open shared object file: No such file or directory
	could not find display driver vm-display-X11; either:
	  - check that /usr/local/lib/squeak/4.16.6-3772/vm-display-X11.so exists, or
	  - use the '-plugins <path>' option to tell me where it is, or
	  - remove DISPLAY from your environment.
	Aborted (core dumped)

Conclusion: If a VM with Xrender and large cursor support is run on
a machine that does not have the Xrender runtime libraries, it probably
will not work.

In my opinion, this is not a likely failure mode. I would expect that
machines that use X11 will also provide Xrender and other extensions
by default. But it could happen, so it is worth noting the risk.

Dave",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,424,2019-09-03T14:01:19Z,2019-09-04T16:51:32Z,2019-09-18T03:36:05Z,MERGED,True,80,3,5,https://github.com/nicolas-cellier-aka-nice,Restore support for large cursor on linux X11 VM,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424#issuecomment-528205868,"Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev","Ok, not good. That means that the VM shall attempt to link it dynamically with dlopen, and issue a message on console if that fails... on ubuntu, libXrender is an optional package, i guess similar in other distros...
Or we could document the requirement and add the package dependency in squeak/pharo/cuis/newspeak packages...
Or we could attempt to link statically, which would be somehow simple and robust, but not secure (no update).
Or we could find another solution for displaying larger cursors. How do others apps handle those highres Screens?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,424,2019-09-03T14:01:19Z,2019-09-04T16:51:32Z,2019-09-18T03:36:05Z,MERGED,True,80,3,5,https://github.com/nicolas-cellier-aka-nice,Restore support for large cursor on linux X11 VM,2,['Linux'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424,https://github.com/dtlewis290,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/424#issuecomment-532504303,"Large cursor support is present but optional on X11
It is triggered by compiler define HAVE_LIBXRENDER
It depends on availability of Xrender library which is an optional X extension
Try to test presence of header and library in configure macro
Note that it is also necessary to install the proper package
e.g. on debian flavours
sudo apt-get install libxrender-dev","The only real problem is that the VM is not issuing an understandable error message in the case of a missing runtime library. For example, if the VM module-display-X11 module requires runtime library libXrender, and if libXrender.so is not installed, then a message like this would be sufficient:
$ squeak myImage
failed loading module /usr/local/lib/squeak/4.16.6-3772/so.vm-display-X11 due to libXrender.so.1: cannot open shared object file: No such file or directory
could not find display driver vm-display-X11; either:

check that /usr/local/lib/squeak/4.16.6-3772/vm-display-X11.so exists, or
use the '-plugins ' option to tell me where it is, or
remove DISPLAY from your environment.
Aborted (core dumped)

I can make this work on interpreter VM (SVN trunk) but module loading seems to have changed on oscog and I have not yet been able to make it work here. More to follow.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,425,2019-09-03T19:57:39Z,2019-09-04T16:48:21Z,2019-09-04T16:53:06Z,MERGED,True,2,0,1,https://github.com/nicolas-cellier-aka-nice,Allow newspeak spur linux & macos x64 failure,2,"['macOS', 'Linux', 'CI', 'Newspeak', 'crash']",https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/425,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/425,"These architectures and flavours are failing for a long time
Such failures make the CI status useless
and obstruct integration of unrelated features
It is vital to have a green CI, and these are provisional measures to restore a useful status.
This should not prevent us to investigate the problem further and hopefully resolve it.
It seems that all recent builds triggered the same crash dump on macos and linux while bootstrapping Newspeak, following stage:
""$NSVM"" $HEADLESS $COG_FLAGS $IMAGE NewspeakBootstrap.st

The error did not happen in x64 stack version, neither on linux nor macos.
This means that this might well be a bug related to Cog JIT on x64 SysV,
rather than a bug specific to Newspeak 64bits image.
It might be that Newspeak bootstrap process is testing the VM more thoroughly...","These architectures and flavours are failing for a long time
Such failures make the CI status useless
and obstruct integration of unrelated features
It is vital to have a green CI, and these are provisional measures to restore a useful status.
This should not prevent us to investigate the problem further and hopefully resolve it.
It seems that all recent builds triggered the same crash dump on macos and linux while bootstrapping Newspeak, following stage:
""$NSVM"" $HEADLESS $COG_FLAGS $IMAGE NewspeakBootstrap.st

The error did not happen in x64 stack version, neither on linux nor macos.
This means that this might well be a bug related to Cog JIT on x64 SysV,
rather than a bug specific to Newspeak 64bits image.
It might be that Newspeak bootstrap process is testing the VM more thoroughly...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,429,2019-10-13T18:03:02Z,2019-10-25T06:54:56Z,2019-10-25T06:55:01Z,MERGED,True,15,16,1,https://github.com/dtlewis290,Ensure readable error message for VM module dlopen failures.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/429,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/429,"If a module such as vm-display-X11 fails to load due to dynamic linking
errors such as symbol not found or missing runtime libary on the target
machine, then provide a meaningful error message.
Eliminate unnecessary check for if (strstr(why,""undefined symbol"")) {...}
because it eats errors, e.g. in the case of missing xRender runtime
and VM compiled with xRender dev libaries.
Improve the error message for readability. Add fflush() for stderr
output to prevent messages being lost or mixed with stdout. Remove
redundant and unreachable code.
Note, duplicate error messages on for load failures may occur due
to path setup issues in the /bin/squeak start script, are are not
a VM issue per se.
Example error message for VM compiled with xRender library for large
cursor support, and run on a machine with missing runtime library:
vm-display-X11 tryLoading /usr/local/lib/squeak/5.0-201910110209/vm-display-X11.so: dlopen: libXrender.so.1: cannot open shared object file: No such file or directory","If a module such as vm-display-X11 fails to load due to dynamic linking
errors such as symbol not found or missing runtime libary on the target
machine, then provide a meaningful error message.
Eliminate unnecessary check for if (strstr(why,""undefined symbol"")) {...}
because it eats errors, e.g. in the case of missing xRender runtime
and VM compiled with xRender dev libaries.
Improve the error message for readability. Add fflush() for stderr
output to prevent messages being lost or mixed with stdout. Remove
redundant and unreachable code.
Note, duplicate error messages on for load failures may occur due
to path setup issues in the /bin/squeak start script, are are not
a VM issue per se.
Example error message for VM compiled with xRender library for large
cursor support, and run on a machine with missing runtime library:
vm-display-X11 tryLoading /usr/local/lib/squeak/5.0-201910110209/vm-display-X11.so: dlopen: libXrender.so.1: cannot open shared object file: No such file or directory",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/theseion,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,Fixes #421,Fixes #421,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/theseion,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-542543195,Fixes #421,I'm aware that cmake is probably only used by Pharo builds but the overhead to install it is small and there's no facility yet to have different dependencies for different flavors.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/fniephaus,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-542669338,Fixes #421,Thanks!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/theseion,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-542677653,Fixes #421,"Great, thanks! Now SmalltalkCI should start working again for Pharo 8.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/fniephaus,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-542679476,Fixes #421,"Great, thanks! Now SmalltalkCI should start working again for Pharo 8.

For that, @estebanlm and the Pharo VM team needs to push a new version of the VM to files.pharo.org, right?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/theseion,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-542697552,Fixes #421,Yes. There's also a separate issue: pharo-project/pharo-vm#15,True,{'THUMBS_UP': ['https://github.com/fniephaus']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/estebanlm,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-543923177,Fixes #421,"thing is, we cannot push a new version to stable because the branch is broken for MacOS (due the changes to make it work in metal, I think). The VM is not compatible with older versions and then we are kind of stuck there :/",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/fniephaus,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-543946515,Fixes #421,@estebanlm so what's the plan on your side? Revert the Metal backend for now? Providing two flavors (e.g. macOS-new and macOS-legacy)?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,431,2019-10-16T06:30:53Z,2019-10-16T12:10:34Z,2019-10-19T09:40:35Z,MERGED,True,7,1,1,https://github.com/theseion,Latest linux vm cant handle vm display null,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431,https://github.com/theseion,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/431#issuecomment-544120971,Fixes #421,"Just to clear up a possible confusion: the build updates the latest VM on files.pharo.org automatically, so Pharo 8 alpha builds with SmalltalkCI work (apart from the new problem with the segfault: #433).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,432,2019-10-16T07:36:28Z,2019-10-16T12:12:16Z,2019-10-16T12:12:32Z,MERGED,True,2,1,1,https://github.com/tom95,"x11: emulate only up/down scroll events via keyboard, not left/right",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/432,https://github.com/tom95,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/432,"This restores the behavior to what we previously had and fixes an
annoying side effect, where vertical scrolling on a touchpad causing
occassional horizontal scrolling events would move the cursor in a text
editor, since we generate ctrl+left/right.","This restores the behavior to what we previously had and fixes an
annoying side effect, where vertical scrolling on a touchpad causing
occassional horizontal scrolling events would move the cursor in a text
editor, since we generate ctrl+left/right.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,432,2019-10-16T07:36:28Z,2019-10-16T12:12:16Z,2019-10-16T12:12:32Z,MERGED,True,2,1,1,https://github.com/tom95,"x11: emulate only up/down scroll events via keyboard, not left/right",1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/432,https://github.com/fniephaus,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/432#issuecomment-542669970,"This restores the behavior to what we previously had and fixes an
annoying side effect, where vertical scrolling on a touchpad causing
occassional horizontal scrolling events would move the cursor in a text
editor, since we generate ctrl+left/right.",Thanks!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,438,2019-10-24T20:32:43Z,2019-10-25T06:54:29Z,2019-10-25T18:43:29Z,MERGED,True,13,16,7,https://github.com/nicolas-cellier-aka-nice,Compile newspeak with clang,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438,This restore newspeak sanity on linux64x64 and Ci sanity by authorizing squeak.cog.v3 failures,This restore newspeak sanity on linux64x64 and Ci sanity by authorizing squeak.cog.v3 failures,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,438,2019-10-24T20:32:43Z,2019-10-25T06:54:29Z,2019-10-25T18:43:29Z,MERGED,True,13,16,7,https://github.com/nicolas-cellier-aka-nice,Compile newspeak with clang,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438#issuecomment-546227154,This restore newspeak sanity on linux64x64 and Ci sanity by authorizing squeak.cog.v3 failures,"One new type of failure for each and every day, that's remarkable!
This time 5 tests did timeout on squeak.cog.spur macos32x86...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,438,2019-10-24T20:32:43Z,2019-10-25T06:54:29Z,2019-10-25T18:43:29Z,MERGED,True,13,16,7,https://github.com/nicolas-cellier-aka-nice,Compile newspeak with clang,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438,https://github.com/OpenSmalltalk-Bot,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438#issuecomment-546431262,This restore newspeak sanity on linux64x64 and Ci sanity by authorizing squeak.cog.v3 failures,"On 2019-10-24, at 11:53 PM, Nicolas Cellier ***@***.***> wrote:

 One new type of failure for each and every day, that's remarkable!
Only one? Fail faster! :-)


tim
--
tim Rowledge; tim@rowledge.org; http://www.rowledge.org/tim
Useful Latin Phrases:- Te precor dulcissime supplex! = Pretty please with a cherry on top!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,438,2019-10-24T20:32:43Z,2019-10-25T06:54:29Z,2019-10-25T18:43:29Z,MERGED,True,13,16,7,https://github.com/nicolas-cellier-aka-nice,Compile newspeak with clang,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/438#issuecomment-546467437,This restore newspeak sanity on linux64x64 and Ci sanity by authorizing squeak.cog.v3 failures,"Hi Tim,
no, it would then mean that we have faster feedback and would steer the software less blindly.
Like it is now, you see some oscillations appearing, allow failure of this brand, retract, redo...
We are at the limit of feedback loop unstability, so near a kind of optimality ;)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,439,2019-10-26T13:13:59Z,2019-10-26T13:14:22Z,2019-10-26T13:14:28Z,MERGED,True,146,100,18,https://github.com/nicolas-cellier-aka-nice,Fix issue 436,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/439,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/439,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,440,2019-10-29T06:14:58Z,2019-10-29T14:08:48Z,2019-10-29T14:08:53Z,MERGED,True,82,81,34,https://github.com/nicolas-cellier-aka-nice,Compile linux64x64 with clang,6,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/440,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/440,This is a workaround for issue #433,This is a workaround for issue #433,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,446,2019-11-17T20:49:31Z,2019-12-25T17:27:16Z,2019-12-25T17:27:16Z,MERGED,True,3,3,1,https://github.com/tom95,fix calculation of x11 scroll distances,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/446,https://github.com/tom95,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/446,"I believe these values should be like the below.
Refer to for example here: http://xahlee.info/linux/linux_x11_mouse_button_number.html (the first scroll event is button 4). And the up-direction should be negative for Squeak. After these adjustments the behavior was correct on my machine.
To try out, ensure that you have Smalltalk sendMouseWheelEvents: true","I believe these values should be like the below.
Refer to for example here: http://xahlee.info/linux/linux_x11_mouse_button_number.html (the first scroll event is button 4). And the up-direction should be negative for Squeak. After these adjustments the behavior was correct on my machine.
To try out, ensure that you have Smalltalk sendMouseWheelEvents: true",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,446,2019-11-17T20:49:31Z,2019-12-25T17:27:16Z,2019-12-25T17:27:16Z,MERGED,True,3,3,1,https://github.com/tom95,fix calculation of x11 scroll distances,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/446,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/446#issuecomment-568917787,"I believe these values should be like the below.
Refer to for example here: http://xahlee.info/linux/linux_x11_mouse_button_number.html (the first scroll event is button 4). And the up-direction should be negative for Squeak. After these adjustments the behavior was correct on my machine.
To try out, ensure that you have Smalltalk sendMouseWheelEvents: true","This is absolutely right, good find!
I think that we under-use this feature!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,448,2019-11-21T23:17:29Z,2019-11-22T08:49:26Z,2019-11-22T08:49:33Z,MERGED,True,32,32,1,https://github.com/nicolas-cellier-aka-nice,Attempt to Fix Issue #447 - BitBlt signed int overflow,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/448,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/448,"Generate the plugin from VMMaker.oscog-nice.2587 which declare dx dy sx sy as sqInt rather than int.
I checked that this fixed the snippet given in issue #447.","Generate the plugin from VMMaker.oscog-nice.2587 which declare dx dy sx sy as sqInt rather than int.
I checked that this fixed the snippet given in issue #447.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-563118620,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.

This is explained in the README:

Important notice for Developers:
We rely on source file substitutions in the src tree, specifically, any sq*SCCSVersion.h files anywhere in the tree are processed to replace $Rev$, $Date$, and $URL$ with the current revision (defined as the timestamp %Y%m%d%H%M of the latest commit), the human readable date of that commit, and the url of the origin repository these sources were cloned from.
The first time you clone this repository, you must therefore run this command:
./scripts/updateSCCSVersions

This will install filters, post-commit, and post-merge hooks to update the sq*SCCSVersion.h files anytime you commit or merge.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/KenDickey,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-563344312,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","Tobias,
Thanks for the help.
More details.
Got messed up somewhere.  Symptom is
Alpine:aarch64:~ >>> cd OpenSmalltalk/oscogvm/
Alpine:aarch64:~/OpenSmalltalk/oscogvm >>> scripts/updateSCCSVersions 
error: patch failed: platforms/Cross/plugins/sqPluginsSCCSVersion.h:9
error: platforms/Cross/plugins/sqPluginsSCCSVersion.h: patch does not apply
error: patch failed: platforms/Cross/vm/sqSCCSVersion.h:28
error: platforms/Cross/vm/sqSCCSVersion.h: patch does not apply
Alpine:aarch64:~/OpenSmalltalk/oscogvm >>> 

Recloned the KenDickey/opensmalltalk-vm as kens-vm,
ran the scripts/updateSCCSVersion
and all shows well.
But how do I get git to tell GitHub to clean this?
Thanks much again,
-KenD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-565938145,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","(sorry, short on Time atm.)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/KenDickey,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-566147324,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","On 2019-12-15 23:27, Tobias Pape wrote:
 (sorry, short on Time atm.)
Ah!  Sorry here too.  You can ignore this latest.

I had not realize the push would impact the MUSL pull request.

FYI, what I am working toward is getting vm-display-fbdev up using
libevdev.  Basically moving from the ol' PS2 drivers to USB drivers for
mouse and keyboard.  Part of this is mutating the stand-alone evtest.c
code to enable/show the connection to the SqueakVM mouse and keyboard
api.

Of course, I have to understand what is there first.  Bottom up working
code lets me travel there a bit at a time so to speak.  ;^)

Oh, yea.  Ignore the guy behind the curtain!
-KenD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/KenDickey,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-568776931,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","On 2019-12-24 01:51, Nicolas Cellier wrote:
 @nicolas-cellier-aka-nice commented on this pull request.
 -------------------------

 In platforms/Cross/vm/sqSCCSVersion.h:

> @@ -28,13 +28,13 @@

 #if SUBVERSION
 # define PREFIX ""r""
 -static char SvnRawRevisionString[] = ""$Rev$"";
 +static char SvnRawRevisionString[] = ""$Rev: 201911192350 $"";

 Idem, please revert the changes to this file
Yes.  I noted in the earlier post that I don't know how to do this
(trivial git user).

How would I do this?

Thanks,
-KenD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/KenDickey,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-687674852,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","Greetings all,

The vm-display-fbdev (a.k.a. framebuffer display) has been integrated
into opensmalltalk-vm.
Thanks Eliot!

This has been tested with both Squeak and Cuis images on amd64 and
arm64/aarch64.

This requires Linux framebuffer support (/dev/fb0) and libevdev
('/usr/include/libevdev-1.0/libevdev/libevdev.h').

Hardware tested:
   LePotato (aml-s905x-cc; Armbian Linux; libc)
   Raspberry Pi 3 & 4 (Alpine Linux; MUSL)
   A very old Dell amd64 box (Alpine Linux; MUSL)

Right now the MUSL builds require manual help.

E.g.
   cd build.linux64ARMv8/squeak.cog.spur/build
   ./mvm
   y   ## answer to 'clean?'
--> breaks on vm-display-fbdev build
   cd vm-display-fbdev
   make
   cd ..
   ./mvm
   n  ## answer NO to 'clean?'

The build then proceeds to completion and checks out fine.

Does anyone out there know about how to get 'automake'
('platforms/unix/config/configure' script) to do the right thing here?

Desired goal is for
   -DMUSL
and
   -DUSEEVDEV
CFLAGS to be set and have the 'mvm' script make vm-display-fbdev without
manual intervention.

Thanks a bunch for any help!
-KenD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/krono,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-690595352,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","I think with the landing of #515, most things here are obsolete, and others need different treatment.
Mind if I  close?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,450,2019-12-09T00:54:43Z,2020-09-10T18:38:10Z,2020-09-10T18:38:10Z,CLOSED,False,1424,11,9,https://github.com/KenDickey,MUSL deltas (mostly harmless),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450,https://github.com/KenDickey,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/450#issuecomment-690607077,"I have built and tested aarch64 builds on
Raspbery Pi 3B / Arch Linux / MUSL+Busybox
Chromebook Two / Linux / libc
The mvm ""-O1"" seems to work in both cases -- no need to go to ""-O0""
Please ignore the spurious sqSCCSVersion.h -- I don't know how to elide this.
The getwd() -> getcwd() in sqUnixSecurityPlugin.c should likewise be harmless [no getwd()  in MUSL]
Not a time concern.  I don't know of anyone asking for this.","On 2020-09-10 11:15, Tobias Pape wrote:
 I think with the landing of #515, most things here are obsolete, and
 others need different treatment.
 Mind if I close?
Yep.  Ole news.  Please close.

Thanks,
-KenD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,451,2019-12-09T10:26:13Z,2019-12-12T23:43:27Z,2019-12-12T23:43:27Z,MERGED,True,230,1,4,https://github.com/ckeen,Add sndio sound support for OpenBSD,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451,https://github.com/ckeen,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451,"This commit introduces a new plugin ""vm-sound-sndio"" which uses the
native OpenBSD sound system as backend.
This commit is meant as an initial introduction of the plugin, as
sound output currently blocks the whole VM.
The plugin is not loaded by default and should only get built when
running on OpenBSD.
My intention with this pull request is to get the infrastructure for future improvements up and running, so further development is easier for me and people have a way of testing the plugin.","This commit introduces a new plugin ""vm-sound-sndio"" which uses the
native OpenBSD sound system as backend.
This commit is meant as an initial introduction of the plugin, as
sound output currently blocks the whole VM.
The plugin is not loaded by default and should only get built when
running on OpenBSD.
My intention with this pull request is to get the infrastructure for future improvements up and running, so further development is easier for me and people have a way of testing the plugin.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,451,2019-12-09T10:26:13Z,2019-12-12T23:43:27Z,2019-12-12T23:43:27Z,MERGED,True,230,1,4,https://github.com/ckeen,Add sndio sound support for OpenBSD,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451,https://github.com/ckeen,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451#issuecomment-564750013,"This commit introduces a new plugin ""vm-sound-sndio"" which uses the
native OpenBSD sound system as backend.
This commit is meant as an initial introduction of the plugin, as
sound output currently blocks the whole VM.
The plugin is not loaded by default and should only get built when
running on OpenBSD.
My intention with this pull request is to get the infrastructure for future improvements up and running, so further development is easier for me and people have a way of testing the plugin.","Many thanks for your feedback and sorry for the late reply. I have updated the branch incorporating your suggestions. If you can find the time to have a loot at it again, I'd appreciate it.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,451,2019-12-09T10:26:13Z,2019-12-12T23:43:27Z,2019-12-12T23:43:27Z,MERGED,True,230,1,4,https://github.com/ckeen,Add sndio sound support for OpenBSD,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451#issuecomment-564750890,"This commit introduces a new plugin ""vm-sound-sndio"" which uses the
native OpenBSD sound system as backend.
This commit is meant as an initial introduction of the plugin, as
sound output currently blocks the whole VM.
The plugin is not loaded by default and should only get built when
running on OpenBSD.
My intention with this pull request is to get the infrastructure for future improvements up and running, so further development is easier for me and people have a way of testing the plugin.",Looks good to me. Anyone else having a look?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,451,2019-12-09T10:26:13Z,2019-12-12T23:43:27Z,2019-12-12T23:43:27Z,MERGED,True,230,1,4,https://github.com/ckeen,Add sndio sound support for OpenBSD,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451,https://github.com/OpenSmalltalk-Bot,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/451#issuecomment-565226829,"This commit introduces a new plugin ""vm-sound-sndio"" which uses the
native OpenBSD sound system as backend.
This commit is meant as an initial introduction of the plugin, as
sound output currently blocks the whole VM.
The plugin is not loaded by default and should only get built when
running on OpenBSD.
My intention with this pull request is to get the infrastructure for future improvements up and running, so further development is easier for me and people have a way of testing the plugin.","On Wed, Dec 11, 2019 at 1:56 PM Tobias Pape ***@***.***> wrote:


 Looks good to me. Anyone else having a look?

I don't see anything problematic.  Integrate?
…
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#451?email_source=notifications&email_token=AIJPEW23V5BJRL3YZK6CWXLQYFOXNA5CNFSM4JYGZGYKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGUWUKQ#issuecomment-564750890>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AIJPEWZRBHOIIHUR6OE3FDDQYFOXNANCNFSM4JYGZGYA>
 .


-- 
_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,452,2019-12-09T19:38:19Z,2019-12-09T19:40:35Z,2019-12-09T19:40:36Z,MERGED,True,1,0,1,https://github.com/tom95,Declare the shared library depedencies for vm-sound-pulse. Fixes #360,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/452,https://github.com/tom95,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/452,"On my system, pulse was not picked as default driver. I had to manually add add -vm-sound-pulse as a startup parameter. After adding this line it worked without any LD hacks though and ldd reports a correctly linked so file.","On my system, pulse was not picked as default driver. I had to manually add add -vm-sound-pulse as a startup parameter. After adding this line it worked without any LD hacks though and ldd reports a correctly linked so file.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,452,2019-12-09T19:38:19Z,2019-12-09T19:40:35Z,2019-12-09T19:40:36Z,MERGED,True,1,0,1,https://github.com/tom95,Declare the shared library depedencies for vm-sound-pulse. Fixes #360,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/452,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/452#issuecomment-563400938,"On my system, pulse was not picked as default driver. I had to manually add add -vm-sound-pulse as a startup parameter. After adding this line it worked without any LD hacks though and ldd reports a correctly linked so file.",D'oh,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,453,2019-12-09T19:56:27Z,2019-12-09T20:09:09Z,2019-12-09T20:09:10Z,MERGED,True,10,0,1,https://github.com/ronsaldo,Fix Metal window crash on resize.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/453,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/453,This fixes an edge condition with the metal renderer where the update rect ends out of the bounds of the display texture. The texture update region ends with negative coordinates.,This fixes an edge condition with the metal renderer where the update rect ends out of the bounds of the display texture. The texture update region ends with negative coordinates.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,457,2019-12-24T09:30:11Z,2019-12-24T09:33:04Z,2019-12-24T09:33:04Z,MERGED,True,4,1,1,https://github.com/nicolas-cellier-aka-nice,Fix shift-tab on unix,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/457,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/457,"Shift-tab didn't generate a ""key char event"" on unix, because
XK_ISO_Left_Tab was not mapped in xkeysym2ucs4, so its unicode code
point was mapped to 0. Map it to tab (9).
On behalf of Levente","Shift-tab didn't generate a ""key char event"" on unix, because
XK_ISO_Left_Tab was not mapped in xkeysym2ucs4, so its unicode code
point was mapped to 0. Map it to tab (9).
On behalf of Levente",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,458,2019-12-24T09:31:05Z,2019-12-26T08:13:23Z,2019-12-26T18:44:30Z,MERGED,True,24,13,1,https://github.com/nicolas-cellier-aka-nice,Improved local address support on linux,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458,"Do not rely on hardcoded interface names (eth0, wlan0) in sqResolverLocalAddress(void). Use ifa_flags to filter the list instead.
When an interface has no address assigned, just skip it instead of failing the primitive and leaking memory (return without calling freeifaddrs).
On behalf of Levente","Do not rely on hardcoded interface names (eth0, wlan0) in sqResolverLocalAddress(void). Use ifa_flags to filter the list instead.
When an interface has no address assigned, just skip it instead of failing the primitive and leaking memory (return without calling freeifaddrs).
On behalf of Levente",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,458,2019-12-24T09:31:05Z,2019-12-26T08:13:23Z,2019-12-26T18:44:30Z,MERGED,True,24,13,1,https://github.com/nicolas-cellier-aka-nice,Improved local address support on linux,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458#issuecomment-568708430,"Do not rely on hardcoded interface names (eth0, wlan0) in sqResolverLocalAddress(void). Use ifa_flags to filter the list instead.
When an interface has no address assigned, just skip it instead of failing the primitive and leaking memory (return without calling freeifaddrs).
On behalf of Levente","The changes look good to me, I let a bit of time if someone else want to review.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,458,2019-12-24T09:31:05Z,2019-12-26T08:13:23Z,2019-12-26T18:44:30Z,MERGED,True,24,13,1,https://github.com/nicolas-cellier-aka-nice,Improved local address support on linux,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458#issuecomment-568741447,"Do not rely on hardcoded interface names (eth0, wlan0) in sqResolverLocalAddress(void). Use ifa_flags to filter the list instead.
When an interface has no address assigned, just skip it instead of failing the primitive and leaking memory (return without calling freeifaddrs).
On behalf of Levente","Just a question, is that Linux-specific flags or do they work, eg, on bsd'en?
(cc'ing @ckeen, asking for a tiny test please :) )",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,458,2019-12-24T09:31:05Z,2019-12-26T08:13:23Z,2019-12-26T18:44:30Z,MERGED,True,24,13,1,https://github.com/nicolas-cellier-aka-nice,Improved local address support on linux,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458,https://github.com/OpenSmalltalk-Bot,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458#issuecomment-568815642,"Do not rely on hardcoded interface names (eth0, wlan0) in sqResolverLocalAddress(void). Use ifa_flags to filter the list instead.
When an interface has no address assigned, just skip it instead of failing the primitive and leaking memory (return without calling freeifaddrs).
On behalf of Levente","On Tue, 24 Dec 2019, Tobias Pape wrote:
 Just a question, is that Linux-specific flags or do they work, eg, on bsd'en?
If you meant the IFF_* flags, then yes, the most popular BSD variants
do have them:
https://github.com/apple/darwin-xnu/blob/master/bsd/net/if.h#L108
https://github.com/openbsd/src/blob/master/sys/net/if.h#L203
https://github.com/freebsd/freebsd/blob/master/sys/net/if.h#L142
https://github.com/DragonFlyBSD/DragonFlyBSD/blob/master/sys/net/if.h#L91
http://cvsweb.netbsd.org/bsdweb.cgi/src/sys/net/if.h?rev=1.277&content-type=text/x-cvsweb-markup&only_with_tag=MAIN

Levente",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,458,2019-12-24T09:31:05Z,2019-12-26T08:13:23Z,2019-12-26T18:44:30Z,MERGED,True,24,13,1,https://github.com/nicolas-cellier-aka-nice,Improved local address support on linux,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/458#issuecomment-569113117,"Do not rely on hardcoded interface names (eth0, wlan0) in sqResolverLocalAddress(void). Use ifa_flags to filter the list instead.
When an interface has no address assigned, just skip it instead of failing the primitive and leaking memory (return without calling freeifaddrs).
On behalf of Levente",hooray!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,459,2019-12-24T23:38:35Z,2019-12-25T18:36:51Z,2019-12-25T18:37:01Z,MERGED,True,4,10,1,https://github.com/nicolas-cellier-aka-nice,Align windows behavior with other platforms in response to mouse wheel events,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/459,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/459,"Set all the meta bits to distinguish from a real arrow key, rather than just control key bit
Set the utf32Code to the same arrow code rather than 0, not only on PharoVM

Yet do not translate horizontal mouse wheels to left/right arrows
Such events are troublesome if TextEditors are not ready to filter them out.
This is a partial fix for #456","Set all the meta bits to distinguish from a real arrow key, rather than just control key bit
Set the utf32Code to the same arrow code rather than 0, not only on PharoVM

Yet do not translate horizontal mouse wheels to left/right arrows
Such events are troublesome if TextEditors are not ready to filter them out.
This is a partial fix for #456",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,460,2019-12-26T08:03:31Z,2019-12-26T08:12:49Z,2019-12-26T08:13:01Z,MERGED,True,15,125,4,https://github.com/nicolas-cellier-aka-nice,Nuke mac roman,9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/460,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/460,"This will do 2 things:



expunge the macRoman encoding from event charCode (event at: 3) on unix and OSX




revert the change that transformed Ctrl+a from ASCII control character code 1 to $a for Squeak VM (no change for PharoVM though).




has been done on windows VM, and need to be done on over OSes
is essentially a fix for #456 and #396

I have reverted deeper changes aimed at using a platform independent keycode in (event at: 3).
This will be for another time and another branch.","This will do 2 things:



expunge the macRoman encoding from event charCode (event at: 3) on unix and OSX




revert the change that transformed Ctrl+a from ASCII control character code 1 to $a for Squeak VM (no change for PharoVM though).




has been done on windows VM, and need to be done on over OSes
is essentially a fix for #456 and #396

I have reverted deeper changes aimed at using a platform independent keycode in (event at: 3).
This will be for another time and another branch.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,461,2019-12-26T20:48:44Z,2019-12-27T16:57:50Z,2019-12-28T13:18:45Z,MERGED,True,135,49,2,https://github.com/nicolas-cellier-aka-nice,Win generate mouse wheel events,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/461,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/461,"This let windows VM generate mouse wheel events if asked to do so
OSX and linux already do that.","This let windows VM generate mouse wheel events if asked to do so
OSX and linux already do that.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,462,2019-12-27T21:53:38Z,2019-12-28T13:18:10Z,2019-12-28T13:18:17Z,MERGED,True,56,11,2,https://github.com/nicolas-cellier-aka-nice,Fix osx linux mouse wheel,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/462,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/462,"This provides a fix for Issue #41
Both unix (X11) and OSX will now deliver the buttons and modifiers states like any other mouse event in fifth and sixth position in event structure (the so called eventBuffer at image side).
Note: OSX VM will now provide smooth wheel scroll events if possible, with a resolution of 20 scroll units (1/6th of wheel notch), like I did for Windows.
This threshold will avoid burst of wheel events with small deltas which where freezing Morphic interactivity.
Note: I did not accumulate small wheel events on linux yet, this remains a TODO.
EDIT but I propose accumulating at image side in order to mitigate the problem
See http://source.squeak.org/inbox/Morphic-nice.1613.diff","This provides a fix for Issue #41
Both unix (X11) and OSX will now deliver the buttons and modifiers states like any other mouse event in fifth and sixth position in event structure (the so called eventBuffer at image side).
Note: OSX VM will now provide smooth wheel scroll events if possible, with a resolution of 20 scroll units (1/6th of wheel notch), like I did for Windows.
This threshold will avoid burst of wheel events with small deltas which where freezing Morphic interactivity.
Note: I did not accumulate small wheel events on linux yet, this remains a TODO.
EDIT but I propose accumulating at image side in order to mitigate the problem
See http://source.squeak.org/inbox/Morphic-nice.1613.diff",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,464,2020-01-02T19:19:44Z,2020-01-08T10:55:19Z,2020-01-08T10:55:19Z,MERGED,True,59,53,14,https://github.com/smalltalking,Fix type inconsistencies (int vs sqInt),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/464,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/464,"It's about be96d84, the other 3 commits are just noise.
There may be things left to do on Windows and Mac.","It's about be96d84, the other 3 commits are just noise.
There may be things left to do on Windows and Mac.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,464,2020-01-02T19:19:44Z,2020-01-08T10:55:19Z,2020-01-08T10:55:19Z,MERGED,True,59,53,14,https://github.com/smalltalking,Fix type inconsistencies (int vs sqInt),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/464,https://github.com/smalltalking,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/464#issuecomment-570402112,"It's about be96d84, the other 3 commits are just noise.
There may be things left to do on Windows and Mac.","335d681 seems to fix the issue on windows.
The appveyor build failed because of an unrelated issue with freetype2. It's probably worth restarting it.
The travis build got into an infinite loop, even though the script exited with Done. Your build exited with 0., the job is still ''running''.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,464,2020-01-02T19:19:44Z,2020-01-08T10:55:19Z,2020-01-08T10:55:19Z,MERGED,True,59,53,14,https://github.com/smalltalking,Fix type inconsistencies (int vs sqInt),5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/464,https://github.com/smalltalking,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/464#issuecomment-570627383,"It's about be96d84, the other 3 commits are just noise.
There may be things left to do on Windows and Mac.","Thanks to whoever pushed the appveyor build; it finally succeeded.
I don't know why the travis builds failed, but both failures seem unrelated to these changes.
Fixes #465.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,466,2020-01-04T23:44:08Z,2020-01-06T16:08:46Z,2020-01-06T16:08:50Z,MERGED,True,6,7,5,https://github.com/dtlewis290,Fix image MC loading glitch in image build scripts when checking pack…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/466,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/466,"…age-cache.
MCRepository>>includesVersionNamed: does not check explicit version name,
so this may do the wrong thing when checking the cache:
version := ((MCCacheRepository default includesVersionNamed: latestVersion)
ifTrue: [MCCacheRepository default]
ifFalse: [repository]) versionNamed: latestVersion.
Therefore do this instead:
version := (MCCacheRepository default versionNamed: latestVersion)
ifNil: [repository versionNamed: latestVersion].","…age-cache.
MCRepository>>includesVersionNamed: does not check explicit version name,
so this may do the wrong thing when checking the cache:
version := ((MCCacheRepository default includesVersionNamed: latestVersion)
ifTrue: [MCCacheRepository default]
ifFalse: [repository]) versionNamed: latestVersion.
Therefore do this instead:
version := (MCCacheRepository default versionNamed: latestVersion)
ifNil: [repository versionNamed: latestVersion].",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,469,2020-01-13T21:42:12Z,2020-01-22T02:53:21Z,2020-02-10T09:00:15Z,MERGED,True,15,5,3,https://github.com/nicolas-cellier-aka-nice,Fix issue468 squeak3D 64bits crash,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/469,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/469,"This is an attempt at fixing #468
I have played a bit with Guardians without crash, but that's not a smoke test, I'm not good enough nor patient ;)
I don't remember performing that poorly on the ATARI 520 version of Sentinel game, but that's more than 30 years back ;)","This is an attempt at fixing #468
I have played a bit with Guardians without crash, but that's not a smoke test, I'm not good enough nor patient ;)
I don't remember performing that poorly on the ATARI 520 version of Sentinel game, but that's more than 30 years back ;)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,471,2020-01-17T00:08:23Z,2020-01-17T00:11:25Z,2020-01-17T00:11:25Z,MERGED,True,20,1,3,https://github.com/johnmci,add logic to place screen on window,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/471,https://github.com/johnmci,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/471,"that will fit, don't downsize squeak window","that will fit, don't downsize squeak window",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,473,2020-01-21T17:42:17Z,2020-01-24T16:43:21Z,2020-01-24T16:43:24Z,MERGED,True,5,1,1,https://github.com/nicolas-cellier-aka-nice,Fix issue #472,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473,"when i == j, there is nothing to sort.
If we call this for the first time, there is no stack allocated by INIT(0), but stack is accessed nonetheless thru PUSH(i,j).
The best thing todo IMO is to return early.","when i == j, there is nothing to sort.
If we call this for the first time, there is no stack allocated by INIT(0), but stack is accessed nonetheless thru PUSH(i,j).
The best thing todo IMO is to return early.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,473,2020-01-21T17:42:17Z,2020-01-24T16:43:21Z,2020-01-24T16:43:24Z,MERGED,True,5,1,1,https://github.com/nicolas-cellier-aka-nice,Fix issue #472,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473#issuecomment-576984097,"when i == j, there is nothing to sort.
If we call this for the first time, there is no stack allocated by INIT(0), but stack is accessed nonetheless thru PUSH(i,j).
The best thing todo IMO is to return early.","Hi Nicolas,

    we trust you and with git's merge capability conflicts are unlikely.
So why not do this on the main branch? I'm curious why you're doing this
work on a branch...
…
On Tue, Jan 21, 2020 at 9:42 AM Nicolas Cellier ***@***.***> wrote:
 when i == j, there is nothing to sort.
 If we call this for the first time, there is no stack allocated by INIT(0),
 but stack is accessed nonetheless thru PUSH(i,j).
 The best thing todo IMO is to return early.
 ------------------------------
 You can view, comment on, or merge this pull request online at:

   #473
 Commit Summary

    - Fix issue #472

 File Changes

    - *M* platforms/Cross/plugins/Squeak3D/b3dInit.c
    <https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473/files#diff-0>
    (6)

 Patch Links:

    - https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473.patch
    - https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473.diff

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#473?email_source=notifications&email_token=ADY5VUCO6Q3K7YJ6NXWSUY3Q64XXXA5CNFSM4KJXN4FKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IHWSHIQ>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ADY5VUDMGEOQGTCR2MOTKJ3Q64XXXANCNFSM4KJXN4FA>
 .


-- 
_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,473,2020-01-21T17:42:17Z,2020-01-24T16:43:21Z,2020-01-24T16:43:24Z,MERGED,True,5,1,1,https://github.com/nicolas-cellier-aka-nice,Fix issue #472,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473,https://github.com/nicolas-cellier-aka-nice,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473#issuecomment-577010456,"when i == j, there is nothing to sort.
If we call this for the first time, there is no stack allocated by INIT(0), but stack is accessed nonetheless thru PUSH(i,j).
The best thing todo IMO is to return early.","Hi Eliot,
This is a quick fix with superficial understanding of code.
So just to give a chance to review.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,473,2020-01-21T17:42:17Z,2020-01-24T16:43:21Z,2020-01-24T16:43:24Z,MERGED,True,5,1,1,https://github.com/nicolas-cellier-aka-nice,Fix issue #472,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473,https://github.com/fniephaus,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/473#issuecomment-578207675,"when i == j, there is nothing to sort.
If we call this for the first time, there is no stack allocated by INIT(0), but stack is accessed nonetheless thru PUSH(i,j).
The best thing todo IMO is to return early.","I'm going to merge this as it avoids a crash. If someone doesn't agree with the fix, we can always revert it. But merging it now makes it easier for our users, and especially Stéphane, to try it out.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,474,2020-02-02T04:22:36Z,2020-04-22T08:10:06Z,2020-07-08T11:10:26Z,CLOSED,False,7,7,1,https://github.com/PierceNg,Update OpenSSL download to v1.1.1d as v1.0.2q EOLed 1 Jan 2020.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/474,https://github.com/PierceNg,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/474,Fixes #455,Fixes #455,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,474,2020-02-02T04:22:36Z,2020-04-22T08:10:06Z,2020-07-08T11:10:26Z,CLOSED,False,7,7,1,https://github.com/PierceNg,Update OpenSSL download to v1.1.1d as v1.0.2q EOLed 1 Jan 2020.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/474,https://github.com/VincentBlondeau,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/474#issuecomment-612134697,Fixes #455,This PR could be closed at the profit of #482,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,474,2020-02-02T04:22:36Z,2020-04-22T08:10:06Z,2020-07-08T11:10:26Z,CLOSED,False,7,7,1,https://github.com/PierceNg,Update OpenSSL download to v1.1.1d as v1.0.2q EOLed 1 Jan 2020.,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/474,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/474#issuecomment-617622969,Fixes #455,Close at request,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,475,2020-02-10T06:38:56Z,2020-02-10T09:03:56Z,2020-02-10T09:03:57Z,MERGED,True,16,0,1,https://github.com/ronsaldo,Add some undeclared functions that are used by the HostWindowPlugin,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/475,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/475,"Add some undeclared functions that are used by the HostWindowPlugin.
Of particular importance is ioGetWindowHandle whose pointer return value is truncated in 64 bits if undeclared.","Add some undeclared functions that are used by the HostWindowPlugin.
Of particular importance is ioGetWindowHandle whose pointer return value is truncated in 64 bits if undeclared.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,478,2020-02-28T11:08:23Z,2020-02-28T15:35:36Z,2020-02-28T15:35:39Z,MERGED,True,7,19,1,https://github.com/fniephaus,Use NSWindow API for changing fullscreen mode,2,['bug'],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/478,https://github.com/fniephaus,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/478,"instead of going through NSView's API. The latter does offer more options, but messes up the fullscreen mode for some reason (UI becomes unresponsive because input events are no longer received).
Using self.window toggleFullScreen:self also does not mess with additional displays (only the display showing Squeak is put into fullscreen mode).
Please test and review!","instead of going through NSView's API. The latter does offer more options, but messes up the fullscreen mode for some reason (UI becomes unresponsive because input events are no longer received).
Using self.window toggleFullScreen:self also does not mess with additional displays (only the display showing Squeak is put into fullscreen mode).
Please test and review!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,479,2020-04-03T14:45:18Z,2020-04-05T09:53:14Z,2020-04-05T09:53:43Z,CLOSED,False,574,13,26,https://github.com/cstes,Solaris,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/479,https://github.com/cstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/479,"Attempt to create a pull request for GIT branch ""solaris"" to COG.","Attempt to create a pull request for GIT branch ""solaris"" to COG.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,479,2020-04-03T14:45:18Z,2020-04-05T09:53:14Z,2020-04-05T09:53:43Z,CLOSED,False,574,13,26,https://github.com/cstes,Solaris,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/479,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/479#issuecomment-609372456,"Attempt to create a pull request for GIT branch ""solaris"" to COG.",would it be possible to name the 64-bit folder sunos64x64 for consistency with the other folders?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,479,2020-04-03T14:45:18Z,2020-04-05T09:53:14Z,2020-04-05T09:53:43Z,CLOSED,False,574,13,26,https://github.com/cstes,Solaris,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/479,https://github.com/cstes,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/479#issuecomment-609389975,"Attempt to create a pull request for GIT branch ""solaris"" to COG.",Attempt to stop git pull request.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,480,2020-04-05T18:26:26Z,2020-04-22T15:55:32Z,2020-04-22T15:55:33Z,CLOSED,False,949,14,35,https://github.com/cstes,Solaris,34,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/480,https://github.com/cstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/480,Add build.sunos32x86 and build.sunos64x64 for solaris,Add build.sunos32x86 and build.sunos64x64 for solaris,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,480,2020-04-05T18:26:26Z,2020-04-22T15:55:32Z,2020-04-22T15:55:33Z,CLOSED,False,949,14,35,https://github.com/cstes,Solaris,34,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/480,https://github.com/cstes,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/480#issuecomment-617866765,Add build.sunos32x86 and build.sunos64x64 for solaris,superseded by new sunos branch,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,481,2020-04-07T21:41:31Z,2020-04-22T08:25:21Z,2022-03-16T11:48:04Z,MERGED,True,189,85,12,https://github.com/krono,Improve unix portability,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/481,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/481,today: FreeBSD,today: FreeBSD,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,481,2020-04-07T21:41:31Z,2020-04-22T08:25:21Z,2022-03-16T11:48:04Z,MERGED,True,189,85,12,https://github.com/krono,Improve unix portability,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/481,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/481#issuecomment-617630478,today: FreeBSD,The interesting builds pass.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,482,2020-04-10T17:28:43Z,2020-04-22T08:10:48Z,2020-04-22T08:10:48Z,MERGED,True,24,17,5,https://github.com/VincentBlondeau,Update OpenSSL download to v1.1.1f as v1.0.2q EOLed 1 Jan 2020,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/482,https://github.com/VincentBlondeau,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/482,"URL is now https://www.openssl.org/source/openssl-1.1.1f.tar.gz
name of the dlls on windows have changed.
targets for building are updated according to https://github.com/openssl/openssl/blob/OpenSSL_1_1_1-stable/INSTALL
Windows build locally successful but I cannot test the other platforms","URL is now https://www.openssl.org/source/openssl-1.1.1f.tar.gz
name of the dlls on windows have changed.
targets for building are updated according to https://github.com/openssl/openssl/blob/OpenSSL_1_1_1-stable/INSTALL
Windows build locally successful but I cannot test the other platforms",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,482,2020-04-10T17:28:43Z,2020-04-22T08:10:48Z,2020-04-22T08:10:48Z,MERGED,True,24,17,5,https://github.com/VincentBlondeau,Update OpenSSL download to v1.1.1f as v1.0.2q EOLed 1 Jan 2020,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/482,https://github.com/VincentBlondeau,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/482#issuecomment-612134141,"URL is now https://www.openssl.org/source/openssl-1.1.1f.tar.gz
name of the dlls on windows have changed.
targets for building are updated according to https://github.com/openssl/openssl/blob/OpenSSL_1_1_1-stable/INSTALL
Windows build locally successful but I cannot test the other platforms",Update of #474 to resolve #455,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,482,2020-04-10T17:28:43Z,2020-04-22T08:10:48Z,2020-04-22T08:10:48Z,MERGED,True,24,17,5,https://github.com/VincentBlondeau,Update OpenSSL download to v1.1.1f as v1.0.2q EOLed 1 Jan 2020,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/482,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/482#issuecomment-617623278,"URL is now https://www.openssl.org/source/openssl-1.1.1f.tar.gz
name of the dlls on windows have changed.
targets for building are updated according to https://github.com/openssl/openssl/blob/OpenSSL_1_1_1-stable/INSTALL
Windows build locally successful but I cannot test the other platforms",VM mostly not affected.,True,{'THUMBS_UP': ['https://github.com/VincentBlondeau']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,485,2020-04-11T19:26:40Z,2020-04-11T19:48:47Z,2020-04-12T09:44:56Z,MERGED,True,37,11,1,https://github.com/VincentBlondeau,Fix #484 [Win64]Cannot save and load image files with a heap whose size is more than 0xff ff ff ff (~4.1GB),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/485,https://github.com/VincentBlondeau,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/485,"The problem is actually when there is only one segment of memory of more of 0xff ff ff ff to read or to write to disk.
This fix the issue and it is tested with a real case on windows.
I added some checks on function return.
Let me know if changes are to be done to follows some conventions or optimizations.","The problem is actually when there is only one segment of memory of more of 0xff ff ff ff to read or to write to disk.
This fix the issue and it is tested with a real case on windows.
I added some checks on function return.
Let me know if changes are to be done to follows some conventions or optimizations.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,485,2020-04-11T19:26:40Z,2020-04-11T19:48:47Z,2020-04-12T09:44:56Z,MERGED,True,37,11,1,https://github.com/VincentBlondeau,Fix #484 [Win64]Cannot save and load image files with a heap whose size is more than 0xff ff ff ff (~4.1GB),2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/485,https://github.com/OpenSmalltalk-Bot,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/485#issuecomment-612504713,"The problem is actually when there is only one segment of memory of more of 0xff ff ff ff to read or to write to disk.
This fix the issue and it is tested with a real case on windows.
I added some checks on function return.
Let me know if changes are to be done to follows some conventions or optimizations.","@jakob: Eliot seems to have merged this without incorporating your
feedback. Could you please open another PR with your suggestions?

Thanks,
Fabio
…
On Sat, 11 Apr 2020 at 9:46 pm, Jakob Reschke ***@***.***> wrote:


 ***@***.**** commented on this pull request.
 ------------------------------

 In platforms/win32/plugins/FilePlugin/sqWin32FilePrims.c
 <#485 (comment)>
 :

 >    DWORD dwReallyWritten;
 -  WriteFile((HANDLE)(h-1), (LPVOID) ptr, count*sz, &dwReallyWritten, NULL);
 -  return (size_t) (dwReallyWritten / sz);
 +  size_t totalToWrite = count * sz;
 +  squeakFileOffsetType position;
 +
 +  position = sqImageFilePosition(h);
 +  while (reallyWritten != totalToWrite) {
 +    DWORD toWrite = (totalToWrite - reallyWritten) > (size_t) MAX_DWORD ? MAX_DWORD : totalToWrite - reallyWritten;
 +    BOOL ret = WriteFile((HANDLE)(h - 1), (LPVOID)((sqInt)ptr + (sqInt) reallyWritten), toWrite, &dwReallyWritten, NULL);
 +    reallyWritten += dwReallyWritten;
 +
 +    if (!ret | dwReallyWritten != toWrite) {

 See above.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#485 (review)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AIJPEWYSLSBS2AMBET6YZLTRMDCK3ANCNFSM4MGDV3UQ>
 .",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,486,2020-04-12T10:05:42Z,2020-05-01T22:28:00Z,2020-05-04T10:50:12Z,MERGED,True,4,5,1,https://github.com/VincentBlondeau,[Improvment][Win64]Cannot save and load image files with a heap whose size is more than 0xff ff ff ff (~4.1GB),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/486,https://github.com/VincentBlondeau,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/486,"Use || instead of | and use MAXDWORD instead of a new constant
Fix review of #485 and Fix #484","Use || instead of | and use MAXDWORD instead of a new constant
Fix review of #485 and Fix #484",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,490,2020-04-22T15:58:06Z,2020-04-25T20:45:45Z,2020-05-06T14:12:32Z,CLOSED,False,62,12,15,https://github.com/cstes,SunOS,45,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490,https://github.com/cstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490,Solaris fixes,Solaris fixes,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,490,2020-04-22T15:58:06Z,2020-04-25T20:45:45Z,2020-05-06T14:12:32Z,CLOSED,False,62,12,15,https://github.com/cstes,SunOS,45,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490#issuecomment-618274066,Solaris fixes,"Here's a crazy idea: can we fold this into the linux build dirs and have the sunos dir be a symlink?
The specifica (like openssl no dynamic) could be dealt with in configure and the platform itself :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,490,2020-04-22T15:58:06Z,2020-04-25T20:45:45Z,2020-05-06T14:12:32Z,CLOSED,False,62,12,15,https://github.com/cstes,SunOS,45,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490,https://github.com/kksubbu,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490#issuecomment-618318122,Solaris fixes,"Good idea! I would even go further and drop sunos directory altogether. Builds should be scripted based on technology rather than brands. If the variant can no longer be handled by parsing environment, then sunos can be carved into a separate directory.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,490,2020-04-22T15:58:06Z,2020-04-25T20:45:45Z,2020-05-06T14:12:32Z,CLOSED,False,62,12,15,https://github.com/cstes,SunOS,45,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490,https://github.com/OpenSmalltalk-Bot,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/490#issuecomment-619386308,Solaris fixes,"On Apr 23, 2020, at 1:56 AM, Tobias Pape ***@***.***> wrote:

 ﻿
 Here's a crazy idea: can we fold this into the linux build dirs and have the sunos dir be a symlink?

 The specifica (like openssl no dynamic) could be dealt with in configure and the platform itself :)

Why?  The benefits of having the separate directory are strong; its own HowToBuild, decoupling.  And the space overhead is minimal.  I see no benefit in trying to collapse these at all.
…
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,491,2020-04-23T00:25:32Z,2020-04-23T08:33:44Z,2020-04-23T08:33:47Z,MERGED,True,273,145,14,https://github.com/krono,Autoconf fixes,11,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/491,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/491,"harmonize plugin handling


unify sound plugin autoconf patterns


Most important, fix plib leak from external plugins to internal (ie, vm) ones, this spoils the link.","harmonize plugin handling


unify sound plugin autoconf patterns


Most important, fix plib leak from external plugins to internal (ie, vm) ones, this spoils the link.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,492,2020-04-23T00:59:51Z,2020-04-23T08:33:00Z,2020-04-23T08:33:06Z,MERGED,True,23,23,46,https://github.com/krono,[unix] externalize midi plugin,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/492,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/492,it might depend on libraries we don't want the VM to link against.,it might depend on libraries we don't want the VM to link against.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,494,2020-04-30T08:15:08Z,2020-05-01T19:32:25Z,2020-05-01T19:32:25Z,MERGED,True,587,11,27,https://github.com/cstes,new Sun pull request,20,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/494,https://github.com/cstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/494,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
I've made some changes to support Solaris / SunOS.
First of all, I've removed my modification of the ""default"" pulseaudio choice in the case of #if sun;
the reason is that there was concern about this on other platforms.
And additionally it is possible to setup the Solaris build environment so that the header files soundcard.h sys/soundcard.h and  sys/audioio.h are not found (are absent).
In that case the configure script will think it does not have build OSS audio and Sun modules, and the only module that will be built is ""vm-sound-pulse"".   So the system will load the only module available : pulseaudio.
So no change is really required to get the result that ""pulseaudio"" is now the default on Solaris.
Please have a look at the proposed changes on the ""sun"" branch and hopefully this can be integrated.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJeqojuAAoJEAwpOKXMq1MaM9AH/0FPPQdg9EpvoV7LWhAWAs+i
7CxEWT6vhoRFuAXB73Op3rtQEmLW+sQtS4v3V4+F9KzFhhHpj0xlI9ZL7Ua52WH/
M9YwoFyct1yZxP00hbB9oSxnEw7G2JrG8CmCYjPKcNUSUUbeRWtoV34POcGWrIuJ
0+NgBD2oDyhmRDZnR+5d5MnZWGFkQCoxCeWu2PcN1t+fO+CWhbaLdE7DUgY4nzdR
ETkR323jFrqqzC9yXvn7WPab9E9lOsjQkzx4+2U9p4zrVphtPkYsX1SX7ngunCny
rn7Qw8yWJsxMtwagHDD0ttZXwvXWdts/iSBnKiRDPr/gU1qfUtlKujTjILr+39M=
=7/ro
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
I've made some changes to support Solaris / SunOS.
First of all, I've removed my modification of the ""default"" pulseaudio choice in the case of #if sun;
the reason is that there was concern about this on other platforms.
And additionally it is possible to setup the Solaris build environment so that the header files soundcard.h sys/soundcard.h and  sys/audioio.h are not found (are absent).
In that case the configure script will think it does not have build OSS audio and Sun modules, and the only module that will be built is ""vm-sound-pulse"".   So the system will load the only module available : pulseaudio.
So no change is really required to get the result that ""pulseaudio"" is now the default on Solaris.
Please have a look at the proposed changes on the ""sun"" branch and hopefully this can be integrated.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJeqojuAAoJEAwpOKXMq1MaM9AH/0FPPQdg9EpvoV7LWhAWAs+i
7CxEWT6vhoRFuAXB73Op3rtQEmLW+sQtS4v3V4+F9KzFhhHpj0xlI9ZL7Ua52WH/
M9YwoFyct1yZxP00hbB9oSxnEw7G2JrG8CmCYjPKcNUSUUbeRWtoV34POcGWrIuJ
0+NgBD2oDyhmRDZnR+5d5MnZWGFkQCoxCeWu2PcN1t+fO+CWhbaLdE7DUgY4nzdR
ETkR323jFrqqzC9yXvn7WPab9E9lOsjQkzx4+2U9p4zrVphtPkYsX1SX7ngunCny
rn7Qw8yWJsxMtwagHDD0ttZXwvXWdts/iSBnKiRDPr/gU1qfUtlKujTjILr+39M=
=7/ro
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,495,2020-04-30T17:25:18Z,2020-04-30T17:40:40Z,2020-04-30T17:40:40Z,MERGED,True,12,0,1,https://github.com/ckeen,Dump registers on OpenBSD/amd64 platforms,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/495,https://github.com/ckeen,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/495,Just a small debugging aid to dump the registers on this platform accordingly,Just a small debugging aid to dump the registers on this platform accordingly,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,495,2020-04-30T17:25:18Z,2020-04-30T17:40:40Z,2020-04-30T17:40:40Z,MERGED,True,12,0,1,https://github.com/ckeen,Dump registers on OpenBSD/amd64 platforms,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/495,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/495#issuecomment-622000944,Just a small debugging aid to dump the registers on this platform accordingly,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/cstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/cstes,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-642486172,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----","Why?
I don't think that the freefunc is declared as such in the old openssl version.

with the definition
-#define sk_GENERAL_NAME_freefunc void()(void)
the compile aborts with the SunPro C compiler.
platforms/unix/plugins/SqueakSSL/sqUnixOpenSSL.inc"", line 122: operands have incompatible types:
pointer to function(pointer to void) returning void "":"" pointer to function(pointer to struct GENERAL_NAME_st {int type, union  {..} d}) returning void
With the definition
+#define sk_GENERAL_NAME_freefunc void()(GENERAL_NAME)
compilation works.
The code
sqo_sk_GENERAL_NAME_pop_free(sANs, (sk_GENERAL_NAME_freefunc)sqo_sk_free);
expanded - with the old defintion of sk_GENERAL_NAME_freefunc -  to:
sk_pop_free ( ( ( _STACK * ) ( 1 ? ( sANs ) : ( struct stack_st_GENERAL_NAME * ) 0 ) ) , ( ( void ( * ) ( void * ) ) ( ( 1 ? ( ( void ( * ) ( void * ) ) sk_free ) : ( void ( * ) ( GENERAL_NAME * ) ) 0 ) ) ) );
with the new definition of sk_GENERAL_NAME_freefunc it expands to :
             sk_pop_free ( ( ( _STACK * ) ( 1 ? ( sANs ) : ( struct stack_st_GENERAL_NAME * ) 0 ) ) , ( ( void ( * ) ( void * ) ) ( ( 1 ? ( ( void ( * ) ( GENERAL_NAME * ) ) sk_free ) : ( void ( * ) ( GENERAL_NAME * ) ) 0 ) ) ) );

which the SUNpro compiler accepts.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/cstes,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-642492139,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----","@cstes Can you have a look at the defined OPENSSL_VERSION_NUMBER? The definition to void* is necessary in earlier versions of OpenSSL, only later versions have the stacks typed.

The header opensslv.h  has a definition # define OPENSSL_VERSION_NUMBER  0x100020ffL
That header is included by crypto.h.
In my case I observed that I had to change
--- a/platforms/unix/plugins/SqueakSSL/openssl_overlay.h
+++ b/platforms/unix/plugins/SqueakSSL/openssl_overlay.h
@@ -164,7 +164,7 @@
#define sqo_SSL_library_init SSL_library_init
#define sqo_SSL_load_error_strings SSL_load_error_strings
-#define sk_GENERAL_NAME_freefunc void()(void)
+#define sk_GENERAL_NAME_freefunc void()(GENERAL_NAME)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-642534358,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----",Then it is strange this did not come up earlier 😕,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/cstes,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-642540003,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----","Then it is strange this did not come up earlier 😕

I don't have the issue with ""gcc"" or with ""clang"".   Only with the SunPro C compiler.   Technically speaking I find it interesting to compile with the SunPro C compiler although that I can use gcc as an alternative.   By the way, the ""alternative"" that I also have is to patch the source before compilation, which is also fine by me, then I patch it for the SunPro C specific case.     However I submit the issue ""upstream"" so to speak to see what you think of it, maybe another solution exists.   I think the change from point to void to point to GENERAL_NAME looked fine to me, by the way that fix also works for me in the gcc and clang cases.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/krono,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-642547048,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----","yeah, you might be right…
I'm only afraid it might break openssl 0.9.9, but nobody should use that anyway¬
lets keep it",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/cstes,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-666519878,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
This is a reminder about
#496
Currently I apply manually this small patch before building the
OpenSmalltalk VM on Solaris 11.
My understanding from the feedback so far ""let's keep it"",
this means that it is (hopefully) acceptable to merge it into Cog.
That would be useful as I don't have to manually apply the patch any longer.
It's not a disaster if it cannot be merged into Cog for some reason,
as I can continue to just apply the patch of course,
but I'm submitting the patch with the hope that it can be integrated !
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfIvoPAAoJEAwpOKXMq1Ma8KMIAIVrViG/cNkzqHRp7B0HVCvI
BROJsxFyT5tvfMpB1wI3kj+QmMZ7aK7vnEg2q8kZ5f2rMFV7Zm+xk3gfO1qER1NK
HZV40QBNAld/QDekwK0KJ37hNPN7DBvfp9B4VVdlmX9B6YNbQjOL3TyS1T6jaXbe
XwaiktsQ0OGpWuxrYmjxLOHOkyfoFqJn/CmU6mbU9/wdw4Dh5qX2UKBmoaKXs8KU
FSyx5OS2b5PrXbXqsz0vrkBfevY92kiPY8p5BaGhh+qRvC2fyf/9qmvmHeTFw7aA
TcnKStO+7Cgn9hcE/pNhxrIGuJYLZbOShZkHoUfCsn6d34RPs89dCVgHxD4JqJw=
=+OzJ
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/cstes,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-686376469,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----","Reminder about this patch submitted a few months ago :
Change void * to GENERAL_NAME* in :
-#define sk_GENERAL_NAME_freefunc void()(void)
+#define sk_GENERAL_NAME_freefunc void()(GENERAL_NAME)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,496,2020-05-07T08:37:34Z,2020-09-03T10:31:28Z,2020-09-03T10:31:28Z,MERGED,True,96,19,2,https://github.com/cstes,Sunupdate,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/496#issuecomment-686381850,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
There's two updates for the SunOS port here.



Change #define sk_GENERAL_NAME_freefunc for SunPRO C compiler




SunOS: add a note in HowToBuild on pkg-config



The first change is for the OpenSSL SqueakSSL case of openssl 1.0.2,
to fix a type cast ... I think this potentially impacts all openssl 1.0.2 platforms that use --disable-dynamicopenssl but it seems OK (I think/hope).
For the second change this is a ""documentation"" update to the HowToBuild
""HOWTO"" documentation in the build.sunos directory; this has no further impact.
Thanks,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJes8ijAAoJEAwpOKXMq1MamV8H/2MrggX6VzRxGCdP40MN5vyE
HuynHVCC68dLneHoYSvaMi4IrVGXS6lYMGa8FfNZsWuVCZDW/rii1nZNH9qo6zCM
6QRekLwKOpp63tXGpKj3C/e8skju6cPvCd9LGWguSqPUVHwFCqOSawYI4OEckvvr
6Nvnqk7ER2yE/iuJSeWgIRLVq4kE/Aq3x8wAtf7zgITHhxr8fEG5+H/Y7icKHW1J
aTv2Z7jDHTcJqM/sEC0la2e8K2iDHkhKBim0K/PS1LtLgzZGAfycdmHJoq0KccRT
gXpEHjsDIEdfvWmIU9xjIiwsIdg5Cz7l5Y7ipb8s1l5cZKv4ct5JnwBl2+Rw+MY=
=oc8N
-----END PGP SIGNATURE-----",thanks. sorry…,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/tom95,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.","This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497#issuecomment-626213445,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.",This might be helpful to consider usable paths and might get around the problem of mismatching libraries on the search path: https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/unix/plugins/SqueakSSL/openssl_overlay.h#L471,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497#issuecomment-626213581,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.",As well as this: https://github.com/OpenSmalltalk/opensmalltalk-vm/blob/Cog/platforms/unix/plugins/SqueakSSL/openssl_overlay.h#L577,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/tom95,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497#issuecomment-626214967,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.","@krono Hm interesting. I'm quite surprised how complex that code appears. What corner cases is it intended to catch? Is this code also invoked when linking to OpenSSL at compile time or only at runtime?
My understanding of dlopen() was that if you provide the minimal amount of information (i.e. just the library name, no paths, no .so versions), it would just go head and figure out ""the right thing"" for you based on the user's system configuration. But the way this looks I'd assume that my guess is quite off here :D",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497#issuecomment-626219593,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.","My understanding of dlopen() was that if you provide the minimal amount of information (i.e. just the library name, no paths, no .so versions), it would just go head and figure out ""the right thing"" for you based on the user's system configuration. But the way this looks I'd assume that my guess is quite off here :D

Unless you're unlucky and it finds a library of the name you gave it but it has the wrong architecture, for example, whereas it whould have been found given the right paths. :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/tom95,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497#issuecomment-626220915,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.",I was under the impression that dlopen would be smart enough to figure out what libraries are compatible with its caller process. Do we happen to have setups where odd behavior can be reproduced so we could try and give this code a spin in place of the more complex one that's currently in squeakssl (and also to make sure this code will keep working for FFI under such circumstances)?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/krono,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497#issuecomment-626222702,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.","Paging @eliotmiranda; he might eludicate the problems, he put all the LD_ magic in the .sh because of some of these problems.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,497,2020-05-09T17:24:17Z,2020-10-19T20:35:27Z,2020-10-19T20:35:28Z,MERGED,True,12,5,1,https://github.com/tom95,unix: use dlopen's lookup mechanism when not specifying a path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497,https://github.com/krono,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/497#issuecomment-690596214,"This allows FFI modules to be specified in the same manner as you would when linking to them (-lGL --> GL, instead of /usr/lib/x86_64-linux-gnu/libGL.so as was required before this change, unless you manually placed /usr/lib/x86_64-linux-gnu in your LD_LIBRARY_PATH).
I don't know whether this will have unintended consequences for some use cases, since a lot of different systems end up calling this function. I tested the change for a while on Ubuntu 20.04 with no odd behavior occurring (but instead finally being able to load FFI modules without providing an absolute path or changing my LD_LIBRARY_PATH manually).
Some more insights on why this was necessary:
We have a long list of different ways of resolving a module. Among those is looking through the directories in the LD_LIBRARY_PATH envvar, which however only contains those directories I manually added, not all that ldconfig would consider. In our list of directories, we were already passing an empty string once, which would do nothing unless an absolute path was given, since we only proceed to look up a library if the given path is a valid directory. Providing dlopen with just a library name, without any path information, however, allows it to look through all directories as configured in ldconfig.",We should lookt at this one more time,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,499,2020-05-12T06:42:02Z,,2020-10-19T21:33:06Z,OPEN,False,21,122,6,https://github.com/marceltaeumel,Bump minimal supported Windows version to Windows Vista (0x0600).,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/499,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/499,"Also fixes a minor issue in MSVC Makefile for 64x64, which tried 0x0801 for Windows 8 and 0x1001 for Windows 10. The latter would actually be 0x0A00. See https://docs.microsoft.com/de-de/cpp/porting/modifying-winver-and-win32-winnt
Also in the Makefile for 64x64, define both _WIN32 and _WIN64. See https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros
Also in the Makefile for 64x64, define both WIN32 and WIN64 because those can be used to identify the Windows platform in application code such as in processors/IA32/bochs. I am not aware of any #ifdef WIN64 at the moment. Most code uses #ifdef _WIN64 to check for that.
Note that, having defined both _WIN32 and _WIN64, code for 32-bit and 64-bit must always begin with #ifdef _WIN64 and only then #elif _WIN32.
I think that the MSVC compiler defines _WIN32 and _WIN64 automatically. Yet, now it is documented in the Makefile.","Also fixes a minor issue in MSVC Makefile for 64x64, which tried 0x0801 for Windows 8 and 0x1001 for Windows 10. The latter would actually be 0x0A00. See https://docs.microsoft.com/de-de/cpp/porting/modifying-winver-and-win32-winnt
Also in the Makefile for 64x64, define both _WIN32 and _WIN64. See https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros
Also in the Makefile for 64x64, define both WIN32 and WIN64 because those can be used to identify the Windows platform in application code such as in processors/IA32/bochs. I am not aware of any #ifdef WIN64 at the moment. Most code uses #ifdef _WIN64 to check for that.
Note that, having defined both _WIN32 and _WIN64, code for 32-bit and 64-bit must always begin with #ifdef _WIN64 and only then #elif _WIN32.
I think that the MSVC compiler defines _WIN32 and _WIN64 automatically. Yet, now it is documented in the Makefile.",True,{'THUMBS_UP': ['https://github.com/LinqLover']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,499,2020-05-12T06:42:02Z,,2020-10-19T21:33:06Z,OPEN,False,21,122,6,https://github.com/marceltaeumel,Bump minimal supported Windows version to Windows Vista (0x0600).,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/499,https://github.com/marceltaeumel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/499#issuecomment-627771011,"Also fixes a minor issue in MSVC Makefile for 64x64, which tried 0x0801 for Windows 8 and 0x1001 for Windows 10. The latter would actually be 0x0A00. See https://docs.microsoft.com/de-de/cpp/porting/modifying-winver-and-win32-winnt
Also in the Makefile for 64x64, define both _WIN32 and _WIN64. See https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros
Also in the Makefile for 64x64, define both WIN32 and WIN64 because those can be used to identify the Windows platform in application code such as in processors/IA32/bochs. I am not aware of any #ifdef WIN64 at the moment. Most code uses #ifdef _WIN64 to check for that.
Note that, having defined both _WIN32 and _WIN64, code for 32-bit and 64-bit must always begin with #ifdef _WIN64 and only then #elif _WIN32.
I think that the MSVC compiler defines _WIN32 and _WIN64 automatically. Yet, now it is documented in the Makefile.",That error on TravisCI is misleading. All builds pass.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,499,2020-05-12T06:42:02Z,,2020-10-19T21:33:06Z,OPEN,False,21,122,6,https://github.com/marceltaeumel,Bump minimal supported Windows version to Windows Vista (0x0600).,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/499,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/499#issuecomment-690594179,"Also fixes a minor issue in MSVC Makefile for 64x64, which tried 0x0801 for Windows 8 and 0x1001 for Windows 10. The latter would actually be 0x0A00. See https://docs.microsoft.com/de-de/cpp/porting/modifying-winver-and-win32-winnt
Also in the Makefile for 64x64, define both _WIN32 and _WIN64. See https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros
Also in the Makefile for 64x64, define both WIN32 and WIN64 because those can be used to identify the Windows platform in application code such as in processors/IA32/bochs. I am not aware of any #ifdef WIN64 at the moment. Most code uses #ifdef _WIN64 to check for that.
Note that, having defined both _WIN32 and _WIN64, code for 32-bit and 64-bit must always begin with #ifdef _WIN64 and only then #elif _WIN32.
I think that the MSVC compiler defines _WIN32 and _WIN64 automatically. Yet, now it is documented in the Makefile.",wanna merge? care to first update build.win64x64/common/Makefile.msvc.tools ?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,500,2020-05-12T15:39:06Z,2020-05-12T20:19:07Z,2020-05-12T20:19:07Z,MERGED,True,6,184,6,https://github.com/marceltaeumel,Removes support for Windows CE,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/500,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/500,The existing support was maybe up to Windows Mobile 5. For a discussion see http://forum.world.st/Supporting-Windows-CE-tp5116478.html,The existing support was maybe up to Windows Mobile 5. For a discussion see http://forum.world.st/Supporting-Windows-CE-tp5116478.html,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,501,2020-05-12T17:47:38Z,2020-06-13T16:40:54Z,2020-06-13T16:40:54Z,MERGED,True,27,648,5,https://github.com/marceltaeumel,Removes support for NSPlugin and browser mode on win32,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/501,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/501,"The command line arguments ""browserWindow"" and ""browserWindow:"" are no longer recognized. For a discussion, see http://forum.world.st/Supporting-fBrowserMode-on-Windows-td5116489.html","The command line arguments ""browserWindow"" and ""browserWindow:"" are no longer recognized. For a discussion, see http://forum.world.st/Supporting-fBrowserMode-on-Windows-td5116489.html",True,{'THUMBS_UP': ['https://github.com/nicolas-cellier-aka-nice']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,502,2020-05-13T14:49:36Z,2020-05-13T19:54:37Z,2020-05-13T19:54:37Z,MERGED,True,0,7,1,https://github.com/marceltaeumel,Removes use of WCE_PREFERENCES,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/502,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/502,... which was part of the recently removed Windows CE support,... which was part of the recently removed Windows CE support,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,503,2020-05-17T11:49:14Z,2020-06-13T16:36:38Z,2020-06-13T16:36:38Z,MERGED,True,1,100,3,https://github.com/marceltaeumel,Removes USE_DIB_SECTIONS as part of Windows CE removal,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/503,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/503,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,504,2020-05-17T12:17:43Z,2020-10-19T20:30:42Z,2020-10-19T20:30:42Z,MERGED,True,3,20,4,https://github.com/marceltaeumel,Removes support for NO_VIRTUAL_MEMORY on win32 platform,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,504,2020-05-17T12:17:43Z,2020-10-19T20:30:42Z,2020-10-19T20:30:42Z,MERGED,True,3,20,4,https://github.com/marceltaeumel,Removes support for NO_VIRTUAL_MEMORY on win32 platform,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504,https://github.com/OpenSmalltalk-Bot,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504#issuecomment-629788560,,"Hi all!

The NO_VIRTUAL_MEMORY option is part of the ""#ifdef MINIMAL"" way to compile the osvm for Windows. It just works with non-spur VMs. I am not sure whether it has practical use at all. Is it actually working these days? Somebody using it?

Best,

Marcel
Am 17.05.2020 14:18:06 schrieb Marcel Taeumel <notifications@github.com>:

You can view, comment on, or merge this pull request online at:

#504

…
-- Commit Summary --

* Removes support for NO_VIRTUAL_MEMORY on win32 platform
-- File Changes --

M platforms/win32/vm/sqWin32.h (1)
M platforms/win32/vm/sqWin32Alloc.c (4)
M platforms/win32/vm/sqWin32Alloc.h (3)
M platforms/win32/vm/sqWin32Main.c (15)
-- Patch Links --

https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504.patch
https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504.diff

--
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
#504





You can view, comment on, or merge this pull request online at:

  #504 [#504]


Commit Summary


* Removes support for NO_VIRTUAL_MEMORY on win32 platform



File Changes


*
M
platforms/win32/vm/sqWin32.h [https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504/files#diff-ea77aa3cf89ad27f0980e8a8b857fb1c]
(1)


*
M
platforms/win32/vm/sqWin32Alloc.c [https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504/files#diff-fcd2c9257ebbecf7b699784c5b385ebf]
(4)


*
M
platforms/win32/vm/sqWin32Alloc.h [https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504/files#diff-e4db00a23433d2c53a476706d23bdb24]
(3)


*
M
platforms/win32/vm/sqWin32Main.c [https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504/files#diff-b2861f6fae73ea2883296b82603a39eb]
(15)




Patch Links:


* https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504.patch [https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504.patch]

* https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504.diff [https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/504.diff]



—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub [#504], or unsubscribe [https://github.com/notifications/unsubscribe-auth/AIJPEWZ2MQR33FUVZR3KSULRR7IXJANCNFSM4NDLQIFQ].",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-643603279,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Ehm, all the pharo builds are failing. Is this my fault?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-650434309,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.",@nicolas-cellier-aka-nice Would you mind to have a short look at this? :-),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-650611001,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Concerning Pharo, you did not break anything.
External libraries are precompiled on the CI in some cache.
When version number of those libraries are update, the cache is not automatically cleared.
Therefore, the failure is postponed until the cache is cleared, which happens on a regular schedule apparently.
Concerning sq, we did not want to change each and every prefix to osvm when we switched squeak vm to osvm.
It would have touched each and every file and the VMMaker and all plugin repositories, for not much added value.
Who knows how many regressions could have been un-noticed.
So do not consider sq* as Squeak only.
Concerning DND, it's beyond my skill, I've never studied its logic nor particular sequence of events.
What you say sounds logical, and consistent VM behavior is desirable though.
So if you say that you compiled, used the VM and saw no regression in an official release (say drop a .png in Squeak 5.3), I can do the merge (and squash).
Ideally we should do it on an old version of pharo too (7?), but at one moment, pharo people shall help us to help them, and this is not the trend. The INRIA team forked, and when I request community help on Opensmalltalk-vm-dev ML, I ear nothing but a big silence, I guess no one is interested. Newspeak sounds less like a problem, because they use their own form of FFI for windows system integration rather than plugin.",True,{'THUMBS_UP': ['https://github.com/LinqLover']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-650783530,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Thank you for the detailed explanations, @nicolas-cellier-aka-nice!

you say that you compiled, used the VM and saw no regression in an official release (say drop a .png in Squeak 5.3)

Yes, I confirm that.

Newspeak sounds less like a problem, because they use their own form of FFI for windows system integration rather than plugin.

What is about Cuis?

consistent VM behavior is desirable though

Hm, please don't merge yet. I just found further small inconsistencies in this implementation I would like to fix within this PR. I will update the description when I am done and mention you again. :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/codefrau,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655021654,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Regarding code ownership - there currently is nobody specifically tending to the unix VM, or the X window display system. Most of the code is more than 15 years old, written by Ian Piumarta. Others and I contributed smaller parts over the years. That history got lost when switching from svn to git.
As for DND, at some point around 2007 it was working fully - you could drag pictures and rich text into Squeak (e.g. a paragraph from Wikipedia), and you could drag e.g. a morph out of Squeak into an office document (where it would appear as a bitmap image) or onto another Squeak (where it would appear as fully functioning object, all the scripts etc. were being serialized). The latter part might be why there are squeak-specific DnD events.
This was used for full interoperability inside of the Sugar OS on the OLPC laptop. E.g. you could drag a morph out of Etoys onto the Sugar Frame Clipboard, switch apps, and drag it into the other app. I used to be the maintainer of Squeak/Etoys for Sugar but haven’t touched it in years.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655369005,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","@codefrau This is very interesting to hear! For starters, my goal is to translate every incoming drag into a transfer morph that can be handled natively by any morph. However, reviving the full potential of DnD will be a very interesting follow-up project. If you have further information on how this could break all without anyone noticing, please tell me. :-) Do you know whether all platforms already supported this?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/codefrau,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655400308,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","I don't remember if all platforms supported this. Your best bet is to try with Etoys from Squeakland. This one here includes VMs for Win, Mac, and Linux: http://www.squeakland.org/content/installers/Etoys-To-Go-5.0.zip",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655430452,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Which VM version is that? On Windows, DnD works as well as in the latest OSVM. Unfortunately, I cannot find a 64 bit version for Linux, so I cannot test Etoys To Go on Linux ...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/tom95,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655433619,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Hey @LinqLover, you should be able to get it to run on a 64bit linux as well. When running it will report which libraries are currently not installed in 32bit, on my system this was the only step necessary to get it to run: sudo apt install libxrender1:i386 libpangocairo-1.0-0:i386
In general, once you know which libraries cannot be loaded, you can run for example ldd Contents/Linux-i686/so.vm-display-X11 to see which of its dependencies are missing and then install those via apt-get with the :i386 suffix.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655441484,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","@tom95 The message only I'm seeing is:
$ ./etoys.sh
./etoys.sh: line 107: ./Contents/Linux-i686/etoys: cannot execute binary file: Exec format error

ldd gives me not a dynamic executable. Does native Linux support more backward compatibility in terms of architecture than a virtualized Linux? I am using Ubuntu in Windows Subsystem for Linux.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/tom95,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655447927,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Oh okay, in that case this might be your best bet: https://superuser.com/questions/1407730/run-32-bit-application-on-ubuntu-on-windows-subsystem-for-linux",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,13,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655479646,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","@tom95 Great to know that WSL2 supports this. I still have to set up this, thank you :)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/codefrau,14,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655665680,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Inside Etoys-To-Go are old 32 Bit interpreter VMs, from before Cog was around. You need those to be able to run the Etoys image. On Linux, there used to be a simple way to install the 32 bit support even on a 64 bit system, but I don’t know what the current status is.
That Etoys image might have some more support code for DnD handling than current Squeak. Not everything has been properly integrated back. @timfel did the bulk of that work.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/OpenSmalltalk-Bot,15,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655838834,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","On Wed, Jul 08, 2020 at 10:50:57AM -0700, Vanessa Freudenberg wrote:

 Inside Etoys-To-Go are old 32 Bit interpreter VMs, from before Cog was around. You need those to be able to run the Etoys image. On Linux, there used to be a simple way to install the 32 bit support even on a 64 bit system, but I don???t know what the current status is.

 That Etoys image might have some more support code for DnD handling than current Squeak. Not everything has been properly integrated back. @timfel did the bulk of that work.

The old interpreter VM in the Etoys-To_Go distribution still works fine
on Ubuntu 16.04 LTS.  I have 32-bit libraries installed as described in
Tom Beckman's earlier reply.

If you want to run Etoys on a native 64-bit VM, follow the instructions
at http://wiki.squeak.org/squeak/6354. It takes about 5 or 10 minutes to
do this, so allow yourself an hour of free time before you start, because
nothing ever goes right the first time

As a side note, Windows does a very good job of providing run-time backward
compatibility for old applications, so a Squeak running on a very old Windows
VM will almost always work. On Unix systems in general, and Linux in particular,
there is very good source-level portability but backward compatibility
for old compiled executables is not as good. The supporting runtime libraries
tend to get updated regularly, and after 5 or 10 years you can easily end up
with a compiled executable with runtime linkages to libraries that are no
longer present.

Dave",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/OpenSmalltalk-Bot,16,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-655906975,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","On 09.07.2020, at 03:17, David T. Lewis ***@***.***> wrote:


 On Wed, Jul 08, 2020 at 10:50:57AM -0700, Vanessa Freudenberg wrote:
>
> Inside Etoys-To-Go are old 32 Bit interpreter VMs, from before Cog was around. You need those to be able to run the Etoys image. On Linux, there used to be a simple way to install the 32 bit support even on a 64 bit system, but I don???t know what the current status is.
>
> That Etoys image might have some more support code for DnD handling than current Squeak. Not everything has been properly integrated back. @timfel did the bulk of that work.
>

 The old interpreter VM in the Etoys-To_Go distribution still works fine
 on Ubuntu 16.04 LTS.  I have 32-bit libraries installed as described in
 Tom Beckman's earlier reply.

 If you want to run Etoys on a native 64-bit VM, follow the instructions
 at http://wiki.squeak.org/squeak/6354. It takes about 5 or 10 minutes to
 do this, so allow yourself an hour of free time before you start, because
 nothing ever goes right the first time

 As a side note, Windows does a very good job of providing run-time backward
 compatibility for old applications, so a Squeak running on a very old Windows
 VM will almost always work. On Unix systems in general, and Linux in particular,
 there is very good source-level portability but backward compatibility
 for old compiled executables is not as good. The supporting runtime libraries
 tend to get updated regularly, and after 5 or 10 years you can easily end up
 with a compiled executable with runtime linkages to libraries that are no
 longer present.
BTW: Fedora ships a 64bit squeak interpreter vm that can run 323bit closure  and non-closure images.
Except for a broken Rome-plugin, this works very fine for Etoys 5.0…

Best regards
	-Tobias",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,17,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-656864568,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Thanks for all the hints, I will try that soon! However, reviving the full DnD potential will surely happen in separate threads and PRs. This one is ready now, again, at least from my side. Please see the updated description above. I hereby confirm that the latest version again does not show any regressions in an up to date Squeak image. @nicolas-cellier-aka-nice Would you mind to review/squash-merge again as soon as the checks have completed? :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,18,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-668689833,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
I tested compiling this branch 'sqUnixXdnd' on Solaris;
the sqUnixXdnd code seems to compiles but how can I test please ?
In order to compile I have to apply a small patch, but that is always the case.
(see PR #496)
It is an interesting topic, to hear and read about the history of the
Unix VM and X11 support, which obviously is very much relevant to Solaris.
However when you write
""this does not show any regressions in an up to date Squeak image"",
what exactly did you test please ?
Currently it seems I can drag a file into Squeak,
and this creates as PluggableSystemWindow object.
I don't seem to be able to drag anything out of Squeak.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfKYlWAAoJEAwpOKXMq1MapMEH/iHRtguF8NLJsLMeECjDq9WD
6jmpOJLSx3yNti9uc4dONaHSLLPCNO3QhbdLEAx5V9oHHjU9DVteIX5EWPNPMz5M
Rz0sO6uuKmdhptUzgIfxQCggm/C2hbVJZX4B72J6fGItpkyJTXUkl2tiwrKbFsZL
J2YUErvZo9NEo9bzhihI+uYGhMTieGeyfJ7jYLL1H6TwEkaA1A93S8L66DjrtOEh
Jg/nKkgcOAme9nSeaEjhOm/YazXdBeqej2e6uuD+8I4uVQ0BrdGivfDiMbKx8aOR
K12CYMHNTFg96K5ti9P62CgY5cyLwor3YOFSogjDXJZppp0Uy2o6yy3UnO4VCT8=
=CerU
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,19,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-668748316,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Actually on further inspection, there seems to exist a variable
if (getenv(""SQUEAK_NOXDND""))          useXdnd= 0;
when set , this disables the dnd support.
Indeed when export SQUEAK_NOXDND=1, the drag action of a file into Squeak,
is not doing anything.
But essentially I wonder (from the discussion) so far, what you are trying,
to change with this dnd PR and how I could try to test it.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfKaSSAAoJEAwpOKXMq1MaC2QH/jIVUBRVOBBVqdF4tdpTxHUn
/H/quqS2MeD/MOTuV0UzWod41hNk9at//WiMM13mj4LAaWJyVcUFivLo4/68HUTe
IH3O3rC6RjztymoxD/kF6yT4nq7/Ay56706g1d/B9VPnl6Xk8z4bYuF4M1QvzG08
EwylFyc8tvxJiPs6TVmg0Hs/lx0Y2KPpdqnvlC3IC5U2dKI411rc4T4iWiQZix/U
IBbu+75gzTnOJlphNTPlRcesb6nEmqo57zfomBjW/GbUk28URtVoSnVmZZmvEUA2
4LZC2DpNdnZKA4dfdeQbBrvP7ndcHmSU6XjxAYTDWcKaCczj9/um4ChUbHQXnSs=
=y80j
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,20,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675442508,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Hi David,
thanks for your interest and sorry for the delay, I was on holiday!

what exactly did you test please ?

As you wrote, you can drag a file into the image and an external drop handler will handle it (or a dialog window will appear if there are multiple handlers). You can also drag multiple files into the image and they will be processed sequentially. So this is the only ""acceptance test"" I did so far.
From a lower-level perspective, you can manipulate HandMorph >> #generateDropFilesEvent: and insert a Transcript showln: {dragType. numFiles}. somewhere to watch the exact events generated by the VM. This PR removes duplicate/wrong events from the recorded list. You can also make sure that the following works:

drag a file over the image, but do not drop it, then drag it away - does the image still work?
after that, drag another file into the image and drop it - is the correct file displayed?
try to drag some text into the image - this attempt should be rejected but the image should still accept other files after that


But essentially I wonder (from the discussion) so far, what you are trying, to change with this dnd PR and how I could try to test it.

In the first step, I only cleaned up the list of DND events generated by the X11 OSVM as described in the PR message. Depending on this PR, I am extending #generateDropFilesEvent: to also process the DragMove and DragLeave events. This allows it not only to drag files into the world itself but wrap them into a Squeak-like TransferMorph that can be dropped into morph or tool by reusing the existing #acceptDroppingMorph: interface. For example, you can drop a file directly into the Workspace without any other modifications. Marcel's idea! :-)

I don't seem to be able to drag anything out of Squeak.

That's right, it might have worked on some platform in some ancient past, but nowadays it does not appear to work. But this would be interesting next steps, as well as dragging non-file stuff such as text or images into the image. Stay tuned! :-)
Best,
Christoph",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,21,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675600340,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I tested the following, with a VM compiled from the sqUnixXdnd branch:
git remote -v
origin	https://github.com/LinqLover/opensmalltalk-vm.git (fetch)
origin	https://github.com/LinqLover/opensmalltalk-vm.git (push)
git branch
Cog

sqUnixXdnd

Tested:

drag a file over the image, but do not drop it, then drag it away - does the image still work?

Yes it works , the cursor temporarily changes to a 'drag with +' sign when,
I drag the file1 over the VM display, and drag it away (without drop),
and the Squeak VM continues to function.

after that, drag another file into the image and drop it - is the correct file displayed?

Yes, I think so.  I have files file1 and file2 and first drag file1 without
drop, and then I drag file2, when I drop file2 it displays the file2 path.

try to drag some text into the image - this attempt should be rejected but the image should still accept other files after that

The cursor changes again to a drag with ""+"" sign but when I drop the text,
which I drag out of an external text editor, nothing seems to happen in Squeak.
The image continues to accept other files after that.
What also seems to work for me is to drag a folder (directory) into Squeak.
I get some sort of Unix file browser for the files/directories in that folder
(in Squeak).
I think it is an interesting PR (pull request).
But basically I don't understand what you are trying to fix.
But obviously there must exist bugs in there ...
However basically you seem to be ""cleaning up"" while I don't understand
what effective bug you are trying to fix.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAlVAAoJEAwpOKXMq1MaFXkIAMA8YImzs9vBj7J68M3guJdS
+TfyKqjYaPJI6Vy+bcBeZxj9D2DlpqxG0AH/hRdccAFQ+iucql+ohJC4CeQ4CLT1
PlQjUfQO0XtShAkWCf1XP90PMbjaXZcnPfgCHCzC4XiDe09AVUeCSc0acwdg8JRe
ZGkcWt/r+HxRVvLyAr83JcNRyUQwei5U3pf5LS5v/QLv1WeqdKZJPLfTbYg+VDVZ
R0SZICNldynYBD1RInaiFiiwNknOI/CryAF8w/yj4zPV3trNDh3d54Yu1bgHdfj/
J05AD4vhGYNfUTzx+mn0Kz2vqb5k1RKWDgVX8yFJWI3cgqtTMjpcq0R0VBd7LFo=
=lLKy
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,22,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675600441,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I tested the following, with a VM compiled from the sqUnixXdnd branch:
git remote -v
origin	https://github.com/LinqLover/opensmalltalk-vm.git (fetch)
origin	https://github.com/LinqLover/opensmalltalk-vm.git (push)
git branch
Cog

sqUnixXdnd

Tested:

drag a file over the image, but do not drop it, then drag it away - does the image still work?

Yes it works , the cursor temporarily changes to a 'drag with +' sign when,
I drag the file1 over the VM display, and drag it away (without drop),
and the Squeak VM continues to function.

after that, drag another file into the image and drop it - is the correct file displayed?

Yes, I think so.  I have files file1 and file2 and first drag file1 without
drop, and then I drag file2, when I drop file2 it displays the file2 path.

try to drag some text into the image - this attempt should be rejected but the image should still accept other files after that

The cursor changes again to a drag with ""+"" sign but when I drop the text,
which I drag out of an external text editor, nothing seems to happen in Squeak.
The image continues to accept other files after that.
What also seems to work for me is to drag a folder (directory) into Squeak.
I get some sort of Unix file browser for the files/directories in that folder
(in Squeak).
I think it is an interesting PR (pull request).
But basically I don't understand what you are trying to fix.
But obviously there must exist bugs in there ...
However basically you seem to be ""cleaning up"" while I don't understand
what effective bug you are trying to fix.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAlVAAoJEAwpOKXMq1MaFXkIAMA8YImzs9vBj7J68M3guJdS
+TfyKqjYaPJI6Vy+bcBeZxj9D2DlpqxG0AH/hRdccAFQ+iucql+ohJC4CeQ4CLT1
PlQjUfQO0XtShAkWCf1XP90PMbjaXZcnPfgCHCzC4XiDe09AVUeCSc0acwdg8JRe
ZGkcWt/r+HxRVvLyAr83JcNRyUQwei5U3pf5LS5v/QLv1WeqdKZJPLfTbYg+VDVZ
R0SZICNldynYBD1RInaiFiiwNknOI/CryAF8w/yj4zPV3trNDh3d54Yu1bgHdfj/
J05AD4vhGYNfUTzx+mn0Kz2vqb5k1RKWDgVX8yFJWI3cgqtTMjpcq0R0VBd7LFo=
=lLKy
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,23,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675600442,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I tested the following, with a VM compiled from the sqUnixXdnd branch:
git remote -v
origin	https://github.com/LinqLover/opensmalltalk-vm.git (fetch)
origin	https://github.com/LinqLover/opensmalltalk-vm.git (push)
git branch
Cog

sqUnixXdnd

Tested:

drag a file over the image, but do not drop it, then drag it away - does the image still work?

Yes it works , the cursor temporarily changes to a 'drag with +' sign when,
I drag the file1 over the VM display, and drag it away (without drop),
and the Squeak VM continues to function.

after that, drag another file into the image and drop it - is the correct file displayed?

Yes, I think so.  I have files file1 and file2 and first drag file1 without
drop, and then I drag file2, when I drop file2 it displays the file2 path.

try to drag some text into the image - this attempt should be rejected but the image should still accept other files after that

The cursor changes again to a drag with ""+"" sign but when I drop the text,
which I drag out of an external text editor, nothing seems to happen in Squeak.
The image continues to accept other files after that.
What also seems to work for me is to drag a folder (directory) into Squeak.
I get some sort of Unix file browser for the files/directories in that folder
(in Squeak).
I think it is an interesting PR (pull request).
But basically I don't understand what you are trying to fix.
But obviously there must exist bugs in there ...
However basically you seem to be ""cleaning up"" while I don't understand
what effective bug you are trying to fix.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAlVAAoJEAwpOKXMq1MaFXkIAMA8YImzs9vBj7J68M3guJdS
+TfyKqjYaPJI6Vy+bcBeZxj9D2DlpqxG0AH/hRdccAFQ+iucql+ohJC4CeQ4CLT1
PlQjUfQO0XtShAkWCf1XP90PMbjaXZcnPfgCHCzC4XiDe09AVUeCSc0acwdg8JRe
ZGkcWt/r+HxRVvLyAr83JcNRyUQwei5U3pf5LS5v/QLv1WeqdKZJPLfTbYg+VDVZ
R0SZICNldynYBD1RInaiFiiwNknOI/CryAF8w/yj4zPV3trNDh3d54Yu1bgHdfj/
J05AD4vhGYNfUTzx+mn0Kz2vqb5k1RKWDgVX8yFJWI3cgqtTMjpcq0R0VBd7LFo=
=lLKy
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,24,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675600518,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I tested the following, with a VM compiled from the sqUnixXdnd branch:
git remote -v
origin	https://github.com/LinqLover/opensmalltalk-vm.git (fetch)
origin	https://github.com/LinqLover/opensmalltalk-vm.git (push)
git branch
Cog

sqUnixXdnd

Tested:

drag a file over the image, but do not drop it, then drag it away - does the image still work?

Yes it works , the cursor temporarily changes to a 'drag with +' sign when,
I drag the file1 over the VM display, and drag it away (without drop),
and the Squeak VM continues to function.

after that, drag another file into the image and drop it - is the correct file displayed?

Yes, I think so.  I have files file1 and file2 and first drag file1 without
drop, and then I drag file2, when I drop file2 it displays the file2 path.

try to drag some text into the image - this attempt should be rejected but the image should still accept other files after that

The cursor changes again to a drag with ""+"" sign but when I drop the text,
which I drag out of an external text editor, nothing seems to happen in Squeak.
The image continues to accept other files after that.
What also seems to work for me is to drag a folder (directory) into Squeak.
I get some sort of Unix file browser for the files/directories in that folder
(in Squeak).
I think it is an interesting PR (pull request).
But basically I don't understand what you are trying to fix.
But obviously there must exist bugs in there ...
However basically you seem to be ""cleaning up"" while I don't understand
what effective bug you are trying to fix.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAlVAAoJEAwpOKXMq1MaFXkIAMA8YImzs9vBj7J68M3guJdS
+TfyKqjYaPJI6Vy+bcBeZxj9D2DlpqxG0AH/hRdccAFQ+iucql+ohJC4CeQ4CLT1
PlQjUfQO0XtShAkWCf1XP90PMbjaXZcnPfgCHCzC4XiDe09AVUeCSc0acwdg8JRe
ZGkcWt/r+HxRVvLyAr83JcNRyUQwei5U3pf5LS5v/QLv1WeqdKZJPLfTbYg+VDVZ
R0SZICNldynYBD1RInaiFiiwNknOI/CryAF8w/yj4zPV3trNDh3d54Yu1bgHdfj/
J05AD4vhGYNfUTzx+mn0Kz2vqb5k1RKWDgVX8yFJWI3cgqtTMjpcq0R0VBd7LFo=
=lLKy
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,25,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675600519,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I tested the following, with a VM compiled from the sqUnixXdnd branch:
git remote -v
origin	https://github.com/LinqLover/opensmalltalk-vm.git (fetch)
origin	https://github.com/LinqLover/opensmalltalk-vm.git (push)
git branch
Cog

sqUnixXdnd

Tested:

drag a file over the image, but do not drop it, then drag it away - does the image still work?

Yes it works , the cursor temporarily changes to a 'drag with +' sign when,
I drag the file1 over the VM display, and drag it away (without drop),
and the Squeak VM continues to function.

after that, drag another file into the image and drop it - is the correct file displayed?

Yes, I think so.  I have files file1 and file2 and first drag file1 without
drop, and then I drag file2, when I drop file2 it displays the file2 path.

try to drag some text into the image - this attempt should be rejected but the image should still accept other files after that

The cursor changes again to a drag with ""+"" sign but when I drop the text,
which I drag out of an external text editor, nothing seems to happen in Squeak.
The image continues to accept other files after that.
What also seems to work for me is to drag a folder (directory) into Squeak.
I get some sort of Unix file browser for the files/directories in that folder
(in Squeak).
I think it is an interesting PR (pull request).
But basically I don't understand what you are trying to fix.
But obviously there must exist bugs in there ...
However basically you seem to be ""cleaning up"" while I don't understand
what effective bug you are trying to fix.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAlVAAoJEAwpOKXMq1MaFXkIAMA8YImzs9vBj7J68M3guJdS
+TfyKqjYaPJI6Vy+bcBeZxj9D2DlpqxG0AH/hRdccAFQ+iucql+ohJC4CeQ4CLT1
PlQjUfQO0XtShAkWCf1XP90PMbjaXZcnPfgCHCzC4XiDe09AVUeCSc0acwdg8JRe
ZGkcWt/r+HxRVvLyAr83JcNRyUQwei5U3pf5LS5v/QLv1WeqdKZJPLfTbYg+VDVZ
R0SZICNldynYBD1RInaiFiiwNknOI/CryAF8w/yj4zPV3trNDh3d54Yu1bgHdfj/
J05AD4vhGYNfUTzx+mn0Kz2vqb5k1RKWDgVX8yFJWI3cgqtTMjpcq0R0VBd7LFo=
=lLKy
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,26,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675605340,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
By the way I did the same 3 tests with a VM which I compiled from the
OpenSmalltalk Cog branch (not from the PR).
I seem to be having the same results.
David.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAwiAAoJEAwpOKXMq1MaE+4H/RIo+hfJjnwlvuMkSoRkkayi
uE2Qb/k8HnqKtH1Sz3r8xO77ciEcqctCqVzrpx5Z4iL0zhdQrpPHj5Ds7fBWU0lP
SHPlA/RffxhMXutZPwPk5K9roreuA96E5c6xAgCl1nT45LtyaQGZLbn7enzlK4xp
9aeGK4E1fxdnu93qj3zPGb8jrpnE5KlN1YMs9Q0Ynt+nW/gcftAsAGGX/32nTnvA
ipeSG5C8u9pdk3DCkdV8/LVrqlKWcWBnANEKcDw97Tr7zOlc4IIlFJAA1p2E+6Ns
rOIF0YKBKGVix9kI+lvssVM4TT/q5gsNpz4vKMrc3SGGAi8r/OHNpWLWBotBlC0=
=PSvQ
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,27,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675605753,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
By the way I did the same 3 tests with a VM which I compiled from the
OpenSmalltalk Cog branch (not from the PR).
I seem to be having the same results.
David.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAwiAAoJEAwpOKXMq1MaE+4H/RIo+hfJjnwlvuMkSoRkkayi
uE2Qb/k8HnqKtH1Sz3r8xO77ciEcqctCqVzrpx5Z4iL0zhdQrpPHj5Ds7fBWU0lP
SHPlA/RffxhMXutZPwPk5K9roreuA96E5c6xAgCl1nT45LtyaQGZLbn7enzlK4xp
9aeGK4E1fxdnu93qj3zPGb8jrpnE5KlN1YMs9Q0Ynt+nW/gcftAsAGGX/32nTnvA
ipeSG5C8u9pdk3DCkdV8/LVrqlKWcWBnANEKcDw97Tr7zOlc4IIlFJAA1p2E+6Ns
rOIF0YKBKGVix9kI+lvssVM4TT/q5gsNpz4vKMrc3SGGAi8r/OHNpWLWBotBlC0=
=PSvQ
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,28,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675605756,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
By the way I did the same 3 tests with a VM which I compiled from the
OpenSmalltalk Cog branch (not from the PR).
I seem to be having the same results.
David.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAwiAAoJEAwpOKXMq1MaE+4H/RIo+hfJjnwlvuMkSoRkkayi
uE2Qb/k8HnqKtH1Sz3r8xO77ciEcqctCqVzrpx5Z4iL0zhdQrpPHj5Ds7fBWU0lP
SHPlA/RffxhMXutZPwPk5K9roreuA96E5c6xAgCl1nT45LtyaQGZLbn7enzlK4xp
9aeGK4E1fxdnu93qj3zPGb8jrpnE5KlN1YMs9Q0Ynt+nW/gcftAsAGGX/32nTnvA
ipeSG5C8u9pdk3DCkdV8/LVrqlKWcWBnANEKcDw97Tr7zOlc4IIlFJAA1p2E+6Ns
rOIF0YKBKGVix9kI+lvssVM4TT/q5gsNpz4vKMrc3SGGAi8r/OHNpWLWBotBlC0=
=PSvQ
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,29,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675605759,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
By the way I did the same 3 tests with a VM which I compiled from the
OpenSmalltalk Cog branch (not from the PR).
I seem to be having the same results.
David.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAwiAAoJEAwpOKXMq1MaE+4H/RIo+hfJjnwlvuMkSoRkkayi
uE2Qb/k8HnqKtH1Sz3r8xO77ciEcqctCqVzrpx5Z4iL0zhdQrpPHj5Ds7fBWU0lP
SHPlA/RffxhMXutZPwPk5K9roreuA96E5c6xAgCl1nT45LtyaQGZLbn7enzlK4xp
9aeGK4E1fxdnu93qj3zPGb8jrpnE5KlN1YMs9Q0Ynt+nW/gcftAsAGGX/32nTnvA
ipeSG5C8u9pdk3DCkdV8/LVrqlKWcWBnANEKcDw97Tr7zOlc4IIlFJAA1p2E+6Ns
rOIF0YKBKGVix9kI+lvssVM4TT/q5gsNpz4vKMrc3SGGAi8r/OHNpWLWBotBlC0=
=PSvQ
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,30,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-675606014,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
By the way I did the same 3 tests with a VM which I compiled from the
OpenSmalltalk Cog branch (not from the PR).
I seem to be having the same results.
David.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPAwiAAoJEAwpOKXMq1MaE+4H/RIo+hfJjnwlvuMkSoRkkayi
uE2Qb/k8HnqKtH1Sz3r8xO77ciEcqctCqVzrpx5Z4iL0zhdQrpPHj5Ds7fBWU0lP
SHPlA/RffxhMXutZPwPk5K9roreuA96E5c6xAgCl1nT45LtyaQGZLbn7enzlK4xp
9aeGK4E1fxdnu93qj3zPGb8jrpnE5KlN1YMs9Q0Ynt+nW/gcftAsAGGX/32nTnvA
ipeSG5C8u9pdk3DCkdV8/LVrqlKWcWBnANEKcDw97Tr7zOlc4IIlFJAA1p2E+6Ns
rOIF0YKBKGVix9kI+lvssVM4TT/q5gsNpz4vKMrc3SGGAi8r/OHNpWLWBotBlC0=
=PSvQ
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,31,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-676129131,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Hi David,
thanks for sharing your observations, this fits in with my own results.

By the way I did the same 3 tests with a VM which I compiled from the OpenSmalltalk Cog branch (not from the PR).
I seem to be having the same results.

So there appears not to be any regression.

But basically I don't understand what you are trying to fix.

Here is how you can observe the erroneous under-the-hood behavior this PR aims to fix:

In a recent Squeak image, browse HandMorph >> #generateDropFilesEvent: and insert the following line after the assignment of dragType:
Transcript showln: dragType.

Open a Transcript
Drag a file into the image

Transcript output on an X11 platform using the latest released plugin version:
1 (dragEnter)
2 (dragMove)
2 (dragMove)
...
2 (dragMove)
3 (dragLeave)
4 (dragDrop)
3 (dragLeave)

Transcript when compiling the plugin with the proposed patch applied:
1 (dragEnter)
2 (dragMove)
2 (dragMove)
...
2 (dragMove)
4 (dragDrop)

The current image implementation does not care about the additional, false dragLeave events, but my changeset which I am planning to put into the inbox will do so.
Is this comprehensible? 😅
PS: For some reasons all your posts arrive multiple times in the repository. Also, they would be easier to read if you could use codefences (```) :-)
Best,
Christoph",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,32,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-676543318,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
First of all, sorry if you receive this multiple times,
most likely this is because I click the ""Comment"" button multiple times.
OK, I modified the HandMorph -> private events -> generateDropFilesEvent:
as you indicated, from the Squeak6.0alpha-19793-64bit.image for the tests.
I also tried with Squeak 4,
I have the same result when I try with the Squeak4.6-15012 (Squeak 4 VM).
When I drag and drop a file ""myfile"" into the Squeak window,
the Transcript shows:
1
2
2
...
2
2
3
4
3
and the object for ""myfile"" is created.
If I drag ""myfile"" into the Squeak window and then out of it (without drop):
1
2
2
...
2
2
3
On the other hand if I use the VM, with this pull request, compiled :
First when drag and drop ""myfile"" :
1
2
2
...
2
2
4
Then when dragging ""myfile"" without drop :
1
2
2
...
2
2
3
So this confirms what you described ...
However to really test this pull request I think it is required to test
the code (changeset) which you are planning to put into the ""inbox"".
Maybe I missed something  but in the description of this pull request,
you could give a pointer to the changeset you are developing.
Maybe if I can download it from some place, I can test it.
I now realise that you are actually talking about a combination of 2 things.

a change in the VM
a changeset of some Squeak code that depends on that the VM change

Correct ?
If so, I'd certainly would be interested in trying out the changeset.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPVl3AAoJEAwpOKXMq1MaVr8IAJLUPrZgBudoLM5GR7owR0/4
/vev7wuQvttCw3Sn1ib/G3podJywutiErXdugX3tA28hqyQvY9bFLzHK1+JjDyL1
ALhyg+uPzl+KOwtVEKBkAF2HO7dokDnr9eFIrSZyc917tb5IqnFW1yOBCdeVXqkn
JCCIi0nmU4psafmdEk8gVbQb4PdkNtdrgSck1GO1N2VyAkhiHyMNv+dJZs3ES2NZ
Id+t0+k3V1er5TJRnaOJj5vBluutMZqTD5yk4iZ1UGcR12wLgKGxENnFgLeIpPK0
WQI/0oHZUx8V5sP5id215U9bt/SkT8IXoDGQ54LC8Clv9JOjP6SkUH3K4j54Cs8=
=a1r+
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,33,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-676554176,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Thanks again for testing! :-)
I can share with you a working copy of my changeset, but it is still WIP. However, I am convinced that both changes in VM + image are decoupled enough and do not need to be released together. Even without any image change, I think that the old X11 event generation, saying ""dragLeave dragDrop dragLeave"" was erroneous by itself.
From my point of view, this PR is ready to merge as stated in July. :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,34,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-677495161,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I'm just commenting on this out of interest, I cannot say anything on
whether this PR is going to be merged, as I have nothing to do with that.
As far as I can see this looks a reasonable change, but we don't know,
how the original author(s) think about it, whether they had a reason for
their implementation.
But the context of your work is a little bit clearer now to me.
Basically you have dropFiles-examples.13.cs  dropFiles3.14.cs changesets.
In my image I can ""fileIn"" those changesets by Tools->FileList and then
clicking ""fileIn"".
My understanding is now that you need some VM changes/support for the
dropFiles3.14.cs changeset, i.e. the underlying VM has some behavior,
that you want to change for the dropFiles changes.
If it's useful I can do further testing on this X11 platform,
as from what I understand this change is relevant to the Solaris X11 support.
For the moment - this may be a Solaris specific problem - when I test,
drag and drop after fileIn of the dropFiles changeset I get the following,
in a debugger:

--- The full stack ---
FileDirectory class>>requestDropDirectory:
[] in HandMorph>>collectDropFilesAndDirectories:
Interval>>collect:
HandMorph>>collectDropFilesAndDirectories:
HandMorph>>generateDropFilesEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in MorphicProject>>spawnNewProcess
[] in FullBlockClosure(BlockClosure)>>newProcess

There may be Solaris specific issues with the FileDirectory I don't know.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPkVcAAoJEAwpOKXMq1MaPcAH/R0nTxahFVzPv6abeDbA9gMh
GTKEXZBpQ/dEXCLedu1IVtUFnqqK2wdJJRt2HmhRZD3sxoT3YqnZfyJkip5A9mFt
+npBuMRsCAAu2suvmOpUMJQK6HTb9/hAJiAgNEDSnQ9RUFutIBo0+6MEONGj8vGF
WuJm31p9b8cAqLhi5twA3CcKC2P8PNkF+QS8RHDSO2SMJpEuGaTgxbCYkXJPEp15
o1cdZPqKcIlJGsf23B4V2XBWI38YxVOcMUS5CYzyACi8s/NnrCS5hNeAqzLX27QH
dLhTZipSvQlcwkS7sz1X1Xm5soVmNbVwZIhkUK4ydmWGiElgbl0ZkQgJtijgY7k=
=BNaM
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,35,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-677553371,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","David,

My understanding is now that you need some VM changes/support for the dropFiles3.14.cs changeset, i.e. the underlying VM has some behavior, that you want to change for the dropFiles changes.

Exactly.

For the moment - this may be a Solaris specific problem - when I test, drag and drop after fileIn of the dropFiles changeset I get the following, in a debugger:

This could be interesting. May I assume that the VM you used was compiled based on this PR? What is the exact error message you see?
I tested PR + changeset both in WSL + VcXsrv and a true Ubuntu VM and it worked fine for me. Maybe it's a Solaris problem, I don't know ...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/cstes,36,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-677633726,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I compiled the VM from your repository branch ""sqUnixXdnd""
(I applied one small patch the patch from PR #496 required on Solaris)
It's possible that there is some issue with the Solaris support,
as this has not been used for a long time I think,
and I'm only recently using it , but it's quite usable.
So when I use that VM and I use the Tools -> File List , I can ""fileIn""
the changesets that you posted.
Then after that when I drag a file ""myfile"" into the Squeak desktop,
I get into a debugger.
When I right click on the debugger I can select ""copy bug report to clipboard"".
UndefinedObject(Object)>>error:
Receiver: nil
Arguments and temporary variables:
aString: 	'Instances of UndefinedObject are not indexable'
Receiver's instance variables:
nil
UndefinedObject(Object)>>errorNotIndexable
Receiver: nil
Arguments and temporary variables:
Receiver's instance variables: 

nil
UndefinedObject(Object)>>size
Receiver: nil
Arguments and temporary variables:
Receiver's instance variables: 

nil
FileDirectory class>>on:
Receiver: FileDirectory
Arguments and temporary variables:
pathString: 	nil
pathName: 	nil
parentName: 	nil
Receiver's instance variables:
superclass: 	Object
methodDict: 	a MethodDictionary(size 125)
format: 	65537
instanceVariables: 	#('pathName')
organization: 	('enumeration' containingDirectory directoryEntries directoryEntry...etc...
subclasses: 	{UnixFileDirectory . AcornFileDirectory . MacFileDirectory . DosFileDirectory...etc...
name: 	#FileDirectory
classPool: 	a Dictionary(#DefaultDirectory->UnixFileDirectory on './stes/s...etc...
sharedPools: 	nil
environment: 	Smalltalk
category: 	#'Files-Directories'
FileDirectory class>>requestDropDirectory:
Receiver: FileDirectory
Arguments and temporary variables:
dropIndex: 	1
potentialDirectory: 	nil
Receiver's instance variables:
superclass: 	Object
methodDict: 	a MethodDictionary(size 125)
format: 	65537
instanceVariables: 	#('pathName')
organization: 	('enumeration' containingDirectory directoryEntries directoryEntry...etc...
subclasses: 	{UnixFileDirectory . AcornFileDirectory . MacFileDirectory . DosFileDirectory...etc...
name: 	#FileDirectory
classPool: 	a Dictionary(#DefaultDirectory->UnixFileDirectory on './stes/s...etc...
sharedPools: 	nil
environment: 	Smalltalk
category: 	#'Files-Directories'
[] in HandMorph>>collectDropFilesAndDirectories:
Receiver: a HandMorph(1013123)
Arguments and temporary variables:
<
Receiver's instance variables:
bounds: 	660@444 corner: 676@460
owner: 	a PasteUpMorph(2434915) [world]
submorphs: 	#()
fullBounds: 	660@444 corner: 676@460
color: 	Color blue
extension: 	a MorphExtension (1604074) [eventHandler = an EventHandler]  [other:...etc...
mouseFocus: 	nil
keyboardFocus: 	a TextMorphForEditView(3274035)
eventListeners: 	nil
mouseListeners: 	nil
keyboardListeners: 	nil
eventCaptureFilters: 	nil
mouseCaptureFilters: 	nil
keyboardCaptureFilters: 	a WeakArray(a HandMorph(1013123))
mouseClickState: 	nil
mouseOverHandler: 	a MouseOverHandler
targetOffset: 	68@9
lastMouseEvent: 	[660@444 mouseUp ( red ) 111157]
damageRecorder: 	a DamageRecorder
cacheCanvas: 	nil
cachedCanvasHasHoles: 	true
temporaryCursor: 	nil
temporaryCursorOffset: 	nil
hardwareCursor: 	nil
hasChanged: 	true
savedPatch: 	nil
userInitials: 	''
lastEventBuffer: 	#(1 111157 660 444 0 0 0 1)
genieGestureProcessor: 	nil
keyboardInterpreter: 	an UTF32InputInterpreter
externalDropMorph: 	nil
Interval>>collect:
Receiver: (1 to: 1)
Arguments and temporary variables:
aBlock: 	[closure] in HandMorph>>collectDropFilesAndDirectories:
nextValue: 	1
result: 	#(nil)
i: 	1
iLimiT: 	1
Receiver's instance variables:
start: 	1
stop: 	1
step: 	1
HandMorph>>collectDropFilesAndDirectories:
Receiver: a HandMorph(1013123)
Arguments and temporary variables:
numFiles: 	1
Receiver's instance variables:
bounds: 	660@444 corner: 676@460
owner: 	a PasteUpMorph(2434915) [world]
submorphs: 	#()
fullBounds: 	660@444 corner: 676@460
color: 	Color blue
extension: 	a MorphExtension (1604074) [eventHandler = an EventHandler]  [other:...etc...
mouseFocus: 	nil
keyboardFocus: 	a TextMorphForEditView(3274035)
eventListeners: 	nil
mouseListeners: 	nil
keyboardListeners: 	nil
eventCaptureFilters: 	nil
mouseCaptureFilters: 	nil
keyboardCaptureFilters: 	a WeakArray(a HandMorph(1013123))
mouseClickState: 	nil
mouseOverHandler: 	a MouseOverHandler
targetOffset: 	68@9
lastMouseEvent: 	[660@444 mouseUp ( red ) 111157]
damageRecorder: 	a DamageRecorder
cacheCanvas: 	nil
cachedCanvasHasHoles: 	true
temporaryCursor: 	nil
temporaryCursorOffset: 	nil
hardwareCursor: 	nil
hasChanged: 	true
savedPatch: 	nil
userInitials: 	''
lastEventBuffer: 	#(1 111157 660 444 0 0 0 1)
genieGestureProcessor: 	nil
keyboardInterpreter: 	an UTF32InputInterpreter
externalDropMorph: 	nil
HandMorph>>generateDropFilesEvent:
Receiver: a HandMorph(1013123)
Arguments and temporary variables:
evtBuf: 	#(3 58791 1 803 1 0 1 1)
position: 	803@1
buttons: 	1
modifiers: 	0
stamp: 	58791
numFiles: 	1
dragType: 	1
filesAndDirectories: 	nil
oldButtons: 	nil
Receiver's instance variables:
bounds: 	660@444 corner: 676@460
owner: 	a PasteUpMorph(2434915) [world]
submorphs: 	#()
fullBounds: 	660@444 corner: 676@460
color: 	Color blue
extension: 	a MorphExtension (1604074) [eventHandler = an EventHandler]  [other:...etc...
mouseFocus: 	nil
keyboardFocus: 	a TextMorphForEditView(3274035)
eventListeners: 	nil
mouseListeners: 	nil
keyboardListeners: 	nil
eventCaptureFilters: 	nil
mouseCaptureFilters: 	nil
keyboardCaptureFilters: 	a WeakArray(a HandMorph(1013123))
mouseClickState: 	nil
mouseOverHandler: 	a MouseOverHandler
targetOffset: 	68@9
lastMouseEvent: 	[660@444 mouseUp ( red ) 111157]
damageRecorder: 	a DamageRecorder
cacheCanvas: 	nil
cachedCanvasHasHoles: 	true
temporaryCursor: 	nil
temporaryCursorOffset: 	nil
hardwareCursor: 	nil
hasChanged: 	true
savedPatch: 	nil
userInitials: 	''
lastEventBuffer: 	#(1 111157 660 444 0 0 0 1)
genieGestureProcessor: 	nil
keyboardInterpreter: 	an UTF32InputInterpreter
externalDropMorph: 	nil
HandMorph>>processEvents
Receiver: a HandMorph(1013123)
Arguments and temporary variables:
evt: 	nil
evtBuf: 	#(3 58791 1 803 1 0 1 1)
type: 	3
hadAny: 	false
Receiver's instance variables:
bounds: 	660@444 corner: 676@460
owner: 	a PasteUpMorph(2434915) [world]
submorphs: 	#()
fullBounds: 	660@444 corner: 676@460
color: 	Color blue
extension: 	a MorphExtension (1604074) [eventHandler = an EventHandler]  [other:...etc...
mouseFocus: 	nil
keyboardFocus: 	a TextMorphForEditView(3274035)
eventListeners: 	nil
mouseListeners: 	nil
keyboardListeners: 	nil
eventCaptureFilters: 	nil
mouseCaptureFilters: 	nil
keyboardCaptureFilters: 	a WeakArray(a HandMorph(1013123))
mouseClickState: 	nil
mouseOverHandler: 	a MouseOverHandler
targetOffset: 	68@9
lastMouseEvent: 	[660@444 mouseUp ( red ) 111157]
damageRecorder: 	a DamageRecorder
cacheCanvas: 	nil
cachedCanvasHasHoles: 	true
temporaryCursor: 	nil
temporaryCursorOffset: 	nil
hardwareCursor: 	nil
hasChanged: 	true
savedPatch: 	nil
userInitials: 	''
lastEventBuffer: 	#(1 111157 660 444 0 0 0 1)
genieGestureProcessor: 	nil
keyboardInterpreter: 	an UTF32InputInterpreter
externalDropMorph: 	nil
[] in WorldState>>doOneCycleNowFor:
Receiver: a WorldState
Arguments and temporary variables:
<
Receiver's instance variables:
hands: 	{a HandMorph(1013123)}
activeHand: 	a HandMorph(1013123)
viewBox: 	0@0 corner: 1008@680
canvas: 	a FormCanvas on: DisplayScreen(1008x680x32)
damageRecorder: 	a DamageRecorder
stepList: 	a Heap(StepMessage(#onBlinkCursor -> a TextMorphForEditView(3274035))...etc...
lastStepTime: 	3775378560621
lastStepMessage: 	nil
lastCycleTime: 	3775378560643
commandHistory: 	a CommandHistory
alarms: 	a MorphicAlarmQueue
lastAlarmTime: 	3775378560621
remoteServer: 	nil
multiCanvas: 	nil
interCycleDelay: 	a Delay(20 msecs)
Array(SequenceableCollection)>>do:
Receiver: {a HandMorph(1013123)}
Arguments and temporary variables:
aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
index: 	1
indexLimiT: 	1
Receiver's instance variables:
{a HandMorph(1013123)}
WorldState>>handsDo:
Receiver: a WorldState
Arguments and temporary variables:
aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
Receiver's instance variables:
hands: 	{a HandMorph(1013123)}
activeHand: 	a HandMorph(1013123)
viewBox: 	0@0 corner: 1008@680
canvas: 	a FormCanvas on: DisplayScreen(1008x680x32)
damageRecorder: 	a DamageRecorder
stepList: 	a Heap(StepMessage(#onBlinkCursor -> a TextMorphForEditView(3274035))...etc...
lastStepTime: 	3775378560621
lastStepMessage: 	nil
lastCycleTime: 	3775378560643
commandHistory: 	a CommandHistory
alarms: 	a MorphicAlarmQueue
lastAlarmTime: 	3775378560621
remoteServer: 	nil
multiCanvas: 	nil
interCycleDelay: 	a Delay(20 msecs)
WorldState>>doOneCycleNowFor:
Receiver: a WorldState
Arguments and temporary variables:
aWorld: 	a PasteUpMorph(2434915) [world]
capturingGesture: 	#(false)
Receiver's instance variables:
hands: 	{a HandMorph(1013123)}
activeHand: 	a HandMorph(1013123)
viewBox: 	0@0 corner: 1008@680
canvas: 	a FormCanvas on: DisplayScreen(1008x680x32)
damageRecorder: 	a DamageRecorder
stepList: 	a Heap(StepMessage(#onBlinkCursor -> a TextMorphForEditView(3274035))...etc...
lastStepTime: 	3775378560621
lastStepMessage: 	nil
lastCycleTime: 	3775378560643
commandHistory: 	a CommandHistory
alarms: 	a MorphicAlarmQueue
lastAlarmTime: 	3775378560621
remoteServer: 	nil
multiCanvas: 	nil
interCycleDelay: 	a Delay(20 msecs)
WorldState>>doOneCycleFor:
Receiver: a WorldState
Arguments and temporary variables:
aWorld: 	a PasteUpMorph(2434915) [world]
Receiver's instance variables:
hands: 	{a HandMorph(1013123)}
activeHand: 	a HandMorph(1013123)
viewBox: 	0@0 corner: 1008@680
canvas: 	a FormCanvas on: DisplayScreen(1008x680x32)
damageRecorder: 	a DamageRecorder
stepList: 	a Heap(StepMessage(#onBlinkCursor -> a TextMorphForEditView(3274035))...etc...
lastStepTime: 	3775378560621
lastStepMessage: 	nil
lastCycleTime: 	3775378560643
commandHistory: 	a CommandHistory
alarms: 	a MorphicAlarmQueue
lastAlarmTime: 	3775378560621
remoteServer: 	nil
multiCanvas: 	nil
interCycleDelay: 	a Delay(20 msecs)
PasteUpMorph>>doOneCycle
Receiver: a PasteUpMorph(2434915) [world]
Arguments and temporary variables:
Receiver's instance variables: 
	bounds: 	0@0 corner: 1008@680
	owner: 	nil
	submorphs: 	{a PluggableSystemWindow<Error: Instances of UndefinedObject are not...etc...
	fullBounds: 	0@0 corner: 1008@680
	color: 	(Color r: 0.251 g: 0.259 b: 0.267)
	extension: 	a MorphExtension (931082) [eventHandler = an EventHandler]  [other: ...etc...
	borderWidth: 	0
	borderColor: 	(Color r: 0.515 g: 0.181 b: 0.263)
	presenter: 	an EtoysPresenter (3945455)
	model: 	a MorphicModel(3522854)
	cursor: 	1
	padding: 	3
	backgroundMorph: 	nil
	turtleTrailsForm: 	nil
	turtlePen: 	nil
	lastTurtlePositions: 	nil
	isPartsBin: 	nil
	indicateCursor: 	nil
	wantsMouseOverHalos: 	nil
	worldState: 	a WorldState
	griddingOn: 	nil

[] in MorphicProject>>spawnNewProcess
Receiver: a MorphicProject (HomeProject) in a PasteUpMorph(2434915) [world]
Arguments and temporary variables:
Receiver's instance variables: 
	dependents: 	nil
	world: 	a PasteUpMorph(2434915) [world]
	uiManager: 	a MorphicUIManager
	changeSet: 	a ChangeSet named HomeProject
	transcript: 	a TranscriptStream
	parentProject: 	a MVCProject (RootProject) in a ControlManager
	previousProject: 	nil
	displayDepth: 	32
	viewSize: 	151@132
	thumbnail: 	Form(151x132x32)
	nextProject: 	nil
	projectParameters: 	an IdentityDictionary(#PrevailingProjectFlags->an IdentityDictionary...etc...
	version: 	nil
	urlList: 	nil
	lastDirectory: 	nil
	lastSavedAtSeconds: 	nil
	projectPreferenceFlagDictionary: 	an IdentityDictionary(#showSharedFlaps->true #showWorldMainDockingBar...etc...
	resourceManager: 	a ResourceManager
	uiProcess: 	a Process in nil

[] in FullBlockClosure(BlockClosure)>>newProcess
Receiver: [closure] in MorphicProject>>spawnNewProcess
Arguments and temporary variables:
Receiver's instance variables: 
	outerContext: 	MorphicProject>>spawnNewProcess
	startpcOrMethod: 	([] in MorphicProject>>#spawnNewProcess ""a CompiledBlock(15491...etc...
	numArgs: 	0
	receiver: 	a MorphicProject (HomeProject) in a PasteUpMorph(2434915) [world]


--- The full stack ---
UndefinedObject(Object)>>error:
UndefinedObject(Object)>>errorNotIndexable
UndefinedObject(Object)>>size
FileDirectory class>>on:
FileDirectory class>>requestDropDirectory:
[] in HandMorph>>collectDropFilesAndDirectories:
Interval>>collect:
HandMorph>>collectDropFilesAndDirectories:
HandMorph>>generateDropFilesEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in MorphicProject>>spawnNewProcess
[] in FullBlockClosure(BlockClosure)>>newProcess

However it's possible that the changeset is using some functionality,
that is somehow not working well on Solaris,
so perhaps it can be independently tested (unrelated to the changes to
the VM or the changeset for dropFile).
That's possible ...
Is it correct to assume that the problem is somehwere in
requestDropDirectory: dropIndex
| potentialDirectory |
potentialDirectory := self on: (FileStream primDropRequestFileName: dropIndex).
^ potentialDirectory exists ifTrue: [potentialDirectory]
The method on: with the FileStream seems to raise an error for me.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfPmtKAAoJEAwpOKXMq1MaBtMIAKqN0Rb+/q38E9cyj6WI0SdW
gGjWhuu1zgs4u/wQQtzDskh3nI57QbN73ytqDPsrX6eRickiYT8MvRQ+ohDqcmfJ
HuNwW1esgL9wM1XGhQ5HOVrs+YxheFeqx5ng8rQqMnHGv82PMUh0zBODY3Us6FMg
fDq+n0rE2GFMFh7E8PoUR7h84O/wg3oXb3tx5g09ebEo8Ftlz+DCGgnCqg2FNhH+
ORNmqRPTIe6y/eJfWdODpCovOnxld///VO6z1Rc1foyGXo5jDAf2N2vdjAH2CXDe
aKXo0RheCV2vM/Jl/lRcYWJh2A/2YvtxbGnb8Dqyz0gQxK2KA6bAg9N4ZyzzX+o=
=2iQV
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,37,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-677676218,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","Oh, I just have realized that I forgot to mention that #514 is another dependency of the changeset. Would you mind to merge it as well into your working copy and compiling the VM again? 😅",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,508,2020-06-12T19:24:34Z,2020-08-21T12:33:12Z,2020-08-21T18:08:27Z,MERGED,True,18,14,1,https://github.com/LinqLover,sqUnixXdnd: Don't record SQDragLeave when XdndDrop is handled,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508,https://github.com/LinqLover,38,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/508#issuecomment-678420198,"A bit of context: For Squeak, I am currently implementing full-fledged handling of DND events sent by the host system. Actually, Squeak only handles SQDragDrop at the moment.
However, when logging all received DND events on the image side, I discovered that whenever a file is dropped into the VM, after the last SQDragMove an SQDragLeave is received before the eventual SQDragDrop. And after that, a third SQDragDrop was generated. This looks very suspicious to me. Neither does the same happen on any other platform (tested on Win32, too), nor does it appear logical to me in any way. If I release the mouse button over the image, the drag did not leave, so a ""drag leave"" should not be recorded.
Amongst some refactoring, this MR makes sure that in dndInDrop(), exactly one SQDragLeave event is recorded, and only if the drop was not successful. Additionally, in case of any (compatibility) problem while receiving the drop in dndGetSelection, record a SQDragDrop event with numFiles == 0 rather than a SQDragLeave event. This aligns the behavior to the handling of unsupported drag contents such as texts.
Here is some helpful documentation about the XDND protocol: https://www.freedesktop.org/wiki/Specifications/XDND/
Please review carefully, as I am a bloody VM newbie and this is my very first commit to this repo! :-) Mentioning @eliotmiranda who appears to be the code owner of this plugin, according to the file's history.
Todos:

 Think about backward compatibility: Squeak did not respect any of the drag events but SQDragDrop until today, and I'm reworking that handling ATM, so there will be no problem. But are there other users of this plugin that could rely on the old behavior which I consider a bug? Or does the sq in the prefix unambiguously stand for Squeak?
Edit: We're not aware of any depending users.
 Are there any non-automated tests I could run to make sure that this change cannot break anything else?
Edit: Nope, not today.


Merger note: Please squash this commit when merging, I do myself not want to see my low-level commit messages in the master's gitlog.","@cstes Sorry for the delay, Marcel was so kind to merge this by now. I resolved the conflict in #514. Feel free to compile again based on #514 and tell me whether it works for you :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,511,2020-06-18T11:26:55Z,2020-10-28T16:04:29Z,2020-10-28T16:04:29Z,MERGED,True,5,5,1,https://github.com/kksubbu,update url to always use current stable release,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/511,https://github.com/kksubbu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/511,"Building spurreader.image was taking a long time because getlatesttrunkimage.sh was still using 5.2. I changed the URL to use current_stable so that the script doesn't have to change with each release.
The curl also needed a -L option to follow any redirects.","Building spurreader.image was taking a long time because getlatesttrunkimage.sh was still using 5.2. I changed the URL to use current_stable so that the script doesn't have to change with each release.
The curl also needed a -L option to follow any redirects.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,513,2020-07-14T16:04:36Z,2020-07-19T07:14:27Z,2020-07-19T07:14:27Z,MERGED,True,139,31,36,https://github.com/smalltalking,Add missing Cryptography plugins to squeak builds,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/513,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/513,"DESPlugin, MD5Plugin and SHA2Plugin as external plugins","DESPlugin, MD5Plugin and SHA2Plugin as external plugins",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/cstes,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678099206,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hello,
I've tried building from the ""dnd-unify-numfiles"" branch.
This works for me : I can compile a ""squeak-stack-spur"" VM from it,
and when I drag a file into the Squeak desktop, this works,
I don't get into the debugger as I currently have with the sqUnixXdnd branch.
However when I try to merge dnd-unify-numfiles into sqUnixXdnd I get
Auto-merging platforms/unix/vm-display-X11/sqUnixXdnd.c
CONFLICT (content): Merge conflict in platforms/unix/vm-display-X11/sqUnixXdnd.c
Automatic merge failed; fix conflicts and then commit the result.
So is it please possible that you merge yourself and advise on what change
you really want to make to sqUnixXdnd.c ?
Also is there documentation on the dropFiles changeset on how to use the
new class DemoDropTool, subclass of Model.
This would be useful to see how I can test the DemoDropTool.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfP3zkAAoJEAwpOKXMq1MarjkH/1CVvbshbyyiPh5VeLsCEVAs
PcL1JR0YyM/4wzmlIu8PaWyfMICLRh43V1TIXT6gBD1iB/2D30LIdN4Y/20lkJY8
k6W3fqYbQOm5alKw53bq6oobS2brscFThP2mqGJtcObf0NVNBLmmb9lPW++bXUdQ
A7KINPCz6kXd/fOcgJMzC9oRXLLJq/wvs2w6MWP69+mBSesIyzAXtgkcde2lbX9G
PK+StOk3bjbCSz8TbdlTBE+KQ5FFhigoJIsOOeM7CrSEKWlg0rZIrt+8itLhxdpp
0yro6iPRpjju4uVIBuN/0zxN2K8GlCMUtwT7parnbKI5Jb2kbExX0OXn0E7C33k=
=v6j1
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/LinqLover,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678460513,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","So is it please possible that you merge yourself

Done

Also is there documentation on the dropFiles changeset on how to use the new class DemoDropTool, subclass of Model.

Good hint! Just do ToolBuilder open. DemoDropTool and then try to drop things into the tool. It's really only a demo made to show the different drop hooks we have got.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/cstes,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678614247,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I compiled a new VM from the updated branch:
squeak -version
5.0-202008211759-dnd-unify-numfiles  Sat Aug 22 09:57:02 CEST 2020 cc [Production Spur 64-bit VM]
StackInterpreter VMMaker.oscog-eem.2792 uuid: f914b421-12d3-48b8-b510-833495378c66 Aug 22 2020
VM: 202008211759-dnd-unify-numfiles stes@gecko:src/thiede/opensmalltalk
Date: Fri Aug 21 19:59:53 2020 CommitHash: dae0bf5
Plugins: 202008211759-dnd-unify-numfiles stes@gecko:src/thiede/opensmalltalk
Then I used the image Squeak6.0alpha-19687-64bit.image.
I loaded (with Tools -> File List ""FileIn"") the changeset DropFiles3.14.cs
(and DropFiles-examples.cs).
When I drag and drop 2 files myfile1 and myfile2 into the Squeak desktop,
it works, I get ""PluggableSystemWindow"" objects without getting into the
debugger.
If I then (following your previous instructions) browse HandMorph,
and go to private events #generateDropFilesEvent: and insert the showln:
and when I then drag again the files, it works (without debugger), and
the Transcript shows:
1
2
...
2
2
4
So that seems to work.
Can you explain more how to use the DemoDropTool ?
How to open the ToolBuilder and get from there to the DemoDropTool ...
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfQNVuAAoJEAwpOKXMq1Mal6YIAKVbbsAyJWhW6jZF2MTZ4vCV
CB7R9mZBmRbSCcF6QD5bUfzq5CXBsnEaQWuswdupdfyEzlUK1l/3vmQUhIiRHFYN
i5X9YQdwb5wvbuHMr346zRQoRACMPlWOQnUTXJn42TGHmKKrSa1ug+wZEVcmb3Bo
Z1KheFmCERjkbv4lcb8KERKG5RfdoZyy+MIQnEoBVLNIyx3CVIRlGXVKXet1s47/
yi0g/B2MKBnhYEopDXAGJrio4+KadnNrKxQVhgBsJJxIdgciFOnCFHXfkEPEE0hi
NtlEuQalotcl2MhQjobMbRmZwgyLtOKqrkysPoTxULN1/CL4fWfjX29DR2rx1mM=
=JKWg
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/cstes,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678614248,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I compiled a new VM from the updated branch:
squeak -version
5.0-202008211759-dnd-unify-numfiles  Sat Aug 22 09:57:02 CEST 2020 cc [Production Spur 64-bit VM]
StackInterpreter VMMaker.oscog-eem.2792 uuid: f914b421-12d3-48b8-b510-833495378c66 Aug 22 2020
VM: 202008211759-dnd-unify-numfiles stes@gecko:src/thiede/opensmalltalk
Date: Fri Aug 21 19:59:53 2020 CommitHash: dae0bf5
Plugins: 202008211759-dnd-unify-numfiles stes@gecko:src/thiede/opensmalltalk
Then I used the image Squeak6.0alpha-19687-64bit.image.
I loaded (with Tools -> File List ""FileIn"") the changeset DropFiles3.14.cs
(and DropFiles-examples.cs).
When I drag and drop 2 files myfile1 and myfile2 into the Squeak desktop,
it works, I get ""PluggableSystemWindow"" objects without getting into the
debugger.
If I then (following your previous instructions) browse HandMorph,
and go to private events #generateDropFilesEvent: and insert the showln:
and when I then drag again the files, it works (without debugger), and
the Transcript shows:
1
2
...
2
2
4
So that seems to work.
Can you explain more how to use the DemoDropTool ?
How to open the ToolBuilder and get from there to the DemoDropTool ...
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfQNVuAAoJEAwpOKXMq1Mal6YIAKVbbsAyJWhW6jZF2MTZ4vCV
CB7R9mZBmRbSCcF6QD5bUfzq5CXBsnEaQWuswdupdfyEzlUK1l/3vmQUhIiRHFYN
i5X9YQdwb5wvbuHMr346zRQoRACMPlWOQnUTXJn42TGHmKKrSa1ug+wZEVcmb3Bo
Z1KheFmCERjkbv4lcb8KERKG5RfdoZyy+MIQnEoBVLNIyx3CVIRlGXVKXet1s47/
yi0g/B2MKBnhYEopDXAGJrio4+KadnNrKxQVhgBsJJxIdgciFOnCFHXfkEPEE0hi
NtlEuQalotcl2MhQjobMbRmZwgyLtOKqrkysPoTxULN1/CL4fWfjX29DR2rx1mM=
=JKWg
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/LinqLover,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678633557,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","Can you explain more how to use the DemoDropTool ?
How to open the ToolBuilder and get from there to the DemoDropTool ...

The ToolBuilder is not a tool but a class that can build tools for you.
The correct snippet is:
ToolBuilder open: DemoDropTool.
Insert this into any text field and press d to do it.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/cstes,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678657975,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
This results in a doesNotUnderstand: message for DemoDropTool,
it does not recognize the #buildListWith: selector.
Does it work for you ?
I get

--- The full stack ---
DemoDropTool(Object)>>doesNotUnderstand: #buildListWith:
[] in DemoDropTool>>buildWith:
[] in DemoDropTool(Model)>>buildWindowWith:specs:
Array(SequenceableCollection)>>do:
DemoDropTool(Model)>>buildWindowWith:specs:
DemoDropTool>>buildWith:
DemoDropTool class(Model class)>>buildWith:
MorphicToolBuilder(ToolBuilder)>>build:
MorphicToolBuilder>>open:
ToolBuilder class>>open:

David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfQUCzAAoJEAwpOKXMq1Ma68cH/RmTsvmtMaSpoGXaddKM/Ez9
WLqsGE3FQZboHGJ+D9wV6mDB/wIfH9r8pqv93VeHHPeX5g2M76MAF/2KlUzey6KL
RkKvxtAOtVxyWyzL2CdSQnwjIcRmuzLnkg05x2HODbWEuHWmib7yzH9+XZhBfbDm
67qaiDC+MXnP2ETlJ5G0zgMkAbByYdiIN1iPLv//dKz/Vxj6ZE/fFK7HUupm2tDa
NszB5Y8r1fdZsvSzzYbin0878h9DJoqwWiVKaRgfx3+4CSr0hUDZL9yss5OTJA6C
QbSfD6Nxo5i4jdPF/EIWvV4ORnvlrKkEx5CLLgMHAMcypJxN1RG/ekCRu6uOQns=
=uAio
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/LinqLover,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678675122,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","Oh, so sorry, I have no idea how this method has flown off my changeset. :-( If you still have patience, you could try this one:
dropFiles3.31.zip",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/cstes,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-678744946,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
This new package dropFiles is working:  ToolBuilder open:DemoDropTool
works, it displays some numbers (1 ... 10) although I'm not sure how to use it.
In any case the VM with dnd-unify-numfiles seems to be working.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfQiYvAAoJEAwpOKXMq1Ma8fkH/2kuQkoWRehBEpttp3/VNM9c
4QoYMRhRAHRlr/flGMZgNpWSGtEOZIrZdSAz8+Y0YBKEz6s7vV3sX46/mxb2TNP0
k6RZ5oNL/bWhoCAteEzIK0WXWRWWTpZLai6nScntc5kg5u2uvrH6m2VzjRJaKp3b
qGX7//OeF/3gVWX+l9PNf+oPM7jMui/KlAE+XIfN+9BwaTsGDRgMV4HMS9vsyMcz
dYYAUmd5tyfOKVHPXuqcFvihqmx6xP5m/9ptP4nx6vyf9ck4Xj28rCbj97JucaNm
0dQoUO0Z8Vnbct7OcAmzhLAPS2yQ08EAiRLf1BDrNZlAtDY2R53HKzgbGz1Uvw4=
=Emqj
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/LinqLover,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-679058647,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","You can use the DemoDropTool by dragging objects into each of the three panes, and to show that the drop works, it displays each dragged items. For example, try to drag a text to number 5 of the list and the 5 will be replaced by the text. Together with this PR, you can drag a file from the host system directly in this tool.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,514,2020-08-19T11:55:46Z,2020-09-02T13:56:32Z,2020-10-22T20:52:53Z,MERGED,True,6,6,1,https://github.com/LinqLover,DropPlugin: Unify numFiles fallback value before DragDrop has been recorded,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514,https://github.com/LinqLover,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/514#issuecomment-684732808,"This PR aligns the default numFiles value recorded for DragEnter, DragMove, and DragLeave events recorded by the X11 implementation of the DropPlugin, which was 1, to the default value used by the Win32 implementation of the plugin, which is 0.
The motivation for this change is to unify the event protocol along with different platforms. It would technically be highly expensive and questionable to find out this value before the drop event has been recorded. Concretely, Win32 does not support this at all without switching the library, and on Linux, this would require a performance-extensive ping-pong of ""Target to source: Please hand a copy of all dragged files"", ""Source to target: I converted these files for you"", ""Target to source: Thank you, but I was only interested into their total number"" messages. (However, interestingly macOS appears to support this (I could not yet test it) and https://github.com/codefrau/SqueakJS/ could do so, too.)
While pursuing the same master plan, this PR is not dependent nor reverse-dependent on #508. They can be merged independently of each other.
Please review and merge if you agree. I hereby confirm that I did not observe any regressions when dragging files or folders into a recent Squeak image.","@marceltaeumel @nicolas-cellier-aka-nice Friendly reminder that this PR is complete, conflict-free, and ready to merge :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,515,2020-08-23T03:09:04Z,2020-08-30T00:48:50Z,2020-08-30T00:48:50Z,MERGED,True,4237,79,15,https://github.com/KenDickey,vm-display-fbdev,39,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/515,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/515,"Note: mvm needs TLC for framebuffer builds.
Armbian does not use MUSL, but -DMUSL was harmless.
ToDo: mouse wheel events not yet converted to arrow codes.
Armbian-Notes.txt and AlpineLinux-Notes.txt need to be migrated or merged into HowToBuild","Note: mvm needs TLC for framebuffer builds.
Armbian does not use MUSL, but -DMUSL was harmless.
ToDo: mouse wheel events not yet converted to arrow codes.
Armbian-Notes.txt and AlpineLinux-Notes.txt need to be migrated or merged into HowToBuild",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,515,2020-08-23T03:09:04Z,2020-08-30T00:48:50Z,2020-08-30T00:48:50Z,MERGED,True,4237,79,15,https://github.com/KenDickey,vm-display-fbdev,39,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/515,https://github.com/KenDickey,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/515#issuecomment-678723181,"Note: mvm needs TLC for framebuffer builds.
Armbian does not use MUSL, but -DMUSL was harmless.
ToDo: mouse wheel events not yet converted to arrow codes.
Armbian-Notes.txt and AlpineLinux-Notes.txt need to be migrated or merged into HowToBuild",HowToBuild should be just a duplicate.  Shoule be ignorable..,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-690597585,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","Ok, this is funny. On non-windows the io.. ticks are used nearly exclusively for eventing. But if that's not helful ond Win32, lets go with the flow. @dtlewis290 , Do you know any reasons, why not to use the Windows time stamps?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/LinqLover,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-690610599,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","@krono It's just a theory, but an advantage of using msg->time over ioMSecs etc. could be the fact that even if the event queue got blocked for some time, the VM is able to deliver the correct timestamps to the image. See https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-msg#members:~:text=member.-,time,The%20time%20at%20which%20the%20message%20was%20posted.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-690616864,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","Makes sense; however, I think the Image expects io ticks… so I paged dave",True,{'THUMBS_UP': ['https://github.com/LinqLover']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/dtlewis290,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-690796194,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","The image simply expects an integer timeStamp relative to some (any) consistent start point. I expect no issues on the image side as long as events are milliseconds relative to the same basis. I am not a Windows expert, but the the Windows VM uses event timestamps from Windows events, and if those values are relative to system start time, then that is the way it should. Proposed patch as described above seems reasonable and good. As an aside, it might also be worth taking a look at ioMsecs() in the Windows VM to see if it could be changed to use the same time basis as Windows events (system startup time rather than VM startup time). If that could be done, then fixes like this would probably not be necessary. But don't let that suggestion stand in the way of integrating a good patch.",True,{'THUMBS_UP': ['https://github.com/LinqLover']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/dtlewis290,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-690832397,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","On a hunch I looked at ioMSecs() in the SVN repository, see line 1426 in the file at http://squeakvm.org/cgi-bin/viewvc.cgi/squeak/trunk/platforms/win32/vm/sqWin32Window.c?revision=2921&view=markup.
This implements ioMSecs() as GetTickCount() &0x3FFFFFFF which is relative to system startup time. Thus the Windows VM originally had an ioMSecs() that was consistent with the time scale in the win32 MSG struct. Later changes to the platforms code may have changed this such that ioMSecs() no longer matches the time basis of the Windows events.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/dtlewis290,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-690840933,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","Sorry, I was citing ioMSec(), should have referenced ioMicroMSecs(). But in both cases, the time basis is system start time rather than VM start time, which is consistent with the time scale of a timestamps in a MSG struct. So in the earlier VMs we had:
/* Note: ioMicroMSecs returns *milli*seconds */
int ioMicroMSecs(void)
{
  /* Make sure the value fits into Squeak SmallIntegers */
  return timeGetTime() &0x3FFFFFFF;
}",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/krono,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-690901334,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","Ok, I'll merge.
@LinqLover, care to look at Daves proposal re ioMicroMSecs? I think the Mask is depending on Image bittines (32 vs 64) but the rest looks sane.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/LinqLover,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691022783,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","Thank you for the discussion and, first of all, for merging a working patch. :-)
But it's true, Time eventMillisecondClock and ActiveHand lastEvent timeStamp are not comparable at the moment on Windows, which is suboptimal. Do you propose simply to restore the old versions from http://squeakvm.org/cgi-bin/viewvc.cgi/squeak/trunk/platforms/win32/vm/sqWin32Window.c?revision=3784&view=markup#l1420? I would like to read some changelogs documenting the changes or to run some regression tests before reverting, but I could not find any of both ...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/krono,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691054734,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","WinCE is dead, but yes, I'd say use that version but make sure the Mask is sensible. It is currently 32bit, isn't it?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/dtlewis290,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691074887,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","To be clear - I do not propose reverting to the old version. But maybe there is a way to update the current version so that the time basis would match that of Windows events (time delta between system start time and VM start time is constant). It is just an idea, and I have not looked in detail.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/LinqLover,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691107144,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","David, this sounds interesting. Either we have to change the timestamps of all recorded events (possibly losing accuracy), or we change the reference value provided by Time eventMillisecondClock (primitive 135/primitiveMillisecondClock). Is this what you meant? Is there any contract saying that if you start the VM, Time eventMillisecondClock should return a very small value? If not, could we just modify the Win32 implementation of ioMSecs() to return GetTickCount(), or could there be any other component depending on the current implementation?
So many questions! 😅 And here is just another one: Why does the Stack VM use a different header for the timing stuff (sqWin32Heartbeat.c vs sqWin32Time.c)?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/dtlewis290,13,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691134232,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","@LinqLover on closer review I believe that the fix that you provided is the best solution. I see no other cases  of event creation where this would be a problem. Good fix, no further action required.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/LinqLover,14,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691170419,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","So you mean there is no need to sync Time eventMillisecondClock with the timestamp provided by VM events, despite the comment in #eventMillisecondClock?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/dtlewis290,15,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691178962,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)",I overlooked that. Let's take the question to squeak-dev and maybe loop tpr into the discussion. I do not know the answer.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,518,2020-09-02T16:22:29Z,2020-09-11T06:22:03Z,2020-09-12T19:44:01Z,MERGED,True,6,1,2,https://github.com/LinqLover,Fix timestamps for DragDrop events on Windows,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518,https://github.com/dtlewis290,16,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/518#issuecomment-691536698,"Before this patch, the timestamps recorded for DragDrop events in the win32 implementation were not comparable to the timestamps recorded for regular mouse or keyboard events. This was the case because it used ioMicroMSecs() which returns the milliseconds elapsed since the VM was started (see sqWin32Heartbeat.c). However, for other events, the timestamp is retrieved from the MSG structure where the time is counted since the system start.
In the DnD module (see sqWin32DragDrop.c), no MSG instances are retrieved because it is implemented based on the IDropTarget interface from the ole2.h header instead of Winuser.h. Nevertheless, we can get the required timestamp using the GetTickCount() function from sysinfoapi.h which returns the milliseconds elapsed since the system start as well. By the way, it is already used for recording window events (see recordWindowEvent(), however, as far as I see, its use would not even have been necessary in this case because the single caller of that function could also have passed messageTouse->time to it).
Closes #509.
How can I test this?
For observing the consequences of this PR, please install this changeset into both an unpatched and patched VM and watch the outputs in the Transcript window while moving your mouse and dragging files from your Win32 host system over/into the image (works best when disabling the 'TranscriptStream forceUpdate' preference).
Merger notes
Please review!
And please squash this PR when merging. :-)","A bit more history - For sqWin32Window.c, I compared the squeakvm.org versions versus initial checkins here, confirming that the timer changes were done by Andreas in work prior to first public release of Cog. Files attached for reference. I am completely confident that Andreas knew exactly what he was doing WRT event timestamps, so it seems to me the right thing to do is eliminate in the image any assumption that event timestamps match ioMSec().  I expect no that further changes should be necessary in the VM.
win32Window-squeakvmorg-versus-oscog.zip",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694365273,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","I'd rather not use pkg-config just for parts of the system.
Either most things are found that way or it is not worth it…",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694370678,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
OK, it's true that this may be a risky change to 'configure'.
I don't have a problem with closing/withdrawing this pull request ...
I can work-around the issue with some alternatives (like replacing the hardcoded paths by other paths), so I don't really mind.
Note that the squeak-4 package (""cmake"") uses pkg-config however.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5d7AAoJEAwpOKXMq1MaisUH/Rxk9mUC+8VIYO1Zrqy7b4tn
6Q6T4I/CPek1eGHqUgFUSAQXqp2WM/8aSvNHiPUyEUGOqkjWMRtn0julkSS4q5xN
2gqDqWUUNJYrQiWFlKA8trzxLlhd4JN7JpiAZlWx4z9Jlu0ECe0uqCI9kBc99hS2
iOPE0qKfWAnH/Y0ABdkf2cLBZQWWrqYADDUeJ98I9b/NukES4QnSZ+ZtIbOE5V+i
AzVU4J/LHs85KrSW/Y4RggnvUXhik6A9TxvqKosVhmcwlgllUTsZnmzbHhZwrj2j
qVrs4nQo7yq2DjF4+dVc9ParBf4IR1dw+QYNShyIdF8IaYyh1YOq7RwP1Qwf8QY=
=dq3V
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694382240,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","Note that the squeak-4 package (""cmake"") uses pkg-config however.

Yeah, I'm painfully aware :)
There are so many moving parts…",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694732730,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","I'm closing this pull request.   For me this ""configure"" change works.
It's simply:
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
the ""PKG_CHECK_MODULES"" macro checks whether glib-2.0 and pangocairo are installed VIA the pkg-config tool.
My understanding is that GTK uses pkg-config exactly for this purpose.
But it's true that any change to 'configure' has some risk associated to it (it may break things on some other platforms).   Because I have a workaround, I'm closing the request.
I'll just open a request to document in the README that we have discussed the issue, so that somebody who stumbles upon the same issue in the future, knows about it.
It's seems likely that this issue will come up again - on different platforms.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694732734,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","I'm closing this pull request.   For me this ""configure"" change works.
It's simply:
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
the ""PKG_CHECK_MODULES"" macro checks whether glib-2.0 and pangocairo are installed VIA the pkg-config tool.
My understanding is that GTK uses pkg-config exactly for this purpose.
But it's true that any change to 'configure' has some risk associated to it (it may break things on some other platforms).   Because I have a workaround, I'm closing the request.
I'll just open a request to document in the README that we have discussed the issue, so that somebody who stumbles upon the same issue in the future, knows about it.
It's seems likely that this issue will come up again - on different platforms.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694732822,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","I'm closing this pull request.   For me this ""configure"" change works.
It's simply:
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
the ""PKG_CHECK_MODULES"" macro checks whether glib-2.0 and pangocairo are installed VIA the pkg-config tool.
My understanding is that GTK uses pkg-config exactly for this purpose.
But it's true that any change to 'configure' has some risk associated to it (it may break things on some other platforms).   Because I have a workaround, I'm closing the request.
I'll just open a request to document in the README that we have discussed the issue, so that somebody who stumbles upon the same issue in the future, knows about it.
It's seems likely that this issue will come up again - on different platforms.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694732825,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","I'm closing this pull request.   For me this ""configure"" change works.
It's simply:
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
the ""PKG_CHECK_MODULES"" macro checks whether glib-2.0 and pangocairo are installed VIA the pkg-config tool.
My understanding is that GTK uses pkg-config exactly for this purpose.
But it's true that any change to 'configure' has some risk associated to it (it may break things on some other platforms).   Because I have a workaround, I'm closing the request.
I'll just open a request to document in the README that we have discussed the issue, so that somebody who stumbles upon the same issue in the future, knows about it.
It's seems likely that this issue will come up again - on different platforms.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694732841,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","I'm closing this pull request.   For me this ""configure"" change works.
It's simply:
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
the ""PKG_CHECK_MODULES"" macro checks whether glib-2.0 and pangocairo are installed VIA the pkg-config tool.
My understanding is that GTK uses pkg-config exactly for this purpose.
But it's true that any change to 'configure' has some risk associated to it (it may break things on some other platforms).   Because I have a workaround, I'm closing the request.
I'll just open a request to document in the README that we have discussed the issue, so that somebody who stumbles upon the same issue in the future, knows about it.
It's seems likely that this issue will come up again - on different platforms.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/dcstes,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694733395,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","Sorry for multiple messages, when I click ""Close with comment""  Github does not seems to close my pull request.  It's ok to close it anyway, sorry for the multiple messages.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,520,2020-09-17T16:42:22Z,2020-09-18T08:32:30Z,2020-09-18T08:32:30Z,CLOSED,False,37,17,6,https://github.com/dcstes,configure change: use pkg-config (PKG_CONFIG),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520,https://github.com/krono,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/520#issuecomment-694735013,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Support PKG_CONFIG in configure for UnicodePlugin :
PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
path overriding pkg-config's built-in search path
UNICODE_PLUGIN_CFLAGS
C compiler flags for UNICODE_PLUGIN, overriding pkg-config
UNICODE_PLUGIN_LIBS
linker flags for UNICODE_PLUGIN, overriding pkg-config
Note that I believe that Ian Piumarta's ""cmake"" system for squeak-4 also
uses pkg-config (when he changed from autoconf to 'cmake').
The reason why I made this change, is for compiling on Solaris 11.4.
You can see in the ""mvm"" script that I set PKG_CONFIG_PATH for the 64bit:
On Solaris 11.4 32bit there is:
pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
and on Solaris 11.4 64bit there is:
PKG_CONFIG_PATH=/usr/lib/64/pkgconfig pkg-config --cflags glib-2.0
-I/usr/include/glib-2.0 -I/usr/lib/amd64/glib-2.0/include
Note the '64' or 'amd64' subdirectories.
Finally a remark: I modified
platforms/unix/config/make.cfg.in

because I don't see how to define the UNICODE_PLUGIN_CFLAGS in the plugin,
locally, without setting the variable globally (in all Makefiles).
Because of the 'mkmf' script, this will thus modify all Unix Makefiles ...
If somebody has a better idea, let's hear it !
I understand from Eliot Miranda that abandoning 'configure' is an option.
But that still has the issue of multiple locations on various Unix flavors,
for the GTK include files and libraries ...
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfY5HNAAoJEAwpOKXMq1MaLpEIAL0qgm0zmtJs3kqV9GHli96I
+OQZHL9lLn9gNjyaohpPF7UXhXjr4VbXzjrPAjU8vDR7yImNwe11bcN39VH5nwtt
VrbXA3PpKFNyz5gWBWpyVs1k5ey4UZBSFF/76KwgdruDlXR/aQ7QLwR8WcC6UIfV
rYcvFyLaadwIDV2XoseoVpB91J+Vjy5x/hD+bT6MNybXuvWj5hYli8obdtiBi5aS
8zhBGmZnnKS8+cyfBlmbAjKknUQuy11mhos6FDQX2Wbr/VtBUYgXphcF8cYMnSIe
jV1ZOaA1IQgJ+0kXGKehjqMB/EPs5LA35sUJ8nI2YC3yww0z7n+rzC8n7UttFsg=
=Miad
-----END PGP SIGNATURE-----","Sorry for multiple messages, when I click ""Close with comment"" Github does not seems to close my pull request. It's ok to close it anyway, sorry for the multiple messages.

No worries. In any case, thanks for your efforts!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,521,2020-09-18T08:40:16Z,2020-09-23T08:47:16Z,2020-09-23T08:47:16Z,CLOSED,False,26,0,1,https://github.com/dcstes,UnicodePlugin:  update README on pkg-config,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/521,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/521,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Add a note on
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
which is not being done (not a big problem).
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfZHJSAAoJEAwpOKXMq1MaFKoIAKji3d4ct41M0xoa2mbyDzXO
FdDfugNZ3yms/sTYGiFh4t+dbN+oD/C8SaQOGdS2CxskEvx4WXF39nkqj/VJK4BW
lGuaZakRaaWitpu0x1vN7roF/Z3BOcPgOypB6IyZfFX8p6S6nhGKObgp3b1wZ5Yq
I1vnj/b+c84j4Sl5rcrE2ooHMxtrknmnChVrpgtI55gBr4DhyCBy0E7swGa5D4bU
pvo+0hKDaK4Rw3Vuk2gvRS+KipIfm7dgnV+BA4SWn9UVcBJFxWK8p6GoNhjrMO95
P25AGbHOnCNZpT6oaZEEyxs7I9joWoHNLmONzT2ID/te4GbQQwgfZ4HR5rHL4k0=
=olhS
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Add a note on
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
which is not being done (not a big problem).
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfZHJSAAoJEAwpOKXMq1MaFKoIAKji3d4ct41M0xoa2mbyDzXO
FdDfugNZ3yms/sTYGiFh4t+dbN+oD/C8SaQOGdS2CxskEvx4WXF39nkqj/VJK4BW
lGuaZakRaaWitpu0x1vN7roF/Z3BOcPgOypB6IyZfFX8p6S6nhGKObgp3b1wZ5Yq
I1vnj/b+c84j4Sl5rcrE2ooHMxtrknmnChVrpgtI55gBr4DhyCBy0E7swGa5D4bU
pvo+0hKDaK4Rw3Vuk2gvRS+KipIfm7dgnV+BA4SWn9UVcBJFxWK8p6GoNhjrMO95
P25AGbHOnCNZpT6oaZEEyxs7I9joWoHNLmONzT2ID/te4GbQQwgfZ4HR5rHL4k0=
=olhS
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,521,2020-09-18T08:40:16Z,2020-09-23T08:47:16Z,2020-09-23T08:47:16Z,CLOSED,False,26,0,1,https://github.com/dcstes,UnicodePlugin:  update README on pkg-config,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/521,https://github.com/dcstes,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/521#issuecomment-697225647,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Add a note on
PKG_CHECK_MODULES(UNICODE_PLUGIN,[glib-2.0 pangocairo],,AC_PLUGIN_DISABLE)
which is not being done (not a big problem).
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfZHJSAAoJEAwpOKXMq1MaFKoIAKji3d4ct41M0xoa2mbyDzXO
FdDfugNZ3yms/sTYGiFh4t+dbN+oD/C8SaQOGdS2CxskEvx4WXF39nkqj/VJK4BW
lGuaZakRaaWitpu0x1vN7roF/Z3BOcPgOypB6IyZfFX8p6S6nhGKObgp3b1wZ5Yq
I1vnj/b+c84j4Sl5rcrE2ooHMxtrknmnChVrpgtI55gBr4DhyCBy0E7swGa5D4bU
pvo+0hKDaK4Rw3Vuk2gvRS+KipIfm7dgnV+BA4SWn9UVcBJFxWK8p6GoNhjrMO95
P25AGbHOnCNZpT6oaZEEyxs7I9joWoHNLmONzT2ID/te4GbQQwgfZ4HR5rHL4k0=
=olhS
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
I think it would be useful to update the README.UnicodePlugin,
but I don't mind closing this PR  otherwise ...
Note that the situation is:

Solaris 10 -> UnicodePlugin builds fine
Solaris 11.3 -> UnicodePlugin builds OK but is in fact using wrong #include
Solaris 11.4 -> UnicodePlugin does not compile because cannot #include

Anyway I'm closing the PR but still think would be good for documentation,
that this compile problem is a known issue (and is not a big problem anyway).
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfawuBAAoJEAwpOKXMq1MalIMIALlPvrDTEta+3j8e3nqSq/Ev
AwbIrvUOM3XcxheslV5Dlq8tVWEmZ2K/4TA9DAvCNOrCaNifSqs70ufykPKDI8eb
0XaeJhzpljmtc5QsSSOmH7n/Af25uF1/YjcEIGHNGOvCJ0sfb8xbZJBLWpJiARrq
JBQrvRLq1/5jAkJqrE74vI+Cd2UfM1Q9ZTEGT39kddjUgKCWrZsqpxWtuAiF2Dn9
Ggh5us7uIZpAVQsohrDTmCwj5TrHX8H/vFM7jW2JGKnSwkO+Z1lIzIzAoz3lU9Fp
OmcOrUSEO7yWtVeH6B04TXb4u62cM7dI/i+vJhNkCWBDDNeGSD5Lz8gBo8Zzktg=
=n0qS
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,522,2020-09-18T10:50:45Z,2020-09-19T03:02:27Z,2020-09-19T03:02:27Z,MERGED,True,18,0,1,https://github.com/dcstes,SunPro change: define getReturnAddress X64 and i386,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/522,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/522,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,522,2020-09-18T10:50:45Z,2020-09-19T03:02:27Z,2020-09-19T03:02:27Z,MERGED,True,18,0,1,https://github.com/dcstes,SunPro change: define getReturnAddress X64 and i386,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/522,https://github.com/dcstes,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/522#issuecomment-694800099,,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Issue on Solaris with:
platforms/Cross/vm/sq.h
getReturnAddress not defined for the SunPro C compiler.
Following code posted by Eliot Miranda
http://forum.world.st/builtin-extract-return-addr-td5122085.html
Suggested modification to platforms/unix/vm/sqPlatformSpecific.h
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfZJGzAAoJEAwpOKXMq1MaPt0H/3PLFOQQMeyj/pCEoIVLVZHl
Ry1CjUX1KNUGrhKX6gaTNQWcT7daf+X7Rpg0Ugf6SP3ArxG9mfVKM1KnG4B8Y/eV
gjlZUgjoZ/JPoFtiYAWGh2yKyHRe/+ZR7lMiZfO7IRGt2+JvuF9rs1hZDFMQ/OzC
/iyqcrDa4rEJF5vtWEozix5G9Xx7QOjlkzSi0tr3D1AhIww5U6P0X/JV5rJGbl6C
uvMS6clM6X+LMjq63vyHCrnDMm2yXfr7kqZNwM5a+FMMQG+mpbeHeTg8dPFYqOJd
hR6/e3kTMtzJFFGBNdYQptNAhkT6aBPhe4OZvNhYqXn4jLUdEJMogiD4fLARwsw=
=/oDq
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,523,2020-09-23T12:15:19Z,2020-09-25T07:36:54Z,2020-09-25T07:36:54Z,MERGED,True,35,3,5,https://github.com/dcstes,configure script : check for <ifaddrs.h>,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/523,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/523,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
A few commits that could be of use:

modify configure.ac to check for the header file <ifaddrs.h>
update README of UnicodePlugin
#if COGVM in the sqCogStackAlignment.h for getReturnAddress

The COGVM compiles and works in 32bit on Solaris 10.
It also works now (thanks to code for getReturnAddress) in 64bit on Solaris 11.
Solaris 10 has no header file <ifaddrs.h> it appears, to in that case,
the configure script can automatically 'activate' the old code in
sqUnixSocket.c.  In the Solaris 11 case, it has <ifaddrs.h>, so activate the
new code on Solaris 11.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfazvaAAoJEAwpOKXMq1MaOBMH/0oAanU940wnZi6UnptEXDzL
H4TGeGlQvX+2939+PP79CxAa0yMNQWe/Ew1f2GsERQruKXZAr76lYQPXaJsY2duI
dUeNaNxvPUuKDlsKnrltUnfDgDazYER8NluCZE3tBV8ZUVxak07u/HLUMs/lXP/9
MO/UctlbDSc8KgZlUkBlaffCzz/DtNV/CrgHZNUlPHb9GyLJD2mctc0H7qYkr1o6
2Y3QoOrC1U//4nK/2JbUV9i4lVVj/g1P9CSjRMe2P1ptZp6GfoWod1XAQMM1TIFP
tjZqhxFDB3PHnhdhyBbLrqEbAXoexi2F6nET3xGXEUPYJr6QL6w9rXf3wdhJGVM=
=tynH
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
A few commits that could be of use:

modify configure.ac to check for the header file <ifaddrs.h>
update README of UnicodePlugin
#if COGVM in the sqCogStackAlignment.h for getReturnAddress

The COGVM compiles and works in 32bit on Solaris 10.
It also works now (thanks to code for getReturnAddress) in 64bit on Solaris 11.
Solaris 10 has no header file <ifaddrs.h> it appears, to in that case,
the configure script can automatically 'activate' the old code in
sqUnixSocket.c.  In the Solaris 11 case, it has <ifaddrs.h>, so activate the
new code on Solaris 11.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfazvaAAoJEAwpOKXMq1MaOBMH/0oAanU940wnZi6UnptEXDzL
H4TGeGlQvX+2939+PP79CxAa0yMNQWe/Ew1f2GsERQruKXZAr76lYQPXaJsY2duI
dUeNaNxvPUuKDlsKnrltUnfDgDazYER8NluCZE3tBV8ZUVxak07u/HLUMs/lXP/9
MO/UctlbDSc8KgZlUkBlaffCzz/DtNV/CrgHZNUlPHb9GyLJD2mctc0H7qYkr1o6
2Y3QoOrC1U//4nK/2JbUV9i4lVVj/g1P9CSjRMe2P1ptZp6GfoWod1XAQMM1TIFP
tjZqhxFDB3PHnhdhyBbLrqEbAXoexi2F6nET3xGXEUPYJr6QL6w9rXf3wdhJGVM=
=tynH
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,523,2020-09-23T12:15:19Z,2020-09-25T07:36:54Z,2020-09-25T07:36:54Z,MERGED,True,35,3,5,https://github.com/dcstes,configure script : check for <ifaddrs.h>,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/523,https://github.com/dcstes,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/523#issuecomment-698768019,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
A few commits that could be of use:

modify configure.ac to check for the header file <ifaddrs.h>
update README of UnicodePlugin
#if COGVM in the sqCogStackAlignment.h for getReturnAddress

The COGVM compiles and works in 32bit on Solaris 10.
It also works now (thanks to code for getReturnAddress) in 64bit on Solaris 11.
Solaris 10 has no header file <ifaddrs.h> it appears, to in that case,
the configure script can automatically 'activate' the old code in
sqUnixSocket.c.  In the Solaris 11 case, it has <ifaddrs.h>, so activate the
new code on Solaris 11.
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfazvaAAoJEAwpOKXMq1MaOBMH/0oAanU940wnZi6UnptEXDzL
H4TGeGlQvX+2939+PP79CxAa0yMNQWe/Ew1f2GsERQruKXZAr76lYQPXaJsY2duI
dUeNaNxvPUuKDlsKnrltUnfDgDazYER8NluCZE3tBV8ZUVxak07u/HLUMs/lXP/9
MO/UctlbDSc8KgZlUkBlaffCzz/DtNV/CrgHZNUlPHb9GyLJD2mctc0H7qYkr1o6
2Y3QoOrC1U//4nK/2JbUV9i4lVVj/g1P9CSjRMe2P1ptZp6GfoWod1XAQMM1TIFP
tjZqhxFDB3PHnhdhyBbLrqEbAXoexi2F6nET3xGXEUPYJr6QL6w9rXf3wdhJGVM=
=tynH
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Any feedback please ?
The change to use <ifaddrs.h> only if the build target has it,
seems a logical change ...
The only risk is perhaps that somebody unintentionally re-enables the
'old code' by not defining HAVE_IFADDRS_H in their Makefile or config.h.
This is because by default
#undef HAVE_IFADDRS_H
and that will thus by default enable the 'old code'.
While the default now is to enable the 'new code' which uses <ifaddrs.h>.
But this can easily be solved by requiring to #define HAVE_IFADDRS_H,
and the 'configure' script will do just that automatically if it finds the file.
Anyway -- with this patch the current COGVM compiles on Solaris 10.
By the way Solaris 10 still uses openssl 0.9.7 and I think the configure
quite correctly disables SSL support so that works fine.
The SSL plugin is not built I think on Solaris 10, but no problem.
The real interest is in the support for Solaris 11 with openssl 1.0.2 etc.,
but it is nice that the code still compiles on Solaris 10.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfbZoGAAoJEAwpOKXMq1MaO3sH/26aTh31X//H3xC/bQn+jPdK
ES/YFfFXJ/OB9i/WroLia8n4IHpoPCguwdLy5NPtMbo30s8VpQeVWe2OAun+jLOX
Ekj9LbfFbKpAftetgD7O+2ONWmbikvx1nrPcl4qfkD1rcf1m+ESbftsf69vDvIrc
rNC+Bgq4ZR84yQIxOySzZskN34mtPQfdOxw2B1JQP1cTtPvynkiBy+fGFM2m8Y3J
7StRLKQx9q4dzI875xV3Vmd9gmhFxA4MNHMOmh1i4r9rZYbrQjCtaoHnuI9abQcf
jPKI01K11kyj80aZlV3h9oaslTJnEIGWhJkHFYjQBamVJcqbj2wvYLCiwc9WHIY=
=lu3K
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,524,2020-09-25T06:44:04Z,2020-10-19T20:33:46Z,2020-11-09T20:00:04Z,MERGED,True,6362,11,18,https://github.com/demarey,Customization for Pharo & About Dialog ,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/524,https://github.com/demarey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/524,should close PR #388,should close PR #388,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,524,2020-09-25T06:44:04Z,2020-10-19T20:33:46Z,2020-11-09T20:00:04Z,MERGED,True,6362,11,18,https://github.com/demarey,Customization for Pharo & About Dialog ,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/524,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/524#issuecomment-724245207,should close PR #388,"Hi Christophe,
when I try and build a PharoVM from the Cog sources after merging this pull request I get the following error:

    [gDelegateApp.squeakApplication setAboutWindow: [self keyWindow]];
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~
1 error generated.```

It's coming from this method:

```@implementation SqueakOSXApplication
...
- (void)orderFrontStandardAboutPanel:(id)sender;
{
    [super orderFrontStandardAboutPanel: sender];
    [gDelegateApp.squeakApplication setAboutWindow: [self keyWindow]];
}```",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,527,2020-10-12T12:07:05Z,2020-10-19T13:46:59Z,2020-10-19T13:46:59Z,MERGED,True,8,8,4,https://github.com/dcstes,Add  -DAIO_DEBUG to mvm files for SunOS,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/527,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/527,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
The following patch adds -DAIO_DEBUG to the SunOS mvm scripts.
It should be safe as this only impacts the build.sunos* directories.
Note on the other hand that I think the -aiolog option is interesting,
because probably the UNIX AT&T derived kernel specifics are different
in a subtle way from BSD UNIX or Linux derived kernels.
Remember that a few months ago I actually submitted a patch
platforms/unix/vm/aio.c:
include <sys/file.h> /* FASYNC or ioctl FIOASYNC will be issued  */
I suspect this is a very complicated matter ... (unfortunately).
But it may help to have the -aiolog.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfhEZkAAoJEAwpOKXMq1MaOhwIAJco0jGEz7qR1mOliCcFuMaw
hx94K/xZdFZ/VITM6Za2ZINq+sfDOnBiFyOYkRd3ZpCbdp3s0/TzhVmRLRGk+Das
qeevFJ4Oa/R6boyrwCx1OK02Ps8WHCHMN+YWpzXU1lyJmARgGy4bUHkZes4I1wtd
yQGRWLSRjyQCCyl1PPiCazwtKUH6Vd/Kax79yVU51zPwTtKnz4Y0uX2Z7yOwqZ3x
K+YRXdUaKkTqsldfj37oAjAdHW1bCUSbMP2UUfFZyS533Q7UYkzcwxnsbXC5uAl4
Xl7MXlhtnFnlQwA4lYf7fcz+s6J9hBWzQY6aBQTM4Mq8rcXA8WKf+YIwTCEaA6s=
=K1T7
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
The following patch adds -DAIO_DEBUG to the SunOS mvm scripts.
It should be safe as this only impacts the build.sunos* directories.
Note on the other hand that I think the -aiolog option is interesting,
because probably the UNIX AT&T derived kernel specifics are different
in a subtle way from BSD UNIX or Linux derived kernels.
Remember that a few months ago I actually submitted a patch
platforms/unix/vm/aio.c:
include <sys/file.h> /* FASYNC or ioctl FIOASYNC will be issued  */
I suspect this is a very complicated matter ... (unfortunately).
But it may help to have the -aiolog.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfhEZkAAoJEAwpOKXMq1MaOhwIAJco0jGEz7qR1mOliCcFuMaw
hx94K/xZdFZ/VITM6Za2ZINq+sfDOnBiFyOYkRd3ZpCbdp3s0/TzhVmRLRGk+Das
qeevFJ4Oa/R6boyrwCx1OK02Ps8WHCHMN+YWpzXU1lyJmARgGy4bUHkZes4I1wtd
yQGRWLSRjyQCCyl1PPiCazwtKUH6Vd/Kax79yVU51zPwTtKnz4Y0uX2Z7yOwqZ3x
K+YRXdUaKkTqsldfj37oAjAdHW1bCUSbMP2UUfFZyS533Q7UYkzcwxnsbXC5uAl4
Xl7MXlhtnFnlQwA4lYf7fcz+s6J9hBWzQY6aBQTM4Mq8rcXA8WKf+YIwTCEaA6s=
=K1T7
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,527,2020-10-12T12:07:05Z,2020-10-19T13:46:59Z,2020-10-19T13:46:59Z,MERGED,True,8,8,4,https://github.com/dcstes,Add  -DAIO_DEBUG to mvm files for SunOS,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/527,https://github.com/dcstes,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/527#issuecomment-711847606,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
The following patch adds -DAIO_DEBUG to the SunOS mvm scripts.
It should be safe as this only impacts the build.sunos* directories.
Note on the other hand that I think the -aiolog option is interesting,
because probably the UNIX AT&T derived kernel specifics are different
in a subtle way from BSD UNIX or Linux derived kernels.
Remember that a few months ago I actually submitted a patch
platforms/unix/vm/aio.c:
include <sys/file.h> /* FASYNC or ioctl FIOASYNC will be issued  */
I suspect this is a very complicated matter ... (unfortunately).
But it may help to have the -aiolog.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfhEZkAAoJEAwpOKXMq1MaOhwIAJco0jGEz7qR1mOliCcFuMaw
hx94K/xZdFZ/VITM6Za2ZINq+sfDOnBiFyOYkRd3ZpCbdp3s0/TzhVmRLRGk+Das
qeevFJ4Oa/R6boyrwCx1OK02Ps8WHCHMN+YWpzXU1lyJmARgGy4bUHkZes4I1wtd
yQGRWLSRjyQCCyl1PPiCazwtKUH6Vd/Kax79yVU51zPwTtKnz4Y0uX2Z7yOwqZ3x
K+YRXdUaKkTqsldfj37oAjAdHW1bCUSbMP2UUfFZyS533Q7UYkzcwxnsbXC5uAl4
Xl7MXlhtnFnlQwA4lYf7fcz+s6J9hBWzQY6aBQTM4Mq8rcXA8WKf+YIwTCEaA6s=
=K1T7
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
Hi,
Any news on this pull request please ?
The patch adds -DAIO_DEBUG to the SunOS mvm scripts.
It should be safe as this only impacts the build.sunos* directories.
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJfjU6IAAoJEAwpOKXMq1MaUG8IAJFr0tNM2XahTPIjG5k450VU
9wZzjO48UBfQJWPmSYyyn9XbguQulLjt8iOvU1RKeAVn5JtyFcpGeUJ7molihb5f
Z8Vck5wL4Vq46r9E+v/0YCp413LLg4MdE6j1O41buPZkrQeVsAqNqseHe/LG9ss0
LjIKKP69PqWCshDOw2+5kUk3/j385jhEUGTxvcqdi4+NKIWtbdR5NSFB8O13l7ck
8+zIZhPd58sDLnzZYJXyiFCFLX6lmCG4YizosSQvriPvmHHKLPCJGFJWpQBxcQcF
S/z4YV4skOcOxBsTLLm/Tr3KewzVyUM7b2kiF18AGmsKdaqBz0xNmLk9O7kNXyI=
=ezU7
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,528,2020-10-18T23:58:49Z,2020-10-19T01:56:31Z,2020-10-19T01:56:31Z,MERGED,True,299,59,1,https://github.com/smalltalking,Added epoll support for aio.c on unix,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/528,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/528,"When HAVE_CONFIG_H and HAVE_EPOLL is true (the former is pretty much always
true), the select-based aio implementation is replaced with an epoll-based one.
The epoll variant has a few advantages:

it is free of the lost readSemaphore signals bug (see the comments of
Socket's various #waitFor* methods which wait on readSemaphore).
idle CPU usage is down from ~10% to ~2%
faster Socket operations

Known issue:

when the VM quits, an error message appears from aioDisable() because
the file descriptor about to be removed from the epoll set has already
been closed, therefore it's not in the set. It can be worked around
by supressing error messages when aioDisable() is called by aioFini()","When HAVE_CONFIG_H and HAVE_EPOLL is true (the former is pretty much always
true), the select-based aio implementation is replaced with an epoll-based one.
The epoll variant has a few advantages:

it is free of the lost readSemaphore signals bug (see the comments of
Socket's various #waitFor* methods which wait on readSemaphore).
idle CPU usage is down from ~10% to ~2%
faster Socket operations

Known issue:

when the VM quits, an error message appears from aioDisable() because
the file descriptor about to be removed from the epoll set has already
been closed, therefore it's not in the set. It can be worked around
by supressing error messages when aioDisable() is called by aioFini()",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,528,2020-10-18T23:58:49Z,2020-10-19T01:56:31Z,2020-10-19T01:56:31Z,MERGED,True,299,59,1,https://github.com/smalltalking,Added epoll support for aio.c on unix,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/528,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/528#issuecomment-711458845,"When HAVE_CONFIG_H and HAVE_EPOLL is true (the former is pretty much always
true), the select-based aio implementation is replaced with an epoll-based one.
The epoll variant has a few advantages:

it is free of the lost readSemaphore signals bug (see the comments of
Socket's various #waitFor* methods which wait on readSemaphore).
idle CPU usage is down from ~10% to ~2%
faster Socket operations

Known issue:

when the VM quits, an error message appears from aioDisable() because
the file descriptor about to be removed from the epoll set has already
been closed, therefore it's not in the set. It can be worked around
by supressing error messages when aioDisable() is called by aioFini()","Wow Levente, thank you!!!!

_,,,^..^,,,_ (phone)
…
 On Oct 18, 2020, at 4:59 PM, smalltalking ***@***.***> wrote:

 ﻿
 When HAVE_CONFIG_H and HAVE_EPOLL is true (the former is pretty much always
 true), the select-based aio implementation is replaced with an epoll-based one.
 The epoll variant has a few advantages:

 it is free of the lost readSemaphore signals bug (see the comments of
 Socket's various #waitFor* methods which wait on readSemaphore).
 idle CPU usage is down from ~10% to ~2%
 faster Socket operations
 Known issue:

 when the VM quits, an error message appears from aioDisable() because
 the file descriptor about to be removed from the epoll set has already
 been closed, therefore it's not in the set. It can be worked around
 by supressing error messages when aioDisable() is called by aioFini()
 You can view, comment on, or merge this pull request online at:

   #528

 Commit Summary

 Added epoll support for aio.c on unix
 File Changes

 M platforms/unix/vm/aio.c (356)
 Patch Links:

 https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/528.patch
 https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/528.diff
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,529,2020-10-19T21:51:06Z,2020-10-19T22:15:37Z,2020-10-19T22:15:37Z,MERGED,True,6,6,1,https://github.com/smalltalking,Fix image opening on unix,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/529,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/529,"In imgInit() of sqUnixMain.c

preserve fd instead of throwing it away
use fileno() to get the file descriptor (fd) created by fopen() instead of
opening the file again with open() (which leaked a file descriptor due to
lack of close())
pass the file descriptor fd instead of the FILE* f to the recently changed
methods expecting a file descriptor, e.g. readImageFromFileHeapSizeStartingAt()","In imgInit() of sqUnixMain.c

preserve fd instead of throwing it away
use fileno() to get the file descriptor (fd) created by fopen() instead of
opening the file again with open() (which leaked a file descriptor due to
lack of close())
pass the file descriptor fd instead of the FILE* f to the recently changed
methods expecting a file descriptor, e.g. readImageFromFileHeapSizeStartingAt()",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,530,2020-10-20T16:12:21Z,2020-10-28T16:01:57Z,2020-10-28T16:01:57Z,MERGED,True,27,37,1,https://github.com/smalltalking,Simplify sqUnixMain.c's imgInit(),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/530,https://github.com/smalltalking,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/530,"use sqImageFileOpen() to open the image file
use file descriptors only to avoid leaking a FILE struct
removed the ability to let winImageFind manipulate the file some way
(only supported by the Quartz display anyway)
removed the loop retrying opening the file again because that relied on
winImageFind
reformatted the code to follow the formatting guidelines (it was a
bit messy)","use sqImageFileOpen() to open the image file
use file descriptors only to avoid leaking a FILE struct
removed the ability to let winImageFind manipulate the file some way
(only supported by the Quartz display anyway)
removed the loop retrying opening the file again because that relied on
winImageFind
reformatted the code to follow the formatting guidelines (it was a
bit messy)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,532,2020-10-28T16:20:58Z,2020-10-28T16:21:10Z,2020-10-28T16:21:10Z,MERGED,True,1,7,1,https://github.com/yoshikiohshima,clean up symbolic key handling by initializing a passed-by-pointer variable,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/532,https://github.com/yoshikiohshima,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/532,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,534,2020-11-09T13:39:27Z,2020-11-09T14:13:31Z,2020-11-09T14:13:31Z,MERGED,True,6,2,2,https://github.com/dcstes,SunOS change: make sure lseek64 is used (configure in 32bit),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/534,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/534,"Add  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 to the mvm scripts for SunOS 32bit.
This could be due to a 'bug' in GNU autoconf / configure which makes AC_SYS_LARGEFILE only set those defines in the config.h and not on the cc command line in the Makefile's.
Even if the configure script would be fixed, I think the defines on the cmd.line would not hurt, but if configure would be fixed then these defines would be unnecessary.
David Stes","Add  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 to the mvm scripts for SunOS 32bit.
This could be due to a 'bug' in GNU autoconf / configure which makes AC_SYS_LARGEFILE only set those defines in the config.h and not on the cc command line in the Makefile's.
Even if the configure script would be fixed, I think the defines on the cmd.line would not hurt, but if configure would be fixed then these defines would be unnecessary.
David Stes",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,539,2020-11-27T09:44:15Z,2020-11-27T09:59:46Z,2020-11-27T09:59:46Z,CLOSED,False,55489,41555,586,https://github.com/Alisu,Primitive at put,946,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/539,https://github.com/Alisu,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/539,"Try to remove context checking in at:put:.
See if tests pass.","Try to remove context checking in at:put:.
See if tests pass.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,541,2020-12-11T14:45:40Z,2020-12-13T09:33:41Z,2020-12-13T09:33:41Z,MERGED,True,40,0,1,https://github.com/dcstes,SunOS change: document /etc/security/policy.conf,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/541,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/541,"This is a documentation update on
/etc/security/policy.conf

on Solaris and how to modify it to run the Squeak VM in a Sollaris ""zone"".
David Stes","This is a documentation update on
/etc/security/policy.conf

on Solaris and how to modify it to run the Squeak VM in a Sollaris ""zone"".
David Stes",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,543,2020-12-24T12:41:10Z,2020-12-24T12:43:36Z,2020-12-24T12:43:36Z,CLOSED,False,363995,8843162,11683,https://github.com/bencoman,More manual cmake settings management,4788,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/543,https://github.com/bencoman,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/543,"The previous WIP PR was copying the template file to ""CMakeSettings.jsonx"" (notice the x on the end).
When changed to copy over actual user ""CMakeSettings.json"", Visual Studio was automatically re-parsing ""CMakeSettings.json"" and the info messages didn't get shown long enough to understand what was happening.
So I believe copying the template over the user build settings will need to be a manual operation per this PR.","The previous WIP PR was copying the template file to ""CMakeSettings.jsonx"" (notice the x on the end).
When changed to copy over actual user ""CMakeSettings.json"", Visual Studio was automatically re-parsing ""CMakeSettings.json"" and the info messages didn't get shown long enough to understand what was happening.
So I believe copying the template over the user build settings will need to be a manual operation per this PR.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,543,2020-12-24T12:41:10Z,2020-12-24T12:43:36Z,2020-12-24T12:43:36Z,CLOSED,False,363995,8843162,11683,https://github.com/bencoman,More manual cmake settings management,4788,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/543,https://github.com/bencoman,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/543#issuecomment-750872455,"The previous WIP PR was copying the template file to ""CMakeSettings.jsonx"" (notice the x on the end).
When changed to copy over actual user ""CMakeSettings.json"", Visual Studio was automatically re-parsing ""CMakeSettings.json"" and the info messages didn't get shown long enough to understand what was happening.
So I believe copying the template over the user build settings will need to be a manual operation per this PR.",whoops,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,545,2021-01-12T14:47:03Z,2021-01-12T14:48:00Z,2021-04-23T07:18:41Z,MERGED,True,261,218,46,https://github.com/nicolas-cellier-aka-nice,Upgrade libpng,14,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/545,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/545,"upgrade the version of several thirdparty libraries used by pharo

to avoid distributing binaries crippled by security issues
(IMO we should better link dynamically to up-to-date binaries and let package managers and distro managers deal with the security issues)
to let the libraries compile on up-to-date OS/machines
to paint the C.I. results in green

TODO: also upgrade libgit2 that has been officially released (as version 1.1.0 yet).
Unfortunately, I could not compile it on my own machine - at least not thru the cmake complexifications.
TODO: do not even recompile those libraries, or more exactly, compile them elsewhere, and import the released
binaries.
We could as well deprecate all those builds since no one seems to care.","upgrade the version of several thirdparty libraries used by pharo

to avoid distributing binaries crippled by security issues
(IMO we should better link dynamically to up-to-date binaries and let package managers and distro managers deal with the security issues)
to let the libraries compile on up-to-date OS/machines
to paint the C.I. results in green

TODO: also upgrade libgit2 that has been officially released (as version 1.1.0 yet).
Unfortunately, I could not compile it on my own machine - at least not thru the cmake complexifications.
TODO: do not even recompile those libraries, or more exactly, compile them elsewhere, and import the released
binaries.
We could as well deprecate all those builds since no one seems to care.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,546,2021-01-15T21:54:52Z,2021-01-15T23:22:50Z,2021-01-15T23:22:50Z,MERGED,True,110,39,7,https://github.com/ronsaldo,Plumb OS X custom url scheme events into drop events,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/546,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/546,"These changes are needed for handling custom url schemes in OS X, which gets translated into drop events. Feature requested by Eliot.","These changes are needed for handling custom url schemes in OS X, which gets translated into drop events. Feature requested by Eliot.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,547,2021-01-18T22:56:15Z,2021-01-19T19:13:13Z,2021-01-19T19:13:26Z,MERGED,True,44,32,1,https://github.com/dtlewis290,Fix missing KeyRelease events when multiple keys are depressed.,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/547,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/547,"Reference Mantis 0007597 http://bugs.squeak.org/view.php?id=7597.
Rather than keep a single lastKey to remember the last previously
pressed key value, maintain an array size 256 of last key pressed values
indexed by X11 KeyCode. Works for any number of simultaneous keys.","Reference Mantis 0007597 http://bugs.squeak.org/view.php?id=7597.
Rather than keep a single lastKey to remember the last previously
pressed key value, maintain an array size 256 of last key pressed values
indexed by X11 KeyCode. Works for any number of simultaneous keys.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,547,2021-01-18T22:56:15Z,2021-01-19T19:13:13Z,2021-01-19T19:13:26Z,MERGED,True,44,32,1,https://github.com/dtlewis290,Fix missing KeyRelease events when multiple keys are depressed.,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/547,https://github.com/dtlewis290,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/547#issuecomment-762910531,"Reference Mantis 0007597 http://bugs.squeak.org/view.php?id=7597.
Rather than keep a single lastKey to remember the last previously
pressed key value, maintain an array size 256 of last key pressed values
indexed by X11 KeyCode. Works for any number of simultaneous keys.","OK I will do an update. Also as reminded by Tim, the index into array should probably be masked to ensure 1 -255. A KeyCode is always in that range, but there is no real guarantee that there is not some scenario in which it might be set to -1 for example, so better to be safe.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,549,2021-01-25T14:01:51Z,2021-01-26T00:56:36Z,2021-01-26T08:17:45Z,MERGED,True,4,0,1,https://github.com/LinqLover,doc: Add link to example build for Debian (64-bit) [ci-skip],1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/549,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/549,/cc @eliotmiranda,/cc @eliotmiranda,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-770674150,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","IMO, not a good fix.
The fact the the epoll structure is shared between parent and childs (forked) process is a problem not only for the X11 socket connection, but for ALL the polled fd.
We shall close the epoll fd and re-create it in the forked vm.
Probably, we should use a close-on-exec flag for epoll epoll_create1(EPOLL_CLOEXEC ), so as to protect from accidental sharing, unless someone foresee a good scenario for sharing epoll fd (I fail to see one).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-770675459,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","Isn't there a way to duplicate fd's on fork, so that the child can close them at will without harm?
(haven't done fork/exec in a while, tho)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-770686787,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","Isn't there a way to duplicate fd's on fork, so that the child can close them at will without harm?
(haven't done fork/exec in a while, tho)

No, from what I understand, the file-descriptors are duped anyway (they are in the process space), but the file descriptions are shared (in the kernel space). The duped fd point to shared objects...
See https://copyconstruct.medium.com/the-method-to-epolls-madness-d9d2d6378642",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-770694817,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","Regarding EPOLL_CLOEXEC, does it really help when we do not actually exec?
(Edit: reading this suggests that we epoll_ctl(EPOLL_CTL_DEL) before we close() whenever we have the fd epolld)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/nicolas-cellier-aka-nice,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-770727997,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","Ouch, you're right, close-on-exec does close on exec as the name tells...
Why the hell did I think that it would work at fork time? Just because it would fit our needs? Sort of wishful thinking...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/dtlewis290,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-774714133,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","I made a couple of commits to the Cog branch that provide error messages on stderr rather than segfault the VM. This shows clearly that after a fork, the X11 event notification for the child process is being delivered to both the child VM and the parent VM, and also that the kernel is supplying empty event data to the parent when this happens.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/dtlewis290,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-774715140,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.","I suspect that for epoll, the rule should be never unregister the fd if you are also going to close the fd. This would be different from non-epoll event event handling, so possibly there would be a need for e.g. aioDisableAndClose(fd) in addition to the existing aioDisable(fd). Or maybe is it sufficient to just reopen the aiofd after a fork as suggested above.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,550,2021-02-01T04:41:18Z,2021-02-08T20:20:37Z,2021-02-08T20:23:26Z,CLOSED,False,2,0,1,https://github.com/dtlewis290,In forgetXDisplay() do not call aioDisable() for the socket connection,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550,https://github.com/dtlewis290,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/550#issuecomment-775424691,"to the X11 server if Linux epoll event handling is being used, because
forgetXDisplay() is typically called after a fork(). With epoll event
handling the shared fd reference affects both parent and child badly.",Closing the PR because the solution is not sufficient. I will open a different PR to close and reopen the epoll fd based on the suggestions above and in issue #548.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,552,2021-02-08T20:24:39Z,2021-07-23T22:47:03Z,2021-07-23T22:47:03Z,MERGED,True,42,23,2,https://github.com/dtlewis290,"For epoll aio, close and reopen the epoll fd in forked child process",2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/552,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/552,"Factor the epoll initiation out of aioInit into new epollInit function
and invoke it via pthread_atfork in the child process after a fork.
Prevents misdelivery of events from the common kernel epoll structures.","Factor the epoll initiation out of aioInit into new epollInit function
and invoke it via pthread_atfork in the child process after a fork.
Prevents misdelivery of events from the common kernel epoll structures.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,552,2021-02-08T20:24:39Z,2021-07-23T22:47:03Z,2021-07-23T22:47:03Z,MERGED,True,42,23,2,https://github.com/dtlewis290,"For epoll aio, close and reopen the epoll fd in forked child process",2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/552,https://github.com/smalltalking,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/552#issuecomment-870394109,"Factor the epoll initiation out of aioInit into new epollInit function
and invoke it via pthread_atfork in the child process after a fork.
Prevents misdelivery of events from the common kernel epoll structures.",I see no problems with this. Merge it.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,553,2021-03-08T04:08:39Z,2021-03-08T16:41:20Z,2021-03-08T16:41:20Z,MERGED,True,93,116,14,https://github.com/ronsaldo,OS X custom URL scheme and document open event injection fixup,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/553,https://github.com/ronsaldo,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/553,"These change fixup the events for handling custom url schemes, and the support for opening document types registered in the plist that are received as events before the image is even opened by the VM. These event are injected as drop event into the image for further processing.","These change fixup the events for handling custom url schemes, and the support for opening document types registered in the plist that are received as events before the image is even opened by the VM. These event are injected as drop event into the image for further processing.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,558,2021-04-20T17:32:29Z,2021-04-20T17:33:29Z,2021-04-20T17:34:11Z,MERGED,True,9,3,1,https://github.com/nicolas-cellier-aka-nice,Fix issue #557 (workaround?),1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/558,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/558,"If we build an internal plugin SQUEAK_BUILTIN_PLUGIN, then we don't need to EXPORT the error/warning functions.
There are still conflicting definitions in sqVirtualMachine.h which totally ignore IMPORT/EXPORT but these only generate warnings, not errors.","If we build an internal plugin SQUEAK_BUILTIN_PLUGIN, then we don't need to EXPORT the error/warning functions.
There are still conflicting definitions in sqVirtualMachine.h which totally ignore IMPORT/EXPORT but these only generate warnings, not errors.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,559,2021-04-20T21:14:38Z,2021-04-20T21:14:58Z,2021-04-20T21:15:02Z,MERGED,True,1,10,2,https://github.com/nicolas-cellier-aka-nice,Fix minheadless build,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/559,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/559,"At least one minheadless passes on appveyor, mission accomplished, time to merge
(Who has two more hours to wait this evening?)","At least one minheadless passes on appveyor, mission accomplished, time to merge
(Who has two more hours to wait this evening?)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/nicolas-cellier-aka-nice,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)",True,"{'THUMBS_UP': ['https://github.com/krono', 'https://github.com/fniephaus', 'https://github.com/marceltaeumel']}"
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/dtlewis290,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-860247919,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","This issue apparently affects (some?) Windows builds in addition to unix, see issue #568",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/smalltalking,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-870394971,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)",We definitely need this asap.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/marceltaeumel,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-881210071,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","So, I updated this PR to HEAD. I will merge this soon. Just testing MSVC builds now.
Some remaining quirks (using VMMaker.oscog-mt.2986 in VMMakerInbox, based in -nice.2957, also in inbox) are:

""#include <asm/cachectl.h>"" moves to the bottom in cogitMIPSEL.c
Some hiccups (and extra type casts) regarding usqInt vs sqInt ... ? Maybe it is nothing, maybe there is some extra magic here during source generation that I am not aware of.

So, besides that include-order thingy in the VMMaker, there are only those extra HAVE_CONFIG_H in cross-platform sources:
platforms/Cross/plugins/B3DAcceleratorPlugin/sqOpenGLRenderer.c
platforms/Cross/plugins/IA32ABI/xabicc.c
platforms/Cross/plugins/SoundCodecPrims/sqSoundCodecPluginBasicPrims.c
platforms/Cross/plugins/Squeak3D/b3dInit.c
platforms/Cross/plugins/Squeak3D/b3dMain.c
platforms/Cross/plugins/SurfacePlugin/SurfacePlugin.c
platforms/Cross/vm/sqHeapMap.c
platforms/Cross/vm/sqVirtualMachine.c
Platform-specific fixes considering HAVE_CONFIG_H:
platforms/unix/plugins/FileAttributesPlugin/faSupport.c
platforms/unix/vm/aio.c
platforms/unix/vm/sqUnixVMProfile.c
platforms/win32/vm/sqPlatformSpecific.h
And this:
platforms/unix/config/getversion.c
platforms/Cross/vm/sqSCCSVersion.h
platforms/Cross/vm/sqAssert.h",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/marceltaeumel,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-883189779,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","Note that sources have to be generated even if a dialog claims that there are not changes. Apparently, the order of include files is not considered a change in the generated artifact:
[VMMaker generateAllConfigurationsUnderVersionControl] valueSupplyingAnswer: true. ""Not false!""
Also note that the current VMMaker changes are in the VMMakerInbox:

VMMaker.oscog-mt.2986 based on
VMMaker.oscog-dtl.2968 based on
VMMaker.oscog-nice.2957",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/krono,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-886008966,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)",Thanks a bunch :D,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/KenDickey,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-886269713,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","Builds on aarch64/arm64 Linux work fine.
Build order still a problem on build.linux32ARMv6/squeak.cog.spur/build
[Tested on Raspberry Pi 3 on RasPi Linux].
Still have to comment out  #ifdef _FEATURES_H in ""config.h"" as workaround",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/marceltaeumel,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-886417265,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","Build order still a problem on build.linux32ARMv6/squeak.cog.spur/build
[Tested on Raspberry Pi 3 on RasPi Linux].
Still have to comment out #ifdef _FEATURES_H in ""config.h"" as workaround

So, the build.linux32ARMv6 config does include ""features.h"" before ""config.h"" but that's not an issue for ARMv6? How come?
The only unix-specific changes were in these files:

platforms/unix/plugins/FileAttributesPlugin/faSupport.c
platforms/unix/vm/aio.c
platforms/unix/vm/sqUnixVMProfile.c

Don't those apply to the ARMv6 build as well? Would you post the details where ""features.h"" is included first?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/KenDickey,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-886755816,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","On 2021-07-25 23:32, Marcel Taeumel wrote:
>  Would you post the details where ""features.h"" is included first?
OK.  I captured the entire trace, but I believe the salient section is:

vvv===vvv
gcc -Wall   -g -O2 -DNDEBUG -DDEBUGVM=0 -D_GNU_SOURCE -DUSEEVDEV
-DI_REALLY_DONT_CARE_HOW_UNSAFE_THIS_IS -DUSE_MIDI_ALSA -DCOGMTVM=0 
-pthread -DLSB_FIRST=1 -march=armv6 -mfpu=vfp -mfloat-abi=hard 
-Wno-missing-braces -Wno-unknown-pragmas -Wno-unused-value 
-Wno-unused-label -Wno-unused-function -Wno-unused-variable 
-Wno-unused-but-set-variable -DENABLE_FAST_BLT -DHAVE_CONFIG_H  
-DSQUEAK_BUILTIN_PLUGIN 
-I/home/pi/OpenSmalltalk/kenVMfix/build.linux32ARMv6/squeak.cog.spur/build 
-I/home/pi/OpenSmalltalk/kenVMfix/build.linux32ARMv6/squeak.cog.spur/build 
-I/home/pi/OpenSmalltalk/kenVMfix/platforms/unix/vm 
-I/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/vm 
-I/home/pi/OpenSmalltalk/kenVMfix/spursrc/vm -I/usr/local/include 
-I/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/plugins/BitBltPlugin  
-march=armv6 -mfpu=vfp -mfloat-abi=hard -Wno-missing-braces 
-Wno-unknown-pragmas -Wno-unused-value -Wno-unused-label 
-Wno-unused-function -Wno-unused-variable -Wno-unused-but-set-variable   
-c -o BitBltArmSimd.o 
/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/plugins/BitBltPlugin/BitBltArmSimd.c
In file included from
/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/vm/sqMemoryAccess.h:23,
                  from
/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/vm/sqVirtualMachine.h:30,
                  from
/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/plugins/BitBltPlugin/BitBltDispatch.h:30,
                  from
/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/plugins/BitBltPlugin/BitBltInternal.h:29,
                  from
/home/pi/OpenSmalltalk/kenVMfix/platforms/Cross/plugins/BitBltPlugin/BitBltArmSimd.c:29:
/home/pi/OpenSmalltalk/kenVMfix/build.linux32ARMv6/squeak.cog.spur/build/config.h:40:2:
error: #error This file was included too late. Please make sure it is
included earlier
  #error This file was included too late. Please make sure it is included
earlier
   ^~~~~
make[1]: *** [Makefile:182: BitBltArmSimd.o] Error 1
make: *** [Makefile:426: BitBltPlugin/BitBltPlugin.a] Error 2
make: *** Waiting for unfinished jobs....
^^^===^^^",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/KenDickey,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-887597678,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","Did a mvm build on RasPi3: build.kinux32ArmV6/squeak.cog.spur/build.
Changed ""mvm"" to add flag ""-DUSEEVDEV"", after which vm-display-fbdev built and VM runnable.
The -DUSEEVDEV flag should be set based on current pull request for fixes to vm-display-fbdev.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/krono,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-890853438,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","Ah I remember. ARM32 has a custom BitBlt-Plugin.
Did 06d1b2d fix it?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,562,2021-04-26T18:53:54Z,2021-07-23T17:56:42Z,2021-08-02T14:25:26Z,MERGED,True,29024,23744,99,https://github.com/nicolas-cellier-aka-nice,Fix include order,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562,https://github.com/KenDickey,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/562#issuecomment-891071850,"This enables the linux builds again, while preserving windows and macos builds.
That is a fix for #560
If this is compatible with TERF VM, then it should be merged ASAP, the builds are red for too long.
(we'll have to inquire next point of failure...)","Looks good now.
Thanks much!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,563,2021-04-30T01:52:59Z,2021-05-05T00:56:15Z,2021-05-05T14:22:19Z,MERGED,True,1,1,1,https://github.com/jdougan,Fix UDP binding in Windows sockets,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563,https://github.com/jdougan,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563,Changed sqSocketListenOnPortBacklogSizeInterface() to match general behavior of Unix socket version. Previously was always incorrectly binding UDP sockets to INADDR_ANY instead of the specified IPv4 address.,Changed sqSocketListenOnPortBacklogSizeInterface() to match general behavior of Unix socket version. Previously was always incorrectly binding UDP sockets to INADDR_ANY instead of the specified IPv4 address.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,563,2021-04-30T01:52:59Z,2021-05-05T00:56:15Z,2021-05-05T14:22:19Z,MERGED,True,1,1,1,https://github.com/jdougan,Fix UDP binding in Windows sockets,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563#issuecomment-832350744,Changed sqSocketListenOnPortBacklogSizeInterface() to match general behavior of Unix socket version. Previously was always incorrectly binding UDP sockets to INADDR_ANY instead of the specified IPv4 address.,"Hi John, thanks for this.  Which specific tests are affected by this change?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,563,2021-04-30T01:52:59Z,2021-05-05T00:56:15Z,2021-05-05T14:22:19Z,MERGED,True,1,1,1,https://github.com/jdougan,Fix UDP binding in Windows sockets,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563,https://github.com/jdougan,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563#issuecomment-832406913,Changed sqSocketListenOnPortBacklogSizeInterface() to match general behavior of Unix socket version. Previously was always incorrectly binding UDP sockets to INADDR_ANY instead of the specified IPv4 address.,"No tests present in 5.3 broke. I could redo my test code and stick it in the socket tests, if you could point me to how to get it integrated.  I caught it while working on Rbt to make it handle multiple network interfaces more sanely.
This prior behavior was normal up until Sept. 2003, when there was discussion on the squeak-l about it and Ian updated the Unix code to do the right thing. Since then there have been some complaints, but apparently no one who had the expertise or time to fix it was available.  Is there anyone at present who has the nominal responsibility for the socket plugin and the various platform modules? I spent a lot of time reading the code and have some questions about the whys of the design.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,563,2021-04-30T01:52:59Z,2021-05-05T00:56:15Z,2021-05-05T14:22:19Z,MERGED,True,1,1,1,https://github.com/jdougan,Fix UDP binding in Windows sockets,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563#issuecomment-832429226,Changed sqSocketListenOnPortBacklogSizeInterface() to match general behavior of Unix socket version. Previously was always incorrectly binding UDP sockets to INADDR_ANY instead of the specified IPv4 address.,"John, look at SocketTest in a 5.3 or preferably a trunk image.  You can then submit a new version of the Tests package to inbox or just mail me a change set etc. We can discuss more on squeak-dev to eg make you a committer etc.
Discuss the design issues on vm-dev or squeak-dev.  I’m curious about the design too and would love to get rid of the threads and the asynchronous name lookup, replaced by a proper threaded FFI.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,563,2021-04-30T01:52:59Z,2021-05-05T00:56:15Z,2021-05-05T14:22:19Z,MERGED,True,1,1,1,https://github.com/jdougan,Fix UDP binding in Windows sockets,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563,https://github.com/smalltalking,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/563#issuecomment-832728987,Changed sqSocketListenOnPortBacklogSizeInterface() to match general behavior of Unix socket version. Previously was always incorrectly binding UDP sockets to INADDR_ANY instead of the specified IPv4 address.,"I noted this issue along with some others back in 2014 but never got my questions answered: http://lists.squeakfoundation.org/pipermail/vm-dev/2014-December/017383.html
SocketPlugin's platform code needs some review/cleanup.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,565,2021-05-04T11:23:06Z,,2021-05-04T20:27:45Z,OPEN,False,2929,64,17,https://github.com/bavison,Update BitBlt support (primarily for 64-bit ARM),17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/565,https://github.com/bavison,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/565,"The accelerated BitBlt framework was initially targeted at the ARM11, running the AArch32 instruction set (which is the only one it fully supported).
More recent ARMs run much faster, which has enabled more comprehensive testing via the BitBlt fuzz test framework (https://github.com/bavison/SqueakBitBltTest). This has detected a handful of bugs in both the AArch32-specific and the architecture-neutral parts of the fast BitBlt framework. First I address these.
Next, I add a number of BitBlt fast paths written in platform-independent C. The 8-to-32bpp conversion routine is as fast as anything I could manage with hand-crafted AArch64 assembly. Others are useful as reference implementations for other architectures, or to fill in gaps in their abilities (for example, while I've introduced a class of fast paths for colour maps that only feature two distinct colours, I haven't retrospectively written any AArch32 fast paths for them, so the C fast path will be used for them on AArch32).
The fast path that handles operations with scalar halftoning and 32bpp destination images is a bit of a special case, in that it acts to extend the capabilities of other fast paths. It thus accelerates both AArch32 and AArch64.
The most significant commit, however, is the last one. This features a collection of fast paths implemented using inline AArch64 assembly, tuned for Cortex-A72 (as found in the Raspberry Pi 4). Based on the results of profiling, this has an emphasis on operations with a 32bpp destination image.
Operations with any source depth, in conjunction with 22 of the possible combinationRules (including the common sourceWord, pixPaint and alphaBlend rules) should all be accelerated, providing you don't use little-endian pixel packing, vector halftoning, or non-standard colour map rules when converting from different colour depths.
There are additional fast paths for alphaBlend for either a constant source colour, or a source image whose colour map only consists of two different colours (i.e. where the source image is effectively used as a 1bpp mask, despite being of a greater depth).","The accelerated BitBlt framework was initially targeted at the ARM11, running the AArch32 instruction set (which is the only one it fully supported).
More recent ARMs run much faster, which has enabled more comprehensive testing via the BitBlt fuzz test framework (https://github.com/bavison/SqueakBitBltTest). This has detected a handful of bugs in both the AArch32-specific and the architecture-neutral parts of the fast BitBlt framework. First I address these.
Next, I add a number of BitBlt fast paths written in platform-independent C. The 8-to-32bpp conversion routine is as fast as anything I could manage with hand-crafted AArch64 assembly. Others are useful as reference implementations for other architectures, or to fill in gaps in their abilities (for example, while I've introduced a class of fast paths for colour maps that only feature two distinct colours, I haven't retrospectively written any AArch32 fast paths for them, so the C fast path will be used for them on AArch32).
The fast path that handles operations with scalar halftoning and 32bpp destination images is a bit of a special case, in that it acts to extend the capabilities of other fast paths. It thus accelerates both AArch32 and AArch64.
The most significant commit, however, is the last one. This features a collection of fast paths implemented using inline AArch64 assembly, tuned for Cortex-A72 (as found in the Raspberry Pi 4). Based on the results of profiling, this has an emphasis on operations with a 32bpp destination image.
Operations with any source depth, in conjunction with 22 of the possible combinationRules (including the common sourceWord, pixPaint and alphaBlend rules) should all be accelerated, providing you don't use little-endian pixel packing, vector halftoning, or non-standard colour map rules when converting from different colour depths.
There are additional fast paths for alphaBlend for either a constant source colour, or a source image whose colour map only consists of two different colours (i.e. where the source image is effectively used as a 1bpp mask, despite being of a greater depth).",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,565,2021-05-04T11:23:06Z,,2021-05-04T20:27:45Z,OPEN,False,2929,64,17,https://github.com/bavison,Update BitBlt support (primarily for 64-bit ARM),17,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/565,https://github.com/nicolas-cellier-aka-nice,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/565#issuecomment-832221598,"The accelerated BitBlt framework was initially targeted at the ARM11, running the AArch32 instruction set (which is the only one it fully supported).
More recent ARMs run much faster, which has enabled more comprehensive testing via the BitBlt fuzz test framework (https://github.com/bavison/SqueakBitBltTest). This has detected a handful of bugs in both the AArch32-specific and the architecture-neutral parts of the fast BitBlt framework. First I address these.
Next, I add a number of BitBlt fast paths written in platform-independent C. The 8-to-32bpp conversion routine is as fast as anything I could manage with hand-crafted AArch64 assembly. Others are useful as reference implementations for other architectures, or to fill in gaps in their abilities (for example, while I've introduced a class of fast paths for colour maps that only feature two distinct colours, I haven't retrospectively written any AArch32 fast paths for them, so the C fast path will be used for them on AArch32).
The fast path that handles operations with scalar halftoning and 32bpp destination images is a bit of a special case, in that it acts to extend the capabilities of other fast paths. It thus accelerates both AArch32 and AArch64.
The most significant commit, however, is the last one. This features a collection of fast paths implemented using inline AArch64 assembly, tuned for Cortex-A72 (as found in the Raspberry Pi 4). Based on the results of profiling, this has an emphasis on operations with a 32bpp destination image.
Operations with any source depth, in conjunction with 22 of the possible combinationRules (including the common sourceWord, pixPaint and alphaBlend rules) should all be accelerated, providing you don't use little-endian pixel packing, vector halftoning, or non-standard colour map rules when converting from different colour depths.
There are additional fast paths for alphaBlend for either a constant source colour, or a source image whose colour map only consists of two different colours (i.e. where the source image is effectively used as a 1bpp mask, despite being of a greater depth).","Great!
The only thing to be changed is that src/plugins/BitBltPlugin/BitBltPlugin.c is generated from Smalltalk slang code.
I think that we can merge first, then modify VMMaker and regenerate BitBltPlugin
Thanks!!!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,570,2021-06-11T16:15:30Z,2021-06-11T17:40:35Z,2021-06-11T17:40:35Z,MERGED,True,90,11,5,https://github.com/dcstes,sunos specific change: use libmapmalloc for acquiring heap space,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/570,https://github.com/dcstes,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/570,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
SunOS specific change:
To avoid heap allocations with brk(2), use libmapmalloc(3LIB).
Setup the SunOS build scripts to link libmapmalloc.
Update the HowToBuild file.
All those changes are in the SunOS specific directories (build scripts).
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJgw4k2AAoJENdFDkXGicizdPgH+gIYCyYYp5x8HbsKbBwGIzHe
++oUJbYBzDT0PIAH0j94jKuskGIzsVzHGtJNrCIH7HtH2XnAOjCc+DtIT5MJ/tKf
oxbrnwtGiCOz3sHPE89tgyFnc+/hXLFrlabq/L8qSzgQ0zF2Vs1KzBMQW37Pr4ji
XHsHooP+0ZEppBilqYu8Iq8WJ3hDQM3awTp4tsw6TsDL0DX49HfEHbIRokwsO1nv
P3FhN76IZmFWdipMMkEeaBd0DJakpvNthPFAUpfjFyS2pyBMinP3AVwNt2wYe/YX
Tc+hRe39TrSfAmYvFNFTfFyte/TX+qs6fF07t9rbO1/PUGrNVOV209mxHFEZn7Y=
=W1Tq
-----END PGP SIGNATURE-----","-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256
SunOS specific change:
To avoid heap allocations with brk(2), use libmapmalloc(3LIB).
Setup the SunOS build scripts to link libmapmalloc.
Update the HowToBuild file.
All those changes are in the SunOS specific directories (build scripts).
Regards,
David Stes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2
iQEcBAEBCAAGBQJgw4k2AAoJENdFDkXGicizdPgH+gIYCyYYp5x8HbsKbBwGIzHe
++oUJbYBzDT0PIAH0j94jKuskGIzsVzHGtJNrCIH7HtH2XnAOjCc+DtIT5MJ/tKf
oxbrnwtGiCOz3sHPE89tgyFnc+/hXLFrlabq/L8qSzgQ0zF2Vs1KzBMQW37Pr4ji
XHsHooP+0ZEppBilqYu8Iq8WJ3hDQM3awTp4tsw6TsDL0DX49HfEHbIRokwsO1nv
P3FhN76IZmFWdipMMkEeaBd0DJakpvNthPFAUpfjFyS2pyBMinP3AVwNt2wYe/YX
Tc+hRe39TrSfAmYvFNFTfFyte/TX+qs6fF07t9rbO1/PUGrNVOV209mxHFEZn7Y=
=W1Tq
-----END PGP SIGNATURE-----",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,572,2021-07-12T10:04:50Z,2021-07-13T06:17:11Z,2021-07-13T06:17:11Z,MERGED,True,177,137,10,https://github.com/marceltaeumel,Fixes Windows builds,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/572,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/572,Makes Windows builds compile and run again.,Makes Windows builds compile and run again.,True,{'HOORAY': ['https://github.com/krono']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,573,2021-07-16T10:58:31Z,2021-08-25T01:14:34Z,2021-08-26T11:43:43Z,MERGED,True,3650700,3654878,2736,https://github.com/marceltaeumel,Move all flavors of CogVM sources to src/vm.*; move all build.* flavors to building/*,38,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,"Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.","Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,573,2021-07-16T10:58:31Z,2021-08-25T01:14:34Z,2021-08-26T11:43:43Z,MERGED,True,3650700,3654878,2736,https://github.com/marceltaeumel,Move all flavors of CogVM sources to src/vm.*; move all build.* flavors to building/*,38,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573#issuecomment-905099419,"Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.","Since v3 is implicitly 32-bits how say we

lose the .32bit & .64bit and just have spur32 & spur64?
lose vm; it's also implicit given the plugins directory
So then we'd have
src/
ckformat.c
examplePlugins.ext
examplePlugins.int
lowcode.cog.spur32
lowcode.stack.spur32
lowcode.cog.spur64
lowcode.stack.spur64
newspeak.cog.spur32
newspeak.stack.spur32
newspeak.cog.spur64
newspeak.stack.spur64
plugins
cog.spur32
cog.v3
sista.spur32
stack.spur32
stack.v3
cog.spur64
sista.spur64
stack.spur64

And to my mind the object memory architecture is primary (since it determines image compatibility), so I would go for
ckformat.c
examplePlugins.ext
examplePlugins.int
plugins
spur32.cog
spur32.cog.lowcode
spur32.cog.newspeak
spur32.sista
spur32.stack
spur32.stack.lowcode
spur32.stack.newspeak
spur64.cog
spur64.cog.lowcode
spur64.cog.newspeak
spur64.sista
spur64.stack
spur64.stack.lowcode
spur64.stack.newspeak
v3.cog
v3.stack
That makes much more sense to me.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,573,2021-07-16T10:58:31Z,2021-08-25T01:14:34Z,2021-08-26T11:43:43Z,MERGED,True,3650700,3654878,2736,https://github.com/marceltaeumel,Move all flavors of CogVM sources to src/vm.*; move all build.* flavors to building/*,38,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573#issuecomment-905102412,"Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.","Also, all generated files fall foul of scripts/findUnofficialFiles (they are all generated from a dirty VM package).  This is a no no :-).  BTW, we should merely move the generated files from the previous commit into their new positions, not regenerate them.  e.g. the fact that spur64src/vm/cogit.c has not been regenerated since VMMaker.oscog-eem.2859 is meaningful (if only to me). i.e. I try hard to regenerate only when the generated code actually changes, not just when VMMaker changes.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,573,2021-07-16T10:58:31Z,2021-08-25T01:14:34Z,2021-08-26T11:43:43Z,MERGED,True,3650700,3654878,2736,https://github.com/marceltaeumel,Move all flavors of CogVM sources to src/vm.*; move all build.* flavors to building/*,38,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,https://github.com/marceltaeumel,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573#issuecomment-905208315,"Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.","Since v3 is implicitly 32-bits [...]

I made this explicit so that newcomers can see it immediately. No need to hide this information. :-) It also helped me writing the GitHub Actions workflows. There, 32-bit and 64-bit is kind of the primary discriminator. v3 and spur come secondly.

And to my mind the object memory architecture is primary (since it determines image compatibility),

Hmm... I found it helpful to not drop the ""vm."" prefix and to move both ""newspeak"" and ""lowcode"" to the front to indicate that both are flavors not directly connected to the basic osvm development.

Also, all generated files fall foul of scripts/findUnofficialFiles (they are all generated from a dirty VM package). This is a no no :-).

Is there a way to read up on this? I tried to not commit comment-only changes. And because of the ""Fix config.h include order""-issue, I got into the habit of re-generating the sources myself to see how good we can use the GitHub-Tooling for such things. :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,573,2021-07-16T10:58:31Z,2021-08-25T01:14:34Z,2021-08-26T11:43:43Z,MERGED,True,3650700,3654878,2736,https://github.com/marceltaeumel,Move all flavors of CogVM sources to src/vm.*; move all build.* flavors to building/*,38,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573#issuecomment-905610870,"Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.","OK, ciao bella.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,573,2021-07-16T10:58:31Z,2021-08-25T01:14:34Z,2021-08-26T11:43:43Z,MERGED,True,3650700,3654878,2736,https://github.com/marceltaeumel,Move all flavors of CogVM sources to src/vm.*; move all build.* flavors to building/*,38,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,https://github.com/marceltaeumel,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573#issuecomment-905636501,"Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.","Hmm... so you did not like the path structure in ""src"" but merged the PR anyway? I am confused. Well, it's very simple to change the structure as you proposed. I thought I double-checked that with you on vm-dev weeks ago.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,573,2021-07-16T10:58:31Z,2021-08-25T01:14:34Z,2021-08-26T11:43:43Z,MERGED,True,3650700,3654878,2736,https://github.com/marceltaeumel,Move all flavors of CogVM sources to src/vm.*; move all build.* flavors to building/*,38,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573,https://github.com/marceltaeumel,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/573#issuecomment-906334767,"Moves all flavors of CogVM sources into ""src/"" folder.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036540.html
Moves all build folders down to ""building/"" folder. Chose ""building"" over ""build"" to avoid conflicts with common build systems.
http://lists.squeakfoundation.org/pipermail/vm-dev/2021-July/036551.html
For updates to VMMaker, see VMMaker.oscog-mt.2987 in VMMakerInbox.
Note that this PR was successfully tests through our GitHub Actions workflows: https://github.com/OpenSmalltalk/opensmalltalk-vm/actions
How to Review This
This PR shows over 3 million lines of text added and about the same number removed. This is not how one should review this PR. Instead, go through the list of commits and take a look at each message and diff. While doing so, you should ignore the following commits because those are either a ""move files"" operation or a ""update CogVM sources"":

Move generated sources from ""*src/vm"" to ""src/vm.*"": 5d32f6d 0ebb846
Move build files from ""build.*"" to ""building/*"": 0adda86
Update CogVM sources to avoid conflicts with upstream: 95f1068 255b3d2 de84852 f1c0a95
Various merge-commits from upstream: 0ac5379 c488ac4 5796836

All other commits have rather simple diffs, accompanied with explanatory commit messages.","In PR #587, I just restored the CogVM sources to what you committed in 12b0d50. See marceltaeumel@3254c54",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,576,2021-07-25T21:10:24Z,,2021-07-28T19:42:59Z,OPEN,False,44,33,10,https://github.com/KenDickey,Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576,"Fix for bug:
Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575
Tested on arm32 Raspberry Pi 3 with Raspberry Pi OS (no X11)
and on arm64 Le Potato (AML-S905S-XX) with Armbian OS.
Nota Bene: The include file ordering fix for arm64 does not seem to have been applied yet to the 32 bit platform.","Fix for bug:
Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575
Tested on arm32 Raspberry Pi 3 with Raspberry Pi OS (no X11)
and on arm64 Le Potato (AML-S905S-XX) with Armbian OS.
Nota Bene: The include file ordering fix for arm64 does not seem to have been applied yet to the 32 bit platform.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,576,2021-07-25T21:10:24Z,,2021-07-28T19:42:59Z,OPEN,False,44,33,10,https://github.com/KenDickey,Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576,https://github.com/KenDickey,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576#issuecomment-887778145,"Fix for bug:
Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575
Tested on arm32 Raspberry Pi 3 with Raspberry Pi OS (no X11)
and on arm64 Le Potato (AML-S905S-XX) with Armbian OS.
Nota Bene: The include file ordering fix for arm64 does not seem to have been applied yet to the 32 bit platform.","Notes:
[A] Given the superannuated nature of the code, it would be good to eliminate the ps2 mouse support and invert the logic so that the -DUSEEVDEV guard was inverted so as to make this code path the default code. Then this flag would no longer be required by the normal build.  IMHO, this would be less confusing.
[B] The display_printUsage() help text options really need to be more thoroughly tested, e.g. by people using non-us keyboards.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,576,2021-07-25T21:10:24Z,,2021-07-28T19:42:59Z,OPEN,False,44,33,10,https://github.com/KenDickey,Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576,https://github.com/eliotmiranda,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576#issuecomment-887899027,"Fix for bug:
Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575
Tested on arm32 Raspberry Pi 3 with Raspberry Pi OS (no X11)
and on arm64 Le Potato (AML-S905S-XX) with Armbian OS.
Nota Bene: The include file ordering fix for arm64 does not seem to have been applied yet to the 32 bit platform.","On Tue, Jul 27, 2021 at 12:32 PM Ken Dickey ***@***.***> wrote:
 Notes:
 [A] Given the superannuated nature of the code, it would be good to
 eliminate the ps2 mouse support and invert the logic so that the -DUSEEVDEV
 guard was inverted so as to make this code path the default code. Then this
 flag would no longer be required by the normal build. IMHO, this would be
 less confusing.

If it works for you, go for it.  You're the one driving fb-dev support
these days.  Make it the way you want it.
…
 [B] The display_printUsage() help text options really need to be more
 thoroughly tested, e.g. by people using non-us keyboards.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#576 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ADY5VUELDOJTHIPCDSCWNSTTZ4CUHANCNFSM5A6442CQ>
 .


-- 
_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,576,2021-07-25T21:10:24Z,,2021-07-28T19:42:59Z,OPEN,False,44,33,10,https://github.com/KenDickey,Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576,https://github.com/KenDickey,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/576#issuecomment-888570789,"Fix for bug:
Unable to rebind keyboard device in vm-display-fbdev (FrameBuffer) #575
Tested on arm32 Raspberry Pi 3 with Raspberry Pi OS (no X11)
and on arm64 Le Potato (AML-S905S-XX) with Armbian OS.
Nota Bene: The include file ordering fix for arm64 does not seem to have been applied yet to the 32 bit platform.","Elided USEEVDEV flag & fixes a few nits.
Tested mvm's & working on:
Aarch64/arm64 [LePotato/Armbian]
squeak.cog.spur/build
squeak.cog.spur/build.debug
squeak.stack.spur/build
Arm32 [RPi3/Raspberry Pi OS]
squeak.cog.spur/build
squeak.cog.spur/build.debug
Looks ready to integrate..",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,577,2021-07-27T07:54:45Z,2021-07-27T08:43:56Z,2021-08-04T22:11:41Z,MERGED,True,15,10,5,https://github.com/marceltaeumel,Fixes include order for ARM32 builds. Thanks to Bruce O'Neel!,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/577,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/577,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,577,2021-07-27T07:54:45Z,2021-07-27T08:43:56Z,2021-08-04T22:11:41Z,MERGED,True,15,10,5,https://github.com/marceltaeumel,Fixes include order for ARM32 builds. Thanks to Bruce O'Neel!,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/577,https://github.com/KenDickey,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/577#issuecomment-893008902,,"Verified clean build with build.linux32ARMv6/squeak.{stack,cog}.spur/build/mvm
on RaspBerry Pi 3 running Raspberry Pi OS.
Note that I can't test either stack or cog VMs as no X11 and vm-display-fbdev needs pulll/merge to fix issue #575.  But the VM binaries build just fine,  [Also, VectorEnginePlugin not yet integrated].  FYI.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,578,2021-07-29T00:34:58Z,2021-08-08T18:42:15Z,2021-08-08T21:01:33Z,CLOSED,False,5189,10,25,https://github.com/dtlewis290,Add vector engine plugin,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578,"Update the VMMaker build scripts to add a repository for VectorEnginePlugin, using a squeaksource mirror of Juan's repository for convenience. Development source for VectorEnginePlugin is Packages/Features/VectorEnginePlugin.pck.st from repository https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev.
Disable compiler optimization for VectorEnginePlugin. For gcc this is not an issue, but with llvm any compiler optimization
results in a broken plugin (various symptoms). Add -O0 to XCFLAGS in makefile.inc to override any previous definition of -O in CFLAGS.
Not included in this PR: VectorEnginePlugin needs to be added to various plugin.ext files. So far I have tested only X86 Linux, so this should be the subject of separate updates.","Update the VMMaker build scripts to add a repository for VectorEnginePlugin, using a squeaksource mirror of Juan's repository for convenience. Development source for VectorEnginePlugin is Packages/Features/VectorEnginePlugin.pck.st from repository https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev.
Disable compiler optimization for VectorEnginePlugin. For gcc this is not an issue, but with llvm any compiler optimization
results in a broken plugin (various symptoms). Add -O0 to XCFLAGS in makefile.inc to override any previous definition of -O in CFLAGS.
Not included in this PR: VectorEnginePlugin needs to be added to various plugin.ext files. So far I have tested only X86 Linux, so this should be the subject of separate updates.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,578,2021-07-29T00:34:58Z,2021-08-08T18:42:15Z,2021-08-08T21:01:33Z,CLOSED,False,5189,10,25,https://github.com/dtlewis290,Add vector engine plugin,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578,https://github.com/dtlewis290,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578#issuecomment-890390944,"Update the VMMaker build scripts to add a repository for VectorEnginePlugin, using a squeaksource mirror of Juan's repository for convenience. Development source for VectorEnginePlugin is Packages/Features/VectorEnginePlugin.pck.st from repository https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev.
Disable compiler optimization for VectorEnginePlugin. For gcc this is not an issue, but with llvm any compiler optimization
results in a broken plugin (various symptoms). Add -O0 to XCFLAGS in makefile.inc to override any previous definition of -O in CFLAGS.
Not included in this PR: VectorEnginePlugin needs to be added to various plugin.ext files. So far I have tested only X86 Linux, so this should be the subject of separate updates.",I went ahead an added the generated source VectorEnginePlugin.c and updated the plugins.ext for most Linux configurations.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,578,2021-07-29T00:34:58Z,2021-08-08T18:42:15Z,2021-08-08T21:01:33Z,CLOSED,False,5189,10,25,https://github.com/dtlewis290,Add vector engine plugin,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578,https://github.com/dtlewis290,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578#issuecomment-894302821,"Update the VMMaker build scripts to add a repository for VectorEnginePlugin, using a squeaksource mirror of Juan's repository for convenience. Development source for VectorEnginePlugin is Packages/Features/VectorEnginePlugin.pck.st from repository https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev.
Disable compiler optimization for VectorEnginePlugin. For gcc this is not an issue, but with llvm any compiler optimization
results in a broken plugin (various symptoms). Add -O0 to XCFLAGS in makefile.inc to override any previous definition of -O in CFLAGS.
Not included in this PR: VectorEnginePlugin needs to be added to various plugin.ext files. So far I have tested only X86 Linux, so this should be the subject of separate updates.","As far as I can tell this is a safe update. If no objections, I'll merge it a couple of days from now.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,578,2021-07-29T00:34:58Z,2021-08-08T18:42:15Z,2021-08-08T21:01:33Z,CLOSED,False,5189,10,25,https://github.com/dtlewis290,Add vector engine plugin,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578,https://github.com/KenDickey,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578#issuecomment-894495561,"Update the VMMaker build scripts to add a repository for VectorEnginePlugin, using a squeaksource mirror of Juan's repository for convenience. Development source for VectorEnginePlugin is Packages/Features/VectorEnginePlugin.pck.st from repository https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev.
Disable compiler optimization for VectorEnginePlugin. For gcc this is not an issue, but with llvm any compiler optimization
results in a broken plugin (various symptoms). Add -O0 to XCFLAGS in makefile.inc to override any previous definition of -O in CFLAGS.
Not included in this PR: VectorEnginePlugin needs to be added to various plugin.ext files. So far I have tested only X86 Linux, so this should be the subject of separate updates.","Juan Vuletich reports testing with VectorEnginePLugin:
""I've tried it on MacOS, Ubuntu X64 and Windows X64, running on a fast I9 MacBook. Also tried Dave's 32 bit interpreter for Linux X64 on the same machine. I also tried Win 32 on a 2010 Atom netbook. All them run fine.""
Looks good to integrate into ""platforms/Cross/plugins""",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,578,2021-07-29T00:34:58Z,2021-08-08T18:42:15Z,2021-08-08T21:01:33Z,CLOSED,False,5189,10,25,https://github.com/dtlewis290,Add vector engine plugin,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578,https://github.com/dtlewis290,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578#issuecomment-894838218,"Update the VMMaker build scripts to add a repository for VectorEnginePlugin, using a squeaksource mirror of Juan's repository for convenience. Development source for VectorEnginePlugin is Packages/Features/VectorEnginePlugin.pck.st from repository https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev.
Disable compiler optimization for VectorEnginePlugin. For gcc this is not an issue, but with llvm any compiler optimization
results in a broken plugin (various symptoms). Add -O0 to XCFLAGS in makefile.inc to override any previous definition of -O in CFLAGS.
Not included in this PR: VectorEnginePlugin needs to be added to various plugin.ext files. So far I have tested only X86 Linux, so this should be the subject of separate updates.","Prompted by notes from Marcel, I realize that I made a mistake in the patch I did for the VMMaker build scripts. I want to withdraw those update until I can check with Eliot as to how best to handle Cuis underscore assignment characters when loading the plugin from either Cuis GitHub or the separate squeaksource mirror of the Cuis GitHub repository. For this reason I am going to close this pull request. I will cherry-pick the actual C source commits so that these will be available for general use.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,578,2021-07-29T00:34:58Z,2021-08-08T18:42:15Z,2021-08-08T21:01:33Z,CLOSED,False,5189,10,25,https://github.com/dtlewis290,Add vector engine plugin,8,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578,https://github.com/KenDickey,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/578#issuecomment-894854705,"Update the VMMaker build scripts to add a repository for VectorEnginePlugin, using a squeaksource mirror of Juan's repository for convenience. Development source for VectorEnginePlugin is Packages/Features/VectorEnginePlugin.pck.st from repository https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev.
Disable compiler optimization for VectorEnginePlugin. For gcc this is not an issue, but with llvm any compiler optimization
results in a broken plugin (various symptoms). Add -O0 to XCFLAGS in makefile.inc to override any previous definition of -O in CFLAGS.
Not included in this PR: VectorEnginePlugin needs to be added to various plugin.ext files. So far I have tested only X86 Linux, so this should be the subject of separate updates.","Confirm  current is working with:
build.linux64ARMv8/squeak.stack.spur/build/mvm clean on Aarch64 Chromebook 2
and
build.linux32ARMv6/squeak.cog.spur/build/mvm clean on Raspberry Pi 3.
Thanks much!!
-KenD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,579,2021-07-30T13:08:10Z,2021-07-30T17:44:45Z,2021-07-30T22:16:58Z,MERGED,True,1291,951,50,https://github.com/marceltaeumel,Recover automated builds via GitHub Actions,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579,"Adds workflows (i.e., GitHub Actions) for automated builds. Replaces TravisCI and AppVeyor integration.
Automated builds on push/pull-requests:

Linux (x86, 64-bit and 32-bit)
Linux (ARMv6, ARMv7, ARMv8/Aarch64)
macOS (x86, only 64-bit)
Windows (x86, 64-bit and 32-bit)

Mostly, those builds include the following flavors:

squeak.cog.spur (also for Cuis)
squeak.sista.spur (also for Cuis)
squeak.stack.spur (also for Cuis)
pharo.cog.spur (for Pharo7.0 and before, I suppose)
pharo.sista.spur (for Pharo7.0 and before, I suppose)
pharo.stack.spur (for Pharo7.0 and before, I suppose)

There are some exceptions from this pattern such as:

pharo.* not building on Windows bc. of an issue with third-party lib builds, related to GitHub Actions
*.sista.spur bc. of unprepared build target on some platforms such as all ARM targets
No Linux itimer-heartbeat builds prepared for *.stack.spur; threaded only for now
No pharo.* builds prepared for ARM so far, except pharo.cog.cpur for ARMv6 in monthly builds; see below

Still, many if not all of those issues can easily be fixed in the future. We would just add the missing build configurations. :-)
Note that all these VM flavors include builds for ""fast,"" ""assert,"" and ""debug"" mode -- which we did not have in our previous TravisCI/AppVeyor setup.

There are also two separate workflows that manage ""extra builds,"" such as for VM flavors that are not used on a regular basis:

newspeak.* (incl. ARMv7)
*.v3 (incl. ARMv6)
*.lowcode
pharo.cog.spur for ARMv6

These extra builds are triggered once per month or anytime per request.
These extra builds are only in ""fast"" mode.

All the latest build artifacts can be downloaded from three different tags, which are for my fork as follows:

https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-assert-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-debug-build

After merging this pull-request, replace ""marceltaeumel"" with ""opensmalltalk-vm"", and you will form the respective URLs. The URL will be stable for any particular VM flavor and platform. Feel free to share those URLs to ""Get the latest bleeding edge OSVM now!"" :-)
For previous build artifacts, note that all workflows store their artifacts with a timestamp after they ran. You can access those artifacts for about 90 days when logged into GitHub. Here is an example:

https://github.com/marceltaeumel/opensmalltalk-vm/actions/runs/1073960213

Note that you can download a ZIP archive from GitHub, which will then hold the actual build artifact/container, e.g., *.zip or *.tar.gz or *.dmg.

Finally, we can now manage builds and artifacts for release candidates:

Tag a commit as candidate such as ""202107301330""
For each ""Build for *""-workflow on the actions page for OSVM, just click ""Run workflow"" where you enter that tag and manually start the workflow.
Those artifacts will be attached to the tag and are then accessible under, e.g., ""https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/202107301330"", just like the latest-build artifacts are.

For an actual VM release, we would manually create a release through the GitHub webpage and copy over the artifacts from the latest release candidate. For the squeak-app bundles, we would also copy those over to http://files.squeak.org/base/.

After merging this PR, an owner in this repository should:

Update the certificates in deploy/squeak, deploy/newspeak, and deploy/pharo and configure the required secret as documented in .github/workflows/macos.yml
Deactivate the TravisCI and AppVeyor hooks. Their .yml files have been removed already.

Happy coding!","Adds workflows (i.e., GitHub Actions) for automated builds. Replaces TravisCI and AppVeyor integration.
Automated builds on push/pull-requests:

Linux (x86, 64-bit and 32-bit)
Linux (ARMv6, ARMv7, ARMv8/Aarch64)
macOS (x86, only 64-bit)
Windows (x86, 64-bit and 32-bit)

Mostly, those builds include the following flavors:

squeak.cog.spur (also for Cuis)
squeak.sista.spur (also for Cuis)
squeak.stack.spur (also for Cuis)
pharo.cog.spur (for Pharo7.0 and before, I suppose)
pharo.sista.spur (for Pharo7.0 and before, I suppose)
pharo.stack.spur (for Pharo7.0 and before, I suppose)

There are some exceptions from this pattern such as:

pharo.* not building on Windows bc. of an issue with third-party lib builds, related to GitHub Actions
*.sista.spur bc. of unprepared build target on some platforms such as all ARM targets
No Linux itimer-heartbeat builds prepared for *.stack.spur; threaded only for now
No pharo.* builds prepared for ARM so far, except pharo.cog.cpur for ARMv6 in monthly builds; see below

Still, many if not all of those issues can easily be fixed in the future. We would just add the missing build configurations. :-)
Note that all these VM flavors include builds for ""fast,"" ""assert,"" and ""debug"" mode -- which we did not have in our previous TravisCI/AppVeyor setup.

There are also two separate workflows that manage ""extra builds,"" such as for VM flavors that are not used on a regular basis:

newspeak.* (incl. ARMv7)
*.v3 (incl. ARMv6)
*.lowcode
pharo.cog.spur for ARMv6

These extra builds are triggered once per month or anytime per request.
These extra builds are only in ""fast"" mode.

All the latest build artifacts can be downloaded from three different tags, which are for my fork as follows:

https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-assert-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-debug-build

After merging this pull-request, replace ""marceltaeumel"" with ""opensmalltalk-vm"", and you will form the respective URLs. The URL will be stable for any particular VM flavor and platform. Feel free to share those URLs to ""Get the latest bleeding edge OSVM now!"" :-)
For previous build artifacts, note that all workflows store their artifacts with a timestamp after they ran. You can access those artifacts for about 90 days when logged into GitHub. Here is an example:

https://github.com/marceltaeumel/opensmalltalk-vm/actions/runs/1073960213

Note that you can download a ZIP archive from GitHub, which will then hold the actual build artifact/container, e.g., *.zip or *.tar.gz or *.dmg.

Finally, we can now manage builds and artifacts for release candidates:

Tag a commit as candidate such as ""202107301330""
For each ""Build for *""-workflow on the actions page for OSVM, just click ""Run workflow"" where you enter that tag and manually start the workflow.
Those artifacts will be attached to the tag and are then accessible under, e.g., ""https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/202107301330"", just like the latest-build artifacts are.

For an actual VM release, we would manually create a release through the GitHub webpage and copy over the artifacts from the latest release candidate. For the squeak-app bundles, we would also copy those over to http://files.squeak.org/base/.

After merging this PR, an owner in this repository should:

Update the certificates in deploy/squeak, deploy/newspeak, and deploy/pharo and configure the required secret as documented in .github/workflows/macos.yml
Deactivate the TravisCI and AppVeyor hooks. Their .yml files have been removed already.

Happy coding!",True,"{'THUMBS_UP': ['https://github.com/darth-cheney', 'https://github.com/bpieber'], 'HOORAY': ['https://github.com/darth-cheney', 'https://github.com/ccrraaiigg', 'https://github.com/bpieber'], 'ROCKET': ['https://github.com/tom95', 'https://github.com/fniephaus', 'https://github.com/bpieber'], 'HEART': ['https://github.com/ccrraaiigg', 'https://github.com/bpieber', 'https://github.com/LinqLover'], 'LAUGH': ['https://github.com/bpieber']}"
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,579,2021-07-30T13:08:10Z,2021-07-30T17:44:45Z,2021-07-30T22:16:58Z,MERGED,True,1291,951,50,https://github.com/marceltaeumel,Recover automated builds via GitHub Actions,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579#issuecomment-889939093,"Adds workflows (i.e., GitHub Actions) for automated builds. Replaces TravisCI and AppVeyor integration.
Automated builds on push/pull-requests:

Linux (x86, 64-bit and 32-bit)
Linux (ARMv6, ARMv7, ARMv8/Aarch64)
macOS (x86, only 64-bit)
Windows (x86, 64-bit and 32-bit)

Mostly, those builds include the following flavors:

squeak.cog.spur (also for Cuis)
squeak.sista.spur (also for Cuis)
squeak.stack.spur (also for Cuis)
pharo.cog.spur (for Pharo7.0 and before, I suppose)
pharo.sista.spur (for Pharo7.0 and before, I suppose)
pharo.stack.spur (for Pharo7.0 and before, I suppose)

There are some exceptions from this pattern such as:

pharo.* not building on Windows bc. of an issue with third-party lib builds, related to GitHub Actions
*.sista.spur bc. of unprepared build target on some platforms such as all ARM targets
No Linux itimer-heartbeat builds prepared for *.stack.spur; threaded only for now
No pharo.* builds prepared for ARM so far, except pharo.cog.cpur for ARMv6 in monthly builds; see below

Still, many if not all of those issues can easily be fixed in the future. We would just add the missing build configurations. :-)
Note that all these VM flavors include builds for ""fast,"" ""assert,"" and ""debug"" mode -- which we did not have in our previous TravisCI/AppVeyor setup.

There are also two separate workflows that manage ""extra builds,"" such as for VM flavors that are not used on a regular basis:

newspeak.* (incl. ARMv7)
*.v3 (incl. ARMv6)
*.lowcode
pharo.cog.spur for ARMv6

These extra builds are triggered once per month or anytime per request.
These extra builds are only in ""fast"" mode.

All the latest build artifacts can be downloaded from three different tags, which are for my fork as follows:

https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-assert-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-debug-build

After merging this pull-request, replace ""marceltaeumel"" with ""opensmalltalk-vm"", and you will form the respective URLs. The URL will be stable for any particular VM flavor and platform. Feel free to share those URLs to ""Get the latest bleeding edge OSVM now!"" :-)
For previous build artifacts, note that all workflows store their artifacts with a timestamp after they ran. You can access those artifacts for about 90 days when logged into GitHub. Here is an example:

https://github.com/marceltaeumel/opensmalltalk-vm/actions/runs/1073960213

Note that you can download a ZIP archive from GitHub, which will then hold the actual build artifact/container, e.g., *.zip or *.tar.gz or *.dmg.

Finally, we can now manage builds and artifacts for release candidates:

Tag a commit as candidate such as ""202107301330""
For each ""Build for *""-workflow on the actions page for OSVM, just click ""Run workflow"" where you enter that tag and manually start the workflow.
Those artifacts will be attached to the tag and are then accessible under, e.g., ""https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/202107301330"", just like the latest-build artifacts are.

For an actual VM release, we would manually create a release through the GitHub webpage and copy over the artifacts from the latest release candidate. For the squeak-app bundles, we would also copy those over to http://files.squeak.org/base/.

After merging this PR, an owner in this repository should:

Update the certificates in deploy/squeak, deploy/newspeak, and deploy/pharo and configure the required secret as documented in .github/workflows/macos.yml
Deactivate the TravisCI and AppVeyor hooks. Their .yml files have been removed already.

Happy coding!","Hi Marcel,

    I think it’s safe to nuke the itinerary builds on all Linux platforms now.  The itinerary builds are a hack to get around the inability to define a heartbeat thread that runs at higher priority then the Smalltalk thread, which is a limitation of pre 2.6 kernels.  So this is ancient history we can say good bye to.  Unless a Linux expert says otherwise n the next day I’d two I’ll nuke all the itimer support.

_,,,^..^,,,_ (phone)
…
 On Jul 30, 2021, at 6:08 AM, Marcel Taeumel ***@***.***> wrote:

 ﻿
 Adds workflows (i.e., GitHub Actions) for automated builds. Replaces TravisCI and AppVeyor integration.

 Automated builds on push/pull-requests:

 Linux (x86, 64-bit and 32-bit)
 Linux (ARMv6, ARMv7, ARMv8/Aarch64)
 macOS (x86, only 64-bit)
 Windows (x86, 64-bit and 32-bit)
 Mostly, those builds include the following flavors:

 squeak.cog.spur (also for Cuis)
 squeak.sista.spur (also for Cuis)
 squeak.stack.spur (also for Cuis)
 pharo.cog.spur (for Pharo7.0 and before, I suppose)
 pharo.sista.spur (for Pharo7.0 and before, I suppose)
 pharo.stack.spur (for Pharo7.0 and before, I suppose)
 There are some exceptions from this pattern such as:

 pharo.* not building on Windows bc. of an issue with third-party lib builds, related to GitHub Actions
 *.sista.spur bc. of unprepared build target on some platforms such as all ARM targets
 No Linux itimer-heartbeat builds prepared for *.stack.spur; threaded only for now
 No pharo.* builds prepared for ARM so far, except pharo.cog.cpur for ARMv6 in monthly builds; see below
 Still, many if not all of those issues can easily be fixed in the future. We would just add the missing build configurations. :-)

 Note that all these VM flavors include builds for ""fast,"" ""assert,"" and ""debug"" mode -- which we did not have in our previous TravisCI/AppVeyor setup.

 There are also two separate workflows that manage ""extra builds,"" such as for VM flavors that are not used on a regular basis:

 newspeak.* (incl. ARMv7)
 *.v3 (incl. ARMv6)
 *.lowcode
 pharo.cog.spur for ARMv6
 These extra builds are triggered once per month or anytime per request.

 These extra builds are only in ""fast"" mode.

 All the latest build artifacts can be downloaded from three different tags, which are for my fork as follows:

 https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-build
 https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-assert-build
 https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-debug-build
 After merging this pull-request, replace ""marceltaeumel"" with ""opensmalltalk-vm"", and you will form the respective URLs. The URL will be stable for any particular VM flavor and platform. Feel free to share those URLs to ""Get the latest bleeding edge OSVM now!"" :-)

 For previous build artifacts, note that all workflows store their artifacts with a timestamp after they ran. You can access those artifacts for about 90 days when logged into GitHub. Here is an example:

 https://github.com/marceltaeumel/opensmalltalk-vm/actions/runs/1073960213
 Note that you can download a ZIP archive from GitHub, which will then hold the actual build artifact/container, e.g., *.zip or *.tar.gz or *.dmg.

 Finally, we can now manage builds and artifacts for release candidates:

 Tag a commit as candidate such as ""202107301330""
 For each ""Build for *""-workflow on the actions page for OSVM, just click ""Run workflow"" where you enter that tag and manually start the workflow.
 Those artifacts will be attached to the tag and are then accessible under, e.g., ""https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/202107301330"", just like the latest-build artifacts are.
 For an actual VM release, we would manually create a release through the GitHub webpage and copy over the artifacts from the latest release candidate. For the squeak-app bundles, we would also copy those over to http://files.squeak.org/base/.

 After merging this PR, an owner in this repository should:

 Update the certificates in deploy/squeak, deploy/newspeak, and deploy/pharo and configure the required secret as documented in .github/workflows/macos.yml
 Deactivate the TravisCI and AppVeyor hooks. Their .yml files have been removed already.
 Happy coding!

 You can view, comment on, or merge this pull request online at:

   #579

 Commit Summary

 Adds latest work on actions for continuous integration.
 Change deploy branch to ""Cog"".
 Try Newspeak builds.
 Also build for pull_request; only deploy on push. [ci skip]
 Merge remote-tracking branch 'remotes/upstream/Cog' into Cog
 Setup all main builds for Linux, macOS, and Windows. Sketch workflow for Linux32xARMv6 (not functional). Adds extra workflow for not-so-common VM flavors.
 Quick-fix generated FT2Plugin to compile in Linux. Note that code generation does currently not work for that plugin.
 Quick fix to make squeak.cog.v3 build again on Linux32x86. Do not set or use endOfJITZone. This might not be what we actually want.
 [ci skip] Another quickfix for making the rather old EventsHandlerPlugin compile on Linux. Where are its Slang sources located anyway?
 Setup ARM builds for Linux. Remove obsolete build files for TravisCI, AppVeyor, Bintray.
 In all main ""Build for *"" workflows, add workflow_dispatch to build artifacts for release candidates per tag.
 Merge remote-tracking branch 'remotes/upstream/Cog' into Cog
 File Changes

 D .appveyor.yml (198)
 A .github/workflows/extra-arm.yml (114)
 A .github/workflows/extra.yml (105)
 A .github/workflows/linux-arm.yml (142)
 A .github/workflows/linux.yml (137)
 A .github/workflows/macos.yml (122)
 A .github/workflows/win.yml (129)
 D .travis.yml (225)
 M build.linux32ARMv6/newspeak.cog.spur/build.assert/mvm (2)
 M build.linux32ARMv6/newspeak.cog.spur/build.debug/mvm (2)
 M build.linux32ARMv6/newspeak.stack.spur/build.assert/mvm (2)
 M build.linux32ARMv6/newspeak.stack.spur/build.debug/mvm (2)
 M build.linux32ARMv6/newspeak.stack.spur/build/mvm (2)
 M build.linux32ARMv6/pharo.cog.spur/build.assert/mvm (2)
 M build.linux32ARMv6/pharo.cog.spur/build.debug/mvm (2)
 M build.linux32ARMv6/squeak.cog.spur/build.assert/mvm (2)
 M build.linux32ARMv6/squeak.cog.spur/build.debug/mvm (2)
 M build.linux32ARMv6/squeak.cog.spur/build/mvm (2)
 M build.linux32ARMv6/squeak.cog.v3/build.assert/mvm (2)
 M build.linux32ARMv6/squeak.cog.v3/build.debug/mvm (2)
 M build.linux32ARMv6/squeak.cog.v3/build/mvm (2)
 M build.linux32ARMv6/squeak.stack.spur/build.assert/mvm (2)
 M build.linux32ARMv6/squeak.stack.spur/build.debug/mvm (2)
 M build.linux32ARMv6/squeak.stack.spur/build/mvm (2)
 M build.linux32ARMv6/squeak.stack.v3/build.assert/mvm (2)
 M build.linux32ARMv6/squeak.stack.v3/build.debug/mvm (2)
 M build.linux32ARMv6/squeak.stack.v3/build/mvm (2)
 A build.linux32ARMv7/newspeak.cog.spur/plugins.ext (3)
 A build.linux32ARMv7/newspeak.cog.spur/plugins.int (29)
 A build.linux32ARMv7/newspeak.stack.spur/plugins.ext (3)
 A build.linux32ARMv7/newspeak.stack.spur/plugins.int (29)
 M build.linux32x86/pharo.cog.spur.lowcode/build/mvm (6)
 M build.linux32x86/pharo.stack.spur.lowcode/build/mvm (6)
 D deploy/bintray-cleanup.sh (37)
 D deploy/bintray.json (15)
 D deploy/bintray.sh (22)
 D deploy/filter-exec.sh (35)
 M deploy/pack-vm.sh (144)
 A deploy/sign-vm.sh (100)
 M platforms/Cross/plugins/IA32ABI/ia32abi.h (4)
 M platforms/unix/vm/sqUnixMemory.c (2)
 A scripts/ci/actions_build.sh (182)
 A scripts/ci/actions_prepare_linux_arm.sh (17)
 A scripts/ci/actions_prepare_linux_x86.sh (68)
 A scripts/ci/actions_prepare_msys.sh (28)
 D scripts/ci/travis_build.sh (142)
 D scripts/ci/travis_helpers.sh (12)
 D scripts/ci/travis_install.sh (144)
 M src/plugins/EventsHandlerPlugin/EventsHandlerPlugin.c (2)
 M src/plugins/FT2Plugin/FT2Plugin.c (2)
 Patch Links:

 https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579.patch
 https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579.diff
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,579,2021-07-30T13:08:10Z,2021-07-30T17:44:45Z,2021-07-30T22:16:58Z,MERGED,True,1291,951,50,https://github.com/marceltaeumel,Recover automated builds via GitHub Actions,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579,https://github.com/marceltaeumel,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579#issuecomment-889969016,"Adds workflows (i.e., GitHub Actions) for automated builds. Replaces TravisCI and AppVeyor integration.
Automated builds on push/pull-requests:

Linux (x86, 64-bit and 32-bit)
Linux (ARMv6, ARMv7, ARMv8/Aarch64)
macOS (x86, only 64-bit)
Windows (x86, 64-bit and 32-bit)

Mostly, those builds include the following flavors:

squeak.cog.spur (also for Cuis)
squeak.sista.spur (also for Cuis)
squeak.stack.spur (also for Cuis)
pharo.cog.spur (for Pharo7.0 and before, I suppose)
pharo.sista.spur (for Pharo7.0 and before, I suppose)
pharo.stack.spur (for Pharo7.0 and before, I suppose)

There are some exceptions from this pattern such as:

pharo.* not building on Windows bc. of an issue with third-party lib builds, related to GitHub Actions
*.sista.spur bc. of unprepared build target on some platforms such as all ARM targets
No Linux itimer-heartbeat builds prepared for *.stack.spur; threaded only for now
No pharo.* builds prepared for ARM so far, except pharo.cog.cpur for ARMv6 in monthly builds; see below

Still, many if not all of those issues can easily be fixed in the future. We would just add the missing build configurations. :-)
Note that all these VM flavors include builds for ""fast,"" ""assert,"" and ""debug"" mode -- which we did not have in our previous TravisCI/AppVeyor setup.

There are also two separate workflows that manage ""extra builds,"" such as for VM flavors that are not used on a regular basis:

newspeak.* (incl. ARMv7)
*.v3 (incl. ARMv6)
*.lowcode
pharo.cog.spur for ARMv6

These extra builds are triggered once per month or anytime per request.
These extra builds are only in ""fast"" mode.

All the latest build artifacts can be downloaded from three different tags, which are for my fork as follows:

https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-assert-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-debug-build

After merging this pull-request, replace ""marceltaeumel"" with ""opensmalltalk-vm"", and you will form the respective URLs. The URL will be stable for any particular VM flavor and platform. Feel free to share those URLs to ""Get the latest bleeding edge OSVM now!"" :-)
For previous build artifacts, note that all workflows store their artifacts with a timestamp after they ran. You can access those artifacts for about 90 days when logged into GitHub. Here is an example:

https://github.com/marceltaeumel/opensmalltalk-vm/actions/runs/1073960213

Note that you can download a ZIP archive from GitHub, which will then hold the actual build artifact/container, e.g., *.zip or *.tar.gz or *.dmg.

Finally, we can now manage builds and artifacts for release candidates:

Tag a commit as candidate such as ""202107301330""
For each ""Build for *""-workflow on the actions page for OSVM, just click ""Run workflow"" where you enter that tag and manually start the workflow.
Those artifacts will be attached to the tag and are then accessible under, e.g., ""https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/202107301330"", just like the latest-build artifacts are.

For an actual VM release, we would manually create a release through the GitHub webpage and copy over the artifacts from the latest release candidate. For the squeak-app bundles, we would also copy those over to http://files.squeak.org/base/.

After merging this PR, an owner in this repository should:

Update the certificates in deploy/squeak, deploy/newspeak, and deploy/pharo and configure the required secret as documented in .github/workflows/macos.yml
Deactivate the TravisCI and AppVeyor hooks. Their .yml files have been removed already.

Happy coding!","Yes, if there is no need for the ""itimer""-heartbeat versions, I can remove those from the build jobs. Yet, I would wait for some active Linux users to verify this assumption.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,579,2021-07-30T13:08:10Z,2021-07-30T17:44:45Z,2021-07-30T22:16:58Z,MERGED,True,1291,951,50,https://github.com/marceltaeumel,Recover automated builds via GitHub Actions,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579,https://github.com/nicolas-cellier-aka-nice,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579#issuecomment-890097188,"Adds workflows (i.e., GitHub Actions) for automated builds. Replaces TravisCI and AppVeyor integration.
Automated builds on push/pull-requests:

Linux (x86, 64-bit and 32-bit)
Linux (ARMv6, ARMv7, ARMv8/Aarch64)
macOS (x86, only 64-bit)
Windows (x86, 64-bit and 32-bit)

Mostly, those builds include the following flavors:

squeak.cog.spur (also for Cuis)
squeak.sista.spur (also for Cuis)
squeak.stack.spur (also for Cuis)
pharo.cog.spur (for Pharo7.0 and before, I suppose)
pharo.sista.spur (for Pharo7.0 and before, I suppose)
pharo.stack.spur (for Pharo7.0 and before, I suppose)

There are some exceptions from this pattern such as:

pharo.* not building on Windows bc. of an issue with third-party lib builds, related to GitHub Actions
*.sista.spur bc. of unprepared build target on some platforms such as all ARM targets
No Linux itimer-heartbeat builds prepared for *.stack.spur; threaded only for now
No pharo.* builds prepared for ARM so far, except pharo.cog.cpur for ARMv6 in monthly builds; see below

Still, many if not all of those issues can easily be fixed in the future. We would just add the missing build configurations. :-)
Note that all these VM flavors include builds for ""fast,"" ""assert,"" and ""debug"" mode -- which we did not have in our previous TravisCI/AppVeyor setup.

There are also two separate workflows that manage ""extra builds,"" such as for VM flavors that are not used on a regular basis:

newspeak.* (incl. ARMv7)
*.v3 (incl. ARMv6)
*.lowcode
pharo.cog.spur for ARMv6

These extra builds are triggered once per month or anytime per request.
These extra builds are only in ""fast"" mode.

All the latest build artifacts can be downloaded from three different tags, which are for my fork as follows:

https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-assert-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-debug-build

After merging this pull-request, replace ""marceltaeumel"" with ""opensmalltalk-vm"", and you will form the respective URLs. The URL will be stable for any particular VM flavor and platform. Feel free to share those URLs to ""Get the latest bleeding edge OSVM now!"" :-)
For previous build artifacts, note that all workflows store their artifacts with a timestamp after they ran. You can access those artifacts for about 90 days when logged into GitHub. Here is an example:

https://github.com/marceltaeumel/opensmalltalk-vm/actions/runs/1073960213

Note that you can download a ZIP archive from GitHub, which will then hold the actual build artifact/container, e.g., *.zip or *.tar.gz or *.dmg.

Finally, we can now manage builds and artifacts for release candidates:

Tag a commit as candidate such as ""202107301330""
For each ""Build for *""-workflow on the actions page for OSVM, just click ""Run workflow"" where you enter that tag and manually start the workflow.
Those artifacts will be attached to the tag and are then accessible under, e.g., ""https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/202107301330"", just like the latest-build artifacts are.

For an actual VM release, we would manually create a release through the GitHub webpage and copy over the artifacts from the latest release candidate. For the squeak-app bundles, we would also copy those over to http://files.squeak.org/base/.

After merging this PR, an owner in this repository should:

Update the certificates in deploy/squeak, deploy/newspeak, and deploy/pharo and configure the required secret as documented in .github/workflows/macos.yml
Deactivate the TravisCI and AppVeyor hooks. Their .yml files have been removed already.

Happy coding!","Great work, thank you!
Concerning itimer, I did use it so as to compile/run on WSL.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,579,2021-07-30T13:08:10Z,2021-07-30T17:44:45Z,2021-07-30T22:16:58Z,MERGED,True,1291,951,50,https://github.com/marceltaeumel,Recover automated builds via GitHub Actions,12,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579,https://github.com/OpenSmalltalk-Bot,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/579#issuecomment-890215062,"Adds workflows (i.e., GitHub Actions) for automated builds. Replaces TravisCI and AppVeyor integration.
Automated builds on push/pull-requests:

Linux (x86, 64-bit and 32-bit)
Linux (ARMv6, ARMv7, ARMv8/Aarch64)
macOS (x86, only 64-bit)
Windows (x86, 64-bit and 32-bit)

Mostly, those builds include the following flavors:

squeak.cog.spur (also for Cuis)
squeak.sista.spur (also for Cuis)
squeak.stack.spur (also for Cuis)
pharo.cog.spur (for Pharo7.0 and before, I suppose)
pharo.sista.spur (for Pharo7.0 and before, I suppose)
pharo.stack.spur (for Pharo7.0 and before, I suppose)

There are some exceptions from this pattern such as:

pharo.* not building on Windows bc. of an issue with third-party lib builds, related to GitHub Actions
*.sista.spur bc. of unprepared build target on some platforms such as all ARM targets
No Linux itimer-heartbeat builds prepared for *.stack.spur; threaded only for now
No pharo.* builds prepared for ARM so far, except pharo.cog.cpur for ARMv6 in monthly builds; see below

Still, many if not all of those issues can easily be fixed in the future. We would just add the missing build configurations. :-)
Note that all these VM flavors include builds for ""fast,"" ""assert,"" and ""debug"" mode -- which we did not have in our previous TravisCI/AppVeyor setup.

There are also two separate workflows that manage ""extra builds,"" such as for VM flavors that are not used on a regular basis:

newspeak.* (incl. ARMv7)
*.v3 (incl. ARMv6)
*.lowcode
pharo.cog.spur for ARMv6

These extra builds are triggered once per month or anytime per request.
These extra builds are only in ""fast"" mode.

All the latest build artifacts can be downloaded from three different tags, which are for my fork as follows:

https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-assert-build
https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/latest-debug-build

After merging this pull-request, replace ""marceltaeumel"" with ""opensmalltalk-vm"", and you will form the respective URLs. The URL will be stable for any particular VM flavor and platform. Feel free to share those URLs to ""Get the latest bleeding edge OSVM now!"" :-)
For previous build artifacts, note that all workflows store their artifacts with a timestamp after they ran. You can access those artifacts for about 90 days when logged into GitHub. Here is an example:

https://github.com/marceltaeumel/opensmalltalk-vm/actions/runs/1073960213

Note that you can download a ZIP archive from GitHub, which will then hold the actual build artifact/container, e.g., *.zip or *.tar.gz or *.dmg.

Finally, we can now manage builds and artifacts for release candidates:

Tag a commit as candidate such as ""202107301330""
For each ""Build for *""-workflow on the actions page for OSVM, just click ""Run workflow"" where you enter that tag and manually start the workflow.
Those artifacts will be attached to the tag and are then accessible under, e.g., ""https://github.com/marceltaeumel/opensmalltalk-vm/releases/tag/202107301330"", just like the latest-build artifacts are.

For an actual VM release, we would manually create a release through the GitHub webpage and copy over the artifacts from the latest release candidate. For the squeak-app bundles, we would also copy those over to http://files.squeak.org/base/.

After merging this PR, an owner in this repository should:

Update the certificates in deploy/squeak, deploy/newspeak, and deploy/pharo and configure the required secret as documented in .github/workflows/macos.yml
Deactivate the TravisCI and AppVeyor hooks. Their .yml files have been removed already.

Happy coding!","Fantastic :-)

Thank you Marcel and Fabio and whoever else pitched in to make this happen.

Dave
…
On Fri, Jul 30, 2021 at 10:44:58AM -0700, Fabio Niephaus wrote:

 Merged #579 into Cog.

 --
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly or view it on GitHub:
 #579 (comment)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,581,2021-08-04T09:40:19Z,2021-08-04T10:09:07Z,2021-08-04T10:55:58Z,MERGED,True,2,4,3,https://github.com/marceltaeumel,Fixes Linux 32-bit build preparation and deployment of monthly builds,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/581,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/581,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,581,2021-08-04T09:40:19Z,2021-08-04T10:09:07Z,2021-08-04T10:55:58Z,MERGED,True,2,4,3,https://github.com/marceltaeumel,Fixes Linux 32-bit build preparation and deployment of monthly builds,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/581,https://github.com/marceltaeumel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/581#issuecomment-892517306,,Sorry for not opening an extra feature branch in my fork. I can see now why this matters. The list of commits is misleading. Only the last two matter.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,581,2021-08-04T09:40:19Z,2021-08-04T10:09:07Z,2021-08-04T10:55:58Z,MERGED,True,2,4,3,https://github.com/marceltaeumel,Fixes Linux 32-bit build preparation and deployment of monthly builds,15,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/581,https://github.com/marceltaeumel,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/581#issuecomment-892562667,,See #582 . I am working on a fix for libgl1-mesa-glx:i386 and libgl1-mesa-dev:i386 to make B3DAcceleratorPlugin compile in linux32x86 again. The error codes were wrong. I did not see that issue before. Sorry for any inconvenience.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,582,2021-08-04T10:41:08Z,2021-08-04T12:06:28Z,2021-08-04T12:06:28Z,CLOSED,False,155,154,148,https://github.com/marceltaeumel,Fix mvm error codes for Linux and Windows builds,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/582,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/582,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,583,2021-08-04T12:59:30Z,2021-08-04T14:24:17Z,2021-08-04T14:24:17Z,MERGED,True,156,154,148,https://github.com/marceltaeumel,(Re-post) Fixes mvm error codes for Linux and Windows builds,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/583,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/583,"Uses a workaround for Linux 32-bit builds by loading ""libllvm12:i386"" explicitely to then also load ""libgl1-mesa-glx:i386"". See actions/virtual-environments#3852
This is a re-post or extension of

#582
#581","Uses a workaround for Linux 32-bit builds by loading ""libllvm12:i386"" explicitely to then also load ""libgl1-mesa-glx:i386"". See actions/virtual-environments#3852
This is a re-post or extension of

#582
#581",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/pbella,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/marceltaeumel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903504785,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","Is this just a naming issue? You chose ""sqstkspurlinuxht"" and ""sqstkspur64linuxht"", which looks like the ones from build.linux32x86 and build.linux64x64 respectively. What are the main differences between:

build.linux32generic and build.linux32x86
build.linux64generic and build.linux64x64

Both use autoconf/configure already.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903548221,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","In the end, the names are somewhat bogus.
Effectively, linux is for all unicies except Solaris, because the person maintaining these files had too much trouble integrating the tiny diffs into the build.linux* structures.
I even think, it adds to the confusion already present…
I cannot make up my mind at the moment. maybe later¬",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/pbella,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903562087,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","Definitely not just a naming issue.  The idea is to pull out all of the architecture specific settings to get to a truly generic stack vm.
Ignore the --disable-dynamicopenssl and vm_variant= (that's part of the packaging work as I did the diff on a local working copy) but note the sse2 and 're-exec' stuff which is what needs to be eliminated if you're going to build for say MIPS/PPC/RISC-V:
diff build.linux64x64/squeak.stack.spur/build/mvm build.linux64generic/squeak.stack.spur/build/mvm
4a5
> # Some gcc versions create a broken VM using -O2
22a24
> 	--disable-dynamicopenssl \
24,25c26,27
< 	CC=clang \
< 	CFLAGS=""$OPT -msse2""
---
> 	CFLAGS=""$OPT"" \
> 	vm_variant=spur64


and
diff build.linux32x86/squeak.stack.spur/build/mvm build.linux32generic/squeak.stack.spur/build/mvm
3,9d2
< case ""`uname -m`"" in # ensure we see x86 as machine type
< i*86) ;; # we're good
< *) if type i386 2>&1 >/dev/null; then
< 	echo ""Re-exec as x86""
< 	exec i386 ""$0"" ""$@""
< fi ;;
< esac
30a24
> 	--disable-dynamicopenssl \
32c26,27
< 	CFLAGS=""$OPT -msse2""
---
> 	CFLAGS=""$OPT"" \
> 	vm_variant=spur32",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/krono,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903571034,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","I understand that concern.
But it's just putting on band-aid.
(I'm removing myself from review, I think I'm biased in a certain way and I do not want to influence here further :) )",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/pbella,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903581286,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","@krono  I don't mind bias as this is just my take on how to accomplish it, in the least invasive way I could think of, without any knowledge of how we've arrived here re: mvm proliferation or any other competing concerns.  I'm open to alternatives re: a better solution.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/marceltaeumel,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903595263,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","Let me rephrase my concern: If there cannot be a ""build.win32generic"", ""build.win64generic"", ""macos64generic"" etc., I don't see much benefit in generalizing the Linux build files to this degree. One could instead put efforts in writing CMake files for all platforms. :-) Anyway, if there is no urgent need to support non-x86/ARM platform in this generic, yet Debian-specific, way, I am not sure it is worth creating even more build directories at this point.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/KenDickey,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903828484,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","But this could pave the way for someone besides Eliot to start down the RISC-V road.
Debian current supports RISC-V.
Look at https://riscv.org/exchange/software/ +Non-C Compilers & Runtimes.
IMHO, OpenSmalltalk should be on that list!
-KenD",True,"{'THUMBS_UP': ['https://github.com/marceltaeumel', 'https://github.com/ccrraaiigg']}"
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-903879535,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","I totaly agree.
Point is, my way of doing this would be completely different, and hence tarnish this conversation.
Hence I'm recusing from this case ;)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/eliotmiranda,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-905092050,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","Tobias, please express yourself.
Personally I think this is a good idea but would drop ""generic""; it's too much to type.  I'd call it build/linux86 (i.e. wait until after the srcFoo => src/Foo, build.Foo => build/Foo refactoring)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/pbella,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-909912555,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures",I have updated the pull request as discussed.  It is now based on the recent reorg by @marceltaeumel and includes related autoconf changes.,True,{'HEART': ['https://github.com/krono']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/dtlewis290,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-913925671,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","Is there any reason that this PR should not be merged now? Phil is working (with the encouragement of the Squeak oversight board) on updating the Debian squeak-vm package so that it will include the opensmalltalk-vm VMs in addition to the existing squeakvm.org classic VM. This PR is important for Phil's work, so it would be good to get in merged now if there are no compelling reasons not to do so.  I have also tried merging this PR followed by a merge of my own two related PRs (590 and 591) and I found no problems or conflicts. So ... may I go ahead and merge this into the main Cog branch?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/OpenSmalltalk-Bot,13,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-913932483,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","Well, *I* think it's a reasonable idea.
 On 2021-09-06, at 6:25 PM, David T Lewis ***@***.***> wrote:


 Is there any reason that this PR should not be merged now? Phil is working (with the encouragement of the Squeak oversight board) on updating the Debian squeak-vm package so that it will include the opensmalltalk-vm VMs in addition to the existing squeakvm.org classic VM. This PR is important for Phil's work, so it would be good to get in merged now if there are no compelling reasons not to do so. I have also tried merging this PR followed by a merge of my own two related PRs (590 and 591) and I found no problems or conflicts. So ... may I go ahead and merge this into the main Cog branch?

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.
 Triage notifications on the go with GitHub Mobile for iOS or Android.

tim
--
tim Rowledge; ***@***.***; http://www.rowledge.org/tim
Strange OpCodes: ESR: Emulate Slide Rule",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,585,2021-08-21T02:12:36Z,2021-09-15T17:19:13Z,2021-09-15T17:19:13Z,MERGED,True,413,20,16,https://github.com/pbella,Add build.linux32generic and build.linux64generic to support stack VM…,4,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585,https://github.com/dtlewis290,14,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585#issuecomment-916527845,"… builds on non-x86/ARM architectures.
The intent is to support architectures such as https://wiki.debian.org/SupportedArchitectures","If there are no objections and no further comments, I will merge this PR this weekend.",True,{'THUMBS_UP': ['https://github.com/marceltaeumel']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,587,2021-08-25T16:28:26Z,2021-08-26T21:35:36Z,2021-08-26T21:36:01Z,MERGED,True,9658,5635,435,https://github.com/marceltaeumel,Updates src paths to follow Eliot's suggestions,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/587,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/587,"See #573 (comment)
See VMMaker.oscog-mt.3049 in VMMakerInbox","See #573 (comment)
See VMMaker.oscog-mt.3049 in VMMakerInbox",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,587,2021-08-25T16:28:26Z,2021-08-26T21:35:36Z,2021-08-26T21:36:01Z,MERGED,True,9658,5635,435,https://github.com/marceltaeumel,Updates src paths to follow Eliot's suggestions,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/587,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/587#issuecomment-906759855,"See #573 (comment)
See VMMaker.oscog-mt.3049 in VMMakerInbox",thank you!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,588,2021-08-30T22:29:47Z,2021-09-08T19:22:12Z,2021-09-08T20:54:40Z,MERGED,True,16,0,2,https://github.com/LinqLover,windows: resync the VM time when the system clock gets changed,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588,"As of today, if the Windows system time is changed, already running VM instances will not reflect this change. With this patch, this bug is fixed. The full bug report is on squeak-dev: https://lists.squeakfoundation.org/pipermail/squeak-dev/2021-August/216306.html
This bug only affects builds for Windows versions prior to Windows 8, never builds do not use the tick variables any longer. See:

  
    
      opensmalltalk-vm/platforms/win32/vm/sqWin32Heartbeat.c
    
    
        Lines 79 to 85
      in
      57260c2
    
  
  
    

        
          
           #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8) 
        

        
          
            
        

        
          
           /* Compute the current VM time basis, the number of microseconds from 1901. 
        

        
          
            * 
        

        
          
            * As of Windows 8 there is a FILETIME wall clock interface which is high 
        

        
          
            * precision and so does not have to be combined with the millisecond clock. 
        

        
          
            */ 
        
    
  


(However, as #499 is still unmerged, currently, also builds for Windows 10 are affected by the bug. Looks like we were never benefitting from @eliotmiranda's improvements for the Win8 APIs (cf. fae0d31) until today 😆)
Independently of this patch, we will want to fix cross-platform-occurring VM hangs when the system clock is pulled backward. See the bug report on squeak-dev for this, again.
Please review thoroughly!
/cc @marceltaeumel","As of today, if the Windows system time is changed, already running VM instances will not reflect this change. With this patch, this bug is fixed. The full bug report is on squeak-dev: https://lists.squeakfoundation.org/pipermail/squeak-dev/2021-August/216306.html
This bug only affects builds for Windows versions prior to Windows 8, never builds do not use the tick variables any longer. See:

  
    
      opensmalltalk-vm/platforms/win32/vm/sqWin32Heartbeat.c
    
    
        Lines 79 to 85
      in
      57260c2
    
  
  
    

        
          
           #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8) 
        

        
          
            
        

        
          
           /* Compute the current VM time basis, the number of microseconds from 1901. 
        

        
          
            * 
        

        
          
            * As of Windows 8 there is a FILETIME wall clock interface which is high 
        

        
          
            * precision and so does not have to be combined with the millisecond clock. 
        

        
          
            */ 
        
    
  


(However, as #499 is still unmerged, currently, also builds for Windows 10 are affected by the bug. Looks like we were never benefitting from @eliotmiranda's improvements for the Win8 APIs (cf. fae0d31) until today 😆)
Independently of this patch, we will want to fix cross-platform-occurring VM hangs when the system clock is pulled backward. See the bug report on squeak-dev for this, again.
Please review thoroughly!
/cc @marceltaeumel",True,{'THUMBS_UP': ['https://github.com/marceltaeumel']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,588,2021-08-30T22:29:47Z,2021-09-08T19:22:12Z,2021-09-08T20:54:40Z,MERGED,True,16,0,2,https://github.com/LinqLover,windows: resync the VM time when the system clock gets changed,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588,https://github.com/LinqLover,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588#issuecomment-908761059,"As of today, if the Windows system time is changed, already running VM instances will not reflect this change. With this patch, this bug is fixed. The full bug report is on squeak-dev: https://lists.squeakfoundation.org/pipermail/squeak-dev/2021-August/216306.html
This bug only affects builds for Windows versions prior to Windows 8, never builds do not use the tick variables any longer. See:

  
    
      opensmalltalk-vm/platforms/win32/vm/sqWin32Heartbeat.c
    
    
        Lines 79 to 85
      in
      57260c2
    
  
  
    

        
          
           #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8) 
        

        
          
            
        

        
          
           /* Compute the current VM time basis, the number of microseconds from 1901. 
        

        
          
            * 
        

        
          
            * As of Windows 8 there is a FILETIME wall clock interface which is high 
        

        
          
            * precision and so does not have to be combined with the millisecond clock. 
        

        
          
            */ 
        
    
  


(However, as #499 is still unmerged, currently, also builds for Windows 10 are affected by the bug. Looks like we were never benefitting from @eliotmiranda's improvements for the Win8 APIs (cf. fae0d31) until today 😆)
Independently of this patch, we will want to fix cross-platform-occurring VM hangs when the system clock is pulled backward. See the bug report on squeak-dev for this, again.
Please review thoroughly!
/cc @marceltaeumel","(By the way, the best thing while you are dealing with timing issues is that after you have committed all your stuff, you set your system time back to normal and realize that you have spent one hour less on this issue than you were assuming ... ^^)",True,"{'LAUGH': ['https://github.com/ccrraaiigg', 'https://github.com/j4yk']}"
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,588,2021-08-30T22:29:47Z,2021-09-08T19:22:12Z,2021-09-08T20:54:40Z,MERGED,True,16,0,2,https://github.com/LinqLover,windows: resync the VM time when the system clock gets changed,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588,https://github.com/marceltaeumel,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588#issuecomment-908959720,"As of today, if the Windows system time is changed, already running VM instances will not reflect this change. With this patch, this bug is fixed. The full bug report is on squeak-dev: https://lists.squeakfoundation.org/pipermail/squeak-dev/2021-August/216306.html
This bug only affects builds for Windows versions prior to Windows 8, never builds do not use the tick variables any longer. See:

  
    
      opensmalltalk-vm/platforms/win32/vm/sqWin32Heartbeat.c
    
    
        Lines 79 to 85
      in
      57260c2
    
  
  
    

        
          
           #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8) 
        

        
          
            
        

        
          
           /* Compute the current VM time basis, the number of microseconds from 1901. 
        

        
          
            * 
        

        
          
            * As of Windows 8 there is a FILETIME wall clock interface which is high 
        

        
          
            * precision and so does not have to be combined with the millisecond clock. 
        

        
          
            */ 
        
    
  


(However, as #499 is still unmerged, currently, also builds for Windows 10 are affected by the bug. Looks like we were never benefitting from @eliotmiranda's improvements for the Win8 APIs (cf. fae0d31) until today 😆)
Independently of this patch, we will want to fix cross-platform-occurring VM hangs when the system clock is pulled backward. See the bug report on squeak-dev for this, again.
Please review thoroughly!
/cc @marceltaeumel",FYI: We wanted to bump the minimal supported version to Windows Vista. Eliot suggested even Windows 8 but we still have a lot of Windows 7 users out there. See PR #499,True,{'THUMBS_UP': ['https://github.com/LinqLover']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,588,2021-08-30T22:29:47Z,2021-09-08T19:22:12Z,2021-09-08T20:54:40Z,MERGED,True,16,0,2,https://github.com/LinqLover,windows: resync the VM time when the system clock gets changed,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588,https://github.com/LinqLover,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588#issuecomment-909037475,"As of today, if the Windows system time is changed, already running VM instances will not reflect this change. With this patch, this bug is fixed. The full bug report is on squeak-dev: https://lists.squeakfoundation.org/pipermail/squeak-dev/2021-August/216306.html
This bug only affects builds for Windows versions prior to Windows 8, never builds do not use the tick variables any longer. See:

  
    
      opensmalltalk-vm/platforms/win32/vm/sqWin32Heartbeat.c
    
    
        Lines 79 to 85
      in
      57260c2
    
  
  
    

        
          
           #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8) 
        

        
          
            
        

        
          
           /* Compute the current VM time basis, the number of microseconds from 1901. 
        

        
          
            * 
        

        
          
            * As of Windows 8 there is a FILETIME wall clock interface which is high 
        

        
          
            * precision and so does not have to be combined with the millisecond clock. 
        

        
          
            */ 
        
    
  


(However, as #499 is still unmerged, currently, also builds for Windows 10 are affected by the bug. Looks like we were never benefitting from @eliotmiranda's improvements for the Win8 APIs (cf. fae0d31) until today 😆)
Independently of this patch, we will want to fix cross-platform-occurring VM hangs when the system clock is pulled backward. See the bug report on squeak-dev for this, again.
Please review thoroughly!
/cc @marceltaeumel",Why don't we create multiple builds for the different Windows versions?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,588,2021-08-30T22:29:47Z,2021-09-08T19:22:12Z,2021-09-08T20:54:40Z,MERGED,True,16,0,2,https://github.com/LinqLover,windows: resync the VM time when the system clock gets changed,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588#issuecomment-909280934,"As of today, if the Windows system time is changed, already running VM instances will not reflect this change. With this patch, this bug is fixed. The full bug report is on squeak-dev: https://lists.squeakfoundation.org/pipermail/squeak-dev/2021-August/216306.html
This bug only affects builds for Windows versions prior to Windows 8, never builds do not use the tick variables any longer. See:

  
    
      opensmalltalk-vm/platforms/win32/vm/sqWin32Heartbeat.c
    
    
        Lines 79 to 85
      in
      57260c2
    
  
  
    

        
          
           #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8) 
        

        
          
            
        

        
          
           /* Compute the current VM time basis, the number of microseconds from 1901. 
        

        
          
            * 
        

        
          
            * As of Windows 8 there is a FILETIME wall clock interface which is high 
        

        
          
            * precision and so does not have to be combined with the millisecond clock. 
        

        
          
            */ 
        
    
  


(However, as #499 is still unmerged, currently, also builds for Windows 10 are affected by the bug. Looks like we were never benefitting from @eliotmiranda's improvements for the Win8 APIs (cf. fae0d31) until today 😆)
Independently of this patch, we will want to fix cross-platform-occurring VM hangs when the system clock is pulled backward. See the bug report on squeak-dev for this, again.
Please review thoroughly!
/cc @marceltaeumel","Hi Christoph, hi all,
 On Aug 31, 2021, at 1:53 AM, Christoph Thiede ***@***.***> wrote:

 ﻿
 Why don't we create multiple builds for the different Windows versions?

That would probably cause disruption to naming schemes etc.  an easier way would be to change the code so that
- if compiled on a system older than Windows 8 the old ticket variable code is used
- if compiled on Windows 8 or later then
   - at startup the Windows is version is cached in a variable and,
   - depending on the variable either the new or the old code is evaluated

So we keep a single build, and a single version of the code base. Normal builds remain backward compatible. One can still compile on an older system and get a functional, albeit more fragile vm.

Note that one could also use the get symbol from dll api (LoadSymbol? can’t remember) to so that a vm built on an older version can use the new api when run on later versions but IMO this is wasted effort and unnecessary complexity

Finally, one could consider implementing my adaptive approach that ensures a monotonic clock. But the Windows 8 api makes things so simple it’s (arguably) a lot of work for no gain.
…
 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub, or unsubscribe.
 Triage notifications on the go with GitHub Mobile for iOS or Android.",True,{'THUMBS_UP': ['https://github.com/LinqLover']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,588,2021-08-30T22:29:47Z,2021-09-08T19:22:12Z,2021-09-08T20:54:40Z,MERGED,True,16,0,2,https://github.com/LinqLover,windows: resync the VM time when the system clock gets changed,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588,https://github.com/LinqLover,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/588#issuecomment-914442146,"As of today, if the Windows system time is changed, already running VM instances will not reflect this change. With this patch, this bug is fixed. The full bug report is on squeak-dev: https://lists.squeakfoundation.org/pipermail/squeak-dev/2021-August/216306.html
This bug only affects builds for Windows versions prior to Windows 8, never builds do not use the tick variables any longer. See:

  
    
      opensmalltalk-vm/platforms/win32/vm/sqWin32Heartbeat.c
    
    
        Lines 79 to 85
      in
      57260c2
    
  
  
    

        
          
           #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8) 
        

        
          
            
        

        
          
           /* Compute the current VM time basis, the number of microseconds from 1901. 
        

        
          
            * 
        

        
          
            * As of Windows 8 there is a FILETIME wall clock interface which is high 
        

        
          
            * precision and so does not have to be combined with the millisecond clock. 
        

        
          
            */ 
        
    
  


(However, as #499 is still unmerged, currently, also builds for Windows 10 are affected by the bug. Looks like we were never benefitting from @eliotmiranda's improvements for the Win8 APIs (cf. fae0d31) until today 😆)
Independently of this patch, we will want to fix cross-platform-occurring VM hangs when the system clock is pulled backward. See the bug report on squeak-dev for this, again.
Please review thoroughly!
/cc @marceltaeumel","Thank you for the feedback, Jakob, and for the explanation, Eliot. Is there anything else that keeps us from getting this one merged? :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,589,2021-08-30T22:44:09Z,,2021-08-30T22:44:09Z,OPEN,False,2,2,1,https://github.com/LinqLover,Windows: Save two redundant calls of `GetLastError()`,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/589,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/589,"Assuming there was an error during printing (wvsprintf) inside of vprintLastError(), the second call could have returned a different error code than expected.
Apart from that, to me, it looks to be an idiom to call GetLastError() only once per error. In every case, printing errors now should be a tiny little bit faster. :-)","Assuming there was an error during printing (wvsprintf) inside of vprintLastError(), the second call could have returned a different error code than expected.
Apart from that, to me, it looks to be an idiom to call GetLastError() only once per error. In every case, printing errors now should be a tiny little bit faster. :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,590,2021-09-05T18:08:01Z,2021-09-15T22:21:50Z,2021-09-15T22:21:50Z,MERGED,True,1,1,1,https://github.com/dtlewis290,Use distinct VERSION_TAG based on sizeof(void *) to distinguish 32/64…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/590,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/590,"… bit
installation libraries. VERSION_TAG is used for naming the installation
directory, append ""-32bit"" or -""64bit"" to VERSION_TAG to enable 32-bit
and 64-bit VMs to be installed side by side in standard unix directories.","… bit
installation libraries. VERSION_TAG is used for naming the installation
directory, append ""-32bit"" or -""64bit"" to VERSION_TAG to enable 32-bit
and 64-bit VMs to be installed side by side in standard unix directories.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,590,2021-09-05T18:08:01Z,2021-09-15T22:21:50Z,2021-09-15T22:21:50Z,MERGED,True,1,1,1,https://github.com/dtlewis290,Use distinct VERSION_TAG based on sizeof(void *) to distinguish 32/64…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/590,https://github.com/dtlewis290,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/590#issuecomment-913203505,"… bit
installation libraries. VERSION_TAG is used for naming the installation
directory, append ""-32bit"" or -""64bit"" to VERSION_TAG to enable 32-bit
and 64-bit VMs to be installed side by side in standard unix directories.","Closed because the ./products build contain a ""squeak"" script that refers to the now-renamed ./bin script. In a normal ""make install"" in which one installs in default unix directories, this ""squeak"" script is (improperly) installed in /usr/local/ where it is functionally harmless. However, in the products build the script needs to work. I'll resubmit a PR if and when I can find a workaround for that issue.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,590,2021-09-05T18:08:01Z,2021-09-15T22:21:50Z,2021-09-15T22:21:50Z,MERGED,True,1,1,1,https://github.com/dtlewis290,Use distinct VERSION_TAG based on sizeof(void *) to distinguish 32/64…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/590,https://github.com/dtlewis290,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/590#issuecomment-913786480,"… bit
installation libraries. VERSION_TAG is used for naming the installation
directory, append ""-32bit"" or -""64bit"" to VERSION_TAG to enable 32-bit
and 64-bit VMs to be installed side by side in standard unix directories.","Reopening. I retested after cleaning out my ./products directory, and all is working as expected, no issues with builds in ./products, and standard unix install to e.g. /usr/local/bin/ works. I think this PR can be safely merged to Cog but a second set of eyes on it would be appreciated.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/marceltaeumel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-916773082,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","It looks like you also need to update ""configure"" and ""configure.ac""? Why is it ""spur"" and not ""spur32"" but ""spur64""? Is this a common pattern on unix/linux?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/dtlewis290,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-917014295,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","The naming convention is historical, just what I have been using on my system for some years. First we had /usr/bin/squeak, then Cog became available, so /usr/bin/cog. Then Spur was added, so /usr/bin/spur. Later the 64-bit Spur was added, so /usr/bin/spur64. At this point it might be more clear to use the name spur32 rather than spur?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/dtlewis290,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-917015741,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.",The updates for configure and make are in a385f5b in the Cog branch which should be sufficient to support this PR.,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/eliotmiranda,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-917037750,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","On Fri, Sep 10, 2021 at 8:55 AM David T Lewis ***@***.***> wrote:
 The naming convention is historical, just what I have been using on my
 system for some years. First we had /usr/bin/squeak, then Cog became
 available, so /usr/bin/cog. Then Spur was added, so /usr/bin/spur. Later
 the 64-bit Spur was added, so /usr/bin/spur64. At this point it might be
 more clear to use the name spur32 rather than spur?

I think so.  It's a nice symmetrical distinction.  On Unix /usr/lib is
ambiguous.  Some systems added /usr/lib64, some /usr/lib32,, all in an
effort to not confront the necessity of changing the old /usr/lib into
/usr/lib32.  We don't have to repeat the same mistake/  It's a litt;e
painful at fiurst but using spur32 & spur64, and not using spur is clear
and easier for scripts, etc.  IMO.
_,,,^..^,,,_
best, Eliot",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/dtlewis290,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-917186969,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","Agreed, I just pushed an update to use spur32 as script name for 32-bit Spur VMs.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/marceltaeumel,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-920820403,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","Still not working:
configure: error: unrecognized option: `--scriptname=spur32'

For example, see https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591/checks?check_run_id=3620475617
make configure in platforms/unix/config seems to forget that option again. Hmm....",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/dtlewis290,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-920912244,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","Is it possible that the CI is failing to update the platforms/unix/config directory? The ""missing"" configure option is present in the platforms sources but seems to be missing when run on CI.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/marceltaeumel,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-920920314,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","I will push a fix for configure.ac to this PR soon. It's almost ready. :-) I will change the option ""scriptname"" to ""with-scriptname"" because it is then compatible with autoconf.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/marceltaeumel,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-920928620,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","Done. Please check if I broke anything. ""sudo make install"" still works as expected in my VirtualBox. 😄",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/dtlewis290,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-921016322,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","Aha, I see it now, I was not doing a make on the config directory so did not notice the conflict. Thank you for the fix Marcel.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,591,2021-09-06T18:00:30Z,2021-09-17T07:05:19Z,2021-09-17T07:05:19Z,MERGED,True,96,25,63,https://github.com/dtlewis290,Update mvm scripts to specify distinct names for squeak run scripts.,5,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591,https://github.com/dtlewis290,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/591#issuecomment-921221481,"sudo make install (following build with ./mvm) will install 64-bit Spur VMs
with /usr/local/bin/spur64, 32-bit Spur VMs with /usr/local/bin/spur, and
32-bit Cog V3 VMs as /usr/local/bin/cog. Along with branch dtl/distinct-VERSION_TAG
(separate PR), this allows the three flavors of opensmalltalk-vm, plus the
interpreter VM, to all be installed side by side in a standard unix directory
(e.g. /usr/local/bin/ or /usr/bin for executable scripts).  Within the various
builds in ./products, the base squeak script is still called ""squeak"", and it
invokes ./bin/spur64, ./bin/spur or ./bin/cog in that folder depending on
the type of VM. Net effect is no change in behavior for the ./products builds,
and elimination of name space conflicts in the standard unix directories.","Confirming - the builds for spur64, spur32, and cog all work as expected when building on my Ubuntu laptop. Correct scripts are installed in /usr/local/bin and the ./products folder looks good also.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,592,2021-09-06T22:26:40Z,,2021-09-06T23:35:15Z,OPEN,False,16,7,3,https://github.com/timrowledge,Update BitBltArmSimdSourceWord.s to latest ben avison version,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/592,https://github.com/timrowledge,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/592,"Half a dozen small bug fixes from ben
Co-Authored-By: bavison 3324657+bavison@users.noreply.github.com","Half a dozen small bug fixes from ben
Co-Authored-By: bavison 3324657+bavison@users.noreply.github.com",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,592,2021-09-06T22:26:40Z,,2021-09-06T23:35:15Z,OPEN,False,16,7,3,https://github.com/timrowledge,Update BitBltArmSimdSourceWord.s to latest ben avison version,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/592,https://github.com/OpenSmalltalk-Bot,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/592#issuecomment-913898438,"Half a dozen small bug fixes from ben
Co-Authored-By: bavison 3324657+bavison@users.noreply.github.com","I see the autobuild failed on the ARM64 squeak.cog.spur debug build because of some issue with BitBltArm64.c line 1536
        /* Inner loop */
        for (; remain >= 256/destBPP; remain -= 256/destBPP) {
            __asm__ volatile (
                    /* Load source word (if necessary) and shuffle */
                    ""cmp     %[unskew], %[src_bits]            \n\t""

No idea what ""error: impossible constraint in 'asm'"" means in this context. Ideas?
 On 2021-09-06, at 3:26 PM, tim Rowledge ***@***.***> wrote:

 Half a dozen small bug fixes from ben

 Co-Authored-By: bavison ***@***.***

 You can view, comment on, or merge this pull request online at:

   #592

 Commit Summary

 	• Update BitBltArmSimdSourceWord.s to latest ben avison version
 File Changes

 	• M platforms/Cross/plugins/BitBltPlugin/BitBltArmSimdSourceWord.s (19)
 Patch Links:

 	• https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/592.patch
 	• https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/592.diff
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.
 Triage notifications on the go with GitHub Mobile for iOS or Android.

tim
--
tim Rowledge; ***@***.***; http://www.rowledge.org/tim
Strange OpCodes: CCC: Crash if Carry Clear",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,593,2021-09-07T17:31:12Z,2021-11-10T00:30:23Z,2021-11-10T19:36:21Z,MERGED,True,9,0,3,https://github.com/LinqLover,`WindowEvent`[`A`|`Dea`]`ctivated`,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/593,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/593,"This PR implements the recording of WindowEventActivated on all primary platforms (that is, Win32 and Linux; apple does not count unless they provide adequate virtualization support for other platforms). In the past, this event was only declared but never recorded. In addition, the new event WindowEventDeactivated is declared and recorded, too.
A real application example for this is proposed on the squeak-dev list here, but I do not think that the discussion about this proposal should hinder us from integrating this change into the VM, should it?","This PR implements the recording of WindowEventActivated on all primary platforms (that is, Win32 and Linux; apple does not count unless they provide adequate virtualization support for other platforms). In the past, this event was only declared but never recorded. In addition, the new event WindowEventDeactivated is declared and recorded, too.
A real application example for this is proposed on the squeak-dev list here, but I do not think that the discussion about this proposal should hinder us from integrating this change into the VM, should it?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,593,2021-09-07T17:31:12Z,2021-11-10T00:30:23Z,2021-11-10T19:36:21Z,MERGED,True,9,0,3,https://github.com/LinqLover,`WindowEvent`[`A`|`Dea`]`ctivated`,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/593,https://github.com/LinqLover,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/593#issuecomment-962682726,"This PR implements the recording of WindowEventActivated on all primary platforms (that is, Win32 and Linux; apple does not count unless they provide adequate virtualization support for other platforms). In the past, this event was only declared but never recorded. In addition, the new event WindowEventDeactivated is declared and recorded, too.
A real application example for this is proposed on the squeak-dev list here, but I do not think that the discussion about this proposal should hinder us from integrating this change into the VM, should it?",To whomever it may concern: This is ready for review now! :-),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,593,2021-09-07T17:31:12Z,2021-11-10T00:30:23Z,2021-11-10T19:36:21Z,MERGED,True,9,0,3,https://github.com/LinqLover,`WindowEvent`[`A`|`Dea`]`ctivated`,3,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/593,https://github.com/LinqLover,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/593#issuecomment-965676058,"This PR implements the recording of WindowEventActivated on all primary platforms (that is, Win32 and Linux; apple does not count unless they provide adequate virtualization support for other platforms). In the past, this event was only declared but never recorded. In addition, the new event WindowEventDeactivated is declared and recorded, too.
A real application example for this is proposed on the squeak-dev list here, but I do not think that the discussion about this proposal should hinder us from integrating this change into the VM, should it?",Thank you Eliot! :-),True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,595,2021-09-17T08:21:11Z,,2021-09-17T08:21:11Z,OPEN,False,91,6,4,https://github.com/marceltaeumel,Adds action for building squeak.stack.spur on Linux using the generic…,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/595,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/595,"… mvm files, which are prepared for our Debian builds. No update of latest-build release but artifact upload for 90-day reviews. Fixes minor issue in configure.ac to be able to build 32-bit binaries on x86_64 platforms again.","… mvm files, which are prepared for our Debian builds. No update of latest-build release but artifact upload for 90-day reviews. Fixes minor issue in configure.ac to be able to build 32-bit binaries on x86_64 platforms again.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/dtlewis290,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/marceltaeumel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-927139664,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","Not sure how easy this will be. The error for FT2Plugin (pharo.cog.spur (itimer) for linux32x86 (ASSERT)) looks strange:
2021-09-25T15:45:21.6226488Z /bin/bash /home/runner/work/opensmalltalk-vm/opensmalltalk-vm/building/linux32x86/pharo.cog.spur/build.assert.itimerheartbeat/libtool --mode=link gcc -Wall  -g3 -O1 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -DDEBUGVM=0 -msse2 -DCOGMTVM=0 -DITIMER_HEARTBEAT=1 -pthread -DLSB_FIRST=1  -m32 -Wl,-rpath,'$ORIGIN'  -L/usr/local/lib -Wl,-z,now   -avoid-version -module -rpath /home/runner/work/opensmalltalk-vm/opensmalltalk-vm/products/assert/phphcogspur32linux/lib/squeak/`/home/runner/work/opensmalltalk-vm/opensmalltalk-vm/building/linux32x86/pharo.cog.spur/build.assert.itimerheartbeat/getversion VERSION_TAG` -o FT2Plugin.la FT2Plugin.lo  -lfreetype 
2021-09-25T15:45:21.7755681Z libtool: link: gcc -shared  -fPIC -DPIC  .libs/FT2Plugin.o   -L/usr/local/lib /usr/lib/x86_64-linux-gnu/libfreetype.so  -g3 -O1 -mno-omit-leaf-frame-pointer -msse2 -pthread -m32 -Wl,-rpath -Wl,\$ORIGIN -Wl,-z -Wl,now   -pthread -Wl,-soname -Wl,FT2Plugin.so -o .libs/FT2Plugin.so
2021-09-25T15:45:21.7821403Z /usr/lib/x86_64-linux-gnu/libfreetype.so: error adding symbols: File in wrong format

It tries to link a 64-bit library against the 32-bit binary.
This is how it is supposed to look:
2021-09-22T22:59:49.0624944Z /bin/bash /home/runner/work/opensmalltalk-vm/opensmalltalk-vm/building/linux32x86/pharo.cog.spur/build.assert.itimerheartbeat/libtool --mode=link gcc -Wall  -g3 -O1 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -DDEBUGVM=0 -msse2 -DCOGMTVM=0 -DITIMER_HEARTBEAT=1 -pthread -DLSB_FIRST=1  -m32 -Wl,-rpath,'$ORIGIN'  -L/usr/local/lib -Wl,-z,now   -avoid-version -module -rpath /home/runner/work/opensmalltalk-vm/opensmalltalk-vm/products/assert/phphcogspur32linux/lib/squeak/`/home/runner/work/opensmalltalk-vm/opensmalltalk-vm/building/linux32x86/pharo.cog.spur/build.assert.itimerheartbeat/getversion VERSION_TAG` -o FT2Plugin.la FT2Plugin.lo  -lfreetype 
2021-09-22T22:59:49.1511502Z libtool: link: gcc -shared  -fPIC -DPIC  .libs/FT2Plugin.o   -L/usr/local/lib -lfreetype  -g3 -O1 -mno-omit-leaf-frame-pointer -msse2 -pthread -m32 -Wl,-rpath -Wl,\$ORIGIN -Wl,-z -Wl,now   -pthread -Wl,-soname -Wl,FT2Plugin.so -o .libs/FT2Plugin.so
2021-09-22T22:59:49.1869202Z libtool: link: ( cd "".libs"" && rm -f ""FT2Plugin.la"" && ln -s ""../FT2Plugin.la"" ""FT2Plugin.la"" )
2021-09-22T22:59:49.1898979Z : FT2Plugin.la",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/marceltaeumel,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-927857358,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","Ubuntu 18.04 does not make it easy for me.
First, I encountered a strange issue in apt install where dependency resolution for the 32-bit package libpango1.0-dev:i386 did not work. I had to first check libharfbuzz-dev:i386 and finally  libicu-dev:i386 to make the pango library install as expected.
Second, make configure failed with a error: possibly undefined macro: LT_LIB_DLLOAD. I had to manually install libltdl-dev ... libtool was apparently not enough. See ""scripts/ci/actions_prepare_linux_x86.sh"" for the usual list.
And finally, I cannot even build ""squeak.cog.spur"" for ""linux64x64"" because linking fails. It's again about the pango library: Nevermind. Same package-loading issue as with the 32-bit packages. I had to install libicu-dev first to install libpango1.0-dev.
Not sure about that ""autoconf"" incident, but something fishy might be going on with pango in Ubuntu 18.04.
Update: No luck with building ""linux32x86"" either:
libtool: compile:  gcc -Wall -g -O2 -DNDEBUG -DDEBUGVM=0 -msse2 -DCOGMTVM=0 -pthread -DLSB_FIRST=1 -m32 -Wno-missing-braces -Wno-unknown-pragmas -Wno-unused-value -Wno-unused-label -Wno-unused-function -Wno-unused-variable -Wno-unused-but-set-variable -DHAVE_CONFIG_H -I/home/marcel/src/opensmalltalk-vm/building/linux32x86/squeak.cog.spur/build -I/home/marcel/src/opensmalltalk-vm/building/linux32x86/squeak.cog.spur/build -I/home/marcel/src/opensmalltalk-vm/platforms/unix/vm -I/home/marcel/src/opensmalltalk-vm/platforms/Cross/vm -I/home/marcel/src/opensmalltalk-vm/src/spur32.cog -I/usr/local/include -I/home/marcel/src/opensmalltalk-vm/platforms/Cross/plugins/UnicodePlugin -m32 -Wno-missing-braces -Wno-unknown-pragmas -Wno-unused-value -Wno-unused-label -Wno-unused-function -Wno-unused-variable -Wno-unused-but-set-variable -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/lib/i386-linux-gnu/glib-2.0/include -c /home/marcel/src/opensmalltalk-vm/platforms/unix/plugins/UnicodePlugin/UnicodeOps-linux.c  -fPIC -DPIC -o .libs/UnicodeOps-linux.o
In file included from /usr/lib/x86_64-linux-gnu/glib-2.0/include/glibconfig.h:9:0,
                 from /usr/include/glib-2.0/glib/gtypes.h:32,
                 from /usr/include/glib-2.0/glib/galloca.h:32,
                 from /usr/include/glib-2.0/glib.h:30,
                 from /usr/include/pango-1.0/pango/pango-coverage.h:25,
                 from /usr/include/pango-1.0/pango/pango-font.h:25,
                 from /usr/include/pango-1.0/pango/pango-attributes.h:25,
                 from /usr/include/pango-1.0/pango/pango.h:25,
                 from /usr/include/pango-1.0/pango/pangocairo.h:25,
                 from /home/marcel/src/opensmalltalk-vm/platforms/unix/plugins/UnicodePlugin/UnicodeOps-linux.c:28:
/usr/include/glib-2.0/glib/gtypes.h: In function ‘_GLIB_CHECKED_ADD_U64’:
/usr/include/glib-2.0/glib/gmacros.h:241:53: error: size of array ‘_GStaticAssertCompileTimeAssertion_0’ is negative",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/marceltaeumel,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-927866247,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","I am now looking at the hardcoded magic in ""platforms/unix/plugins/UnicodePlugin/acinclude.m4"". Maybe this is the reason why the VM binaries did not play so well in the first place? Maybe we can use Ubuntu 20.04 after all?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/marceltaeumel,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-927954005,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","Okay. We don't even build the ""UnicodePlugin"" in the CI because:
2021-09-22T23:04:54.3201231Z checking for PangoCairo libraries... no
2021-09-22T23:04:54.3202551Z ******** disabling UnicodePlugin

But in both Ubuntu 18.04 and 20.04, we have them loaded by default. Hmm.... anyway. Both ""FT2Plugin"" (Pharo only) and ""UnicodePlugin"" are currently not built in the CI with Ubuntu 20.04 but somehow here when using Ubuntu 18.04.
Next questions:

Why does the ""UnicodePlugin"" not build under 32-bit? Should it? (see ""platforms/unix/plugins/UnicodePlugin/acinclude.m4"")
Why does the CI using Ubuntu 20.04 not build the ""UnicodePlugin"" (and ""FT2Plugin"" for Pharo) even though Pango/Cairo is installed (see scripts/ci/actions_prepare_linux_x86.sh)?
What's the expected behavior? Should we build those plugins?

The configure check just tries to include ""<pango/pangocairo.h"" so I suspect an issue with the include path...",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/OpenSmalltalk-Bot,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-928094209,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","The only possible comfort I can offer here is that I was able to build an x86 vm for linux to support the ""Raspberry Pi Desktop for x86"" distro. That runs the NuScratch, of course. And it requires the unicode plugin.

The annoying thing is that I can't find any mail/notes about this, so I'm unable to point to any particular solutions I found.

tim
--
tim Rowledge; ***@***.***; http://www.rowledge.org/tim
Fractured Idiom:- L'ETAT, C'EST MOE - All the world's a stooge",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/dtlewis290,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-928479104,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","With respect to UnicodePlugin, we may be seeing an interaction with some changes in PR#585, specifically the changes to UnicodePlugin/Makefile.inc and UnicodePlugin/acinclude.m4 (thanks Phil B for the pointer). Prior to merging PR#585, I had noticed that UnicodePlugin was failing for the 32-bit builds on my old Ubuntu 16.04 system. However, it built cleanly on the CI, so I chose to overlook that issue at the time. Now we see that UnicodePlugin build is failing on CI when we specify an Ubuntu 18.04 (not bleeding edge, not ancient, sort of middle of the road) build runner. This suggest that we need to look more carefully at the changes to those two files in https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/585/files#diff-722b7a283e9564d68e2f15142c6aa9e2ea1fba3e2c71ce87defc965fcdf02dcd",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/pbella,8,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-928564253,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","As @dtlewis290 suggests, I think it's reasonable to look at my 585 changes as being the culprit.  I changed Makefile.inc / acinclude.m4 to add -I/usr/lib/x86_64-linux-gnu/glib-2.0/include when I saw that UnicodePlugin was failing to be configured on 64-bit Debian due to autoconf not finding a needed header.  This resolved the  issue on my Debian build VMs but these were not multiarch enabled (i.e. I had either a 32-bit or 64-bit build environment, not a combined one) so I suspect the problem might be with multiarch build environments having both 32-bit and 64-bit PangoCairo-related libraries installed at the same time?  If that's the case, one solution could be to have the 'build for platform' detection append the include path to only the appropriate /usr/lib/<arch>/glib-2.0/include directory rather than both which should eliminate any conflict on multiarch enabled systems.  If the issue isn't related to multiarch then I'm not sure what the cause is.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/krono,9,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-928911193,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","Probably we should actually follow GLibs requirements and use pkg-config?
This seems appropriate:

By using the PKG_CHECK_MODULES macro, Autoconf-generated configure scripts can retrieve pkg-config data automatically. […]
PKG_CHECK_MODULES([DEPS], [glib-2.0 >= 2.24.1])


Or step by step: https://stackoverflow.com/a/14828132
However,  these all assume automake, but we dont use that. I'll have a look…",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/krono,10,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-928916687,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","(Actually, David's notes in the Readme seem pretty acurate)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/krono,11,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-928983644,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found",see ea296f0,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/marceltaeumel,12,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-929338677,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","Here is what we should check before merging:
[x] linux32x86-squeak.cog.spur includes the UnicodePlugin
[x] linux64x64-squeak.cog.spur includes the UnicodePlugin
[x] linux32ARMv6-squeak.cog.spur includes the UnicodePlugin
[x] linux64ARMv8-squeak.cog.spur includes the UnicodePlugin
[x] linux32x86-pharo.cog.spur includes the FT2Plugin
[x] linux64x64-pharo.cog.spur includes the FT2Plugin",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/dtlewis290,13,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-929638152,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found",Confirming - the CI build artifact now runs successfully on my Ubuntu 16.04 LTS system. Previously the VM would fail due to link errors as originally reported. These VMs should now run on a wider range of existing Linux machines.,True,{'HOORAY': ['https://github.com/marceltaeumel']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,598,2021-09-25T14:25:50Z,2021-09-29T10:21:20Z,2021-09-29T10:21:20Z,MERGED,True,105,188,6,https://github.com/dtlewis290,"Do not use linux-latest runner, use an older stable version.",9,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598,https://github.com/marceltaeumel,14,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/598#issuecomment-929895314,"A VM compiled on ubuntu-20.04 (aka latest) will not run on
ubuntu-16.04 due to runtime library link issues. Therefore
select ubuntu-18.04 as a build runner that is likely to support
a wider range of existing Linux systems. Addresses this problem:
/lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found","This is great news! So it's even ""forward compatible"" on 16.04? I will wait with the merge until the most recent upstream errors got fixed. Sigh... ☕",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,599,2021-10-01T17:46:47Z,,2021-10-08T15:19:21Z,OPEN,False,295,165,1,https://github.com/marceltaeumel,Adds cross-platform compatible virtual-key codes to vm-display-x11 plugin,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,"Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.","Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,599,2021-10-01T17:46:47Z,,2021-10-08T15:19:21Z,OPEN,False,295,165,1,https://github.com/marceltaeumel,Adds cross-platform compatible virtual-key codes to vm-display-x11 plugin,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599#issuecomment-933360885,"Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.","Virtual key codes are per se fine with me.
But I would really opt to stand on the shoulders of giants and not invent our own.
I think that SDL or QT might have the most compatible list
(libsdl.org is down, so no link…)
Or if we are interested in the physical ones, USB HID Usage IDs or SDL scancodes.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,599,2021-10-01T17:46:47Z,,2021-10-08T15:19:21Z,OPEN,False,295,165,1,https://github.com/marceltaeumel,Adds cross-platform compatible virtual-key codes to vm-display-x11 plugin,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,https://github.com/marceltaeumel,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599#issuecomment-934122221,"Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.","But I would really opt to stand on the shoulders of giants and not invent our own.

Sure. This here is a fix that does not require touching all other platforms. Since both macOS and Windows are fine and supported in Squeak, only X11 seems to be the current issue.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,599,2021-10-01T17:46:47Z,,2021-10-08T15:19:21Z,OPEN,False,295,165,1,https://github.com/marceltaeumel,Adds cross-platform compatible virtual-key codes to vm-display-x11 plugin,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,https://github.com/krono,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599#issuecomment-934130779,"Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.",what keycodes are we using in the other worlds?,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,599,2021-10-01T17:46:47Z,,2021-10-08T15:19:21Z,OPEN,False,295,165,1,https://github.com/marceltaeumel,Adds cross-platform compatible virtual-key codes to vm-display-x11 plugin,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,https://github.com/marceltaeumel,5,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599#issuecomment-934131821,"Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.","I think that SDL or QT might have the most compatible list

SDL does in C what Squeak 6.0alpha already does in Smalltalk. Looking at ""SDL_x11keyboard.c"" or ""scancodes_windows.h"", we have in EventSensor >> virtualKeyTable.
Now, SDL has its own KeySymToSDLScancode table. In this PR, I chose to simplify matters by just converting the special keys from 0xff__ to 0x00__ plus using the room between 0x20 and 0x4f for alpha-numeric keys. So that we stay in 1 byte, just as macOS and Windows do.
Also, SDL uses a similar ""hack"" for alpha-numeric keys. See SDL_x11keyboard.c function ""X11_KeyCodeToSDLScancode"".
This PR is als complete as in can get for X11. I am currently fixing up some modifier issues when pressing only modifier keys.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,599,2021-10-01T17:46:47Z,,2021-10-08T15:19:21Z,OPEN,False,295,165,1,https://github.com/marceltaeumel,Adds cross-platform compatible virtual-key codes to vm-display-x11 plugin,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,https://github.com/krono,6,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599#issuecomment-934133927,"Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.","My issue is that we migh be introducing some new code here without having them mean anything anywhere else…
Also, what does ""virtual"" mean here? are we trying to map to the thing printed on the keyborard or to the position of the key pressed?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,599,2021-10-01T17:46:47Z,,2021-10-08T15:19:21Z,OPEN,False,295,165,1,https://github.com/marceltaeumel,Adds cross-platform compatible virtual-key codes to vm-display-x11 plugin,7,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599,https://github.com/marceltaeumel,7,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/599#issuecomment-934146042,"Since X11 does not provide a localized version of virtual keys, I mapped the X11 event's KeySym to such a ""virtual-key code"", using evt.keycode only as a fall back. It's not perfect but close to what Windows and macOS have.
Here is the mapping schema:
 * 0x00         (unknown virtual key)
 * 0x01         XK_space (shifted from Latin-1)
 * 0x02         XK_comma (shifted from Latin-1 OR guessed from xKeycode)
 * 0x03         XK_period (shifted from Latin-1 OR guessed from xKeycode)
 * 0x04 .. 0x07 (unused)
 *
 * 0x08 .. 0x1f SPECIAL KEYS 1 (from all-mask 0xff00)
 * 0x20 .. 0x29 NUMERIC ASCII KEYS (shifted from Latin-1)
 * 0x2a .. 0x43 ALPHABETIC ASCII KEYS (shifted from Latin-1)
 *
 * 0x44         US_MINUS (guessed from xKeycode)
 * 0x45         US_PLUS (guessed from xKeycode)
 * 0x46         US_LBRACKET (guessed from xKeycode)
 * 0x47         US_RBRACKET (guessed from xKeycode)
 * 0x48         US_COLON (guessed from xKeycode)
 * 0x49         US_QUOTE (guessed from xKeycode)
 * 0x4a         US_TILDE (guessed from xKeycode)
 * 0x4b         US_BACKSLASH (guessed from xKeycode)
 * 0x4c         US_COMMA (guessed from xKeycode)
 * 0x4d         US_PERIOD (guessed from xKeycode)
 * 0x4e         US_SLASH (guessed from xKeycode)
 * 0x4f         US_102 (guessed from xKeycode)
 *
 * 0x50 .. 0xff SPECIAL KEYS 2 (from all-mask 0xff00)

Here is the new mapping table for Squeak:
new-x11-virtual-keys.1.cs.txt
new-x11-virtual-keys.6.cs.txt (updated 2021-10-06 14:00 UTC)
See /usr/include/X11/keysymdef.h to understand the ""SPECIAL KEYS"" (masked 0xff00).
The biggest remaining issue is all those ""OEM keys"", which means the ones you push for ""+"" or ""/"" or ""~"" and so on.
Note that the idea of having a localized version of the virtual key is that you can print it in an application's user interface. Would be really annoying if an app insists on, e.g., Z while you actionally pushed Y.
You can try out the changes in the KeyboardExerciser in Squeak 6.0alpha. The test is that the tool shows the labels of your physical keyboard while you keep on pressing keys or key combinations. Note that you need a physical keyboard that matches your keyboard layout. That is, US keyboard for US key layout.","My issue is that we migh be introducing some new code here without having them mean anything anywhere else…

Yes. It would be better if we had access to both the ""keysym"" and the ""keycode"" in the Smalltalk image. Unfortunately, there is only a single value reserved for this in our event structure. So, we have to merge both value ranges in a meaningful way. I just did that. You can restore the ""keysym"" in the image by setting 0xff__ again.
Do you have a better Idea on merging ""keysym"" (special keys and alpha-num latin-1) and ""keycode"" (for shifted alpha-num keys) into a single value? That single-byte lookup table in Squeak is quite handy ... and fast. :-) And what the other two platforms provide.

Also, what does ""virtual"" mean here? are we trying to map to the thing printed on the keyborard or to the position of the key pressed?

The concept stems from the MSDN documentation. I elaborated on this topic several times on squeak-dev already:

http://lists.squeakfoundation.org/pipermail/squeak-dev/2021-April/215203.html
http://lists.squeakfoundation.org/pipermail/squeak-dev/2021-April/215208.html

The code reads xkey2sqVirtualKeyCode, which clarifies its meaning within the Smalltalk image.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,606,2021-11-25T00:25:10Z,2021-11-25T08:41:16Z,2021-12-01T03:09:17Z,MERGED,True,31,25,3,https://github.com/KenDickey,vm-display-fbdev fixes to integrate,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/606,https://github.com/KenDickey,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/606,"ReMerged with current.
Test OK on:

Raspberry Pi 4 / Alpine Linux (musl)
ami-s905x-cc (LePotato) / Armbian (libc)

I submitted these fixes in a pull request some time ago when folks were busy.  Perhaps integrate now?
Thanks much!
-KenD","ReMerged with current.
Test OK on:

Raspberry Pi 4 / Alpine Linux (musl)
ami-s905x-cc (LePotato) / Armbian (libc)

I submitted these fixes in a pull request some time ago when folks were busy.  Perhaps integrate now?
Thanks much!
-KenD",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,606,2021-11-25T00:25:10Z,2021-11-25T08:41:16Z,2021-12-01T03:09:17Z,MERGED,True,31,25,3,https://github.com/KenDickey,vm-display-fbdev fixes to integrate,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/606,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/606#issuecomment-978956441,"ReMerged with current.
Test OK on:

Raspberry Pi 4 / Alpine Linux (musl)
ami-s905x-cc (LePotato) / Armbian (libc)

I submitted these fixes in a pull request some time ago when folks were busy.  Perhaps integrate now?
Thanks much!
-KenD",LGTM,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,606,2021-11-25T00:25:10Z,2021-11-25T08:41:16Z,2021-12-01T03:09:17Z,MERGED,True,31,25,3,https://github.com/KenDickey,vm-display-fbdev fixes to integrate,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/606,https://github.com/KenDickey,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/606#issuecomment-983243604,"ReMerged with current.
Test OK on:

Raspberry Pi 4 / Alpine Linux (musl)
ami-s905x-cc (LePotato) / Armbian (libc)

I submitted these fixes in a pull request some time ago when folks were busy.  Perhaps integrate now?
Thanks much!
-KenD","No idea.
Unpacked old tar for the 3 files after deleting superannuated fork and re-forking.
Tests ran OK on aarch64 linux systems.
Did not note flag/fidef inversion until after submit.
Something to do with flag/testing?  Not a C/makefike guy.  No predisposition.  Do what is best here.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,609,2021-12-20T08:38:09Z,2021-12-20T09:27:07Z,2021-12-20T09:27:07Z,MERGED,True,151,12,6,https://github.com/marceltaeumel,Adds builds for macos64ARMv8 to GHA,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/609,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/609,"Adds some commentary to build files
Pins macOS builds to macos-10.15 because that has been our build platform for the past weeks; macos-11 is the new default on GHA macos-latest
Specialize filters for building/** in our GHA .yml files to reduce the number of actually needed builds","Adds some commentary to build files
Pins macOS builds to macos-10.15 because that has been our build platform for the past weeks; macos-11 is the new default on GHA macos-latest
Specialize filters for building/** in our GHA .yml files to reduce the number of actually needed builds",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,616,2022-02-25T23:50:56Z,2022-02-26T04:47:29Z,2022-02-26T19:19:00Z,MERGED,True,10,10,1,https://github.com/LinqLover,DnD/Unix: Fix `dropRequestFileName` which removed the trailing slash from the path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/616,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/616,"For more than one year, drag'n'drop from the host system into the VM was broken on Linux/X11 due to a regression introduced via facfd90. primitiveDropRequestFileName would always answer home/Christoph/myfile.txt rather than /home/Christoph/myfile.txt, causing the file to be ignored on the image-side in Squeak. Now I finally found the cause of the bug, it was a simple off-by-one error.
Tested on Linux/Ubuntu with XDG/Nautilus under WSL/VcXsrv. The bug was also reported to occur on native Linux distributions, though.
Notes:

 I don't know any system or application that would pass paths in one of the other formats (file:/path or /path). If anyone knows such applications, this would make a nice reprocase. Could you please test this out in your environment?
Related issue: There was also a bug report for DnD on macOS always being one file behind, i.e., nothing appearing in the image on the first drop, the first file appearing on the drop, etc. However, I think this is unrelated to this bug (different platform) and I have also no option to reproduce this unless Apple provides usable visualization support. If anyone is addressing the issue, skimming the history around facfd90 might be a good starting point, anyway.

Mentioning @eliotmiranda as the author of facfd90 and @marceltaeumel FYIO. :-)","For more than one year, drag'n'drop from the host system into the VM was broken on Linux/X11 due to a regression introduced via facfd90. primitiveDropRequestFileName would always answer home/Christoph/myfile.txt rather than /home/Christoph/myfile.txt, causing the file to be ignored on the image-side in Squeak. Now I finally found the cause of the bug, it was a simple off-by-one error.
Tested on Linux/Ubuntu with XDG/Nautilus under WSL/VcXsrv. The bug was also reported to occur on native Linux distributions, though.
Notes:

 I don't know any system or application that would pass paths in one of the other formats (file:/path or /path). If anyone knows such applications, this would make a nice reprocase. Could you please test this out in your environment?
Related issue: There was also a bug report for DnD on macOS always being one file behind, i.e., nothing appearing in the image on the first drop, the first file appearing on the drop, etc. However, I think this is unrelated to this bug (different platform) and I have also no option to reproduce this unless Apple provides usable visualization support. If anyone is addressing the issue, skimming the history around facfd90 might be a good starting point, anyway.

Mentioning @eliotmiranda as the author of facfd90 and @marceltaeumel FYIO. :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,616,2022-02-25T23:50:56Z,2022-02-26T04:47:29Z,2022-02-26T19:19:00Z,MERGED,True,10,10,1,https://github.com/LinqLover,DnD/Unix: Fix `dropRequestFileName` which removed the trailing slash from the path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/616,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/616#issuecomment-1051572698,"For more than one year, drag'n'drop from the host system into the VM was broken on Linux/X11 due to a regression introduced via facfd90. primitiveDropRequestFileName would always answer home/Christoph/myfile.txt rather than /home/Christoph/myfile.txt, causing the file to be ignored on the image-side in Squeak. Now I finally found the cause of the bug, it was a simple off-by-one error.
Tested on Linux/Ubuntu with XDG/Nautilus under WSL/VcXsrv. The bug was also reported to occur on native Linux distributions, though.
Notes:

 I don't know any system or application that would pass paths in one of the other formats (file:/path or /path). If anyone knows such applications, this would make a nice reprocase. Could you please test this out in your environment?
Related issue: There was also a bug report for DnD on macOS always being one file behind, i.e., nothing appearing in the image on the first drop, the first file appearing on the drop, etc. However, I think this is unrelated to this bug (different platform) and I have also no option to reproduce this unless Apple provides usable visualization support. If anyone is addressing the issue, skimming the history around facfd90 might be a good starting point, anyway.

Mentioning @eliotmiranda as the author of facfd90 and @marceltaeumel FYIO. :-)",Apologies for having broken this!  Thanks for the fix!,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,616,2022-02-25T23:50:56Z,2022-02-26T04:47:29Z,2022-02-26T19:19:00Z,MERGED,True,10,10,1,https://github.com/LinqLover,DnD/Unix: Fix `dropRequestFileName` which removed the trailing slash from the path,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/616,https://github.com/LinqLover,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/616#issuecomment-1052486334,"For more than one year, drag'n'drop from the host system into the VM was broken on Linux/X11 due to a regression introduced via facfd90. primitiveDropRequestFileName would always answer home/Christoph/myfile.txt rather than /home/Christoph/myfile.txt, causing the file to be ignored on the image-side in Squeak. Now I finally found the cause of the bug, it was a simple off-by-one error.
Tested on Linux/Ubuntu with XDG/Nautilus under WSL/VcXsrv. The bug was also reported to occur on native Linux distributions, though.
Notes:

 I don't know any system or application that would pass paths in one of the other formats (file:/path or /path). If anyone knows such applications, this would make a nice reprocase. Could you please test this out in your environment?
Related issue: There was also a bug report for DnD on macOS always being one file behind, i.e., nothing appearing in the image on the first drop, the first file appearing on the drop, etc. However, I think this is unrelated to this bug (different platform) and I have also no option to reproduce this unless Apple provides usable visualization support. If anyone is addressing the issue, skimming the history around facfd90 might be a good starting point, anyway.

Mentioning @eliotmiranda as the author of facfd90 and @marceltaeumel FYIO. :-)","No problem, thanks for the fast review!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,620,2022-04-01T14:41:40Z,2022-04-05T15:16:06Z,2022-04-05T15:16:06Z,MERGED,True,318,191,22,https://github.com/marceltaeumel,"For macOS -metal -core-graphics -opengl backends, fixes several issues concerning performance and high-resolution",18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/620,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/620,"Tested with Squeak6.0alpha and Cuis6.0-5069.
Fixed issues:

Correct image-side display bounds in high-resolution mode on start-up and via #setNewScreenSize: (i.e., HostWindowPlugin primitiveHostWindowSizeSet)
File drag in high-resolution mode is now matching image-side display bounds
File drag has now access to file paths in DragEnter, not just DragDrop (i.e., mouseUp)
-core-graphics usable again
-opengl does not slow down VM interpeter loop anymore (e.g., in Morphic's use of primitive 127 and 231)
-metal does not slow down VM interpeter loop anymore (e.g., in Morphic's use of primitive 127 and 231)

Known issues:

Rather frequent segfaults in macOS64ARMv8, maybe related to JIT via checkForEventsMayContextSwitch: where checkCogCompiledCodeCompactionCalledFor is called before ioProcessEvents ... maybe because of new display events queued in -core-graphics and -metal backends
Update: I think I just did a mistake when partially re-compiling the VM. A full, clean compile after make cleanall yields a VM that did not crash for over an hour.


Known issues on macOS 12:

No OS-supported ""Low Resolution"" mode; use magnifier
No -opengl support
High-resolution mode scales up hardware cursor

Known issues on macOS 11.6:

No -opengl support
High-resolution mode scales up hardware cursor

Known issues on macOS 10.15:

High-resolution mode scales up hardware cursor


Known issues for -metal backend:

Must use image-side buffer for composition to avoid flickering

Known issues for -core-graphics backend:

Must use image-side buffer for composition to avoid flickering
Blitting on Display via Form reverse not working bc. alpha value must be FF (255)
Rather slow bc. only full and no clippy-based updates due to inaccessible double-buffering in CoreGraphics

Known issues for -opengl backend:

No blitting support for Squeak's MVC
No blitting support for Squeak's Morph's fast window dragging/resizing


Note that Squeak6.0alpha has direct support for that image-side buffer via #disableDeferredUpdates preference. The support in Squeak's Morphic has been there since at least 1999. Cuis does not yet have an image-side buffer for composition but flickering is rare.
Note that -core-graphics could be made compatible with Form reverse blitting rule by using a color with alpha value (almost) 0 such as Color gray alpha: 1/255 or Color colorFromPixelValue: 16r01808080. Try out via Display fill: (0@0 corner: 200@200) rule: Form reverse fillColor: Color gray.
Finally note that both -metal and -core-graphics now do rather nothing in primitive 231 (i.e., forceDisplayUpdate/ ioForceDisplayUpdate / drawThelayers) but rely on a scheduled display event to be delivered via primitive 94 (i.e., primitiveGetNextEvent / ioProcessEvents / vmIOProcessEvents), which is also called every 20 milliseconds on any other primitive send. See checkForEventsMayContextSwitch in VMMaker sources.

Big thanks to krono for helping out with this high-resolution stuff and other details on macOS!","Tested with Squeak6.0alpha and Cuis6.0-5069.
Fixed issues:

Correct image-side display bounds in high-resolution mode on start-up and via #setNewScreenSize: (i.e., HostWindowPlugin primitiveHostWindowSizeSet)
File drag in high-resolution mode is now matching image-side display bounds
File drag has now access to file paths in DragEnter, not just DragDrop (i.e., mouseUp)
-core-graphics usable again
-opengl does not slow down VM interpeter loop anymore (e.g., in Morphic's use of primitive 127 and 231)
-metal does not slow down VM interpeter loop anymore (e.g., in Morphic's use of primitive 127 and 231)

Known issues:

Rather frequent segfaults in macOS64ARMv8, maybe related to JIT via checkForEventsMayContextSwitch: where checkCogCompiledCodeCompactionCalledFor is called before ioProcessEvents ... maybe because of new display events queued in -core-graphics and -metal backends
Update: I think I just did a mistake when partially re-compiling the VM. A full, clean compile after make cleanall yields a VM that did not crash for over an hour.


Known issues on macOS 12:

No OS-supported ""Low Resolution"" mode; use magnifier
No -opengl support
High-resolution mode scales up hardware cursor

Known issues on macOS 11.6:

No -opengl support
High-resolution mode scales up hardware cursor

Known issues on macOS 10.15:

High-resolution mode scales up hardware cursor


Known issues for -metal backend:

Must use image-side buffer for composition to avoid flickering

Known issues for -core-graphics backend:

Must use image-side buffer for composition to avoid flickering
Blitting on Display via Form reverse not working bc. alpha value must be FF (255)
Rather slow bc. only full and no clippy-based updates due to inaccessible double-buffering in CoreGraphics

Known issues for -opengl backend:

No blitting support for Squeak's MVC
No blitting support for Squeak's Morph's fast window dragging/resizing


Note that Squeak6.0alpha has direct support for that image-side buffer via #disableDeferredUpdates preference. The support in Squeak's Morphic has been there since at least 1999. Cuis does not yet have an image-side buffer for composition but flickering is rare.
Note that -core-graphics could be made compatible with Form reverse blitting rule by using a color with alpha value (almost) 0 such as Color gray alpha: 1/255 or Color colorFromPixelValue: 16r01808080. Try out via Display fill: (0@0 corner: 200@200) rule: Form reverse fillColor: Color gray.
Finally note that both -metal and -core-graphics now do rather nothing in primitive 231 (i.e., forceDisplayUpdate/ ioForceDisplayUpdate / drawThelayers) but rely on a scheduled display event to be delivered via primitive 94 (i.e., primitiveGetNextEvent / ioProcessEvents / vmIOProcessEvents), which is also called every 20 milliseconds on any other primitive send. See checkForEventsMayContextSwitch in VMMaker sources.

Big thanks to krono for helping out with this high-resolution stuff and other details on macOS!",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,620,2022-04-01T14:41:40Z,2022-04-05T15:16:06Z,2022-04-05T15:16:06Z,MERGED,True,318,191,22,https://github.com/marceltaeumel,"For macOS -metal -core-graphics -opengl backends, fixes several issues concerning performance and high-resolution",18,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/620,https://github.com/krono,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/620#issuecomment-1087246279,"Tested with Squeak6.0alpha and Cuis6.0-5069.
Fixed issues:

Correct image-side display bounds in high-resolution mode on start-up and via #setNewScreenSize: (i.e., HostWindowPlugin primitiveHostWindowSizeSet)
File drag in high-resolution mode is now matching image-side display bounds
File drag has now access to file paths in DragEnter, not just DragDrop (i.e., mouseUp)
-core-graphics usable again
-opengl does not slow down VM interpeter loop anymore (e.g., in Morphic's use of primitive 127 and 231)
-metal does not slow down VM interpeter loop anymore (e.g., in Morphic's use of primitive 127 and 231)

Known issues:

Rather frequent segfaults in macOS64ARMv8, maybe related to JIT via checkForEventsMayContextSwitch: where checkCogCompiledCodeCompactionCalledFor is called before ioProcessEvents ... maybe because of new display events queued in -core-graphics and -metal backends
Update: I think I just did a mistake when partially re-compiling the VM. A full, clean compile after make cleanall yields a VM that did not crash for over an hour.


Known issues on macOS 12:

No OS-supported ""Low Resolution"" mode; use magnifier
No -opengl support
High-resolution mode scales up hardware cursor

Known issues on macOS 11.6:

No -opengl support
High-resolution mode scales up hardware cursor

Known issues on macOS 10.15:

High-resolution mode scales up hardware cursor


Known issues for -metal backend:

Must use image-side buffer for composition to avoid flickering

Known issues for -core-graphics backend:

Must use image-side buffer for composition to avoid flickering
Blitting on Display via Form reverse not working bc. alpha value must be FF (255)
Rather slow bc. only full and no clippy-based updates due to inaccessible double-buffering in CoreGraphics

Known issues for -opengl backend:

No blitting support for Squeak's MVC
No blitting support for Squeak's Morph's fast window dragging/resizing


Note that Squeak6.0alpha has direct support for that image-side buffer via #disableDeferredUpdates preference. The support in Squeak's Morphic has been there since at least 1999. Cuis does not yet have an image-side buffer for composition but flickering is rare.
Note that -core-graphics could be made compatible with Form reverse blitting rule by using a color with alpha value (almost) 0 such as Color gray alpha: 1/255 or Color colorFromPixelValue: 16r01808080. Try out via Display fill: (0@0 corner: 200@200) rule: Form reverse fillColor: Color gray.
Finally note that both -metal and -core-graphics now do rather nothing in primitive 231 (i.e., forceDisplayUpdate/ ioForceDisplayUpdate / drawThelayers) but rely on a scheduled display event to be delivered via primitive 94 (i.e., primitiveGetNextEvent / ioProcessEvents / vmIOProcessEvents), which is also called every 20 milliseconds on any other primitive send. See checkForEventsMayContextSwitch in VMMaker sources.

Big thanks to krono for helping out with this high-resolution stuff and other details on macOS!",Pls rebase #621,True,{'THUMBS_UP': ['https://github.com/marceltaeumel']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,621,2022-04-01T15:47:37Z,2022-04-04T08:09:44Z,2022-04-04T08:09:46Z,MERGED,True,14,14,14,https://github.com/krono,make scale factor non-support explicit,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/621,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/621,,,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,622,2022-04-07T14:11:17Z,2022-04-08T09:21:36Z,2022-04-08T09:21:36Z,MERGED,True,1324,119,46,https://github.com/krono,Krono/highdpi v2,54,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/622,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/622,yay,yay,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,626,2022-04-26T19:10:53Z,2022-04-27T08:01:40Z,2022-04-27T17:09:32Z,CLOSED,False,7,0,1,https://github.com/LinqLover,vm-display-X11: Fix scale factor detection in headless and no-display mode,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/626,https://github.com/LinqLover,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/626,"Closes #625.
With this PR, the following call does not cause a segfault from primitiveScreenScaleFactor any longer:
./squeak --headless SqueakTrunk.image --evaluate 'DisplayScreen actualScreenScaleFactor'","Closes #625.
With this PR, the following call does not cause a segfault from primitiveScreenScaleFactor any longer:
./squeak --headless SqueakTrunk.image --evaluate 'DisplayScreen actualScreenScaleFactor'",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,626,2022-04-26T19:10:53Z,2022-04-27T08:01:40Z,2022-04-27T17:09:32Z,CLOSED,False,7,0,1,https://github.com/LinqLover,vm-display-X11: Fix scale factor detection in headless and no-display mode,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/626,https://github.com/marceltaeumel,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/626#issuecomment-1110644799,"Closes #625.
With this PR, the following call does not cause a segfault from primitiveScreenScaleFactor any longer:
./squeak --headless SqueakTrunk.image --evaluate 'DisplayScreen actualScreenScaleFactor'","Hmm... I don't like this approach. There are currently only 4 uses of the expression!stDisplay in ""platforms/unix"" and they all just verify initialization, not that headless mode. So, this is the wrong ""concept"" to use here.
Instead, I will go with the already used (but partially missing) headless || !isConnectedToXServer checks as suggested in #625.",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,626,2022-04-26T19:10:53Z,2022-04-27T08:01:40Z,2022-04-27T17:09:32Z,CLOSED,False,7,0,1,https://github.com/LinqLover,vm-display-X11: Fix scale factor detection in headless and no-display mode,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/626,https://github.com/marceltaeumel,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/626#issuecomment-1110678538,"Closes #625.
With this PR, the following call does not cause a segfault from primitiveScreenScaleFactor any longer:
./squeak --headless SqueakTrunk.image --evaluate 'DisplayScreen actualScreenScaleFactor'",Superseded by 2d7105d,True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,631,2022-05-08T12:22:49Z,2022-05-09T07:37:57Z,2022-05-09T07:37:57Z,MERGED,True,370,130,41,https://github.com/marceltaeumel,Enable graphics backends to let primitive 126 fail...,2,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/631,https://github.com/marceltaeumel,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/631,"...if there is no support for a VM-side composition buffer but the image has to maintain one.
https://source.squeak.org/VMMakerInbox/VMMaker.oscog-mt.3184.diff","...if there is no support for a VM-side composition buffer but the image has to maintain one.
https://source.squeak.org/VMMakerInbox/VMMaker.oscog-mt.3184.diff",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,632,2022-05-10T12:58:21Z,2022-06-02T14:10:44Z,2022-06-02T14:10:44Z,MERGED,True,300,10,1,https://github.com/coderocket,joystick/gamepad support for Linux,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/632,https://github.com/coderocket,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/632,"Hi,
I've implemented a functional joystick/gamepad support for Linux. It provides the same functionality as the Win32 version. I've tested it on Arch linux using Cuis and two kinds of gamepads: a PS4 and a DragonRise gamepad.
Cheers,
David","Hi,
I've implemented a functional joystick/gamepad support for Linux. It provides the same functionality as the Win32 version. I've tested it on Arch linux using Cuis and two kinds of gamepads: a PS4 and a DragonRise gamepad.
Cheers,
David",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,634,2022-05-25T09:47:47Z,2022-05-26T20:01:11Z,2022-05-26T20:01:11Z,MERGED,True,36,3,2,https://github.com/krono,[SqueakSSL/unix/openssl] Fix for OpenSSL3,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/634,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/634,"OpenSSL 3 deprecated SSL_get_peer_certificate, made it a macro and an
provides SSL_get{0,1}_peer_certificate instead.
Why even more complicating that already messed API is beyond me.
Not promising ABI stability is well known for OpenSSL but, why the HECK
not simply providing an Alias Symbol instead of UNNECESSARILY ripping
the symbol out of that innocent object file?
Also, we now need a load-time disambiguation of which symbol to use.
(if you find a rant in this message, you can keep it)
Fixes #633","OpenSSL 3 deprecated SSL_get_peer_certificate, made it a macro and an
provides SSL_get{0,1}_peer_certificate instead.
Why even more complicating that already messed API is beyond me.
Not promising ABI stability is well known for OpenSSL but, why the HECK
not simply providing an Alias Symbol instead of UNNECESSARILY ripping
the symbol out of that innocent object file?
Also, we now need a load-time disambiguation of which symbol to use.
(if you find a rant in this message, you can keep it)
Fixes #633",True,{'HOORAY': ['https://github.com/tcj']}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,635,2022-05-25T10:20:26Z,2022-05-26T20:03:03Z,2022-05-26T22:42:54Z,MERGED,True,29,16,1,https://github.com/krono,[Unix/Sockets] Fix Resolution of FQDNs >64 chars,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635,https://github.com/krono,1,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635,"We used to use MAXHOSTNAMELEN, but that is 64 on most Linuxen and
might be differen w/ or w/o POSIX compliance. We now use the
definitions from and implications by DNS itself.
Now, we can
WebClient httpGet: 'http://theofficialabsolutelongestdomainnameregisteredontheworldwideweb.international/'

Fixes #619","We used to use MAXHOSTNAMELEN, but that is 64 on most Linuxen and
might be differen w/ or w/o POSIX compliance. We now use the
definitions from and implications by DNS itself.
Now, we can
WebClient httpGet: 'http://theofficialabsolutelongestdomainnameregisteredontheworldwideweb.international/'

Fixes #619",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,635,2022-05-25T10:20:26Z,2022-05-26T20:03:03Z,2022-05-26T22:42:54Z,MERGED,True,29,16,1,https://github.com/krono,[Unix/Sockets] Fix Resolution of FQDNs >64 chars,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635,https://github.com/eliotmiranda,2,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635#issuecomment-1138959690,"We used to use MAXHOSTNAMELEN, but that is 64 on most Linuxen and
might be differen w/ or w/o POSIX compliance. We now use the
definitions from and implications by DNS itself.
Now, we can
WebClient httpGet: 'http://theofficialabsolutelongestdomainnameregisteredontheworldwideweb.international/'

Fixes #619","The only change I would make would be to add a comment at the end of #define FQDN_LEN 253 to have it read
#define FQDN_LEN 253 // FullyQualifiedDomainName
or put it in the comment.  I had to think for a few seconds before I worked out what FQDN stood for.  Take away that pain :-)",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,635,2022-05-25T10:20:26Z,2022-05-26T20:03:03Z,2022-05-26T22:42:54Z,MERGED,True,29,16,1,https://github.com/krono,[Unix/Sockets] Fix Resolution of FQDNs >64 chars,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635,https://github.com/krono,3,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635#issuecomment-1138965457,"We used to use MAXHOSTNAMELEN, but that is 64 on most Linuxen and
might be differen w/ or w/o POSIX compliance. We now use the
definitions from and implications by DNS itself.
Now, we can
WebClient httpGet: 'http://theofficialabsolutelongestdomainnameregisteredontheworldwideweb.international/'

Fixes #619","Sorry :D
I figure(d) that fqdn is a very well known concept around DNS.
Maybe it is sufficient to expand FQDn in the comment above it?",True,{}
OpenSmalltalk/opensmalltalk-vm,https://github.com/OpenSmalltalk/opensmalltalk-vm,635,2022-05-25T10:20:26Z,2022-05-26T20:03:03Z,2022-05-26T22:42:54Z,MERGED,True,29,16,1,https://github.com/krono,[Unix/Sockets] Fix Resolution of FQDNs >64 chars,1,[],https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635,https://github.com/eliotmiranda,4,https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/635#issuecomment-1139120545,"We used to use MAXHOSTNAMELEN, but that is 64 on most Linuxen and
might be differen w/ or w/o POSIX compliance. We now use the
definitions from and implications by DNS itself.
Now, we can
WebClient httpGet: 'http://theofficialabsolutelongestdomainnameregisteredontheworldwideweb.international/'

Fixes #619","On May 26, 2022, at 1:09 PM, Tobias Pape ***@***.***> wrote:

 ﻿
 Sorry :D
 I figure(d) that fqdn is a very well known concept around DNS.
 Maybe it is sufficient to expand FQDn in the comment above it?

Yes, that will work :-)
…
 —
 Reply to this email directly, view it on GitHub, or unsubscribe.
 You are receiving this because you modified the open/close state.",True,{}
